
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/framework/run_grids2_cartesian.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_framework_run_grids2_cartesian.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_framework_run_grids2_cartesian.py:


Make a Cartesian grid
=====================

This builds a Cartesian grid with squares 1 cm square, with the z-coordinates
provided explicitly. It is also offset in 3D space to X, Y, Z = 10, 5, 5 cm.

Learn more about :py:mod:`grids <armi.reactor.grids>`.

.. GENERATED FROM PYTHON SOURCE LINES 23-48



.. image:: /gallery/framework/images/sphx_glr_run_grids2_cartesian_001.png
    :alt: run grids2 cartesian
    :class: sphx-glr-single-img





.. code-block:: default

    import itertools
    import matplotlib.pyplot as plt
    from mpl_toolkits.mplot3d import Axes3D

    from armi.reactor import grids
    from armi import configure

    configure(permissive=True)

    fig = plt.figure()
    zCoords = [1, 4, 8]
    cartesian_grid = grids.Grid(
        unitSteps=((1, 0), (0, 1)),
        bounds=(None, None, zCoords),
        offset=(10, 5, 5),
    )
    xyz = []

    # the grid is infinite in i and j so we will just plot the first 10 items
    for i, j, k in itertools.product(range(10), range(10), range(len(zCoords) - 1)):
        xyz.append(cartesian_grid[i, j, k].getGlobalCoordinates())
    ax = fig.add_subplot(1, 1, 1, projection="3d")
    x, y, z = zip(*xyz)
    ax.scatter(x, y, z)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.142 seconds)


.. _sphx_glr_download_gallery_framework_run_grids2_cartesian.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: run_grids2_cartesian.py <run_grids2_cartesian.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: run_grids2_cartesian.ipynb <run_grids2_cartesian.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
