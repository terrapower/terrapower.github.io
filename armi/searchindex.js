Search.setIndex({"docnames": [".apidocs/armi", ".apidocs/armi.apps", ".apidocs/armi.bookkeeping", ".apidocs/armi.bookkeeping.db", ".apidocs/armi.bookkeeping.db.compareDB3", ".apidocs/armi.bookkeeping.db.database", ".apidocs/armi.bookkeeping.db.databaseInterface", ".apidocs/armi.bookkeeping.db.factory", ".apidocs/armi.bookkeeping.db.jaggedArray", ".apidocs/armi.bookkeeping.db.layout", ".apidocs/armi.bookkeeping.db.passiveDBLoadPlugin", ".apidocs/armi.bookkeeping.db.permissions", ".apidocs/armi.bookkeeping.db.tests", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3", ".apidocs/armi.bookkeeping.db.tests.test_database3", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface", ".apidocs/armi.bookkeeping.db.tests.test_jaggedArray", ".apidocs/armi.bookkeeping.db.tests.test_layout", ".apidocs/armi.bookkeeping.db.typedefs", ".apidocs/armi.bookkeeping.historyTracker", ".apidocs/armi.bookkeeping.mainInterface", ".apidocs/armi.bookkeeping.memoryProfiler", ".apidocs/armi.bookkeeping.report", ".apidocs/armi.bookkeeping.report.data", ".apidocs/armi.bookkeeping.report.html", ".apidocs/armi.bookkeeping.report.newReportUtils", ".apidocs/armi.bookkeeping.report.newReports", ".apidocs/armi.bookkeeping.report.reportInterface", ".apidocs/armi.bookkeeping.report.reportingUtils", ".apidocs/armi.bookkeeping.report.tests", ".apidocs/armi.bookkeeping.report.tests.test_newReport", ".apidocs/armi.bookkeeping.report.tests.test_report", ".apidocs/armi.bookkeeping.snapshotInterface", ".apidocs/armi.bookkeeping.tests", ".apidocs/armi.bookkeeping.tests.test_historyTracker", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler", ".apidocs/armi.bookkeeping.tests.test_snapshot", ".apidocs/armi.bookkeeping.visualization", ".apidocs/armi.bookkeeping.visualization.dumper", ".apidocs/armi.bookkeeping.visualization.entryPoint", ".apidocs/armi.bookkeeping.visualization.tests", ".apidocs/armi.bookkeeping.visualization.tests.test_vis", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf", ".apidocs/armi.bookkeeping.visualization.utils", ".apidocs/armi.bookkeeping.visualization.vtk", ".apidocs/armi.bookkeeping.visualization.xdmf", ".apidocs/armi.cases", ".apidocs/armi.cases.case", ".apidocs/armi.cases.inputModifiers", ".apidocs/armi.cases.inputModifiers.inputModifiers", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers", ".apidocs/armi.cases.inputModifiers.tests", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers", ".apidocs/armi.cases.suite", ".apidocs/armi.cases.suiteBuilder", ".apidocs/armi.cases.tests", ".apidocs/armi.cases.tests.test_cases", ".apidocs/armi.cases.tests.test_suiteBuilder", ".apidocs/armi.cli", ".apidocs/armi.cli.checkInputs", ".apidocs/armi.cli.cleanTemps", ".apidocs/armi.cli.clone", ".apidocs/armi.cli.compareCases", ".apidocs/armi.cli.database", ".apidocs/armi.cli.entryPoint", ".apidocs/armi.cli.gridGui", ".apidocs/armi.cli.migrateInputs", ".apidocs/armi.cli.modify", ".apidocs/armi.cli.reportsEntryPoint", ".apidocs/armi.cli.run", ".apidocs/armi.cli.runSuite", ".apidocs/armi.cli.tests", ".apidocs/armi.cli.tests.test_runEntryPoint", ".apidocs/armi.cli.tests.test_runSuite", ".apidocs/armi.conftest", ".apidocs/armi.context", ".apidocs/armi.interfaces", ".apidocs/armi.materials", ".apidocs/armi.materials.air", ".apidocs/armi.materials.alloy200", ".apidocs/armi.materials.b4c", ".apidocs/armi.materials.be9", ".apidocs/armi.materials.caH2", ".apidocs/armi.materials.californium", ".apidocs/armi.materials.concrete", ".apidocs/armi.materials.copper", ".apidocs/armi.materials.cs", ".apidocs/armi.materials.custom", ".apidocs/armi.materials.graphite", ".apidocs/armi.materials.hafnium", ".apidocs/armi.materials.hastelloyN", ".apidocs/armi.materials.ht9", ".apidocs/armi.materials.inconel", ".apidocs/armi.materials.inconel600", ".apidocs/armi.materials.inconel625", ".apidocs/armi.materials.inconel800", ".apidocs/armi.materials.inconelPE16", ".apidocs/armi.materials.inconelX750", ".apidocs/armi.materials.lead", ".apidocs/armi.materials.leadBismuth", ".apidocs/armi.materials.lithium", ".apidocs/armi.materials.magnesium", ".apidocs/armi.materials.material", ".apidocs/armi.materials.mgO", ".apidocs/armi.materials.mixture", ".apidocs/armi.materials.molybdenum", ".apidocs/armi.materials.mox", ".apidocs/armi.materials.nZ", ".apidocs/armi.materials.potassium", ".apidocs/armi.materials.scandiumOxide", ".apidocs/armi.materials.siC", ".apidocs/armi.materials.sodium", ".apidocs/armi.materials.sodiumChloride", ".apidocs/armi.materials.sulfur", ".apidocs/armi.materials.tZM", ".apidocs/armi.materials.tantalum", ".apidocs/armi.materials.tests", ".apidocs/armi.materials.tests.test__init__", ".apidocs/armi.materials.tests.test_air", ".apidocs/armi.materials.tests.test_b4c", ".apidocs/armi.materials.tests.test_be9", ".apidocs/armi.materials.tests.test_graphite", ".apidocs/armi.materials.tests.test_lithium", ".apidocs/armi.materials.tests.test_materials", ".apidocs/armi.materials.tests.test_sic", ".apidocs/armi.materials.tests.test_sulfur", ".apidocs/armi.materials.tests.test_thoriumOxide", ".apidocs/armi.materials.tests.test_uZr", ".apidocs/armi.materials.tests.test_water", ".apidocs/armi.materials.thU", ".apidocs/armi.materials.thorium", ".apidocs/armi.materials.thoriumOxide", ".apidocs/armi.materials.uThZr", ".apidocs/armi.materials.uZr", ".apidocs/armi.materials.uranium", ".apidocs/armi.materials.uraniumOxide", ".apidocs/armi.materials.void", ".apidocs/armi.materials.water", ".apidocs/armi.materials.yttriumOxide", ".apidocs/armi.materials.zincOxide", ".apidocs/armi.materials.zr", ".apidocs/armi.meta", ".apidocs/armi.migration", ".apidocs/armi.migration.base", ".apidocs/armi.migration.m0_1_3", ".apidocs/armi.migration.m0_1_6", ".apidocs/armi.migration.tests", ".apidocs/armi.migration.tests.test_m0_1_6", ".apidocs/armi.migration.tests.test_migration_base", ".apidocs/armi.mpiActions", ".apidocs/armi.nucDirectory", ".apidocs/armi.nucDirectory.elements", ".apidocs/armi.nucDirectory.nucDir", ".apidocs/armi.nucDirectory.nuclideBases", ".apidocs/armi.nucDirectory.tests", ".apidocs/armi.nucDirectory.tests.test_elements", ".apidocs/armi.nucDirectory.tests.test_nucDirectory", ".apidocs/armi.nucDirectory.tests.test_nuclideBases", ".apidocs/armi.nucDirectory.tests.test_thermalScattering", ".apidocs/armi.nucDirectory.tests.test_transmutations", ".apidocs/armi.nucDirectory.thermalScattering", ".apidocs/armi.nucDirectory.transmutations", ".apidocs/armi.nuclearDataIO", ".apidocs/armi.nuclearDataIO.cccc", ".apidocs/armi.nuclearDataIO.cccc.cccc", ".apidocs/armi.nuclearDataIO.cccc.compxs", ".apidocs/armi.nuclearDataIO.cccc.dif3d", ".apidocs/armi.nuclearDataIO.cccc.dlayxs", ".apidocs/armi.nuclearDataIO.cccc.fixsrc", ".apidocs/armi.nuclearDataIO.cccc.gamiso", ".apidocs/armi.nuclearDataIO.cccc.geodst", ".apidocs/armi.nuclearDataIO.cccc.isotxs", ".apidocs/armi.nuclearDataIO.cccc.labels", ".apidocs/armi.nuclearDataIO.cccc.nhflux", ".apidocs/armi.nuclearDataIO.cccc.pmatrx", ".apidocs/armi.nuclearDataIO.cccc.pwdint", ".apidocs/armi.nuclearDataIO.cccc.rtflux", ".apidocs/armi.nuclearDataIO.cccc.rzflux", ".apidocs/armi.nuclearDataIO.cccc.tests", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_fixsrc", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata", ".apidocs/armi.nuclearDataIO.tests", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides", ".apidocs/armi.nuclearDataIO.xsCollections", ".apidocs/armi.nuclearDataIO.xsLibraries", ".apidocs/armi.nuclearDataIO.xsNuclides", ".apidocs/armi.operators", ".apidocs/armi.operators.operator", ".apidocs/armi.operators.operatorMPI", ".apidocs/armi.operators.runTypes", ".apidocs/armi.operators.settingsValidation", ".apidocs/armi.operators.snapshots", ".apidocs/armi.operators.tests", ".apidocs/armi.operators.tests.test_operatorSnapshots", ".apidocs/armi.operators.tests.test_operators", ".apidocs/armi.physics", ".apidocs/armi.physics.constants", ".apidocs/armi.physics.executers", ".apidocs/armi.physics.fuelCycle", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface", ".apidocs/armi.physics.fuelCycle.fuelHandlers", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelCycle.settings", ".apidocs/armi.physics.fuelCycle.tests", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelCycle.tests.test_utils", ".apidocs/armi.physics.fuelCycle.utils", ".apidocs/armi.physics.fuelPerformance", ".apidocs/armi.physics.fuelPerformance.executers", ".apidocs/armi.physics.fuelPerformance.parameters", ".apidocs/armi.physics.fuelPerformance.plugin", ".apidocs/armi.physics.fuelPerformance.settings", ".apidocs/armi.physics.fuelPerformance.tests", ".apidocs/armi.physics.fuelPerformance.tests.test_executers", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils", ".apidocs/armi.physics.fuelPerformance.utils", ".apidocs/armi.physics.neutronics", ".apidocs/armi.physics.neutronics.const", ".apidocs/armi.physics.neutronics.crossSectionGroupManager", ".apidocs/armi.physics.neutronics.crossSectionSettings", ".apidocs/armi.physics.neutronics.diffIsotxs", ".apidocs/armi.physics.neutronics.energyGroups", ".apidocs/armi.physics.neutronics.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct", ".apidocs/armi.physics.neutronics.fissionProductModel.tests", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct", ".apidocs/armi.physics.neutronics.globalFlux", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface", ".apidocs/armi.physics.neutronics.globalFlux.tests", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface", ".apidocs/armi.physics.neutronics.latticePhysics", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter", ".apidocs/armi.physics.neutronics.latticePhysics.tests", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.parameters", ".apidocs/armi.physics.neutronics.reports", ".apidocs/armi.physics.neutronics.settings", ".apidocs/armi.physics.neutronics.tests", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable", ".apidocs/armi.physics.neutronics.tests.test_energyGroups", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin", ".apidocs/armi.physics.safety", ".apidocs/armi.physics.tests", ".apidocs/armi.physics.tests.test_executers", ".apidocs/armi.physics.thermalHydraulics", ".apidocs/armi.physics.thermalHydraulics.const", ".apidocs/armi.physics.thermalHydraulics.parameters", ".apidocs/armi.physics.thermalHydraulics.plugin", ".apidocs/armi.physics.thermalHydraulics.settings", ".apidocs/armi.physics.thermalHydraulics.tests", ".apidocs/armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin", ".apidocs/armi.pluginManager", ".apidocs/armi.plugins", ".apidocs/armi.reactor", ".apidocs/armi.reactor.assemblies", ".apidocs/armi.reactor.assemblyParameters", ".apidocs/armi.reactor.blockParameters", ".apidocs/armi.reactor.blocks", ".apidocs/armi.reactor.blueprints", ".apidocs/armi.reactor.blueprints.assemblyBlueprint", ".apidocs/armi.reactor.blueprints.blockBlueprint", ".apidocs/armi.reactor.blueprints.componentBlueprint", ".apidocs/armi.reactor.blueprints.gridBlueprint", ".apidocs/armi.reactor.blueprints.isotopicOptions", ".apidocs/armi.reactor.blueprints.reactorBlueprint", ".apidocs/armi.reactor.blueprints.tests", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blueprints", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints", ".apidocs/armi.reactor.components", ".apidocs/armi.reactor.components.basicShapes", ".apidocs/armi.reactor.components.complexShapes", ".apidocs/armi.reactor.components.component", ".apidocs/armi.reactor.components.componentParameters", ".apidocs/armi.reactor.components.volumetricShapes", ".apidocs/armi.reactor.composites", ".apidocs/armi.reactor.converters", ".apidocs/armi.reactor.converters.axialExpansionChanger", ".apidocs/armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage", ".apidocs/armi.reactor.converters.axialExpansionChanger.axialExpansionChanger", ".apidocs/armi.reactor.converters.axialExpansionChanger.expansionData", ".apidocs/armi.reactor.converters.blockConverters", ".apidocs/armi.reactor.converters.geometryConverters", ".apidocs/armi.reactor.converters.meshConverters", ".apidocs/armi.reactor.converters.parameterSweeps", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters", ".apidocs/armi.reactor.converters.pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger", ".apidocs/armi.reactor.converters.tests.test_blockConverter", ".apidocs/armi.reactor.converters.tests.test_geometryConverters", ".apidocs/armi.reactor.converters.tests.test_meshConverters", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests.test_uniformMesh", ".apidocs/armi.reactor.converters.uniformMesh", ".apidocs/armi.reactor.cores", ".apidocs/armi.reactor.excoreStructure", ".apidocs/armi.reactor.flags", ".apidocs/armi.reactor.geometry", ".apidocs/armi.reactor.grids", ".apidocs/armi.reactor.grids.axial", ".apidocs/armi.reactor.grids.cartesian", ".apidocs/armi.reactor.grids.constants", ".apidocs/armi.reactor.grids.grid", ".apidocs/armi.reactor.grids.hexagonal", ".apidocs/armi.reactor.grids.locations", ".apidocs/armi.reactor.grids.structuredGrid", ".apidocs/armi.reactor.grids.thetarz", ".apidocs/armi.reactor.parameters", ".apidocs/armi.reactor.parameters.exceptions", ".apidocs/armi.reactor.parameters.parameterCollections", ".apidocs/armi.reactor.parameters.parameterDefinitions", ".apidocs/armi.reactor.parameters.resolveCollections", ".apidocs/armi.reactor.reactorParameters", ".apidocs/armi.reactor.reactors", ".apidocs/armi.reactor.spentFuelPool", ".apidocs/armi.reactor.systemLayoutInput", ".apidocs/armi.reactor.tests", ".apidocs/armi.reactor.tests.test_assemblies", ".apidocs/armi.reactor.tests.test_blocks", ".apidocs/armi.reactor.tests.test_components", ".apidocs/armi.reactor.tests.test_composites", ".apidocs/armi.reactor.tests.test_excoreStructures", ".apidocs/armi.reactor.tests.test_flags", ".apidocs/armi.reactor.tests.test_geometry", ".apidocs/armi.reactor.tests.test_hexBlockRotate", ".apidocs/armi.reactor.tests.test_parameters", ".apidocs/armi.reactor.tests.test_reactors", ".apidocs/armi.reactor.tests.test_rz_reactors", ".apidocs/armi.reactor.tests.test_zones", ".apidocs/armi.reactor.zones", ".apidocs/armi.runLog", ".apidocs/armi.settings", ".apidocs/armi.settings.caseSettings", ".apidocs/armi.settings.fwSettings", ".apidocs/armi.settings.fwSettings.databaseSettings", ".apidocs/armi.settings.fwSettings.globalSettings", ".apidocs/armi.settings.fwSettings.reportSettings", ".apidocs/armi.settings.fwSettings.tightCouplingSettings", ".apidocs/armi.settings.setting", ".apidocs/armi.settings.settingsIO", ".apidocs/armi.settings.settingsValidation", ".apidocs/armi.settings.tests", ".apidocs/armi.settings.tests.test_inspectors", ".apidocs/armi.settings.tests.test_settings", ".apidocs/armi.settings.tests.test_settingsIO", ".apidocs/armi.testing", ".apidocs/armi.tests", ".apidocs/armi.tests.mockRunLogs", ".apidocs/armi.tests.refSmallReactorShuffleLogic", ".apidocs/armi.tests.test_apps", ".apidocs/armi.tests.test_armiTestHelper", ".apidocs/armi.tests.test_cartesian", ".apidocs/armi.tests.test_context", ".apidocs/armi.tests.test_interfaces", ".apidocs/armi.tests.test_lwrInputs", ".apidocs/armi.tests.test_mpiActions", ".apidocs/armi.tests.test_mpiFeatures", ".apidocs/armi.tests.test_mpiParameters", ".apidocs/armi.tests.test_notebooks", ".apidocs/armi.tests.test_plugins", ".apidocs/armi.tests.test_runLog", ".apidocs/armi.tests.test_tests", ".apidocs/armi.tests.test_user_plugins", ".apidocs/armi.utils", ".apidocs/armi.utils.asciimaps", ".apidocs/armi.utils.codeTiming", ".apidocs/armi.utils.customExceptions", ".apidocs/armi.utils.densityTools", ".apidocs/armi.utils.directoryChangers", ".apidocs/armi.utils.directoryChangersMpi", ".apidocs/armi.utils.dynamicImporter", ".apidocs/armi.utils.flags", ".apidocs/armi.utils.gridEditor", ".apidocs/armi.utils.hexagon", ".apidocs/armi.utils.iterables", ".apidocs/armi.utils.mathematics", ".apidocs/armi.utils.outputCache", ".apidocs/armi.utils.parsing", ".apidocs/armi.utils.pathTools", ".apidocs/armi.utils.plotting", ".apidocs/armi.utils.properties", ".apidocs/armi.utils.reportPlotting", ".apidocs/armi.utils.tabulate", ".apidocs/armi.utils.tests", ".apidocs/armi.utils.tests.test_asciimaps", ".apidocs/armi.utils.tests.test_codeTiming", ".apidocs/armi.utils.tests.test_custom_exceptions", ".apidocs/armi.utils.tests.test_densityTools", ".apidocs/armi.utils.tests.test_directoryChangers", ".apidocs/armi.utils.tests.test_directoryChangersMpi", ".apidocs/armi.utils.tests.test_flags", ".apidocs/armi.utils.tests.test_hexagon", ".apidocs/armi.utils.tests.test_iterables", ".apidocs/armi.utils.tests.test_mathematics", ".apidocs/armi.utils.tests.test_outputCache", ".apidocs/armi.utils.tests.test_parsing", ".apidocs/armi.utils.tests.test_pathTools", ".apidocs/armi.utils.tests.test_plotting", ".apidocs/armi.utils.tests.test_properties", ".apidocs/armi.utils.tests.test_reportPlotting", ".apidocs/armi.utils.tests.test_tabulate", ".apidocs/armi.utils.tests.test_textProcessors", ".apidocs/armi.utils.tests.test_triangle", ".apidocs/armi.utils.tests.test_units", ".apidocs/armi.utils.tests.test_utils", ".apidocs/armi.utils.textProcessors", ".apidocs/armi.utils.triangle", ".apidocs/armi.utils.units", ".apidocs/modules", "developer/documenting", "developer/entrypoints", "developer/first_time_contributors", "developer/guide", "developer/index", "developer/making_armi_based_apps", "developer/parallel_coding", "developer/profiling", "developer/reports", "developer/standards_and_practices", "developer/tooling", "gallery-src/README", "gallery-src/analysis/README", "gallery-src/applications/README", "gallery-src/framework/README", "gallery/analysis/index", "gallery/analysis/run_blockMcnpMaterialCard", "gallery/analysis/run_hexBlockToRZConversion", "gallery/analysis/run_hexReactorToRZ", "gallery/analysis/sg_execution_times", "gallery/applications/index", "gallery/framework/index", "gallery/framework/run_blockVolumeFractions", "gallery/framework/run_chartOfNuclides", "gallery/framework/run_computeReactionRates", "gallery/framework/run_fuelManagement", "gallery/framework/run_grids1_hex", "gallery/framework/run_grids2_cartesian", "gallery/framework/run_grids3_rzt", "gallery/framework/run_isotxs", "gallery/framework/run_isotxs2_matrix", "gallery/framework/run_materials", "gallery/framework/run_programmaticReactorDefinition", "gallery/framework/run_reactorFacemap", "gallery/framework/run_transmutationMatrix", "gallery/framework/sg_execution_times", "gallery/index", "glossary", "index", "installation", "release/0.1", "release/0.2", "release/0.3", "release/0.4", "release/0.5", "release/index", "tutorials/data_model", "tutorials/index", "tutorials/making_your_first_app", "tutorials/materials_demo", "tutorials/nuclide_demo", "tutorials/param_sweep", "tutorials/walkthrough_inputs", "tutorials/walkthrough_lwr_inputs", "user/_gallery/index", "user/accessingEntryPoints", "user/assembly_parameters_report", "user/block_parameters_report", "user/component_parameters_report", "user/core_parameters_report", "user/index", "user/inputs", "user/manual_data_access", "user/outputs", "user/physics_coupling", "user/radial_and_axial_expansion", "user/reactor_parameters_report", "user/spatial_block_parameters", "user/user_install"], "filenames": [".apidocs/armi.rst", ".apidocs/armi.apps.rst", ".apidocs/armi.bookkeeping.rst", ".apidocs/armi.bookkeeping.db.rst", ".apidocs/armi.bookkeeping.db.compareDB3.rst", ".apidocs/armi.bookkeeping.db.database.rst", ".apidocs/armi.bookkeeping.db.databaseInterface.rst", ".apidocs/armi.bookkeeping.db.factory.rst", ".apidocs/armi.bookkeeping.db.jaggedArray.rst", ".apidocs/armi.bookkeeping.db.layout.rst", ".apidocs/armi.bookkeeping.db.passiveDBLoadPlugin.rst", ".apidocs/armi.bookkeeping.db.permissions.rst", ".apidocs/armi.bookkeeping.db.tests.rst", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3.rst", ".apidocs/armi.bookkeeping.db.tests.test_database3.rst", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface.rst", ".apidocs/armi.bookkeeping.db.tests.test_jaggedArray.rst", ".apidocs/armi.bookkeeping.db.tests.test_layout.rst", ".apidocs/armi.bookkeeping.db.typedefs.rst", ".apidocs/armi.bookkeeping.historyTracker.rst", ".apidocs/armi.bookkeeping.mainInterface.rst", ".apidocs/armi.bookkeeping.memoryProfiler.rst", ".apidocs/armi.bookkeeping.report.rst", ".apidocs/armi.bookkeeping.report.data.rst", ".apidocs/armi.bookkeeping.report.html.rst", ".apidocs/armi.bookkeeping.report.newReportUtils.rst", ".apidocs/armi.bookkeeping.report.newReports.rst", ".apidocs/armi.bookkeeping.report.reportInterface.rst", ".apidocs/armi.bookkeeping.report.reportingUtils.rst", ".apidocs/armi.bookkeeping.report.tests.rst", ".apidocs/armi.bookkeeping.report.tests.test_newReport.rst", ".apidocs/armi.bookkeeping.report.tests.test_report.rst", ".apidocs/armi.bookkeeping.snapshotInterface.rst", ".apidocs/armi.bookkeeping.tests.rst", ".apidocs/armi.bookkeeping.tests.test_historyTracker.rst", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler.rst", ".apidocs/armi.bookkeeping.tests.test_snapshot.rst", ".apidocs/armi.bookkeeping.visualization.rst", ".apidocs/armi.bookkeeping.visualization.dumper.rst", ".apidocs/armi.bookkeeping.visualization.entryPoint.rst", ".apidocs/armi.bookkeeping.visualization.tests.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_vis.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf.rst", ".apidocs/armi.bookkeeping.visualization.utils.rst", ".apidocs/armi.bookkeeping.visualization.vtk.rst", ".apidocs/armi.bookkeeping.visualization.xdmf.rst", ".apidocs/armi.cases.rst", ".apidocs/armi.cases.case.rst", ".apidocs/armi.cases.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers.rst", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.rst", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.rst", ".apidocs/armi.cases.suite.rst", ".apidocs/armi.cases.suiteBuilder.rst", ".apidocs/armi.cases.tests.rst", ".apidocs/armi.cases.tests.test_cases.rst", ".apidocs/armi.cases.tests.test_suiteBuilder.rst", ".apidocs/armi.cli.rst", ".apidocs/armi.cli.checkInputs.rst", ".apidocs/armi.cli.cleanTemps.rst", ".apidocs/armi.cli.clone.rst", ".apidocs/armi.cli.compareCases.rst", ".apidocs/armi.cli.database.rst", ".apidocs/armi.cli.entryPoint.rst", ".apidocs/armi.cli.gridGui.rst", ".apidocs/armi.cli.migrateInputs.rst", ".apidocs/armi.cli.modify.rst", ".apidocs/armi.cli.reportsEntryPoint.rst", ".apidocs/armi.cli.run.rst", ".apidocs/armi.cli.runSuite.rst", ".apidocs/armi.cli.tests.rst", ".apidocs/armi.cli.tests.test_runEntryPoint.rst", ".apidocs/armi.cli.tests.test_runSuite.rst", ".apidocs/armi.conftest.rst", ".apidocs/armi.context.rst", ".apidocs/armi.interfaces.rst", ".apidocs/armi.materials.rst", ".apidocs/armi.materials.air.rst", ".apidocs/armi.materials.alloy200.rst", ".apidocs/armi.materials.b4c.rst", ".apidocs/armi.materials.be9.rst", ".apidocs/armi.materials.caH2.rst", ".apidocs/armi.materials.californium.rst", ".apidocs/armi.materials.concrete.rst", ".apidocs/armi.materials.copper.rst", ".apidocs/armi.materials.cs.rst", ".apidocs/armi.materials.custom.rst", ".apidocs/armi.materials.graphite.rst", ".apidocs/armi.materials.hafnium.rst", ".apidocs/armi.materials.hastelloyN.rst", ".apidocs/armi.materials.ht9.rst", ".apidocs/armi.materials.inconel.rst", ".apidocs/armi.materials.inconel600.rst", ".apidocs/armi.materials.inconel625.rst", ".apidocs/armi.materials.inconel800.rst", ".apidocs/armi.materials.inconelPE16.rst", ".apidocs/armi.materials.inconelX750.rst", ".apidocs/armi.materials.lead.rst", ".apidocs/armi.materials.leadBismuth.rst", ".apidocs/armi.materials.lithium.rst", ".apidocs/armi.materials.magnesium.rst", ".apidocs/armi.materials.material.rst", ".apidocs/armi.materials.mgO.rst", ".apidocs/armi.materials.mixture.rst", ".apidocs/armi.materials.molybdenum.rst", ".apidocs/armi.materials.mox.rst", ".apidocs/armi.materials.nZ.rst", ".apidocs/armi.materials.potassium.rst", ".apidocs/armi.materials.scandiumOxide.rst", ".apidocs/armi.materials.siC.rst", ".apidocs/armi.materials.sodium.rst", ".apidocs/armi.materials.sodiumChloride.rst", ".apidocs/armi.materials.sulfur.rst", ".apidocs/armi.materials.tZM.rst", ".apidocs/armi.materials.tantalum.rst", ".apidocs/armi.materials.tests.rst", ".apidocs/armi.materials.tests.test__init__.rst", ".apidocs/armi.materials.tests.test_air.rst", ".apidocs/armi.materials.tests.test_b4c.rst", ".apidocs/armi.materials.tests.test_be9.rst", ".apidocs/armi.materials.tests.test_graphite.rst", ".apidocs/armi.materials.tests.test_lithium.rst", ".apidocs/armi.materials.tests.test_materials.rst", ".apidocs/armi.materials.tests.test_sic.rst", ".apidocs/armi.materials.tests.test_sulfur.rst", ".apidocs/armi.materials.tests.test_thoriumOxide.rst", ".apidocs/armi.materials.tests.test_uZr.rst", ".apidocs/armi.materials.tests.test_water.rst", ".apidocs/armi.materials.thU.rst", ".apidocs/armi.materials.thorium.rst", ".apidocs/armi.materials.thoriumOxide.rst", ".apidocs/armi.materials.uThZr.rst", ".apidocs/armi.materials.uZr.rst", ".apidocs/armi.materials.uranium.rst", ".apidocs/armi.materials.uraniumOxide.rst", ".apidocs/armi.materials.void.rst", ".apidocs/armi.materials.water.rst", ".apidocs/armi.materials.yttriumOxide.rst", ".apidocs/armi.materials.zincOxide.rst", ".apidocs/armi.materials.zr.rst", ".apidocs/armi.meta.rst", ".apidocs/armi.migration.rst", ".apidocs/armi.migration.base.rst", ".apidocs/armi.migration.m0_1_3.rst", ".apidocs/armi.migration.m0_1_6.rst", ".apidocs/armi.migration.tests.rst", ".apidocs/armi.migration.tests.test_m0_1_6.rst", ".apidocs/armi.migration.tests.test_migration_base.rst", ".apidocs/armi.mpiActions.rst", ".apidocs/armi.nucDirectory.rst", ".apidocs/armi.nucDirectory.elements.rst", ".apidocs/armi.nucDirectory.nucDir.rst", ".apidocs/armi.nucDirectory.nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.rst", ".apidocs/armi.nucDirectory.tests.test_elements.rst", ".apidocs/armi.nucDirectory.tests.test_nucDirectory.rst", ".apidocs/armi.nucDirectory.tests.test_nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.test_thermalScattering.rst", ".apidocs/armi.nucDirectory.tests.test_transmutations.rst", ".apidocs/armi.nucDirectory.thermalScattering.rst", ".apidocs/armi.nucDirectory.transmutations.rst", ".apidocs/armi.nuclearDataIO.rst", ".apidocs/armi.nuclearDataIO.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.fixsrc.rst", ".apidocs/armi.nuclearDataIO.cccc.gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.labels.rst", ".apidocs/armi.nuclearDataIO.cccc.nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.rzflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_fixsrc.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux.rst", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata.rst", ".apidocs/armi.nuclearDataIO.tests.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides.rst", ".apidocs/armi.nuclearDataIO.xsCollections.rst", ".apidocs/armi.nuclearDataIO.xsLibraries.rst", ".apidocs/armi.nuclearDataIO.xsNuclides.rst", ".apidocs/armi.operators.rst", ".apidocs/armi.operators.operator.rst", ".apidocs/armi.operators.operatorMPI.rst", ".apidocs/armi.operators.runTypes.rst", ".apidocs/armi.operators.settingsValidation.rst", ".apidocs/armi.operators.snapshots.rst", ".apidocs/armi.operators.tests.rst", ".apidocs/armi.operators.tests.test_operatorSnapshots.rst", ".apidocs/armi.operators.tests.test_operators.rst", ".apidocs/armi.physics.rst", ".apidocs/armi.physics.constants.rst", ".apidocs/armi.physics.executers.rst", ".apidocs/armi.physics.fuelCycle.rst", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelCycle.settings.rst", ".apidocs/armi.physics.fuelCycle.tests.rst", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelCycle.tests.test_utils.rst", ".apidocs/armi.physics.fuelCycle.utils.rst", ".apidocs/armi.physics.fuelPerformance.rst", ".apidocs/armi.physics.fuelPerformance.executers.rst", ".apidocs/armi.physics.fuelPerformance.parameters.rst", ".apidocs/armi.physics.fuelPerformance.plugin.rst", ".apidocs/armi.physics.fuelPerformance.settings.rst", ".apidocs/armi.physics.fuelPerformance.tests.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_executers.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.rst", ".apidocs/armi.physics.fuelPerformance.utils.rst", ".apidocs/armi.physics.neutronics.rst", ".apidocs/armi.physics.neutronics.const.rst", ".apidocs/armi.physics.neutronics.crossSectionGroupManager.rst", ".apidocs/armi.physics.neutronics.crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.diffIsotxs.rst", ".apidocs/armi.physics.neutronics.energyGroups.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.globalFlux.rst", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.rst", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.parameters.rst", ".apidocs/armi.physics.neutronics.reports.rst", ".apidocs/armi.physics.neutronics.settings.rst", ".apidocs/armi.physics.neutronics.tests.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable.rst", ".apidocs/armi.physics.neutronics.tests.test_energyGroups.rst", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin.rst", ".apidocs/armi.physics.safety.rst", ".apidocs/armi.physics.tests.rst", ".apidocs/armi.physics.tests.test_executers.rst", ".apidocs/armi.physics.thermalHydraulics.rst", ".apidocs/armi.physics.thermalHydraulics.const.rst", ".apidocs/armi.physics.thermalHydraulics.parameters.rst", ".apidocs/armi.physics.thermalHydraulics.plugin.rst", ".apidocs/armi.physics.thermalHydraulics.settings.rst", ".apidocs/armi.physics.thermalHydraulics.tests.rst", ".apidocs/armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.rst", ".apidocs/armi.pluginManager.rst", ".apidocs/armi.plugins.rst", ".apidocs/armi.reactor.rst", ".apidocs/armi.reactor.assemblies.rst", ".apidocs/armi.reactor.assemblyParameters.rst", ".apidocs/armi.reactor.blockParameters.rst", ".apidocs/armi.reactor.blocks.rst", ".apidocs/armi.reactor.blueprints.rst", ".apidocs/armi.reactor.blueprints.assemblyBlueprint.rst", ".apidocs/armi.reactor.blueprints.blockBlueprint.rst", ".apidocs/armi.reactor.blueprints.componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.gridBlueprint.rst", ".apidocs/armi.reactor.blueprints.isotopicOptions.rst", ".apidocs/armi.reactor.blueprints.reactorBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.rst", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics.rst", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications.rst", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints.rst", ".apidocs/armi.reactor.components.rst", ".apidocs/armi.reactor.components.basicShapes.rst", ".apidocs/armi.reactor.components.complexShapes.rst", ".apidocs/armi.reactor.components.component.rst", ".apidocs/armi.reactor.components.componentParameters.rst", ".apidocs/armi.reactor.components.volumetricShapes.rst", ".apidocs/armi.reactor.composites.rst", ".apidocs/armi.reactor.converters.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.expansionData.rst", ".apidocs/armi.reactor.converters.blockConverters.rst", ".apidocs/armi.reactor.converters.geometryConverters.rst", ".apidocs/armi.reactor.converters.meshConverters.rst", ".apidocs/armi.reactor.converters.parameterSweeps.rst", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.rst", ".apidocs/armi.reactor.converters.pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.rst", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.tests.test_blockConverter.rst", ".apidocs/armi.reactor.converters.tests.test_geometryConverters.rst", ".apidocs/armi.reactor.converters.tests.test_meshConverters.rst", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.test_uniformMesh.rst", ".apidocs/armi.reactor.converters.uniformMesh.rst", ".apidocs/armi.reactor.cores.rst", ".apidocs/armi.reactor.excoreStructure.rst", ".apidocs/armi.reactor.flags.rst", ".apidocs/armi.reactor.geometry.rst", ".apidocs/armi.reactor.grids.rst", ".apidocs/armi.reactor.grids.axial.rst", ".apidocs/armi.reactor.grids.cartesian.rst", ".apidocs/armi.reactor.grids.constants.rst", ".apidocs/armi.reactor.grids.grid.rst", ".apidocs/armi.reactor.grids.hexagonal.rst", ".apidocs/armi.reactor.grids.locations.rst", ".apidocs/armi.reactor.grids.structuredGrid.rst", ".apidocs/armi.reactor.grids.thetarz.rst", ".apidocs/armi.reactor.parameters.rst", ".apidocs/armi.reactor.parameters.exceptions.rst", ".apidocs/armi.reactor.parameters.parameterCollections.rst", ".apidocs/armi.reactor.parameters.parameterDefinitions.rst", ".apidocs/armi.reactor.parameters.resolveCollections.rst", ".apidocs/armi.reactor.reactorParameters.rst", ".apidocs/armi.reactor.reactors.rst", ".apidocs/armi.reactor.spentFuelPool.rst", ".apidocs/armi.reactor.systemLayoutInput.rst", ".apidocs/armi.reactor.tests.rst", ".apidocs/armi.reactor.tests.test_assemblies.rst", ".apidocs/armi.reactor.tests.test_blocks.rst", ".apidocs/armi.reactor.tests.test_components.rst", ".apidocs/armi.reactor.tests.test_composites.rst", ".apidocs/armi.reactor.tests.test_excoreStructures.rst", ".apidocs/armi.reactor.tests.test_flags.rst", ".apidocs/armi.reactor.tests.test_geometry.rst", ".apidocs/armi.reactor.tests.test_hexBlockRotate.rst", ".apidocs/armi.reactor.tests.test_parameters.rst", ".apidocs/armi.reactor.tests.test_reactors.rst", ".apidocs/armi.reactor.tests.test_rz_reactors.rst", ".apidocs/armi.reactor.tests.test_zones.rst", ".apidocs/armi.reactor.zones.rst", ".apidocs/armi.runLog.rst", ".apidocs/armi.settings.rst", ".apidocs/armi.settings.caseSettings.rst", ".apidocs/armi.settings.fwSettings.rst", ".apidocs/armi.settings.fwSettings.databaseSettings.rst", ".apidocs/armi.settings.fwSettings.globalSettings.rst", ".apidocs/armi.settings.fwSettings.reportSettings.rst", ".apidocs/armi.settings.fwSettings.tightCouplingSettings.rst", ".apidocs/armi.settings.setting.rst", ".apidocs/armi.settings.settingsIO.rst", ".apidocs/armi.settings.settingsValidation.rst", ".apidocs/armi.settings.tests.rst", ".apidocs/armi.settings.tests.test_inspectors.rst", ".apidocs/armi.settings.tests.test_settings.rst", ".apidocs/armi.settings.tests.test_settingsIO.rst", ".apidocs/armi.testing.rst", ".apidocs/armi.tests.rst", ".apidocs/armi.tests.mockRunLogs.rst", ".apidocs/armi.tests.refSmallReactorShuffleLogic.rst", ".apidocs/armi.tests.test_apps.rst", ".apidocs/armi.tests.test_armiTestHelper.rst", ".apidocs/armi.tests.test_cartesian.rst", ".apidocs/armi.tests.test_context.rst", ".apidocs/armi.tests.test_interfaces.rst", ".apidocs/armi.tests.test_lwrInputs.rst", ".apidocs/armi.tests.test_mpiActions.rst", ".apidocs/armi.tests.test_mpiFeatures.rst", ".apidocs/armi.tests.test_mpiParameters.rst", ".apidocs/armi.tests.test_notebooks.rst", ".apidocs/armi.tests.test_plugins.rst", ".apidocs/armi.tests.test_runLog.rst", ".apidocs/armi.tests.test_tests.rst", ".apidocs/armi.tests.test_user_plugins.rst", ".apidocs/armi.utils.rst", ".apidocs/armi.utils.asciimaps.rst", ".apidocs/armi.utils.codeTiming.rst", ".apidocs/armi.utils.customExceptions.rst", ".apidocs/armi.utils.densityTools.rst", ".apidocs/armi.utils.directoryChangers.rst", ".apidocs/armi.utils.directoryChangersMpi.rst", ".apidocs/armi.utils.dynamicImporter.rst", ".apidocs/armi.utils.flags.rst", ".apidocs/armi.utils.gridEditor.rst", ".apidocs/armi.utils.hexagon.rst", ".apidocs/armi.utils.iterables.rst", ".apidocs/armi.utils.mathematics.rst", ".apidocs/armi.utils.outputCache.rst", ".apidocs/armi.utils.parsing.rst", ".apidocs/armi.utils.pathTools.rst", ".apidocs/armi.utils.plotting.rst", ".apidocs/armi.utils.properties.rst", ".apidocs/armi.utils.reportPlotting.rst", ".apidocs/armi.utils.tabulate.rst", ".apidocs/armi.utils.tests.rst", ".apidocs/armi.utils.tests.test_asciimaps.rst", ".apidocs/armi.utils.tests.test_codeTiming.rst", ".apidocs/armi.utils.tests.test_custom_exceptions.rst", ".apidocs/armi.utils.tests.test_densityTools.rst", ".apidocs/armi.utils.tests.test_directoryChangers.rst", ".apidocs/armi.utils.tests.test_directoryChangersMpi.rst", ".apidocs/armi.utils.tests.test_flags.rst", ".apidocs/armi.utils.tests.test_hexagon.rst", ".apidocs/armi.utils.tests.test_iterables.rst", ".apidocs/armi.utils.tests.test_mathematics.rst", ".apidocs/armi.utils.tests.test_outputCache.rst", ".apidocs/armi.utils.tests.test_parsing.rst", ".apidocs/armi.utils.tests.test_pathTools.rst", ".apidocs/armi.utils.tests.test_plotting.rst", ".apidocs/armi.utils.tests.test_properties.rst", ".apidocs/armi.utils.tests.test_reportPlotting.rst", ".apidocs/armi.utils.tests.test_tabulate.rst", ".apidocs/armi.utils.tests.test_textProcessors.rst", ".apidocs/armi.utils.tests.test_triangle.rst", ".apidocs/armi.utils.tests.test_units.rst", ".apidocs/armi.utils.tests.test_utils.rst", ".apidocs/armi.utils.textProcessors.rst", ".apidocs/armi.utils.triangle.rst", ".apidocs/armi.utils.units.rst", ".apidocs/modules.rst", "developer/documenting.rst", "developer/entrypoints.rst", "developer/first_time_contributors.rst", "developer/guide.rst", "developer/index.rst", "developer/making_armi_based_apps.rst", "developer/parallel_coding.rst", "developer/profiling.rst", "developer/reports.rst", "developer/standards_and_practices.rst", "developer/tooling.rst", "gallery-src/README.rst", "gallery-src/analysis/README.rst", "gallery-src/applications/README.rst", "gallery-src/framework/README.rst", "gallery/analysis/index.rst", "gallery/analysis/run_blockMcnpMaterialCard.rst", "gallery/analysis/run_hexBlockToRZConversion.rst", "gallery/analysis/run_hexReactorToRZ.rst", "gallery/analysis/sg_execution_times.rst", "gallery/applications/index.rst", "gallery/framework/index.rst", "gallery/framework/run_blockVolumeFractions.rst", "gallery/framework/run_chartOfNuclides.rst", "gallery/framework/run_computeReactionRates.rst", "gallery/framework/run_fuelManagement.rst", "gallery/framework/run_grids1_hex.rst", "gallery/framework/run_grids2_cartesian.rst", "gallery/framework/run_grids3_rzt.rst", "gallery/framework/run_isotxs.rst", "gallery/framework/run_isotxs2_matrix.rst", "gallery/framework/run_materials.rst", "gallery/framework/run_programmaticReactorDefinition.rst", "gallery/framework/run_reactorFacemap.rst", "gallery/framework/run_transmutationMatrix.rst", "gallery/framework/sg_execution_times.rst", "gallery/index.rst", "glossary.rst", "index.rst", "installation.rst", "release/0.1.rst", "release/0.2.rst", "release/0.3.rst", "release/0.4.rst", "release/0.5.rst", "release/index.rst", "tutorials/data_model.nblink", "tutorials/index.rst", "tutorials/making_your_first_app.rst", "tutorials/materials_demo.ipynb", "tutorials/nuclide_demo.ipynb", "tutorials/param_sweep.nblink", "tutorials/walkthrough_inputs.rst", "tutorials/walkthrough_lwr_inputs.rst", "user/_gallery/index.rst", "user/accessingEntryPoints.rst", "user/assembly_parameters_report.rst", "user/block_parameters_report.rst", "user/component_parameters_report.rst", "user/core_parameters_report.rst", "user/index.rst", "user/inputs.rst", "user/manual_data_access.rst", "user/outputs.rst", "user/physics_coupling.rst", "user/radial_and_axial_expansion.rst", "user/reactor_parameters_report.rst", "user/spatial_block_parameters.rst", "user/user_install.rst"], "titles": ["armi package", "armi.apps module", "armi.bookkeeping package", "armi.bookkeeping.db package", "armi.bookkeeping.db.compareDB3 module", "armi.bookkeeping.db.database module", "armi.bookkeeping.db.databaseInterface module", "armi.bookkeeping.db.factory module", "armi.bookkeeping.db.jaggedArray module", "armi.bookkeeping.db.layout module", "armi.bookkeeping.db.passiveDBLoadPlugin module", "armi.bookkeeping.db.permissions module", "armi.bookkeeping.db.tests package", "armi.bookkeeping.db.tests.test_comparedb3 module", "armi.bookkeeping.db.tests.test_database3 module", "armi.bookkeeping.db.tests.test_databaseInterface module", "armi.bookkeeping.db.tests.test_jaggedArray module", "armi.bookkeeping.db.tests.test_layout module", "armi.bookkeeping.db.typedefs module", "armi.bookkeeping.historyTracker module", "armi.bookkeeping.mainInterface module", "armi.bookkeeping.memoryProfiler module", "armi.bookkeeping.report package", "armi.bookkeeping.report.data module", "armi.bookkeeping.report.html module", "armi.bookkeeping.report.newReportUtils module", "armi.bookkeeping.report.newReports module", "armi.bookkeeping.report.reportInterface module", "armi.bookkeeping.report.reportingUtils module", "armi.bookkeeping.report.tests package", "armi.bookkeeping.report.tests.test_newReport module", "armi.bookkeeping.report.tests.test_report module", "armi.bookkeeping.snapshotInterface module", "armi.bookkeeping.tests package", "armi.bookkeeping.tests.test_historyTracker module", "armi.bookkeeping.tests.test_memoryProfiler module", "armi.bookkeeping.tests.test_snapshot module", "armi.bookkeeping.visualization package", "armi.bookkeeping.visualization.dumper module", "armi.bookkeeping.visualization.entryPoint module", "armi.bookkeeping.visualization.tests package", "armi.bookkeeping.visualization.tests.test_vis module", "armi.bookkeeping.visualization.tests.test_xdmf module", "armi.bookkeeping.visualization.utils module", "armi.bookkeeping.visualization.vtk module", "armi.bookkeeping.visualization.xdmf module", "armi.cases package", "armi.cases.case module", "armi.cases.inputModifiers package", "armi.cases.inputModifiers.inputModifiers module", "armi.cases.inputModifiers.neutronicsModifiers module", "armi.cases.inputModifiers.pinTypeInputModifiers module", "armi.cases.inputModifiers.tests package", "armi.cases.inputModifiers.tests.test_inputModifiers module", "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module", "armi.cases.suite module", "armi.cases.suiteBuilder module", "armi.cases.tests package", "armi.cases.tests.test_cases module", "armi.cases.tests.test_suiteBuilder module", "armi.cli package", "armi.cli.checkInputs module", "armi.cli.cleanTemps module", "armi.cli.clone module", "armi.cli.compareCases module", "armi.cli.database module", "armi.cli.entryPoint module", "armi.cli.gridGui module", "armi.cli.migrateInputs module", "armi.cli.modify module", "armi.cli.reportsEntryPoint module", "armi.cli.run module", "armi.cli.runSuite module", "armi.cli.tests package", "armi.cli.tests.test_runEntryPoint module", "armi.cli.tests.test_runSuite module", "armi.conftest module", "armi.context module", "armi.interfaces module", "armi.materials package", "armi.materials.air module", "armi.materials.alloy200 module", "armi.materials.b4c module", "armi.materials.be9 module", "armi.materials.caH2 module", "armi.materials.californium module", "armi.materials.concrete module", "armi.materials.copper module", "armi.materials.cs module", "armi.materials.custom module", "armi.materials.graphite module", "armi.materials.hafnium module", "armi.materials.hastelloyN module", "armi.materials.ht9 module", "armi.materials.inconel module", "armi.materials.inconel600 module", "armi.materials.inconel625 module", "armi.materials.inconel800 module", "armi.materials.inconelPE16 module", "armi.materials.inconelX750 module", "armi.materials.lead module", "armi.materials.leadBismuth module", "armi.materials.lithium module", "armi.materials.magnesium module", "armi.materials.material module", "armi.materials.mgO module", "armi.materials.mixture module", "armi.materials.molybdenum module", "armi.materials.mox module", "armi.materials.nZ module", "armi.materials.potassium module", "armi.materials.scandiumOxide module", "armi.materials.siC module", "armi.materials.sodium module", "armi.materials.sodiumChloride module", "armi.materials.sulfur module", "armi.materials.tZM module", "armi.materials.tantalum module", "armi.materials.tests package", "armi.materials.tests.test__init__ module", "armi.materials.tests.test_air module", "armi.materials.tests.test_b4c module", "armi.materials.tests.test_be9 module", "armi.materials.tests.test_graphite module", "armi.materials.tests.test_lithium module", "armi.materials.tests.test_materials module", "armi.materials.tests.test_sic module", "armi.materials.tests.test_sulfur module", "armi.materials.tests.test_thoriumOxide module", "armi.materials.tests.test_uZr module", "armi.materials.tests.test_water module", "armi.materials.thU module", "armi.materials.thorium module", "armi.materials.thoriumOxide module", "armi.materials.uThZr module", "armi.materials.uZr module", "armi.materials.uranium module", "armi.materials.uraniumOxide module", "armi.materials.void module", "armi.materials.water module", "armi.materials.yttriumOxide module", "armi.materials.zincOxide module", "armi.materials.zr module", "armi.meta module", "armi.migration package", "armi.migration.base module", "armi.migration.m0_1_3 module", "armi.migration.m0_1_6 module", "armi.migration.tests package", "armi.migration.tests.test_m0_1_6 module", "armi.migration.tests.test_migration_base module", "armi.mpiActions module", "armi.nucDirectory package", "armi.nucDirectory.elements module", "armi.nucDirectory.nucDir module", "armi.nucDirectory.nuclideBases module", "armi.nucDirectory.tests package", "armi.nucDirectory.tests.test_elements module", "armi.nucDirectory.tests.test_nucDirectory module", "armi.nucDirectory.tests.test_nuclideBases module", "armi.nucDirectory.tests.test_thermalScattering module", "armi.nucDirectory.tests.test_transmutations module", "armi.nucDirectory.thermalScattering module", "armi.nucDirectory.transmutations module", "armi.nuclearDataIO package", "armi.nuclearDataIO.cccc package", "armi.nuclearDataIO.cccc.cccc module", "armi.nuclearDataIO.cccc.compxs module", "armi.nuclearDataIO.cccc.dif3d module", "armi.nuclearDataIO.cccc.dlayxs module", "armi.nuclearDataIO.cccc.fixsrc module", "armi.nuclearDataIO.cccc.gamiso module", "armi.nuclearDataIO.cccc.geodst module", "armi.nuclearDataIO.cccc.isotxs module", "armi.nuclearDataIO.cccc.labels module", "armi.nuclearDataIO.cccc.nhflux module", "armi.nuclearDataIO.cccc.pmatrx module", "armi.nuclearDataIO.cccc.pwdint module", "armi.nuclearDataIO.cccc.rtflux module", "armi.nuclearDataIO.cccc.rzflux module", "armi.nuclearDataIO.cccc.tests package", "armi.nuclearDataIO.cccc.tests.test_cccc module", "armi.nuclearDataIO.cccc.tests.test_compxs module", "armi.nuclearDataIO.cccc.tests.test_dif3d module", "armi.nuclearDataIO.cccc.tests.test_dlayxs module", "armi.nuclearDataIO.cccc.tests.test_fixsrc module", "armi.nuclearDataIO.cccc.tests.test_gamiso module", "armi.nuclearDataIO.cccc.tests.test_geodst module", "armi.nuclearDataIO.cccc.tests.test_isotxs module", "armi.nuclearDataIO.cccc.tests.test_labels module", "armi.nuclearDataIO.cccc.tests.test_nhflux module", "armi.nuclearDataIO.cccc.tests.test_pmatrx module", "armi.nuclearDataIO.cccc.tests.test_pwdint module", "armi.nuclearDataIO.cccc.tests.test_rtflux module", "armi.nuclearDataIO.cccc.tests.test_rzflux module", "armi.nuclearDataIO.nuclearFileMetadata module", "armi.nuclearDataIO.tests package", "armi.nuclearDataIO.tests.test_xsCollections module", "armi.nuclearDataIO.tests.test_xsLibraries module", "armi.nuclearDataIO.tests.test_xsNuclides module", "armi.nuclearDataIO.xsCollections module", "armi.nuclearDataIO.xsLibraries module", "armi.nuclearDataIO.xsNuclides module", "armi.operators package", "armi.operators.operator module", "armi.operators.operatorMPI module", "armi.operators.runTypes module", "armi.operators.settingsValidation module", "armi.operators.snapshots module", "armi.operators.tests package", "armi.operators.tests.test_operatorSnapshots module", "armi.operators.tests.test_operators module", "armi.physics package", "armi.physics.constants module", "armi.physics.executers module", "armi.physics.fuelCycle package", "armi.physics.fuelCycle.assemblyRotationAlgorithms module", "armi.physics.fuelCycle.fuelHandlerFactory module", "armi.physics.fuelCycle.fuelHandlerInterface module", "armi.physics.fuelCycle.fuelHandlers module", "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module", "armi.physics.fuelCycle.settings module", "armi.physics.fuelCycle.tests package", "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module", "armi.physics.fuelCycle.tests.test_fuelHandlers module", "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module", "armi.physics.fuelCycle.tests.test_utils module", "armi.physics.fuelCycle.utils module", "armi.physics.fuelPerformance package", "armi.physics.fuelPerformance.executers module", "armi.physics.fuelPerformance.parameters module", "armi.physics.fuelPerformance.plugin module", "armi.physics.fuelPerformance.settings module", "armi.physics.fuelPerformance.tests package", "armi.physics.fuelPerformance.tests.test_executers module", "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module", "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module", "armi.physics.fuelPerformance.utils module", "armi.physics.neutronics package", "armi.physics.neutronics.const module", "armi.physics.neutronics.crossSectionGroupManager module", "armi.physics.neutronics.crossSectionSettings module", "armi.physics.neutronics.diffIsotxs module", "armi.physics.neutronics.energyGroups module", "armi.physics.neutronics.fissionProductModel package", "armi.physics.neutronics.fissionProductModel.fissionProductModel module", "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module", "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module", "armi.physics.neutronics.fissionProductModel.tests package", "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module", "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module", "armi.physics.neutronics.globalFlux package", "armi.physics.neutronics.globalFlux.globalFluxInterface module", "armi.physics.neutronics.globalFlux.tests package", "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module", "armi.physics.neutronics.latticePhysics package", "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module", "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module", "armi.physics.neutronics.latticePhysics.tests package", "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module", "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module", "armi.physics.neutronics.macroXSGenerationInterface module", "armi.physics.neutronics.parameters module", "armi.physics.neutronics.reports module", "armi.physics.neutronics.settings module", "armi.physics.neutronics.tests package", "armi.physics.neutronics.tests.test_crossSectionManager module", "armi.physics.neutronics.tests.test_crossSectionSettings module", "armi.physics.neutronics.tests.test_crossSectionTable module", "armi.physics.neutronics.tests.test_energyGroups module", "armi.physics.neutronics.tests.test_macroXSGenerationInterface module", "armi.physics.neutronics.tests.test_neutronicsPlugin module", "armi.physics.safety package", "armi.physics.tests package", "armi.physics.tests.test_executers module", "armi.physics.thermalHydraulics package", "armi.physics.thermalHydraulics.const module", "armi.physics.thermalHydraulics.parameters module", "armi.physics.thermalHydraulics.plugin module", "armi.physics.thermalHydraulics.settings module", "armi.physics.thermalHydraulics.tests package", "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin module", "armi.pluginManager module", "armi.plugins module", "armi.reactor package", "armi.reactor.assemblies module", "armi.reactor.assemblyParameters module", "armi.reactor.blockParameters module", "armi.reactor.blocks module", "armi.reactor.blueprints package", "armi.reactor.blueprints.assemblyBlueprint module", "armi.reactor.blueprints.blockBlueprint module", "armi.reactor.blueprints.componentBlueprint module", "armi.reactor.blueprints.gridBlueprint module", "armi.reactor.blueprints.isotopicOptions module", "armi.reactor.blueprints.reactorBlueprint module", "armi.reactor.blueprints.tests package", "armi.reactor.blueprints.tests.test_assemblyBlueprints module", "armi.reactor.blueprints.tests.test_blockBlueprints module", "armi.reactor.blueprints.tests.test_blueprints module", "armi.reactor.blueprints.tests.test_componentBlueprint module", "armi.reactor.blueprints.tests.test_customIsotopics module", "armi.reactor.blueprints.tests.test_gridBlueprints module", "armi.reactor.blueprints.tests.test_materialModifications module", "armi.reactor.blueprints.tests.test_reactorBlueprints module", "armi.reactor.components package", "armi.reactor.components.basicShapes module", "armi.reactor.components.complexShapes module", "armi.reactor.components.component module", "armi.reactor.components.componentParameters module", "armi.reactor.components.volumetricShapes module", "armi.reactor.composites module", "armi.reactor.converters package", "armi.reactor.converters.axialExpansionChanger package", "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage module", "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger module", "armi.reactor.converters.axialExpansionChanger.expansionData module", "armi.reactor.converters.blockConverters module", "armi.reactor.converters.geometryConverters module", "armi.reactor.converters.meshConverters module", "armi.reactor.converters.parameterSweeps package", "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module", "armi.reactor.converters.pinTypeBlockConverters module", "armi.reactor.converters.tests package", "armi.reactor.converters.tests.test_axialExpansionChanger module", "armi.reactor.converters.tests.test_blockConverter module", "armi.reactor.converters.tests.test_geometryConverters module", "armi.reactor.converters.tests.test_meshConverters module", "armi.reactor.converters.tests.test_pinTypeBlockConverters module", "armi.reactor.converters.tests.test_uniformMesh module", "armi.reactor.converters.uniformMesh module", "armi.reactor.cores module", "armi.reactor.excoreStructure module", "armi.reactor.flags module", "armi.reactor.geometry module", "armi.reactor.grids package", "armi.reactor.grids.axial module", "armi.reactor.grids.cartesian module", "armi.reactor.grids.constants module", "armi.reactor.grids.grid module", "armi.reactor.grids.hexagonal module", "armi.reactor.grids.locations module", "armi.reactor.grids.structuredGrid module", "armi.reactor.grids.thetarz module", "armi.reactor.parameters package", "armi.reactor.parameters.exceptions module", "armi.reactor.parameters.parameterCollections module", "armi.reactor.parameters.parameterDefinitions module", "armi.reactor.parameters.resolveCollections module", "armi.reactor.reactorParameters module", "armi.reactor.reactors module", "armi.reactor.spentFuelPool module", "armi.reactor.systemLayoutInput module", "armi.reactor.tests package", "armi.reactor.tests.test_assemblies module", "armi.reactor.tests.test_blocks module", "armi.reactor.tests.test_components module", "armi.reactor.tests.test_composites module", "armi.reactor.tests.test_excoreStructures module", "armi.reactor.tests.test_flags module", "armi.reactor.tests.test_geometry module", "armi.reactor.tests.test_hexBlockRotate module", "armi.reactor.tests.test_parameters module", "armi.reactor.tests.test_reactors module", "armi.reactor.tests.test_rz_reactors module", "armi.reactor.tests.test_zones module", "armi.reactor.zones module", "armi.runLog module", "armi.settings package", "armi.settings.caseSettings module", "armi.settings.fwSettings package", "armi.settings.fwSettings.databaseSettings module", "armi.settings.fwSettings.globalSettings module", "armi.settings.fwSettings.reportSettings module", "armi.settings.fwSettings.tightCouplingSettings module", "armi.settings.setting module", "armi.settings.settingsIO module", "armi.settings.settingsValidation module", "armi.settings.tests package", "armi.settings.tests.test_inspectors module", "armi.settings.tests.test_settings module", "armi.settings.tests.test_settingsIO module", "armi.testing package", "armi.tests package", "armi.tests.mockRunLogs module", "armi.tests.refSmallReactorShuffleLogic module", "armi.tests.test_apps module", "armi.tests.test_armiTestHelper module", "armi.tests.test_cartesian module", "armi.tests.test_context module", "armi.tests.test_interfaces module", "armi.tests.test_lwrInputs module", "armi.tests.test_mpiActions module", "armi.tests.test_mpiFeatures module", "armi.tests.test_mpiParameters module", "armi.tests.test_notebooks module", "armi.tests.test_plugins module", "armi.tests.test_runLog module", "armi.tests.test_tests module", "armi.tests.test_user_plugins module", "armi.utils package", "armi.utils.asciimaps module", "armi.utils.codeTiming module", "armi.utils.customExceptions module", "armi.utils.densityTools module", "armi.utils.directoryChangers module", "armi.utils.directoryChangersMpi module", "armi.utils.dynamicImporter module", "armi.utils.flags module", "armi.utils.gridEditor module", "armi.utils.hexagon module", "armi.utils.iterables module", "armi.utils.mathematics module", "armi.utils.outputCache module", "armi.utils.parsing module", "armi.utils.pathTools module", "armi.utils.plotting module", "armi.utils.properties module", "armi.utils.reportPlotting module", "armi.utils.tabulate module", "armi.utils.tests package", "armi.utils.tests.test_asciimaps module", "armi.utils.tests.test_codeTiming module", "armi.utils.tests.test_custom_exceptions module", "armi.utils.tests.test_densityTools module", "armi.utils.tests.test_directoryChangers module", "armi.utils.tests.test_directoryChangersMpi module", "armi.utils.tests.test_flags module", "armi.utils.tests.test_hexagon module", "armi.utils.tests.test_iterables module", "armi.utils.tests.test_mathematics module", "armi.utils.tests.test_outputCache module", "armi.utils.tests.test_parsing module", "armi.utils.tests.test_pathTools module", "armi.utils.tests.test_plotting module", "armi.utils.tests.test_properties module", "armi.utils.tests.test_reportPlotting module", "armi.utils.tests.test_tabulate module", "armi.utils.tests.test_textProcessors module", "armi.utils.tests.test_triangle module", "armi.utils.tests.test_units module", "armi.utils.tests.test_utils module", "armi.utils.textProcessors module", "armi.utils.triangle module", "armi.utils.units module", "armi", "<span class=\"section-number\">4. </span>Documenting ARMI", "<span class=\"section-number\">3. </span>Entry Points", "<span class=\"section-number\">8. </span>First Time Contributors Guide", "<span class=\"section-number\">1. </span>Framework Architecture", "Developer Docs", "<span class=\"section-number\">2. </span>Making ARMI-based Apps", "<span class=\"section-number\">5. </span>Parallel Code in ARMI", "<span class=\"section-number\">6. </span>Profiling ARMI", "<span class=\"section-number\">7. </span>Reports in ARMI", "<span class=\"section-number\">9. </span>Standards and Practices for Coding", "<span class=\"section-number\">10. </span>Tooling and Infrastructure", "Gallery", "Analysis", "Applications", "Framework", "Analysis", "Write MCNP Material Cards", "Hex block to RZ geometry conversion", "Hex reactor to RZ geometry conversion", "Computation times", "Applications", "Framework", "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion", "Plot a chart of the nuclides.", "Computing Reaction Rates on a Block.", "&lt;no title&gt;", "Make a hex grid.", "Make a Cartesian grid.", "Make a Theta-R-Z grid.", "Plotting Multi-group XS from ISOTXS.", "Plotting a multi-group scatter matrix.", "Listing of Material Library.", "Build Reactor Inputs Programmatically.", "Plot a reactor facemap.", "Transmutation and decay reactions.", "Computation times", "Gallery", "Glossary", "ARMI", "Installation", "ARMI v0.1 Release Notes", "ARMI v0.2 Release Notes", "ARMI v0.3 Release Notes", "ARMI v0.4 Release Notes", "ARMI v0.5 Release Notes", "Release Notes", "<span class=\"section-number\">5. </span>Hands-on at the ARMI Terminal", "Tutorials", "<span class=\"section-number\">6. </span>Making your first ARMI-based App", "<span class=\"section-number\">2. </span>The ARMI Material Library", "<span class=\"section-number\">1. </span>The ARMI Nuclide and Element Packages", "<span class=\"section-number\">7. </span>Parameter sweeps", "<span class=\"section-number\">3. </span>Building input files for a fast reactor", "<span class=\"section-number\">4. </span>Building input files for a thermal reactor", "Gallery", "<span class=\"section-number\">12. </span>Accessing Entry Points", "<span class=\"section-number\">7. </span>Assembly Parameters", "<span class=\"section-number\">8. </span>Block Parameters", "<span class=\"section-number\">6. </span>Component Parameters", "<span class=\"section-number\">5. </span>Core Parameters", "User Docs", "<span class=\"section-number\">1. </span>Inputs", "<span class=\"section-number\">3. </span>Accessing Data in ARMI", "<span class=\"section-number\">2. </span>Outputs", "<span class=\"section-number\">10. </span>Physics Coupling", "<span class=\"section-number\">11. </span>Radial and Axial Expansion and Contraction", "<span class=\"section-number\">4. </span>Reactor Parameters", "<span class=\"section-number\">9. </span>Spatial block parameters", "Installation"], "terms": {"welcom": [0, 28, 312, 487], "advanc": [0, 3, 7, 92, 240, 241, 311, 312, 374, 410, 483, 484, 485, 492, 497, 514], "reactor": [0, 2, 3, 5, 6, 9, 10, 14, 15, 19, 20, 21, 25, 26, 28, 31, 32, 34, 38, 41, 43, 44, 45, 46, 47, 48, 58, 60, 61, 70, 78, 79, 82, 85, 89, 90, 92, 101, 104, 151, 155, 160, 164, 165, 166, 169, 175, 176, 187, 192, 201, 203, 204, 211, 212, 214, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 229, 240, 241, 245, 247, 249, 252, 254, 256, 263, 266, 278, 283, 375, 382, 383, 388, 390, 392, 393, 394, 396, 399, 400, 401, 404, 406, 408, 410, 418, 445, 448, 450, 451, 452, 454, 455, 457, 460, 461, 462, 463, 465, 467, 468, 470, 471, 472, 473, 474, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 493, 494, 495, 500, 502, 503, 504, 505, 506, 507, 508, 513, 514], "model": [0, 3, 5, 6, 9, 10, 21, 34, 46, 47, 56, 60, 78, 80, 81, 82, 83, 87, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142, 159, 160, 163, 174, 203, 211, 212, 214, 228, 237, 238, 240, 241, 244, 245, 246, 249, 250, 267, 278, 283, 284, 288, 289, 290, 291, 292, 293, 294, 299, 305, 307, 308, 311, 312, 317, 318, 322, 331, 333, 337, 344, 346, 347, 348, 350, 362, 364, 368, 377, 394, 400, 450, 451, 458, 460, 461, 463, 467, 470, 480, 482, 483, 484, 485, 486, 487, 489, 490, 493, 494, 495, 497, 498, 499, 500, 503, 505, 507, 509, 513, 514], "interfac": [0, 1, 3, 4, 5, 6, 7, 9, 15, 19, 20, 21, 27, 32, 34, 47, 58, 151, 155, 165, 166, 174, 175, 178, 179, 189, 203, 204, 205, 211, 214, 215, 218, 219, 223, 224, 231, 238, 240, 245, 249, 252, 254, 255, 256, 259, 261, 268, 270, 278, 283, 285, 311, 314, 331, 334, 339, 344, 371, 373, 374, 386, 390, 393, 396, 399, 408, 411, 418, 419, 445, 446, 447, 451, 452, 455, 456, 471, 478, 479, 483, 484, 485, 486, 487, 489, 490, 492, 497, 507, 509, 514], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 19, 20, 21, 23, 25, 26, 27, 28, 31, 32, 33, 34, 37, 39, 42, 43, 44, 45, 47, 49, 50, 51, 55, 56, 58, 60, 61, 62, 65, 66, 69, 70, 74, 76, 77, 78, 79, 80, 82, 89, 90, 93, 94, 101, 103, 104, 105, 108, 113, 114, 115, 116, 119, 125, 133, 134, 135, 137, 138, 139, 145, 151, 152, 153, 154, 155, 160, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 184, 187, 188, 190, 191, 192, 195, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 224, 229, 237, 238, 240, 241, 242, 243, 245, 247, 249, 252, 254, 256, 259, 261, 263, 266, 267, 274, 282, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 303, 305, 306, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 324, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 382, 383, 384, 386, 390, 392, 393, 394, 396, 397, 399, 400, 401, 402, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 424, 436, 437, 438, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 470, 471, 472, 473, 474, 475, 477, 478, 480, 482, 483, 484, 485, 486, 487, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514], "modul": [0, 2, 3, 12, 22, 29, 33, 37, 40, 46, 48, 52, 57, 60, 73, 79, 118, 144, 148, 152, 156, 164, 165, 180, 196, 203, 209, 212, 215, 222, 228, 233, 238, 244, 248, 251, 253, 255, 258, 265, 273, 275, 280, 284, 289, 296, 305, 312, 313, 320, 323, 335, 344, 353, 368, 370, 378, 382, 383, 400, 420, 445, 447, 449, 451, 452, 455, 483, 484, 486, 487, 490, 494, 496, 497, 498, 507, 509], "initi": [0, 1, 3, 6, 47, 59, 61, 74, 78, 151, 153, 162, 166, 167, 170, 175, 201, 204, 216, 245, 255, 263, 283, 288, 290, 291, 292, 293, 294, 295, 303, 308, 311, 315, 316, 324, 330, 331, 344, 347, 356, 375, 377, 396, 402, 404, 405, 417, 419, 420, 428, 435, 449, 468, 471, 478, 479, 483, 484, 486, 487, 489, 493, 503, 504, 507], "platform": [0, 55, 484, 485, 487, 514], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 32, 37, 39, 42, 44, 45, 47, 50, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 81, 82, 88, 89, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 108, 112, 116, 136, 137, 139, 142, 145, 151, 152, 153, 154, 155, 159, 162, 163, 165, 166, 167, 169, 170, 172, 173, 174, 175, 178, 179, 188, 190, 197, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 214, 215, 217, 218, 219, 220, 224, 228, 237, 238, 240, 241, 242, 244, 245, 246, 247, 252, 256, 261, 264, 267, 282, 283, 284, 285, 288, 289, 290, 291, 293, 294, 295, 305, 306, 307, 308, 310, 311, 314, 315, 316, 317, 318, 325, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 355, 356, 357, 363, 364, 366, 367, 368, 369, 374, 375, 376, 377, 381, 382, 383, 390, 393, 397, 399, 400, 401, 404, 410, 411, 412, 415, 416, 417, 418, 419, 442, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 463, 478, 480, 483, 486, 487, 488, 492, 493, 494, 497, 498, 501, 502, 503, 504, 505, 506, 508, 511, 512, 513], "bootstrap": 0, "process": [0, 3, 4, 5, 21, 23, 35, 39, 45, 47, 77, 104, 151, 175, 204, 214, 215, 218, 219, 224, 228, 229, 238, 241, 252, 256, 283, 311, 324, 330, 331, 346, 369, 376, 392, 393, 394, 403, 419, 442, 447, 448, 449, 452, 455, 456, 483, 484, 486, 487, 490, 491, 492, 493, 494, 505, 507, 509, 510, 513], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 19, 20, 21, 23, 25, 26, 27, 28, 31, 32, 33, 34, 35, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 108, 111, 112, 113, 114, 115, 116, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 145, 151, 152, 153, 154, 155, 157, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 188, 190, 195, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 237, 238, 240, 241, 242, 243, 245, 247, 250, 252, 254, 256, 259, 260, 261, 263, 266, 267, 274, 278, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 324, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 361, 362, 363, 364, 366, 367, 369, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 387, 390, 393, 395, 396, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 424, 425, 428, 430, 433, 434, 436, 437, 438, 439, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 462, 463, 468, 470, 471, 472, 473, 474, 477, 478, 480, 483, 484, 485, 486, 487, 489, 490, 492, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 507, 509, 510, 511, 512, 513, 514], "broken": [0, 151, 340, 411, 419, 455, 486, 490, 494, 507], "sever": [0, 77, 165, 219, 256, 283, 330, 344, 419, 446, 449, 455, 475, 484, 487, 489, 494, 496, 507], "phase": [0, 111, 140, 153, 162, 250, 507], "import": [0, 1, 3, 5, 6, 33, 44, 76, 77, 79, 152, 154, 155, 165, 167, 173, 175, 212, 215, 219, 239, 240, 245, 256, 283, 308, 318, 330, 331, 333, 342, 344, 355, 367, 380, 382, 400, 403, 406, 407, 415, 416, 419, 442, 445, 447, 450, 451, 452, 453, 454, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 485, 486, 487, 492, 494, 495, 496, 497, 498, 499, 507, 509, 513, 514], "fundament": [0, 46, 60, 79, 80, 120, 141, 152, 153, 155, 311, 347, 410, 498], "depend": [0, 19, 26, 31, 32, 37, 46, 47, 55, 56, 58, 78, 79, 104, 151, 152, 165, 168, 169, 174, 204, 205, 206, 223, 224, 237, 240, 241, 245, 283, 285, 288, 293, 294, 308, 310, 311, 318, 330, 331, 337, 339, 340, 347, 356, 363, 380, 383, 419, 442, 446, 448, 449, 450, 454, 477, 480, 484, 485, 486, 487, 489, 490, 494, 495, 497, 505, 507, 508, 513, 514], "python": [0, 1, 21, 37, 39, 66, 69, 70, 78, 79, 165, 166, 212, 219, 283, 288, 341, 344, 347, 375, 393, 400, 408, 411, 414, 415, 419, 426, 437, 442, 446, 447, 448, 449, 451, 452, 453, 455, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 486, 487, 490, 492, 497, 498, 499, 507, 509], "librari": [0, 21, 37, 154, 155, 162, 163, 167, 169, 171, 173, 175, 176, 182, 188, 191, 195, 197, 200, 201, 202, 245, 252, 256, 261, 288, 294, 301, 308, 311, 331, 367, 408, 416, 447, 448, 451, 452, 455, 456, 467, 470, 475, 476, 481, 482, 484, 486, 487, 490, 493, 494, 499, 500, 507], "some": [0, 2, 3, 4, 5, 7, 9, 14, 19, 20, 21, 28, 31, 32, 39, 41, 44, 46, 49, 55, 56, 77, 78, 89, 104, 108, 145, 151, 152, 154, 155, 160, 165, 166, 167, 169, 172, 175, 179, 195, 199, 200, 204, 212, 213, 214, 219, 224, 225, 228, 238, 240, 241, 245, 252, 264, 278, 283, 288, 289, 292, 293, 294, 304, 308, 311, 312, 315, 316, 329, 330, 331, 332, 333, 338, 339, 340, 342, 344, 346, 347, 348, 351, 354, 355, 363, 366, 367, 368, 369, 375, 376, 380, 383, 392, 394, 396, 401, 408, 411, 412, 415, 416, 418, 419, 421, 428, 430, 434, 437, 441, 442, 446, 448, 449, 450, 452, 454, 455, 456, 457, 463, 477, 480, 482, 484, 485, 486, 487, 490, 492, 494, 497, 498, 499, 500, 502, 504, 506, 509, 513, 514], "third": [0, 32, 97, 167, 178, 211, 223, 252, 283, 285, 293, 311, 318, 326, 331, 339, 363, 412, 419, 443, 448, 455, 478, 484, 498, 507, 513], "parti": [0, 32, 204, 448, 455, 484], "lib": [0, 83, 167, 171, 173, 176, 200, 201, 214, 252, 256, 259, 261, 284, 311, 331, 400, 417, 455, 470, 475, 476], "investig": [0, 495], "environ": [0, 76, 77, 240, 369, 375, 393, 426, 446, 455, 484, 486, 489, 498, 503], "check": [0, 1, 3, 4, 5, 31, 36, 42, 47, 55, 61, 74, 78, 104, 125, 165, 190, 198, 199, 211, 214, 219, 223, 224, 226, 227, 238, 240, 241, 252, 254, 266, 271, 283, 288, 299, 308, 311, 314, 316, 317, 319, 324, 326, 329, 331, 333, 334, 340, 343, 346, 354, 355, 356, 361, 375, 377, 379, 383, 384, 391, 396, 400, 411, 412, 413, 415, 417, 421, 425, 428, 434, 441, 448, 449, 451, 454, 455, 483, 485, 486, 487, 489, 490, 492, 493, 497, 498, 507, 514], "version": [0, 1, 2, 4, 5, 6, 7, 9, 14, 28, 44, 49, 60, 65, 68, 104, 144, 162, 165, 175, 211, 241, 282, 283, 284, 294, 311, 331, 344, 347, 368, 374, 375, 376, 377, 408, 411, 412, 416, 441, 449, 450, 484, 485, 486, 487, 489, 492, 494, 497, 498, 499, 507, 509, 514], "code": [0, 3, 4, 5, 6, 7, 19, 20, 21, 27, 32, 48, 60, 66, 68, 78, 79, 144, 151, 152, 154, 155, 160, 162, 165, 166, 167, 168, 169, 173, 176, 200, 203, 204, 212, 214, 215, 218, 219, 221, 238, 240, 245, 254, 256, 257, 272, 283, 289, 291, 292, 294, 312, 322, 329, 330, 333, 334, 339, 340, 342, 347, 352, 367, 369, 390, 396, 399, 401, 402, 405, 408, 412, 422, 434, 442, 446, 447, 448, 449, 450, 451, 453, 454, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 486, 487, 490, 494, 496, 498, 503, 507, 509, 513], "mpi": [0, 2, 3, 5, 21, 27, 78, 129, 204, 205, 218, 219, 241, 261, 283, 311, 346, 392, 393, 394, 400, 406, 415, 426, 433, 450, 483, 484, 485, 487, 507, 514], "situat": [0, 9, 292, 305, 311, 333, 334, 341, 367, 377, 397, 419, 484, 494, 507], "tty": 0, "gui": [0, 60, 65, 66, 67, 77, 283, 337, 369, 375, 377, 412, 447, 449, 483, 484, 486, 487, 494, 498, 508], "interact": [0, 3, 5, 6, 7, 9, 15, 19, 20, 63, 65, 66, 77, 78, 155, 167, 202, 203, 204, 211, 228, 238, 240, 254, 256, 259, 283, 346, 365, 393, 446, 483, 484, 485, 486, 487, 489, 492, 493, 494, 495, 503, 505, 506, 507, 509, 510, 514], "set": [0, 1, 3, 4, 5, 6, 9, 10, 14, 20, 21, 25, 28, 31, 32, 36, 39, 43, 44, 45, 46, 47, 49, 50, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 89, 90, 95, 96, 99, 104, 145, 147, 149, 151, 154, 155, 163, 164, 167, 171, 173, 174, 175, 176, 197, 200, 201, 203, 204, 205, 206, 207, 211, 212, 214, 215, 216, 217, 219, 227, 228, 229, 231, 238, 240, 241, 242, 243, 245, 246, 247, 249, 252, 254, 256, 259, 263, 266, 267, 271, 272, 274, 275, 278, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 299, 301, 308, 311, 315, 316, 317, 318, 319, 321, 324, 328, 329, 330, 331, 332, 333, 334, 339, 341, 342, 344, 345, 346, 347, 350, 352, 355, 356, 357, 363, 366, 382, 390, 393, 397, 399, 400, 403, 404, 411, 412, 413, 415, 416, 417, 418, 419, 427, 438, 441, 442, 445, 447, 449, 451, 452, 454, 455, 456, 463, 464, 468, 470, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 501, 502, 503, 505, 506, 510, 511, 513, 514], "up": [0, 3, 4, 5, 9, 19, 21, 26, 31, 45, 47, 67, 77, 78, 79, 93, 104, 144, 146, 151, 152, 153, 154, 155, 162, 163, 165, 200, 202, 204, 212, 214, 219, 237, 240, 252, 267, 274, 285, 288, 292, 294, 303, 308, 311, 315, 318, 330, 331, 333, 337, 340, 341, 342, 346, 347, 355, 366, 377, 390, 394, 400, 401, 404, 410, 412, 416, 418, 421, 425, 430, 446, 447, 449, 452, 454, 455, 456, 480, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 497, 502, 503, 504, 505, 507, 509, 513, 514], "temp": [0, 25, 62, 74, 77, 108, 288, 308, 315, 316, 324, 416, 487, 494, 507], "dir": [0, 62, 214, 405, 487, 507], "printout": [0, 21, 55, 252, 304, 331, 486], "tabl": [0, 2, 4, 22, 23, 24, 25, 26, 55, 61, 80, 90, 92, 97, 105, 111, 113, 116, 123, 136, 140, 153, 154, 162, 184, 219, 263, 268, 285, 319, 331, 359, 400, 410, 437, 450, 452, 497, 498, 499, 507, 508, 509], "format": [0, 1, 3, 4, 5, 14, 16, 23, 24, 28, 37, 43, 45, 46, 80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 125, 131, 132, 133, 136, 137, 140, 141, 142, 155, 165, 166, 167, 172, 173, 174, 175, 177, 178, 179, 185, 193, 194, 219, 247, 285, 290, 293, 294, 300, 301, 308, 331, 352, 360, 367, 369, 384, 400, 404, 416, 418, 424, 437, 450, 452, 454, 475, 476, 484, 486, 489, 492, 497, 499, 507], "prepar": [0, 78, 171, 211, 219, 223, 245, 256, 311, 318, 330, 331, 400, 401, 495], "log": [0, 3, 5, 55, 204, 363, 367, 369, 383, 384, 393, 397, 403, 418, 450, 470, 475, 487, 489, 494, 497, 509], "info": [0, 19, 21, 78, 113, 136, 169, 175, 183, 190, 283, 311, 342, 344, 352, 367, 384, 400, 403, 445, 449, 456, 477, 492, 494, 497, 498, 503, 506, 507, 509], "all": [0, 1, 3, 4, 5, 6, 8, 9, 11, 19, 20, 21, 37, 44, 45, 47, 50, 51, 55, 60, 62, 66, 69, 72, 74, 77, 78, 79, 89, 104, 125, 129, 151, 152, 153, 154, 155, 157, 159, 160, 162, 163, 165, 166, 167, 169, 171, 173, 174, 175, 176, 184, 188, 191, 195, 198, 200, 202, 204, 205, 206, 212, 214, 216, 218, 219, 220, 223, 227, 229, 238, 240, 241, 245, 247, 249, 252, 256, 257, 259, 261, 266, 283, 285, 288, 289, 292, 294, 305, 308, 311, 316, 317, 318, 324, 326, 330, 331, 332, 333, 334, 335, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 361, 363, 366, 367, 376, 381, 382, 383, 384, 392, 399, 400, 401, 402, 404, 406, 407, 408, 411, 412, 413, 416, 418, 419, 425, 430, 442, 446, 448, 449, 451, 452, 454, 455, 456, 468, 477, 480, 483, 484, 485, 487, 488, 492, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 509, 512, 513, 514], "possibl": [0, 3, 5, 6, 19, 20, 77, 78, 151, 165, 166, 204, 220, 252, 282, 283, 285, 288, 289, 290, 294, 308, 318, 331, 333, 342, 344, 346, 347, 363, 375, 377, 383, 408, 412, 413, 415, 416, 419, 442, 454, 455, 456, 480, 484, 488, 494, 498, 501, 507], "nuclid": [0, 5, 79, 82, 83, 89, 90, 102, 104, 108, 112, 131, 134, 135, 136, 137, 139, 146, 153, 154, 155, 158, 159, 160, 162, 163, 164, 165, 169, 171, 173, 174, 176, 195, 197, 199, 200, 201, 202, 240, 241, 245, 247, 249, 250, 257, 266, 288, 289, 291, 292, 294, 299, 301, 303, 308, 311, 317, 324, 326, 330, 331, 355, 363, 404, 416, 424, 445, 467, 470, 471, 478, 479, 480, 481, 482, 483, 486, 487, 492, 493, 495, 500, 502, 503, 504, 505], "object": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21, 22, 23, 24, 25, 26, 30, 32, 36, 43, 45, 46, 47, 48, 49, 53, 54, 55, 56, 58, 60, 66, 70, 77, 78, 79, 104, 145, 151, 152, 153, 154, 155, 162, 163, 165, 166, 167, 169, 171, 173, 175, 176, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 214, 216, 217, 218, 219, 220, 229, 238, 241, 245, 247, 252, 254, 256, 261, 267, 271, 274, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 299, 305, 306, 307, 308, 310, 311, 314, 315, 316, 317, 318, 319, 321, 322, 324, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 354, 357, 362, 363, 365, 366, 367, 368, 369, 374, 375, 376, 377, 380, 383, 390, 392, 393, 394, 399, 400, 401, 402, 404, 405, 408, 411, 412, 414, 416, 417, 418, 419, 435, 442, 447, 451, 452, 454, 455, 457, 478, 482, 483, 484, 486, 487, 490, 492, 495, 497, 500, 502, 503, 504, 507, 509, 513], "directori": [0, 3, 5, 15, 46, 47, 55, 56, 58, 62, 63, 69, 74, 76, 77, 78, 154, 158, 162, 201, 204, 214, 252, 274, 331, 367, 368, 382, 383, 400, 405, 406, 415, 425, 442, 447, 455, 469, 484, 485, 486, 487, 490, 492, 494, 499, 507, 509, 514], "discov": [0, 46, 47, 55, 56, 204, 224, 283, 449, 485, 497, 498, 514], "regist": [0, 1, 47, 75, 78, 282, 283, 368, 380, 396, 451, 484, 493, 507, 510], "avail": [0, 1, 3, 5, 6, 19, 21, 60, 66, 151, 152, 154, 162, 175, 200, 202, 204, 206, 211, 214, 240, 241, 245, 249, 288, 294, 299, 311, 330, 347, 368, 380, 400, 408, 441, 446, 448, 449, 451, 452, 454, 457, 482, 484, 492, 495, 496, 498, 499, 500, 505, 507, 508, 509, 510, 512], "built": [0, 9, 60, 201, 209, 219, 229, 238, 261, 266, 278, 283, 284, 285, 288, 289, 295, 311, 317, 324, 335, 399, 446, 447, 449, 451, 455, 470, 483, 484, 492, 494, 507, 509], "plugin": [0, 1, 2, 10, 25, 32, 47, 50, 55, 58, 60, 76, 78, 79, 93, 104, 113, 135, 152, 203, 206, 212, 213, 215, 219, 224, 228, 229, 230, 233, 235, 238, 245, 246, 252, 262, 265, 271, 272, 275, 277, 280, 281, 282, 284, 288, 292, 294, 308, 312, 330, 344, 346, 347, 368, 369, 372, 377, 380, 383, 386, 395, 396, 399, 408, 445, 450, 454, 462, 471, 477, 480, 484, 486, 488, 490, 492, 493, 495, 499, 509], "custom": [0, 1, 60, 66, 79, 93, 104, 108, 151, 203, 215, 218, 219, 224, 238, 241, 247, 252, 256, 267, 282, 283, 289, 292, 294, 301, 330, 367, 368, 374, 375, 376, 388, 393, 401, 404, 415, 416, 417, 419, 423, 429, 437, 442, 449, 451, 456, 478, 484, 486, 489, 490, 492, 493, 498, 509], "ones": [0, 60, 89, 155, 163, 166, 200, 224, 240, 288, 311, 331, 401, 471, 492, 494, 507], "after": [0, 2, 8, 15, 26, 55, 72, 77, 78, 89, 104, 152, 167, 169, 175, 202, 204, 214, 219, 252, 256, 278, 283, 285, 288, 301, 308, 311, 315, 318, 324, 329, 330, 331, 340, 341, 342, 344, 346, 348, 355, 356, 363, 367, 369, 393, 399, 402, 408, 410, 411, 412, 416, 417, 418, 419, 449, 451, 452, 455, 456, 483, 487, 488, 489, 490, 492, 494, 497, 503, 505, 507, 509, 513], "input": [0, 1, 3, 5, 6, 8, 14, 19, 20, 25, 28, 32, 39, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 68, 69, 74, 78, 79, 89, 104, 125, 135, 144, 145, 146, 155, 159, 168, 169, 170, 173, 183, 186, 188, 199, 200, 204, 211, 214, 215, 218, 219, 224, 240, 241, 245, 252, 256, 257, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 299, 301, 302, 305, 306, 308, 311, 312, 314, 318, 322, 324, 330, 333, 334, 342, 343, 350, 352, 355, 356, 360, 363, 366, 368, 369, 374, 375, 382, 383, 391, 400, 401, 403, 404, 407, 412, 413, 414, 419, 424, 430, 437, 438, 441, 444, 447, 449, 450, 457, 467, 470, 471, 479, 480, 481, 482, 484, 486, 487, 492, 493, 494, 497, 500, 502, 503, 504, 506, 508, 509], "defin": [0, 1, 3, 5, 7, 8, 10, 19, 20, 26, 32, 49, 58, 70, 78, 79, 80, 88, 102, 103, 104, 108, 110, 115, 139, 145, 153, 155, 159, 162, 163, 165, 166, 172, 173, 175, 178, 179, 197, 198, 200, 201, 204, 205, 206, 211, 215, 216, 219, 221, 223, 231, 232, 238, 240, 246, 252, 256, 264, 267, 272, 278, 279, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 299, 302, 303, 305, 306, 308, 310, 311, 314, 316, 317, 329, 330, 331, 333, 335, 339, 341, 342, 344, 345, 346, 347, 348, 356, 359, 360, 361, 369, 371, 373, 375, 377, 380, 390, 393, 396, 399, 401, 408, 412, 416, 418, 419, 443, 444, 449, 451, 454, 455, 456, 457, 463, 468, 470, 478, 480, 482, 483, 486, 487, 490, 492, 493, 495, 497, 500, 503, 505, 509, 513], "potenti": [0, 21, 49, 78, 104, 133, 162, 163, 204, 214, 283, 314, 339, 350, 376, 377, 406, 413, 448, 451, 454, 456, 484, 494, 497, 502, 505, 507, 512], "configur": [0, 1, 4, 76, 77, 241, 267, 283, 318, 375, 445, 449, 451, 455, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 492, 494, 497, 499, 502, 507, 513, 514], "from": [0, 1, 3, 4, 5, 6, 8, 9, 10, 14, 15, 19, 20, 21, 25, 26, 28, 32, 33, 34, 37, 39, 43, 44, 46, 47, 49, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 82, 87, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 108, 110, 111, 113, 114, 116, 120, 123, 125, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 144, 145, 146, 151, 152, 153, 154, 155, 159, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 187, 190, 191, 192, 195, 197, 200, 201, 202, 203, 204, 205, 208, 211, 214, 215, 219, 220, 223, 224, 229, 238, 240, 241, 242, 243, 245, 247, 249, 250, 252, 254, 256, 261, 266, 267, 271, 282, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 301, 302, 303, 305, 307, 308, 311, 312, 314, 315, 316, 317, 318, 322, 324, 326, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 344, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 362, 363, 366, 367, 368, 369, 375, 376, 377, 381, 382, 383, 384, 390, 391, 393, 394, 399, 400, 401, 404, 405, 408, 410, 411, 412, 413, 416, 418, 419, 424, 426, 437, 442, 444, 447, 448, 449, 451, 452, 454, 455, 456, 457, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 507, 509, 511, 513, 514], "read": [0, 3, 4, 5, 6, 7, 8, 9, 11, 14, 16, 19, 34, 47, 78, 145, 155, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 218, 219, 224, 241, 247, 254, 267, 283, 289, 290, 295, 299, 302, 308, 311, 330, 331, 341, 346, 347, 349, 352, 360, 362, 369, 376, 381, 391, 401, 412, 417, 421, 441, 442, 446, 447, 451, 452, 455, 484, 486, 487, 490, 497, 498, 507], "file": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 14, 19, 20, 23, 25, 26, 28, 32, 33, 34, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 81, 89, 119, 144, 145, 151, 152, 155, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 204, 205, 207, 214, 216, 218, 219, 224, 239, 240, 241, 242, 245, 247, 249, 250, 252, 256, 263, 266, 283, 285, 289, 290, 292, 293, 294, 295, 297, 298, 299, 302, 311, 312, 330, 331, 333, 344, 347, 350, 351, 352, 360, 361, 366, 367, 368, 369, 375, 376, 377, 379, 381, 382, 383, 391, 397, 400, 401, 402, 403, 405, 406, 408, 413, 414, 415, 416, 418, 419, 425, 437, 442, 446, 447, 448, 449, 450, 453, 454, 456, 465, 470, 471, 475, 478, 479, 481, 484, 485, 486, 487, 489, 490, 492, 493, 497, 501, 506, 513, 514], "updat": [0, 2, 6, 47, 49, 58, 78, 104, 144, 146, 155, 159, 164, 165, 175, 195, 200, 202, 204, 208, 213, 214, 218, 238, 240, 245, 252, 254, 256, 259, 266, 274, 284, 285, 288, 292, 294, 305, 308, 310, 311, 315, 316, 318, 319, 324, 330, 331, 342, 344, 346, 347, 352, 356, 361, 362, 363, 369, 375, 377, 380, 383, 401, 404, 416, 450, 452, 455, 468, 484, 486, 487, 489, 490, 491, 492, 494, 507, 510, 513], "deplet": [0, 78, 155, 163, 212, 240, 241, 245, 249, 252, 255, 257, 268, 284, 285, 288, 292, 294, 333, 344, 347, 400, 412, 449, 471, 483, 486, 487, 492, 498, 502, 503, 504, 507], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 149, 150, 151, 153, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 229, 231, 234, 235, 236, 238, 240, 241, 242, 245, 247, 249, 250, 252, 254, 256, 257, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 274, 278, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 449, 450, 454, 455, 456, 459, 463, 464, 466, 469, 480, 482, 484, 486, 487, 490, 492, 493, 495, 496, 497, 498, 499, 500, 503, 505, 507, 510, 513], "config": [0, 76, 446], "state": [0, 2, 3, 5, 6, 19, 20, 38, 44, 77, 78, 80, 90, 93, 104, 113, 129, 136, 151, 155, 162, 169, 171, 175, 176, 200, 204, 208, 211, 214, 218, 238, 240, 252, 254, 256, 278, 283, 288, 308, 311, 316, 318, 324, 329, 330, 331, 339, 344, 346, 347, 352, 369, 377, 394, 399, 449, 451, 452, 454, 455, 460, 467, 480, 482, 483, 484, 489, 493, 494, 498, 500, 505, 506, 507, 511, 513], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 20, 22, 25, 26, 28, 32, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 58, 60, 66, 70, 74, 77, 78, 79, 80, 81, 82, 92, 95, 96, 97, 99, 104, 108, 113, 116, 139, 151, 153, 154, 155, 162, 166, 167, 170, 171, 172, 173, 175, 176, 177, 178, 179, 183, 200, 201, 202, 203, 204, 211, 212, 216, 219, 220, 226, 227, 228, 231, 237, 238, 240, 241, 247, 252, 256, 261, 263, 275, 278, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 329, 330, 331, 332, 333, 337, 339, 340, 342, 343, 349, 350, 351, 352, 354, 355, 356, 357, 361, 362, 363, 366, 368, 369, 374, 375, 376, 377, 382, 383, 390, 393, 394, 396, 399, 400, 401, 402, 404, 405, 406, 408, 410, 411, 412, 415, 416, 417, 418, 419, 437, 442, 443, 444, 450, 451, 452, 478, 479, 483, 484, 486, 487, 488, 489, 490, 492, 493, 498, 506, 507, 508, 509, 510], "data": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 16, 19, 22, 24, 26, 27, 43, 44, 45, 56, 77, 78, 80, 81, 92, 95, 96, 99, 105, 112, 116, 131, 132, 133, 137, 145, 152, 153, 154, 155, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 195, 199, 201, 202, 211, 213, 214, 218, 219, 227, 241, 245, 247, 252, 256, 261, 278, 282, 283, 284, 285, 288, 290, 294, 295, 299, 302, 304, 306, 308, 311, 315, 316, 318, 319, 330, 331, 332, 339, 342, 344, 346, 347, 352, 355, 361, 374, 375, 377, 383, 400, 401, 408, 416, 418, 419, 437, 438, 442, 447, 450, 452, 454, 458, 460, 461, 464, 467, 468, 471, 478, 479, 482, 483, 484, 487, 489, 490, 492, 493, 494, 497, 498, 499, 500, 502, 506, 507, 509], "possibli": [0, 3, 5, 55, 203, 305, 317, 416, 419, 483, 492, 494, 507], "entri": [0, 1, 5, 37, 39, 46, 47, 55, 60, 61, 65, 66, 67, 68, 69, 74, 75, 77, 78, 163, 219, 238, 283, 288, 291, 292, 293, 308, 311, 324, 352, 405, 411, 412, 450, 486, 493, 498, 506, 507, 509, 513], "point": [0, 1, 3, 5, 26, 32, 37, 39, 45, 46, 47, 49, 50, 55, 56, 60, 61, 65, 66, 67, 68, 69, 74, 75, 77, 78, 108, 112, 115, 125, 131, 132, 133, 136, 137, 155, 163, 166, 169, 173, 183, 184, 202, 203, 204, 219, 238, 241, 245, 252, 282, 283, 285, 289, 291, 293, 294, 297, 300, 301, 303, 312, 314, 316, 318, 319, 330, 331, 335, 337, 340, 341, 342, 347, 355, 357, 390, 412, 416, 419, 437, 439, 443, 450, 452, 454, 456, 463, 464, 483, 486, 492, 493, 497, 498, 499, 502, 503, 506, 507, 509, 513], "choos": [0, 79, 145, 162, 203, 214, 294, 419, 485, 494, 498, 514], "user": [0, 1, 3, 5, 7, 19, 23, 27, 32, 39, 47, 49, 55, 56, 60, 77, 79, 89, 93, 94, 104, 113, 135, 144, 152, 162, 163, 165, 167, 173, 201, 202, 203, 204, 215, 216, 217, 219, 238, 240, 241, 245, 247, 252, 256, 267, 283, 284, 288, 290, 292, 294, 295, 299, 308, 311, 316, 317, 331, 334, 342, 344, 363, 366, 367, 368, 369, 375, 376, 377, 381, 397, 400, 401, 403, 405, 412, 415, 437, 447, 448, 449, 451, 454, 455, 456, 480, 483, 484, 485, 487, 492, 494, 495, 499, 507, 508, 509, 510, 514], "command": [0, 19, 28, 39, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 167, 205, 218, 219, 242, 283, 369, 375, 377, 381, 402, 413, 426, 446, 447, 452, 453, 455, 483, 484, 490, 492, 494, 497, 507, 509], "If": [0, 1, 3, 5, 6, 19, 21, 27, 39, 43, 47, 49, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 104, 135, 151, 152, 154, 155, 163, 164, 166, 167, 169, 170, 200, 201, 203, 204, 205, 214, 219, 220, 223, 227, 240, 241, 242, 245, 252, 256, 261, 282, 283, 285, 288, 289, 290, 294, 303, 305, 308, 311, 312, 315, 316, 317, 318, 324, 329, 330, 331, 332, 335, 337, 339, 340, 342, 344, 346, 347, 348, 351, 352, 355, 367, 369, 375, 376, 377, 381, 382, 383, 400, 404, 405, 410, 411, 412, 415, 416, 418, 419, 442, 446, 449, 452, 454, 455, 456, 484, 485, 492, 494, 498, 499, 502, 503, 507, 509, 510, 513, 514], "us": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 47, 48, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 92, 95, 96, 97, 99, 104, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 137, 138, 139, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 173, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 214, 216, 218, 219, 220, 223, 224, 225, 226, 227, 229, 234, 235, 236, 237, 240, 241, 242, 243, 245, 247, 249, 250, 252, 254, 256, 257, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 274, 281, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 314, 315, 316, 317, 318, 319, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 411, 412, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 453, 454, 456, 457, 458, 461, 463, 464, 469, 471, 472, 478, 480, 482, 483, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514], "run": [0, 1, 3, 4, 5, 6, 15, 19, 20, 21, 25, 27, 31, 32, 33, 34, 37, 39, 46, 47, 48, 55, 56, 58, 60, 61, 62, 65, 66, 68, 69, 70, 72, 74, 75, 76, 77, 78, 104, 151, 155, 162, 165, 181, 191, 197, 198, 203, 204, 205, 206, 208, 212, 214, 218, 219, 229, 238, 240, 241, 252, 254, 255, 256, 261, 266, 274, 283, 285, 288, 299, 311, 312, 317, 318, 324, 331, 344, 347, 367, 368, 369, 377, 382, 383, 392, 393, 394, 395, 400, 402, 413, 426, 434, 437, 446, 447, 448, 449, 450, 452, 453, 454, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 492, 493, 495, 497, 498, 499, 502, 503, 504, 505, 506, 509, 514], "addit": [0, 1, 2, 47, 60, 66, 151, 155, 165, 167, 173, 203, 204, 219, 241, 278, 283, 288, 290, 305, 308, 311, 318, 331, 333, 341, 346, 348, 375, 448, 449, 454, 456, 484, 487, 507, 513], "work": [0, 3, 5, 14, 15, 21, 35, 43, 44, 45, 46, 47, 53, 55, 56, 77, 78, 89, 104, 125, 144, 151, 188, 191, 201, 214, 219, 220, 223, 247, 252, 254, 269, 288, 293, 294, 295, 298, 299, 303, 308, 311, 314, 315, 318, 322, 331, 333, 334, 339, 348, 352, 356, 359, 361, 363, 367, 375, 380, 382, 383, 384, 390, 394, 397, 400, 401, 402, 405, 410, 411, 415, 417, 424, 427, 433, 437, 442, 446, 448, 449, 451, 452, 454, 456, 463, 464, 483, 484, 485, 487, 492, 494, 496, 498, 499, 501, 502, 507, 509, 512, 513, 514], "done": [0, 3, 21, 32, 47, 100, 101, 169, 219, 237, 245, 252, 254, 282, 308, 312, 324, 331, 333, 339, 346, 383, 411, 412, 413, 446, 447, 448, 449, 452, 456, 470, 484, 492, 494, 499, 507, 513], "build": [0, 3, 25, 28, 34, 46, 53, 56, 60, 74, 79, 152, 184, 201, 202, 203, 204, 214, 215, 219, 220, 240, 245, 247, 252, 261, 271, 283, 285, 288, 292, 293, 295, 305, 315, 317, 325, 330, 331, 332, 335, 337, 340, 343, 350, 352, 354, 355, 363, 366, 375, 396, 450, 451, 456, 457, 463, 464, 467, 470, 472, 473, 474, 481, 482, 483, 484, 492, 493, 494, 495, 497, 500, 507, 508, 509], "oper": [0, 1, 2, 3, 5, 6, 9, 15, 28, 31, 46, 47, 60, 77, 78, 151, 152, 202, 217, 218, 219, 223, 245, 283, 288, 294, 308, 311, 318, 322, 324, 329, 331, 333, 334, 340, 342, 346, 347, 363, 377, 380, 382, 385, 393, 400, 401, 411, 415, 417, 427, 445, 450, 451, 452, 455, 479, 483, 485, 486, 487, 489, 490, 492, 493, 494, 498, 499, 504, 512, 514], "specif": [0, 1, 2, 3, 4, 5, 9, 19, 20, 25, 32, 41, 42, 43, 47, 49, 56, 58, 66, 78, 79, 80, 92, 95, 96, 99, 104, 108, 113, 139, 152, 153, 154, 155, 159, 166, 167, 169, 172, 174, 177, 200, 201, 202, 203, 204, 205, 211, 213, 214, 219, 225, 241, 245, 252, 256, 271, 282, 283, 285, 288, 290, 293, 294, 305, 308, 311, 312, 314, 317, 319, 322, 324, 330, 331, 333, 344, 346, 347, 348, 351, 355, 356, 361, 367, 384, 390, 393, 396, 399, 401, 408, 412, 413, 418, 419, 446, 447, 448, 449, 451, 454, 455, 456, 462, 483, 484, 487, 494, 496, 497, 498, 499, 502, 507, 508, 509, 510, 513], "calcul": [0, 3, 5, 21, 32, 78, 82, 92, 95, 96, 99, 104, 108, 110, 134, 139, 151, 154, 155, 163, 169, 175, 197, 202, 203, 204, 211, 214, 229, 237, 238, 240, 241, 243, 245, 252, 255, 256, 259, 266, 283, 285, 288, 306, 308, 311, 312, 315, 317, 318, 324, 330, 331, 342, 347, 354, 355, 356, 404, 410, 413, 419, 428, 439, 449, 463, 468, 483, 484, 486, 487, 490, 492, 494, 495, 497, 498, 499, 503, 504, 505, 507, 510], "loop": [0, 15, 19, 151, 203, 204, 205, 208, 211, 219, 229, 331, 354, 377, 400, 416, 418, 449, 455, 480, 484, 492, 494, 497, 505, 509], "order": [0, 3, 6, 9, 56, 78, 79, 92, 95, 96, 97, 99, 105, 151, 152, 155, 163, 165, 166, 167, 169, 173, 175, 178, 204, 208, 211, 219, 220, 240, 266, 283, 285, 288, 308, 314, 316, 317, 330, 331, 340, 346, 354, 355, 359, 362, 366, 394, 400, 411, 413, 416, 417, 419, 449, 452, 454, 463, 484, 485, 486, 487, 489, 492, 494, 498, 503, 507, 509, 514], "stack": [0, 3, 6, 9, 19, 20, 78, 204, 205, 283, 285, 324, 399, 471, 478, 479, 483, 487, 492, 494, 498, 499, 507], "begin": [0, 2, 3, 5, 6, 20, 22, 25, 26, 70, 78, 165, 166, 204, 218, 238, 240, 263, 283, 285, 317, 331, 340, 400, 401, 419, 449, 454, 483, 492, 494, 495, 496, 502, 503, 505, 507, 509, 511], "over": [0, 1, 19, 28, 33, 79, 80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142, 151, 162, 169, 175, 203, 204, 208, 211, 227, 245, 254, 256, 285, 288, 310, 311, 316, 317, 318, 324, 330, 331, 341, 344, 346, 347, 354, 411, 413, 416, 427, 449, 468, 470, 480, 484, 485, 490, 497, 503, 507, 510, 512, 513, 514], "upon": [0, 5, 26, 44, 61, 66, 78, 152, 155, 203, 204, 214, 217, 308, 311, 331, 333, 342, 346, 347, 355, 383, 408, 427, 447, 449, 470, 484, 507], "accord": [0, 22, 56, 63, 169, 175, 240, 288, 331, 401, 419, 449, 495, 507, 509, 513], "design": [0, 1, 2, 10, 19, 21, 22, 25, 28, 47, 49, 55, 56, 61, 78, 83, 104, 125, 153, 155, 213, 219, 241, 283, 284, 285, 288, 289, 292, 295, 311, 312, 315, 318, 322, 328, 331, 335, 342, 355, 369, 449, 450, 451, 454, 455, 463, 483, 484, 486, 493, 495, 498, 507, 508], "until": [0, 45, 219, 283, 295, 305, 308, 317, 346, 348, 375, 410, 412, 419, 442, 452, 454, 484, 507, 510], "complet": [0, 3, 15, 55, 66, 74, 78, 152, 214, 252, 294, 295, 306, 307, 311, 317, 330, 331, 341, 355, 383, 400, 419, 448, 451, 455, 456, 471, 478, 479, 492, 494, 497, 498, 507, 509, 513], "wrap": [0, 21, 23, 26, 104, 204, 288, 307, 308, 355, 383, 400, 441, 451, 454, 488, 492, 497, 498], "quit": [0, 212, 317, 393, 484, 494, 495, 498, 507], "disablefutureconfigur": [0, 445], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 252, 254, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 485, 491, 492, 494, 496, 503, 505, 507, 508, 514], "expos": [0, 6, 19, 20, 21, 27, 32, 231, 238, 240, 245, 278, 282, 283, 284, 396, 399, 451, 490, 492], "function": [0, 1, 3, 5, 6, 9, 19, 20, 21, 27, 28, 32, 37, 42, 43, 47, 53, 56, 58, 60, 61, 66, 74, 78, 81, 89, 104, 108, 116, 125, 155, 166, 178, 204, 209, 211, 219, 220, 223, 240, 241, 245, 247, 251, 252, 255, 256, 259, 261, 264, 283, 285, 288, 289, 294, 298, 299, 311, 328, 330, 331, 334, 340, 342, 344, 346, 347, 350, 352, 355, 356, 362, 367, 370, 374, 375, 377, 380, 382, 383, 386, 387, 390, 392, 396, 397, 399, 400, 402, 408, 411, 412, 413, 415, 416, 418, 419, 437, 438, 441, 442, 444, 447, 449, 451, 452, 454, 455, 456, 470, 483, 484, 486, 487, 488, 492, 494, 495, 497, 507, 510, 511], "ensur": [0, 15, 53, 58, 74, 75, 153, 166, 187, 192, 193, 194, 199, 211, 214, 224, 226, 240, 245, 249, 250, 252, 254, 256, 267, 292, 298, 299, 301, 305, 314, 319, 324, 326, 329, 330, 331, 341, 355, 356, 357, 359, 360, 363, 367, 380, 384, 390, 419, 424, 427, 446, 452, 454, 455, 456, 486, 494, 499, 507, 509], "isn": [0, 9, 42, 78, 198, 202, 331, 333, 454, 455, 456, 494, 498], "t": [0, 2, 3, 4, 5, 6, 9, 19, 20, 34, 42, 44, 47, 55, 58, 78, 79, 81, 83, 89, 90, 92, 93, 94, 95, 96, 97, 99, 104, 105, 108, 111, 112, 116, 136, 139, 140, 142, 153, 155, 159, 162, 163, 167, 188, 198, 200, 201, 202, 204, 205, 208, 219, 237, 240, 241, 250, 252, 261, 267, 278, 283, 288, 289, 308, 311, 317, 331, 333, 334, 335, 340, 341, 344, 346, 348, 360, 363, 369, 374, 377, 382, 383, 402, 404, 410, 411, 412, 415, 416, 417, 419, 425, 430, 434, 442, 444, 446, 447, 448, 450, 451, 452, 454, 477, 484, 485, 487, 492, 494, 495, 497, 498, 499, 502, 503, 507, 509, 511, 514], "call": [0, 3, 5, 6, 9, 15, 19, 20, 26, 31, 32, 39, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 104, 145, 151, 153, 155, 162, 204, 205, 212, 214, 216, 217, 219, 224, 238, 240, 241, 242, 245, 247, 252, 256, 282, 283, 285, 288, 293, 295, 303, 308, 311, 315, 318, 326, 330, 331, 334, 336, 337, 340, 342, 343, 346, 347, 348, 355, 362, 367, 369, 375, 377, 381, 383, 384, 394, 397, 399, 400, 402, 405, 408, 411, 413, 415, 419, 434, 451, 452, 454, 455, 456, 487, 492, 494, 498, 499, 501, 507, 509, 513], "more": [0, 1, 3, 4, 5, 6, 9, 10, 19, 32, 34, 37, 43, 44, 47, 50, 55, 56, 60, 79, 93, 104, 125, 144, 155, 160, 162, 163, 165, 166, 173, 175, 202, 204, 219, 220, 226, 229, 241, 245, 247, 252, 283, 288, 289, 293, 295, 299, 308, 310, 311, 312, 315, 317, 330, 331, 333, 334, 335, 337, 339, 341, 342, 344, 346, 361, 366, 369, 375, 377, 383, 401, 402, 408, 410, 416, 418, 419, 437, 442, 443, 448, 449, 451, 452, 454, 455, 456, 457, 471, 472, 473, 474, 477, 480, 482, 484, 487, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 507, 508, 509, 513], "than": [0, 3, 4, 5, 19, 34, 44, 48, 49, 56, 77, 104, 125, 135, 139, 154, 155, 160, 163, 166, 167, 175, 178, 201, 204, 208, 211, 214, 219, 238, 240, 241, 252, 283, 285, 288, 294, 305, 307, 308, 311, 314, 324, 331, 333, 336, 337, 339, 340, 342, 343, 366, 369, 375, 401, 402, 408, 410, 411, 415, 416, 418, 419, 455, 456, 470, 478, 480, 484, 486, 489, 490, 492, 494, 498, 499, 502, 503, 507, 509], "onc": [0, 5, 155, 165, 267, 288, 289, 318, 322, 325, 329, 330, 349, 355, 369, 449, 451, 453, 454, 456, 492, 494, 497, 501, 502, 507], "isstablereleasevers": [0, 445], "none": [0, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 32, 39, 44, 45, 47, 49, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 151, 153, 154, 155, 162, 163, 164, 166, 183, 197, 200, 201, 202, 204, 211, 214, 218, 219, 220, 223, 224, 229, 240, 241, 242, 245, 247, 252, 254, 256, 257, 259, 261, 283, 284, 285, 288, 289, 292, 295, 305, 306, 307, 308, 310, 311, 314, 315, 316, 317, 318, 319, 321, 322, 324, 330, 331, 332, 335, 336, 337, 339, 340, 342, 343, 346, 347, 348, 350, 351, 354, 357, 362, 363, 366, 367, 368, 369, 374, 375, 377, 381, 382, 383, 384, 385, 390, 393, 394, 396, 399, 400, 404, 405, 406, 411, 412, 413, 416, 418, 419, 424, 430, 437, 441, 442, 444, 446, 447, 452, 454, 473, 478, 479, 486, 492, 494, 497, 498, 507, 509, 513], "determin": [0, 3, 5, 9, 10, 26, 28, 47, 55, 56, 78, 151, 154, 155, 163, 165, 166, 167, 197, 201, 203, 204, 206, 219, 220, 227, 240, 241, 245, 252, 256, 283, 285, 288, 290, 294, 305, 306, 308, 311, 314, 315, 316, 317, 318, 324, 331, 344, 346, 355, 356, 368, 383, 384, 410, 412, 413, 416, 433, 442, 449, 455, 484, 487, 490, 492, 494, 503, 507, 513], "should": [0, 1, 3, 4, 5, 6, 19, 21, 31, 35, 43, 47, 55, 56, 58, 61, 66, 77, 78, 93, 104, 139, 144, 151, 152, 153, 155, 160, 162, 163, 165, 166, 167, 169, 175, 198, 200, 201, 202, 204, 206, 211, 214, 216, 220, 223, 237, 238, 241, 245, 247, 252, 256, 261, 283, 285, 288, 289, 290, 292, 294, 295, 306, 307, 308, 310, 311, 315, 316, 317, 318, 319, 324, 330, 331, 333, 334, 337, 339, 341, 342, 344, 346, 347, 348, 355, 357, 362, 367, 369, 372, 375, 383, 384, 386, 392, 394, 397, 401, 402, 408, 411, 412, 413, 416, 417, 418, 421, 440, 446, 448, 449, 450, 452, 456, 484, 485, 493, 494, 497, 498, 499, 502, 503, 505, 507, 513, 514], "consid": [0, 47, 78, 104, 154, 166, 241, 245, 247, 252, 256, 283, 285, 288, 311, 312, 314, 315, 324, 331, 339, 341, 347, 375, 408, 448, 455, 456, 463, 464, 468, 484, 499, 507, 513], "stabl": [0, 3, 5, 155, 339, 456, 487, 497], "releas": [0, 139, 155, 165, 169, 228, 450, 484, 507], "init": [0, 77, 162, 204, 315, 333, 357, 369, 408, 427, 445, 446, 471, 478, 479, 487, 490, 492, 499, 507, 513], "choic": [0, 283, 294, 368, 492, 497], "fname": [0, 3, 4, 6, 19, 26, 78, 175, 202, 219, 252, 285, 288, 317, 331, 352, 369, 400, 416, 418, 442, 492, 499, 513], "c": [0, 1, 2, 3, 4, 5, 6, 9, 10, 14, 15, 19, 20, 21, 25, 27, 28, 32, 36, 46, 47, 49, 55, 56, 58, 66, 70, 78, 79, 80, 81, 82, 83, 90, 92, 93, 95, 96, 97, 99, 104, 110, 112, 113, 116, 125, 151, 153, 155, 160, 162, 165, 171, 175, 197, 200, 201, 203, 204, 205, 208, 211, 214, 215, 218, 219, 220, 224, 229, 231, 238, 240, 241, 245, 247, 252, 254, 256, 259, 261, 263, 278, 283, 284, 288, 289, 290, 291, 292, 294, 295, 301, 303, 307, 308, 311, 315, 316, 318, 319, 321, 324, 329, 330, 331, 333, 350, 352, 353, 357, 369, 374, 376, 377, 382, 385, 390, 393, 396, 399, 400, 405, 412, 444, 447, 452, 454, 455, 464, 468, 469, 470, 478, 486, 492, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 507, 509, 513], "skipinspect": [0, 55], "fals": [0, 3, 5, 6, 15, 19, 25, 28, 47, 55, 61, 66, 78, 104, 125, 151, 153, 155, 166, 167, 169, 171, 173, 175, 176, 200, 201, 204, 211, 214, 219, 240, 241, 245, 256, 257, 259, 261, 285, 288, 289, 293, 295, 297, 301, 303, 305, 306, 307, 308, 310, 311, 315, 316, 317, 318, 319, 324, 330, 331, 334, 336, 337, 339, 340, 341, 342, 343, 356, 357, 366, 367, 369, 375, 377, 384, 385, 396, 400, 402, 404, 412, 414, 415, 416, 418, 419, 442, 447, 449, 487, 492, 496, 497, 499, 507], "scan": [0, 21, 368, 383, 442], "load": [0, 1, 2, 3, 5, 6, 10, 14, 15, 19, 20, 25, 28, 34, 47, 55, 65, 67, 89, 104, 125, 152, 153, 155, 165, 200, 204, 208, 211, 218, 219, 224, 229, 238, 241, 247, 249, 250, 252, 271, 281, 283, 284, 285, 288, 289, 295, 297, 299, 303, 324, 327, 329, 331, 350, 352, 356, 360, 363, 364, 368, 369, 376, 382, 391, 392, 399, 401, 411, 449, 451, 452, 455, 462, 479, 480, 486, 487, 490, 493, 494, 497, 498, 499, 505, 507, 508, 513], "one": [0, 1, 3, 4, 5, 6, 8, 9, 15, 19, 20, 21, 26, 27, 32, 43, 44, 46, 47, 55, 56, 58, 60, 72, 76, 77, 78, 104, 144, 145, 151, 153, 160, 162, 163, 165, 169, 172, 175, 190, 200, 201, 204, 205, 211, 215, 218, 219, 220, 223, 224, 227, 240, 241, 245, 247, 252, 254, 256, 261, 283, 288, 303, 305, 306, 307, 308, 310, 311, 312, 314, 317, 318, 325, 330, 331, 335, 336, 337, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 355, 363, 366, 367, 368, 369, 375, 376, 377, 382, 383, 384, 390, 393, 399, 400, 401, 408, 411, 412, 415, 416, 418, 419, 421, 430, 446, 449, 452, 454, 455, 456, 462, 480, 484, 485, 487, 492, 493, 494, 498, 499, 504, 507, 509, 510, 511, 513, 514], "int": [0, 3, 4, 5, 6, 9, 19, 26, 47, 50, 55, 56, 60, 65, 66, 74, 77, 78, 95, 96, 99, 153, 154, 155, 166, 169, 175, 204, 219, 220, 223, 237, 240, 241, 252, 256, 283, 285, 288, 291, 292, 311, 317, 331, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 350, 351, 368, 400, 404, 408, 410, 411, 412, 416, 418, 428, 444, 509], "option": [0, 3, 4, 5, 6, 7, 9, 15, 19, 20, 21, 26, 27, 32, 37, 39, 44, 45, 47, 49, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 95, 96, 99, 104, 113, 136, 137, 138, 139, 151, 153, 154, 155, 162, 163, 166, 167, 170, 175, 200, 201, 204, 211, 214, 216, 218, 219, 220, 223, 224, 229, 237, 238, 240, 241, 242, 245, 247, 252, 254, 256, 261, 267, 283, 285, 288, 289, 290, 292, 294, 295, 305, 308, 310, 311, 314, 315, 316, 317, 318, 322, 324, 330, 331, 332, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 347, 350, 351, 357, 362, 363, 366, 367, 368, 369, 375, 376, 381, 383, 390, 393, 394, 396, 399, 400, 402, 404, 405, 406, 411, 412, 416, 418, 419, 441, 442, 447, 449, 451, 452, 454, 456, 484, 486, 487, 490, 492, 494, 496, 497, 498, 499, 507, 508, 509, 510], "automat": [0, 56, 78, 155, 162, 238, 241, 245, 288, 311, 331, 347, 348, 374, 375, 408, 419, 455, 463, 464, 467, 481, 482, 484, 485, 492, 495, 498, 500, 507, 513, 514], "item": [0, 21, 22, 26, 55, 56, 119, 152, 162, 163, 166, 219, 244, 247, 285, 290, 291, 311, 335, 339, 342, 344, 346, 347, 365, 366, 368, 369, 400, 401, 402, 410, 411, 412, 418, 419, 446, 454, 455, 462, 469, 473, 477, 478, 485, 492, 496, 513, 514], "out": [0, 3, 4, 5, 7, 9, 15, 19, 21, 23, 28, 32, 43, 45, 47, 48, 55, 56, 78, 104, 153, 155, 160, 165, 167, 188, 200, 201, 202, 204, 219, 223, 224, 228, 240, 245, 283, 288, 289, 307, 308, 310, 311, 314, 318, 330, 331, 333, 337, 344, 352, 369, 376, 397, 399, 401, 402, 404, 418, 419, 430, 437, 442, 448, 449, 450, 451, 452, 456, 462, 468, 484, 486, 487, 492, 494, 497, 498, 499, 502, 503, 507, 508, 509, 510], "menu": [0, 507], "would": [0, 2, 3, 5, 9, 19, 31, 45, 56, 61, 66, 77, 78, 104, 151, 155, 162, 165, 169, 219, 241, 245, 247, 283, 285, 288, 308, 311, 317, 331, 333, 334, 336, 339, 340, 342, 344, 346, 347, 348, 366, 375, 377, 382, 393, 400, 401, 406, 408, 412, 418, 419, 442, 449, 452, 454, 455, 462, 471, 480, 483, 486, 487, 492, 494, 495, 497, 498, 499, 507, 510, 513], "produc": [0, 1, 4, 37, 39, 45, 47, 56, 61, 66, 82, 85, 104, 116, 129, 169, 174, 175, 191, 197, 198, 200, 204, 240, 241, 247, 283, 288, 293, 314, 317, 324, 331, 334, 336, 340, 342, 343, 346, 376, 402, 403, 413, 416, 419, 434, 453, 483, 484, 486, 494, 497, 503, 505, 507, 509, 512, 513], "exist": [0, 3, 5, 6, 37, 44, 46, 47, 55, 60, 63, 65, 69, 77, 78, 79, 152, 153, 155, 157, 162, 163, 170, 200, 201, 202, 204, 207, 223, 245, 252, 256, 261, 266, 267, 269, 283, 285, 288, 291, 295, 308, 311, 318, 324, 326, 330, 331, 344, 346, 347, 352, 367, 369, 377, 403, 405, 408, 413, 415, 425, 433, 447, 449, 451, 452, 454, 455, 456, 475, 483, 484, 485, 486, 494, 496, 503, 505, 507, 509, 513, 514], "yaml": [0, 14, 46, 47, 69, 74, 159, 163, 224, 245, 267, 283, 289, 290, 291, 292, 293, 295, 299, 324, 334, 352, 360, 363, 368, 369, 375, 376, 381, 382, 391, 442, 447, 455, 471, 480, 486, 487, 492, 494, 497, 498, 499, 501, 506, 513], "str": [0, 1, 3, 4, 5, 6, 7, 8, 9, 15, 19, 20, 21, 22, 27, 28, 32, 39, 43, 44, 45, 47, 49, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 104, 153, 154, 155, 162, 163, 166, 168, 170, 172, 174, 175, 177, 178, 179, 200, 201, 204, 211, 214, 218, 219, 223, 224, 240, 241, 242, 245, 247, 252, 256, 261, 283, 284, 285, 288, 289, 291, 293, 294, 303, 305, 308, 311, 317, 318, 319, 324, 330, 331, 334, 335, 337, 339, 344, 346, 347, 352, 356, 366, 367, 368, 369, 374, 375, 376, 377, 381, 382, 383, 390, 393, 399, 400, 401, 402, 404, 405, 406, 408, 412, 415, 416, 417, 418, 419, 442, 444, 454, 462, 490], "path": [0, 1, 3, 4, 5, 7, 15, 26, 43, 46, 47, 55, 56, 58, 74, 76, 77, 78, 79, 145, 146, 147, 172, 177, 178, 179, 201, 214, 219, 241, 247, 252, 274, 288, 293, 352, 355, 368, 369, 376, 377, 382, 383, 400, 402, 403, 405, 413, 415, 425, 442, 446, 447, 455, 478, 480, 485, 486, 487, 488, 492, 494, 507, 514], "my_cas": 0, "suppli": [0, 3, 19, 47, 50, 56, 63, 78, 104, 151, 202, 289, 311, 346, 352, 413, 416, 419, 437, 484, 507], "superced": [0, 456], "other": [0, 3, 4, 5, 6, 8, 19, 20, 21, 27, 31, 32, 37, 43, 47, 49, 55, 56, 60, 66, 72, 76, 77, 78, 104, 135, 151, 152, 162, 163, 165, 167, 169, 173, 183, 184, 195, 200, 201, 202, 204, 208, 214, 219, 228, 240, 241, 245, 250, 252, 259, 261, 283, 288, 289, 293, 295, 305, 306, 307, 308, 311, 312, 315, 316, 317, 318, 331, 335, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 355, 369, 374, 382, 383, 399, 400, 401, 408, 411, 412, 416, 419, 433, 447, 449, 451, 452, 454, 455, 456, 483, 484, 485, 486, 492, 494, 495, 496, 497, 498, 499, 504, 507, 508, 509, 510, 514], "case": [0, 2, 3, 5, 6, 7, 9, 14, 25, 28, 32, 45, 60, 61, 63, 64, 65, 71, 72, 77, 78, 79, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 144, 151, 152, 153, 155, 160, 162, 163, 165, 169, 173, 203, 204, 214, 218, 219, 224, 228, 238, 241, 252, 254, 256, 263, 266, 267, 274, 281, 283, 288, 290, 292, 294, 307, 308, 311, 312, 318, 322, 324, 330, 331, 333, 337, 339, 344, 347, 360, 363, 367, 369, 375, 379, 391, 392, 397, 400, 401, 412, 413, 415, 419, 430, 437, 445, 447, 449, 454, 455, 456, 457, 462, 463, 464, 471, 478, 479, 482, 483, 485, 486, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 505, 509, 511, 513, 514], "method": [0, 1, 3, 4, 5, 13, 14, 15, 16, 17, 19, 21, 23, 30, 31, 34, 35, 36, 41, 42, 47, 49, 53, 54, 55, 56, 58, 59, 66, 74, 75, 78, 82, 89, 102, 104, 108, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 145, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 165, 166, 171, 173, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 204, 205, 208, 210, 211, 214, 216, 219, 223, 224, 225, 226, 234, 235, 236, 237, 240, 241, 246, 247, 249, 250, 252, 254, 257, 259, 260, 261, 264, 266, 267, 268, 269, 270, 271, 274, 281, 283, 285, 288, 289, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 310, 311, 315, 317, 318, 322, 324, 325, 326, 327, 328, 329, 330, 331, 335, 337, 342, 344, 346, 347, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 410, 411, 412, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 449, 450, 451, 452, 454, 456, 472, 483, 484, 485, 487, 489, 490, 492, 494, 507, 509, 510, 513, 514], "directli": [0, 3, 4, 5, 19, 45, 77, 79, 104, 155, 163, 172, 177, 198, 245, 283, 288, 290, 293, 305, 308, 311, 314, 316, 331, 336, 337, 340, 342, 343, 348, 375, 377, 383, 454, 470, 478, 480, 484, 487, 494, 497, 499, 507, 509], "bool": [0, 2, 3, 5, 6, 25, 28, 47, 55, 66, 78, 104, 155, 166, 167, 175, 201, 204, 211, 214, 219, 227, 238, 241, 252, 256, 283, 285, 288, 292, 293, 294, 295, 305, 308, 311, 314, 315, 316, 318, 324, 330, 331, 334, 336, 337, 339, 340, 342, 343, 346, 347, 366, 368, 369, 375, 376, 377, 396, 400, 402, 405, 412, 415, 416, 418, 419, 442, 443, 490], "whether": [0, 3, 5, 9, 26, 39, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 104, 145, 155, 175, 199, 204, 238, 241, 242, 245, 252, 288, 294, 295, 308, 311, 315, 337, 339, 340, 344, 347, 366, 368, 375, 376, 377, 381, 384, 396, 400, 415, 442, 454, 455, 484, 485, 487, 498, 507, 509, 514], "valid": [0, 9, 34, 47, 60, 66, 69, 78, 80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 125, 131, 132, 133, 136, 137, 140, 141, 142, 153, 163, 188, 238, 240, 241, 246, 256, 264, 282, 283, 294, 303, 304, 308, 311, 317, 318, 330, 331, 333, 334, 341, 347, 355, 356, 366, 368, 369, 374, 375, 377, 379, 403, 412, 413, 446, 449, 483, 484, 487, 490, 492, 494, 497, 507, 510], "default": [0, 1, 3, 4, 5, 11, 19, 25, 26, 28, 32, 44, 46, 47, 49, 56, 60, 65, 66, 74, 78, 79, 82, 84, 89, 92, 104, 125, 153, 155, 163, 173, 200, 201, 204, 211, 214, 219, 220, 237, 238, 241, 252, 254, 256, 267, 283, 285, 288, 289, 293, 294, 295, 311, 315, 330, 331, 333, 342, 344, 345, 346, 347, 351, 356, 363, 366, 367, 368, 369, 375, 376, 377, 380, 381, 382, 386, 396, 400, 405, 412, 416, 419, 437, 442, 446, 447, 451, 454, 456, 485, 486, 487, 490, 492, 494, 497, 499, 502, 507, 510, 514], "exampl": [0, 1, 3, 5, 8, 9, 19, 26, 35, 46, 49, 55, 56, 60, 76, 78, 79, 104, 145, 151, 152, 153, 154, 155, 160, 162, 163, 164, 165, 167, 172, 173, 174, 175, 177, 178, 179, 200, 201, 204, 216, 219, 220, 240, 241, 247, 252, 283, 285, 288, 289, 290, 292, 293, 294, 295, 308, 311, 312, 317, 318, 330, 331, 332, 333, 335, 337, 340, 341, 342, 343, 346, 347, 348, 355, 362, 366, 374, 375, 383, 396, 400, 402, 408, 411, 412, 413, 416, 417, 419, 437, 438, 442, 446, 447, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 505, 509, 510, 513], "o": [0, 3, 21, 28, 31, 78, 108, 110, 137, 146, 151, 153, 165, 214, 247, 252, 259, 288, 294, 301, 311, 318, 347, 377, 382, 383, 405, 415, 452, 453, 455, 464, 471, 478, 480, 487, 492, 495, 499, 503, 507, 508], "getdefaultplugin": [0, 445], "list": [0, 1, 3, 5, 8, 9, 10, 19, 21, 26, 32, 33, 34, 39, 44, 47, 49, 55, 56, 59, 60, 66, 70, 78, 79, 95, 96, 99, 104, 151, 152, 154, 155, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 195, 197, 200, 201, 204, 211, 214, 218, 219, 220, 224, 240, 241, 245, 247, 252, 256, 283, 285, 288, 290, 291, 292, 293, 294, 305, 308, 311, 315, 316, 317, 319, 324, 330, 331, 333, 334, 336, 339, 340, 341, 343, 346, 347, 351, 352, 357, 362, 366, 368, 369, 370, 372, 375, 380, 383, 384, 390, 394, 400, 401, 404, 405, 407, 408, 411, 412, 413, 415, 416, 418, 419, 424, 437, 442, 446, 449, 452, 454, 456, 467, 468, 481, 482, 483, 486, 487, 490, 492, 496, 498, 499, 500, 502, 503, 504, 505, 507, 509, 512, 513], "type": [0, 3, 4, 5, 7, 8, 9, 14, 15, 19, 25, 26, 28, 41, 43, 47, 49, 55, 56, 66, 70, 74, 77, 78, 79, 80, 81, 82, 84, 92, 94, 95, 96, 97, 98, 99, 102, 104, 112, 113, 116, 125, 136, 137, 139, 142, 151, 153, 154, 155, 159, 160, 163, 166, 167, 174, 178, 195, 200, 201, 202, 203, 204, 206, 219, 220, 224, 227, 237, 238, 240, 241, 247, 252, 254, 256, 283, 284, 285, 288, 289, 290, 293, 294, 295, 297, 300, 301, 303, 305, 308, 311, 312, 314, 315, 316, 317, 318, 322, 324, 326, 328, 330, 331, 333, 334, 336, 339, 340, 342, 343, 344, 346, 347, 348, 350, 351, 357, 366, 368, 369, 375, 377, 380, 382, 386, 396, 400, 401, 404, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 442, 444, 447, 448, 449, 451, 452, 454, 455, 463, 470, 480, 484, 485, 486, 487, 490, 492, 494, 496, 498, 499, 502, 503, 504, 509, 511, 513, 514], "armiplugin": [0, 1, 2, 10, 58, 60, 215, 231, 238, 272, 278, 283, 284, 380, 386, 396, 445, 451, 494, 507], "return": [0, 1, 3, 4, 5, 6, 7, 8, 9, 15, 19, 24, 25, 26, 28, 31, 32, 43, 47, 55, 56, 60, 66, 70, 74, 78, 79, 80, 81, 82, 83, 84, 87, 89, 90, 92, 93, 95, 96, 97, 99, 103, 104, 105, 108, 111, 112, 113, 114, 116, 137, 139, 140, 141, 142, 151, 153, 154, 155, 160, 162, 164, 166, 167, 169, 171, 173, 175, 176, 178, 182, 197, 199, 200, 201, 202, 203, 204, 211, 217, 219, 220, 226, 227, 230, 237, 238, 240, 241, 243, 245, 247, 252, 254, 256, 262, 277, 283, 285, 288, 293, 294, 295, 305, 306, 307, 308, 309, 311, 314, 315, 316, 317, 324, 325, 329, 330, 331, 334, 336, 337, 339, 340, 341, 342, 343, 346, 347, 350, 351, 352, 355, 357, 359, 362, 363, 366, 368, 369, 372, 374, 375, 376, 377, 382, 383, 399, 400, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 418, 419, 425, 428, 442, 443, 444, 451, 452, 454, 455, 470, 478, 480, 487, 490, 492, 494, 497, 498, 507, 511, 513], "contain": [0, 1, 3, 5, 9, 16, 21, 26, 37, 43, 45, 47, 55, 56, 77, 78, 92, 95, 96, 99, 104, 151, 152, 155, 159, 160, 162, 163, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 195, 198, 200, 201, 202, 204, 208, 212, 219, 227, 238, 240, 241, 243, 245, 247, 249, 252, 257, 261, 269, 283, 284, 285, 288, 290, 291, 292, 293, 295, 305, 306, 308, 311, 312, 314, 315, 316, 318, 324, 325, 330, 331, 332, 333, 334, 335, 339, 344, 347, 348, 350, 352, 355, 366, 369, 370, 372, 374, 376, 377, 383, 384, 396, 400, 401, 403, 404, 408, 410, 411, 412, 414, 415, 417, 419, 438, 442, 444, 449, 451, 452, 453, 454, 456, 458, 459, 461, 466, 470, 482, 483, 484, 485, 492, 494, 497, 499, 500, 502, 503, 507, 508, 509, 513, 514], "framework": [0, 1, 76, 78, 79, 152, 153, 155, 160, 203, 204, 212, 219, 238, 241, 245, 283, 333, 340, 348, 368, 370, 372, 383, 386, 406, 448, 450, 451, 458, 461, 462, 471, 484, 485, 487, 492, 494, 495, 497, 507, 509, 513, 514], "an": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 39, 41, 42, 43, 45, 46, 47, 49, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 83, 91, 93, 104, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 139, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 203, 204, 208, 210, 211, 212, 214, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 234, 235, 236, 238, 239, 240, 241, 242, 245, 247, 249, 250, 252, 254, 256, 259, 260, 261, 263, 266, 267, 268, 269, 270, 271, 274, 281, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 314, 315, 317, 318, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 346, 347, 348, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 375, 376, 377, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 468, 470, 472, 475, 476, 483, 484, 486, 487, 490, 491, 492, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 507, 509, 510, 511, 513], "applic": [0, 1, 10, 56, 58, 60, 66, 76, 78, 144, 153, 155, 238, 241, 245, 283, 284, 330, 347, 355, 384, 401, 419, 447, 448, 450, 455, 484, 485, 487, 494, 496, 498, 503, 507, 513, 514], "fold": 0, "": [0, 1, 3, 4, 5, 6, 9, 15, 19, 20, 21, 26, 27, 32, 34, 39, 45, 47, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 81, 85, 101, 104, 108, 113, 135, 136, 137, 139, 142, 144, 151, 152, 153, 155, 157, 160, 162, 165, 166, 167, 169, 178, 200, 201, 202, 203, 204, 208, 214, 218, 219, 220, 223, 237, 240, 242, 245, 252, 283, 285, 288, 289, 291, 293, 305, 308, 311, 312, 314, 316, 318, 331, 332, 333, 335, 337, 340, 341, 342, 344, 346, 347, 348, 351, 354, 355, 356, 366, 367, 369, 375, 377, 381, 397, 399, 400, 401, 404, 408, 410, 411, 412, 413, 415, 416, 418, 419, 442, 443, 446, 448, 449, 450, 451, 452, 453, 454, 456, 458, 461, 469, 470, 478, 482, 484, 485, 490, 492, 494, 495, 496, 498, 499, 500, 502, 503, 505, 507, 508, 509, 513, 514], "capabl": [0, 47, 55, 170, 204, 212, 219, 224, 238, 355, 434, 442, 451, 452, 457, 482, 486, 487, 492, 498, 499, 500, 507], "its": [0, 1, 3, 5, 6, 15, 47, 78, 104, 116, 125, 151, 152, 155, 169, 204, 237, 250, 284, 285, 288, 293, 299, 305, 308, 310, 311, 317, 327, 330, 331, 344, 346, 348, 355, 363, 368, 369, 375, 377, 384, 386, 404, 412, 416, 419, 446, 449, 451, 454, 455, 460, 467, 482, 483, 484, 485, 486, 492, 495, 500, 502, 503, 505, 506, 507, 509, 510, 514], "own": [0, 1, 15, 26, 56, 151, 162, 165, 169, 214, 219, 241, 245, 247, 252, 283, 299, 311, 312, 344, 348, 368, 375, 386, 408, 447, 455, 457, 463, 464, 477, 480, 482, 484, 486, 487, 494, 497, 500, 507, 510, 511], "getdefaultpluginmanag": [0, 445], "armipluginmanag": [0, 1, 282, 283, 445], "manag": [0, 1, 3, 6, 27, 44, 47, 49, 151, 152, 204, 208, 212, 215, 218, 219, 220, 224, 238, 240, 241, 245, 247, 266, 282, 283, 311, 315, 324, 331, 333, 347, 374, 377, 383, 386, 390, 405, 449, 450, 467, 471, 482, 483, 484, 485, 487, 489, 493, 494, 497, 500, 503, 506, 509, 514], "when": [0, 2, 4, 5, 9, 13, 14, 15, 16, 17, 19, 21, 23, 26, 30, 31, 32, 34, 35, 36, 39, 41, 42, 44, 45, 47, 50, 53, 54, 55, 56, 58, 59, 65, 66, 70, 74, 75, 76, 77, 78, 79, 81, 82, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 140, 142, 149, 150, 151, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 172, 173, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 204, 205, 210, 211, 214, 219, 223, 224, 225, 226, 234, 235, 236, 238, 240, 241, 245, 249, 250, 252, 254, 256, 259, 260, 263, 266, 267, 268, 269, 270, 271, 274, 281, 282, 283, 285, 288, 289, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 311, 314, 315, 316, 317, 318, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 339, 341, 342, 344, 346, 347, 348, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 375, 376, 377, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 408, 411, 412, 413, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 454, 455, 456, 478, 484, 485, 486, 487, 488, 489, 490, 494, 496, 497, 498, 499, 501, 502, 503, 504, 507, 509, 510, 513, 514], "standalon": [0, 23, 201, 484], "facil": 0, "without": [0, 3, 9, 10, 42, 45, 47, 55, 78, 89, 104, 125, 137, 144, 151, 154, 160, 201, 204, 219, 241, 252, 288, 292, 294, 299, 317, 330, 337, 342, 344, 361, 367, 377, 383, 384, 393, 411, 413, 415, 416, 419, 426, 437, 446, 454, 455, 456, 480, 483, 484, 485, 486, 487, 490, 498, 503, 507, 509, 514], "isconfigur": [0, 445, 492, 497], "ha": [0, 1, 3, 5, 9, 15, 19, 21, 26, 34, 37, 47, 55, 56, 61, 77, 78, 83, 85, 91, 92, 104, 119, 125, 151, 152, 154, 160, 165, 166, 175, 178, 197, 204, 205, 207, 211, 214, 219, 220, 226, 227, 245, 247, 252, 254, 259, 261, 267, 282, 283, 285, 288, 290, 294, 298, 299, 301, 305, 308, 310, 311, 315, 318, 324, 325, 326, 329, 330, 331, 333, 334, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 355, 356, 357, 360, 362, 363, 368, 369, 375, 377, 380, 383, 400, 405, 408, 411, 412, 415, 417, 436, 438, 442, 449, 452, 454, 456, 472, 480, 483, 484, 485, 486, 487, 491, 492, 494, 495, 497, 498, 499, 502, 503, 505, 507, 509, 513, 514], "been": [0, 3, 4, 5, 6, 19, 44, 45, 47, 55, 78, 165, 167, 197, 200, 205, 207, 214, 218, 219, 267, 282, 283, 285, 288, 290, 301, 308, 311, 315, 331, 333, 341, 344, 345, 346, 347, 348, 351, 352, 356, 357, 362, 380, 383, 400, 405, 407, 408, 411, 412, 417, 449, 454, 455, 480, 483, 484, 486, 494, 497, 499, 503, 507, 510, 513], "app": [0, 10, 55, 60, 79, 212, 262, 283, 377, 386, 445, 447, 449, 450, 486, 490, 492, 493, 497, 499, 507, 509, 510], "getpluginmanag": [0, 445], "getpluginmanagerorfail": [0, 283, 445], "rais": [0, 3, 6, 13, 14, 15, 16, 17, 19, 20, 30, 31, 32, 34, 35, 36, 41, 42, 47, 53, 54, 55, 56, 58, 59, 74, 75, 77, 78, 79, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 151, 155, 157, 158, 159, 160, 161, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 203, 204, 210, 211, 220, 223, 224, 225, 226, 227, 234, 235, 236, 238, 240, 241, 249, 250, 252, 254, 256, 259, 260, 266, 267, 268, 269, 270, 271, 274, 281, 283, 285, 288, 289, 295, 297, 298, 299, 300, 301, 302, 303, 304, 308, 316, 324, 325, 326, 327, 328, 329, 333, 340, 345, 346, 347, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 375, 377, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 405, 410, 415, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 456, 490], "error": [0, 1, 3, 5, 6, 58, 60, 61, 78, 104, 125, 151, 160, 162, 167, 198, 200, 204, 205, 214, 224, 226, 241, 252, 283, 295, 299, 301, 303, 311, 312, 333, 334, 340, 343, 344, 345, 348, 355, 367, 368, 375, 376, 377, 380, 386, 400, 403, 405, 411, 412, 417, 428, 442, 445, 449, 454, 455, 456, 484, 485, 487, 490, 494, 497, 498, 503, 505, 507, 509, 514], "getapp": [0, 445], "permiss": [0, 2, 3, 5, 7, 415, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 484, 489, 498], "intern": [0, 3, 4, 6, 45, 56, 92, 139, 163, 175, 200, 220, 241, 308, 331, 334, 339, 342, 346, 362, 394, 437, 449, 451, 455, 483, 488, 491, 494, 507], "those": [0, 5, 42, 45, 56, 78, 155, 167, 219, 241, 283, 285, 288, 294, 308, 311, 312, 330, 331, 333, 334, 344, 347, 355, 359, 400, 411, 416, 419, 449, 451, 454, 455, 485, 492, 494, 498, 499, 507, 513, 514], "instanc": [0, 3, 4, 5, 8, 9, 13, 14, 15, 16, 17, 21, 30, 31, 34, 35, 36, 41, 42, 44, 53, 54, 56, 58, 59, 74, 75, 77, 78, 83, 90, 104, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 137, 139, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 166, 167, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 202, 210, 211, 219, 223, 224, 225, 226, 234, 235, 236, 241, 249, 250, 254, 256, 259, 260, 266, 267, 268, 269, 270, 271, 274, 281, 283, 289, 290, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 311, 317, 318, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 339, 342, 344, 346, 347, 348, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 375, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 408, 411, 416, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 448, 449, 451, 452, 455, 456, 480, 484, 486, 492, 495, 496, 502, 507, 509], "which": [0, 1, 3, 4, 5, 8, 9, 19, 26, 42, 43, 45, 47, 55, 56, 65, 66, 76, 77, 78, 79, 80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 139, 140, 141, 142, 151, 152, 155, 159, 163, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 197, 200, 201, 202, 203, 204, 205, 206, 217, 219, 220, 224, 228, 240, 241, 243, 245, 247, 252, 254, 256, 262, 263, 283, 285, 288, 290, 293, 294, 295, 305, 306, 307, 308, 311, 314, 315, 316, 317, 318, 324, 330, 331, 333, 334, 339, 340, 341, 344, 347, 348, 350, 352, 362, 368, 369, 376, 377, 382, 383, 384, 400, 402, 405, 408, 410, 411, 412, 418, 419, 442, 449, 451, 452, 453, 454, 455, 456, 463, 464, 480, 484, 485, 486, 492, 494, 495, 497, 498, 499, 502, 503, 507, 509, 510, 513, 514], "provid": [0, 1, 3, 5, 6, 10, 19, 21, 28, 33, 39, 43, 47, 49, 56, 60, 66, 70, 74, 77, 78, 79, 86, 93, 104, 113, 135, 151, 152, 153, 155, 162, 165, 171, 173, 176, 195, 201, 204, 207, 212, 219, 226, 240, 241, 246, 247, 252, 256, 257, 264, 274, 283, 285, 288, 293, 294, 295, 308, 311, 315, 316, 317, 324, 330, 331, 332, 333, 334, 342, 344, 347, 351, 355, 356, 367, 369, 375, 377, 380, 382, 383, 396, 399, 402, 405, 408, 411, 416, 419, 442, 444, 446, 447, 449, 451, 454, 455, 456, 460, 467, 471, 473, 477, 480, 482, 484, 485, 487, 490, 494, 495, 498, 499, 500, 502, 503, 504, 505, 507, 509, 512, 513, 514], "onli": [0, 2, 3, 5, 6, 7, 8, 9, 15, 16, 19, 23, 32, 37, 44, 45, 56, 76, 78, 104, 135, 145, 151, 152, 155, 162, 163, 166, 175, 184, 200, 201, 202, 204, 207, 211, 214, 216, 217, 219, 220, 238, 240, 247, 252, 254, 256, 261, 267, 283, 285, 288, 289, 293, 295, 301, 305, 306, 307, 308, 311, 316, 318, 322, 324, 329, 330, 331, 333, 335, 337, 339, 340, 341, 344, 346, 347, 349, 350, 352, 355, 356, 362, 363, 367, 369, 372, 375, 376, 381, 383, 384, 393, 394, 400, 403, 407, 408, 411, 412, 413, 418, 419, 424, 437, 442, 448, 451, 452, 454, 455, 456, 463, 464, 484, 487, 492, 494, 497, 498, 499, 502, 503, 505, 507, 508, 510, 513], "true": [0, 3, 5, 15, 21, 25, 26, 28, 46, 47, 55, 60, 66, 78, 104, 125, 151, 152, 153, 155, 166, 167, 169, 171, 173, 176, 194, 198, 200, 201, 204, 219, 238, 240, 241, 245, 247, 252, 254, 256, 261, 266, 283, 285, 288, 289, 294, 295, 297, 301, 303, 305, 306, 308, 310, 311, 314, 315, 316, 317, 318, 324, 330, 331, 333, 334, 337, 341, 346, 347, 355, 356, 357, 368, 369, 375, 376, 377, 400, 405, 411, 412, 414, 415, 416, 419, 437, 442, 446, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 484, 490, 492, 496, 498, 499, 507, 508, 510, 513], "under": [0, 3, 5, 76, 108, 214, 219, 238, 283, 291, 305, 308, 311, 354, 366, 393, 448, 449, 455, 456, 484, 485, 494, 498, 507, 509, 510, 514], "test": [0, 2, 3, 22, 37, 46, 47, 48, 55, 60, 61, 76, 77, 79, 144, 152, 164, 165, 201, 203, 212, 215, 228, 238, 244, 251, 255, 275, 282, 284, 288, 289, 295, 311, 312, 333, 335, 339, 340, 344, 368, 369, 375, 400, 413, 443, 445, 446, 449, 450, 457, 462, 463, 464, 468, 470, 471, 475, 476, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 497, 499, 500, 507, 514], "demonstr": [0, 266, 355, 356, 363, 387, 434, 454, 457, 470, 471, 482, 483, 486, 493, 499, 500], "purpos": [0, 3, 5, 79, 152, 166, 201, 203, 214, 238, 240, 267, 288, 311, 331, 334, 339, 372, 454, 455, 456, 471, 483, 486, 507], "where": [0, 2, 3, 5, 9, 19, 20, 26, 28, 32, 43, 54, 56, 58, 78, 79, 104, 108, 152, 153, 154, 155, 162, 166, 167, 175, 202, 204, 211, 212, 214, 219, 220, 223, 224, 240, 241, 245, 256, 267, 283, 285, 288, 303, 305, 308, 311, 314, 315, 316, 318, 324, 325, 330, 331, 333, 334, 335, 336, 337, 339, 341, 342, 344, 346, 347, 348, 362, 379, 390, 393, 399, 400, 412, 419, 451, 454, 455, 456, 484, 486, 487, 490, 494, 499, 502, 503, 504, 505, 507, 509, 510, 511, 513], "content": [0, 2, 3, 5, 9, 23, 25, 26, 47, 166, 175, 198, 238, 247, 263, 283, 293, 339, 383, 384, 401, 405, 442, 454, 456, 477, 492, 507], "otherwis": [0, 3, 5, 6, 47, 78, 151, 155, 162, 163, 166, 219, 252, 283, 285, 288, 292, 308, 330, 331, 333, 337, 339, 340, 342, 344, 346, 355, 383, 401, 412, 413, 415, 419, 442, 452, 484, 495, 505, 507, 510], "independ": [0, 3, 5, 47, 49, 55, 56, 167, 169, 208, 238, 239, 245, 317, 330, 452, 456, 484, 494, 498, 507, 511], "script": [0, 2, 22, 24, 77, 238, 242, 452, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 485, 486, 494, 497, 498, 499, 507, 509, 514], "need": [0, 3, 5, 7, 9, 10, 19, 27, 31, 44, 47, 49, 55, 56, 58, 65, 74, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 144, 145, 151, 152, 155, 165, 169, 175, 197, 201, 204, 205, 206, 214, 219, 240, 241, 245, 252, 256, 261, 283, 285, 288, 289, 290, 293, 294, 295, 308, 311, 312, 314, 315, 316, 318, 330, 331, 332, 333, 334, 337, 340, 342, 344, 347, 348, 355, 363, 367, 369, 375, 377, 383, 393, 401, 408, 412, 413, 416, 417, 419, 424, 437, 442, 446, 447, 448, 449, 451, 452, 454, 455, 456, 462, 471, 484, 485, 486, 492, 494, 495, 496, 497, 498, 499, 502, 507, 508, 509, 513, 514], "same": [0, 3, 4, 5, 6, 19, 47, 49, 55, 66, 77, 80, 88, 102, 103, 104, 110, 115, 139, 151, 152, 155, 160, 166, 175, 178, 181, 182, 188, 200, 204, 205, 223, 240, 241, 245, 283, 285, 288, 292, 311, 314, 315, 317, 318, 324, 330, 331, 333, 334, 340, 343, 344, 345, 346, 347, 355, 357, 361, 367, 392, 394, 402, 412, 413, 415, 416, 417, 419, 437, 442, 446, 452, 454, 455, 456, 468, 484, 485, 487, 492, 494, 496, 498, 499, 503, 507, 513, 514], "sinc": [0, 1, 3, 6, 7, 19, 45, 47, 56, 78, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 119, 140, 142, 151, 155, 162, 165, 166, 167, 169, 171, 173, 176, 183, 202, 204, 205, 208, 220, 223, 240, 241, 252, 256, 261, 266, 283, 285, 288, 293, 305, 308, 311, 317, 331, 333, 336, 342, 344, 346, 347, 348, 355, 363, 386, 400, 402, 406, 408, 442, 454, 480, 484, 486, 492, 494, 496, 498, 499, 502, 505, 507], "affect": [0, 5, 76, 104, 228, 288, 311, 333, 349, 399, 400, 416, 455, 456, 487, 498, 507], "behavior": [0, 1, 3, 5, 34, 78, 119, 145, 179, 205, 220, 223, 228, 238, 241, 249, 283, 292, 293, 305, 311, 324, 330, 333, 344, 347, 368, 375, 403, 408, 417, 451, 486, 487, 513], "time": [0, 1, 2, 3, 4, 5, 6, 14, 15, 19, 26, 32, 44, 45, 47, 50, 77, 78, 104, 144, 151, 152, 155, 160, 163, 167, 175, 203, 204, 208, 211, 212, 219, 238, 240, 241, 245, 252, 254, 256, 261, 263, 282, 283, 285, 294, 308, 311, 317, 324, 330, 331, 341, 347, 367, 382, 383, 384, 397, 399, 400, 402, 411, 412, 413, 415, 416, 418, 422, 449, 450, 452, 454, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 492, 494, 498, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514], "gener": [0, 2, 3, 4, 5, 19, 22, 23, 25, 27, 28, 34, 39, 43, 45, 46, 56, 61, 66, 70, 77, 78, 89, 144, 145, 146, 151, 152, 153, 155, 159, 160, 162, 165, 174, 176, 197, 200, 203, 204, 212, 214, 219, 220, 221, 228, 231, 232, 234, 235, 238, 240, 241, 245, 247, 252, 254, 256, 257, 259, 263, 264, 266, 270, 272, 274, 278, 279, 283, 285, 288, 289, 294, 295, 305, 308, 311, 312, 314, 315, 317, 318, 319, 321, 330, 331, 332, 333, 339, 340, 342, 344, 348, 368, 372, 373, 376, 377, 383, 393, 400, 401, 402, 405, 410, 411, 416, 418, 426, 442, 443, 446, 448, 449, 450, 452, 454, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 486, 487, 494, 495, 497, 498, 499, 500, 501, 503, 505, 507, 509, 510, 513], "safe": [0, 47, 220, 282, 283, 308, 334, 342, 346, 367, 375, 386, 505], "re": [0, 3, 5, 8, 20, 65, 84, 104, 113, 145, 153, 155, 162, 166, 219, 285, 305, 311, 312, 314, 318, 330, 341, 355, 366, 411, 413, 419, 438, 442, 449, 455, 471, 480, 485, 486, 494, 497, 498, 499, 502, 503, 507, 514], "therefor": [0, 3, 5, 151, 169, 204, 240, 245, 283, 299, 311, 324, 331, 333, 337, 347, 413, 416, 418, 436, 449, 455, 507, 509, 513], "runtimeerror": [0, 3, 6, 20, 32, 47, 56, 58, 78, 160, 204, 211, 252, 283, 288, 316, 324, 355, 377, 390, 393, 399], "attempt": [0, 3, 4, 5, 47, 49, 55, 58, 65, 240, 283, 290, 293, 295, 330, 333, 345, 346, 348, 369, 376, 400, 401, 411, 413, 417, 442, 484, 486, 488, 510, 513], "unless": [0, 20, 44, 153, 155, 162, 331, 339, 411, 419, 451, 452, 454, 455, 456, 484, 485, 498, 507, 509, 514], "we": [0, 1, 2, 3, 4, 5, 6, 9, 14, 16, 19, 26, 31, 45, 55, 58, 74, 77, 80, 81, 83, 88, 89, 90, 92, 93, 95, 96, 97, 99, 102, 104, 105, 110, 111, 112, 115, 116, 129, 139, 140, 142, 154, 155, 159, 160, 162, 165, 166, 169, 175, 187, 188, 192, 193, 194, 197, 201, 204, 205, 211, 212, 219, 220, 223, 226, 229, 238, 240, 250, 252, 256, 259, 262, 263, 266, 267, 283, 285, 288, 289, 292, 293, 294, 295, 299, 303, 305, 308, 311, 312, 316, 329, 330, 331, 334, 339, 341, 342, 344, 346, 347, 348, 350, 355, 356, 359, 360, 362, 363, 366, 367, 375, 380, 384, 391, 392, 393, 394, 395, 397, 399, 401, 408, 412, 413, 415, 419, 421, 427, 437, 442, 446, 448, 451, 452, 453, 454, 455, 456, 462, 473, 476, 483, 484, 485, 489, 491, 492, 494, 495, 496, 497, 498, 499, 502, 507, 509, 510, 511, 513, 514], "ar": [0, 1, 3, 4, 5, 6, 8, 9, 10, 15, 19, 20, 21, 26, 32, 33, 37, 39, 42, 43, 44, 45, 46, 47, 50, 55, 56, 58, 60, 66, 77, 78, 79, 80, 81, 82, 83, 87, 89, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 108, 110, 111, 112, 113, 115, 116, 125, 129, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 144, 145, 151, 152, 153, 154, 155, 159, 162, 163, 165, 167, 168, 169, 173, 174, 175, 182, 184, 188, 190, 194, 197, 200, 201, 202, 203, 204, 205, 208, 211, 212, 213, 214, 216, 219, 220, 223, 224, 227, 228, 229, 240, 241, 243, 245, 247, 249, 250, 252, 254, 256, 259, 261, 263, 266, 271, 278, 281, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 298, 299, 301, 303, 305, 306, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 324, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 363, 366, 368, 369, 372, 374, 375, 376, 377, 380, 381, 383, 390, 391, 393, 394, 396, 399, 400, 401, 407, 408, 410, 411, 412, 413, 416, 417, 418, 419, 421, 426, 428, 430, 434, 442, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 468, 470, 475, 477, 480, 482, 483, 484, 485, 486, 487, 490, 491, 492, 495, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514], "plan": [0, 167, 451, 485, 498, 507, 514], "encapsul": [0, 200], "much": [0, 1, 3, 5, 19, 51, 93, 136, 152, 198, 204, 241, 283, 288, 289, 290, 331, 333, 337, 339, 356, 382, 401, 408, 449, 451, 452, 456, 483, 484, 492, 494, 498, 507, 509], "global": [0, 77, 79, 153, 155, 169, 173, 175, 204, 214, 245, 247, 249, 251, 252, 254, 267, 283, 285, 288, 308, 311, 330, 331, 335, 341, 342, 344, 347, 367, 369, 372, 403, 419, 437, 450, 471, 484, 486, 487, 496, 499, 505, 507, 508], "get": [0, 2, 3, 4, 5, 6, 14, 21, 22, 26, 28, 33, 45, 47, 55, 56, 60, 77, 78, 79, 82, 89, 93, 102, 104, 135, 144, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 167, 173, 183, 200, 201, 202, 204, 214, 219, 220, 240, 247, 252, 269, 283, 285, 288, 290, 293, 294, 298, 305, 308, 311, 318, 324, 328, 330, 331, 339, 340, 341, 342, 344, 345, 346, 347, 351, 354, 355, 356, 357, 363, 366, 367, 375, 380, 384, 391, 392, 400, 401, 404, 406, 412, 413, 418, 421, 424, 425, 442, 443, 447, 448, 450, 451, 452, 453, 454, 456, 486, 490, 492, 494, 495, 497, 498, 506, 507, 508, 509, 513], "itself": [0, 3, 5, 45, 49, 65, 151, 152, 200, 288, 305, 331, 342, 344, 348, 355, 368, 400, 401, 442, 446, 447, 449, 451, 454, 478, 484, 486, 492, 494, 497, 498, 507, 510], "thing": [0, 1, 3, 5, 6, 10, 19, 23, 25, 28, 55, 60, 104, 151, 154, 163, 198, 215, 220, 245, 252, 283, 288, 293, 294, 303, 305, 311, 330, 331, 332, 333, 334, 335, 339, 341, 342, 344, 346, 357, 361, 367, 368, 369, 377, 384, 401, 412, 415, 447, 449, 451, 452, 454, 455, 456, 457, 482, 483, 484, 486, 492, 494, 497, 498, 499, 500, 507, 509, 513], "go": [0, 9, 19, 104, 155, 216, 219, 220, 271, 283, 285, 288, 289, 308, 318, 331, 333, 346, 382, 412, 416, 446, 451, 452, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 485, 494, 507, 508, 514], "number": [0, 3, 4, 5, 9, 10, 19, 26, 31, 44, 47, 50, 55, 74, 78, 82, 89, 104, 120, 137, 151, 152, 153, 154, 155, 166, 167, 169, 172, 175, 182, 197, 200, 201, 204, 211, 219, 220, 224, 237, 240, 241, 245, 247, 252, 256, 261, 266, 285, 288, 291, 292, 301, 303, 307, 308, 311, 316, 317, 318, 319, 324, 326, 329, 330, 331, 333, 337, 340, 342, 344, 346, 350, 351, 355, 356, 357, 359, 363, 367, 369, 375, 384, 390, 392, 400, 401, 404, 408, 410, 411, 412, 416, 417, 418, 424, 428, 435, 437, 442, 449, 452, 456, 469, 477, 486, 487, 488, 490, 493, 494, 495, 496, 498, 499, 502, 503, 504, 505, 507, 508, 509, 512, 513], "benefit": [0, 3, 45, 56, 133, 340, 341, 344, 446, 449, 478, 484], "main": [0, 3, 5, 6, 20, 42, 45, 60, 74, 80, 151, 152, 167, 201, 204, 205, 214, 238, 282, 283, 288, 291, 292, 311, 346, 352, 393, 419, 448, 449, 456, 471, 478, 479, 485, 487, 492, 494, 507, 509, 514], "being": [0, 3, 4, 5, 19, 21, 37, 47, 49, 66, 78, 79, 104, 145, 151, 152, 155, 163, 166, 172, 177, 178, 179, 183, 204, 219, 220, 224, 228, 238, 241, 245, 256, 283, 285, 288, 293, 300, 308, 311, 317, 318, 324, 329, 330, 333, 335, 339, 348, 362, 377, 390, 400, 407, 412, 415, 417, 418, 443, 456, 480, 484, 487, 492, 494, 502, 507, 509, 510], "becom": [0, 19, 43, 163, 283, 288, 307, 308, 317, 331, 341, 343, 344, 380, 416, 419, 447, 448, 449, 484, 507], "trivial": [0, 49, 308, 311, 334, 347, 396, 408, 413, 452, 456], "current": [0, 2, 3, 5, 6, 19, 21, 26, 32, 47, 49, 55, 63, 77, 78, 104, 151, 162, 164, 165, 167, 170, 171, 173, 175, 176, 190, 200, 201, 204, 214, 219, 220, 240, 241, 245, 252, 256, 263, 283, 288, 289, 293, 308, 311, 316, 318, 331, 333, 335, 342, 347, 350, 352, 355, 369, 375, 376, 377, 400, 401, 403, 412, 419, 442, 451, 452, 454, 455, 456, 463, 486, 489, 492, 502, 503, 504, 507, 510, 512, 513], "applyasynciowindowsworkaround": [0, 445], "appli": [0, 1, 3, 6, 56, 78, 79, 82, 89, 104, 105, 135, 144, 145, 155, 200, 214, 220, 240, 241, 252, 267, 271, 281, 283, 285, 288, 289, 290, 292, 293, 294, 295, 301, 308, 311, 315, 316, 330, 331, 333, 339, 342, 344, 346, 348, 368, 400, 411, 419, 446, 448, 452, 456, 470, 471, 478, 479, 486, 487, 492, 494, 498, 499, 502, 503, 504, 507, 509], "asyncio": 0, "workaround": 0, "window": [0, 1, 21, 28, 31, 77, 446, 484, 485, 489, 507, 514], "3": [0, 3, 5, 9, 19, 21, 26, 34, 35, 46, 56, 69, 70, 78, 80, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 108, 111, 112, 113, 116, 129, 135, 136, 137, 139, 140, 142, 146, 151, 152, 153, 155, 163, 167, 171, 173, 176, 177, 179, 187, 192, 200, 211, 219, 220, 237, 238, 245, 249, 285, 288, 292, 293, 301, 305, 308, 310, 311, 312, 318, 326, 329, 331, 333, 334, 337, 340, 341, 342, 355, 356, 361, 366, 377, 382, 400, 401, 410, 411, 412, 419, 421, 438, 441, 446, 449, 452, 456, 462, 464, 470, 472, 474, 480, 484, 485, 490, 491, 492, 495, 496, 497, 498, 502, 503, 504, 505, 507, 509, 511, 513, 514], "8": [0, 9, 78, 81, 112, 137, 142, 153, 220, 241, 247, 293, 317, 318, 333, 334, 337, 341, 342, 357, 361, 364, 404, 408, 411, 416, 419, 454, 462, 469, 470, 471, 472, 473, 492, 496, 497, 498, 499, 507], "prevent": [0, 2, 33, 252, 283, 330, 344, 346, 362, 384, 395, 417, 485, 514], "notimplementederror": [0, 24, 494], "hi": [0, 502, 503, 504], "show": [0, 19, 21, 27, 28, 34, 45, 159, 167, 173, 188, 190, 191, 202, 267, 303, 314, 324, 330, 341, 355, 356, 384, 395, 399, 400, 402, 412, 416, 418, 419, 452, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 480, 483, 496, 499, 507, 509], "dure": [0, 1, 3, 5, 14, 15, 19, 21, 32, 76, 78, 79, 89, 104, 151, 155, 162, 163, 165, 169, 202, 204, 214, 228, 238, 240, 252, 256, 259, 283, 284, 288, 292, 308, 311, 314, 315, 316, 322, 324, 328, 330, 331, 346, 355, 356, 362, 367, 377, 395, 428, 446, 447, 449, 456, 483, 484, 485, 487, 489, 490, 492, 494, 503, 507, 509, 514], "jupyt": [0, 33, 34, 395, 450, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 492], "notebook": [0, 33, 34, 395, 450, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480], "document": [0, 23, 26, 27, 33, 34, 94, 95, 96, 97, 98, 99, 104, 165, 167, 174, 200, 285, 289, 295, 333, 340, 344, 442, 448, 449, 450, 451, 454, 455, 483, 484, 486, 487, 492, 494, 497, 498, 499, 502, 503, 504, 505, 507, 509, 510, 512], "see": [0, 1, 3, 5, 7, 19, 26, 66, 104, 116, 142, 155, 162, 165, 171, 176, 178, 200, 204, 205, 241, 283, 284, 285, 288, 289, 292, 295, 308, 311, 314, 316, 318, 322, 324, 330, 331, 333, 335, 337, 340, 343, 344, 347, 362, 377, 400, 401, 408, 413, 416, 418, 443, 446, 448, 451, 452, 455, 476, 484, 485, 487, 492, 494, 495, 497, 498, 499, 502, 503, 504, 505, 507, 509, 510, 512, 513, 514], "http": [0, 21, 80, 81, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 108, 113, 130, 133, 135, 137, 139, 152, 162, 165, 167, 173, 175, 184, 306, 307, 347, 416, 419, 437, 442, 443, 446, 484, 485, 487, 498, 514], "bug": [0, 144, 173, 283, 341, 448, 451, 455, 456, 484, 492], "org": [0, 21, 84, 85, 86, 88, 99, 101, 130, 133, 135, 139, 165, 416, 443, 446, 484, 498], "issue37373": 0, "bookkeep": [0, 78, 138, 288, 331, 347, 418, 445, 454, 487, 489, 492, 507, 509], "bookkeepingplugin": [0, 2, 445], "exposeinterfac": [0, 2, 57, 58, 212, 215, 228, 231, 238, 275, 278, 283, 383, 396, 399, 494], "defineentrypoint": [0, 2, 60, 212, 238, 283, 494], "definecasedepend": [0, 2, 283, 494], "mpiactionrequiresreset": [0, 2, 283, 486], "getreportcont": [0, 2, 212, 238, 283, 450], "db": [0, 2, 19, 20, 34, 74, 145, 153, 154, 204, 211, 331, 347, 363, 399, 418, 455, 486, 489, 490, 492, 497, 499, 507, 509], "databas": [0, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 39, 45, 46, 47, 60, 64, 70, 74, 78, 144, 145, 155, 204, 208, 238, 256, 283, 284, 285, 308, 311, 334, 339, 341, 344, 346, 347, 362, 371, 400, 416, 449, 455, 471, 478, 479, 483, 484, 486, 487, 489, 490, 493, 494, 497, 499, 506, 507], "revis": [0, 2, 139, 446], "changelog": [0, 2], "databaseinterfac": [0, 2, 3, 5, 15, 418, 487, 489, 507], "comparedatabas": [0, 2, 3, 4, 13], "databasefactori": [0, 2, 3, 7, 492, 509], "loadoper": [0, 2, 3, 204, 487, 490], "report": [0, 2, 4, 21, 34, 41, 61, 70, 78, 101, 116, 167, 212, 218, 238, 283, 288, 308, 311, 373, 375, 397, 400, 402, 416, 418, 449, 450, 471, 478, 484, 487, 492, 497, 499, 506, 508], "setdata": [0, 2, 22], "visual": [0, 2, 5, 240, 307, 416, 453, 483, 484, 486, 494, 503, 513], "historytrack": [0, 2, 418, 492], "histori": [0, 2, 3, 5, 6, 34, 78, 211, 219, 252, 256, 283, 331, 333, 346, 412, 418, 441, 449, 455, 471, 478, 479, 486, 490, 492], "inform": [0, 2, 3, 5, 6, 9, 10, 21, 23, 27, 28, 31, 45, 47, 55, 56, 77, 78, 83, 90, 104, 112, 137, 139, 151, 152, 153, 155, 162, 166, 167, 169, 171, 172, 173, 176, 179, 182, 195, 201, 202, 204, 205, 214, 219, 220, 240, 252, 259, 278, 283, 285, 288, 290, 291, 292, 293, 311, 315, 316, 317, 330, 331, 333, 341, 342, 344, 346, 355, 367, 376, 377, 404, 416, 418, 424, 442, 443, 448, 449, 452, 454, 455, 471, 478, 479, 484, 489, 492, 498, 499, 503, 507, 508, 509, 513], "describeinterfac": [0, 2, 3, 6, 19, 20, 21, 22, 27, 32, 78, 212, 238, 240, 244, 245, 283], "historytrackerinterfac": [0, 2, 19, 418], "maininterfac": [0, 2], "memoryprofil": [0, 2, 35, 471, 478, 479, 492], "gettotaljobmemori": [0, 2, 21], "getcurrentmemoryusag": [0, 2, 21], "klasscount": [0, 2, 21], "instancecount": [0, 2, 21], "profilememoryusageact": [0, 2, 21], "systemandprocessmemoryusag": [0, 2, 21], "printsystemmemoryusageact": [0, 2, 21], "snapshotinterfac": [0, 2, 487], "extractcyclenodefromstamp": [0, 2, 32], "getcyclenodestamp": [0, 2, 32], "inputmodifi": [0, 46, 56, 59, 312, 322, 497], "copyinterfaceinput": [0, 46, 47, 58, 487, 490], "suit": [0, 2, 46, 47, 53, 56, 58, 59, 60, 63, 64, 72, 75, 283, 312, 316, 329, 335, 447, 449, 479, 486, 487, 494, 497], "casesuit": [0, 46, 47, 55, 56, 58, 64, 78, 283, 497], "suitebuild": [0, 46, 47, 59, 486, 497], "getinputmodifi": [0, 46, 56], "fullfactorialsuitebuild": [0, 46, 56, 59, 497], "fullfactorialsuitebuildernoisi": [0, 46, 56], "separateeffectssuitebuild": [0, 46, 56, 497], "latinhypercubesuitebuild": [0, 46, 56, 59], "cli": [0, 46, 77, 283, 445, 447, 449, 456, 483, 487, 490, 494, 508], "entrypointsplugin": [0, 60, 445], "armipars": [0, 60, 445], "print_help": [0, 60], "armicli": [0, 60, 75, 445, 494], "showvers": [0, 60, 75], "listcommand": [0, 60], "executecommand": [0, 60, 74], "splash": [0, 1, 60, 61, 66, 445, 485, 494, 514], "checkinput": [0, 46, 47, 58, 60], "expandblueprint": [0, 60, 61], "checkinputentrypoint": [0, 60, 61], "cleantemp": [0, 60], "clone": [0, 46, 47, 55, 58, 60, 74, 78, 283, 369, 411, 446, 484, 485, 486, 487, 514], "clonearmiruncommandbatch": [0, 60, 63], "clonearmiruncommandinteract": [0, 60, 63], "clonesuitecommand": [0, 60, 63], "comparecas": [0, 60, 490], "comparesuit": [0, 60, 64], "extractinput": [0, 60, 65], "injectinput": [0, 60, 65], "entrypoint": [0, 2, 37, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 74, 242, 283, 381, 447, 487], "storebool": [0, 60, 66], "setset": [0, 60, 66], "setcasetitl": [0, 60, 66], "loadset": [0, 60, 66], "gridgui": [0, 60], "gridguientrypoint": [0, 60, 67], "migrateinput": [0, 60], "modifi": [0, 3, 47, 49, 50, 53, 54, 56, 60, 63, 65, 104, 152, 155, 159, 173, 187, 192, 193, 194, 197, 240, 245, 247, 254, 256, 282, 285, 288, 308, 312, 314, 315, 317, 318, 321, 322, 326, 329, 330, 331, 339, 346, 347, 349, 352, 356, 357, 361, 363, 368, 369, 375, 380, 404, 411, 417, 456, 468, 484, 485, 487, 489, 493, 498, 507, 509, 514], "modifycasesettingscommand": [0, 60, 69], "reportsentrypoint": [0, 60, 490], "createreportfromset": [0, 60, 70], "runentrypoint": [0, 60, 71, 72, 449], "runsuit": [0, 60, 75], "runsuitecommand": [0, 60, 72], "materi": [0, 9, 154, 155, 162, 213, 228, 237, 240, 241, 252, 283, 284, 285, 288, 289, 290, 291, 292, 294, 295, 297, 300, 301, 303, 304, 305, 306, 307, 308, 310, 311, 314, 316, 318, 319, 324, 330, 333, 354, 355, 356, 357, 383, 388, 404, 416, 424, 445, 448, 449, 451, 461, 463, 465, 467, 468, 470, 471, 478, 479, 481, 482, 483, 484, 486, 487, 489, 490, 492, 493, 498, 499, 500, 502, 503, 504, 507, 508, 509, 512, 513], "setmaterialnamespaceord": [0, 79, 445, 494], "importmaterialsintomodulenamespac": [0, 79, 445], "iterallmaterialclassesinnamespac": [0, 79, 445, 477], "resolvematerialclassbynam": [0, 79, 125, 445], "air": [0, 79, 120], "alloy200": [0, 79, 125, 487], "b4c": [0, 79, 121, 303, 487, 492, 497, 498, 503, 507], "be9": [0, 79, 122], "cah2": [0, 79, 125], "californium": [0, 79, 125, 153, 477], "concret": [0, 3, 6, 15, 19, 20, 21, 27, 32, 58, 78, 79, 145, 155, 160, 166, 211, 218, 224, 240, 245, 252, 261, 293, 311, 330, 390, 393, 399, 487, 489], "copper": [0, 79, 153, 487], "cu": [0, 79, 81, 87, 125, 153, 507], "graphit": [0, 79, 123, 160, 162], "hafnium": [0, 79, 125, 153], "hastelloyn": [0, 79, 125], "ht9": [0, 79, 104, 160, 301, 324, 356, 357, 470, 478, 486, 492, 498, 507, 508], "inconel": [0, 79, 95, 96, 98, 99, 487], "inconel617": [0, 79, 94], "inconel600": [0, 79, 125], "inconel625": [0, 79, 125], "inconel800": [0, 79], "inconelpe16": [0, 79], "inconelx750": [0, 79, 125], "lead": [0, 3, 4, 5, 78, 79, 101, 125, 153, 165, 166, 200, 219, 249, 283, 288, 311, 333, 344, 386, 397, 402, 408, 419, 427, 451, 455, 486, 490, 507, 509], "leadbismuth": [0, 79, 125], "lithium": [0, 79, 124, 153, 487, 507], "magnesium": [0, 79, 105, 125, 153], "parentawaredensityredirect": [0, 79, 104], "fluid": [0, 79, 80, 88, 100, 101, 102, 103, 104, 110, 113, 115, 138, 139, 212, 219, 316, 333, 490, 507], "simplesolid": [0, 79, 84, 85, 91, 94, 98, 104, 107, 109, 114, 117, 133, 137], "fuelmateri": [0, 79, 104, 131, 132, 133, 134, 135, 136, 137, 404, 507], "mgo": [0, 79, 125], "mixtur": [0, 79, 108, 288, 324, 342, 404, 486, 507], "molybdenum": [0, 79, 125, 153], "mox": [0, 79, 125, 137, 284, 294, 333, 357, 487], "nz": [0, 79, 125], "potassium": [0, 79, 125, 153, 487], "scandiumoxid": [0, 79], "sc2o3": [0, 79, 111, 125], "sic": [0, 79, 126], "sodium": [0, 79, 110, 114, 125, 153, 228, 285, 294, 355, 356, 357, 451, 470, 478, 483, 484, 492, 494, 498, 499, 507], "sodiumchlorid": [0, 79], "nacl": [0, 79, 114, 125], "sulfur": [0, 79, 125, 127, 153, 507], "tzm": [0, 79, 125], "tantalum": [0, 79, 125, 153], "thu": [0, 34, 49, 79, 125, 162, 172, 212, 214, 241, 285, 288, 311, 318, 341, 342, 393, 401, 471, 484, 498, 499, 507], "thorium": [0, 79, 125, 131, 133, 134, 153, 507], "thoriumoxid": [0, 79, 125, 128, 487, 507], "tho2": [0, 79, 128, 133], "uthzr": [0, 79, 354, 507], "uzr": [0, 79, 104, 125, 129, 297, 301, 303, 311, 354, 357, 470, 492, 498, 507], "uranium": [0, 79, 104, 125, 131, 134, 137, 152, 153, 155, 301, 308, 311, 484, 492, 495, 496, 498, 507], "uraniumoxid": [0, 79, 108, 125, 301, 400, 420, 424, 487, 495, 507], "heatcapacityconst": [0, 79, 137], "uo2": [0, 79, 108, 137, 301, 311, 495, 513], "void": [0, 79, 93, 104, 125, 240, 256, 284, 288, 301, 306, 308, 311, 317, 333, 356, 364, 478, 492, 498, 499, 503, 505, 507, 513], "water": [0, 79, 130, 160, 245, 483, 499], "saturatedwat": [0, 79, 139, 499], "saturatedsteam": [0, 79, 139], "yttriumoxid": [0, 79], "y2o3": [0, 79, 125, 140], "zincoxid": [0, 79], "zno": [0, 79, 125, 141, 301], "zr": [0, 79, 104, 125, 134, 135, 153, 154, 155, 288, 294, 297, 299, 301, 303, 311, 492, 497, 499, 504], "migrat": [0, 3, 5, 47, 60, 65, 68, 283, 284, 289, 295, 312, 331, 333, 352, 375, 376, 445, 486, 492], "blueprintsmigr": [0, 144, 145, 146], "settingsmigr": [0, 144, 145, 147], "databasemigr": [0, 144, 145], "m0_1_3": [0, 144], "removecentersfromblueprint": [0, 144, 146], "updateelementalnuclid": [0, 144, 146], "m0_1_6": [0, 144], "convertalphanumlocationsettingstonum": [0, 144, 147], "getindicesfromdif3dstylelocatorlabel": [0, 144, 147], "nucdirectori": [0, 167, 202, 311, 416, 445, 462, 469, 477, 480, 496], "element": [0, 4, 5, 8, 9, 26, 45, 80, 82, 85, 91, 104, 146, 154, 155, 157, 162, 215, 283, 292, 294, 308, 310, 311, 342, 352, 355, 383, 400, 404, 408, 411, 412, 419, 424, 445, 449, 450, 470, 477, 484, 486, 492, 493, 497, 499, 507], "name": [0, 1, 2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 44, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 81, 82, 83, 87, 89, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 145, 149, 150, 153, 154, 155, 157, 158, 159, 160, 161, 163, 165, 166, 167, 170, 173, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 204, 209, 210, 211, 212, 214, 215, 218, 219, 222, 223, 224, 225, 226, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 254, 256, 259, 260, 261, 263, 266, 267, 268, 269, 270, 271, 274, 281, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 314, 317, 318, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 340, 341, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 408, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 447, 449, 450, 454, 456, 468, 469, 477, 478, 480, 483, 485, 486, 487, 492, 494, 496, 497, 498, 499, 502, 503, 504, 505, 509, 512, 513, 514], "label": [0, 3, 5, 26, 83, 90, 104, 112, 137, 139, 147, 154, 155, 159, 162, 164, 165, 189, 201, 202, 214, 219, 229, 240, 252, 254, 263, 274, 284, 285, 288, 311, 334, 335, 339, 340, 366, 367, 375, 384, 401, 416, 418, 454, 468, 470, 475, 480, 486, 487, 494, 496, 504, 507], "id": [0, 26, 43, 54, 155, 159, 201, 223, 240, 241, 256, 266, 285, 293, 301, 306, 307, 308, 310, 317, 322, 332, 356, 357, 419, 470, 471, 478, 479, 487, 490, 492, 498, 499, 503, 507, 508, 513], "indic": [0, 3, 8, 9, 19, 26, 43, 78, 104, 147, 155, 162, 165, 166, 167, 172, 175, 177, 178, 179, 182, 190, 201, 202, 204, 241, 245, 283, 285, 288, 293, 294, 308, 311, 315, 317, 331, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 347, 352, 355, 377, 383, 396, 401, 412, 416, 418, 419, 428, 437, 449, 455, 472, 486, 498, 503, 507, 509, 513], "rapid": [0, 484], "access": [0, 19, 20, 101, 151, 160, 166, 167, 204, 211, 247, 257, 283, 288, 289, 308, 311, 315, 330, 332, 344, 346, 347, 403, 415, 417, 419, 449, 454, 484, 486, 492, 493, 494, 506, 507, 513], "chemicalphas": [0, 152, 153, 496], "chemicalgroup": [0, 152, 153, 496], "getelementsbychemicalphas": [0, 152, 153], "getelementsbychemicalgroup": [0, 152, 153], "getnam": [0, 19, 79, 104, 152, 153, 284, 311, 357, 492], "getsymbol": [0, 152, 153], "getelementz": [0, 152, 153], "factori": [0, 2, 3, 56, 59, 79, 152, 153, 155, 162, 203, 204, 217, 284, 305, 308, 347, 350, 445, 449, 452, 472, 493], "addglobalel": [0, 152, 153], "destroyglobalel": [0, 152, 153], "nucdir": [0, 152], "getnuclidefromnam": [0, 152, 154], "getnaturalisotop": [0, 152, 153, 154, 155], "getnaturalmassisotop": [0, 152, 154], "getmc2label": [0, 152, 154], "getelementnam": [0, 152, 154], "getelementsymbol": [0, 152, 154], "getnuclid": [0, 79, 104, 152, 154, 164, 173, 196, 197, 201, 284, 305, 308, 311, 357, 475, 476], "getnuclidenam": [0, 152, 154], "getatomicweight": [0, 152, 154, 284, 311], "isheavymet": [0, 152, 153, 154, 155, 496], "isfissil": [0, 152, 154, 155, 165, 167], "getthresholddisplacementenergi": [0, 152, 154], "nuclidebas": [0, 152, 154, 159, 160, 162, 163, 169, 247, 294, 311, 404, 462, 469, 470, 477, 480, 490, 496], "nuclideinterfac": [0, 152, 155], "nuclidewrapp": [0, 152, 155, 202], "inuclid": [0, 152, 154, 155, 162, 202], "imcnpnuclid": [0, 152, 155], "naturalnuclidebas": [0, 83, 90, 112, 137, 139, 152, 153, 154, 155, 162, 294, 496], "dummynuclidebas": [0, 152, 155, 496], "lumpnuclidebas": [0, 152, 155, 496], "initreachableactivenuclidesthroughburnchain": [0, 152, 155], "isotop": [0, 89, 91, 104, 108, 125, 152, 154, 155, 162, 165, 173, 200, 241, 245, 247, 268, 289, 292, 294, 299, 300, 301, 305, 306, 307, 308, 310, 311, 356, 404, 416, 424, 483, 486, 489, 490, 492, 496, 497, 498, 504], "getisotop": [0, 152, 155], "fromnam": [0, 152, 155, 480], "ismonoisotopicel": [0, 152, 155], "singl": [0, 3, 5, 6, 8, 19, 38, 45, 47, 56, 152, 155, 166, 167, 200, 202, 204, 219, 223, 226, 240, 241, 285, 288, 292, 294, 305, 307, 308, 311, 317, 318, 324, 326, 331, 333, 335, 337, 342, 354, 355, 356, 366, 367, 384, 392, 396, 399, 400, 408, 411, 416, 419, 437, 452, 454, 455, 456, 470, 480, 484, 487, 489, 494, 498, 503, 507, 509, 510, 513], "changelabel": [0, 152, 155], "getdepletablenuclid": [0, 152, 155], "imposeburnchain": [0, 152, 155, 480], "addnuclidebas": [0, 152, 155], "readmccnuclidedata": [0, 152, 155], "updatenuclidebasesforspecialcas": [0, 152, 155], "addglobalnuclid": [0, 152, 155], "destroyglobalnuclid": [0, 152, 155], "thermalscatt": [0, 83, 90, 104, 112, 137, 139, 152, 160], "transmut": [0, 152, 155, 159, 161, 202, 238, 294, 467, 481, 482, 500, 503, 507], "decaymod": [0, 152, 155, 163], "nucleardataio": [0, 261, 331, 445, 470, 475, 476], "getexpectedisotxsfilenam": [0, 164, 445], "getexpectedcompxsfilenam": [0, 164, 445], "getexpectedgamisofilenam": [0, 164, 445], "getexpectedpmatrxfilenam": [0, 164, 445], "cccc": [0, 152, 164, 201, 470, 475, 476, 486], "system": [0, 3, 5, 6, 19, 27, 28, 31, 33, 37, 77, 155, 164, 175, 203, 204, 205, 212, 214, 218, 219, 228, 241, 245, 252, 283, 284, 285, 288, 289, 293, 295, 304, 308, 333, 334, 335, 337, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 359, 375, 377, 379, 380, 393, 394, 401, 402, 405, 408, 413, 446, 449, 451, 456, 463, 464, 471, 478, 479, 483, 485, 486, 489, 491, 492, 497, 498, 509, 514], "implement": [0, 1, 3, 5, 8, 20, 32, 44, 45, 49, 56, 58, 60, 66, 78, 79, 93, 104, 139, 145, 151, 152, 155, 164, 166, 169, 173, 211, 215, 219, 223, 238, 240, 241, 245, 252, 256, 282, 283, 288, 293, 311, 318, 319, 324, 330, 331, 337, 339, 342, 344, 346, 351, 355, 390, 393, 396, 399, 400, 401, 408, 411, 447, 449, 454, 456, 487, 488, 489, 494, 496, 499, 507, 509, 510, 513], "detail": [0, 3, 5, 6, 19, 32, 39, 61, 66, 70, 74, 78, 93, 104, 164, 203, 211, 216, 219, 237, 241, 245, 252, 256, 283, 288, 289, 291, 292, 293, 311, 312, 331, 333, 390, 441, 449, 456, 463, 464, 484, 486, 487, 489, 490, 492, 493, 495, 497, 498, 499, 503, 508, 509], "discuss": [0, 5, 152, 164, 245, 283, 344, 449, 451, 452, 484, 494, 498, 507, 513], "nuclearfilemetadata": [0, 164], "filemetadata": [0, 164, 195], "nuclidexsmetadata": [0, 164, 195], "regionxsmetadata": [0, 164, 195], "nuclidemetadata": [0, 164, 195], "xscollect": [0, 164, 197, 202, 355, 416], "macroscopiccrosssectioncr": [0, 164, 200], "computeblockaveragechi": [0, 164, 200], "computeneutronenergydepositionconst": [0, 164, 200], "computegammaenergydepositionconst": [0, 164, 200], "computefissionenergygenerationconst": [0, 164, 200], "computecaptureenergygenerationconst": [0, 164, 200], "computemacroscopicgroupconst": [0, 164, 200], "xslibrari": [0, 164, 167, 169, 171, 173, 176, 198, 200, 202, 252], "compar": [0, 1, 3, 4, 32, 46, 47, 55, 56, 58, 64, 164, 165, 167, 169, 171, 172, 173, 176, 182, 186, 199, 200, 201, 202, 219, 223, 224, 242, 314, 324, 331, 334, 341, 342, 364, 377, 383, 416, 418, 507, 513], "comparexslibraryattribut": [0, 164, 201], "comparelibraryneutronenergi": [0, 164, 201], "getsuffixfromnuclidelabel": [0, 164, 201], "getisotxslibrariestomerg": [0, 164, 201], "mergexslibrariesinworkingdirectori": [0, 164, 201], "isotxslibrari": [0, 164, 172, 176, 179, 198, 201, 331, 416], "compxslibrari": [0, 164, 167, 201], "xsnuclid": [0, 164, 167, 200, 476], "plotscattermatrix": [0, 164, 202, 416, 476], "plotcomparescattermatrix": [0, 164, 202], "getoperatorclassfromset": [0, 203, 445], "operatormpi": [0, 2, 151, 203, 208, 283, 449], "runtyp": [0, 203, 211, 283, 441, 449, 507], "settingsvalid": [0, 203, 283, 368, 487, 490, 494], "snapshot": [0, 3, 5, 25, 32, 36, 47, 78, 203, 204, 206, 210, 238, 256, 285, 471, 478, 479, 486, 487, 492, 507], "operatorsnapshot": [0, 203, 204, 208, 449], "physic": [0, 32, 35, 50, 78, 79, 86, 87, 103, 105, 137, 152, 155, 162, 163, 164, 165, 166, 169, 173, 184, 203, 204, 208, 283, 285, 288, 292, 294, 308, 310, 311, 312, 315, 316, 317, 330, 331, 339, 344, 347, 355, 372, 445, 446, 449, 451, 463, 471, 475, 483, 486, 487, 489, 490, 492, 493, 495, 497, 498, 502, 506, 507, 509, 513], "fuelcycl": [0, 212, 256, 283, 471, 492, 498], "fuelhandlerplugin": [0, 212, 215], "fuelperform": [0, 212], "neutron": [0, 28, 50, 78, 85, 101, 154, 155, 159, 162, 163, 165, 167, 169, 170, 179, 200, 201, 202, 212, 228, 283, 285, 288, 291, 292, 305, 308, 311, 312, 321, 330, 344, 347, 416, 451, 454, 469, 475, 480, 484, 486, 487, 489, 494, 495, 496, 498, 499, 503, 505, 507], "neutronicsplugin": [0, 212, 238, 271, 283, 451], "gammatransportisrequest": [0, 212, 238], "gammaxsarerequest": [0, 212, 238], "adjointcalculationrequest": [0, 212, 238], "realcalculationrequest": [0, 212, 238], "applyeffectivedelayedneutronfractiontocor": [0, 212, 238], "latticephysicsfrequ": [0, 212, 238, 240, 259, 487, 507], "safeti": [0, 169, 212, 408, 415, 484], "safetyplugin": [0, 212, 272], "thermalhydraul": [0, 212, 344, 347, 510], "constant": [0, 21, 25, 77, 78, 81, 89, 103, 104, 159, 165, 169, 184, 200, 206, 212, 238, 239, 243, 256, 263, 271, 284, 288, 308, 311, 322, 334, 335, 339, 340, 342, 355, 372, 404, 444, 455, 470, 480, 487, 489, 494, 503, 505, 507], "dpa_cross_sect": [0, 212, 213], "execut": [0, 13, 14, 15, 16, 17, 30, 31, 34, 35, 36, 41, 42, 47, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 77, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 151, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 204, 210, 211, 212, 223, 224, 225, 226, 228, 234, 235, 236, 241, 249, 250, 252, 254, 256, 259, 260, 266, 267, 268, 269, 270, 271, 274, 281, 283, 288, 297, 298, 299, 300, 301, 302, 303, 304, 311, 324, 325, 326, 327, 328, 329, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 405, 413, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 446, 449, 452, 463, 465, 481, 484, 485, 486, 487, 492, 494, 507, 509, 514], "executionopt": [0, 212, 214, 229, 252], "defaultexecut": [0, 212, 214, 229, 252], "reactorplugin": [0, 283, 284, 445, 507], "beforereactorconstruct": [0, 283, 284, 383, 396, 490], "defineblocktyp": [0, 283, 284], "defineassemblytyp": [0, 283, 284], "definesystembuild": [0, 283, 284, 507], "getaxialexpansionchang": [0, 283, 284, 383, 396, 490], "blueprint": [0, 2, 3, 5, 10, 25, 47, 49, 55, 56, 61, 89, 104, 108, 145, 146, 155, 195, 204, 238, 240, 245, 283, 284, 285, 288, 308, 311, 324, 329, 331, 333, 347, 350, 352, 355, 363, 401, 416, 454, 455, 470, 478, 486, 487, 489, 490, 492, 493, 494, 497, 502, 504, 506], "loadfromc": [0, 284, 289, 350, 352], "compon": [0, 3, 4, 5, 9, 25, 44, 49, 51, 78, 104, 146, 153, 167, 182, 223, 226, 227, 240, 241, 245, 266, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 303, 311, 313, 314, 315, 316, 317, 324, 325, 326, 331, 333, 341, 344, 350, 355, 356, 357, 415, 416, 449, 451, 454, 462, 467, 470, 478, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 495, 497, 498, 499, 500, 503, 506, 508, 509], "nullcompon": [0, 284, 305, 356, 507], "unshapedcompon": [0, 284, 305, 309, 356, 507], "unshapedvolumetriccompon": [0, 284, 305, 507], "zeromasscompon": [0, 284, 305, 507], "positiveornegativevolumecompon": [0, 284, 305, 507], "derivedshap": [0, 284, 288, 305, 308, 356, 357, 360, 468, 470, 478, 490, 492, 498, 499, 507], "convert": [0, 3, 4, 5, 9, 26, 39, 48, 70, 95, 96, 99, 104, 147, 154, 155, 166, 190, 200, 219, 240, 252, 261, 283, 284, 288, 308, 311, 331, 333, 334, 335, 340, 341, 347, 349, 352, 359, 375, 380, 396, 401, 404, 408, 411, 412, 414, 415, 419, 440, 444, 454, 462, 463, 464, 486, 487, 489, 492, 507], "grid": [0, 3, 5, 9, 14, 45, 49, 67, 223, 241, 252, 283, 284, 285, 288, 289, 293, 295, 298, 302, 311, 315, 316, 317, 324, 331, 332, 351, 352, 355, 361, 363, 401, 410, 416, 419, 421, 437, 449, 467, 468, 470, 475, 477, 478, 481, 482, 483, 484, 485, 486, 487, 489, 490, 492, 495, 498, 500, 505, 506, 514], "locatorlabeltoindic": [0, 284, 335], "basic": [0, 4, 14, 16, 20, 28, 31, 32, 46, 139, 151, 152, 155, 254, 259, 260, 261, 284, 289, 299, 306, 311, 321, 330, 335, 340, 355, 357, 375, 391, 397, 404, 423, 425, 434, 437, 439, 442, 447, 449, 452, 453, 456, 483, 484, 494, 497, 498, 499, 507, 508], "usag": [0, 4, 21, 35, 60, 151, 202, 284, 345, 400, 401, 416, 418, 452, 455, 487, 507], "consider": [0, 44, 238, 240, 283, 284, 342, 402], "reset": [0, 2, 78, 252, 283, 284, 305, 311, 312, 313, 315, 318, 330, 344, 369, 384, 393, 397, 400, 442, 489, 492, 503], "assembli": [0, 2, 3, 5, 14, 15, 25, 26, 27, 28, 43, 44, 47, 50, 78, 82, 89, 175, 216, 219, 220, 223, 224, 225, 226, 227, 252, 254, 263, 278, 283, 284, 286, 288, 289, 290, 291, 295, 297, 300, 303, 305, 308, 311, 312, 313, 314, 315, 316, 317, 318, 324, 326, 329, 330, 331, 333, 335, 337, 339, 340, 341, 342, 344, 350, 351, 352, 354, 355, 357, 363, 366, 375, 390, 396, 400, 401, 404, 412, 416, 418, 449, 452, 454, 455, 463, 470, 471, 478, 479, 483, 484, 486, 487, 488, 489, 490, 492, 494, 497, 503, 505, 506, 508, 509, 510, 512, 513], "hexassembli": [0, 220, 223, 283, 284, 285, 470], "cartesianassembli": [0, 283, 284, 285], "rzassembli": [0, 284, 285], "thrzassembli": [0, 283, 284, 285], "assemblyparamet": [0, 284], "getassemblyparameterdefinit": [0, 284, 286], "blockparamet": [0, 284], "getblockparameterdefinit": [0, 284, 287], "block": [0, 2, 3, 4, 5, 14, 15, 25, 28, 41, 43, 44, 49, 50, 79, 125, 151, 152, 160, 166, 175, 197, 200, 219, 220, 223, 224, 226, 227, 237, 240, 241, 245, 247, 249, 252, 256, 260, 261, 266, 267, 283, 284, 285, 287, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 311, 314, 315, 316, 317, 318, 319, 322, 324, 325, 326, 328, 329, 330, 331, 333, 335, 336, 341, 344, 346, 347, 348, 350, 351, 354, 355, 356, 357, 361, 363, 366, 390, 399, 400, 404, 412, 416, 449, 452, 454, 455, 461, 462, 465, 467, 478, 479, 481, 482, 483, 486, 487, 488, 489, 490, 492, 494, 495, 497, 500, 502, 505, 506, 508, 509], "hexblock": [0, 9, 197, 220, 223, 283, 284, 288, 311, 317, 318, 324, 354, 355, 470, 487, 490, 513], "cartesianblock": [0, 283, 284, 288, 317, 513], "thrzblock": [0, 283, 284, 288], "composit": [0, 3, 5, 9, 79, 80, 81, 104, 152, 167, 169, 174, 182, 200, 228, 240, 241, 266, 283, 284, 285, 288, 289, 294, 295, 305, 308, 314, 317, 318, 319, 331, 332, 333, 337, 339, 341, 342, 344, 346, 347, 348, 350, 357, 394, 442, 449, 452, 464, 471, 478, 479, 483, 486, 487, 489, 490, 492, 495, 498, 499, 507, 509], "flagseri": [0, 284, 311, 347], "compositemodeltyp": [0, 283, 284, 308, 311], "armiobject": [0, 3, 5, 6, 230, 247, 252, 262, 277, 283, 284, 293, 311, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 348, 351, 449, 455, 470, 489], "stateretain": [0, 284, 311, 357], "gathermaterialsbyvolum": [0, 284, 311], "getdominantmateri": [0, 284, 311], "getreactionratedict": [0, 284, 311], "core": [0, 3, 5, 9, 10, 14, 19, 25, 26, 28, 31, 44, 49, 53, 89, 167, 170, 175, 204, 215, 216, 219, 220, 224, 238, 240, 241, 245, 249, 252, 259, 261, 263, 283, 284, 285, 288, 289, 293, 295, 304, 311, 315, 317, 318, 319, 321, 324, 326, 330, 332, 333, 335, 337, 339, 340, 341, 342, 343, 344, 346, 349, 350, 351, 352, 354, 363, 364, 366, 369, 399, 401, 416, 418, 421, 449, 454, 456, 462, 463, 464, 470, 471, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 497, 499, 502, 503, 504, 506, 507, 508, 509, 510, 513, 514], "excorestructur": [0, 283, 284, 351, 449, 507], "excorecollect": [0, 284, 332], "flag": [0, 1, 11, 19, 26, 78, 104, 125, 146, 179, 204, 219, 238, 245, 249, 252, 283, 284, 285, 288, 289, 292, 293, 294, 297, 298, 299, 300, 301, 303, 305, 311, 316, 317, 318, 319, 324, 331, 344, 346, 347, 355, 357, 359, 375, 380, 396, 399, 400, 405, 410, 415, 416, 418, 427, 444, 449, 452, 462, 463, 468, 470, 471, 486, 487, 490, 492, 494, 497, 508, 509, 513], "invalidflagserror": [0, 284, 333], "geometri": [0, 3, 5, 45, 47, 55, 56, 165, 172, 174, 175, 178, 187, 192, 204, 214, 226, 240, 241, 252, 283, 284, 285, 288, 290, 293, 295, 308, 310, 312, 317, 318, 319, 324, 326, 329, 330, 331, 335, 337, 339, 340, 342, 343, 350, 352, 360, 401, 449, 461, 465, 470, 471, 474, 478, 479, 482, 484, 486, 492, 498, 499, 500, 507, 509, 513], "geomtyp": [0, 52, 53, 54, 252, 284, 331, 334, 335, 336, 337, 339, 340, 342, 343, 401, 470, 486], "domaintyp": [0, 284, 334, 401, 470], "boundarytyp": [0, 284, 334, 470], "symmetrytyp": [0, 284, 318, 331, 334, 339, 470], "checkvalidgeomsymmetrycombo": [0, 284, 334], "reactorparamet": [0, 284], "definereactorparamet": [0, 284, 349], "definecoreparamet": [0, 284, 349], "makeparametersreadonli": [0, 284, 349], "spentfuelpool": [0, 283, 284, 449, 479, 507], "systemlayoutinput": [0, 47, 49, 56, 284, 295, 343, 350, 486], "zone": [0, 165, 172, 174, 178, 179, 219, 284, 318, 331, 365, 471, 478, 479, 487, 492, 498, 499, 502, 503, 507], "isboolset": [0, 368, 445], "recursivelyloadsettingsfil": [0, 368, 445], "promptforsettingsfil": [0, 368, 445], "fwset": [0, 368, 494], "getframeworkset": [0, 368, 370], "caseset": [0, 25, 28, 151, 368, 478, 507], "flaglistset": [0, 368, 375], "settingsio": [0, 368, 381], "root": [0, 3, 5, 9, 47, 55, 77, 151, 155, 290, 348, 368, 376, 383, 403, 405, 412, 442, 452, 455, 494, 509], "settingrenam": [0, 368, 376], "settingsread": [0, 368, 376], "settingswrit": [0, 368, 369, 376, 487], "prompt": [0, 368, 376, 377, 456, 494, 505, 507], "runlogpromptcancel": [0, 368, 376], "runlogpromptunresolv": [0, 368, 376], "queri": [0, 219, 283, 311, 368, 377, 379, 494, 513], "inspector": [0, 203, 204, 215, 221, 231, 232, 238, 246, 264, 278, 279, 283, 368, 377, 494], "createqueryrevertbadpathtodefault": [0, 368, 377], "validatevers": [0, 368, 377], "loadtestreactor": [0, 211, 382, 445, 462, 463, 464, 471, 479], "reducetestreactor": [0, 382, 445], "getemptyhexreactor": [0, 383, 445], "getemptycartesianreactor": [0, 383, 445], "fixtur": [0, 34, 223, 383, 445], "requires_fixtur": [0, 383, 445], "armitesthelp": [0, 34, 224, 225, 383, 387, 445], "comparefileslinebylin": [0, 383], "comparelin": [0, 383], "rebaselinetextcomparison": [0, 383, 445], "mockrunlog": [0, 383], "bufferlog": [0, 383, 384], "logcount": [0, 383, 384], "refsmallreactorshufflelog": [0, 383], "equilibriumshuffl": [0, 383, 385], "getfactorlist": [0, 215, 219, 383, 385, 498, 507], "test_app": [0, 383], "testplugin1": [0, 383, 386], "testplugin2": [0, 383, 386], "testplugin3": [0, 383, 386], "testplugin4": [0, 383, 386], "testapp": [0, 383, 386], "testarmihighlevel": [0, 383, 386], "test_armitesthelp": [0, 383], "testarmitesthelp": [0, 383, 387], "test_cartesian": [0, 383, 420, 421], "cartesianreactortest": [0, 284, 353, 363, 383, 388], "test_context": [0, 383], "testcontextseri": [0, 383, 389], "test_interfac": [0, 383], "dummyinterfac": [0, 383, 390], "testcodeinterfac": [0, 383, 390], "testtightcoupl": [0, 203, 209, 211, 383, 390], "test_lwrinput": [0, 383], "c5g7reactortest": [0, 383, 391], "test_mpiact": [0, 383, 420, 425], "mpiitertest": [0, 383, 392], "queueactionstest": [0, 383, 392], "passer": [0, 367, 383, 384, 392], "test_mpifeatur": [0, 383], "failinginterface1": [0, 383, 393], "failinginterface2": [0, 383, 393], "failinginterface3": [0, 383, 393], "mockinterfac": [0, 3, 12, 15, 383, 393], "mpioperatortest": [0, 383, 393], "bcastaction1": [0, 383, 393], "bcastaction2": [0, 383, 393], "mpidistributestatetest": [0, 383, 393], "mpipathtoolstest": [0, 383, 393], "testcontextmpi": [0, 383, 393], "test_mpiparamet": [0, 383], "mocksyncpc": [0, 383, 394], "makecomp": [0, 383, 394], "synchronizationtest": [0, 383, 394], "test_notebook": [0, 383], "notebooktest": [0, 383, 395], "runnotebook": [0, 383, 395], "test_plugin": [0, 383], "pluginflags1": [0, 383, 396], "sillyaxialexpansionchang": [0, 383, 396], "sillyaxialplugin": [0, 383, 396], "beforereactorplugin": [0, 383, 396], "testpluginregistr": [0, 383, 396], "testpluginbas": [0, 383, 396], "testplugin": [0, 235, 271, 281, 383, 396], "test_runlog": [0, 383], "testrunlog": [0, 383, 397], "testrunlogg": [0, 383, 397], "test_test": [0, 383], "testcomparefil": [0, 383, 398], "test_user_plugin": [0, 383, 494], "userpluginflag": [0, 383, 399], "userpluginflags2": [0, 383, 399], "userpluginflags3": [0, 383, 399], "userpluginbaddefinesset": [0, 383, 399], "userpluginbaddefineparameterrenam": [0, 383, 399], "userpluginonprocesscoreload": [0, 383, 399], "upinterfac": [0, 383, 399], "userpluginwithinterfac": [0, 383, 399], "testuserplugin": [0, 383, 399], "util": [0, 2, 4, 31, 37, 41, 61, 66, 77, 198, 200, 212, 214, 215, 220, 228, 236, 283, 288, 290, 291, 293, 315, 322, 330, 333, 335, 376, 380, 382, 393, 396, 445, 446, 449, 452, 460, 462, 464, 467, 468, 471, 478, 479, 482, 484, 486, 487, 489, 490, 492, 494, 498, 500, 507], "getfilesha1hash": [0, 400, 445, 490], "getpowerfract": [0, 400, 445], "getcyclenam": [0, 400, 445], "getavailabilityfactor": [0, 400, 445], "getsteplength": [0, 400, 445], "getcyclelength": [0, 400, 445], "getburnstep": [0, 400, 445], "hasburnup": [0, 400, 445], "getmaxburnstep": [0, 400, 445], "getcumulativenodenum": [0, 400, 445], "getcyclenodefromcumulativestep": [0, 400, 445], "getcyclenodefromcumulativenod": [0, 400, 445], "getnodespercycl": [0, 400, 445], "getprevioustimenod": [0, 400, 445], "trypickleonallcont": [0, 400, 445], "dotestpickleonallcontents2": [0, 400, 445], "mypickl": [0, 400, 445], "save": [0, 6, 39, 78, 204, 238, 261, 288, 293, 302, 311, 330, 331, 344, 369, 400, 416, 418, 419, 449, 454, 456, 484, 487, 493, 507], "trypickleonallcontents3": [0, 400, 445], "classesinhierarchi": [0, 400, 441, 445], "slantsplit": [0, 400, 445], "prependtolist": [0, 400, 445], "capstrlen": [0, 400, 445], "list2str": [0, 400, 445], "createformattedstrwithdelimit": [0, 400, 445], "plotmatrix": [0, 400, 445], "usernam": [0, 400, 445], "mergeabledict": [0, 78, 400, 445], "merg": [0, 1, 164, 165, 166, 167, 182, 188, 198, 200, 201, 202, 241, 288, 308, 317, 386, 400, 486, 490, 504], "safecopi": [0, 400, 445, 489], "safemov": [0, 400, 445], "asciimap": [0, 293, 400, 487], "asciimapcartesian": [0, 400, 401], "asciimaphexthirdflatsup": [0, 400, 401], "asciimaphexfullflatsup": [0, 400, 401], "asciimaphexfulltipsup": [0, 400, 401], "asciimapfromgeomanddomain": [0, 400, 401], "codetim": [0, 400, 441, 488], "getmastertim": [0, 400, 402], "mastertim": [0, 400, 402], "customexcept": [0, 400, 486], "warn": [0, 3, 5, 78, 89, 104, 200, 201, 211, 241, 301, 311, 334, 367, 376, 384, 391, 397, 400, 403, 405, 415, 442, 445, 450, 456, 492, 494, 497, 499, 507, 509], "warn_when_root": [0, 400, 403], "inputerror": [0, 400, 403], "settingexcept": [0, 400, 403], "invalidsettingsstopprocess": [0, 400, 403], "nonexistentset": [0, 400, 403], "invalidsettingsfileerror": [0, 400, 403], "nonexistentsettingsfileerror": [0, 400, 403], "densitytool": [0, 400, 424, 462], "getndensfrommass": [0, 400, 404], "getmassfract": [0, 400, 404], "calculatemassdens": [0, 400, 404], "calculatenumberdens": [0, 400, 404], "getmassingram": [0, 400, 404], "formatmaterialcard": [0, 400, 404, 462], "filternuclidelist": [0, 400, 404], "normalizenuclidelist": [0, 400, 404], "expandelementalmassfracstonuclid": [0, 400, 404], "expandelementalnuclidemassfrac": [0, 400, 404], "getchem": [0, 400, 404], "applyisotopicsmix": [0, 400, 404], "directorychang": [0, 214, 400, 406, 425, 487], "temporarydirectorychang": [0, 274, 400, 405, 487, 490], "forcedcreationdirectorychang": [0, 46, 274, 400, 405], "directorychangerfactori": [0, 400, 405], "directorychangersmpi": [0, 400], "mpidirectorychang": [0, 400, 406, 426, 490], "dynamicimport": [0, 400], "getentirefamilytre": [0, 400, 407], "auto": [0, 3, 5, 7, 77, 104, 146, 214, 223, 252, 283, 285, 292, 311, 357, 360, 377, 400, 408, 427, 446, 456, 486, 487, 507], "grideditor": [0, 67, 400, 507], "hexagon": [0, 45, 125, 175, 220, 223, 283, 284, 285, 288, 297, 300, 301, 303, 305, 306, 307, 308, 309, 311, 312, 317, 318, 331, 335, 339, 342, 354, 355, 356, 357, 361, 400, 401, 428, 449, 468, 470, 472, 478, 484, 490, 492, 498, 503, 507, 508, 513], "area": [0, 25, 54, 174, 220, 266, 283, 285, 288, 305, 306, 307, 308, 310, 311, 317, 325, 340, 354, 355, 356, 360, 400, 410, 428, 439, 443, 454, 483, 490, 494, 498, 502, 503, 504], "side": [0, 26, 219, 306, 307, 317, 339, 340, 383, 400, 410, 416, 463], "corner": [0, 190, 288, 308, 311, 337, 340, 344, 347, 355, 400, 401, 410, 421, 428, 489, 503], "pitch": [0, 14, 288, 293, 306, 307, 308, 317, 318, 331, 335, 336, 337, 340, 342, 343, 353, 355, 361, 383, 400, 410, 472, 492, 498, 499, 507, 508, 513], "numringstoholdnumcel": [0, 400, 410], "numpositionsinr": [0, 400, 410, 428], "totalpositionsuptor": [0, 400, 410, 428], "getindexofrotatedcel": [0, 400, 410, 490], "iter": [0, 3, 5, 8, 9, 32, 47, 78, 79, 155, 204, 211, 227, 238, 240, 252, 256, 259, 285, 288, 311, 316, 318, 331, 339, 342, 346, 350, 383, 400, 412, 416, 418, 419, 427, 429, 437, 452, 468, 470, 490, 494, 505, 507, 510], "flatten": [0, 3, 8, 16, 151, 400, 411, 452, 509], "chunk": [0, 9, 288, 400, 408, 411, 442, 452, 455], "split": [0, 45, 151, 285, 318, 329, 337, 339, 344, 383, 400, 411, 452, 484, 487, 492, 498, 502, 507], "unpackbinarystr": [0, 400, 411], "packbinarystr": [0, 400, 411], "unpackhexstr": [0, 400, 411], "packhexstr": [0, 400, 411], "sequenc": [0, 3, 4, 5, 6, 47, 55, 56, 60, 104, 211, 214, 226, 256, 283, 290, 291, 292, 293, 294, 295, 311, 314, 324, 342, 347, 357, 400, 408, 411, 416, 418, 419, 449, 483, 484, 507], "pivot": [0, 400, 411], "mathemat": [0, 104, 400, 430], "average1dwithintoler": [0, 330, 400, 412], "converttoslic": [0, 400, 412], "efmt": [0, 400, 412], "expandrepeatedfloat": [0, 400, 412], "findclosest": [0, 400, 412], "findnearestvalu": [0, 400, 412], "findnearestvalueandindex": [0, 400, 412], "fixthreedigitexp": [0, 400, 412], "getfloat": [0, 400, 412], "getstepsfromvalu": [0, 400, 412], "ismonoton": [0, 400, 412], "linearinterpol": [0, 400, 412], "minimizescalarfunc": [0, 400, 412], "newtonsmethod": [0, 400, 412], "parabolafrompoint": [0, 400, 412], "parabolicinterpol": [0, 400, 412], "relerr": [0, 400, 412], "resamplestepwis": [0, 400, 412, 430], "rotatexi": [0, 400, 412], "outputcach": [0, 400], "api": [0, 283, 311, 382, 400, 437, 446, 449, 451, 455, 456, 471, 484, 487, 492, 497, 507, 513], "retrieveoutput": [0, 400, 413], "store": [0, 3, 4, 5, 8, 9, 19, 22, 26, 32, 43, 45, 47, 78, 104, 153, 155, 170, 172, 175, 178, 182, 195, 200, 204, 219, 241, 256, 285, 288, 295, 308, 311, 314, 315, 316, 317, 324, 330, 331, 333, 334, 339, 341, 342, 344, 346, 347, 348, 376, 400, 408, 411, 413, 418, 424, 449, 454, 455, 486, 487, 492, 494, 502, 503, 504, 507, 508, 509, 510, 513], "deletecach": [0, 400, 413], "cachecal": [0, 400, 413], "pars": [0, 37, 39, 47, 60, 64, 66, 218, 334, 383, 400, 432, 437, 442, 490, 507], "tryliteralev": [0, 400, 414], "parsevalu": [0, 400, 414], "datetimefromstr": [0, 400, 414], "pathtool": [0, 400, 433], "armiabspath": [0, 400, 415], "copyorwarn": [0, 400, 415, 490], "isfilepathnew": [0, 400, 415], "isaccess": [0, 400, 415], "separatemoduleandattribut": [0, 400, 415], "importcustompymodul": [0, 400, 415, 433], "moduleandattributeexist": [0, 400, 415], "cleanpath": [0, 400, 415, 433], "plot": [0, 22, 25, 26, 28, 45, 49, 167, 197, 202, 219, 263, 318, 342, 400, 418, 434, 436, 454, 463, 464, 467, 468, 470, 471, 473, 478, 480, 481, 482, 484, 486, 487, 490, 492, 493, 494, 495, 497, 499, 500, 507], "colorgener": [0, 400, 416], "plotblockdepthmap": [0, 400, 416, 492], "plotfacemap": [0, 400, 416, 464, 471, 479, 492], "close": [0, 2, 3, 5, 6, 77, 159, 165, 166, 219, 311, 367, 397, 400, 404, 405, 406, 416, 418, 445, 492, 507], "depthslid": [0, 400, 416], "plotassemblytyp": [0, 400, 416, 478], "plotblockflux": [0, 400, 416], "makehistogram": [0, 400, 416], "plotblockdiagram": [0, 400, 416, 490], "plotnucx": [0, 400, 416], "properti": [0, 1, 3, 4, 5, 6, 21, 43, 47, 79, 80, 81, 82, 83, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114, 115, 116, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 151, 155, 167, 169, 175, 182, 197, 198, 201, 202, 204, 208, 219, 228, 240, 241, 282, 288, 289, 290, 293, 294, 308, 311, 317, 330, 331, 332, 334, 336, 337, 339, 340, 341, 342, 344, 346, 347, 355, 357, 366, 369, 375, 383, 400, 435, 451, 477, 483, 484, 486, 489, 490, 492, 494, 495, 499, 504, 507], "areequ": [0, 400, 417], "numpyhackforequ": [0, 400, 417], "createimmutableproperti": [0, 400, 417], "immutablepropertyerror": [0, 400, 417], "unlockimmutableproperti": [0, 400, 417], "lockimmutableproperti": [0, 400, 417], "reportplot": [0, 400], "plotreactorperform": [0, 400, 418], "valuevstim": [0, 400, 418], "keffvstim": [0, 400, 418], "xshistoryvstim": [0, 400, 418], "movesvscycl": [0, 400, 418], "plotcoreoverviewradar": [0, 400, 418], "createplotmetadata": [0, 400, 418], "plotaxialprofil": [0, 400, 418], "tabul": [0, 400, 437, 468, 490], "header": [0, 23, 26, 367, 400, 437, 445, 451, 454, 456, 468, 487, 510], "column": [0, 26, 166, 167, 182, 202, 400, 401, 437, 442, 490, 498], "align": [0, 308, 314, 317, 330, 400, 410, 416, 437, 484, 507, 511], "width": [0, 219, 220, 224, 337, 342, 400, 408, 470, 480, 505], "line": [0, 4, 26, 39, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 137, 146, 166, 204, 212, 242, 252, 283, 285, 288, 311, 312, 318, 331, 337, 339, 340, 355, 362, 369, 375, 377, 381, 383, 400, 401, 402, 412, 415, 421, 426, 430, 434, 437, 438, 442, 444, 447, 452, 454, 455, 456, 470, 483, 485, 489, 490, 492, 494, 498, 507, 509, 514], "datarow": [0, 400, 419], "size": [0, 21, 26, 56, 165, 166, 202, 219, 311, 330, 331, 342, 382, 400, 401, 408, 412, 416, 419, 492, 498, 499, 507], "tableformat": [0, 400, 419], "textwrapp": [0, 400, 419], "chain": [0, 155, 159, 163, 219, 238, 245, 294, 311, 335, 341, 400, 411, 418, 419, 480, 484, 507], "namedtupl": [0, 78, 324, 341, 400, 419], "partial": [0, 175, 190, 241, 252, 283, 288, 293, 317, 331, 340, 367, 400, 411, 419, 463, 507], "reduc": [0, 5, 241, 285, 311, 317, 330, 335, 339, 342, 346, 382, 400, 419, 486, 492, 507], "zip_longest": [0, 400, 419], "textprocessor": [0, 400, 438], "scientific_pattern": [0, 400, 442], "floating_pattern": [0, 400, 442], "decimal_pattern": [0, 400, 442], "filemark": [0, 400, 442], "resolvemarkupinclus": [0, 400, 438, 442], "findyamlinclus": [0, 400, 442], "sequentialread": [0, 400, 442], "sequentialstringioread": [0, 400, 442], "triangl": [0, 284, 305, 306, 309, 340, 356, 400, 439, 507], "gettrianglearea": [0, 400, 439, 443], "gettrianglecentroid": [0, 400, 443], "checkifpointisintriangl": [0, 400, 443], "unit": [0, 10, 15, 53, 54, 58, 59, 76, 77, 80, 90, 93, 104, 113, 120, 122, 125, 130, 136, 161, 171, 175, 176, 200, 271, 281, 288, 301, 324, 327, 328, 331, 335, 336, 337, 342, 344, 347, 355, 375, 382, 383, 392, 395, 398, 400, 410, 422, 432, 433, 440, 448, 450, 456, 483, 487, 489, 494, 498, 502, 503, 504, 505, 507, 512], "gettk": [0, 400, 444], "gettc": [0, 400, 444, 494], "gettf": [0, 400, 444], "gettemperatur": [0, 400, 444], "gettmev": [0, 400, 444], "convertmmhgtopasc": [0, 400, 444], "convertbartopasc": [0, 400, 444], "convertatmtopasc": [0, 400, 444], "sanitizeangl": [0, 400, 444], "getxylineparamet": [0, 400, 444], "pluginmanag": [0, 1, 283, 445, 451], "getset": [0, 1, 368, 369], "getparamrenam": [0, 1], "registerpluginflag": [0, 1], "registeruserplugin": [0, 1, 368, 369], "splashtext": [0, 1, 451, 494], "conftest": [0, 445], "pytest_sessionstart": [0, 76, 445], "bootstraparmitestenv": [0, 76, 445], "context": [0, 28, 44, 47, 151, 261, 288, 295, 334, 389, 393, 400, 405, 445, 452, 456, 480, 484, 486, 499, 509], "mode": [0, 3, 5, 60, 65, 66, 77, 85, 147, 152, 155, 166, 252, 293, 331, 349, 376, 438, 445, 456, 489, 498, 505, 509], "batch": [0, 63, 65, 66, 74, 77, 256, 305, 489, 498], "setmod": [0, 77], "activatelocalfastpath": [0, 77, 445], "getfastpath": [0, 77, 445, 486], "cleantempdir": [0, 77, 445], "cleanallarmitempdir": [0, 77, 445], "disconnectallhdfdb": [0, 77, 445], "stack_ord": [0, 78, 204, 445, 494], "befor": [0, 3, 5, 10, 19, 47, 78, 151, 201, 204, 214, 218, 219, 220, 237, 240, 241, 266, 283, 284, 288, 308, 311, 316, 317, 318, 329, 331, 334, 344, 346, 367, 396, 397, 400, 401, 407, 412, 419, 446, 448, 451, 452, 454, 455, 471, 484, 485, 486, 487, 490, 492, 494, 503, 505, 507, 513, 514], "preprocess": [0, 78], "fuel_manag": [0, 78], "fuel_perform": [0, 78], "cross_sect": [0, 78], "critical_control": [0, 78], "flux": [0, 19, 34, 78, 165, 167, 169, 171, 173, 175, 178, 179, 190, 200, 240, 241, 245, 251, 252, 254, 262, 266, 283, 285, 288, 305, 308, 311, 329, 330, 331, 333, 344, 347, 355, 356, 416, 449, 470, 471, 483, 484, 486, 487, 490, 492, 503, 505, 507, 513], "thermal_hydraul": [0, 78, 494], "reactivity_coeff": [0, 78], "transient": [0, 32, 78, 203, 208, 454, 484, 507], "postprocess": [0, 78], "tightcoupl": [0, 15, 78, 254, 390, 445, 507, 510], "storepreviousiterationvalu": [0, 78], "isconverg": [0, 78, 390], "getlistdimens": [0, 78], "getdepend": [0, 78], "getinputfil": [0, 78], "distribut": [0, 2, 3, 5, 6, 22, 27, 78, 143, 151, 152, 165, 219, 220, 238, 254, 288, 311, 315, 316, 317, 342, 416, 452, 471, 479, 484, 487, 489, 492, 494, 498, 499, 503, 505, 507, 510], "duplic": [0, 21, 44, 56, 58, 78, 79, 104, 125, 129, 153, 244, 247, 250, 284, 285, 299, 311, 331, 342, 356, 367, 368, 369, 402, 413, 424, 427, 487, 498, 507, 509], "new": [0, 3, 4, 5, 16, 19, 26, 30, 45, 47, 55, 56, 63, 65, 78, 80, 92, 104, 110, 120, 137, 142, 144, 147, 149, 151, 155, 182, 200, 202, 208, 214, 217, 220, 223, 240, 241, 252, 256, 261, 266, 278, 283, 285, 288, 289, 292, 294, 305, 311, 316, 317, 318, 319, 322, 330, 331, 333, 340, 342, 346, 347, 348, 350, 351, 352, 362, 363, 366, 369, 375, 380, 394, 396, 399, 400, 405, 406, 408, 410, 411, 412, 419, 442, 446, 447, 448, 450, 451, 454, 455, 464, 485, 486, 492, 493, 497, 498, 499, 507, 509, 510, 511, 513, 514], "skip": [0, 55, 78, 162, 169, 175, 200, 204, 211, 241, 288, 330, 348, 355, 363, 374, 375, 405, 416, 451, 480, 487, 490, 499, 507], "namecontain": [0, 78, 284, 311], "predistributest": [0, 78], "postdistributest": [0, 78], "attachreactor": [0, 78], "detachreactor": [0, 78], "gethistoryparam": [0, 19, 78, 251, 252], "getinterfac": [0, 19, 78, 203, 204, 449, 492], "interactinit": [0, 78, 204, 383, 393, 449], "interactbol": [0, 2, 3, 6, 19, 20, 21, 22, 27, 32, 78, 204, 238, 240, 241, 244, 245, 255, 256, 259, 331, 449], "interacteol": [0, 2, 3, 6, 19, 20, 21, 22, 27, 78, 204, 215, 218, 449], "interactboc": [0, 2, 19, 20, 22, 27, 78, 215, 218, 222, 224, 238, 240, 244, 245, 251, 252, 253, 254, 255, 256, 259, 449], "interacteoc": [0, 2, 3, 6, 22, 27, 78, 215, 218, 238, 240, 255, 256, 449, 489], "interacteverynod": [0, 2, 3, 6, 12, 15, 20, 21, 22, 27, 32, 78, 204, 238, 240, 251, 252, 253, 254, 255, 256, 259, 383, 393, 399, 449, 452, 494], "interactcoupl": [0, 2, 32, 78, 238, 240, 251, 252, 255, 256, 259, 449, 487, 507], "gettightcouplingvalu": [0, 78, 251, 252, 254], "interacterror": [0, 2, 3, 6, 78, 449], "interactdistributest": [0, 2, 3, 6, 78, 244, 245], "isrequesteddetailpoint": [0, 32, 78], "workeroper": [0, 2, 78, 151, 203, 204, 205, 215, 218, 219, 283, 383, 393], "enabl": [0, 3, 6, 47, 78, 94, 104, 170, 204, 241, 245, 249, 250, 252, 262, 285, 289, 290, 292, 313, 315, 331, 341, 369, 446, 449, 451, 456, 484, 486, 487, 492, 497, 503, 507, 510, 511], "bolforc": [0, 78, 204], "writeinput": [0, 46, 47, 55, 78, 212, 214, 318, 478, 497], "readoutput": [0, 78], "specifyinput": [0, 57, 58, 78, 215, 218, 283], "updatephysicscouplingcontrol": [0, 78, 255, 256], "inputwrit": [0, 78, 257, 445], "write": [0, 3, 5, 6, 7, 9, 11, 14, 16, 19, 22, 23, 24, 28, 31, 37, 43, 44, 47, 48, 55, 78, 145, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 214, 219, 223, 224, 255, 256, 257, 258, 260, 267, 271, 285, 289, 299, 312, 319, 331, 347, 352, 360, 367, 369, 375, 376, 382, 383, 397, 401, 402, 403, 412, 416, 449, 451, 454, 455, 456, 461, 465, 468, 478, 482, 484, 485, 486, 487, 489, 492, 494, 497, 498, 500, 507, 509, 510, 514], "outputread": [0, 78, 252, 254, 445], "getactiveinterfaceinfo": [0, 78, 204, 445], "isinterfaceact": [0, 78, 445], "interfaceinfo": [0, 78, 445, 494], "interfacecl": [0, 78], "kwarg": [0, 10, 78, 82, 89, 102, 104, 108, 131, 133, 134, 135, 136, 137, 151, 169, 197, 223, 240, 241, 282, 283, 290, 291, 292, 293, 294, 295, 305, 331, 343, 347, 357, 367, 384, 399, 416, 423], "meta": [0, 155, 202, 213, 294, 301, 308, 344, 347, 357, 445], "mpiaction": [0, 21, 205, 214, 261, 283, 393, 426, 445, 449, 452, 487], "parallel": [0, 72, 77, 151, 204, 205, 256, 261, 311, 393, 449, 450, 456, 483, 484, 485, 507, 514], "invokeasmast": [0, 151, 452], "broadcast": [0, 27, 78, 151, 205, 311, 406, 452], "gather": [0, 2, 3, 5, 19, 55, 151, 342, 452, 508], "invok": [0, 1, 37, 39, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 151, 238, 242, 348, 417, 442, 446, 447, 449, 452, 485, 486, 514], "mpiflatten": [0, 151, 452], "mpiiter": [0, 151, 452], "invokehook": [0, 2, 21, 151, 238, 261, 383, 393, 420, 426, 452], "runact": [0, 151, 445, 452], "runactionsinseri": [0, 151, 445], "distributionact": [0, 151, 445], "mpiactionerror": [0, 151, 445], "distributestateact": [0, 151, 445, 452], "counter": [0, 78, 282, 285, 288, 337, 340, 346, 410, 411, 503, 513], "unregist": [0, 282], "defineparamet": [0, 3, 10, 212, 228, 231, 238, 275, 278, 283, 494], "afterconstructionofassembli": [0, 275, 278, 283], "onprocesscoreload": [0, 212, 238, 283, 383, 399, 494], "defineflag": [0, 1, 283, 383, 396, 399, 507], "defineblueprintssect": [0, 3, 10, 283, 396], "defineset": [0, 57, 58, 212, 215, 228, 231, 232, 238, 244, 246, 264, 272, 275, 278, 279, 283, 368, 370, 371, 372, 373, 378, 380, 383, 399, 494], "definesettingsvalid": [0, 212, 215, 228, 231, 238, 275, 278, 283, 494], "defineguiwidget": [0, 283], "getoperatorclassfromruntyp": [0, 283], "defineparameterrenam": [0, 212, 238, 283, 383, 386, 399, 494], "userplugin": [0, 283, 399, 445, 487, 493, 507], "getnewpluginmanag": [0, 283, 445], "collectinterfacedescript": [0, 283, 445], "pluginerror": [0, 283, 445], "runlog": [0, 4, 28, 60, 211, 317, 376, 384, 397, 445, 450, 455, 487, 494, 509], "concatenatelog": [0, 367, 445], "raw": [0, 367, 442, 445, 452], "extra": [0, 1, 4, 32, 58, 288, 289, 311, 341, 344, 367, 375, 445, 446, 449, 456, 507, 509], "debug": [0, 2, 21, 331, 367, 400, 445, 449, 456, 487, 493, 507, 509], "warningreport": [0, 367, 397, 445], "setverbos": [0, 367, 397, 445, 456], "getverbos": [0, 367, 445], "deduplicationfilt": [0, 367, 445], "filter": [0, 19, 21, 55, 153, 155, 311, 329, 333, 347, 362, 367, 404, 411, 416, 471, 509], "runlogg": [0, 367, 445], "fmt": [0, 367, 376, 400, 470], "allowstopdupl": [0, 367], "flush": [0, 367, 419, 487], "getduplicatesfilt": [0, 367], "nulllogg": [0, 367, 445], "addhandl": [0, 367], "createlogdir": [0, 367, 397, 445], "logfactori": [0, 367, 445], "k": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514], "class": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 26, 27, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 149, 150, 151, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 214, 215, 218, 219, 223, 224, 225, 226, 229, 231, 234, 235, 236, 238, 240, 241, 242, 245, 247, 249, 250, 252, 254, 256, 257, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 274, 278, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 411, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446, 447, 449, 451, 452, 454, 455, 456, 486, 487, 489, 490, 493, 495, 496, 497, 498, 507, 510], "simpl": [1, 3, 6, 15, 31, 37, 70, 74, 79, 80, 86, 93, 104, 113, 114, 151, 152, 160, 182, 195, 214, 223, 240, 241, 283, 285, 288, 294, 325, 330, 334, 342, 349, 351, 355, 374, 396, 397, 399, 401, 419, 428, 433, 437, 441, 449, 452, 456, 459, 466, 482, 484, 487, 493, 494, 498, 499, 500, 507, 513], "highest": [1, 216, 219, 220, 226, 227, 243, 285, 350, 400, 471, 492, 503, 505, 507], "level": [1, 3, 4, 5, 26, 27, 32, 78, 79, 80, 155, 162, 165, 171, 173, 176, 200, 205, 219, 224, 241, 245, 247, 254, 261, 283, 285, 288, 292, 293, 295, 299, 308, 311, 315, 317, 324, 330, 331, 335, 341, 347, 348, 349, 350, 355, 363, 367, 369, 370, 383, 411, 449, 452, 454, 455, 471, 484, 487, 490, 492, 494, 495, 496, 497, 498, 503, 505, 507, 509], "abstract": [1, 23, 26, 38, 43, 47, 49, 66, 78, 139, 151, 155, 165, 166, 173, 175, 252, 260, 308, 310, 311, 321, 339, 341, 342, 347, 356, 376, 494], "what": [1, 3, 4, 5, 9, 15, 19, 31, 32, 89, 104, 152, 153, 155, 162, 166, 198, 205, 214, 219, 220, 245, 256, 263, 283, 285, 288, 293, 312, 314, 331, 333, 339, 340, 344, 347, 348, 355, 368, 380, 401, 408, 411, 413, 421, 442, 447, 448, 449, 450, 451, 452, 456, 484, 492, 493, 495, 496, 498, 507, 509, 513], "happen": [1, 2, 47, 58, 144, 145, 151, 155, 212, 219, 220, 252, 256, 283, 288, 303, 308, 311, 318, 330, 331, 344, 368, 449, 451, 452, 454, 456, 495, 507, 509, 513], "mostli": [1, 3, 5, 6, 58, 137, 220, 252, 283, 295, 311, 318, 369, 384, 397, 399, 480, 484, 499, 509, 513], "subclass": [1, 9, 49, 56, 60, 66, 74, 78, 79, 145, 162, 165, 178, 203, 219, 229, 241, 252, 256, 259, 260, 282, 283, 285, 305, 308, 310, 311, 318, 330, 333, 339, 344, 346, 347, 348, 375, 384, 407, 419, 442, 447, 449, 451, 452, 487, 494, 507, 513], "free": [1, 104, 162, 288, 355, 416, 418, 451, 489, 507], "adopt": [1, 348, 451], "throw": [1, 487], "awai": [1, 337], "start": [1, 3, 6, 9, 26, 78, 155, 165, 172, 204, 219, 240, 241, 245, 252, 256, 312, 330, 331, 340, 342, 351, 400, 401, 402, 410, 411, 412, 416, 418, 419, 437, 442, 448, 449, 450, 451, 453, 454, 455, 456, 462, 463, 464, 485, 487, 488, 493, 497, 498, 504, 505, 507, 509, 513, 514], "scratch": [1, 77, 288, 478, 492, 494, 498, 499, 507], "thei": [1, 4, 5, 34, 47, 56, 66, 77, 78, 79, 104, 125, 144, 151, 152, 155, 165, 172, 174, 175, 200, 202, 204, 205, 208, 214, 216, 220, 223, 238, 241, 245, 247, 252, 256, 267, 283, 285, 288, 289, 290, 295, 303, 305, 311, 312, 314, 315, 331, 333, 335, 339, 341, 342, 343, 344, 346, 347, 348, 351, 355, 357, 363, 366, 368, 376, 377, 381, 383, 400, 402, 412, 419, 421, 434, 447, 448, 449, 451, 452, 454, 455, 456, 478, 484, 486, 487, 492, 494, 497, 498, 499, 503, 507, 509, 513], "do": [1, 3, 4, 7, 15, 19, 20, 21, 27, 34, 44, 45, 46, 47, 49, 50, 58, 60, 64, 77, 78, 79, 104, 129, 151, 152, 153, 155, 162, 163, 165, 169, 200, 201, 214, 219, 220, 240, 245, 283, 285, 288, 311, 315, 318, 324, 330, 331, 333, 339, 341, 342, 343, 344, 346, 348, 366, 367, 376, 383, 390, 392, 393, 402, 405, 406, 411, 412, 413, 419, 425, 426, 434, 442, 446, 447, 449, 450, 451, 452, 454, 456, 471, 484, 485, 486, 492, 494, 495, 497, 498, 499, 505, 507, 509, 513, 514], "wish": [1, 3, 4, 5, 175, 245, 289, 290, 442, 451, 492, 494], "For": [1, 3, 4, 5, 7, 8, 9, 19, 26, 44, 49, 55, 56, 60, 77, 78, 103, 104, 139, 145, 151, 152, 153, 163, 164, 165, 169, 175, 182, 204, 207, 219, 220, 241, 252, 256, 283, 288, 290, 293, 294, 305, 306, 307, 308, 311, 312, 314, 317, 318, 324, 330, 331, 333, 334, 337, 339, 340, 341, 342, 344, 347, 348, 355, 375, 382, 400, 401, 408, 411, 412, 419, 421, 442, 446, 448, 449, 451, 452, 454, 455, 456, 463, 464, 480, 484, 492, 494, 495, 496, 497, 498, 499, 502, 503, 505, 507, 509, 510, 513], "descript": [1, 20, 21, 23, 37, 39, 45, 60, 66, 70, 104, 114, 165, 166, 195, 289, 293, 311, 331, 344, 347, 375, 415, 417, 419, 447, 454, 455, 456, 463, 484, 487, 492, 494, 498, 502, 503, 504, 505, 507, 509, 512], "can": [1, 3, 4, 5, 6, 8, 9, 10, 14, 16, 19, 21, 26, 32, 42, 44, 45, 46, 47, 48, 50, 55, 56, 58, 60, 61, 65, 66, 76, 77, 78, 79, 86, 89, 93, 104, 125, 129, 144, 151, 152, 155, 160, 162, 163, 165, 166, 167, 169, 172, 173, 175, 177, 179, 182, 187, 188, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 203, 204, 205, 208, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 226, 228, 229, 240, 241, 245, 247, 249, 252, 256, 259, 261, 266, 267, 271, 274, 283, 285, 288, 289, 292, 293, 294, 299, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 315, 316, 318, 324, 326, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 344, 346, 347, 348, 351, 355, 356, 360, 363, 366, 367, 369, 375, 376, 377, 380, 382, 383, 384, 390, 393, 395, 396, 397, 399, 400, 402, 404, 407, 408, 410, 411, 412, 415, 416, 419, 421, 427, 437, 439, 442, 446, 447, 448, 449, 451, 452, 454, 455, 456, 463, 464, 477, 478, 479, 480, 483, 484, 485, 486, 487, 489, 490, 492, 494, 495, 497, 498, 499, 502, 507, 508, 509, 510, 511, 513, 514], "program": [1, 116, 344, 345, 377, 453, 455, 456, 483, 484, 494, 497, 507], "actual": [1, 3, 5, 34, 45, 77, 78, 163, 165, 166, 204, 207, 215, 219, 240, 241, 288, 301, 304, 308, 311, 318, 334, 339, 340, 341, 342, 344, 347, 361, 369, 376, 383, 401, 416, 442, 446, 447, 451, 456, 471, 480, 487, 494, 498, 499, 507], "appropri": [1, 3, 7, 20, 21, 26, 32, 47, 58, 76, 78, 154, 162, 165, 175, 178, 211, 230, 238, 262, 277, 283, 290, 291, 324, 330, 344, 356, 390, 393, 399, 442, 452, 463, 464, 484, 485, 494, 507, 514], "__main__": [1, 449, 451, 478, 480], "expect": [1, 3, 4, 6, 31, 35, 74, 79, 101, 149, 159, 162, 166, 169, 197, 217, 219, 220, 223, 240, 245, 256, 266, 283, 285, 289, 294, 299, 305, 311, 317, 319, 324, 326, 331, 332, 356, 361, 364, 367, 383, 392, 407, 413, 414, 419, 451, 452, 457, 482, 492, 494, 495, 497, 500, 507, 510], "m": [1, 39, 66, 69, 70, 77, 80, 83, 92, 93, 95, 96, 97, 99, 101, 104, 112, 113, 129, 131, 132, 133, 136, 142, 165, 166, 171, 175, 342, 393, 400, 412, 419, 426, 447, 449, 453, 455, 456, 477, 485, 486, 494, 497, 499, 502, 503, 505, 509, 514], "myapp": [1, 447, 451, 494], "grab": [1, 14, 19, 152, 285, 369, 492, 509, 513], "ridabl": 1, "develop": [1, 21, 47, 76, 144, 152, 219, 245, 283, 284, 288, 311, 317, 333, 348, 354, 377, 382, 402, 412, 417, 446, 447, 448, 449, 451, 455, 456, 478, 483, 484, 494, 499, 507, 510], "dict": [1, 3, 5, 6, 21, 47, 49, 78, 79, 104, 155, 160, 166, 169, 200, 202, 219, 240, 241, 247, 256, 283, 284, 291, 292, 293, 294, 305, 308, 311, 314, 316, 318, 319, 324, 331, 332, 344, 346, 347, 352, 363, 374, 376, 382, 400, 404, 408, 417, 418, 419, 437, 480, 497], "dictionari": [1, 3, 4, 5, 47, 78, 80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142, 152, 153, 155, 160, 169, 195, 219, 240, 241, 243, 245, 247, 256, 283, 292, 293, 305, 311, 314, 319, 324, 330, 331, 332, 344, 346, 347, 352, 363, 369, 374, 375, 400, 404, 408, 411, 418, 419, 437, 449, 454, 487, 496, 507, 509], "renam": [1, 47, 214, 283, 331, 345, 350, 351, 376, 419, 425, 455, 486, 489, 490, 494], "render": [1, 3, 5, 22, 23, 26, 27, 45, 317, 446, 451, 453, 454, 513], "It": [1, 3, 4, 5, 9, 15, 19, 20, 21, 31, 43, 47, 56, 77, 79, 81, 83, 85, 86, 89, 90, 92, 93, 95, 96, 97, 99, 101, 104, 105, 111, 112, 113, 116, 137, 140, 142, 151, 152, 153, 163, 166, 169, 175, 178, 179, 202, 204, 214, 218, 219, 240, 241, 245, 256, 261, 283, 284, 285, 288, 292, 294, 311, 315, 317, 330, 331, 336, 337, 340, 341, 342, 343, 346, 347, 348, 349, 355, 362, 367, 369, 375, 382, 384, 410, 411, 412, 413, 415, 416, 418, 449, 450, 451, 454, 455, 473, 483, 484, 492, 494, 498, 501, 503, 506, 507, 509], "also": [1, 3, 4, 5, 8, 9, 33, 44, 47, 49, 61, 66, 77, 79, 86, 104, 151, 152, 155, 163, 165, 166, 172, 178, 179, 201, 202, 204, 212, 216, 218, 219, 238, 240, 245, 252, 254, 256, 266, 283, 285, 288, 294, 307, 308, 311, 316, 317, 322, 324, 331, 333, 334, 337, 341, 344, 346, 347, 349, 351, 375, 391, 401, 408, 411, 412, 416, 419, 442, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 469, 470, 473, 476, 478, 483, 484, 485, 486, 489, 492, 494, 497, 498, 499, 501, 502, 503, 504, 507, 509, 513, 514], "perform": [1, 3, 5, 9, 19, 20, 46, 47, 50, 55, 60, 61, 65, 76, 77, 78, 87, 104, 151, 152, 165, 169, 202, 203, 211, 214, 218, 219, 228, 229, 230, 231, 232, 234, 235, 236, 237, 241, 252, 256, 283, 288, 289, 294, 311, 315, 317, 318, 330, 331, 333, 342, 346, 347, 356, 375, 383, 390, 411, 412, 415, 417, 449, 452, 455, 458, 461, 463, 468, 482, 483, 484, 486, 490, 492, 494, 496, 497, 498, 500, 503, 507, 508, 509, 510], "result": [1, 3, 5, 9, 19, 21, 26, 37, 47, 56, 61, 78, 82, 104, 120, 123, 130, 144, 151, 163, 165, 167, 183, 197, 201, 214, 228, 240, 241, 247, 252, 254, 256, 282, 283, 288, 295, 298, 305, 311, 314, 315, 317, 324, 330, 331, 340, 346, 347, 375, 380, 402, 411, 413, 419, 437, 442, 449, 452, 454, 456, 471, 483, 484, 485, 490, 493, 494, 503, 507, 508, 509, 510, 513, 514], "cach": [1, 19, 47, 104, 129, 201, 282, 285, 308, 311, 329, 330, 331, 356, 376, 413, 431, 492, 497, 507], "somewhat": [1, 4, 43, 165, 252, 305, 311, 331, 341, 342, 456, 484, 494, 507], "expens": [1, 78, 282, 288, 311, 452], "detect": [1, 3, 5, 7, 9, 77, 282, 283, 303, 347, 419], "chang": [1, 3, 4, 5, 19, 47, 48, 77, 79, 104, 108, 151, 155, 173, 175, 212, 228, 238, 256, 283, 285, 288, 289, 294, 305, 308, 311, 314, 315, 316, 317, 318, 322, 326, 330, 331, 337, 339, 340, 342, 346, 347, 367, 375, 380, 383, 405, 406, 412, 417, 419, 437, 446, 447, 449, 450, 452, 455, 456, 468, 484, 485, 492, 494, 495, 497, 502, 503, 507, 510, 511, 513, 514], "invalid": [1, 3, 5, 56, 58, 78, 145, 146, 224, 256, 288, 299, 303, 308, 311, 344, 356, 397, 399, 403, 428, 444, 456, 486, 487, 492, 507], "recomput": [1, 104, 240, 288, 305, 308, 311], "specifi": [1, 2, 3, 5, 6, 13, 14, 15, 16, 17, 22, 30, 31, 34, 35, 36, 39, 41, 42, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 142, 149, 150, 155, 157, 158, 159, 160, 161, 163, 166, 173, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 204, 210, 211, 223, 224, 225, 226, 234, 235, 236, 238, 240, 241, 242, 245, 247, 249, 250, 252, 254, 256, 259, 260, 261, 266, 267, 268, 269, 270, 271, 274, 281, 285, 288, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 308, 311, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 408, 415, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 454, 456, 464, 474, 478, 486, 487, 489, 492, 493, 499, 502, 503, 507, 509, 510, 513], "pass": [1, 3, 5, 6, 8, 9, 19, 25, 31, 43, 47, 56, 58, 77, 78, 79, 151, 155, 166, 198, 214, 220, 240, 283, 285, 288, 289, 293, 311, 316, 324, 331, 337, 339, 342, 346, 347, 362, 368, 369, 375, 376, 377, 383, 394, 404, 405, 412, 440, 442, 447, 448, 451, 452, 456, 477, 480, 483, 497, 507], "pluginpath": 1, "These": [1, 4, 5, 19, 26, 34, 46, 48, 49, 60, 78, 108, 152, 155, 162, 163, 175, 200, 204, 206, 208, 216, 219, 223, 227, 229, 241, 245, 247, 249, 252, 261, 283, 285, 293, 305, 306, 311, 318, 322, 330, 331, 333, 337, 344, 347, 372, 374, 375, 377, 384, 393, 401, 426, 434, 449, 452, 454, 455, 456, 483, 484, 485, 486, 494, 495, 498, 503, 507, 508, 509, 510, 511, 513, 514], "mai": [1, 3, 4, 5, 19, 20, 26, 32, 33, 37, 43, 44, 46, 47, 49, 50, 55, 58, 60, 66, 69, 78, 79, 81, 104, 108, 151, 152, 153, 154, 155, 163, 165, 166, 173, 200, 203, 204, 208, 211, 214, 215, 219, 227, 238, 241, 245, 247, 252, 256, 283, 285, 288, 289, 290, 293, 305, 308, 310, 311, 312, 314, 315, 317, 318, 330, 331, 333, 334, 335, 339, 342, 344, 346, 347, 351, 357, 361, 367, 368, 377, 390, 393, 397, 399, 408, 411, 416, 418, 442, 447, 449, 451, 454, 455, 456, 469, 484, 485, 486, 487, 492, 494, 497, 498, 499, 502, 503, 504, 507, 508, 509, 510, 513, 514], "e": [1, 3, 4, 5, 7, 8, 9, 21, 26, 32, 37, 47, 60, 77, 78, 79, 89, 93, 95, 96, 99, 142, 151, 152, 153, 154, 155, 160, 162, 163, 165, 166, 167, 175, 195, 200, 201, 202, 203, 204, 220, 228, 240, 241, 245, 252, 256, 283, 284, 285, 288, 289, 292, 293, 305, 308, 311, 314, 315, 316, 318, 324, 330, 331, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 346, 347, 367, 369, 374, 375, 384, 400, 404, 411, 412, 415, 416, 419, 446, 448, 451, 452, 455, 478, 483, 484, 485, 486, 487, 492, 494, 497, 498, 503, 504, 507, 510, 513, 514], "g": [1, 3, 5, 7, 9, 21, 32, 37, 47, 60, 77, 78, 79, 80, 81, 82, 83, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 116, 133, 134, 135, 136, 137, 139, 140, 142, 151, 153, 154, 155, 160, 162, 163, 165, 167, 169, 175, 178, 184, 195, 200, 201, 202, 203, 204, 220, 228, 237, 240, 241, 252, 256, 261, 283, 285, 288, 289, 292, 293, 305, 308, 311, 314, 318, 324, 330, 331, 333, 334, 335, 339, 340, 342, 344, 346, 347, 367, 375, 384, 400, 404, 411, 415, 416, 419, 448, 451, 452, 455, 475, 478, 483, 484, 485, 486, 487, 492, 494, 495, 497, 498, 503, 504, 505, 507, 510, 513, 514], "startup": [1, 204, 211], "full": [1, 3, 5, 10, 14, 19, 28, 47, 49, 53, 55, 56, 59, 60, 79, 89, 163, 167, 200, 201, 204, 220, 241, 252, 288, 293, 294, 307, 311, 312, 317, 318, 326, 329, 331, 340, 341, 342, 349, 352, 360, 363, 364, 369, 376, 381, 401, 415, 416, 418, 421, 425, 449, 451, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 492, 493, 494, 498, 499, 502, 503, 505, 507, 509, 512, 513, 514], "namespac": [1, 9, 39, 79, 125, 212, 283, 347, 424, 451, 455, 487, 494, 507], "There": [1, 3, 5, 10, 21, 60, 78, 152, 165, 169, 184, 215, 224, 238, 245, 252, 288, 289, 294, 305, 317, 330, 331, 334, 344, 347, 352, 395, 411, 419, 448, 449, 452, 454, 455, 487, 494, 497, 498, 499, 501, 507, 509, 513], "comma": [1, 455], "between": [1, 3, 4, 5, 6, 14, 19, 50, 64, 77, 78, 104, 160, 162, 163, 165, 166, 172, 175, 200, 202, 203, 204, 219, 220, 224, 240, 245, 252, 266, 283, 285, 288, 289, 294, 307, 311, 312, 322, 324, 325, 330, 331, 333, 337, 339, 340, 341, 342, 344, 347, 356, 375, 383, 400, 406, 410, 412, 416, 419, 444, 452, 454, 455, 470, 483, 484, 486, 487, 492, 494, 495, 496, 497, 498, 502, 503, 504, 507, 509, 510, 511], "individu": [1, 3, 5, 19, 46, 55, 60, 72, 78, 155, 204, 205, 219, 238, 241, 245, 247, 288, 295, 311, 314, 318, 329, 333, 356, 377, 402, 452, 455, 492, 493, 498, 507, 513], "dot": [1, 342, 437, 453, 494], "repres": [1, 3, 5, 8, 46, 70, 77, 94, 104, 151, 153, 155, 162, 165, 169, 175, 200, 201, 202, 214, 219, 220, 240, 241, 245, 247, 252, 255, 256, 257, 266, 283, 284, 285, 288, 289, 291, 293, 306, 307, 308, 310, 311, 330, 331, 332, 335, 337, 339, 340, 341, 342, 344, 347, 350, 356, 357, 366, 368, 401, 408, 419, 449, 487, 488, 489, 492, 494, 498, 499, 502, 503, 505, 507, 509], "stuff": [1, 5, 47, 289, 402, 406, 452, 455, 456], "plugindir": 1, "pluginmod": 1, "plugincl": 1, "whatev": [1, 3, 4, 7, 55, 66, 214, 348, 402, 405, 412, 451, 452, 494, 507], "plugmod2": 1, "plugcls2": 1, "linux": [1, 28, 31, 484, 485, 487, 489, 494, 509, 514], "unix": [1, 494], "py": [1, 3, 6, 28, 119, 125, 155, 201, 206, 207, 212, 216, 219, 223, 311, 354, 355, 363, 393, 415, 426, 427, 429, 438, 440, 446, 449, 451, 452, 455, 456, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 486, 487, 489, 490, 492, 498, 500, 507, 509], "meant": [1, 155, 283, 308, 330, 332, 369, 382, 434, 448, 454, 456, 484, 499, 502, 509], "taken": [1, 240, 241, 311, 340, 344, 348, 356, 442, 497, 499], "though": [1, 4, 101, 165, 200, 254, 288, 311, 343, 355, 382, 401, 419, 437, 442, 449, 456, 486, 494, 507, 509, 513], "public": [1, 4, 56, 80, 133, 165, 175, 311, 419, 450, 456, 486], "idea": [1, 208, 299, 308, 332, 350, 361, 447, 451, 452, 455, 484, 494], "differ": [1, 3, 4, 5, 7, 14, 21, 28, 35, 47, 50, 55, 77, 78, 79, 82, 104, 125, 162, 165, 167, 173, 175, 193, 197, 203, 204, 206, 208, 214, 224, 227, 237, 238, 240, 241, 245, 252, 256, 259, 285, 288, 294, 295, 300, 308, 311, 312, 316, 318, 324, 330, 331, 333, 340, 341, 344, 351, 355, 363, 369, 383, 390, 401, 405, 408, 412, 413, 416, 419, 424, 437, 452, 454, 455, 456, 463, 484, 487, 492, 494, 495, 498, 499, 502, 503, 507, 509, 510, 511, 513], "regular": [1, 39, 47, 165, 178, 179, 340, 342, 419, 438, 442, 494, 499, 507], "becaus": [1, 2, 3, 5, 10, 14, 15, 19, 37, 56, 74, 77, 93, 104, 155, 160, 162, 163, 166, 173, 175, 197, 200, 202, 204, 216, 219, 223, 228, 241, 243, 252, 256, 283, 285, 288, 289, 305, 307, 308, 311, 315, 317, 330, 331, 337, 339, 340, 341, 342, 347, 360, 361, 366, 375, 392, 399, 400, 401, 406, 412, 413, 417, 418, 419, 442, 448, 451, 452, 454, 471, 484, 485, 492, 497, 507, 513, 514], "As": [1, 3, 5, 47, 55, 58, 79, 135, 165, 229, 283, 288, 295, 308, 311, 318, 333, 344, 400, 401, 424, 449, 451, 456, 484, 491, 492, 495, 498, 499, 503, 507, 509], "restrict": [1, 55, 201, 283, 285, 311, 318, 331, 344, 507, 510, 513], "flexibl": [1, 3, 204, 214, 283, 330, 361, 471, 484, 486, 494, 507], "power": [1, 28, 56, 95, 96, 99, 139, 144, 165, 167, 177, 178, 200, 204, 211, 212, 216, 218, 219, 220, 223, 226, 227, 238, 240, 252, 254, 256, 288, 311, 318, 330, 331, 344, 368, 369, 400, 401, 441, 442, 449, 451, 454, 479, 484, 487, 492, 494, 497, 498, 499, 502, 503, 505, 507, 508, 509, 512, 513], "usual": [1, 3, 5, 34, 79, 103, 155, 159, 175, 200, 219, 252, 283, 288, 331, 333, 347, 400, 451, 455, 456, 486, 499, 507, 509], "textual": [1, 478, 499], "screen": [1, 416, 485, 494, 514], "want": [1, 2, 3, 5, 7, 10, 21, 32, 47, 55, 74, 78, 79, 104, 144, 162, 165, 166, 169, 173, 178, 214, 219, 238, 240, 252, 256, 283, 285, 288, 293, 295, 305, 308, 311, 312, 317, 330, 331, 344, 347, 348, 351, 355, 366, 367, 369, 400, 401, 408, 412, 416, 419, 427, 446, 449, 450, 451, 452, 454, 455, 456, 478, 484, 485, 492, 494, 497, 499, 507, 509, 510, 513, 514], "handl": [2, 3, 5, 6, 14, 16, 26, 28, 43, 44, 47, 55, 60, 77, 78, 79, 92, 104, 151, 160, 162, 166, 205, 219, 224, 225, 238, 240, 283, 285, 288, 292, 293, 311, 314, 319, 331, 333, 339, 342, 347, 355, 367, 375, 384, 400, 403, 411, 425, 438, 442, 484, 486, 487, 489, 492, 495, 499, 502, 507], "persist": [2, 3, 6, 333, 344, 449, 454, 484, 487], "static": [2, 3, 5, 8, 9, 10, 14, 16, 21, 27, 43, 55, 58, 60, 70, 78, 82, 151, 200, 204, 205, 208, 215, 218, 219, 223, 231, 238, 252, 272, 278, 283, 284, 285, 288, 305, 311, 314, 318, 330, 336, 337, 339, 340, 342, 343, 347, 355, 375, 377, 380, 383, 386, 396, 399, 401, 402, 451, 462, 483, 484, 489], "cmd": [2, 218, 219, 283, 393, 452], "certain": [2, 60, 152, 204, 240, 252, 283, 285, 288, 294, 311, 312, 322, 333, 347, 377, 384, 400, 451, 452, 454, 463, 484, 486, 494, 497, 498, 507, 509], "action": [2, 15, 39, 66, 70, 211, 261, 308, 324, 347, 377, 392, 402, 406, 417, 447, 449, 452, 454, 487], "memori": [2, 3, 4, 5, 6, 19, 21, 35, 47, 77, 78, 152, 205, 214, 240, 241, 252, 283, 311, 317, 331, 342, 344, 411, 416, 418, 452, 487, 489, 499, 502, 505, 507], "profil": [2, 21, 47, 402, 418, 448, 450, 455, 485, 487, 497, 507, 514], "small": [2, 173, 187, 192, 314, 331, 333, 382, 472, 483, 484, 487, 494, 495, 503, 507], "enough": [2, 37, 43, 56, 139, 160, 165, 169, 205, 220, 224, 259, 288, 311, 324, 410, 411, 455, 456, 484, 495, 498, 505, 509], "don": [2, 3, 9, 19, 78, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 153, 155, 162, 204, 208, 219, 250, 283, 288, 308, 311, 331, 369, 382, 410, 411, 412, 419, 430, 434, 447, 450, 452, 454, 477, 485, 492, 507, 509, 514], "undon": 2, "so": [2, 3, 4, 5, 6, 9, 19, 20, 21, 33, 37, 43, 44, 47, 49, 77, 78, 89, 104, 129, 144, 151, 152, 153, 155, 162, 166, 169, 175, 178, 202, 204, 214, 215, 219, 220, 240, 243, 245, 247, 249, 259, 260, 283, 285, 288, 289, 292, 293, 294, 299, 303, 305, 306, 308, 311, 312, 315, 317, 318, 330, 331, 333, 337, 339, 340, 341, 342, 344, 346, 347, 348, 350, 351, 355, 367, 369, 376, 383, 384, 400, 408, 410, 411, 412, 413, 416, 418, 419, 442, 446, 448, 449, 451, 452, 453, 454, 455, 456, 462, 473, 480, 483, 484, 485, 486, 487, 490, 492, 493, 494, 495, 496, 497, 498, 503, 505, 507, 509, 512, 513, 514], "r": [2, 3, 5, 6, 7, 9, 11, 15, 19, 20, 21, 25, 26, 27, 28, 32, 38, 43, 44, 45, 47, 58, 78, 92, 93, 115, 142, 151, 165, 166, 171, 175, 196, 197, 201, 204, 211, 215, 218, 219, 220, 224, 238, 240, 245, 252, 254, 256, 257, 259, 260, 261, 263, 283, 284, 288, 302, 307, 311, 312, 315, 318, 319, 321, 326, 330, 331, 332, 335, 340, 343, 344, 346, 349, 354, 382, 390, 393, 399, 400, 412, 416, 419, 449, 452, 454, 455, 462, 463, 464, 467, 470, 475, 480, 481, 482, 484, 486, 487, 492, 494, 497, 498, 499, 500, 507, 508, 509, 513], "stage": [2, 25, 238, 263, 283, 454], "diagram": [2, 25, 155, 240, 305, 416, 446, 454, 487], "come": [2, 4, 44, 65, 77, 79, 104, 165, 172, 177, 200, 201, 203, 205, 212, 238, 252, 283, 288, 332, 344, 346, 347, 362, 394, 400, 408, 419, 442, 447, 449, 451, 456, 459, 466, 471, 480, 482, 484, 487, 492, 494, 495, 497, 498, 500, 507, 509], "togeth": [2, 9, 45, 151, 201, 240, 241, 245, 288, 293, 335, 341, 348, 366, 442, 451, 454, 483, 494, 509], "end": [2, 3, 5, 6, 13, 19, 20, 21, 22, 25, 26, 45, 77, 78, 104, 152, 163, 165, 166, 169, 204, 254, 256, 263, 283, 292, 317, 341, 367, 390, 400, 401, 419, 449, 454, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 495, 497, 498, 503, 507, 509, 511], "section": [2, 3, 5, 10, 22, 25, 26, 91, 136, 137, 152, 155, 163, 165, 167, 171, 173, 174, 176, 182, 195, 197, 199, 200, 201, 202, 212, 213, 224, 238, 240, 241, 245, 252, 254, 256, 261, 263, 266, 267, 268, 283, 285, 288, 293, 294, 299, 302, 311, 317, 331, 344, 352, 416, 418, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 463, 466, 467, 470, 475, 476, 482, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 502, 503, 504, 509, 510, 511, 513, 514], "creat": [2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 25, 26, 28, 30, 31, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 58, 59, 60, 61, 62, 66, 70, 74, 75, 77, 78, 104, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 137, 149, 150, 151, 153, 155, 157, 158, 159, 160, 161, 163, 165, 166, 167, 169, 171, 173, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 202, 203, 204, 210, 211, 218, 219, 223, 224, 225, 226, 234, 235, 236, 240, 241, 247, 249, 250, 254, 256, 257, 259, 260, 263, 266, 267, 268, 269, 270, 271, 274, 281, 283, 285, 288, 289, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 311, 317, 318, 324, 325, 326, 327, 328, 329, 330, 331, 334, 339, 341, 342, 344, 345, 346, 347, 348, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 375, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 446, 448, 449, 450, 451, 452, 454, 459, 466, 470, 471, 472, 478, 479, 482, 484, 485, 487, 489, 490, 492, 493, 498, 499, 500, 507, 509, 511, 512, 513, 514], "graph": [2, 26, 418, 454, 470], "across": [2, 35, 47, 56, 91, 162, 165, 171, 173, 176, 226, 311, 314, 331, 344, 351, 366, 383, 394, 410, 416, 452, 484, 486, 496, 497, 498, 502, 507, 508, 509, 513], "timenodegrouppattern": [2, 3, 5], "versionmajor": [2, 3, 5], "versionminor": [2, 3, 5], "open": [2, 3, 5, 6, 10, 45, 60, 77, 165, 166, 237, 331, 400, 405, 406, 446, 447, 448, 455, 480, 484, 485, 490, 491, 492, 498, 507, 509, 514], "isopen": [2, 3, 5], "writesystemattribut": [2, 3, 5, 15], "grablocalcommithash": [2, 3, 5], "splitdatabas": [2, 3, 5], "filenam": [2, 3, 5, 6, 74, 78, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 195, 204, 368, 395, 405, 415, 416, 454], "loadc": [2, 3, 5, 492], "loadblueprint": [2, 3, 5], "loadgeometri": [2, 3, 5], "writeinputstodb": [2, 3, 5], "readinputsfromdb": [2, 3, 5], "mergehistori": [2, 3, 5], "gentimestepgroup": [2, 3, 5], "getlayout": [2, 3, 5], "gentimestep": [2, 3, 5], "genauxiliarydata": [2, 3, 5], "getauxiliarydatapath": [2, 3, 5], "kei": [2, 3, 5, 19, 26, 47, 78, 104, 144, 155, 160, 166, 169, 197, 200, 202, 219, 240, 241, 244, 245, 247, 256, 267, 283, 284, 288, 289, 290, 291, 292, 293, 294, 295, 305, 308, 310, 311, 314, 324, 331, 344, 346, 357, 368, 369, 374, 382, 400, 401, 404, 408, 416, 418, 419, 437, 454, 462, 470, 471, 485, 492, 496, 497, 502, 503, 504, 505, 507, 514], "geth5group": [2, 3, 5], "hastimestep": [2, 3, 5], "writetodb": [2, 3, 5, 9, 492], "synctosharedfold": [2, 3, 5], "loadreadonli": [2, 3, 5, 509], "gethistorybyloc": [2, 3, 5], "gethistoriesbyloc": [2, 3, 5], "gethistori": [2, 3, 5, 6, 509], "initdb": [2, 3, 6, 492], "writedbeverynod": [2, 3, 6], "closedb": [2, 3, 6], "preprestartrun": [2, 3, 6], "loadstat": [2, 3, 6, 203, 204], "comparedb3": [2, 3, 13], "outputwrit": [2, 3, 4], "diffresult": [2, 3, 4], "geth5groupnam": [2, 3, 5], "packspecialdata": [2, 3, 5, 347, 509], "unpackspecialdata": [2, 3, 5, 347, 509], "collectblocknumberdens": [2, 3, 5], "jaggedarrai": [2, 3, 5, 16, 489], "layout": [2, 3, 5, 17, 220, 283, 289, 295, 317, 330, 341, 352, 401, 454, 507, 509], "replacenoneswithnonsens": [2, 3, 9], "replacenonsensewithnon": [2, 3, 9], "passivedbloadplugin": [2, 3, 509], "passthroughyaml": [2, 3, 10], "typedef": [2, 3], "group": [2, 3, 4, 5, 9, 22, 23, 26, 34, 44, 47, 152, 153, 165, 167, 169, 173, 174, 175, 178, 179, 182, 184, 193, 197, 200, 201, 202, 204, 224, 238, 240, 241, 243, 245, 252, 254, 256, 266, 269, 283, 288, 291, 292, 299, 308, 311, 318, 330, 331, 342, 347, 366, 404, 418, 449, 452, 454, 455, 467, 470, 481, 482, 487, 489, 492, 499, 500, 503, 505, 507, 509, 513], "imag": [2, 22, 23, 24, 26, 310, 317, 330, 402, 416, 418, 434, 450, 453, 471, 487], "html": [2, 21, 22, 23, 26, 31, 47, 70, 83, 101, 165, 173, 307, 347, 416, 443, 446, 450, 484, 501, 507], "htmlfile": [2, 22, 24], "tag": [2, 22, 24, 26, 155, 252, 318, 442, 456, 507], "head": [2, 22, 24, 26, 263, 331, 454, 484, 507], "bodi": [2, 22, 24, 66, 151, 483], "img": [2, 22, 24, 26], "b": [2, 10, 22, 24, 43, 49, 55, 82, 93, 95, 96, 99, 116, 136, 137, 153, 155, 159, 162, 175, 184, 200, 201, 219, 220, 223, 237, 240, 245, 252, 284, 285, 288, 301, 303, 311, 316, 330, 331, 333, 344, 348, 353, 355, 357, 363, 412, 442, 444, 449, 452, 468, 470, 471, 475, 479, 486, 487, 489, 490, 492, 494, 497, 498, 499, 503, 505, 507, 508, 510], "p": [2, 3, 22, 24, 26, 80, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 103, 104, 105, 111, 112, 113, 115, 116, 120, 136, 140, 142, 153, 163, 169, 171, 175, 176, 220, 223, 226, 227, 288, 307, 308, 311, 316, 330, 344, 346, 363, 410, 419, 442, 447, 452, 454, 470, 471, 479, 487, 489, 492, 494, 498, 502, 503, 504, 505, 507, 509, 513], "A": [2, 3, 5, 8, 9, 10, 19, 20, 22, 23, 24, 26, 27, 28, 32, 39, 43, 44, 46, 47, 55, 56, 58, 66, 70, 78, 79, 80, 83, 90, 93, 104, 105, 108, 112, 125, 137, 138, 139, 145, 151, 152, 153, 154, 155, 160, 163, 165, 166, 167, 171, 173, 175, 198, 200, 201, 202, 204, 211, 214, 216, 218, 219, 220, 224, 237, 240, 241, 245, 247, 252, 256, 283, 284, 285, 288, 290, 291, 292, 293, 295, 297, 300, 301, 303, 305, 306, 307, 308, 310, 311, 314, 315, 318, 319, 324, 330, 331, 332, 333, 334, 340, 341, 342, 343, 346, 347, 348, 350, 351, 353, 357, 366, 367, 369, 375, 377, 383, 390, 393, 396, 397, 399, 400, 401, 408, 412, 416, 418, 419, 424, 442, 444, 446, 449, 451, 454, 455, 456, 470, 478, 480, 483, 484, 486, 492, 493, 494, 496, 498, 499, 502, 503, 504, 507, 508, 509, 513], "titl": [2, 22, 23, 24, 26, 46, 47, 55, 56, 214, 274, 369, 400, 416, 418, 447, 454, 469, 470, 492, 495, 496, 497, 507], "h1": [2, 22, 24, 26], "h2": [2, 22, 24, 26, 84], "h3": [2, 22, 24], "h4": [2, 22, 24, 26], "ul": [2, 22, 24], "li": [2, 22, 24, 153, 175, 256, 306, 311, 331, 442], "style": [2, 22, 24, 47, 55, 104, 147, 155, 166, 283, 331, 344, 346, 352, 369, 376, 455, 484, 487, 507], "div": [2, 22, 24, 26, 454], "caption": [2, 22, 24, 26, 263, 454], "tbodi": [2, 22, 24], "thead": [2, 22, 24], "tr": [2, 22, 24], "th": [2, 9, 22, 24, 26, 133, 153, 175, 204, 311, 342, 419, 449, 494, 503, 505, 507, 510], "td": [2, 22, 24, 82, 115], "span": [2, 22, 24, 337, 367], "footer": [2, 22, 24], "link": [2, 22, 24, 26, 104, 163, 204, 219, 288, 292, 295, 301, 305, 308, 311, 313, 314, 315, 318, 324, 325, 331, 341, 356, 383, 396, 437, 449, 454, 455, 456, 483, 486, 498, 503, 508, 513], "encode64": [2, 22, 24, 26], "writestandardreporttempl": [2, 22, 24], "newreportutil": [2, 22, 454], "insertblueprintcont": [2, 22, 25], "insertgeneralreportcont": [2, 22, 25], "comprehensivebolcont": [2, 22, 25], "insertdesigncont": [2, 22, 25], "insertblockdesignreport": [2, 22, 25], "insertcoredesignreport": [2, 22, 25], "insertendoflifecont": [2, 22, 25], "insertblockdiagram": [2, 22, 25], "insertmetat": [2, 22, 25], "insertsettingsdata": [2, 22, 25], "getpindesignt": [2, 22, 25], "insertareafractionsreport": [2, 22, 25], "createdimensionreport": [2, 22, 25], "insertcoreandassemblymap": [2, 22, 25], "newreport": [2, 22, 25, 454, 487], "reportcont": [2, 22, 25, 26, 263, 283, 450], "reportnod": [2, 22, 26], "timeseri": [2, 22, 26, 30, 263, 450], "reportstag": [2, 22, 26, 263, 283, 454], "reportinterfac": [2, 22, 28, 47, 449], "reportingutil": [2, 22], "writewelcomehead": [2, 22, 28], "getnodenam": [2, 22, 28, 31], "getsysteminfo": [2, 22, 28, 31], "getinterfacestacksummari": [2, 22, 28], "writetightcouplingconvergencesummari": [2, 22, 28], "writeassemblymasssummari": [2, 22, 28], "writecyclesummari": [2, 22, 28], "setneutronbalancesreport": [2, 22, 28], "summarizepindesign": [2, 22, 28], "summarizepowerpeak": [2, 22, 28], "summarizepow": [2, 22, 28], "makecoredesignreport": [2, 22, 28], "makeblockdesignreport": [2, 22, 28], "makecoreandassemblymap": [2, 22, 28], "test_historytrack": [2, 33], "runtutorialnotebook": [2, 33, 34], "testhistorytrack": [2, 33, 34], "testhistorytrackernomodel": [2, 33, 34], "test_memoryprofil": [2, 33], "testmemoryprofil": [2, 33, 35], "klasscountertest": [2, 33, 35], "test_snapshot": [2, 33], "mockreactorparam": [2, 33, 36, 251, 253, 254], "mockreactor": [2, 33, 36, 164, 196, 197, 212, 251, 253, 254, 273, 274], "testsnapshotinterfac": [2, 33, 36], "dumper": [2, 37, 44, 45, 292], "visfiledump": [2, 37, 38, 44, 45], "visfileentrypoint": [2, 37, 39], "vtkmesh": [2, 37, 41, 43], "createreactorblockmesh": [2, 37, 43], "createreactorassemmesh": [2, 37, 43], "createblockmesh": [2, 37, 43], "createassemmesh": [2, 37, 43], "vtk": [2, 37, 43, 485, 486, 494, 514], "limit": [2, 3, 5, 37, 104, 155, 219, 228, 252, 256, 283, 288, 289, 312, 342, 343, 355, 382, 408, 442, 451, 455, 484, 486, 494, 498, 502, 503, 504, 507, 510], "vtkdumper": [2, 37, 44], "xdmf": [2, 37, 42, 485, 486, 514], "xdmfdumper": [2, 37, 45], "tracker": [2, 34, 78, 418, 484, 490], "add": [2, 4, 21, 22, 25, 26, 27, 43, 46, 47, 55, 56, 58, 66, 78, 104, 151, 153, 155, 171, 173, 176, 204, 208, 245, 252, 254, 263, 283, 284, 285, 288, 305, 311, 317, 318, 324, 326, 331, 332, 341, 344, 346, 347, 348, 350, 351, 355, 362, 366, 367, 369, 377, 384, 399, 400, 402, 415, 416, 418, 442, 446, 447, 448, 449, 452, 454, 455, 470, 480, 485, 486, 487, 489, 492, 494, 497, 499, 504, 507, 513, 514], "eol": [2, 3, 32, 78, 204, 208, 218, 283, 449, 454, 492, 507, 509], "track": [2, 3, 4, 6, 21, 44, 47, 153, 163, 167, 219, 245, 252, 263, 285, 288, 311, 318, 331, 346, 369, 397, 442, 446, 456, 486, 487, 507], "detailed_assembly_flag": [2, 19], "adddetailassembliesbol": [2, 19], "addalldetailedassem": [2, 19], "adddetailassemsbyassemnum": [2, 19], "gettrackedparam": [2, 19], "adddetailassembli": [2, 19], "getdetailassembli": [2, 19], "getdetailblock": [2, 19], "filtertimeindic": [2, 19], "writeassemhistori": [2, 19], "preloadblockhistoryv": [2, 19], "unloadblockhistoryv": [2, 19], "getblockhistoryv": [2, 19], "gettimestep": [2, 19], "cleanarmifil": [2, 20], "cleanlastcyclefil": [2, 20], "printcurrentmemoryst": [2, 21], "displaymemoryusag": [2, 21], "checkforduplicateobjectsonarmimodel": [2, 21], "getreferr": [2, 21], "countobject": [2, 21], "minprocessmemoryinmb": [2, 21, 505], "maxprocessmemoryinmb": [2, 21, 505], "printusag": [2, 21], "activatedefaultsnapshot": [2, 32], "respons": [3, 9, 47, 55, 151, 256, 283, 290, 294, 306, 308, 316, 331, 348, 456, 492, 494, 507], "disk": [3, 47, 165, 204, 214, 493], "progress": [3, 9, 214, 484, 509], "period": [3, 77, 91, 153, 204, 284, 293, 334, 356, 455, 470, 478, 498, 503, 505, 507, 513], "primari": [3, 6, 60, 78, 151, 182, 204, 205, 224, 283, 284, 315, 316, 331, 333, 449, 451, 452, 455, 492, 494, 497, 502, 505, 507, 509], "output": [3, 4, 5, 20, 21, 44, 46, 47, 61, 65, 66, 68, 78, 144, 145, 173, 175, 188, 204, 214, 219, 252, 274, 288, 293, 311, 317, 318, 330, 339, 342, 352, 369, 381, 384, 397, 405, 406, 411, 413, 419, 425, 431, 437, 442, 446, 449, 453, 454, 484, 486, 487, 493, 497, 499, 501, 506, 507, 513], "follow": [3, 4, 9, 19, 32, 144, 152, 163, 165, 201, 203, 204, 212, 219, 220, 228, 245, 247, 283, 308, 311, 314, 317, 324, 330, 331, 333, 337, 340, 348, 376, 383, 411, 412, 415, 417, 419, 442, 446, 447, 449, 451, 452, 454, 455, 456, 484, 485, 492, 493, 494, 496, 498, 499, 501, 507, 508, 509, 510, 511, 513, 514], "analysi": [3, 5, 19, 21, 32, 47, 55, 79, 165, 176, 203, 204, 212, 214, 227, 228, 237, 245, 283, 366, 401, 413, 418, 449, 451, 454, 463, 480, 483, 492, 494, 497, 498, 499, 507, 508, 509], "restart": [3, 5, 6, 15, 20, 208, 218, 219, 252, 294, 400, 402, 449, 487, 509], "select": [3, 5, 37, 78, 165, 220, 240, 241, 245, 274, 294, 347, 368, 400, 411, 412, 416, 428, 437, 471, 484, 492, 496, 507], "relat": [3, 5, 15, 33, 44, 46, 50, 55, 60, 77, 139, 153, 169, 191, 200, 212, 229, 232, 240, 246, 264, 272, 279, 288, 311, 330, 344, 346, 347, 348, 371, 372, 373, 402, 412, 415, 451, 486, 488, 490, 494, 497, 502, 503, 507, 511, 513], "associ": [3, 5, 17, 26, 44, 47, 49, 63, 139, 144, 151, 153, 164, 212, 238, 245, 290, 311, 331, 332, 335, 341, 342, 344, 346, 347, 348, 377, 400, 449, 451, 478, 494, 502, 507, 509], "repeat": [3, 167, 174, 218, 219, 224, 283, 317, 318, 331, 342, 403, 412, 416, 442, 450, 454, 484, 486, 507, 510], "yourself": [3, 89, 152, 416, 455], "dry": [3, 5, 80, 507], "practic": [3, 5, 89, 162, 283, 308, 324, 347, 348, 377, 408, 448, 450, 452, 456, 484, 494, 507, 509], "wai": [3, 5, 6, 10, 21, 45, 47, 49, 55, 89, 104, 151, 152, 163, 165, 183, 204, 214, 240, 252, 283, 285, 288, 311, 318, 330, 331, 333, 342, 344, 347, 355, 363, 366, 367, 375, 392, 412, 413, 419, 446, 449, 453, 454, 456, 483, 484, 485, 487, 492, 495, 498, 501, 507, 510, 513, 514], "share": [3, 32, 169, 198, 204, 205, 214, 245, 285, 322, 344, 348, 383, 401, 452, 490, 498, 499, 507], "major": [3, 204, 212, 289, 342, 344, 418, 454, 456, 484], "you": [3, 5, 6, 7, 10, 19, 20, 21, 32, 39, 47, 55, 56, 58, 66, 70, 78, 89, 102, 104, 135, 152, 153, 154, 155, 162, 163, 165, 169, 172, 173, 178, 191, 198, 200, 204, 212, 214, 219, 220, 240, 241, 247, 252, 283, 285, 288, 293, 295, 299, 305, 308, 311, 312, 331, 332, 340, 341, 348, 349, 351, 355, 367, 369, 377, 393, 400, 401, 410, 412, 415, 416, 417, 418, 419, 426, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 477, 478, 479, 482, 484, 485, 492, 493, 494, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 513, 514], "1": [3, 9, 14, 15, 21, 26, 34, 43, 49, 54, 56, 65, 70, 74, 77, 78, 80, 81, 82, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 108, 110, 111, 112, 113, 116, 120, 125, 133, 135, 136, 137, 139, 140, 141, 142, 146, 147, 151, 153, 155, 159, 163, 166, 167, 169, 172, 173, 174, 175, 179, 182, 184, 187, 192, 197, 200, 204, 211, 219, 220, 237, 238, 240, 241, 247, 252, 254, 256, 261, 283, 285, 288, 293, 297, 300, 301, 303, 306, 307, 308, 310, 311, 315, 317, 318, 322, 324, 326, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 347, 352, 354, 355, 356, 357, 361, 366, 375, 376, 377, 392, 399, 400, 401, 402, 404, 408, 410, 411, 412, 417, 418, 419, 421, 427, 441, 442, 449, 454, 455, 456, 462, 463, 464, 470, 472, 473, 474, 477, 478, 480, 484, 489, 491, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 507, 510, 511, 513], "origin": [3, 4, 5, 8, 14, 39, 45, 47, 55, 151, 152, 154, 159, 165, 190, 191, 202, 204, 205, 238, 240, 250, 266, 288, 293, 305, 311, 314, 318, 324, 326, 329, 330, 331, 333, 337, 340, 341, 376, 380, 400, 401, 405, 410, 452, 456, 478, 484, 487, 494, 498, 499, 503, 504, 507, 509, 513], "were": [3, 4, 5, 55, 77, 151, 165, 205, 206, 216, 219, 224, 245, 283, 288, 295, 308, 311, 322, 330, 331, 332, 333, 344, 348, 384, 454, 455, 484, 486, 487, 488, 492, 494, 499, 507, 509], "sql": [3, 78], "2": [3, 4, 9, 14, 21, 26, 34, 36, 54, 56, 77, 78, 83, 84, 90, 92, 93, 95, 96, 99, 104, 108, 110, 112, 113, 123, 125, 133, 135, 136, 137, 139, 146, 151, 152, 153, 154, 155, 159, 163, 167, 171, 172, 175, 178, 179, 188, 200, 201, 211, 219, 220, 237, 238, 240, 241, 247, 250, 252, 288, 293, 301, 305, 306, 307, 308, 311, 317, 318, 322, 324, 326, 331, 333, 334, 335, 337, 340, 341, 342, 343, 344, 347, 352, 354, 355, 356, 357, 361, 363, 366, 377, 393, 400, 401, 404, 410, 411, 412, 417, 418, 419, 421, 426, 427, 438, 441, 442, 444, 449, 454, 455, 462, 464, 470, 471, 472, 474, 475, 477, 479, 480, 484, 491, 492, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 507, 509, 510, 513], "storag": [3, 6, 23, 77, 283, 341, 344, 351, 362, 418, 507], "wa": [3, 4, 5, 6, 10, 37, 77, 80, 92, 104, 151, 155, 159, 165, 166, 169, 184, 187, 191, 192, 197, 204, 219, 220, 227, 238, 256, 283, 288, 289, 295, 308, 311, 317, 331, 333, 340, 341, 342, 350, 376, 377, 384, 395, 402, 412, 415, 444, 454, 455, 456, 478, 484, 486, 487, 488, 492, 494, 497, 498, 499, 502, 507, 508, 509], "hdf5": [3, 4, 5, 8, 11, 34, 45, 77, 347, 408, 486, 489, 494, 497, 509], "requir": [3, 14, 20, 31, 32, 34, 37, 39, 45, 49, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 104, 151, 154, 155, 163, 200, 204, 211, 214, 219, 223, 224, 240, 241, 242, 245, 249, 252, 256, 283, 284, 285, 288, 290, 292, 293, 294, 299, 307, 311, 312, 314, 317, 318, 319, 322, 331, 333, 335, 336, 342, 344, 347, 352, 360, 366, 374, 375, 381, 383, 390, 393, 399, 406, 410, 413, 442, 446, 447, 448, 452, 454, 455, 480, 483, 485, 486, 487, 488, 490, 494, 495, 496, 498, 499, 502, 505, 507, 512, 513, 514], "less": [3, 49, 104, 155, 163, 166, 167, 204, 220, 288, 307, 308, 314, 317, 331, 334, 339, 355, 402, 410, 411, 412, 418, 419, 442, 454, 455, 486, 487, 494, 497, 507, 509], "extern": [3, 78, 80, 169, 175, 204, 214, 218, 240, 241, 252, 274, 283, 331, 404, 412, 449, 451, 455, 483, 484, 487, 494, 503, 507, 509], "infrastructur": [3, 283, 448, 450, 484], "howev": [3, 5, 7, 8, 9, 49, 78, 152, 195, 240, 288, 294, 305, 311, 318, 331, 333, 339, 344, 347, 355, 393, 408, 419, 451, 453, 454, 455, 492, 494, 498, 507, 513], "did": [3, 4, 308, 341, 442, 486, 499], "ghost": 3, "could": [3, 4, 5, 37, 47, 49, 55, 56, 78, 104, 152, 160, 162, 163, 195, 198, 201, 204, 212, 220, 238, 241, 245, 252, 256, 288, 289, 294, 308, 314, 317, 331, 343, 344, 347, 375, 400, 410, 411, 412, 413, 415, 416, 442, 454, 456, 484, 487, 492, 494, 497, 499, 502, 503, 507, 509, 513], "long": [3, 5, 32, 39, 66, 70, 104, 173, 204, 283, 288, 311, 340, 400, 401, 402, 419, 437, 447, 454, 456, 484, 494], "dimens": [3, 4, 5, 8, 25, 28, 49, 56, 78, 92, 97, 104, 167, 237, 240, 285, 288, 289, 292, 293, 299, 305, 306, 308, 310, 311, 314, 322, 324, 337, 340, 342, 347, 354, 356, 390, 401, 449, 474, 483, 486, 487, 490, 492, 498, 503, 507, 508, 511], "consist": [3, 47, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 151, 155, 159, 165, 166, 169, 171, 173, 176, 184, 200, 212, 214, 240, 256, 285, 288, 294, 311, 317, 324, 331, 339, 340, 355, 357, 383, 401, 419, 428, 442, 452, 455, 483, 484, 486, 487, 490, 494, 498, 503, 507, 513], "inconveni": 3, "prone": [3, 312, 333, 334, 348, 484], "kept": [3, 104, 333], "schema": [3, 241, 283, 299, 368, 374, 375, 380], "made": [3, 5, 6, 44, 46, 55, 85, 104, 152, 245, 285, 288, 289, 290, 311, 317, 318, 331, 348, 383, 402, 405, 419, 437, 449, 452, 454, 456, 462, 484, 486, 487, 492, 494, 498, 499, 507], "permit": [3, 5, 9, 285, 311, 408, 486], "entir": [3, 5, 10, 78, 104, 166, 204, 223, 240, 283, 288, 290, 293, 311, 315, 331, 334, 351, 369, 405, 415, 419, 421, 442, 455, 456, 464, 498, 499, 505, 507, 509], "written": [3, 4, 5, 6, 8, 15, 19, 44, 45, 47, 55, 58, 165, 166, 170, 172, 174, 175, 177, 178, 179, 183, 184, 188, 190, 191, 211, 302, 341, 347, 362, 369, 416, 454, 455, 456, 484, 486, 487, 492, 499, 507], "recov": [3, 9, 65, 324, 509], "just": [3, 5, 7, 9, 10, 19, 21, 33, 45, 46, 49, 58, 78, 79, 104, 113, 115, 144, 151, 152, 154, 162, 163, 165, 198, 205, 208, 216, 241, 252, 283, 284, 285, 288, 289, 293, 303, 305, 308, 311, 314, 324, 330, 331, 339, 341, 342, 344, 355, 364, 367, 369, 397, 399, 400, 410, 411, 412, 416, 419, 433, 440, 442, 447, 451, 452, 454, 455, 456, 473, 484, 487, 492, 494, 496, 497, 498, 499, 507, 508, 509, 510], "improv": [3, 44, 47, 162, 283, 288, 333, 486, 487, 490, 491, 507, 510], "strategi": [3, 45], "larg": [3, 14, 78, 85, 144, 220, 238, 241, 249, 283, 311, 312, 330, 331, 382, 383, 406, 407, 410, 416, 449, 452, 455, 484, 486, 494, 498, 502, 507, 508], "attribut": [3, 4, 5, 8, 9, 10, 24, 26, 55, 66, 78, 104, 151, 153, 155, 162, 167, 169, 175, 200, 201, 202, 240, 241, 245, 261, 266, 267, 283, 284, 289, 290, 291, 292, 293, 294, 295, 308, 311, 314, 318, 324, 329, 330, 331, 332, 335, 344, 346, 347, 348, 362, 374, 384, 415, 417, 419, 433, 441, 442, 447, 449, 452, 455, 486, 487, 488, 492, 493, 494, 507, 509, 513], "special": [3, 4, 5, 9, 32, 46, 79, 97, 104, 155, 162, 163, 166, 173, 204, 219, 240, 241, 271, 283, 285, 292, 307, 311, 331, 344, 347, 367, 393, 402, 415, 419, 442, 446, 449, 454, 456, 483, 486, 492, 494, 498, 509], "string": [3, 5, 7, 10, 26, 31, 33, 39, 56, 66, 70, 78, 79, 155, 166, 172, 173, 177, 178, 179, 195, 201, 204, 205, 211, 214, 219, 241, 256, 263, 283, 285, 288, 290, 291, 292, 293, 294, 295, 300, 305, 308, 311, 324, 331, 333, 334, 339, 340, 344, 347, 354, 359, 367, 369, 374, 375, 376, 380, 383, 397, 400, 401, 402, 404, 411, 412, 414, 416, 417, 419, 437, 442, 452, 455, 456, 486, 498, 502, 503, 507, 509], "symbol": [3, 104, 152, 153, 154, 155, 157, 404], "c00n00": [3, 5, 492], "attr": [3, 4, 5, 24, 308, 311, 347, 348, 415], "5_linkeddim": 3, "support": [3, 5, 8, 9, 10, 19, 37, 43, 45, 47, 76, 78, 79, 86, 152, 155, 159, 162, 163, 165, 205, 206, 240, 245, 283, 288, 295, 318, 324, 337, 344, 347, 350, 352, 356, 367, 377, 397, 401, 408, 411, 419, 442, 449, 455, 456, 484, 486, 487, 489, 490, 494, 499, 507, 509, 510, 511, 513], "copi": [3, 5, 15, 32, 47, 78, 104, 151, 171, 173, 176, 204, 214, 229, 241, 243, 247, 252, 266, 274, 288, 293, 311, 317, 330, 331, 341, 366, 369, 380, 400, 405, 411, 413, 415, 425, 446, 451, 455, 484, 486, 487, 488, 490, 497, 498, 499, 507], "node": [3, 5, 6, 9, 10, 15, 19, 20, 21, 26, 27, 28, 32, 35, 44, 60, 74, 77, 78, 151, 164, 175, 190, 201, 204, 205, 208, 211, 219, 238, 240, 252, 254, 256, 259, 285, 292, 294, 311, 331, 376, 393, 399, 400, 403, 406, 416, 418, 449, 452, 454, 483, 489, 492, 494, 503, 507, 509, 510, 512], "dataset": [3, 4, 5, 8, 45, 190, 509], "anoth": [3, 5, 32, 43, 47, 55, 56, 78, 133, 137, 144, 160, 163, 183, 195, 202, 219, 220, 241, 252, 254, 283, 288, 305, 308, 311, 312, 314, 317, 318, 325, 330, 340, 341, 342, 347, 377, 400, 412, 418, 419, 430, 442, 452, 454, 455, 456, 480, 484, 485, 490, 497, 504, 507, 509, 511, 514], "refer": [3, 4, 5, 26, 47, 79, 80, 81, 83, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 102, 104, 105, 111, 112, 116, 133, 136, 137, 139, 140, 142, 151, 152, 153, 154, 155, 166, 174, 195, 219, 241, 250, 285, 288, 293, 308, 311, 314, 315, 316, 331, 335, 355, 356, 369, 383, 400, 416, 442, 446, 449, 451, 452, 454, 456, 457, 482, 485, 487, 488, 489, 498, 500, 503, 505, 507, 509, 511, 514], "maintain": [3, 104, 138, 154, 155, 169, 204, 285, 311, 324, 348, 428, 463, 484, 485, 486, 507, 514], "previou": [3, 5, 20, 78, 144, 175, 188, 203, 208, 219, 220, 223, 252, 283, 288, 311, 375, 400, 416, 442, 449, 486, 494, 499, 503, 507, 510, 513], "old": [3, 4, 5, 16, 144, 145, 147, 149, 166, 283, 289, 295, 308, 311, 317, 347, 350, 352, 368, 375, 399, 405, 455, 484, 486, 487, 488, 489, 507, 509, 510], "cannot": [3, 4, 78, 79, 104, 151, 155, 203, 240, 241, 305, 308, 311, 312, 344, 345, 347, 348, 349, 356, 376, 383, 400, 412, 416, 417, 419, 427, 492, 494, 507], "compress": 3, "locat": [3, 5, 8, 9, 16, 17, 39, 43, 47, 55, 77, 78, 147, 214, 219, 220, 223, 224, 226, 227, 283, 284, 285, 288, 293, 295, 298, 308, 311, 315, 316, 324, 326, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 347, 351, 352, 354, 355, 361, 363, 365, 366, 369, 383, 401, 407, 428, 442, 449, 471, 485, 486, 487, 490, 492, 497, 499, 502, 503, 505, 507, 509, 514], "allow": [3, 4, 5, 6, 7, 10, 21, 39, 45, 47, 55, 56, 60, 66, 70, 78, 79, 104, 151, 152, 159, 162, 163, 165, 167, 173, 201, 204, 214, 218, 219, 220, 245, 252, 282, 283, 288, 289, 292, 294, 300, 305, 311, 317, 319, 330, 331, 332, 333, 341, 344, 346, 347, 367, 368, 374, 375, 376, 377, 400, 401, 408, 412, 413, 415, 419, 447, 448, 449, 451, 454, 455, 456, 463, 471, 484, 486, 487, 490, 497, 498, 499, 507, 509, 510], "multiindex": 3, "4": [3, 5, 9, 21, 34, 54, 56, 77, 78, 80, 81, 82, 83, 84, 90, 108, 111, 112, 125, 136, 137, 139, 152, 153, 155, 159, 163, 166, 175, 184, 219, 220, 237, 238, 241, 288, 293, 301, 317, 318, 326, 331, 333, 334, 337, 340, 342, 347, 355, 356, 357, 361, 382, 400, 411, 419, 427, 438, 441, 448, 452, 462, 470, 471, 473, 478, 480, 484, 491, 492, 495, 496, 497, 498, 499, 507, 510, 511, 513], "includ": [3, 5, 14, 26, 44, 47, 56, 61, 78, 79, 108, 137, 144, 152, 153, 163, 165, 169, 175, 182, 200, 204, 212, 215, 219, 237, 240, 241, 245, 252, 261, 263, 283, 288, 293, 294, 308, 311, 314, 318, 330, 331, 333, 342, 344, 345, 348, 351, 357, 362, 363, 364, 372, 381, 400, 404, 408, 415, 419, 442, 446, 448, 449, 451, 455, 456, 463, 477, 480, 483, 484, 486, 487, 492, 494, 498, 501, 503, 507, 512], "compos": [3, 4, 23, 55, 334, 344, 350], "multipl": [3, 5, 26, 28, 47, 49, 50, 58, 61, 72, 77, 91, 151, 163, 175, 204, 214, 223, 240, 241, 283, 288, 292, 298, 303, 308, 311, 314, 316, 317, 318, 324, 325, 330, 331, 335, 341, 344, 355, 356, 359, 363, 366, 377, 397, 400, 412, 438, 452, 454, 455, 456, 484, 487, 492, 494, 498, 502, 503, 504, 505, 507, 508, 513], "have": [3, 4, 5, 6, 9, 13, 14, 15, 16, 17, 19, 26, 30, 31, 33, 34, 35, 36, 41, 42, 44, 45, 46, 47, 49, 53, 54, 55, 58, 59, 74, 75, 76, 77, 78, 79, 89, 104, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 144, 147, 149, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 169, 175, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 204, 208, 210, 211, 212, 214, 218, 219, 220, 223, 224, 225, 226, 227, 234, 235, 236, 240, 241, 245, 249, 250, 254, 256, 259, 260, 263, 266, 267, 268, 269, 270, 271, 274, 281, 283, 285, 288, 289, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 311, 314, 315, 316, 317, 318, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 337, 339, 341, 342, 344, 346, 347, 348, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 375, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 411, 412, 416, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 477, 478, 483, 484, 485, 487, 490, 492, 493, 494, 497, 498, 499, 503, 505, 507, 508, 509, 510, 511, 513, 514], "effici": [3, 9, 56, 152, 162, 200, 241, 311, 329, 331, 334, 342, 346, 401, 463, 484, 487, 490, 498], "mean": [3, 4, 9, 92, 95, 96, 97, 99, 166, 214, 220, 241, 259, 288, 311, 333, 340, 355, 369, 400, 410, 412, 449, 451, 455, 456, 484, 486, 498, 499, 502, 503, 507], "extract": [3, 5, 47, 65, 214, 219, 247, 257, 298, 311, 449, 483, 497], "pathlik": [3, 5, 6], "serial": [3, 4, 5, 9, 151, 166, 238, 241, 284, 285, 290, 291, 292, 311, 344, 346, 347, 359, 362, 374, 375, 389, 486, 487, 490, 509], "push": [3, 5, 237, 355, 451, 455, 456, 486, 503], "aid": [3, 5, 333, 344, 347, 351, 375, 486, 503], "pack": [3, 5, 9, 284, 288, 311, 342, 344, 347, 362, 486, 507], "unpack": [3, 5, 8, 9, 16, 47, 284, 311, 344, 347, 362, 411, 419, 486], "structur": [3, 4, 5, 8, 49, 55, 78, 86, 92, 104, 152, 153, 155, 162, 165, 166, 167, 169, 172, 173, 174, 177, 178, 179, 204, 206, 213, 214, 218, 219, 241, 243, 247, 252, 257, 269, 283, 284, 285, 289, 293, 294, 295, 319, 330, 331, 332, 333, 335, 339, 343, 344, 346, 350, 358, 374, 401, 450, 468, 470, 483, 484, 486, 487, 490, 492, 494, 499, 503, 505, 507, 513], "relationship": [3, 5, 335, 356, 511], "non": [3, 4, 5, 8, 16, 31, 77, 78, 104, 151, 166, 167, 201, 216, 223, 227, 240, 241, 252, 254, 257, 259, 269, 283, 285, 288, 293, 295, 298, 305, 307, 308, 311, 317, 324, 329, 330, 331, 334, 341, 342, 346, 347, 350, 355, 380, 403, 408, 413, 414, 416, 428, 447, 456, 487, 489, 497, 503, 507, 509, 511], "doc": [3, 5, 21, 60, 92, 241, 284, 292, 311, 408, 417, 446, 449, 451, 455, 456, 469, 487, 492, 494, 499, 507], "w": [3, 5, 11, 80, 83, 90, 92, 93, 95, 96, 99, 101, 104, 112, 113, 131, 132, 133, 136, 137, 139, 142, 146, 153, 155, 166, 237, 247, 301, 340, 363, 419, 442, 484, 492, 496, 497, 502, 503, 505], "compil": [3, 5, 289, 346, 348, 419, 446], "d": [3, 5, 19, 43, 79, 93, 139, 142, 153, 162, 163, 164, 167, 175, 219, 220, 283, 284, 285, 292, 293, 301, 308, 311, 312, 331, 333, 335, 336, 337, 340, 341, 342, 343, 352, 353, 357, 367, 419, 442, 444, 447, 449, 452, 455, 463, 464, 471, 472, 474, 484, 485, 492, 494, 498, 503, 507, 514], "n": [3, 5, 14, 76, 78, 83, 90, 92, 93, 113, 125, 135, 136, 146, 153, 163, 166, 171, 175, 176, 178, 200, 211, 237, 238, 288, 297, 300, 301, 303, 307, 308, 311, 318, 330, 336, 337, 340, 342, 343, 347, 357, 393, 400, 411, 416, 419, 426, 441, 448, 452, 455, 468, 469, 475, 476, 480, 484, 486, 490, 492, 496, 498, 503, 505, 507, 509], "h5db": [3, 5, 501], "try": [3, 5, 10, 28, 35, 104, 200, 219, 223, 252, 285, 288, 294, 299, 334, 344, 367, 369, 383, 393, 412, 415, 417, 424, 426, 449, 452, 455, 456, 477, 484, 492, 494, 496, 507], "local": [3, 5, 14, 72, 77, 214, 252, 288, 335, 341, 342, 367, 448, 452, 484, 486, 487, 494, 497, 503], "git": [3, 5, 419, 446, 455, 456, 484, 485, 487, 494, 514], "commit": [3, 5, 14, 446, 448, 450, 455, 494], "sure": [3, 5, 58, 66, 125, 149, 159, 165, 182, 191, 224, 267, 283, 288, 298, 299, 301, 303, 311, 344, 348, 355, 356, 357, 359, 363, 366, 377, 379, 380, 384, 393, 394, 395, 396, 408, 421, 425, 427, 434, 446, 451, 454, 455, 456, 484, 487, 494, 498, 499, 507], "doesn": [3, 5, 6, 20, 47, 55, 93, 94, 200, 201, 202, 204, 205, 288, 289, 308, 311, 317, 340, 344, 346, 363, 383, 411, 415, 419, 425, 446, 451, 456, 494, 498, 499, 507], "instal": [3, 5, 393, 426, 446, 448, 453, 454, 456, 484, 486, 493, 494, 506], "Or": [3, 5, 332, 344, 367, 456, 485, 507, 513, 514], "simpli": [3, 4, 5, 21, 78, 151, 154, 160, 184, 214, 219, 220, 283, 311, 342, 344, 355, 449, 452, 484, 492, 498, 499, 507], "insid": [3, 5, 21, 51, 74, 219, 228, 240, 241, 283, 285, 288, 305, 306, 311, 317, 325, 341, 342, 399, 401, 439, 483, 494, 498, 503, 507, 509, 513], "repo": [3, 5, 104, 448, 455, 456, 494], "hash": [3, 5, 14, 283, 330, 400, 456, 487, 492], "unknown": [3, 5, 10, 152, 153, 347, 490, 509], "completedsuccessfulli": [3, 5], "cleanup": [3, 5, 20, 77, 155, 311, 487], "convers": [3, 4, 5, 53, 104, 163, 167, 172, 201, 212, 252, 294, 311, 312, 317, 318, 319, 325, 329, 330, 331, 334, 340, 444, 461, 465, 482, 486, 487, 495, 500, 503, 505, 507], "keeptimestep": [3, 5], "tupl": [3, 4, 5, 6, 8, 9, 19, 21, 56, 70, 78, 83, 90, 104, 112, 137, 139, 154, 162, 204, 214, 219, 283, 285, 288, 311, 324, 331, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 347, 375, 376, 404, 411, 412, 416, 419, 437, 442, 455, 503, 504, 507, 509], "discard": [3, 5, 202, 240, 317, 451, 487], "except": [3, 5, 35, 77, 151, 155, 159, 166, 175, 178, 200, 204, 283, 284, 288, 324, 333, 344, 346, 347, 359, 375, 376, 392, 403, 405, 408, 417, 423, 425, 442, 450, 456, 477, 484, 486, 498], "step": [3, 4, 5, 6, 14, 19, 45, 46, 151, 172, 177, 178, 179, 204, 211, 214, 218, 254, 288, 295, 311, 324, 330, 331, 335, 337, 339, 340, 342, 347, 354, 400, 412, 441, 446, 449, 451, 475, 484, 486, 487, 492, 494, 497, 498, 502, 503, 507, 509, 512, 513], "retain": [3, 5, 8, 39, 66, 70, 78, 195, 219, 305, 311, 317, 347, 357, 376, 394, 486, 509], "separ": [3, 5, 23, 45, 55, 59, 79, 162, 204, 212, 241, 245, 311, 318, 329, 330, 331, 333, 342, 400, 406, 415, 416, 419, 437, 455, 484, 485, 487, 494, 498, 499, 507, 512, 514], "exot": [3, 5], "analys": [3, 5, 48, 55, 200, 333, 449, 458, 461, 482, 484, 494, 498, 500, 507], "each": [3, 5, 6, 8, 9, 19, 26, 27, 32, 43, 45, 47, 55, 56, 72, 77, 78, 82, 151, 153, 154, 155, 162, 165, 166, 167, 169, 175, 179, 202, 204, 205, 211, 219, 220, 230, 238, 240, 243, 245, 256, 262, 277, 283, 285, 288, 290, 291, 294, 305, 306, 308, 310, 311, 315, 316, 317, 318, 319, 324, 330, 331, 333, 335, 336, 341, 342, 344, 346, 347, 348, 355, 366, 369, 374, 375, 377, 382, 395, 400, 401, 402, 410, 412, 413, 416, 418, 419, 437, 442, 449, 451, 452, 454, 455, 456, 462, 463, 491, 492, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 507, 509, 510, 511, 513], "someth": [3, 5, 21, 32, 33, 46, 79, 151, 160, 191, 201, 204, 288, 311, 318, 331, 333, 339, 344, 369, 383, 442, 448, 449, 452, 454, 455, 456, 494, 498, 499, 507], "nuanc": [3, 5, 456], "equilibrium": [3, 5, 19, 203, 206, 256, 288, 352, 385, 484, 498, 503, 505, 507], "cycl": [3, 5, 6, 15, 19, 20, 21, 27, 28, 32, 36, 74, 78, 133, 134, 164, 175, 203, 204, 211, 212, 215, 217, 218, 219, 221, 224, 226, 227, 238, 240, 245, 252, 254, 256, 259, 331, 347, 352, 368, 369, 385, 393, 399, 400, 404, 412, 416, 418, 441, 442, 449, 452, 454, 456, 471, 478, 479, 483, 484, 487, 489, 492, 494, 498, 499, 502, 503, 505, 509, 510, 512], "converg": [3, 5, 50, 78, 164, 165, 179, 183, 211, 220, 252, 256, 321, 330, 374, 385, 498, 505, 510], "At": [3, 4, 5, 19, 32, 204, 217, 283, 289, 314, 322, 355, 449, 454, 455, 491, 497, 509], "last": [3, 5, 151, 152, 175, 201, 204, 208, 220, 252, 319, 335, 339, 402, 410, 411, 419, 442, 452, 487, 489, 503, 507, 509], "wherea": [3, 5, 337, 342, 507], "constitut": [3, 5, 283, 311, 451, 513], "typic": [3, 4, 5, 20, 55, 60, 78, 82, 104, 153, 155, 169, 200, 201, 218, 219, 228, 240, 241, 243, 245, 247, 252, 283, 288, 294, 307, 308, 311, 315, 337, 344, 347, 368, 392, 449, 451, 483, 484, 492, 494, 498, 502, 507, 509], "further": [3, 5, 245, 318, 331, 346, 401, 419, 452, 454], "collect": [3, 4, 5, 10, 21, 26, 28, 32, 44, 45, 46, 47, 55, 60, 78, 151, 166, 200, 201, 204, 238, 240, 241, 245, 247, 250, 256, 263, 266, 283, 285, 288, 308, 311, 332, 334, 335, 341, 344, 346, 347, 366, 394, 404, 408, 412, 416, 447, 449, 451, 452, 454, 468, 470, 472, 480, 484, 487, 492, 494, 495, 496, 507, 509], "back": [3, 5, 39, 47, 48, 55, 78, 165, 188, 214, 220, 243, 252, 271, 274, 311, 318, 324, 330, 333, 344, 346, 347, 366, 369, 375, 380, 405, 412, 413, 425, 452, 456, 484, 486, 487, 494, 498, 507, 509], "like": [3, 4, 5, 6, 8, 9, 19, 20, 21, 28, 33, 46, 47, 49, 69, 78, 79, 104, 144, 147, 152, 154, 160, 162, 165, 169, 201, 202, 204, 206, 214, 215, 219, 220, 240, 241, 245, 247, 252, 283, 285, 288, 289, 292, 293, 295, 310, 311, 312, 317, 318, 324, 330, 331, 332, 334, 337, 339, 340, 341, 344, 348, 351, 355, 360, 361, 368, 369, 376, 377, 400, 401, 411, 412, 413, 417, 419, 433, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 470, 484, 485, 486, 487, 492, 494, 496, 497, 498, 503, 507, 509, 513, 514], "Will": [3, 5, 6, 49, 78, 102, 204, 219, 247, 256, 283, 288, 308, 311, 318, 331, 402, 416, 492, 497, 507], "interpos": [3, 5], "h5": [3, 4, 5, 7, 14, 26, 492, 494, 501, 507, 509], "extens": [3, 5, 26, 43, 45, 220, 283, 285, 318, 402, 408, 418, 486, 487, 490, 503, 507], "handleinvalid": [3, 5, 368, 369, 376], "guarante": [3, 5, 9, 188, 245, 337, 405, 452, 503], "here": [3, 5, 8, 14, 31, 44, 47, 60, 66, 78, 79, 145, 152, 153, 155, 162, 166, 167, 172, 174, 177, 188, 197, 200, 205, 206, 214, 219, 238, 240, 245, 252, 256, 283, 289, 293, 294, 299, 305, 308, 311, 312, 318, 322, 324, 329, 331, 332, 339, 340, 341, 355, 367, 375, 382, 395, 401, 408, 442, 447, 451, 452, 454, 455, 456, 462, 470, 476, 477, 483, 484, 492, 494, 495, 496, 498, 499, 501, 503, 506, 507, 509], "usabl": [3, 5, 433], "vastli": [3, 5], "futur": [3, 4, 5, 19, 44, 47, 49, 78, 79, 206, 241, 283, 288, 289, 293, 295, 331, 333, 334, 346, 357, 408, 419, 442, 499, 507], "primarili": [3, 5, 104, 167, 219, 484], "replac": [3, 5, 9, 10, 79, 219, 224, 283, 288, 295, 308, 311, 331, 334, 341, 347, 352, 410, 419, 442, 480, 486, 487, 489, 498, 507], "csstring": [3, 5], "geomstr": [3, 5, 334], "bpstring": [3, 5], "goal": [3, 5, 8, 334, 382, 412, 455, 456, 484, 492], "ani": [3, 4, 5, 6, 9, 10, 15, 19, 20, 21, 22, 27, 31, 32, 55, 58, 62, 65, 76, 77, 78, 79, 82, 94, 104, 151, 153, 155, 165, 166, 178, 200, 201, 204, 205, 211, 218, 219, 220, 224, 227, 237, 238, 240, 241, 245, 247, 252, 256, 261, 282, 283, 285, 288, 294, 295, 301, 305, 307, 308, 310, 311, 314, 315, 331, 332, 333, 335, 340, 341, 342, 344, 346, 347, 348, 349, 350, 352, 355, 356, 362, 366, 367, 369, 372, 382, 383, 384, 390, 393, 394, 399, 400, 401, 405, 410, 416, 418, 419, 433, 442, 446, 448, 449, 451, 452, 454, 455, 456, 479, 480, 484, 485, 486, 487, 492, 494, 495, 496, 498, 499, 503, 505, 507, 509, 510, 514], "particular": [3, 5, 14, 23, 32, 46, 47, 78, 79, 89, 116, 154, 162, 163, 202, 204, 214, 219, 237, 238, 240, 241, 288, 294, 305, 311, 331, 332, 341, 344, 366, 372, 375, 419, 448, 456, 485, 492, 496, 499, 514], "veri": [3, 4, 5, 13, 15, 20, 21, 32, 82, 114, 152, 163, 173, 174, 203, 208, 212, 283, 288, 311, 312, 330, 331, 333, 339, 344, 347, 369, 377, 382, 412, 442, 449, 451, 452, 455, 456, 471, 484, 489, 492, 494, 497, 498, 499, 507, 513], "dont": [3, 5, 6], "easi": [3, 5, 19, 252, 285, 341, 342, 412, 442, 451, 454, 455, 456, 484, 498, 507], "hard": [3, 5, 31, 42, 45, 77, 79, 214, 299, 333, 450, 484, 509], "geom": [3, 5, 14, 46, 47, 56, 172, 289, 293, 295, 343, 350, 478, 486, 497, 498, 499, 507, 513], "In": [3, 5, 7, 14, 21, 39, 45, 47, 66, 70, 79, 80, 88, 89, 102, 104, 110, 115, 139, 151, 160, 162, 165, 215, 218, 219, 228, 237, 239, 252, 256, 283, 288, 290, 301, 307, 311, 312, 317, 318, 330, 331, 333, 335, 337, 340, 341, 342, 344, 346, 367, 377, 380, 392, 400, 401, 408, 412, 413, 442, 448, 449, 452, 454, 455, 456, 470, 475, 478, 483, 484, 485, 492, 494, 495, 498, 499, 507, 509, 510, 513, 514], "abl": [3, 4, 5, 16, 45, 47, 144, 283, 348, 401, 427, 455, 485, 507, 509, 514], "reproduc": [3, 5, 120, 123, 130, 509], "confid": [3, 5], "ident": [3, 5, 155, 162, 169, 178, 190, 191, 194, 223, 266, 314, 318, 331, 355, 452, 484], "inputdb": [3, 5], "startcycl": [3, 5, 6, 14, 507], "startnod": [3, 5, 6, 14, 507], "standard": [3, 5, 15, 21, 22, 26, 56, 61, 66, 70, 78, 139, 151, 152, 153, 165, 166, 170, 178, 184, 203, 204, 205, 206, 211, 214, 218, 220, 246, 252, 256, 263, 264, 283, 288, 317, 324, 331, 334, 377, 383, 394, 403, 408, 418, 441, 446, 447, 448, 450, 454, 484, 486, 487, 492, 503, 506, 507, 511], "timestep": [3, 5, 6, 19, 27, 34, 45, 252, 346, 507], "request": [3, 5, 6, 19, 32, 77, 78, 151, 155, 197, 200, 204, 208, 211, 218, 238, 240, 252, 256, 259, 285, 294, 308, 311, 331, 333, 339, 340, 346, 348, 405, 408, 410, 425, 448, 449, 450, 455, 484, 492, 494, 507], "present": [3, 5, 6, 7, 19, 78, 135, 160, 162, 167, 172, 174, 175, 177, 197, 201, 224, 227, 250, 259, 283, 311, 331, 334, 342, 346, 348, 368, 377, 383, 400, 413, 419, 456, 499, 507], "auxiliari": [3, 5, 139, 204, 214], "statepointnam": [3, 5], "h5group": [3, 5, 9, 509], "place": [3, 5, 9, 21, 26, 27, 45, 47, 55, 78, 104, 151, 155, 214, 218, 219, 220, 240, 241, 283, 285, 289, 291, 318, 322, 331, 337, 342, 346, 351, 354, 400, 404, 410, 411, 419, 448, 449, 455, 456, 484, 485, 486, 492, 494, 499, 507, 509, 513, 514], "correct": [3, 5, 15, 23, 47, 159, 199, 224, 237, 241, 252, 254, 259, 266, 288, 301, 308, 311, 324, 326, 341, 355, 356, 367, 377, 379, 380, 455, 485, 507, 514], "timenod": [3, 5, 6, 14, 32, 78, 203, 204, 220, 240, 311, 492, 494, 507, 509, 512], "fuel": [3, 5, 19, 26, 27, 49, 51, 54, 93, 104, 108, 125, 133, 134, 135, 136, 137, 142, 153, 201, 212, 215, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 245, 249, 252, 257, 263, 283, 284, 285, 288, 289, 293, 295, 297, 301, 303, 308, 311, 315, 316, 317, 318, 322, 324, 325, 326, 330, 331, 333, 335, 349, 351, 352, 354, 355, 356, 357, 358, 363, 364, 416, 449, 454, 462, 463, 467, 468, 470, 471, 478, 479, 482, 483, 484, 486, 487, 490, 493, 494, 497, 500, 502, 503, 505, 506, 508, 509, 513], "varieti": [3, 5, 56, 162, 283, 288, 311, 342, 357, 383, 449, 454, 455, 484, 492, 495, 507], "client": [3, 5, 7, 160, 162, 252, 282, 311, 331, 334], "server": [3, 5], "kind": [3, 5, 23, 104, 157, 166, 204, 208, 212, 214, 252, 285, 288, 293, 311, 333, 341, 401, 456, 463, 483, 484, 497, 498, 506, 507], "unnecessari": [3, 5, 56, 288], "bp": [3, 5, 10, 46, 47, 56, 61, 289, 295, 350, 412, 470, 478, 497, 507], "allowmiss": [3, 5, 487], "mid": [3, 5, 155, 369], "simul": [3, 5, 6, 20, 21, 32, 60, 137, 212, 219, 238, 254, 256, 283, 284, 291, 331, 367, 368, 399, 449, 452, 455, 456, 484, 492, 494, 498, 499, 505, 507, 509, 510, 512], "valu": [3, 4, 5, 6, 9, 16, 19, 22, 23, 24, 26, 47, 49, 50, 51, 56, 59, 66, 77, 78, 79, 80, 89, 95, 96, 99, 104, 144, 147, 149, 151, 153, 155, 160, 163, 166, 167, 179, 190, 197, 200, 201, 202, 206, 213, 219, 223, 229, 238, 240, 241, 243, 244, 247, 252, 254, 256, 263, 267, 271, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 301, 308, 311, 314, 315, 316, 318, 319, 322, 324, 330, 331, 334, 339, 344, 345, 346, 347, 350, 357, 361, 362, 368, 369, 374, 375, 376, 377, 380, 381, 382, 383, 394, 397, 400, 404, 408, 411, 412, 414, 416, 417, 418, 419, 427, 430, 437, 442, 447, 449, 452, 454, 456, 484, 486, 487, 492, 494, 496, 497, 498, 502, 503, 504, 507, 509, 510, 513], "neg": [3, 5, 252, 285, 288, 301, 305, 311, 315, 324, 325, 340, 347, 355, 377, 412, 507], "index": [3, 4, 5, 9, 43, 56, 152, 153, 163, 166, 175, 202, 204, 220, 223, 243, 247, 252, 269, 284, 285, 288, 291, 311, 331, 335, 337, 339, 340, 341, 342, 361, 400, 401, 404, 412, 416, 419, 437, 446, 480, 484, 486, 487, 490, 492, 503, 507, 509], "eoc": [3, 5, 19, 78, 204, 240, 449, 503, 505], "backward": [3, 5, 104, 178, 207, 219, 289, 416], "statepoint": [3, 5, 492], "emit": [3, 5, 60, 163, 169, 301, 384], "rather": [3, 5, 9, 19, 45, 47, 78, 104, 119, 139, 153, 154, 155, 166, 178, 204, 214, 219, 240, 241, 252, 283, 294, 311, 331, 333, 336, 337, 340, 342, 343, 344, 348, 369, 375, 401, 416, 419, 451, 470, 478, 480, 484, 486, 489, 490, 492, 494, 498, 499, 502, 507], "crash": [3, 5, 62, 77, 160, 204, 367, 400, 450, 451, 486, 507], "undefin": [3, 5, 6, 15, 19, 20, 21, 27, 32, 58, 78, 211, 218, 224, 240, 245, 252, 261, 305, 306, 307, 333, 390, 393, 399, 507], "top": [3, 5, 21, 26, 79, 206, 219, 285, 288, 291, 292, 295, 299, 311, 314, 324, 330, 331, 335, 336, 341, 342, 344, 347, 350, 354, 355, 412, 437, 449, 451, 456, 492, 494, 502, 503, 505, 507, 509], "comp": [3, 5, 6, 9, 25, 288, 314, 509], "param": [3, 5, 6, 9, 10, 19, 44, 78, 219, 252, 254, 285, 288, 311, 318, 329, 330, 331, 346, 347, 355, 386, 394, 404, 416, 452, 471, 479, 486, 487, 489, 492, 494, 497, 502, 503, 504, 507], "too": [3, 5, 44, 173, 311, 331, 347, 355, 400, 419, 437, 452, 487, 497, 498, 507], "must": [3, 5, 6, 14, 15, 19, 20, 21, 27, 32, 49, 55, 58, 66, 76, 77, 78, 145, 151, 159, 162, 163, 166, 169, 172, 201, 204, 211, 218, 219, 224, 226, 240, 241, 245, 252, 260, 261, 283, 285, 288, 294, 305, 308, 311, 316, 317, 322, 330, 331, 333, 339, 341, 342, 344, 346, 347, 348, 354, 359, 377, 390, 393, 394, 399, 404, 416, 417, 442, 446, 447, 448, 449, 452, 455, 456, 463, 484, 485, 487, 494, 498, 501, 507, 510, 514], "indexloc": [3, 5, 220, 227, 284, 288, 335, 339, 340, 341, 342, 361, 449, 513], "make": [3, 5, 8, 15, 19, 26, 27, 50, 55, 56, 58, 61, 66, 78, 79, 125, 144, 149, 151, 152, 159, 160, 163, 165, 166, 169, 172, 182, 191, 214, 218, 219, 224, 240, 247, 252, 261, 267, 268, 282, 283, 285, 288, 289, 293, 294, 295, 298, 299, 301, 303, 308, 311, 315, 317, 318, 331, 333, 334, 335, 340, 341, 342, 344, 346, 347, 348, 349, 355, 356, 357, 359, 363, 366, 377, 379, 380, 383, 384, 393, 394, 395, 396, 400, 401, 408, 412, 415, 416, 418, 419, 421, 425, 427, 434, 437, 442, 446, 447, 448, 449, 450, 452, 454, 455, 456, 464, 467, 478, 480, 481, 482, 483, 484, 486, 487, 490, 492, 493, 495, 497, 498, 499, 500, 502, 506, 513], "sens": [3, 5, 9, 50, 55, 79, 283, 288, 294, 308, 331, 340, 346, 366, 400, 452, 498, 513], "hierarchi": [3, 5, 9, 229, 311, 344, 348, 350, 363, 442, 449, 492, 507, 509], "serv": [3, 5, 27, 78, 254, 283, 334, 346, 347, 411, 419, 486, 494], "anchor": [3, 5, 293, 295, 340, 341, 342, 354, 442, 498, 499, 507, 513], "fulli": [3, 5, 9, 79, 104, 166, 216, 285, 293, 311, 342, 356, 369, 454, 463, 484, 486, 495, 499, 502, 505, 507, 509], "extend": [3, 5, 6, 15, 19, 20, 21, 23, 27, 32, 58, 78, 152, 206, 211, 218, 224, 240, 245, 252, 261, 283, 284, 285, 311, 330, 335, 341, 344, 347, 375, 390, 393, 399, 400, 408, 411, 427, 442, 451, 469, 478, 492, 495, 507], "littl": [3, 4, 5, 9, 33, 34, 58, 166, 283, 399, 401, 408, 455, 470, 492, 494, 509], "complic": [3, 5, 9, 14, 252, 294, 305, 308, 311, 377, 393, 401, 452, 494, 498, 507], "depth": [3, 5, 9, 416, 451, 452, 492], "below": [3, 4, 5, 47, 66, 152, 163, 169, 219, 237, 283, 284, 285, 310, 311, 314, 330, 331, 335, 337, 344, 348, 383, 412, 438, 449, 451, 452, 454, 484, 485, 494, 497, 498, 499, 507, 509, 513, 514], "occupi": [3, 5, 51, 220, 223, 314, 352, 503, 507, 513], "easier": [3, 5, 204, 223, 311, 340, 390, 451, 455, 513], "figur": [3, 5, 7, 26, 32, 43, 87, 125, 141, 200, 204, 288, 330, 331, 333, 343, 404, 416, 418, 456, 469, 473, 474, 476, 484, 492, 496, 498], "given": [3, 4, 5, 9, 19, 43, 70, 78, 80, 82, 83, 104, 108, 113, 145, 153, 154, 155, 158, 163, 200, 203, 204, 211, 219, 223, 240, 241, 243, 245, 247, 252, 257, 283, 285, 288, 289, 293, 294, 311, 315, 316, 317, 318, 322, 326, 330, 331, 334, 337, 339, 340, 342, 343, 344, 346, 347, 363, 366, 382, 408, 410, 411, 412, 415, 416, 418, 419, 442, 443, 444, 452, 454, 455, 463, 468, 471, 484, 490, 494, 498, 502, 505, 507, 509, 510, 511], "pair": [3, 5, 26, 49, 214, 241, 285, 289, 290, 291, 292, 293, 294, 295, 308, 311, 331, 340, 341, 342, 368, 374, 383, 404, 452, 507], "unawar": [3, 5], "outsid": [3, 5, 77, 212, 219, 228, 238, 241, 299, 311, 317, 318, 332, 339, 345, 346, 369, 400, 439, 484, 492, 498, 503, 507], "normal": [3, 4, 5, 104, 139, 165, 169, 178, 184, 202, 204, 241, 252, 261, 283, 288, 317, 340, 350, 367, 374, 393, 404, 424, 442, 449, 456, 462, 480, 484, 492, 494, 498, 507], "know": [3, 4, 5, 6, 31, 94, 152, 153, 162, 165, 212, 283, 285, 288, 294, 303, 305, 311, 331, 333, 344, 347, 348, 369, 401, 404, 411, 412, 413, 417, 454, 494, 496, 498, 507, 508, 509, 513], "about": [3, 4, 5, 19, 21, 28, 46, 55, 78, 83, 90, 104, 112, 137, 139, 151, 152, 165, 166, 169, 184, 195, 200, 204, 219, 283, 285, 288, 293, 294, 311, 317, 333, 334, 339, 344, 346, 347, 348, 355, 369, 442, 451, 452, 454, 456, 472, 473, 474, 477, 484, 487, 492, 494, 496, 498, 499, 502, 503, 507, 509, 513], "histor": [3, 5, 6, 94, 308, 333, 334, 350, 367, 418, 499, 507], "plu": [3, 5, 43, 155, 220, 285, 342, 348, 400, 484, 495, 507], "similar": [3, 5, 19, 47, 55, 60, 79, 151, 152, 155, 163, 165, 167, 169, 173, 174, 175, 220, 241, 266, 285, 311, 331, 339, 342, 346, 383, 408, 416, 419, 452, 484, 494, 499, 513], "omit": [3, 5, 288, 308, 311, 332, 400, 401, 507], "help": [3, 6, 8, 9, 21, 39, 55, 60, 66, 70, 77, 78, 152, 162, 198, 226, 283, 311, 330, 376, 382, 404, 407, 411, 412, 413, 419, 442, 446, 447, 450, 451, 452, 455, 456, 486, 489, 492, 494, 498, 507, 509, 513], "deriv": [3, 6, 20, 32, 43, 56, 58, 78, 139, 162, 195, 211, 214, 240, 252, 282, 283, 288, 305, 311, 330, 333, 342, 348, 355, 375, 376, 390, 393, 399, 408, 412, 484, 497, 503, 507, 513], "overridden": [3, 6, 15, 19, 20, 21, 27, 32, 58, 66, 78, 104, 151, 211, 218, 224, 240, 245, 252, 261, 308, 311, 390, 393, 399, 505, 507], "life": [3, 6, 21, 25, 78, 82, 87, 159, 204, 238, 240, 449, 454, 455, 483, 492, 496, 507, 512, 513], "underli": [3, 5, 6, 10, 47, 153, 155, 241, 311, 339, 341, 344, 347, 408, 456, 492, 497, 509, 511, 513], "earli": [3, 6, 20, 207, 451, 507], "while": [3, 6, 21, 35, 37, 39, 43, 45, 66, 70, 78, 138, 160, 165, 195, 205, 214, 237, 238, 256, 283, 288, 308, 311, 312, 316, 317, 318, 322, 329, 330, 331, 334, 335, 342, 348, 405, 408, 411, 442, 449, 451, 455, 463, 484, 485, 494, 495, 498, 507, 509, 513, 514], "first": [3, 5, 6, 9, 14, 20, 28, 34, 43, 45, 47, 78, 79, 104, 151, 155, 165, 166, 167, 169, 175, 201, 204, 211, 218, 219, 220, 223, 238, 240, 241, 259, 283, 285, 288, 292, 303, 308, 311, 317, 318, 331, 332, 339, 340, 342, 344, 346, 352, 363, 400, 410, 411, 412, 416, 419, 421, 428, 437, 442, 443, 447, 449, 450, 451, 452, 454, 455, 456, 468, 473, 480, 484, 487, 492, 493, 497, 498, 501, 507, 509, 513], "receiv": [3, 6, 78, 151, 299, 348, 392, 452], "tight": [3, 6, 78, 204, 211, 254, 256, 288, 374, 390, 437, 449, 487, 506, 507], "coupl": [3, 6, 9, 15, 32, 43, 58, 78, 204, 211, 228, 238, 240, 245, 252, 254, 256, 259, 283, 288, 331, 363, 374, 437, 449, 451, 487, 490, 496, 503, 505, 506, 507], "_timenodeloop": [3, 6], "via": [3, 6, 76, 93, 104, 135, 169, 203, 223, 252, 283, 288, 294, 301, 308, 311, 314, 315, 316, 324, 344, 396, 449, 452, 477, 480, 484, 487, 489, 494, 498, 507, 513], "tend": [3, 6, 37, 43, 241, 308, 333, 347, 447, 495, 509], "decai": [3, 6, 85, 152, 155, 157, 159, 163, 164, 169, 184, 202, 204, 238, 271, 294, 467, 481, 482, 484, 500, 502, 503, 505, 507, 509], "next": [3, 6, 20, 43, 217, 240, 256, 288, 308, 311, 317, 331, 350, 400, 416, 419, 442, 446, 447, 451, 452, 456, 492, 494, 495, 497, 498, 499, 507, 509], "shutdown": [3, 6, 211, 284, 333, 367, 484, 492, 497, 498, 505, 507], "even": [3, 4, 6, 10, 21, 55, 77, 78, 144, 151, 155, 175, 204, 219, 220, 261, 283, 285, 289, 305, 311, 324, 331, 337, 340, 355, 376, 402, 411, 416, 418, 425, 449, 451, 452, 456, 484, 494, 498, 507, 509], "encount": [3, 4, 5, 6, 19, 55], "reconnect": [3, 6], "pre": [3, 6, 9, 10, 19, 201, 218, 240, 241, 266, 283, 288, 330, 331, 340, 400, 442, 487, 494, 505, 507], "still": [3, 5, 6, 10, 19, 55, 77, 78, 104, 152, 159, 188, 205, 214, 219, 220, 238, 241, 282, 283, 288, 289, 295, 306, 308, 311, 331, 332, 333, 341, 347, 352, 366, 382, 395, 397, 408, 425, 448, 449, 455, 456, 463, 484, 486, 494, 499, 507, 509, 513], "connect": [3, 6, 43, 167, 288, 342, 507], "worker": [3, 6, 21, 78, 151, 201, 204, 205, 219, 311, 393, 406, 452, 489, 497], "reloaddbnam": [3, 6, 14, 449, 507], "put": [3, 6, 104, 166, 214, 216, 240, 283, 285, 288, 311, 331, 351, 412, 418, 456, 487, 494], "prior": [3, 6, 78, 204, 283, 318, 383, 452, 486, 507], "mix": [3, 6, 108, 219, 237, 245, 288, 311, 424, 427, 484, 494, 498, 507], "v": [3, 6, 78, 79, 100, 101, 153, 155, 159, 165, 200, 204, 212, 219, 237, 263, 283, 288, 301, 308, 311, 340, 412, 418, 483, 484, 487, 492, 495, 497, 498, 507], "equival": [3, 6, 104, 108, 169, 175, 183, 184, 190, 308, 317, 318, 340, 341, 361, 411, 452, 463, 485, 514], "reload": [3, 6, 20, 204, 219, 252, 256, 507], "doe": [3, 4, 6, 9, 10, 13, 14, 15, 16, 17, 21, 30, 31, 32, 34, 35, 36, 41, 42, 45, 49, 53, 54, 58, 59, 74, 75, 77, 78, 104, 108, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 151, 155, 157, 158, 159, 160, 161, 166, 167, 171, 173, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 204, 210, 211, 214, 219, 220, 223, 224, 225, 226, 234, 235, 236, 240, 241, 243, 249, 250, 252, 254, 259, 260, 261, 266, 267, 268, 269, 270, 271, 274, 281, 283, 285, 288, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 311, 312, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 339, 340, 341, 347, 348, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 376, 377, 379, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 408, 412, 415, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 448, 452, 455, 456, 471, 484, 492, 494, 498, 499, 503, 507, 509, 513], "gaurante": [3, 6], "decad": [3, 6, 175, 484], "ago": [3, 5, 6], "easili": [3, 4, 6, 9, 10, 252, 311, 314, 335, 377, 392, 400, 402, 410, 412, 455, 484, 497, 499], "timestepnam": [3, 6, 204], "fresh": [3, 6, 204, 223, 311, 483, 484, 488, 495, 498, 507], "preferenti": [3, 6], "neither": [3, 6, 241, 289], "nor": [3, 6, 289, 340], "mutablesequ": [3, 6], "byloc": [3, 6], "wrapper": [3, 6, 151, 155, 188, 191, 202, 289, 334, 367, 384, 416], "around": [3, 6, 7, 47, 77, 151, 163, 202, 215, 219, 283, 288, 289, 307, 318, 331, 337, 367, 384, 442, 447, 452, 472, 483, 484, 492, 498, 499, 502, 503, 505, 507, 513], "how": [3, 4, 5, 6, 7, 8, 9, 31, 44, 45, 51, 56, 125, 163, 166, 167, 195, 200, 219, 241, 245, 247, 283, 285, 288, 292, 293, 295, 311, 314, 317, 318, 333, 335, 339, 342, 344, 347, 348, 355, 356, 368, 369, 399, 401, 402, 416, 417, 419, 434, 442, 450, 451, 452, 454, 456, 463, 464, 470, 478, 483, 484, 486, 487, 492, 493, 494, 495, 503, 504, 506, 507, 508, 513], "well": [3, 4, 5, 6, 9, 19, 43, 45, 49, 55, 56, 78, 79, 137, 152, 162, 220, 224, 228, 245, 283, 288, 292, 294, 308, 311, 312, 330, 331, 342, 344, 346, 355, 368, 404, 408, 411, 416, 446, 449, 454, 455, 476, 478, 484, 492, 494, 497, 498, 507, 509], "reffilenam": [3, 4], "srcfilenam": [3, 4], "exclus": [3, 4, 47, 55, 219, 241, 289, 293, 331, 334, 342, 363, 366, 487, 492, 507], "toler": [3, 4, 47, 55, 78, 167, 173, 201, 412, 510], "float": [3, 4, 5, 19, 26, 49, 78, 80, 81, 82, 83, 84, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 113, 116, 136, 137, 138, 139, 140, 142, 154, 155, 163, 166, 167, 173, 175, 183, 200, 204, 219, 220, 237, 241, 247, 252, 285, 288, 291, 292, 293, 305, 308, 311, 315, 316, 317, 322, 324, 330, 331, 334, 336, 337, 340, 341, 342, 343, 344, 347, 374, 383, 390, 400, 402, 404, 411, 412, 416, 418, 437, 443, 444, 487, 497, 509, 510, 513], "0": [3, 4, 14, 23, 26, 34, 47, 54, 55, 56, 78, 81, 82, 83, 84, 89, 92, 95, 96, 97, 99, 104, 108, 112, 113, 116, 124, 125, 135, 136, 137, 139, 146, 147, 151, 155, 159, 162, 163, 164, 166, 167, 169, 173, 174, 175, 178, 179, 200, 201, 202, 204, 211, 219, 220, 237, 238, 240, 241, 247, 250, 252, 254, 256, 261, 283, 285, 288, 292, 293, 297, 300, 301, 303, 305, 306, 307, 308, 310, 311, 317, 319, 322, 324, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 351, 354, 356, 357, 361, 375, 383, 399, 400, 401, 402, 404, 408, 410, 411, 412, 415, 416, 417, 419, 427, 438, 441, 442, 444, 449, 452, 454, 456, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 492, 494, 495, 496, 497, 498, 499, 502, 503, 505, 507, 509, 510, 513], "timestepcompar": [3, 4, 47, 55], "high": [3, 4, 5, 27, 77, 87, 91, 92, 94, 200, 224, 228, 252, 259, 283, 284, 288, 331, 333, 349, 382, 412, 416, 449, 471, 484, 487, 492, 497, 499, 502, 503, 504, 505, 507, 509], "two": [3, 4, 9, 10, 47, 64, 70, 115, 151, 152, 155, 163, 167, 169, 171, 173, 176, 190, 194, 200, 201, 202, 203, 204, 212, 223, 224, 238, 240, 241, 242, 283, 285, 288, 290, 294, 306, 311, 314, 317, 318, 324, 330, 331, 334, 339, 340, 341, 344, 345, 352, 355, 383, 404, 412, 418, 419, 449, 452, 454, 455, 480, 485, 486, 489, 494, 497, 498, 501, 507, 510, 513, 514], "dbname": [3, 7, 46, 47, 496], "basecas": [3, 7, 46, 56], "bookeep": [3, 7, 34, 204], "most": [3, 5, 7, 15, 43, 45, 78, 79, 104, 113, 139, 151, 155, 162, 163, 165, 173, 220, 229, 241, 283, 288, 305, 308, 311, 331, 337, 339, 342, 344, 346, 348, 355, 367, 369, 382, 384, 401, 408, 419, 446, 449, 452, 454, 455, 456, 483, 484, 485, 486, 494, 498, 499, 502, 505, 507, 513, 514], "proper": [3, 7, 138, 203, 240, 288, 341, 355, 356, 449, 455, 507], "common": [3, 4, 7, 79, 137, 151, 152, 155, 166, 214, 252, 257, 285, 294, 311, 324, 330, 333, 341, 342, 376, 383, 414, 452, 456, 457, 482, 484, 485, 498, 500, 507, 509, 514], "least": [3, 7, 66, 220, 223, 227, 256, 311, 352, 442, 446, 455, 484, 498, 507], "knowledg": [3, 4, 7, 46, 288, 311, 318, 485, 514], "probe": [3, 7, 47], "interrog": [3, 7, 241], "pathtodb": 3, "loadcycl": 3, "loadnod": 3, "c0n2eoc": 3, "alreadi": [3, 5, 56, 60, 77, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 155, 169, 200, 204, 219, 245, 267, 288, 289, 311, 326, 331, 334, 347, 369, 375, 454, 494, 498, 507], "vari": [3, 4, 8, 56, 162, 256, 288, 295, 331, 337, 344, 484, 497, 507], "middl": [3, 48, 204, 284, 333, 340, 400, 480, 492, 497, 498], "attach": [3, 20, 32, 58, 78, 79, 204, 211, 245, 283, 317, 339, 390, 393, 399, 449, 492, 503], "pathtodatabas": 3, "getfpmass": [3, 284, 311], "fission": [3, 85, 155, 159, 163, 167, 169, 173, 176, 184, 200, 201, 228, 238, 240, 241, 244, 245, 246, 247, 249, 250, 252, 257, 261, 288, 294, 308, 311, 330, 331, 333, 416, 475, 480, 483, 484, 487, 492, 496, 498, 499, 503, 505, 507], "product": [3, 44, 56, 157, 163, 176, 188, 191, 200, 201, 238, 240, 241, 244, 245, 246, 247, 249, 250, 252, 257, 294, 308, 311, 331, 342, 455, 473, 474, 480, 484, 487, 492, 503, 507], "12345": 3, "67": [3, 153, 361], "test_comparedb3": [3, 12], "testcomparedb3": [3, 12, 13], "test_database3": [3, 12], "testdatabas": [3, 12, 14], "testdatabasesmal": [3, 12, 14], "testwritereaddatabas": [3, 12, 14], "test_databaseinterfac": [3, 12], "getsimpledboper": [3, 12, 15], "testdatabaseinterfacebol": [3, 12, 15], "testdatabaseinterfac": [3, 12, 15], "testdatabasewrit": [3, 12, 15], "testdatabaseread": [3, 12, 15], "testbadnam": [3, 12, 15], "teststandardfollowon": [3, 12, 15], "test_jaggedarrai": [3, 12], "testjaggedarrai": [3, 12, 16], "test_layout": [3, 12], "testlocationpack": [3, 12, 17], "writeln": [3, 4], "adddiff": [3, 4], "addstructurediff": [3, 4], "addtimestep": [3, 4], "reportdiff": [3, 4], "ndiff": [3, 4], "fromh5": [3, 8], "tolist": [3, 8], "computeancestor": [3, 9], "allsubclass": [3, 9], "from_yaml": [3, 10, 289, 292, 294], "skip_bp_sect": [3, 10], "unknown_param": [3, 10], "buildparamcol": [3, 10], "read_only_fm": [3, 11], "read_write_fm": [3, 11], "create_file_ti": [3, 11], "create_file_fi": [3, 11], "create_file_fie2": [3, 11], "read_write_cr": [3, 11], "assum": [4, 28, 81, 104, 151, 170, 188, 200, 201, 220, 237, 285, 288, 311, 315, 324, 331, 342, 355, 362, 395, 416, 449, 451, 452, 485, 494, 497, 498, 499, 503, 507, 509, 514], "intim": [4, 341], "h5py": [4, 77, 347, 509], "within": [4, 9, 23, 26, 55, 60, 72, 78, 104, 151, 152, 153, 155, 166, 171, 195, 197, 201, 204, 206, 211, 214, 228, 240, 241, 245, 249, 283, 285, 288, 289, 290, 291, 292, 295, 299, 305, 308, 311, 315, 316, 317, 318, 319, 324, 330, 331, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 347, 354, 355, 356, 366, 405, 442, 443, 449, 450, 451, 454, 468, 484, 487, 491, 494, 498, 499, 502, 503, 507, 509, 510, 511], "correspond": [4, 9, 25, 152, 200, 201, 204, 219, 220, 283, 285, 288, 293, 294, 305, 310, 311, 314, 324, 331, 343, 344, 348, 376, 400, 416, 444, 449, 454, 491, 498, 503, 505, 507, 509], "pull": [4, 47, 204, 219, 224, 288, 418, 448, 450, 455, 487, 494, 497], "cross": [4, 91, 152, 155, 162, 163, 165, 167, 171, 173, 174, 176, 182, 195, 197, 199, 200, 201, 202, 212, 213, 224, 238, 240, 241, 245, 252, 254, 256, 261, 266, 267, 268, 283, 285, 288, 294, 311, 317, 331, 416, 418, 442, 446, 452, 455, 463, 470, 475, 476, 484, 487, 489, 490, 492, 498, 499, 502, 503, 504, 507, 509, 510], "probabl": [4, 39, 44, 47, 66, 70, 93, 152, 155, 247, 261, 283, 285, 289, 308, 311, 346, 412, 413, 419, 442, 456, 484, 494, 502, 508, 509], "speak": [4, 245], "issu": [4, 15, 21, 45, 77, 135, 163, 165, 201, 240, 241, 254, 283, 288, 317, 333, 344, 355, 384, 419, 442, 448, 454, 455, 456, 484, 486, 487, 494, 509], "aris": [4, 78, 152, 155, 283, 294, 394], "against": [4, 39, 47, 49, 78, 125, 223, 240, 311, 331, 333, 364, 375, 377, 383, 402, 421, 448, 484, 487], "sometim": [4, 47, 77, 155, 201, 219, 241, 312, 344, 456, 478, 492, 494, 507, 509], "That": [4, 5, 58, 89, 254, 288, 292, 311, 366, 367, 375, 456, 492, 494, 498, 507], "worri": [4, 339, 348, 452, 454, 456, 494], "especi": [4, 245, 415, 455, 513], "temperatur": [4, 9, 79, 80, 81, 82, 83, 87, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 108, 110, 111, 112, 113, 115, 116, 125, 131, 132, 133, 136, 137, 139, 140, 141, 142, 153, 218, 228, 237, 238, 240, 241, 256, 266, 278, 285, 288, 305, 308, 311, 312, 314, 315, 316, 317, 318, 323, 324, 331, 344, 347, 354, 355, 356, 444, 449, 454, 468, 477, 483, 484, 487, 489, 492, 494, 495, 497, 498, 499, 502, 503, 504, 505, 507, 508, 509, 510, 511], "uniformli": [4, 294, 468, 507], "realli": [4, 31, 44, 104, 202, 208, 293, 295, 331, 337, 367, 451, 452, 454, 484, 499], "suppos": [4, 293, 419, 454], "volum": [4, 80, 87, 104, 113, 135, 137, 138, 197, 200, 237, 240, 285, 288, 292, 299, 305, 308, 310, 311, 318, 330, 331, 343, 354, 355, 356, 364, 404, 467, 481, 482, 500, 503, 504, 505, 507], "rel": [4, 43, 47, 55, 78, 104, 166, 184, 214, 293, 305, 308, 311, 312, 322, 324, 331, 333, 343, 344, 383, 412, 442, 455, 488, 494, 499, 503, 505, 507, 509, 511], "self": [4, 8, 19, 39, 56, 66, 78, 104, 151, 162, 165, 200, 219, 240, 247, 259, 261, 288, 289, 292, 308, 311, 316, 317, 318, 324, 331, 340, 342, 347, 351, 380, 411, 417, 419, 442, 447, 451, 452, 455, 494, 497, 498, 507, 509], "evid": 4, "resourc": [4, 151, 344, 383], "hasn": [4, 200, 267, 417], "tee": 4, "msg": [4, 223, 367, 384, 403, 442], "ignor": [4, 5, 10, 79, 166, 173, 240, 288, 294, 305, 318, 333, 340, 368, 393, 394, 400, 418, 419, 426, 507], "exce": [4, 319, 392], "organ": [4, 19, 33, 206, 214, 369, 449, 452, 487, 492], "later": [4, 22, 26, 37, 39, 78, 167, 175, 204, 241, 290, 316, 366, 447, 449, 451, 454, 455, 484, 494, 503, 507, 513], "keep": [4, 5, 9, 21, 44, 144, 220, 256, 263, 283, 285, 294, 308, 317, 318, 322, 330, 348, 411, 442, 448, 451, 452, 453, 455, 456, 483, 484, 498, 502, 503, 504, 507, 513], "miss": [4, 10, 89, 241, 294, 311, 437, 492, 495, 497, 507], "incompat": 4, "weird": [4, 342, 419], "strang": [4, 5, 9, 58, 344, 408, 498], "smaller": [4, 14, 26, 241, 249, 311, 324, 331, 382, 401, 408, 456, 494], "zero": [4, 9, 58, 66, 77, 104, 129, 138, 155, 166, 167, 172, 173, 190, 200, 204, 223, 226, 227, 240, 245, 256, 285, 288, 305, 306, 307, 308, 311, 324, 325, 331, 340, 351, 355, 410, 412, 424, 449, 455, 477, 486, 490, 492, 494, 498, 503, 504, 507], "diff": [4, 58, 242, 456], "infinit": [4, 241, 342, 411, 472, 473, 507], "rigor": [4, 484], "manner": [4, 241, 305, 442, 449, 484, 486, 494, 510], "fine": [4, 45, 172, 294, 303, 386, 412, 419, 498], "revisit": [4, 283, 510], "comptyp": [4, 283], "paramnam": [4, 5, 8, 9, 19, 311, 330, 344, 346, 452], "absmean": 4, "absmax": 4, "tsname": 4, "stream": [4, 145, 146, 147, 164, 165, 166, 169, 170, 172, 173, 175, 176, 177, 178, 179, 247, 249, 289, 293, 302, 352, 360, 369, 376, 397, 401, 408, 438, 442], "print": [4, 21, 28, 39, 55, 60, 66, 70, 78, 155, 172, 219, 285, 289, 308, 311, 346, 367, 400, 402, 408, 416, 419, 447, 449, 451, 452, 455, 456, 462, 468, 492, 494, 495, 496, 497, 507, 509], "exceed": [4, 78, 408, 410, 503, 504], "recover": 5, "down": [5, 9, 19, 21, 311, 344, 347, 355, 375, 418, 454, 455, 480, 487, 492, 494, 509], "bound": [5, 49, 56, 59, 162, 169, 201, 219, 243, 269, 285, 305, 308, 310, 311, 314, 316, 319, 333, 335, 336, 337, 340, 342, 343, 354, 355, 356, 443, 472, 473, 474, 477, 499, 513], "hierarch": [5, 9, 283, 311, 332, 449, 507], "furthermor": [5, 55, 310, 337, 344, 455, 492], "intend": [5, 23, 152, 201, 214, 240, 241, 252, 283, 293, 311, 317, 330, 333, 342, 377, 406, 408, 411, 419, 449, 450, 455, 483, 494, 510], "dynam": [5, 47, 79, 101, 137, 204, 283, 311, 407, 415, 449, 507, 509], "yet": [5, 19, 46, 55, 201, 205, 219, 237, 241, 288, 292, 311, 315, 330, 400, 454, 484, 492, 502, 507], "undevelop": 5, "ad": [5, 25, 26, 37, 39, 44, 45, 47, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 155, 163, 171, 173, 176, 204, 208, 219, 241, 242, 245, 250, 252, 256, 283, 285, 288, 294, 295, 300, 305, 311, 317, 318, 322, 326, 331, 332, 336, 341, 346, 348, 352, 355, 365, 369, 381, 400, 416, 417, 446, 452, 454, 456, 471, 478, 479, 480, 483, 484, 486, 487, 488, 489, 490, 492, 493, 497, 507, 513], "dump": [5, 32, 38, 41, 42, 44, 45, 214, 238, 241, 284, 285, 331, 346, 368, 370, 374, 375, 480, 507], "again": [5, 9, 60, 188, 217, 283, 331, 347, 349, 384, 442, 451, 454, 455, 486, 498, 507, 509], "nitti": [5, 456], "gritti": [5, 456], "translat": [5, 283, 289, 329, 330, 342, 454, 484], "flat": [5, 8, 9, 288, 308, 317, 340, 355, 401, 410, 421, 490, 498, 513], "pleas": [5, 19, 104, 285, 331, 405, 419, 447, 448, 449, 456, 485, 514], "convent": [5, 201, 214, 288, 333, 450, 456, 507], "cxxnyi": 5, "arraydata": 5, "numpi": [5, 8, 9, 43, 78, 166, 288, 311, 316, 341, 344, 347, 390, 411, 412, 419, 437, 455, 470, 474, 477, 487, 492, 494, 495, 497, 513], "ndarrai": [5, 8, 9, 43, 78, 170, 178, 200, 223, 285, 288, 308, 311, 339, 340, 341, 342, 343, 347, 411, 412], "wouldn": [5, 44], "plai": [5, 283, 288, 348, 449], "nice": [5, 83, 151, 165, 205, 212, 288, 311, 334, 348, 400, 408, 419, 449, 478, 494, 507], "arrai": [5, 8, 9, 43, 56, 78, 166, 167, 169, 285, 288, 308, 311, 316, 330, 331, 335, 340, 341, 344, 347, 361, 390, 411, 412, 419, 430, 437, 487, 490, 492, 494, 503, 509, 510, 513], "conform": [5, 152, 283, 292, 308, 315, 337, 455, 486, 505], "both": [5, 47, 49, 78, 144, 151, 154, 160, 165, 166, 175, 201, 205, 212, 219, 288, 294, 311, 314, 317, 324, 329, 330, 331, 333, 334, 346, 348, 355, 361, 383, 416, 441, 447, 451, 463, 478, 484, 487, 489, 492, 494, 507, 511], "fit": [5, 92, 95, 96, 97, 99, 105, 137, 174, 204, 208, 241, 252, 288, 311, 331, 337, 340, 342, 347, 351, 410, 412, 419, 456, 507, 509, 513], "ish": [5, 437, 490], "accomplish": [5, 497, 509], "hand": [5, 26, 65, 165, 219, 324, 348, 356, 375, 383, 416, 446, 449, 451, 454, 484, 493, 497, 507], "known": [5, 56, 137, 152, 155, 252, 256, 283, 308, 331, 340, 396, 404, 421, 449, 483, 507], "offend": 5, "variou": [5, 19, 21, 25, 28, 34, 60, 77, 78, 134, 152, 155, 162, 166, 174, 203, 204, 211, 215, 219, 223, 271, 283, 289, 291, 292, 311, 324, 331, 333, 347, 355, 356, 361, 363, 368, 401, 412, 419, 430, 437, 441, 447, 449, 451, 458, 459, 461, 466, 482, 484, 485, 486, 492, 494, 498, 499, 500, 506, 507, 508, 509, 514], "necessari": [5, 20, 43, 45, 47, 113, 135, 151, 155, 171, 173, 175, 176, 195, 202, 227, 256, 259, 283, 285, 288, 292, 326, 329, 342, 344, 347, 405, 417, 442, 449, 484, 495, 507, 509], "mind": [5, 285, 348], "alwai": [5, 9, 58, 104, 162, 165, 166, 167, 172, 174, 175, 195, 204, 245, 252, 283, 288, 293, 305, 310, 311, 318, 324, 330, 337, 340, 342, 344, 347, 401, 413, 415, 416, 419, 442, 452, 454, 455, 494, 502, 507], "deal": [5, 9, 44, 166, 167, 228, 247, 311, 377, 411, 452, 454, 498], "routin": [5, 16, 226, 227, 283, 308, 344, 412, 449, 484, 487, 507], "find": [5, 9, 19, 21, 47, 55, 79, 83, 95, 96, 99, 104, 152, 155, 173, 200, 201, 219, 220, 226, 227, 245, 263, 283, 285, 288, 305, 308, 311, 316, 318, 331, 333, 340, 344, 348, 355, 363, 367, 368, 400, 410, 412, 416, 442, 455, 456, 484, 485, 486, 487, 492, 494, 497, 498, 507, 511, 513, 514], "themselv": [5, 8, 283, 331, 344, 347, 377, 454, 486, 497], "lack": [5, 220, 454, 484, 491], "nan": [5, 285, 305], "jag": [5, 8, 16, 347, 487, 489, 509], "concaten": [5, 367, 411], "dimension": [5, 8, 167, 240, 288, 310, 317, 318, 340, 355, 419, 493, 509, 513], "describ": [5, 9, 43, 45, 47, 66, 78, 89, 143, 155, 163, 212, 214, 219, 229, 283, 285, 289, 292, 306, 311, 330, 333, 334, 339, 340, 342, 344, 347, 376, 401, 442, 454, 484, 498, 507, 508, 509, 511, 512], "shape": [5, 8, 16, 43, 125, 166, 285, 297, 300, 301, 303, 305, 306, 307, 308, 310, 311, 314, 334, 355, 356, 357, 449, 478, 483, 498, 499, 503, 508, 513], "offset": [5, 8, 16, 43, 317, 331, 335, 336, 337, 340, 342, 343, 354, 401, 402, 470, 473, 480, 513], "them": [5, 8, 9, 14, 15, 19, 37, 45, 46, 47, 48, 55, 60, 78, 104, 108, 155, 162, 165, 166, 173, 202, 204, 205, 208, 240, 247, 252, 256, 283, 285, 288, 294, 295, 308, 311, 312, 316, 317, 318, 331, 333, 334, 341, 342, 344, 346, 347, 356, 357, 359, 367, 375, 376, 384, 393, 395, 400, 401, 410, 413, 419, 426, 446, 449, 451, 452, 454, 455, 456, 483, 484, 490, 492, 494, 497, 498, 499, 504, 507], "magic": [5, 205, 212, 283, 344, 348, 451, 492], "shouldn": [5, 261, 333], "realist": [5, 507], "scenario": [5, 212, 215, 228, 288, 293, 295, 348, 433, 449, 455, 456, 507], "1d": [5, 8, 175, 240, 241, 266, 316, 317, 341, 347, 390, 412, 487, 490], "diagnost": [5, 9], "invert": 5, "straight": [5, 9], "closest": [5, 219, 324, 412, 507], "represent": [5, 9, 26, 45, 78, 166, 172, 177, 179, 219, 240, 241, 267, 288, 289, 293, 311, 317, 334, 335, 339, 340, 342, 347, 350, 351, 401, 419, 454, 455, 483, 484, 499, 503, 507, 509], "np": [5, 8, 43, 153, 163, 170, 200, 261, 285, 288, 308, 311, 412, 455, 470, 474, 477, 480, 492, 494, 495, 497, 513], "homogen": [5, 106, 167, 200, 201, 216, 240, 241, 261, 288, 311, 317, 318, 326, 344, 355, 486, 487, 503, 507, 509], "densiti": [5, 51, 54, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 129, 133, 134, 136, 137, 138, 139, 140, 141, 142, 152, 153, 155, 165, 177, 197, 200, 240, 241, 245, 247, 256, 261, 266, 284, 288, 289, 292, 294, 301, 303, 305, 308, 311, 316, 322, 324, 328, 329, 330, 331, 344, 355, 356, 357, 388, 404, 420, 424, 463, 483, 484, 486, 487, 488, 489, 490, 493, 495, 498, 499, 502, 503, 504, 505, 507, 509], "No": [5, 8, 44, 78, 80, 112, 116, 259, 261, 374, 401, 449, 455, 486, 492, 497, 499], "longer": [5, 34, 48, 241, 294, 307, 308, 357, 418, 419, 437, 455, 484, 486, 487, 490, 495, 503, 507], "numberdens": [5, 152, 200, 308, 311, 404, 504], "tool": [5, 8, 9, 17, 21, 28, 37, 45, 168, 198, 211, 223, 225, 252, 283, 332, 351, 362, 367, 382, 397, 414, 416, 418, 428, 431, 434, 450, 451, 453, 483, 484, 485, 487, 489, 490, 494, 498, 509, 514], "comput": [5, 28, 54, 78, 82, 92, 97, 104, 133, 163, 165, 166, 169, 200, 204, 208, 211, 238, 240, 252, 254, 256, 262, 288, 305, 306, 307, 308, 310, 311, 316, 318, 330, 341, 342, 355, 360, 366, 401, 412, 449, 450, 452, 455, 463, 467, 482, 484, 487, 492, 494, 497, 500, 507, 510], "slap": 5, "remov": [5, 19, 46, 55, 104, 146, 204, 219, 224, 240, 245, 247, 252, 267, 283, 284, 288, 289, 292, 295, 305, 308, 311, 317, 318, 322, 331, 344, 363, 366, 380, 400, 413, 415, 450, 452, 484, 486, 487, 488, 489, 490, 492, 502, 503, 505, 507], "better": [5, 19, 60, 78, 155, 162, 175, 204, 206, 283, 285, 333, 335, 350, 403, 419, 448, 455, 484, 486, 489, 507], "viz": [5, 44], "view": [5, 26, 27, 318, 340, 416, 454, 485, 492, 494, 507, 509, 514], "_readparam": 5, "throughout": [6, 153, 155, 245, 311, 334, 335, 449, 455, 499, 502, 507], "rectangular": [8, 285, 306, 310, 342, 355, 507], "jaggeddata": 8, "take": [8, 19, 28, 34, 48, 56, 108, 133, 145, 151, 173, 202, 204, 205, 214, 219, 240, 241, 252, 283, 285, 288, 311, 331, 342, 344, 377, 400, 402, 412, 416, 419, 442, 451, 452, 453, 454, 455, 456, 484, 486, 492, 494, 495, 505, 507, 511], "preserv": [8, 34, 81, 82, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 144, 315, 324, 363, 367, 376, 390, 412, 441, 488, 507], "multi": [8, 245, 254, 256, 288, 330, 341, 347, 362, 456, 467, 481, 482, 483, 486, 492, 497, 500, 509], "popul": [8, 89, 167, 252, 293, 340, 342, 352, 355, 401, 418, 449, 452, 454], "layer": [8, 9, 291, 333, 341, 483, 494], "jagged": 8, "length": [8, 26, 95, 96, 99, 155, 161, 166, 169, 198, 204, 211, 223, 252, 288, 307, 315, 316, 317, 324, 331, 339, 400, 410, 411, 412, 419, 441, 452, 454, 455, 489, 492, 495, 497, 498, 502, 507, 511, 512], "reconstitut": 8, "exactli": [8, 219, 288, 311, 331, 348, 410, 417, 452, 486, 492, 507], "But": [8, 31, 74, 155, 188, 288, 308, 331, 341, 351, 367, 400, 412, 448, 452, 455, 456, 462, 484, 494, 495, 499, 508, 513], "final": [8, 39, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 104, 228, 242, 245, 308, 316, 331, 356, 381, 416, 417, 447, 452, 456, 471, 487, 494, 498, 507, 510], "nest": [8, 21, 26, 283, 288, 341, 400], "round": [8, 14, 219, 289, 299, 331], "trip": [8, 14, 289], "constructor": [8, 49, 77, 145, 151, 155, 204, 308, 317, 336, 340, 341, 342, 344, 411, 419, 442], "x": [8, 11, 14, 37, 43, 45, 125, 145, 167, 173, 197, 199, 200, 201, 202, 218, 219, 240, 241, 256, 259, 261, 266, 267, 270, 288, 289, 293, 294, 297, 300, 301, 303, 310, 311, 318, 331, 335, 337, 341, 342, 355, 357, 375, 400, 412, 416, 418, 419, 443, 444, 455, 467, 469, 470, 471, 472, 473, 474, 479, 480, 481, 482, 486, 487, 489, 492, 496, 497, 498, 499, 500, 503, 507, 509, 513], "recurs": [8, 9, 16, 21, 46, 55, 72, 104, 151, 311, 341, 346, 349, 368, 400, 415, 487], "classmethod": [8, 10, 77, 78, 151, 165, 166, 200, 241, 289, 290, 292, 294, 311, 314, 315, 333, 334, 336, 337, 343, 346, 347, 352, 376, 405, 408], "dtype": [8, 311, 344, 513], "accompani": [8, 451], "zeroth": [8, 9, 175, 513], "constitu": [8, 311], "obj": [8, 21, 151, 155, 171, 173, 176, 201, 252, 285, 311, 322, 330, 332, 400], "alia": [8, 24, 66, 78, 121, 122, 123, 124, 125, 126, 127, 128, 129, 137, 174, 197, 204, 235, 271, 281, 285, 288, 290, 291, 292, 293, 294, 295, 305, 306, 307, 308, 310, 311, 331, 332, 342, 346, 350, 351, 356, 357, 375, 419, 507], "respond": 8, "unpackedjaggeddata": 8, "groundwork": 9, "map": [9, 10, 11, 14, 160, 163, 169, 172, 175, 177, 178, 240, 252, 254, 283, 289, 290, 291, 292, 293, 294, 295, 302, 311, 314, 329, 330, 331, 335, 337, 341, 342, 344, 347, 352, 360, 376, 399, 401, 408, 416, 421, 449, 454, 463, 478, 484, 485, 486, 487, 492, 493, 494, 497, 499, 503, 505, 507, 509, 513, 514], "datbas": 9, "tree": [9, 26, 69, 206, 288, 311, 341, 342, 348, 376, 383, 405, 446], "append": [9, 26, 37, 43, 152, 153, 204, 284, 285, 311, 335, 341, 400, 411, 419, 442, 452, 468, 469, 470, 472, 473, 474, 477, 480, 496, 499], "search": [9, 55, 69, 79, 165, 201, 219, 241, 256, 288, 303, 311, 316, 324, 331, 333, 407, 412, 442, 484, 505], "a1": [9, 81, 219, 311, 331, 507], "a1b1": 9, "a1b1c1": 9, "a1b1c2": 9, "a1b2": 9, "a1b2c1": 9, "a2": [9, 81, 219, 311, 507], "aren": [9, 20, 159, 219, 241, 252, 374, 451, 498, 507], "algorithm": [9, 44, 49, 56, 216, 220, 223, 330, 419, 471, 484, 487, 498, 507], "travers": [9, 311, 342, 449], "region": [9, 164, 167, 172, 174, 182, 195, 200, 201, 241, 285, 318, 319, 355, 494, 503, 505, 507], "indexindata": [9, 509], "increas": [9, 254, 315, 319, 342, 350, 399, 408, 412, 456, 468, 484, 503, 505, 507], "monoton": [9, 412, 507], "children": [9, 104, 227, 285, 288, 295, 311, 344, 347, 349, 354, 355, 357, 361, 407, 454, 490, 509, 513], "parent": [9, 47, 60, 82, 104, 163, 200, 214, 240, 256, 257, 285, 288, 291, 293, 299, 305, 308, 311, 332, 335, 341, 342, 344, 348, 350, 351, 355, 363, 367, 397, 416, 452, 492, 503, 513], "contigu": [9, 498], "interleav": 9, "sibl": [9, 288, 305, 311, 492, 507], "asid": [9, 333], "necessarili": [9, 56, 152, 165, 201, 484, 507], "child": [9, 26, 288, 293, 311, 318, 330, 332, 335, 456, 487, 509, 513], "serialnum": [9, 344, 346, 509], "numchildren": [9, 509], "mani": [9, 19, 21, 34, 44, 47, 55, 60, 66, 104, 144, 152, 155, 163, 165, 166, 169, 200, 214, 220, 228, 240, 245, 252, 256, 288, 306, 311, 317, 330, 331, 333, 341, 342, 344, 346, 347, 355, 368, 369, 383, 410, 411, 419, 437, 442, 448, 449, 454, 455, 457, 477, 480, 482, 483, 484, 485, 486, 487, 488, 492, 494, 495, 499, 500, 503, 504, 507, 509, 513, 514], "reach": [9, 155, 211, 405, 410, 456, 484, 494, 507], "desir": [9, 22, 27, 93, 155, 167, 200, 214, 240, 261, 288, 293, 311, 342, 344, 346, 367, 405, 408, 410, 415, 448, 456, 478, 484, 507, 509], "ancestor": [9, 288, 311, 344, 348], "yield": [9, 104, 167, 240, 245, 247, 250, 311, 317, 331, 411, 487, 496, 507], "direct": [9, 61, 79, 166, 167, 190, 223, 252, 288, 295, 310, 311, 318, 330, 335, 336, 340, 342, 347, 358, 412, 442, 444, 454, 484, 503, 505, 507, 509], "elemen": 9, "subsequ": [9, 175, 238, 317, 346, 347, 410], "form": [9, 27, 78, 137, 139, 165, 211, 240, 241, 252, 256, 283, 292, 293, 299, 305, 311, 318, 334, 344, 348, 374, 377, 390, 400, 444, 486, 494, 497, 498, 503, 507], "lightweight": [9, 83], "stitch": [9, 442], "troubl": [9, 308, 494], "laid": [9, 344], "approach": [9, 21, 204, 219, 283, 285, 315, 331, 344, 352, 412, 455, 484, 487, 498, 507], "reason": [9, 42, 104, 151, 152, 240, 245, 252, 289, 294, 317, 333, 341, 342, 346, 419, 442, 448, 451, 452, 456, 484, 494, 503], "bad": [9, 155, 301, 377, 399, 455], "second": [9, 77, 92, 167, 182, 202, 211, 219, 223, 241, 283, 285, 311, 331, 339, 352, 412, 419, 443, 452, 455, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 488, 496, 507, 513], "pretti": [9, 289, 349, 419, 437, 480], "unwieldi": 9, "consum": [9, 261, 294, 334, 411, 442, 484], "cursor": 9, "slice": [9, 288, 310, 342, 412], "ineffici": [9, 288, 305, 308, 311], "cl": [9, 56, 153, 346, 407, 497, 507], "nonsens": [9, 10], "who": [9, 19, 144, 200, 204, 316, 377, 400, 450, 455, 456, 484, 490, 507], "treat": [9, 237, 240, 241, 245, 285, 288, 311, 317, 330, 331, 333, 359, 383, 419, 442, 507, 511], "might": [9, 47, 60, 152, 195, 252, 285, 288, 308, 317, 412, 416, 419, 442, 449, 451, 455, 456, 487, 492, 494, 507], "storabl": [9, 408], "numer": [9, 139, 147, 163, 240, 241, 283, 288, 292, 294, 330, 335, 419, 486, 487, 503, 507, 510], "7": [9, 78, 82, 95, 96, 99, 105, 108, 137, 142, 147, 153, 155, 173, 184, 220, 292, 293, 301, 318, 337, 341, 356, 357, 361, 411, 419, 455, 456, 462, 470, 492, 497, 499, 505, 507, 511], "9": [9, 21, 78, 82, 83, 101, 108, 135, 142, 153, 155, 220, 318, 337, 361, 382, 400, 411, 412, 419, 462, 470, 484, 485, 492, 496, 497, 498, 499, 507, 513, 514], "6": [9, 35, 56, 76, 78, 90, 99, 112, 136, 142, 147, 152, 153, 155, 173, 175, 184, 220, 288, 293, 310, 317, 318, 331, 337, 340, 356, 357, 361, 401, 410, 411, 419, 441, 462, 469, 470, 472, 474, 477, 480, 492, 496, 497, 499, 507, 511, 513], "revers": [9, 175, 178, 204, 220, 269, 311, 330, 340, 366, 449, 492], "essenti": [9, 19, 104, 151, 175, 261, 283, 289, 442, 498], "abil": [10, 61, 104, 219, 224, 226, 269, 288, 324, 342, 354, 361, 362, 363, 416, 434, 442, 454, 486, 487], "arg": [10, 24, 39, 60, 64, 65, 66, 74, 78, 82, 89, 102, 108, 131, 133, 134, 135, 136, 137, 151, 169, 197, 223, 240, 241, 282, 283, 290, 291, 292, 293, 294, 295, 305, 331, 340, 343, 347, 357, 367, 369, 384, 399, 400, 402, 419, 447, 487], "helper": [10, 21, 23, 58, 219, 223, 246, 264, 311, 347, 351, 367, 377, 382, 387, 392, 394, 398, 494], "loader": [10, 289, 292, 294, 308], "round_trip_data": 10, "yamliz": [10, 283, 289, 290, 291, 292, 293, 294, 295, 442], "attribute_collect": [10, 289, 290, 291, 292, 293, 294, 295], "attributecollect": [10, 289, 290, 292, 293, 294, 295], "passiv": [10, 509], "metadata": [10, 15, 143, 160, 167, 168, 175, 178, 183, 195, 283, 292, 344, 346, 347, 380, 418, 486, 487, 509], "To": [10, 19, 26, 45, 60, 77, 82, 145, 154, 200, 219, 283, 285, 288, 318, 330, 331, 333, 350, 383, 393, 395, 400, 419, 426, 442, 446, 447, 448, 449, 451, 452, 454, 456, 484, 485, 494, 495, 497, 498, 507, 509, 510, 514], "variabl": [10, 19, 47, 49, 50, 56, 78, 104, 145, 155, 163, 169, 170, 175, 195, 204, 214, 241, 252, 266, 285, 288, 293, 294, 308, 311, 314, 315, 318, 319, 324, 331, 339, 346, 400, 415, 419, 442, 452, 455, 456, 483, 485, 486, 487, 489, 494, 506, 507, 514], "instanti": [10, 20, 77, 125, 155, 162, 202, 203, 204, 217, 219, 283, 344, 346, 348, 362, 366, 369, 419, 449, 451], "obvious": [10, 216, 283, 350, 456], "huge": [10, 261, 442], "whole": [10, 41, 42, 61, 175, 200, 219, 241, 298, 311, 331, 354, 448, 452, 456, 484, 486, 494, 498, 507], "lose": [10, 153, 155, 484], "claim": 10, "fidel": [10, 245, 288, 299, 484, 502, 503, 504, 507], "your": [10, 19, 21, 31, 46, 77, 82, 104, 200, 214, 219, 220, 241, 247, 252, 283, 312, 330, 331, 369, 377, 400, 402, 405, 412, 416, 418, 446, 447, 448, 449, 452, 455, 456, 457, 463, 464, 477, 482, 484, 485, 492, 493, 497, 498, 500, 507, 513, 514], "understand": [10, 205, 340, 347, 447, 451, 452, 454, 456, 484], "unitless": [10, 104], "test_outputwrit": [12, 13], "test_compareset": [12, 13], "test_diffresultsbas": [12, 13], "test_comparedatabasedupl": [12, 13], "test_comparedatabasesim": [12, 13], "test_diffspecialdata": [12, 13], "test_diffsimpledata": [12, 13], "test_compareauxdata": [12, 13], "makeshufflehistori": [12, 14], "test_load": [12, 14], "test_loadsortset": [12, 14], "test_histori": [12, 14], "makehistori": [12, 14], "test_loadoper": [12, 14], "test_writetodb": [12, 14], "test_geth5fil": [12, 14], "test_auxdata": [12, 14], "test_replacenon": [12, 14], "test_mergehistori": [12, 14], "test_splitdatabas": [12, 14], "test_grablocalcommithash": [12, 14], "test_filenam": [12, 14], "test_readinputsfromdb": [12, 14], "test_delet": [12, 14], "test_open": [12, 14], "test_loadc": [12, 14], "test_loadblueprint": [12, 14], "test_preprestartrun": [12, 14], "test_computepar": [12, 14], "small_yaml": [12, 14], "test_readwriteroundtrip": [12, 14], "test_baddata": [12, 14], "test_interactbol": [12, 15, 258, 259, 265, 266], "test_distribut": [12, 15, 383, 390], "test_demonstratewritinginteract": [12, 15], "test_interacteverynodereturntightcoupl": [12, 15], "test_timenodeloop_tightcoupl": [12, 15], "test_syncdbafterwrit": [12, 15], "test_nosyncdbafterwrit": [12, 15], "test_writesystemattribut": [12, 15], "test_metadata_endsuccessfulli": [12, 15], "test_metadataendfail": [12, 15], "test_gethistori": [12, 15], "test_gethistorybyloc": [12, 15], "test_loadreadonli": [12, 15], "test_growtofullcor": [12, 15, 353, 360, 363], "test_growtofullcorewithc": [12, 15], "test_growtofullcorefromfactori": [12, 15], "test_growtofullcorefromfactorywithc": [12, 15], "test_readwritten": [12, 15], "test_readwithoutinput": [12, 15], "test_varioustypeswork": [12, 15], "test_timestep": [12, 15], "test_baddbnam": [12, 15], "test_standardrestart": [12, 15], "test_roundtrip": [12, 16, 296, 302], "test_roundtripbool": [12, 16], "test_flatten": [12, 16, 420, 429], "test_backwardscompat": [12, 16], "test_locationpack": [12, 17], "test_locationpackingoldervers": [12, 17], "test_locationpackingoldvers": [12, 17], "test_clos": [12, 17], "methodnam": [13, 14, 15, 16, 17, 30, 31, 34, 35, 36, 41, 42, 53, 54, 58, 59, 74, 75, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 210, 211, 223, 224, 225, 226, 234, 235, 236, 249, 250, 254, 259, 260, 266, 267, 268, 269, 270, 271, 274, 281, 297, 298, 299, 300, 301, 302, 303, 304, 324, 325, 326, 327, 328, 329, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "runtest": [13, 14, 15, 16, 17, 30, 31, 34, 35, 36, 41, 42, 53, 54, 58, 59, 74, 75, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 210, 211, 223, 224, 225, 226, 234, 235, 236, 249, 250, 254, 259, 260, 266, 267, 268, 269, 270, 271, 274, 281, 297, 298, 299, 300, 301, 302, 303, 304, 323, 324, 325, 326, 327, 328, 329, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "testcas": [13, 14, 15, 16, 17, 30, 31, 34, 35, 36, 41, 42, 53, 54, 58, 59, 74, 75, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 210, 211, 223, 224, 226, 234, 236, 249, 250, 254, 259, 260, 266, 267, 268, 269, 270, 271, 274, 297, 298, 299, 300, 301, 302, 303, 304, 324, 325, 326, 327, 328, 329, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 379, 380, 381, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 455], "valueerror": [13, 14, 15, 16, 17, 30, 31, 34, 35, 36, 41, 42, 53, 54, 58, 59, 74, 75, 78, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 203, 210, 211, 220, 223, 224, 225, 226, 227, 234, 235, 236, 240, 241, 249, 250, 254, 256, 259, 260, 266, 267, 268, 269, 270, 271, 274, 281, 285, 288, 289, 295, 297, 298, 299, 300, 301, 302, 303, 304, 308, 316, 317, 324, 325, 326, 327, 328, 329, 347, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 375, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 410, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 490], "photocopi": 13, "simlar": 13, "walk": [14, 492, 498], "through": [14, 32, 47, 69, 77, 113, 151, 152, 154, 155, 163, 167, 172, 177, 178, 179, 201, 202, 204, 205, 240, 245, 283, 285, 288, 305, 308, 311, 324, 330, 331, 333, 337, 339, 340, 341, 342, 344, 345, 346, 349, 356, 361, 362, 363, 375, 377, 392, 399, 400, 404, 412, 416, 428, 440, 442, 449, 450, 451, 452, 454, 455, 456, 483, 484, 485, 487, 492, 494, 498, 501, 502, 503, 505, 507, 509, 510, 513, 514], "few": [14, 19, 32, 155, 220, 238, 261, 331, 366, 449, 452, 455, 456, 470, 483, 484, 497, 498, 499, 507, 509, 513], "shuffl": [14, 216, 218, 219, 220, 223, 224, 293, 331, 333, 416, 487, 492, 498, 503, 505, 507, 513], "languag": [14, 344, 471, 484, 498], "agnost": [14, 227], "super": [14, 44, 56, 74, 136, 259, 260, 310, 408, 456], "correctli": [14, 16, 165, 211, 259, 266, 267, 274, 281, 285, 288, 310, 324, 329, 355, 356, 361, 363, 364, 394, 396, 399, 434, 439, 456, 487, 490, 494], "armirun": [14, 224, 382], "setup": [14, 283, 318, 324, 369, 456, 487], "abov": [14, 102, 151, 153, 163, 237, 252, 283, 285, 311, 314, 324, 333, 341, 348, 382, 401, 411, 424, 444, 449, 451, 452, 454, 456, 470, 483, 484, 494, 498, 499, 503, 507, 509, 510, 513], "reloadingdb": 14, "nonexist": [14, 380], "refoneblockreactor": 14, "nsystem": 14, "y": [14, 26, 37, 43, 93, 108, 114, 136, 142, 153, 219, 263, 288, 293, 310, 335, 337, 341, 342, 355, 410, 412, 416, 418, 419, 438, 443, 444, 455, 469, 471, 472, 473, 474, 479, 480, 496, 498, 499, 503, 507, 509, 513], "z": [14, 37, 43, 83, 90, 112, 137, 139, 152, 153, 154, 155, 157, 190, 285, 288, 293, 302, 311, 312, 318, 319, 324, 326, 330, 331, 335, 336, 337, 340, 341, 342, 361, 419, 444, 449, 467, 469, 471, 472, 473, 477, 479, 480, 481, 482, 486, 492, 496, 498, 499, 500, 503, 507, 513], "sfp": [14, 27, 34, 219, 224, 283, 285, 289, 293, 295, 331, 332, 350, 351, 363, 487, 492, 502, 507], "1000": [14, 139, 142, 155, 254, 452, 456, 492, 497, 498, 502, 507], "evst": 14, "excor": [14, 283, 332, 358, 492, 497, 507], "2000": [14, 108, 112, 113, 125, 137, 142, 495, 507], "ngrid": 14, "hex_corners_up": [14, 513], "lattic": [14, 169, 173, 200, 218, 220, 224, 238, 240, 241, 252, 255, 256, 257, 259, 260, 266, 288, 293, 294, 298, 302, 306, 311, 317, 342, 401, 410, 449, 463, 487, 490, 498, 499, 513], "ic": [14, 125, 293, 297, 300, 301, 303, 478, 498, 507], "symmetri": [14, 220, 252, 284, 285, 288, 293, 311, 331, 334, 335, 336, 337, 339, 340, 341, 342, 343, 355, 401, 470, 478, 484, 486, 487, 492, 498, 499, 502, 507, 513], "32": [14, 153, 333, 347, 361, 408, 419, 484, 498], "hex": [14, 53, 54, 175, 178, 187, 190, 192, 216, 220, 223, 225, 241, 252, 284, 288, 293, 311, 317, 318, 326, 327, 331, 334, 335, 337, 339, 340, 341, 342, 352, 354, 355, 356, 360, 361, 363, 383, 401, 410, 411, 421, 461, 465, 467, 470, 478, 481, 482, 483, 484, 486, 487, 489, 490, 492, 498, 500, 502, 503, 505, 507, 513], "And": [14, 212, 215, 285, 342, 367, 447, 448, 455, 456, 494, 498, 509, 513], "move": [14, 47, 58, 155, 165, 206, 207, 214, 215, 218, 219, 223, 224, 283, 285, 289, 292, 294, 311, 314, 322, 324, 330, 331, 333, 342, 350, 357, 383, 400, 406, 416, 418, 471, 483, 484, 486, 487, 489, 490, 492, 502, 513], "cover": [15, 125, 160, 256, 311, 329, 355, 383, 448, 455, 494, 506], "quickli": [15, 19, 204, 363, 383, 446, 453, 480, 484, 490, 494, 497, 499], "bol": [15, 19, 25, 32, 70, 78, 204, 212, 238, 256, 263, 266, 283, 288, 289, 315, 331, 355, 416, 449, 454, 483, 486, 487, 492, 497, 503, 504, 505, 507, 509, 512], "temporari": [15, 20, 62, 77, 252, 405, 418, 425], "NOT": [15, 77, 100, 101, 151, 175, 211, 219, 311, 315, 355], "fast": [15, 21, 77, 176, 184, 214, 243, 245, 252, 288, 312, 331, 335, 442, 451, 463, 483, 484, 486, 492, 493, 497, 499, 503, 505, 507], "everi": [15, 21, 56, 78, 159, 175, 204, 238, 240, 245, 252, 256, 285, 331, 344, 355, 366, 369, 383, 399, 401, 402, 411, 412, 416, 418, 419, 442, 449, 454, 456, 485, 489, 494, 497, 499, 502, 507, 513, 514], "syncdbafterwrit": [15, 486, 490, 507], "either": [16, 26, 44, 47, 56, 58, 78, 79, 104, 164, 167, 169, 175, 178, 200, 204, 205, 214, 219, 241, 245, 256, 261, 283, 288, 292, 293, 294, 299, 311, 318, 333, 335, 339, 341, 342, 367, 375, 377, 383, 401, 402, 404, 416, 442, 451, 452, 455, 456, 478, 484, 494, 498, 499, 507, 513], "text": [19, 21, 60, 61, 66, 78, 162, 288, 289, 308, 311, 317, 367, 383, 397, 401, 416, 419, 437, 438, 442, 447, 456, 472, 480, 487, 492, 498, 507, 509, 510, 513], "mechan": [19, 78, 79, 87, 116, 228, 308, 331, 333, 380, 452, 484, 485, 494, 507, 510, 513, 514], "etc": [19, 20, 26, 47, 78, 104, 108, 134, 152, 154, 162, 163, 200, 201, 202, 204, 208, 212, 219, 240, 245, 247, 252, 262, 283, 284, 285, 288, 289, 295, 306, 308, 311, 315, 317, 318, 331, 333, 342, 344, 347, 367, 369, 384, 400, 401, 415, 416, 442, 449, 451, 452, 454, 455, 483, 484, 492, 496, 497, 498, 499, 503, 506, 507], "particularli": [19, 42, 66, 241, 324, 331, 342, 451, 455, 494, 499, 507], "eqhistorytrackerinterfac": 19, "unravel": 19, "interest": [19, 21, 49, 83, 85, 285, 314, 316, 317, 324, 331, 449, 469, 484, 494, 506, 507, 513], "armiblock": 19, "blocknam": 19, "historykei": 19, "paralyzingli": 19, "slow": [19, 311, 330, 453, 487], "def": [19, 56, 283, 344, 347, 402, 411, 417, 447, 451, 452, 468, 470, 478, 480, 492, 494, 497, 498, 507], "percentbu": [19, 219, 471, 503, 504], "now": [19, 37, 47, 49, 104, 139, 146, 175, 188, 201, 207, 254, 256, 283, 288, 311, 332, 340, 344, 446, 449, 452, 454, 455, 456, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 497, 498, 502, 507, 508, 510, 514], "assemswithhistori": 19, "timestepsavail": 19, "gettimeindic": 19, "fluxattimestep3": 19, "b1003a": 19, "date": [19, 240, 252, 283, 331, 342, 375, 446, 456, 486, 487, 488, 489, 490, 492, 494, 507], "stop": [19, 76, 341, 402, 442, 456, 477, 484], "detailassemblynam": 19, "year": [19, 104, 418, 456, 484, 505], "look": [19, 21, 28, 139, 152, 154, 155, 163, 204, 214, 219, 227, 240, 245, 285, 288, 311, 318, 331, 333, 342, 344, 407, 419, 448, 451, 452, 453, 456, 492, 494, 495, 498, 507, 509, 513], "8192": [19, 333], "control": [19, 25, 32, 50, 82, 172, 174, 175, 177, 183, 190, 211, 219, 238, 240, 241, 284, 285, 288, 289, 293, 294, 311, 317, 318, 325, 330, 331, 333, 343, 344, 370, 419, 452, 456, 463, 483, 484, 486, 487, 490, 492, 494, 497, 502, 503, 505, 507, 509, 513], "32768": [19, 333], "ask": [19, 21, 60, 288, 311, 377, 403, 415], "activ": [19, 32, 47, 60, 72, 78, 151, 155, 163, 201, 204, 283, 285, 292, 294, 308, 331, 376, 377, 416, 446, 448, 449, 451, 455, 456, 484, 485, 487, 494, 503, 507, 513, 514], "treatment": [19, 32, 245, 294, 347, 507], "assem": [19, 219, 224, 303, 314, 315, 318, 329, 330, 331, 332, 351, 400, 416, 492], "give": [19, 25, 93, 134, 139, 154, 219, 238, 288, 294, 305, 308, 311, 324, 341, 342, 367, 412, 413, 454, 488, 498, 499, 509], "signal": [19, 32, 77, 288, 347, 348], "timeindic": 19, "boc": [19, 78, 204, 212, 238, 252, 256, 259, 266, 288, 400, 449, 483, 503, 507, 509], "moc": [19, 78, 252], "fashion": [19, 455], "inexpens": 19, "simultan": [19, 412], "preload": 19, "keyerror": [19, 55, 79, 333], "found": [19, 26, 42, 58, 79, 167, 212, 214, 219, 220, 226, 227, 283, 285, 288, 311, 314, 316, 324, 331, 333, 334, 337, 339, 348, 403, 407, 412, 413, 438, 442, 449, 454, 484, 491, 494, 507, 513], "manipul": [20, 47, 65, 76, 165, 204, 283, 338, 367, 415, 442, 507, 508, 509], "bit": [20, 33, 56, 162, 166, 173, 245, 283, 285, 288, 308, 311, 337, 347, 408, 419, 452, 455, 480, 492, 494, 498, 502, 508, 509], "catch": [20, 163, 226, 363, 382, 427], "admittedli": 20, "_c": [20, 245], "databs": 20, "soon": [20, 283, 308, 311, 352, 455, 456, 459, 466, 482, 484, 486, 494, 495, 500], "construct": [20, 32, 56, 58, 70, 78, 79, 89, 152, 170, 182, 200, 211, 256, 262, 283, 284, 289, 290, 291, 292, 293, 295, 298, 299, 303, 304, 308, 311, 315, 324, 331, 333, 334, 337, 341, 342, 343, 344, 356, 377, 390, 393, 396, 399, 411, 471, 478, 479, 486, 492, 497, 507, 509, 513], "argument": [20, 32, 39, 53, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 104, 151, 154, 211, 240, 242, 283, 293, 306, 308, 311, 324, 331, 339, 341, 342, 344, 347, 369, 377, 381, 383, 390, 393, 399, 419, 447, 449, 451, 454, 455, 456, 486, 487, 489, 492], "delet": [20, 21, 62, 77, 78, 144, 146, 153, 155, 175, 252, 318, 331, 366, 367, 383, 405, 406, 415, 446, 455, 487, 507], "clean": [20, 62, 77, 146, 155, 214, 311, 318, 405, 425, 446, 449, 456, 487, 507], "job": [20, 21, 77, 241, 317, 434, 507], "cours": [20, 219, 312, 450, 484, 497, 498, 499], "diagnos": [21, 392], "psutil": 21, "perspect": [21, 144, 245, 283, 442, 494, 502], "great": [21, 101, 331, 344, 434, 446, 456, 484, 507], "gc": 21, "get_object": 21, "garbag": [21, 77], "collector": [21, 77], "count": [21, 22, 23, 27, 165, 166, 240, 288, 331, 337, 351, 384, 391, 400, 418, 419, 487, 499, 513], "note": [21, 94, 152, 169, 408, 411, 418, 419, 436, 448, 452, 468, 480, 484, 492, 499, 502, 503, 507, 509, 513], "sy": [21, 76, 494], "getsizeof": 21, "certainli": [21, 456, 499, 507], "slightli": [21, 65, 219, 282, 288, 294, 342, 486, 489, 494, 498, 507], "seem": [21, 33, 45, 220, 252, 342, 344, 375], "de": [21, 44, 288, 367, 492], "alloc": [21, 167, 240, 241], "got": [21, 144], "2gb": 21, "pythonhost": 21, "ntask": [21, 69, 490, 498, 499, 507], "cpuspertask": 21, "total": [21, 35, 44, 55, 82, 108, 133, 165, 167, 178, 182, 197, 200, 212, 224, 237, 247, 285, 288, 308, 311, 316, 317, 319, 324, 331, 355, 392, 401, 402, 404, 412, 452, 454, 456, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 492, 494, 497, 502, 503, 504, 505, 507, 510, 512], "scaveng": 21, "hook": [21, 47, 78, 204, 254, 282, 283, 292, 396, 399, 450, 451, 484, 486, 490, 494, 507], "good": [21, 45, 47, 92, 139, 173, 204, 220, 259, 289, 308, 347, 383, 416, 419, 448, 450, 454, 455, 484, 485, 486, 492, 494, 507, 514], "summari": [21, 27, 28, 39, 61, 66, 70, 153, 214, 284, 295, 304, 311, 319, 331, 366, 450, 471, 478, 479, 492, 507, 509], "footprint": 21, "timedescript": 21, "stdout": [21, 214, 304, 367, 494, 509], "debugmem": [21, 507], "turn": [21, 83, 240, 252, 256, 259, 283, 285, 288, 293, 331, 367, 390, 400, 442, 447, 449, 451, 478, 484, 486, 497, 499, 507, 510], "problem": [21, 55, 104, 163, 167, 169, 170, 182, 241, 252, 256, 257, 294, 301, 311, 330, 331, 341, 342, 343, 366, 377, 380, 382, 418, 449, 456, 480, 484, 498, 499, 505, 507, 509], "attrnam": 21, "refobject": 21, "thorugh": 21, "referr": 21, "oppos": [21, 288, 308, 390, 401], "gigabyt": 21, "reports": 21, "u": [21, 108, 125, 134, 135, 136, 137, 153, 154, 155, 165, 184, 220, 245, 283, 288, 289, 292, 293, 297, 303, 311, 333, 346, 367, 404, 455, 475, 476, 480, 484, 485, 492, 494, 498, 499, 514], "ao": 21, "arbitrarili": [21, 330, 331, 333, 399, 494, 507], "deepli": 21, "focus": [21, 340, 361, 484, 499, 507], "held": [21, 311, 331], "classtyp": 21, "sys_mem": 21, "hostnam": 21, "14": [21, 112, 136, 153, 220, 337, 361, 419, 470, 490, 492, 496, 498, 507], "ram": [21, 484], "proc": 21, "mem": 21, "mb": [21, 35, 465, 481, 505], "491": 21, "472": 21, "471": 21, "470": [21, 507], "13": [21, 136, 153, 220, 337, 361, 412, 419, 449, 470, 487, 490, 492, 496, 507], "474": 21, "473": [21, 81, 92, 492], "460": 21, "461": 21, "printabl": 22, "test_newreport": [22, 29], "testreportcontentcr": [22, 29, 30], "test_report": [22, 29], "testreportingutil": [22, 29, 31], "testreport": [22, 29, 31], "testreportinterfac": [22, 29, 31], "groupsorderfirst": [22, 23], "componentwellgroup": [22, 23], "addtoreport": [22, 23], "writehtml": [22, 23], "writegroupshtml": [22, 23], "writeescap": [22, 24], "writereport": [22, 26, 27, 454], "tableofcont": [22, 26], "leveldict": [22, 26], "addchildel": [22, 26, 454], "addrow": [22, 26, 454], "generatedesignreport": [22, 27], "printreport": [22, 27, 31], "writerunsummari": [22, 27], "reportsfp": [22, 27], "countassembliessfp": [22, 27], "insert": [23, 26, 65, 104, 204, 283, 284, 285, 288, 311, 351, 418, 449, 454, 502], "datum": [23, 412], "f": [23, 24, 93, 104, 153, 200, 220, 346, 412, 416, 419, 442, 447, 452, 453, 468, 472, 492, 494, 495, 496, 497, 499, 507, 509, 513], "midst": [23, 311], "accept": [23, 49, 151, 155, 219, 285, 339, 343, 347, 375, 419, 444, 448, 455, 486, 507], "reportdatum": 23, "kwd": 24, "file_path": [24, 26], "embed": [24, 26, 45, 507], "src": [24, 26, 400, 442, 446, 476], "base64": [24, 26], "casetitl": [24, 214, 252, 368, 369, 478], "comprehens": [25, 263, 333, 454], "summar": [25, 28, 39, 55, 66, 70, 204, 366, 367, 454, 471, 478, 479, 487, 492, 507], "cold": [25, 104, 288, 305, 306, 307, 308, 310, 311, 314, 315, 322, 324, 355, 356, 357, 416, 454, 487, 490, 498, 502, 503, 507, 508], "boolean": [25, 26, 78, 151, 155, 166, 204, 261, 285, 288, 311, 315, 317, 318, 324, 331, 334, 368, 375, 396, 412, 416, 418, 442, 503, 507], "part": [25, 56, 116, 167, 204, 241, 283, 311, 318, 322, 333, 337, 339, 347, 382, 419, 442, 451, 454, 455, 463, 484, 487, 494, 497, 507], "tablesect": [25, 26], "pin": [25, 28, 216, 220, 223, 226, 227, 228, 237, 252, 284, 285, 288, 293, 305, 307, 308, 311, 312, 315, 317, 322, 328, 331, 333, 335, 341, 347, 354, 355, 356, 361, 363, 401, 410, 449, 463, 483, 484, 487, 490, 492, 497, 498, 499, 503, 504, 505, 508], "fraction": [25, 80, 82, 84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 115, 125, 133, 134, 135, 137, 138, 154, 155, 163, 169, 204, 211, 237, 238, 240, 247, 271, 288, 292, 301, 305, 308, 311, 316, 318, 322, 330, 331, 339, 355, 356, 368, 400, 402, 404, 424, 441, 454, 467, 477, 481, 482, 483, 484, 486, 487, 492, 495, 498, 500, 502, 503, 504, 505, 507, 512], "subsect": [25, 26, 220, 289, 446, 485, 514], "componenet": 25, "generatefullcoremap": [25, 27, 28], "showblockaxmesh": [25, 27, 28, 416, 478], "hold": [26, 78, 165, 178, 179, 203, 220, 241, 285, 290, 305, 308, 311, 318, 342, 344, 346, 410, 483, 507], "abc": [26, 38, 289, 339, 341], "htmltree": [26, 454], "htmlelement": [26, 454], "idprefix": 26, "higher": [26, 175, 219, 283, 285, 308, 324, 449, 498, 509, 513], "font": [26, 416], "rang": [26, 46, 56, 92, 103, 115, 331, 342, 344, 397, 411, 452, 456, 460, 467, 471, 473, 474, 482, 492, 497, 500, 507], "term": [26, 163, 166, 167, 212, 219, 240, 247, 252, 331, 335, 412, 483, 484, 498], "href": 26, "referenc": [26, 162, 165, 369], "left": [26, 155, 162, 218, 223, 283, 308, 311, 337, 339, 341, 342, 375, 401, 412, 419, 454, 509, 510, 511], "subhead": 26, "imagepath": 26, "encod": 26, "hexplot": 26, "premad": 26, "png": [26, 318, 416, 453, 462, 507], "With": [26, 44, 285, 342, 348, 492, 498, 507, 510], "row": [26, 43, 166, 182, 202, 311, 401, 411, 419, 421, 437, 454, 509, 513], "rname": [26, 454], "yaxi": [26, 263, 418, 454], "eventu": [26, 151, 289, 334, 401, 486, 507], "axi": [26, 175, 263, 288, 324, 341, 342, 401, 410, 416, 418, 444, 502, 503, 505, 513], "identifi": [26, 77, 104, 152, 155, 283, 288, 289, 314, 316, 400, 404, 439, 484, 498, 503, 507], "peakdpa": 26, "keff": [26, 211, 252, 254, 331, 374, 412, 418, 449, 454, 492, 503, 505, 507, 510], "seri": [26, 55, 56, 77, 151, 152, 173, 204, 412, 418, 446, 497, 507], "effect": [26, 51, 59, 108, 137, 155, 169, 240, 241, 256, 290, 294, 311, 317, 330, 331, 346, 383, 454, 484, 505, 507, 510], "uncertainti": [26, 454], "keffunc": [26, 418, 454, 505], "uncontrol": [26, 211, 418, 441, 498, 499, 505], "burn": [26, 125, 153, 155, 159, 163, 211, 240, 245, 252, 288, 289, 294, 297, 301, 303, 400, 441, 455, 480, 483, 499, 503, 507], "getassembli": [26, 284, 331, 351, 449, 471, 492, 509], "peakbu": 26, "bu": [26, 216, 219, 240, 454, 455], "maxvalu": 26, "defaultdict": [26, 241, 468, 496], "max": [26, 81, 104, 211, 219, 223, 224, 226, 252, 263, 288, 311, 331, 344, 347, 350, 351, 487, 502, 505, 507, 510, 512], "maxpercentbu": [26, 219, 331, 502, 505, 507], "linetoaddto": 26, "our": [26, 45, 191, 367, 375, 408, 429, 448, 451, 454, 455, 456, 469, 484, 491, 494, 498, 507, 510, 511, 513], "ymin": [26, 418, 472], "ext": [26, 90, 92, 123, 376, 383, 446], "minimum": [26, 104, 223, 241, 311, 317, 330, 337, 340, 342, 404, 416, 418, 505, 507], "enum": [26, 77, 78, 153, 179, 239, 241, 334, 376, 408, 486], "enumer": [26, 153, 238, 334, 376, 452, 462, 477, 480, 486], "pdf": [27, 80, 81, 92, 94, 95, 96, 97, 98, 99, 108, 130, 133, 137, 139, 154, 162, 175, 446, 487, 507], "disabl": [27, 78, 204, 241, 252, 256, 419, 425, 437, 449, 486, 503, 507], "spent": [27, 219, 224, 295, 331, 335, 349, 351, 358, 479, 484, 486, 487, 492, 499, 502, 505, 507], "pool": [27, 219, 224, 295, 331, 335, 349, 351, 358, 479, 486, 487, 492, 499, 502, 507], "miscellan": 28, "Then": [28, 46, 165, 240, 285, 288, 311, 494], "maco": [28, 489, 494], "processor": [28, 77, 144, 151, 205, 241, 256, 438, 442, 452, 489, 492, 498], "convergencesummari": 28, "weight": [28, 55, 84, 152, 153, 154, 155, 169, 200, 201, 240, 266, 308, 311, 331, 404, 480, 487, 494, 496, 503, 505, 507], "balanc": [28, 179, 200, 241, 252, 254, 392, 452, 455, 503], "duct": [28, 93, 240, 241, 266, 284, 288, 305, 308, 317, 324, 325, 331, 333, 355, 357, 416, 463, 468, 478, 484, 490, 492, 497, 498, 503, 507, 513], "simplist": [28, 507], "averag": [28, 92, 97, 104, 169, 175, 200, 240, 241, 252, 266, 285, 288, 310, 311, 315, 316, 318, 330, 331, 333, 344, 347, 354, 412, 416, 430, 487, 492, 496, 498, 502, 503, 504, 505, 507], "fz": 28, "fxy": 28, "fq": 28, "edit": [28, 56, 292, 447, 449, 456, 485, 498, 507, 509, 514], "test_timeseri": [29, 30], "test_tablecr": [29, 30], "test_reportcont": [29, 30], "test_reportcontentsend": [29, 30], "test_neutronicsplotfunct": [29, 30], "test_writereport": [29, 30, 31], "test_reportbas": [29, 30], "test_reportlog": [29, 30], "test_getsysteminfolinux": [29, 31], "test_getsysteminfowindow": [29, 31], "test_getsysteminfomac": [29, 31], "test_getsysteminfo": [29, 31], "test_getnodenam": [29, 31], "test_setdata": [29, 31], "test_getdata": [29, 31], "test_reactorspecificreport": [29, 31], "test_writewelcomehead": [29, 31], "test_printreport": [29, 31], "test_distributablereportint": [29, 31], "test_interactbolreportint": [29, 31], "test_interacteverynod": [29, 31, 33, 36, 258, 259, 265, 266], "test_interactboc": [29, 31, 222, 224, 258, 259, 265, 266], "test_interacteoc": [29, 31], "test_interacteol": [29, 31], "_getsysteminfolinux": 31, "mock": [31, 35, 223, 224, 254, 355, 384, 394], "mocksubprocess": 31, "_getsysteminfowindow": 31, "_getsysteminfomac": 31, "saniti": [31, 326, 396, 437], "wild": 31, "mainstream": [31, 144], "distro": 31, "fail": [31, 74, 77, 155, 201, 223, 240, 269, 285, 337, 352, 368, 369, 377, 383, 393, 394, 397, 400, 413, 417, 425, 486, 487, 490, 507], "empti": [31, 37, 43, 78, 104, 138, 155, 201, 211, 223, 226, 240, 256, 283, 285, 288, 330, 346, 356, 357, 361, 363, 383, 408, 416, 419, 421, 437, 483, 487, 494, 498, 507], "machin": [31, 72, 205, 219, 224, 416, 418, 471, 478, 479, 484, 485, 492, 514], "cluster": [31, 46, 55, 60, 77, 369, 415, 497, 507], "trigger": [32, 151, 162, 166, 238, 283, 348, 471, 478, 479, 483, 484, 492, 502, 509], "folder": [32, 61, 204, 214, 413, 425, 446, 454, 455, 485, 494, 497, 509, 514], "review": [32, 137, 163, 204, 383, 448, 449, 455, 456], "collabor": [32, 283, 484], "dumpsnapshot": [32, 36, 507], "defaultsnapshot": [32, 507], "manageri": 32, "assign": [32, 78, 104, 153, 200, 219, 223, 241, 267, 288, 308, 314, 316, 333, 335, 341, 344, 346, 347, 356, 361, 417, 487, 492, 503, 507, 513], "mol": [32, 82, 108, 133, 137, 507], "stamp": 32, "cccnnn": [32, 507], "opposit": [32, 223, 288, 307, 342, 452], "engin": [33, 47, 83, 110, 163, 229, 450, 494, 495, 496, 497, 507], "world": [33, 252, 400, 437], "test_calcmgflu": [33, 34], "test_historyparamet": [33, 34], "test_historyreport": [33, 34], "test_getblockinassembli": [33, 34], "test_timestepfilt": [33, 34], "test_timestepfilteringwithgap": [33, 34], "test_blocknam": [33, 34], "test_fullbreakdown": [33, 35], "test_displaymemoryusag": [33, 35], "test_printfullmemorybreakdown": [33, 35], "test_getreferr": [33, 35], "test_checkforduplicateobjectsonarmimodel": [33, 35], "test_profilememoryusageact": [33, 35], "test_gettotaljobmemori": [33, 35], "test_getcurrentmemoryusag": [33, 35], "test_printcurrentmemoryst": [33, 35], "test_printcurrentmemorystate_noset": [33, 35], "get_contain": [33, 35], "test_expandcontain": [33, 35], "test_counthandlesrecurs": [33, 35], "test_interactcoupl": [33, 36], "test_activeatedefaultsnapshots_30cycles2burnstep": [33, 36], "test_activeatedefaultsnapshots_17cycles5burnstep": [33, 36], "confirm": [34, 355, 377], "mg": [34, 153], "hdf": [34, 492], "hdfdb": [34, 77], "readblockshistori": 34, "historical_valu": 34, "historical_indic": 34, "cast": [34, 135], "energi": [34, 154, 158, 167, 169, 175, 178, 179, 182, 193, 200, 201, 243, 252, 254, 269, 288, 308, 311, 331, 355, 413, 416, 449, 475, 483, 484, 487, 494, 503, 505, 507], "retriev": [34, 78, 152, 153, 155, 184, 201, 202, 204, 211, 249, 308, 311, 314, 316, 331, 333, 340, 344, 354, 355, 356, 357, 363, 405, 486, 492, 496, 507], "paramat": 34, "swap": [34, 144, 146, 219, 223, 418, 471, 492, 507], "5": [34, 36, 54, 56, 78, 80, 83, 93, 96, 97, 101, 112, 120, 136, 139, 140, 142, 151, 153, 163, 167, 173, 175, 190, 211, 219, 220, 237, 238, 247, 285, 288, 297, 318, 324, 337, 340, 342, 354, 356, 361, 400, 411, 419, 438, 441, 454, 456, 469, 470, 471, 473, 474, 478, 479, 480, 489, 491, 492, 494, 496, 497, 498, 499, 503, 507, 509, 511, 513], "loc": [34, 331, 332, 340, 347, 351, 366, 449, 499], "mockcpucount": 35, "mockvmem": 35, "50": [35, 83, 153, 285, 356, 361, 411, 456, 464, 484, 492, 507], "gb": [35, 144, 484], "10": [35, 78, 82, 90, 93, 105, 113, 114, 125, 135, 136, 141, 153, 154, 162, 165, 166, 167, 171, 173, 175, 176, 211, 219, 220, 288, 293, 297, 301, 303, 308, 311, 318, 324, 337, 347, 356, 361, 383, 411, 412, 416, 419, 428, 441, 442, 449, 452, 455, 456, 470, 473, 474, 475, 478, 480, 484, 486, 487, 492, 494, 495, 496, 497, 498, 499, 507], "cpu": [35, 144, 151, 452, 484, 492, 507], "mocksysandprocmemus": 35, "mockprintsysmemuseact": 35, "mock1": 35, "mocksnapshotrequest": 36, "30": [36, 108, 131, 132, 153, 162, 178, 211, 285, 331, 340, 356, 361, 401, 411, 419, 441, 456, 478, 492, 498, 507], "burnstep": [36, 46, 203, 204, 400, 441, 498, 499, 507], "17": [36, 108, 153, 163, 167, 220, 337, 361, 481, 486, 492, 496, 507], "amen": 37, "theoret": [37, 82, 104, 129, 303, 308, 356, 487, 490, 504], "sort": [37, 78, 153, 175, 284, 288, 305, 311, 331, 333, 340, 344, 355, 363, 366, 408, 416, 442, 470, 471, 487, 492, 497, 507], "wide": [37, 170, 307, 311, 372, 383, 447, 495, 498, 505], "vi": [37, 38, 39, 494], "qualiti": [37, 93, 113, 135, 382, 456, 477, 484, 495], "pure": [37, 81, 108, 110, 133, 136, 331, 367, 401, 408, 437, 442, 495], "silo": 37, "binari": [37, 45, 78, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 190, 411, 475, 494, 507, 509], "test_vi": [37, 40, 42], "testvtkmesh": [37, 40, 41], "testvisdump": [37, 40, 41], "test_xdmf": [37, 40], "testxdmf": [37, 40, 42], "dumpstat": [37, 38, 44, 45], "addopt": [37, 39, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 238, 242, 368, 375, 447], "settingsargu": [37, 39, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 238, 242, 378, 381, 447], "docstr": [39, 66, 70, 165, 417, 419, 446, 450, 451, 454, 456, 488], "decor": [39, 66, 70, 347, 383, 402, 403, 413, 423, 451], "instead": [39, 66, 70, 79, 104, 155, 204, 214, 219, 256, 259, 283, 285, 288, 293, 295, 305, 308, 311, 330, 331, 334, 340, 342, 347, 348, 361, 369, 382, 383, 384, 394, 400, 402, 413, 442, 452, 454, 455, 484, 486, 487, 490, 492, 494, 498, 507, 513], "suffici": [39, 66, 70, 108, 204, 220, 256, 312, 498, 507], "short": [39, 47, 55, 60, 66, 70, 163, 214, 217, 252, 344, 346, 347, 369, 376, 451, 456, 485, 498, 507, 514], "express": [39, 47, 334, 411, 438, 442, 455, 456, 471, 484, 498, 507, 511], "One": [39, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 162, 167, 195, 242, 283, 308, 340, 344, 354, 377, 381, 407, 411, 449, 454, 492, 496, 507], "unspecifi": [39, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 242, 267, 381], "parser": [39, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 166, 242, 381, 447], "posit": [39, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 219, 242, 252, 285, 288, 310, 311, 315, 318, 331, 335, 337, 339, 340, 341, 342, 343, 381, 401, 410, 411, 412, 418, 419, 428, 454, 486, 487, 499, 503, 505, 507, 509, 513], "test_testvtkmesh": [40, 41], "test_dumpreactorvtk": [40, 41], "test_dumpreactorxdmf": [40, 41], "test_hexmesh": [40, 41], "test_cartesianmesh": [40, 41], "test_deduptim": [40, 42], "funtion": 42, "vacuum": [42, 175, 331], "resort": 42, "goe": [43, 205, 220, 331, 339, 340, 349, 355, 448, 456, 480], "vertic": [43, 44, 307, 315, 324, 416, 483, 507], "problemat": [43, 295, 484], "primit": [43, 305, 308, 483], "celltyp": 43, "unstructur": [43, 44, 339], "mesh": [43, 44, 45, 50, 125, 165, 170, 172, 177, 178, 183, 241, 252, 254, 285, 288, 289, 291, 297, 300, 301, 303, 310, 311, 315, 318, 319, 324, 327, 329, 330, 331, 335, 336, 337, 340, 341, 342, 343, 347, 357, 412, 416, 471, 478, 479, 486, 487, 492, 498, 499, 502, 503, 504, 505, 507], "vertex": 43, "cell": [43, 288, 331, 335, 337, 339, 340, 341, 342, 395, 401, 410, 428, 437, 446, 498, 499], "onto": [43, 240, 311, 330, 331, 346, 484, 486, 494, 509], "concept": [43, 47, 92, 204, 295, 316, 331, 337, 451, 455, 487, 507], "bunch": [43, 144, 368, 413, 452, 492, 509], "nx3": 43, "per": [43, 44, 50, 76, 125, 155, 159, 163, 165, 169, 204, 213, 256, 288, 305, 311, 318, 319, 329, 331, 337, 369, 400, 418, 419, 437, 449, 455, 483, 484, 487, 498, 503, 505, 507, 513], "belong": [43, 47, 104, 153, 212, 283, 311, 347, 351, 456, 462], "contin": 43, "relev": [43, 78, 160, 204, 219, 229, 256, 290, 315, 331, 333, 348, 350, 408, 448, 457, 482, 489, 499, 500, 507, 509], "writer": [44, 169, 181, 182, 191, 219, 256, 257, 260, 311, 369, 487], "aspect": [44, 224, 361, 419, 449, 497], "export": [44, 218, 485, 494, 514], "doabl": [44, 509], "effort": [44, 288, 322, 330, 342, 412, 456, 484, 507], "arbitrari": [44, 78, 139, 254, 294, 299, 330, 331, 332, 335, 355, 356, 369, 408, 414, 419, 430, 437, 444, 447, 449, 452, 486, 494, 507], "visualiz": 44, "fanci": [44, 47, 283, 344], "difficult": [44, 295, 333, 344, 347, 413, 509], "big": [44, 144, 240, 295, 318, 347, 452, 498, 509], "basenam": [44, 45], "inputnam": [44, 45], "finish": [44, 238, 497, 507], "includeparam": [44, 45], "excludeparam": [44, 45], "exclud": [44, 55, 204, 219, 240, 241, 245, 294, 404], "interchang": 45, "interpret": [45, 66, 78, 79, 82, 89, 102, 104, 108, 131, 134, 135, 136, 137, 152, 175, 292, 293, 294, 324, 331, 333, 334, 401, 412, 492, 507, 510], "light": [45, 245, 480, 483, 499], "live": [45, 145, 163, 206, 214, 217, 238, 252, 283, 294, 451, 509, 513], "xml": [45, 352, 368, 376, 499], "paraview": [45, 485, 494, 514], "visit": [45, 400, 485, 494, 514], "properli": [45, 58, 169, 190, 312, 324, 326, 331, 355, 356, 393, 396, 401, 419, 424, 449, 486], "polyhedra": 45, "unfortun": [45, 341, 408, 417, 455, 507], "__need__": 45, "prism": 45, "wedg": 45, "defeat": 45, "xmdf": 45, "cartesian": [45, 56, 175, 284, 285, 293, 311, 317, 331, 334, 335, 339, 340, 342, 355, 363, 383, 388, 401, 421, 467, 471, 481, 482, 484, 486, 487, 499, 500, 507], "theta": [45, 79, 137, 139, 288, 302, 310, 311, 318, 319, 326, 331, 343, 364, 444, 467, 481, 482, 486, 500, 507], "elementtre": 45, "temporalcollect": 45, "analyz": [46, 49, 55, 56, 215, 237, 449, 451, 484, 492, 506, 509], "often": [46, 47, 48, 66, 77, 79, 85, 86, 90, 104, 145, 152, 162, 166, 169, 173, 204, 214, 228, 240, 284, 311, 312, 317, 333, 335, 337, 338, 341, 347, 447, 463, 470, 484, 485, 486, 492, 494, 495, 497, 498, 507, 508, 509, 513, 514], "sweep": [46, 47, 48, 56, 60, 252, 288, 320, 321, 322, 449, 478, 484, 486, 487, 493, 507], "send": [46, 77, 78, 151, 452, 455], "off": [46, 78, 80, 153, 162, 172, 177, 200, 240, 256, 283, 285, 288, 317, 318, 331, 341, 342, 363, 367, 390, 401, 419, 452, 470, 484, 486, 494, 498, 507, 513], "my": [46, 402, 415, 417, 435, 447, 451, 494, 507], "interdepend": [46, 55], "sensit": [46, 50, 200, 283, 330, 331, 346, 347, 484, 486, 497], "studi": [46, 50, 92, 188, 200, 219, 330, 484, 497, 498, 507], "armiloc": 46, "numstep": 46, "11": [46, 78, 82, 92, 101, 116, 137, 153, 175, 187, 192, 220, 337, 361, 412, 419, 449, 470, 478, 486, 487, 492, 496, 497, 498, 499, 507], "submit": [46, 55, 56, 60, 376, 450, 494, 497, 507], "hpc": [46, 55, 60, 77, 484, 494, 497], "samplinginputmodifi": [46, 48, 49, 56, 59], "fullcoremodifi": [46, 48, 49], "settingsmodifi": [46, 48, 49, 312, 320, 321, 487, 497], "multisettingmodifi": [46, 48, 49], "blueprintblockmodifi": [46, 48, 49, 53], "neutronicsmodifi": [46, 48], "neutronicconvergencemodifi": [46, 48, 50, 312, 320, 321], "neutronicmeshssizemodifi": [46, 48, 50], "pintypeinputmodifi": [46, 48], "smeardensitymodifi": [46, 48, 51], "cladthicknessbyodmodifi": [46, 48, 51], "cladthicknessbyidmodifi": [46, 48, 51], "test_cas": [46, 57], "testarmicas": [46, 57, 58], "testcasesuitedepend": [46, 57, 58], "testcasesuitecomparison": [46, 57, 58], "testextrainputwrit": [46, 57, 58], "multifilesinterfac": [46, 57, 58], "testpluginwithduplicateset": [46, 57, 58], "testpluginforcopyinterfacesmultiplefil": [46, 57, 58], "testcopyinterfaceinput": [46, 57, 58], "test_suitebuild": [46, 57], "latinhypercubemodifi": [46, 57, 59], "settingmodifi": [46, 56, 57, 59], "testlatinhypercubesuitebuild": [46, 57, 59], "testfullfactorialsuitebuild": [46, 57, 59], "testseparateeffectsbuild": [46, 57, 59], "independentvari": [46, 47, 49, 58, 59, 497, 507], "addexplicitdepend": [46, 47], "getpotentialparentfromsettingvalu": [46, 47], "setuptaskdepend": [46, 47], "initializeoper": [46, 47, 478], "summarizedesign": [46, 47, 58], "echoconfigur": [46, 55, 497], "writet": [46, 55], "adddegreeoffreedom": [46, 56, 497], "addmodifierset": [46, 56], "buildsuit": [46, 56, 497], "redirect": [47, 55, 367], "post": [47, 55, 77, 315, 316, 447, 492, 493, 507, 509], "reactiv": [47, 104, 165, 212, 228, 240, 245, 252, 315, 331, 347, 484, 492, 503, 505, 507], "coeffici": [47, 79, 81, 83, 92, 95, 96, 97, 99, 104, 105, 133, 136, 137, 167, 174, 208, 212, 228, 240, 252, 256, 305, 315, 331, 347, 355, 412, 444, 492, 495, 503, 505, 507, 511], "complex": [47, 162, 214, 220, 224, 252, 283, 307, 311, 375, 401, 471, 484, 485, 494, 495, 498, 499, 507, 514], "definit": [47, 49, 79, 82, 108, 155, 157, 159, 163, 165, 172, 177, 230, 238, 247, 262, 277, 283, 284, 286, 287, 291, 292, 293, 295, 308, 309, 311, 330, 331, 333, 342, 344, 345, 346, 347, 348, 349, 363, 372, 375, 396, 399, 400, 403, 416, 442, 448, 449, 451, 478, 480, 486, 487, 490, 494, 495, 496, 497, 498, 502, 507, 513], "independentvariabl": 47, "lazi": [47, 455], "demand": [47, 204, 288, 311], "someon": [47, 56, 151, 252, 292, 344, 348, 484], "reflect": [47, 77, 82, 175, 241, 252, 284, 308, 311, 331, 334, 499, 502, 507, 513], "somehow": [47, 160, 366, 451, 452, 456], "ideal": [47, 78, 169, 283, 333, 383, 494], "explicit": [47, 104, 165, 218, 245, 249, 250, 293, 308, 311, 360, 419, 427, 455, 486, 487, 498, 507, 513], "evalu": [47, 93, 104, 135, 153, 159, 162, 166, 200, 205, 220, 245, 256, 293, 311, 314, 322, 355, 408, 411, 412, 419, 455, 470, 484, 485, 499, 503, 507, 514], "impos": [47, 49, 155, 204, 283, 416], "implicitli": [47, 204, 289, 486, 503, 507], "settingvalu": 47, "filepattern": 47, "pattern": [47, 55, 78, 165, 166, 214, 252, 311, 342, 357, 368, 438, 442, 449, 497, 503, 507], "conveni": [47, 152, 166, 204, 214, 241, 283, 331, 342, 377, 383, 401, 402, 411, 446, 494, 498, 507], "match": [47, 55, 79, 151, 155, 164, 166, 200, 219, 283, 285, 289, 299, 311, 317, 326, 331, 339, 343, 356, 357, 361, 368, 376, 377, 383, 430, 442, 483, 486, 490, 492, 494, 497, 507, 510], "groupdict": 47, "dirnam": 47, "task": [47, 60, 151, 152, 205, 220, 241, 342, 414, 452, 484, 492, 497, 507], "account": [47, 108, 159, 162, 200, 204, 247, 256, 288, 294, 308, 311, 315, 316, 318, 355, 487, 492, 495, 503, 507], "room": [47, 90, 155, 288, 483, 495, 498, 499], "coverag": [47, 183, 324, 355, 448, 487, 497, 507], "eleg": 47, "page": [47, 70, 90, 110, 116, 135, 137, 142, 237, 416, 451, 452, 454, 484, 492, 498, 499, 513], "additionalfil": 47, "modifiedset": 47, "writestyl": [47, 55], "modif": [47, 56, 82, 89, 102, 104, 108, 131, 134, 135, 136, 137, 172, 243, 283, 284, 288, 289, 290, 291, 292, 294, 297, 301, 303, 308, 318, 369, 417, 468, 471, 478, 479, 486, 487, 492, 494, 498, 499], "safer": [47, 369, 454], "wonder": 47, "medium": [47, 55, 74, 284, 294, 333, 369, 376, 487, 499], "destin": [47, 330, 369, 405, 406, 425], "01": [47, 55, 81, 82, 90, 108, 112, 137, 173, 288, 324, 443, 449, 471, 478, 479, 481, 487, 492, 496, 509], "sourcedir": 47, "forthcom": 47, "baselin": [47, 58, 229, 308, 499, 507], "shufflelog": [47, 78, 219, 224, 492, 498, 507], "loadingfil": [47, 498, 499, 507], "geomfil": [47, 289, 507, 509], "respect": [47, 95, 96, 99, 167, 204, 245, 285, 294, 346, 374, 477, 484, 511], "let": [47, 55, 104, 241, 283, 288, 397, 449, 452, 484, 492, 494, 495, 496, 498, 507, 508, 513], "union": [47, 78, 104, 162, 241, 283, 284, 311, 334, 339, 342, 357, 366, 374, 401, 408, 442], "ping": 47, "modular": [47, 262, 484, 494], "absolut": [47, 78, 311, 335, 342, 369, 415, 442, 488, 507], "wildcard": 47, "glob": [47, 78, 425, 486], "offer": [47, 377, 447, 457, 482, 496, 500], "noth": [47, 200, 216, 224, 331, 340, 355, 392, 416], "inputdirectori": [47, 368, 369, 497], "target": [47, 78, 245, 284, 288, 311, 312, 315, 316, 324, 331, 333, 383, 412, 413, 418, 419, 448, 484, 485, 487, 494, 503, 507, 513, 514], "resolv": [47, 79, 311, 315, 325, 368, 377, 379, 400, 442, 487], "regard": [47, 237], "simplifi": [47, 93, 113, 129, 135, 151, 245, 383, 408, 490, 498, 511], "runtim": [48, 77, 79, 202, 204, 261, 283, 317, 322, 486, 487, 494, 507], "test_inputmodifi": [48, 52], "mockgeom": [48, 52, 53, 54], "testsuitebuilderintegr": [48, 52, 53], "testsettingsmodifi": [48, 52, 53], "neutronicskernelopt": [48, 52, 53], "testfullcoremodifi": [48, 52, 53], "test_pintypeinputmodifi": [48, 52], "testblueprintmodifi": [48, 52, 54], "fail_if_aft": [48, 49, 51], "constuctor": 49, "paramtyp": [49, 56, 59], "__call__": [49, 56, 497], "space": [49, 51, 56, 77, 104, 138, 166, 204, 214, 288, 293, 305, 311, 314, 331, 335, 336, 341, 342, 400, 401, 416, 419, 473, 483, 484, 498, 503, 507, 513], "sampl": [49, 56, 311, 332, 421, 486, 498], "quasi": [49, 56, 335, 483], "random": [49, 56, 285, 344, 382, 417, 428, 435, 452], "continu": [49, 56, 335, 341, 400, 411, 419, 437, 449, 451, 469, 480, 484, 487, 496, 507], "discret": [49, 56, 165, 331, 341], "inclus": [49, 162, 442, 504, 507], "grow": [49, 285, 317, 333, 347, 363, 416, 418, 495, 507], "symmetr": [49, 175, 288, 318, 331, 339, 340, 341, 342, 449, 507], "besid": [49, 212], "expans": [49, 61, 79, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 111, 112, 115, 116, 125, 131, 132, 133, 135, 136, 137, 140, 141, 142, 219, 252, 283, 285, 288, 294, 305, 308, 313, 314, 315, 316, 317, 324, 325, 328, 355, 356, 396, 404, 419, 424, 425, 449, 467, 481, 482, 484, 486, 487, 490, 492, 495, 497, 500, 503, 505, 506, 507], "schedul": [49, 78, 203, 220, 455, 494, 507], "expand": [49, 61, 81, 82, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 125, 136, 140, 142, 155, 237, 285, 292, 293, 294, 299, 305, 308, 311, 315, 316, 317, 318, 324, 331, 334, 355, 356, 363, 401, 404, 412, 419, 424, 446, 454, 472, 483, 486, 487, 492, 495, 497, 498, 499, 507, 511], "themself": 49, "settingnam": [49, 56, 59, 66, 368, 375, 377], "adjust": [49, 50, 51, 54, 56, 78, 104, 155, 237, 250, 252, 285, 288, 294, 308, 311, 315, 321, 322, 355, 356, 449, 480, 485, 487, 497, 498, 499, 502, 507, 514], "settingv": 49, "conf_neutronics_typ": [49, 238, 252, 454], "conf_coarse_mesh_rebal": 49, "conf_eps_eig": 50, "conf_eps_fsavg": 50, "conf_eps_fspoint": 50, "100": [50, 80, 82, 95, 96, 99, 133, 153, 155, 219, 285, 288, 324, 361, 417, 419, 442, 455, 456, 464, 468, 497, 498, 499, 505, 507, 512], "criteria": [50, 78, 183, 211, 219, 252, 288, 289, 311, 331, 346, 507, 510], "multfactor": 50, "factor": [50, 104, 167, 183, 201, 204, 211, 219, 252, 285, 288, 307, 308, 311, 315, 316, 324, 331, 344, 355, 400, 441, 487, 492, 495, 498, 503, 505, 507, 512], "switch": [50, 259, 288, 294, 331, 344, 377, 401, 455, 487, 498, 507], "nodal": [50, 175, 178, 252, 288, 318], "finit": [50, 167, 174, 252, 318, 337, 340, 342, 411, 507], "approxim": [50, 133, 139, 238, 240, 241, 305, 311, 317, 318, 368, 418, 463, 484, 497, 498, 503, 507], "multipli": [50, 104, 154, 167, 200, 219, 237, 252, 261, 288, 311, 411, 503, 507], "axial": [50, 104, 125, 175, 183, 219, 252, 283, 284, 285, 288, 289, 291, 297, 300, 301, 303, 307, 308, 310, 313, 314, 315, 316, 318, 319, 324, 329, 330, 331, 333, 335, 337, 339, 340, 341, 342, 355, 357, 396, 412, 416, 418, 464, 486, 487, 490, 492, 494, 498, 499, 503, 505, 506, 507], "_pintypeassemblymodifi": 51, "smear": [51, 54, 288, 322, 328, 330, 483, 486, 498, 499, 503], "clad": [51, 54, 93, 212, 228, 241, 284, 285, 288, 299, 301, 308, 311, 317, 322, 324, 325, 331, 333, 355, 356, 357, 463, 468, 478, 483, 484, 487, 492, 497, 498, 499, 503, 505, 507, 508, 513], "tube": [51, 288, 483, 498, 499, 513], "fabric": [51, 212, 215, 404, 449, 503, 507], "thick": [51, 54, 310, 317, 322, 492, 498], "inner": [51, 54, 219, 220, 241, 284, 285, 288, 291, 307, 308, 310, 311, 314, 317, 322, 333, 337, 343, 355, 356, 454, 487, 490, 492, 494, 497, 498, 499, 503, 507, 508], "diamet": [51, 54, 288, 307, 314, 317, 322, 356, 492, 497, 498, 503, 507, 508], "outer": [51, 54, 175, 220, 252, 284, 285, 288, 305, 307, 310, 311, 314, 317, 318, 322, 331, 333, 343, 355, 356, 401, 463, 487, 492, 494, 497, 498, 503, 507, 508], "test_smeardensityfail": [52, 53], "test_settingsmodifi": [52, 53], "test_blueprintblockmodifi": [52, 53], "test_neutronicconvergencemodifi": [52, 53], "test_fullcoreconvers": [52, 53], "test_adjustsmeardens": [52, 54, 323, 328], "test_cladthickenessbyodmodifi": [52, 54], "test_cladthickenessbyidmodifi": [52, 54], "areafuel": 54, "smeardens": [54, 503], "innercladarea": 54, "fuelod": 54, "cladid": 54, "sqrt": [54, 307, 322, 340, 342, 410, 471, 472, 510], "cladthick": [54, 497], "od": [54, 285, 288, 301, 306, 307, 310, 356, 357, 470, 478, 497, 498, 499, 507, 508, 513], "cladthic": 54, "12": [54, 78, 81, 82, 101, 141, 142, 151, 153, 155, 220, 337, 361, 400, 412, 419, 442, 449, 456, 469, 470, 471, 477, 478, 486, 490, 492, 496, 507], "24": [54, 141, 153, 308, 337, 361, 419, 487], "cladod": 54, "025": 54, "05": [54, 81, 84, 142, 247, 374, 417, 449, 462, 471, 478, 479, 480, 481, 487, 492, 496, 497, 507], "conjunct": [55, 437, 507], "uniqu": [55, 119, 152, 155, 285, 311, 344, 507, 509, 513], "rootdir": [55, 368], "ignorepattern": [55, 368], "won": [55, 58, 176, 204, 402, 416, 442, 456, 499], "deleg": [55, 218], "oldroot": 55, "By": [55, 78, 214, 240, 285, 333, 342, 412, 419, 463, 494, 499, 507, 511], "thought": [55, 203, 456, 502], "benefici": [55, 66, 451, 454, 484], "person": 55, "consequ": [55, 151, 152, 163, 308, 344, 452], "infer": [55, 100, 101, 288, 380, 419, 507, 509], "mirror": [55, 212, 494], "tableresult": 55, "perturb": [56, 78, 104, 240, 252, 288, 310, 311, 322, 331, 484, 497], "combin": [56, 104, 134, 155, 173, 200, 311, 317, 318, 333, 334, 335, 342, 366, 400, 408, 490, 494, 497, 503, 507], "modifierset": [56, 497], "pop": [56, 335, 341, 377, 456, 471], "degre": [56, 80, 81, 95, 96, 99, 104, 113, 216, 220, 223, 285, 288, 311, 318, 331, 340, 401, 410, 412, 442, 497, 502, 503, 505, 507, 513], "freedom": [56, 497], "sweepbuild": 56, "exact": [56, 153, 182, 212, 245, 285, 299, 306, 308, 311, 331, 340, 357, 413, 449, 507], "callabl": [56, 77, 283, 284, 311, 331, 346, 347, 375, 377], "signatur": [56, 166, 219, 455, 486], "amount": [56, 223, 318, 324, 346, 455, 483, 492, 503, 505, 507], "inputmodifierset": 56, "namingfunc": 56, "meaning": [56, 283, 308, 347, 376, 377, 401, 442, 484, 494], "0000": [56, 163, 497], "four": [56, 311, 337, 456, 489, 507], "digit": [56, 87, 141, 152, 167, 240, 331, 400, 412, 484], "deem": [56, 204, 240, 449], "__init__": [56, 119, 151, 204, 206, 212, 283, 293, 295, 305, 308, 337, 339, 340, 341, 343, 344, 346, 347, 376, 386, 451, 455, 494], "newset": [56, 369], "builder": [56, 59, 283, 446, 487, 497, 507, 513], "somecas": 56, "settingname1": 56, "settingname2": 56, "noisefract": 56, "nois": 56, "avoid": [56, 78, 219, 237, 240, 241, 317, 330, 355, 413, 416, 450, 452, 486, 487, 499, 507, 510], "statist": [56, 497], "postprocessor": 56, "caution": [56, 285], "ongo": [56, 62, 322, 484], "research": [56, 116, 494], "isol": [56, 497], "settignnam": 56, "latin": [56, 487], "hypercub": [56, 487], "lh": 56, "evenli": [56, 311, 452, 507], "fewer": [56, 331, 448], "randomli": 56, "nonoverlap": 56, "partit": 56, "recommend": [56, 78, 212, 241, 288, 317, 336, 337, 340, 343, 344, 405, 451, 453, 484, 485, 494, 498, 503, 507, 513, 514], "surrog": [56, 290], "unlik": [56, 259, 337, 341, 347, 451], "modfier": 56, "inputparametermodifi": 56, "pararmtyp": 56, "test_summarizedesign": [57, 58], "test_independentvari": [57, 58], "test_setuptaskdepend": [57, 58], "test_getcoveragercfil": [57, 58], "test_startcoverag": [57, 58], "test_endcoverag": [57, 58], "test_startprofil": [57, 58], "test_endprofil": [57, 58], "test_run": [57, 58, 73, 75], "test_clon": [57, 58], "test_checkinput": [57, 58], "test_dependencieswithobscurepath": [57, 58], "test_dependencyfromdbnam": [57, 58], "test_dependencyfromexplictrepeatshuffl": [57, 58], "test_explicitdepend": [57, 58], "test_titlesettergett": [57, 58], "test_comparenodiff": [57, 58], "test_writeinput": [57, 58], "test_copyinputshelp": [57, 58], "test_copyinterfaceinputs_singlefil": [57, 58], "test_copyinterfaceinputs_nonfilepath": [57, 58], "test_failonduplicateset": [57, 58], "test_copyinterfaceinputs_multiplefil": [57, 58], "test_copyinterfaceinputs_wildcardfil": [57, 58], "test_copyinterfaceinputs_relpath": [57, 58], "test_copyinterfaceinputs_abspath": [57, 58], "test_initi": [57, 59], "test_buildsuit": [57, 59], "test_adddegreeoffreedom": [57, 59], "assert": [58, 125, 211, 224, 254, 324, 363, 377, 436, 455], "bonu": [58, 493, 503], "damag": [58, 154, 213], "escap": 58, "charact": [58, 152, 155, 166, 241, 288, 290, 419, 442, 455, 456, 486, 489, 502, 507, 513], "reveal": [58, 226], "vehicl": 58, "lhc": 59, "event": [60, 223, 245, 471, 478, 479, 487, 492, 507, 509], "submitsuit": 60, "prog": 60, "epilog": 60, "formatter_class": 60, "argpars": [60, 66, 447], "helpformatt": 60, "prefix_char": 60, "fromfile_prefix_char": 60, "argument_default": 60, "conflict_handl": 60, "add_help": 60, "allow_abbrev": 60, "exit_on_error": 60, "argumentpars": [60, 66], "exit": [60, 66, 77, 346, 405, 494, 507], "test_runentrypoint": [60, 73], "buildtestdb": [60, 73, 74], "testinitializationentrypoint": [60, 73, 74], "testcheckinputentrypoint": [60, 73, 74], "testclonearmiruncommandbatch": [60, 73, 74], "testclonesuitecommand": [60, 73, 74], "testcomparecas": [60, 73, 74], "testcomparesuit": [60, 73, 74], "testexpandblueprint": [60, 73, 74], "testextractinput": [60, 73, 74], "testinjectinput": [60, 73, 74], "testmigrateinput": [60, 73, 74], "testmodifycasesettingscommand": [60, 73, 74], "testreportsentrypoint": [60, 73, 74], "testcompareisotxslibsentrypoint": [60, 73, 74], "testrunentrypoint": [60, 73, 74], "testrunsuitecommand": [60, 73, 74], "testvisfileentrypointcommand": [60, 73, 74], "test_runsuit": [60, 73], "testrunsuitesuit": [60, 73, 75], "parse_arg": [60, 65, 66], "createoptionfromset": [60, 66, 447], "report_out_dir": [60, 70], "totwotupl": [60, 70], "heavi": [61, 101, 153, 155, 288, 311, 331, 355, 404, 416, 418, 483, 496, 503, 504, 505, 507], "needlessli": [61, 66, 502], "clutter": [61, 66], "inconsist": [61, 78, 241, 331, 341, 347], "occasion": [62, 283, 408], "break": [62, 77, 94, 155, 204, 288, 311, 344, 347, 395, 411, 419, 448, 452, 454, 455, 456, 484], "comparison": [64, 311, 331, 334, 356, 383, 483, 487], "handi": [65, 456, 484, 509], "facilit": [65, 334, 352, 484, 486, 507], "overwrit": [65, 175, 311, 318, 369, 400, 446, 454, 507], "inject": [65, 292, 294, 396, 399], "overrid": [66, 151, 219, 283, 292, 294, 367, 375, 396, 400, 419, 449, 452, 507, 513], "add_argu": [66, 447], "sub": [66, 151, 166, 204, 214, 288, 348, 452, 484, 506, 507], "exitcod": 66, "success": [66, 78, 204, 241, 374, 415, 513], "additionalalia": 66, "suppresshelp": 66, "additionalalis": 66, "care": [66, 200, 204, 238, 288, 294, 311, 331, 348, 415, 442, 448, 454, 455, 456, 484, 507, 509, 513], "distinct": [66, 347, 454, 499], "supresshelp": 66, "suppress": [66, 368], "messag": [66, 78, 283, 301, 345, 367, 376, 384, 403, 442, 448, 450, 452, 483, 486, 507, 509], "almost": [66, 166, 175, 311, 333, 430, 456, 484], "unus": [66, 220, 256, 257, 350, 455, 486, 487, 489, 490, 507], "booldefault": 66, "ep": [66, 211, 319, 383], "editor": [67, 401, 485, 486, 498, 507, 513, 514], "spin": [67, 162, 247], "latest": [68, 144, 159, 165, 240, 288, 311, 446, 503], "keyword": [69, 283, 331, 400, 413, 419, 450], "reportsoutputfil": [70, 454, 501], "strinput": 70, "integ": [70, 165, 166, 219, 220, 240, 285, 288, 311, 324, 333, 347, 397, 401, 408, 412, 416, 419, 437, 449, 490, 503, 505, 509, 512], "web": [70, 86, 90, 93, 99, 113, 136, 165, 171, 175, 176, 446, 452], "mpirun": [72, 394], "mpiexec": [72, 77, 393, 426, 452], "test_entrypointiniti": [73, 74], "test_checkinputentrypointbas": [73, 74], "test_checkinputentrypointinvok": [73, 74], "test_clonearmiruncommandbatchbas": [73, 74], "test_clonearmiruncommandbatchinvokeshort": [73, 74], "test_clonearmiruncommandbatchinvokemedium": [73, 74], "test_clonesuitecommandbas": [73, 74], "test_comparecasesbas": [73, 74], "test_comparesuitesbas": [73, 74], "test_expandblueprintsbas": [73, 74], "test_extractinputsbas": [73, 74], "test_injectinputsbas": [73, 74], "test_injectinputsinvokeignor": [73, 74], "test_injectinputsinvokenodata": [73, 74], "test_migrateinputsbas": [73, 74], "test_modifycasesettingscommandbas": [73, 74], "test_modifycasesettingscommandinvok": [73, 74], "test_totwotupl": [73, 74], "test_cleanarg": [73, 74], "test_reportsentrypointbas": [73, 74], "test_compareisotxslibsbas": [73, 74], "test_runentrypointbas": [73, 74], "test_runcommandhelp": [73, 74], "test_executecommand": [73, 74], "test_runsuitecommandbas": [73, 74], "test_visfileentrypointbas": [73, 74], "test_listcommand": [73, 75], "test_showvers": [73, 75], "numnod": 74, "numcycl": 74, "fiction": 74, "mockexecmd": 75, "pytest": [76, 393, 395, 426, 448, 455, 484, 486], "act": [76, 201, 217, 285, 311, 331, 343, 346, 369, 411, 454, 492], "shop": 76, "submodul": [76, 445, 446], "larger": [76, 412, 456, 498, 499, 507], "project": [76, 165, 310, 447, 448, 451, 456, 473, 474, 484, 485, 494, 514], "session": [76, 204, 416, 486, 499], "termin": [77, 151, 411, 485, 493, 514], "forc": [77, 155, 256, 285, 315, 317, 331, 347, 369, 394, 412, 425, 449, 456, 487, 492, 507], "fast_path": [77, 204, 486], "drive": [77, 214, 305, 316, 393, 415, 455, 463, 498, 507], "obliter": 77, "danger": 77, "olderthandai": 77, "sigbreak": 77, "cancel": [77, 376, 510], "atexit": 77, "notabl": [77, 509], "taskcancelgraceperiod": 77, "sigterm": 77, "sigint": 77, "older": [77, 94, 152, 486, 507], "unrel": [77, 456], "dai": [77, 165, 204, 211, 283, 285, 348, 400, 412, 441, 454, 483, 484, 492, 498, 502, 503, 504, 505, 507, 509, 512], "earlier": [77, 283, 346], "concurr": 77, "forcibli": 77, "disconnect": 77, "hack": [77, 375, 502], "gracefulli": [77, 311], "destroi": [77, 503], "caus": [77, 173, 201, 301, 308, 311, 317, 330, 331, 348, 377, 406, 448, 455, 485, 487, 503, 514], "why": [77, 184, 285, 288, 442, 451, 499], "never": [77, 163, 212, 238, 256, 288, 293, 294, 305, 340, 419, 452, 454, 455, 507], "appear": [77, 89, 220, 283, 366, 368, 375, 416, 434, 442, 492], "repr": 77, "ing": 77, "manual": [77, 155, 157, 159, 175, 190, 199, 200, 204, 211, 245, 294, 312, 324, 331, 333, 366, 484, 492, 496, 507], "learn": [78, 472, 473, 474, 484, 506], "architectur": [78, 204, 283, 450, 484, 494], "createinterfac": [78, 203, 204, 208, 449], "globalflux": [78, 204, 212, 238, 374, 510], "globalfluxinterfac": [78, 238, 251, 254, 487, 490, 510], "maxit": 78, "interactallcoupl": [78, 203, 204], "maximum": [78, 104, 152, 219, 223, 226, 241, 288, 305, 311, 331, 333, 400, 412, 416, 419, 489, 502, 503, 505, 507, 513], "val": [78, 104, 166, 197, 247, 288, 305, 308, 310, 311, 330, 331, 375, 400, 412, 416, 417, 435, 452, 492], "_supported_typ": 78, "commonli": [78, 104, 162, 252, 383, 401, 415, 447, 507], "equal": [78, 151, 159, 165, 167, 169, 171, 173, 176, 201, 204, 219, 223, 256, 288, 305, 307, 311, 319, 341, 355, 361, 375, 383, 400, 401, 412, 416, 417, 452, 472, 480, 498, 507, 511, 513], "typeerror": [78, 340, 375, 380, 444], "met": [78, 288, 510, 513], "recent": [78, 175, 484, 502], "critera": [78, 311], "On": [78, 165, 171, 311, 451, 484, 485, 495, 497, 514], "condit": [78, 151, 155, 163, 214, 228, 238, 252, 256, 283, 285, 288, 334, 337, 339, 362, 364, 377, 406, 411, 483, 484, 490, 497, 498, 499, 507, 513], "stale": [78, 252, 347, 487], "increment": [78, 282, 285, 288, 401, 410, 412, 507], "clear": [78, 104, 155, 164, 200, 240, 259, 285, 288, 308, 311, 318, 329, 330, 347, 356, 446, 455, 487, 498], "2d": [78, 82, 88, 103, 104, 136, 199, 241, 306, 310, 311, 340, 341, 342, 390, 412, 419, 437, 449, 487], "3d": [78, 81, 82, 83, 88, 89, 90, 92, 93, 95, 96, 97, 99, 103, 104, 105, 111, 112, 116, 140, 142, 299, 308, 310, 341, 356, 390, 473, 474, 494], "norm": [78, 492, 494, 510], "listtocheck": 78, "dim": [78, 288, 315, 470, 499], "eponym": 78, "categori": [78, 211, 228, 252, 256, 284, 331, 333, 344, 347, 390, 456, 471, 478, 479, 487, 490, 492, 509], "driver": [78, 241, 284, 311, 317, 325, 333, 452, 507], "neutronsperfiss": 78, "torestor": 78, "restor": [78, 104, 308, 311, 339, 342, 346, 347, 355, 363, 367], "distributest": [78, 151, 393], "quiet": [78, 104, 311], "callback": 78, "pickl": [78, 285, 311, 339, 346, 392, 400], "detach": [78, 203, 204, 341], "deepcopi": [78, 104, 247, 285, 288, 289, 487], "immedi": [78, 311, 317, 331, 340, 342, 344, 348, 484], "occur": [78, 104, 151, 153, 155, 157, 163, 204, 218, 219, 220, 283, 294, 324, 325, 331, 344, 376, 419, 442, 449, 455, 496, 502, 503, 504, 505, 507], "subcycl": [78, 204], "repeatedli": 78, "peripher": [78, 204, 220, 240], "cr": [78, 87, 153, 208, 252, 294, 301, 492, 497, 498, 507], "worth": [78, 165, 208, 219, 252, 382, 442, 454, 455, 456, 484, 505], "theori": [78, 167, 311], "_cmd": 78, "incom": [78, 175, 190, 219], "statu": [78, 314, 316, 344, 376, 446, 485, 507, 514], "statement": [78, 205, 252, 311, 324, 342, 345, 376, 377, 405, 442, 450, 452, 456], "wrong": [78, 288, 301, 303, 311, 451], "innam": [78, 252], "outnam": [78, 252], "interpol": [78, 115, 116, 285, 412], "anywher": [78, 494, 507], "failur": [78, 311, 317, 395, 451, 507], "advent": 78, "perhap": [78, 283, 341, 344, 484, 507, 509], "externalcodeinterfac": [78, 252, 257], "eci": [78, 260], "anyth": [78, 163, 166, 214, 219, 252, 267, 288, 305, 308, 311, 331, 346, 377, 419, 448, 449, 456, 484, 494, 497, 507], "involv": [78, 204, 214, 331, 356, 484, 507, 510], "packag": [78, 201, 204, 206, 283, 311, 342, 347, 408, 419, 442, 445, 449, 450, 451, 455, 484, 485, 492, 493, 494, 509, 514], "klass": [78, 346], "addinterfac": [78, 203, 204], "ultim": [78, 219, 283, 284, 324, 331, 333, 348, 492, 497, 498, 510], "field": [78, 137, 311, 315, 324, 342, 344, 375, 400, 408, 419, 437, 498, 507], "scope": [79, 245, 312, 314, 383, 451, 484, 487, 492, 494, 497, 499, 507], "thermo": [79, 308, 449, 507], "heat": [79, 80, 92, 95, 96, 99, 100, 101, 104, 112, 120, 136, 137, 212, 278, 335, 355, 484, 494, 495, 499, 502, 503, 507], "capac": [79, 80, 92, 95, 96, 99, 100, 101, 104, 112, 136, 137, 204, 494, 495, 498, 507], "linear": [79, 81, 82, 83, 87, 93, 95, 96, 99, 104, 105, 111, 112, 116, 125, 131, 132, 133, 135, 136, 137, 140, 141, 142, 285, 288, 308, 324, 330, 412, 487, 492, 495, 497, 498, 503, 511], "viscos": [79, 101], "nuclear": [79, 83, 85, 86, 90, 104, 137, 152, 153, 155, 162, 163, 164, 165, 176, 184, 195, 212, 215, 237, 238, 245, 311, 351, 401, 449, 483, 489, 492, 494, 496, 499, 505, 507], "alon": [79, 240, 308, 311, 470], "thermal": [79, 80, 81, 82, 83, 89, 90, 92, 93, 95, 96, 97, 99, 101, 104, 105, 108, 111, 112, 113, 116, 131, 133, 136, 137, 139, 140, 142, 160, 162, 228, 237, 275, 277, 278, 279, 281, 305, 308, 311, 314, 315, 316, 317, 324, 325, 328, 331, 347, 355, 356, 448, 467, 481, 482, 484, 486, 487, 492, 493, 495, 498, 500, 503, 505, 506, 507, 508], "scatter": [79, 83, 90, 104, 112, 137, 139, 151, 160, 162, 167, 173, 182, 197, 199, 200, 201, 202, 261, 467, 469, 473, 474, 481, 482, 486, 496, 499, 500, 503, 507], "law": [79, 160, 162, 448, 484, 498], "macroscop": [79, 167, 197, 200, 201, 261, 270, 487, 499, 507], "highli": [79, 218, 241, 453, 471, 485, 498, 514], "team": [79, 419, 437, 448, 456, 484, 494, 513], "updatesourc": 79, "dev": [79, 397, 484, 485, 514], "resolut": [79, 344, 377, 486], "formal": [79, 333, 346, 486, 491, 494], "registri": [79, 283, 284], "data_sourc": [79, 104], "sai": [79, 198, 200, 283, 333, 367, 368, 377, 410, 448, 452, 454, 456, 484, 498, 507, 513], "namespaceord": 79, "latter": [79, 299], "conf_material_namespace_ord": 79, "kentucki": 79, "transport": [79, 80, 113, 170, 175, 212, 238, 252, 261, 285, 330, 484, 487, 498, 503], "cabinet": 79, "colon": [79, 494], "classnam": [79, 507], "prefer": [79, 144, 163, 283, 285, 311, 316, 331, 342, 375, 402, 419, 450, 456, 490, 494, 507], "material_namespace_ord": 79, "modulepath": [79, 415], "matcl": [79, 477], "els": [79, 166, 167, 219, 256, 285, 288, 311, 331, 334, 377, 400, 416, 419, 452, 480, 492, 494, 497, 507], "test__init__": [79, 118], "bettersubclasscheck": [79, 118, 119], "materials__init__test": [79, 118, 119], "test_air": [79, 118], "test_b4c": [79, 118], "b4c_testcas": [79, 118, 121], "test_be9": [79, 118], "test_graphit": [79, 118], "graphite_testcas": [79, 118, 123], "test_lithium": [79, 118], "lithium_testcas": [79, 118, 124], "test_materi": [79, 118, 424], "materialconstructiontest": [79, 118, 125], "materialfindingtest": [79, 118, 125, 424], "californium_testcas": [79, 118, 125], "cesium_testcas": [79, 118, 125], "magnesium_testcas": [79, 118, 125], "magnesiumoxide_testcas": [79, 118, 125], "molybdenum_testcas": [79, 118, 125], "mox_testcas": [79, 118, 125], "nacl_testcas": [79, 118, 125], "niobiumzirconium_testcas": [79, 118, 125], "potassium_testcas": [79, 118, 125], "scandiumoxide_testcas": [79, 118, 125], "sodium_testcas": [79, 118, 125], "tantalum_testcas": [79, 118, 125], "thoriumuraniummetal_testcas": [79, 118, 125], "uranium_testcas": [79, 118, 125], "uraniumoxide_testcas": [79, 118, 125], "thorium_testcas": [79, 118, 125], "thoriumoxide_testcas": [79, 118, 125, 128], "void_testcas": [79, 118, 125], "mixture_testcas": [79, 118, 125], "lead_testcas": [79, 118, 125], "leadbismuth_testcas": [79, 118, 125], "copper_testcas": [79, 118, 125], "sulfur_testcas": [79, 118, 125, 127], "zr_testcas": [79, 118, 125], "inconel_testcas": [79, 118, 125], "inconel600_testcas": [79, 118, 125], "inconel625_testcas": [79, 118, 125], "inconelx750_testcas": [79, 118, 125], "alloy200_testcas": [79, 118, 125], "cah2_testcas": [79, 118, 125], "hafnium_testcas": [79, 118, 125], "hastelloyn_testcas": [79, 118, 125], "tzm_testcas": [79, 118, 125], "yttriumoxide_testcas": [79, 118, 125], "zincoxide_testcas": [79, 118, 125], "fuelmaterial_testcas": [79, 118, 125], "test_sic": [79, 118], "test_sulfur": [79, 118], "test_thoriumoxid": [79, 118], "test_uzr": [79, 118], "uzr_testcas": [79, 118, 129], "test_wat": [79, 118], "propertyvalidtemperatur": [79, 80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142], "setdefaultmassfrac": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142], "pseudodens": [79, 80, 82, 88, 89, 100, 101, 102, 103, 104, 110, 112, 113, 115, 134, 136, 138, 139, 420, 424, 487], "specificvolumeliquid": [79, 80, 113], "thermalconduct": [79, 80, 92, 93, 95, 96, 99, 101, 102, 104, 112, 113, 131, 132, 133, 136, 137, 142, 508], "heatcapac": [79, 80, 92, 95, 96, 99, 100, 101, 102, 104, 112, 136, 137, 494, 495], "modelconst": [79, 81, 104], "referencemaxpercentimpurit": [79, 81], "linearexpansiontablek": [79, 81, 142], "linearexpansiont": [79, 81, 142], "linearexpans": [79, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 131, 132, 133, 136, 137, 140, 142], "enrichednuclid": [79, 82, 89, 102, 104, 108, 131, 134, 135, 136, 137, 308], "applyinputparam": [79, 82, 102, 104, 108, 115, 131, 133, 134, 135, 136, 137], "updatetd": [79, 82, 115], "setnewmassfracsfrommassenrich": [79, 82], "getmassenrichmentfromnumenrich": [79, 82], "linearexpansionperc": [79, 82, 83, 87, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 116, 133, 135, 136, 137, 140, 141, 142, 323, 324, 511], "thermalscatteringlaw": [79, 83, 90, 104, 112, 137, 139], "meltingpoint": [79, 88, 102, 108, 112, 131, 132, 133, 136, 137], "setmassfrac": [79, 89, 104, 284, 311], "materialintro": [79, 92, 136], "reftempk": [79, 92, 95, 96, 97, 99, 104, 112, 142], "meancoefficientthermalexpans": [79, 92, 97], "polyfitthermalconduct": [79, 95, 96, 99], "polyfitheatcapac": [79, 95, 96, 99], "polyfitlinearexpansionperc": [79, 95, 96, 99], "volumetricexpans": [79, 100, 101, 104, 115], "dynamicvisc": [79, 101], "boilingpoint": [79, 102], "getchildren": [79, 104, 284, 311, 353, 357, 492], "getchildrenwithflag": [79, 104, 284, 311, 353, 357, 513], "backup": [79, 104, 284, 305, 308, 311, 335, 339, 342, 344, 346, 347], "restorebackup": [79, 104, 284, 305, 308, 311, 335, 339, 342, 344, 346, 347], "clearcach": [79, 104, 284, 305, 308, 311], "linearexpansionfactor": [79, 104, 495, 511], "getthermalexpansiondensityreduct": [79, 104], "adjustmassenrich": [79, 104, 284, 305, 308, 311], "adjustmassfrac": [79, 104, 284, 311], "gettemperatureatdens": [79, 104], "liquidporos": [79, 104, 305, 308, 503], "gasporos": [79, 104, 305, 308, 503], "pseudodensitykgm3": [79, 104], "densitykgm3": [79, 104], "getcorrosionr": [79, 104], "yieldstrength": [79, 104], "getproperti": [79, 104, 305, 308, 494, 508], "getmassfrac": [79, 104, 244, 247, 284, 311], "clearmassfrac": [79, 104], "removenucmassfrac": [79, 104], "checkpropertytemprang": [79, 104], "checktemprang": [79, 104], "densitytimesheatcapac": [79, 104, 487], "gettempchangefordensitychang": [79, 104], "gettd": [79, 104], "adjusttd": [79, 104], "class1_wt_frac": [79, 104, 404, 507], "class1_custom_isotop": [79, 104, 507], "class2_custom_isotop": [79, 104, 507], "pufrac": [79, 104, 355, 487, 503, 504], "ufrac": [79, 104], "zrfrac": [79, 104, 504], "getmassfracpuo2": [79, 108], "setmassfracpuo2": [79, 108], "getmolfracpuo2": [79, 108], "propertyequ": [79, 112, 136], "propertyunit": [79, 112, 136, 137], "propertynot": [79, 112, 136], "cumulativelinearexpans": [79, 112], "enthalpi": [79, 113, 139], "temperaturec": [79, 116], "percentthermalexpans": [79, 116], "getenrich": [79, 131, 305, 308, 486], "zrfracdefault": [79, 135], "ufracdefault": [79, 135], "propertyrawdata": [79, 136], "refden": [79, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 136, 140, 142, 492], "ea": [79, 137], "c1": [79, 137], "c2": [79, 137], "c3": [79, 137], "reference_temperatur": [79, 137], "thermalconductivitytablek": [79, 137], "thermalconductivityt": [79, 137], "temperature_critical_k": [79, 139], "density_critical_kgpercubicmet": [79, 139], "density_critical_gpercubiccentimet": [79, 139], "vapor_pressure_critical_mpa": [79, 139], "vapor_pressure_critical_pa": [79, 139], "alpha_0": [79, 139], "phi_0": [79, 139], "tau": [79, 139], "vaporpressur": [79, 139], "vaporpressureprim": [79, 139], "auxiliaryquantityspecificenthalpi": [79, 139], "auxiliaryquantityspecificentropi": [79, 139], "entropi": [79, 139], "Near": 80, "sea": 80, "correl": [80, 95, 96, 99, 139, 213, 237, 444], "incropera": [80, 120], "frank": [80, 120], "et": [80, 92, 108, 120, 137, 484], "al": [80, 92, 108, 120, 137, 146, 153, 301, 484, 499, 507], "mass": [80, 81, 82, 83, 84, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 111, 112, 113, 115, 116, 120, 125, 133, 134, 135, 137, 140, 142, 152, 153, 154, 155, 212, 215, 219, 237, 247, 266, 285, 288, 294, 301, 305, 308, 311, 312, 314, 315, 318, 324, 326, 328, 329, 330, 331, 347, 355, 356, 357, 404, 424, 463, 464, 468, 477, 483, 486, 487, 489, 492, 494, 495, 496, 502, 503, 504, 505, 507, 512], "transfer": [80, 120, 212, 278, 288, 330, 351, 452, 503, 509], "vol": [80, 110, 112, 120, 142, 237, 305, 468, 492, 494], "york": [80, 110, 120, 142], "wilei": [80, 120], "2002": [80, 120], "pnnl": [80, 120], "15870": [80, 120], "rev": [80, 120], "www": [80, 81, 83, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 113, 130, 133, 139, 184, 347, 484, 498], "gov": [80, 86, 90, 93, 108, 113, 137, 152, 162, 173, 175, 184], "technical_report": 80, "15870rev1": 80, "1300": [80, 92, 101], "2400": [80, 136, 137], "conduct": [80, 92, 93, 95, 96, 99, 101, 104, 108, 112, 113, 131, 133, 136, 137, 142, 237, 449, 492, 495, 507, 508], "200": [80, 81, 125, 361, 412, 497], "850": 80, "temperature_lower_limit": [80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142], "temperature_upper_limit": [80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142], "temperature_unit": [80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142], "mcconn": 80, "ronald": 80, "j": [80, 92, 93, 95, 96, 99, 100, 101, 103, 104, 110, 112, 113, 135, 136, 137, 139, 167, 175, 177, 178, 182, 200, 237, 293, 311, 331, 335, 337, 339, 340, 341, 342, 343, 361, 401, 449, 472, 473, 474, 484, 486, 494, 495, 510], "compendium": 80, "radiat": [80, 86, 212, 484], "pacif": 80, "northwest": 80, "nation": [80, 92, 108, 137, 154, 165, 175, 483, 484], "lab": [80, 154, 484], "richland": 80, "2011": [80, 92, 165], "tk": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 324, 424, 444, 494, 495], "tc": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 305, 306, 307, 308, 310, 311, 324, 357, 424, 444, 494, 495, 508], "cc": [80, 84, 100, 101, 102, 104, 110, 113, 134, 136, 137, 139, 165, 308, 311, 404, 495, 503, 509], "dewitt": 80, "kelvin": [80, 81, 95, 96, 99, 104, 113, 139, 308, 444], "celsiu": [80, 81, 95, 96, 99, 104, 113, 308, 444], "liquid": [80, 88, 102, 103, 104, 113, 115, 139, 152, 153, 162, 308, 498, 503], "kg": [80, 92, 95, 96, 99, 100, 101, 104, 112, 113, 129, 136, 137, 139, 494, 495, 502, 503, 504, 512], "alloi": [81, 92, 94, 96, 97, 98, 109, 125, 134, 135, 487], "wrought": 81, "commerci": [81, 483, 484], "nickel": [81, 92, 94, 153], "201": [81, 361, 492], "sheet": [81, 116], "jacquet": 81, "biz": 81, "usa": 81, "jcqusa": 81, "citat": [81, 94, 95, 96, 98, 99, 102, 104, 112, 116, 136, 137, 139, 142], "literatur": [81, 94, 95, 96, 98, 99, 102, 104, 108, 112, 116, 136, 137, 139, 142, 495], "trefa": 81, "20": [81, 84, 92, 95, 97, 153, 163, 167, 266, 308, 337, 356, 361, 411, 456, 470, 478, 492, 497, 498, 499, 507, 513], "a0": 81, "2162e": 81, "3001e": 81, "09": [81, 357, 419, 449, 470, 486, 487, 492, 496, 507], "94985e": 81, "intepol": [81, 104], "lookup": [81, 104, 154, 245, 269, 283, 285, 330, 331, 347, 359, 366, 410], "73": [81, 136, 153, 361, 419], "15": [81, 92, 95, 96, 97, 99, 105, 108, 111, 112, 133, 137, 140, 142, 153, 211, 220, 288, 337, 361, 404, 441, 456, 462, 470, 480, 486, 492, 498, 507], "1273": [81, 105], "mn": [81, 146, 153, 301, 492, 497, 507], "35": [81, 82, 153, 361], "si": [81, 112, 153, 301, 492, 497, 507], "25": [81, 82, 153, 155, 285, 293, 300, 301, 324, 340, 356, 357, 361, 416, 456, 474, 486, 492, 495, 497, 498, 507], "fe": [81, 152, 153, 154, 155, 294, 301, 470, 475, 492, 497, 507], "173": [81, 361], "373": [81, 92], "573": 81, "673": 81, "773": 81, "873": 81, "973": [81, 92], "1073": 81, "1173": [81, 92, 136, 487], "01e": 81, "13e": [81, 142], "33e": [81, 112], "39e": 81, "43e": 81, "48e": 81, "52e": [81, 499], "56e": 81, "58e": 81, "62e": 81, "65e": [81, 499], "67e": 81, "instantan": [81, 95, 96, 99, 104, 483], "half": [81, 159, 163, 174, 219, 318, 342, 354, 355, 496, 505, 507], "impur": [81, 484], "rest": [81, 183, 285, 290, 333, 392, 449, 456, 470, 498, 499, 507, 509], "ni": [81, 153, 301, 311, 492, 497, 507], "cm": [81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 153, 177, 178, 197, 200, 219, 237, 247, 252, 285, 288, 293, 305, 306, 307, 308, 310, 311, 315, 330, 331, 335, 336, 337, 339, 340, 341, 342, 344, 364, 404, 454, 455, 472, 473, 492, 495, 497, 498, 499, 502, 503, 504, 505, 507, 508], "dep": [81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142], "percent": [81, 82, 83, 84, 87, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 133, 134, 136, 137, 140, 141, 142, 200, 315, 324, 331, 468, 483, 484, 487, 492, 497, 503, 505, 507], "dp": [81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 139, 140, 142, 153], "dl": [81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 137, 140, 142], "l": [81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 113, 116, 136, 137, 140, 142, 167, 307, 324, 400, 416, 470, 477, 495, 511], "boron": [82, 121, 153, 288, 308, 311, 496], "carbid": [82, 112, 121], "difficulti": 82, "real": [82, 165, 175, 178, 203, 204, 238, 247, 252, 288, 308, 311, 330, 331, 339, 412, 416, 437, 447, 452, 463, 494, 497, 499, 507], "td_frac": [82, 104, 108, 115, 133, 136, 137, 301, 487, 507], "b10": [82, 294, 475, 492, 503], "enrich": [82, 89, 102, 104, 108, 131, 134, 135, 136, 137, 219, 285, 288, 308, 311, 331, 356, 404, 416, 484, 492, 498, 499, 503, 507], "500": [82, 142, 356, 357, 468, 487, 492, 495, 497, 498, 508], "b10_wt_frac": [82, 507], "theoretical_dens": [82, 507], "massenrich": [82, 104], "boron10massgram": 82, "boron11massgram": 82, "carbonmassgram": 82, "012": [82, 492], "009": [82, 492], "carbon": [82, 90, 153, 160, 162], "0107": 82, "mole": [82, 108, 133, 154, 288, 308, 311, 494, 503, 504], "gram": [82, 84, 108, 133, 154, 159, 288, 308, 311, 492, 507], "199": [82, 361], "969552": 82, "801": [82, 163], "272836": 82, "mi": [82, 477], "mb10": 82, "nb10": 82, "ab10": 82, "nb11": 82, "ab11": 82, "natur": [82, 100, 104, 137, 152, 153, 154, 155, 157, 245, 283, 294, 301, 311, 331, 337, 404, 448, 449, 469, 484, 486, 492, 495, 496, 497, 507], "19": [82, 108, 116, 136, 153, 301, 337, 361, 419, 487, 492], "80": [82, 99, 153, 361, 507], "811": 82, "96796": 82, "27604": 82, "55": [82, 108, 113, 153, 361], "2547": 82, "naturalb10numberfract": 82, "preliminari": 82, "beryllium": [83, 122, 153], "metal": [83, 87, 93, 97, 116, 131, 132, 134, 136, 142, 153, 155, 162, 237, 288, 311, 331, 355, 357, 404, 483, 492, 496, 498, 503, 504, 505, 507], "lot": [83, 85, 151, 152, 200, 204, 238, 247, 294, 311, 331, 382, 383, 417, 447, 448, 452, 455, 456, 484, 485, 492, 499, 507, 509, 514], "2n": [83, 163, 200, 476, 480], "reaction": [83, 163, 176, 188, 200, 201, 238, 252, 254, 311, 329, 330, 416, 467, 481, 482, 484, 486, 490, 500, 503], "inhal": 83, "hazard": 83, "compound": [83, 90, 112, 135, 137, 139, 162, 241, 374, 419], "Be": [83, 162, 311, 382, 415, 448, 456, 484, 486], "frozenset": [83, 90, 112, 137, 139], "BE": [83, 153], "012183e": 83, "00": [83, 139, 449, 465, 481, 496], "1560": 83, "ferp": 83, "ucsd": 83, "edu": [83, 167], "prop": 83, "pano": 83, "fusion": 83, "fedee": 83, "141": [83, 361], "234": [83, 442, 496], "1987": [83, 489], "calcium": [84, 153], "hydrid": 84, "calciumhydrid": 84, "atom": [84, 104, 108, 152, 153, 154, 155, 162, 165, 197, 200, 213, 241, 247, 266, 288, 308, 311, 317, 318, 330, 404, 483, 484, 492, 496, 502, 503, 504, 505, 507], "kaeri": 84, "kr": [84, 153, 416], "ton": 84, "iso": [84, 155, 507], "abund": [84, 152, 154, 155, 184, 469, 496], "ca": [84, 112, 153, 507], "40": [84, 87, 153, 155, 175, 361, 400, 456, 497], "96": [84, 153, 361, 499], "941": 84, "39": [84, 153, 361, 492, 495, 496, 497], "9625912": 84, "42": [84, 108, 153, 155, 361, 417, 419, 499], "647": [84, 130, 139], "41": [84, 153, 155, 361, 419], "9586183": 84, "43": [84, 87, 153, 361, 492], "135": [84, 139, 361], "9587668": 84, "44": [84, 116, 153, 361], "086": 84, "9554811": 84, "46": [84, 153, 237, 361, 507], "004": [84, 492, 507], "45": [84, 153, 361, 507], "9536928": 84, "48": [84, 153, 361, 478, 492], "187": [84, 361], "47": [84, 153, 361], "9525335": 84, "01565": 84, "09367285": 84, "920331558": 84, "006449241": 84, "001377745": 84, "02178264": 84, "3668e": 84, "002130278": 84, "047884869": 84, "en": [84, 85, 88, 443], "wikipedia": [84, 85, 88, 102, 443, 496], "wiki": [84, 85, 88, 443], "calcium_hydrid": 84, "synthet": 85, "spontan": [85, 155, 163, 487, 496, 503, 505], "equip": [86, 492], "shield": [86, 165, 200, 240, 284, 285, 317, 318, 331, 333, 492, 497, 503, 507], "concreat": 86, "archiv": [86, 99, 456, 485, 514], "20221103120449": 86, "nist": [86, 152, 154, 155], "cgi": [86, 152], "bin": [86, 152, 245, 318, 319, 336, 430, 485, 492, 514], "star": 86, "compo": 86, "pl": [86, 152], "matno": 86, "144": [86, 361], "788": 87, "83": [87, 153, 361], "engaug": 87, "21": [87, 95, 96, 99, 116, 136, 153, 337, 361, 417, 487, 492, 499], "thrust": 87, "chamber": [87, 499], "predict": [87, 228, 245, 498, 510], "rocket": 87, "nozzl": [87, 331, 502, 503, 507], "nasa": 87, "134806": 87, "cesium": [88, 153], "caesium": 88, "benchmark": [89, 364, 484, 498, 499, 507], "isotopicopt": [89, 245, 284, 289, 478], "customisotop": [89, 104, 284, 289, 294, 353, 357, 478, 507], "peopl": [89, 104, 456, 484, 485, 489, 507, 514], "overwritten": [89, 214, 247, 308, 310, 379, 382], "u235": [89, 104, 108, 134, 135, 136, 137, 152, 154, 155, 157, 173, 201, 241, 288, 301, 311, 404, 470, 475, 476, 492, 495, 496, 499, 507], "customloc": 89, "matter": [89, 142, 155, 204, 256, 266, 331, 333, 342, 408, 411, 455, 456, 494], "moder": [90, 219, 284, 331, 333, 484], "ga": [90, 104, 152, 153, 237, 240, 247, 250, 333, 484, 503, 507], "cool": [90, 451, 483, 484, 498, 499], "inl": [90, 92, 123], "16": [90, 116, 123, 153, 155, 220, 333, 334, 337, 347, 356, 357, 361, 383, 470, 477, 484, 486, 492, 496, 498, 499, 507], "38241": [90, 123], "mceligot": 90, "donald": 90, "swank": 90, "david": 90, "cottl": 90, "valentin": 90, "francisco": 90, "348": [90, 507], "2016": [90, 171], "doi": [90, 93, 105, 113, 135, 136, 165, 171, 175, 176, 484], "2172": [90, 93, 113, 136, 165, 171, 175, 176], "1330693": 90, "osti": [90, 93, 113, 165, 171, 176], "biblio": [90, 93, 113], "10p": 90, "201114e": [90, 112], "l0": [90, 93, 316, 324, 495], "captur": [91, 162, 163, 167, 200, 238, 240, 256, 288, 289, 317, 331, 384, 449, 480, 484, 489, 498, 503, 507], "lenntech": 91, "com": [91, 92, 94, 95, 96, 97, 98, 99, 306, 307, 347, 419, 437, 442, 443, 448, 455, 484, 485, 487, 514], "hf": [91, 153], "htm": 91, "hastelloi": [92, 486], "invent": 92, "ornl": [92, 108, 125, 137], "molten": [92, 110, 115, 484], "fluorid": 92, "salt": [92, 114, 212, 484], "un": [92, 97, 214, 503], "n10003": 92, "hayn": 92, "h": [92, 93, 135, 139, 153, 162, 171, 220, 237, 278, 330, 331, 333, 498, 499, 507], "2052d": 92, "2020": [92, 486, 499], "haynesintl": 92, "brochur": 92, "corros": [92, 104, 228, 483, 495, 503], "resist": 92, "sab": 92, "sabharwal": 92, "feasibl": 92, "secondari": [92, 204, 284, 333, 418, 484, 505], "exchang": [92, 165, 335, 483, 499, 507], "23076": 92, "oak": [92, 108, 137], "ridg": [92, 108, 137], "laboratori": [92, 108, 137, 165, 175, 483], "oxid": [92, 105, 108, 111, 133, 137, 140, 141, 495], "hot": [92, 97, 104, 116, 288, 305, 308, 315, 317, 324, 355, 356, 416, 487, 495, 498, 499, 503, 507, 508, 511], "704": 92, "871c": 92, "1600f": 92, "293": [92, 93, 136, 142], "polynomi": [92, 93, 95, 96, 97, 99, 105, 137], "sixth": 92, "97": [92, 113, 153, 361], "dll": [92, 97, 104, 308, 495], "academ": [93, 113, 135, 477, 494, 495], "incomplet": [93, 331, 495], "ferrit": 93, "martensit": 93, "stainless": 93, "steel": [93, 301, 498, 507], "famou": 93, "sfr": [93, 228, 484, 494, 498, 499], "swell": [93, 288, 495], "mfh": 93, "handbook": [93, 101, 110, 136, 142], "hofman": [93, 136], "billon": 93, "koenig": 93, "kramer": 93, "lambert": 93, "leibowitz": [93, 113], "orechwa": 93, "pedersen": 93, "porter": 93, "tsai": 93, "wright": 93, "2019": [93, 167, 484, 486, 490, 498], "1506477": 93, "1050": 93, "ref": [93, 112, 115, 137, 173, 240, 331, 383], "eq": [93, 135, 200], "sped": [93, 487], "austenit": 94, "chromium": [94, 153], "superalloi": 94, "specialmet": [94, 95, 96, 97, 98, 99], "technic": [94, 318, 331, 485, 514], "bulletin": 94, "617": [94, 487], "certainti": 94, "900": [95, 137, 142, 468, 470, 492, 507, 509], "800": [95, 97, 142, 468, 486], "20alloi": [95, 99], "20600": 95, "294": [95, 96, 97, 99, 137], "equat": [95, 96, 99, 114, 169, 237, 261, 330, 412, 444, 455, 480, 495, 511], "thermalcond": [95, 96, 99], "cte": [95, 96, 99], "strain": [95, 96, 99, 228, 483, 484, 503, 507], "linexpperc": [95, 96, 99], "2nd": [95, 96, 99, 471], "divid": [95, 96, 99, 288, 311, 366, 392, 411, 470, 483, 502, 503], "differenti": [95, 96, 99, 252, 310, 452], "722e": 95, "303e": 95, "linexp": [95, 96, 99], "221": [96, 496], "1093": [96, 99], "927": 96, "982": [96, 99], "asset": [96, 97, 98], "625": 96, "083e": 96, "125e": 96, "incoloi": [97, 486], "800h": 97, "n08800": 97, "n08810": 97, "sm": [97, 153, 245], "smc": 97, "pe16": 98, "nimon": 98, "x750": 99, "18": [99, 110, 153, 162, 337, 361, 492, 507], "156": [99, 361], "871": 99, "20x": 99, "750": 99, "20170215105917": 99, "8378e": 99, "056e": 99, "600": [100, 125, 131, 132, 137, 142, 297, 300, 301, 303, 344, 468, 470, 507, 508], "1700": [100, 489], "1500": [100, 112, 113, 137], "volumetr": [100, 101, 115, 330, 495, 503, 505], "ON": [100, 101], "measur": [100, 101, 123, 237, 283, 324, 342, 344, 402, 454, 483, 510], "sobolev": [100, 101], "nucl": [100, 101], "mat": [100, 101, 155, 292, 311, 356, 477], "362": [100, 101], "2007": [100, 101], "235": [100, 101, 108, 134, 152, 154, 155, 184, 245, 288, 311, 475, 476, 492, 499], "247": [100, 101], "bismuth": [101, 153], "eutect": 101, "coolant": [101, 104, 257, 284, 288, 305, 308, 311, 317, 325, 330, 331, 333, 355, 357, 416, 463, 468, 470, 478, 484, 492, 494, 495, 498, 502, 503, 505, 507], "superfast": 101, "400": [101, 142, 356, 468, 513], "visc": 101, "1100": [101, 142], "pa": [101, 139, 153, 502, 503, 505], "onlin": [101, 446], "oecd": 101, "nea": [101, 499], "scienc": [101, 163], "nea6195": 101, "ccapac": 101, "accuraci": [101, 412], "whenev": [102, 204, 238, 283, 347, 399, 451, 494], "irradi": [102, 108, 137, 154, 228, 237, 483, 495, 503, 505], "tritium": 102, "li6": [102, 496], "li_wt_frac": [102, 507], "li6_wt_frac": [102, 507], "180c": 102, "923": [103, 487], "1390": 103, "cm3": [103, 311, 404], "mcgonig": 103, "templ": 103, "univers": [103, 167, 252, 311, 401, 484], "1961": 103, "truth": [104, 324, 331], "incorpor": [104, 152, 283, 507], "concert": [104, 166, 484], "bulk": [104, 294, 331, 502, 503], "massfrac": [104, 247, 311, 404, 477, 495], "theoreticaldensityfrac": [104, 504], "realiti": [104, 483, 484, 507], "solid": [104, 133, 152, 153, 162, 228, 237, 288, 305, 306, 308, 314, 316, 324, 333, 356, 495, 496, 498, 503, 507], "due": [104, 108, 167, 169, 220, 228, 237, 241, 252, 254, 256, 283, 288, 308, 311, 314, 317, 325, 345, 355, 375, 454, 484, 487, 503, 505], "manufactur": 104, "programmat": [104, 214, 252, 292, 427, 467, 481, 482, 494, 500, 508], "getter": [104, 330, 331, 344, 362, 363, 369], "privat": [104, 175, 311, 393, 448, 455, 456, 484], "compat": [104, 175, 207, 219, 245, 285, 289, 308, 347, 408], "deep": [104, 311, 357, 507], "generationnum": [104, 311, 357], "includemateri": [104, 311, 357], "predic": [104, 155, 311, 331, 357], "typespec": [104, 219, 241, 285, 288, 308, 311, 317, 331, 333, 357], "exactmatch": [104, 311, 331, 357], "paramstoappli": [104, 308, 311, 346, 347], "previous": [104, 220, 311, 413, 486, 505, 507, 513], "dt": [104, 139, 494, 503], "t0": [104, 308], "methodologi": [104, 200, 237, 315, 484, 494, 511], "prevtempinc": 104, "newtempinc": 104, "temperatureinc": [104, 305, 308, 315, 316, 468, 504, 509], "temperatureincnew": 104, "nucnam": [104, 154, 155, 173, 197, 200, 201, 240, 247, 308, 311, 404, 416, 462, 470, 477], "thrown": [104, 299, 380], "nuclidenam": [104, 294, 308, 311], "massfract": [104, 308, 311], "u238": [104, 154, 155, 163, 241, 301, 470, 475, 492, 495, 496, 499, 507], "likewis": [104, 152], "accordingli": [104, 308, 342, 484, 507], "achiev": [104, 166, 204, 483, 505, 507], "targetdens": 104, "tempguessinc": 104, "celciu": [104, 139, 237, 308, 494], "agre": [104, 226, 311, 484, 498], "inputheightsconsideredhot": [104, 292, 315, 324, 356, 487, 507], "psuedodens": 104, "driven": [104, 241, 289, 497], "forward": [104, 178, 283, 367, 416], "rate": [104, 169, 200, 204, 252, 254, 288, 308, 311, 316, 329, 330, 347, 449, 467, 480, 481, 482, 486, 490, 494, 500, 502, 503, 504, 505, 507, 510], "micron": 104, "strength": 104, "mpa": 104, "propnam": 104, "expandfissionproduct": [104, 311], "pu239": [104, 108, 152, 155, 163, 201, 301, 311, 492, 499, 507], "sum": [104, 155, 163, 169, 197, 200, 202, 240, 247, 250, 288, 311, 355, 400, 416, 430, 452, 492, 497, 507], "frac": [104, 135, 200, 237, 240, 288, 308, 311, 317, 330, 410, 424, 477, 495, 498, 504, 507, 510, 511], "altern": [104, 163, 188, 201, 216, 219, 252, 317, 344, 408, 419, 449, 452, 487, 494, 497, 507, 513], "critic": [104, 139, 165, 241, 288, 306, 484, 502, 505, 507], "million": [104, 411], "nuc": [104, 154, 155, 173, 197, 247, 308, 311, 404, 496], "fall": [104, 228, 316, 448, 456, 484, 509], "min": [104, 224, 311, 342, 487, 505], "mint": 104, "maxt": 104, "convienc": 104, "rhocp": 104, "right": [104, 211, 214, 223, 252, 295, 298, 301, 311, 317, 318, 326, 339, 340, 341, 342, 380, 401, 410, 412, 414, 416, 419, 427, 439, 449, 480, 507, 510, 511, 513], "logic": [104, 162, 165, 172, 177, 204, 219, 224, 283, 289, 292, 294, 330, 331, 347, 376, 397, 399, 411, 456, 486, 487, 492, 507, 513], "downstream": [104, 285, 331, 382, 484, 487, 509], "embrac": 104, "deprec": [104, 154, 283, 295, 334, 352, 369, 488, 490, 507], "densityfrac": 104, "fill": [104, 138, 152, 155, 237, 288, 295, 305, 311, 318, 319, 331, 344, 351, 356, 400, 419, 470, 487, 494, 498, 499, 503, 507], "300": [104, 137, 495], "uniti": 104, "parameter": [104, 471, 507], "magnesiumoxid": 105, "273": [105, 111, 137, 140], "milo": 105, "durand": 105, "journal": [105, 135, 237], "297": 105, "1936": 105, "1063": 105, "174539": 105, "3rd": [105, 337, 339, 352, 502], "moli": 107, "ceram": [108, 133, 137], "thermophys": [108, 114, 137, 139, 142, 212], "popov": [108, 137], "tm": [108, 137, 153, 154], "351": [108, 137], "rsicc": [108, 137], "fmdp": [108, 137], "tm2000": [108, 137], "inherit": [108, 151, 155, 240, 305, 331, 348, 369, 455, 489, 494, 507], "leav": [108, 155, 220, 308, 311, 375, 449, 492, 499, 507], "unchang": [108, 308, 375, 487, 507], "u235_wt_frac": [108, 134, 135, 136, 137, 297, 498, 507], "mass_frac_pu02": 108, "massfracpuo2": 108, "puo2": 108, "pu238": [108, 301, 492, 499, 507], "238": [108, 134, 154, 245, 288, 475, 480, 496], "0495599": 108, "239": [108, 134, 154, 245, 480, 496], "0521634": [108, 154], "pu240": [108, 301, 492, 499, 507], "240": [108, 245, 496], "0538135": 108, "pu241": [108, 155, 301, 492, 499, 507], "241": [108, 245, 496], "0568515": 108, "pu242": [108, 169, 301, 492, 499, 507], "242": [108, 155, 496], "0587426": 108, "am241": [108, 154, 289, 301, 492, 499, 507], "0568291": 108, "0439299": [108, 152, 154], "0507882": [108, 154], "oxygen": [108, 133, 153, 294, 311, 404, 499, 507], "9994": [108, 133], "joyo": [108, 484], "pu": [108, 134, 135, 153, 245, 288, 311, 331, 355, 404, 503, 504], "76": [108, 153, 361], "82": [108, 153, 361, 495], "23": [108, 153, 261, 337, 355, 361, 442, 487, 492], "66": [108, 153, 361], "64": [108, 137, 153, 333, 347, 361, 408, 492, 499], "326469": 108, "22": [108, 112, 116, 139, 153, 337, 361, 419, 484, 485, 487, 492, 496, 507, 514], "99": [108, 125, 153, 202, 245, 361, 412, 507], "77": [108, 153, 166, 361], "237": [108, 496], "359511": 108, "upu": 108, "70766": 108, "31": [108, 133, 153, 361, 486], "9988": [108, 133], "269": 108, "70646": 108, "881357": 108, "177": [108, 361, 492, 494, 497, 498, 501, 513], "156000": 108, "823": 108, "725356": 108, "001": [108, 319, 331, 366, 412, 486, 492, 507, 513], "074256": 108, "000156": 108, "7682": 108, "119839": 108, "1923": 108, "029999": 108, "0266": 108, "004150": 108, "0055": 108, "000858": 108, "0064": 108, "000998": 108, "2299": 108, "195": [108, 361], "633404": 108, "166759": 108, "7701": 108, "558597": 108, "118643": 108, "melt": [108, 112, 131, 132, 133, 136, 137], "liquidu": [108, 495], "tl": [108, 153, 160], "solidu": [108, 495], "3120": [108, 137], "388": 108, "655": 108, "336": 108, "burnup": [108, 163, 174, 212, 219, 220, 223, 226, 227, 228, 240, 241, 245, 252, 256, 288, 311, 400, 412, 418, 471, 483, 487, 489, 490, 502, 503, 504, 505, 507, 513], "niobium": [109, 153], "zirconium": [109, 134, 142, 153, 154, 499, 507], "foust": 110, "nak": 110, "gordon": 110, "breach": 110, "1972": 110, "63": [110, 153, 361], "1250": 110, "scandium": [111, 153], "1573": [111, 140], "scandia": 111, "invers": [111, 140, 412], "rare": [111, 140, 162, 348, 369, 437], "earth": [111, 140, 419], "silicon": [112, 153], "808538e": 112, "cumul": [112, 211, 252, 315, 344, 347, 400, 419, 441, 487, 507, 513], "munro": 112, "phy": 112, "chem": 112, "26": [112, 152, 153, 155, 361, 499], "1997": 112, "51": [112, 153, 361], "math": [112, 167, 203, 410, 412, 430, 439, 443, 455, 464, 471, 472, 480, 487, 494, 513], "exp": 112, "00527": 112, "0e": [112, 470, 499, 510], "rho0": 112, "tc0": 112, "0e3": 112, "1110": 112, "425": 112, "003": [112, 331, 366, 492, 507], "52000": 112, "24e": 112, "437": 112, "298": [112, 133, 136, 137, 142], "bring": [113, 135, 283, 405, 425, 484, 494, 498, 507], "anl": [113, 136, 142, 154, 175, 343, 483, 484, 492, 494, 497, 498, 501, 513], "95": [113, 153, 155, 175, 361, 507], "fink": 113, "thermodynam": 113, "vapor": [113, 139], "1995": [113, 175, 237], "94649": 113, "gxndli": 113, "webview": 113, "85": [113, 153, 361, 419], "2230": 113, "371": 113, "3715": 113, "chlorid": 114, "nabr": 114, "naf": 114, "rai": [114, 401], "attenu": 114, "techniqu": [114, 330, 507], "334": 115, "430": [115, 356], "sulfur_density_frac": [115, 507], "espeau": 115, "ceolin": 115, "508k": 115, "1382": 116, "tungsten": [116, 153, 486], "refractori": 116, "roll": [116, 502], "bureau": 116, "naval": 116, "weapon": 116, "contract": [116, 308, 315, 324, 503, 506], "n600": 116, "59530": 116, "southern": 116, "institut": 116, "456": [116, 492], "574": [116, 492], "702": [116, 492], "840": 116, "56": [116, 153, 361, 496], "846": [116, 487], "948": 116, "89": [116, 153, 361, 480], "1023": 116, "1146": 116, "1287": 116, "78": [116, 153, 361, 507], "203": [116, 361], "253": [116, 237], "303": 116, "342": 116, "366": 116, "421": [116, 237], "468": 116, "504": [116, 492], "tabular": [116, 419], "21c": 116, "1966": [116, 490], "viii": [116, 162, 507], "appendix": 116, "181": [116, 361], "test_canaccessclassesfrompackag": [118, 119], "test_packageclassesequalmoduleclass": [118, 119], "test_pseudodens": [118, 120, 122, 124, 125, 126], "test_heatcapac": [118, 120, 124, 125, 126], "test_thermalconduct": [118, 120, 125], "test_massfrac": [118, 120, 130], "test_validrang": [118, 120], "mat_class": [118, 121, 122, 123, 124, 125, 126, 127, 128, 129], "test_theoretical_pseudodens": [118, 121, 128], "test_propertyvalidtemperatur": [118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "test_linearexpansionperc": [118, 123, 125, 128], "test_dens": [118, 123, 125, 129, 353, 356], "defaultmassfrac": [118, 124], "test_lithium_material_modif": [118, 124], "test_meltingpoint": [118, 124, 125, 126], "test_boilingpoint": [118, 124], "test_material_initi": [118, 125], "test_findmateri": [118, 125], "test_namespac": [118, 125, 424], "test_poros": [118, 125], "test_getcorrosionr": [118, 125], "test_getmassfracpuo2": [118, 125], "test_getmolfracpuo2": [118, 125], "test_getmeltingpoint": [118, 125], "test_applyinputparam": [118, 125], "test_specificvolumeliquid": [118, 125], "test_enthalpi": [118, 125], "test_linearexpans": [118, 125], "test_adjustmassenrich": [118, 125, 353, 356], "test_gettemperatureatdens": [118, 125], "test_getdensityexpansion3d": [118, 125], "test_removenucmassfrac": [118, 125], "test_densitytimesheatcapactii": [118, 125], "test_gettempchangefordensitychang": [118, 125], "test_dupl": [118, 125, 129, 248, 250, 353, 354, 355, 383, 390], "test_setdefaultmassfrac": [118, 125], "test_volumetricexpans": [118, 125], "test_dynamicvisc": [118, 125], "test_densityneverchang": [118, 125], "test_getchildren": [118, 125, 353, 357], "test_getchildrenwithflag": [118, 125], "test_iconel800_linearexpans": [118, 125], "test_00_setdefaultmassfrac": [118, 125], "test_01_linearexpansionperc": [118, 125], "test_02_linearexpans": [118, 125], "test_03_pseudodens": [118, 125], "test_polyfitthermalconduct": [118, 125], "test_polyfitheatcapac": [118, 125], "test_polyfitlinearexpansionperc": [118, 125], "test_nicklecont": [118, 125], "test_linearexpansionhott": [118, 125], "test_meancoefficientthermalexpans": [118, 125], "test_00_applyinputparam": [118, 125], "test_01_pseudodens": [118, 125], "test_02_linearexpansionperc": [118, 125], "baseinput": [118, 125], "loadassembli": [118, 125], "test_class1class2_class1_wt_frac": [118, 125], "test_class1class2_classx_custom_isotop": [118, 125], "test_sulfur_density_frac": [118, 127], "test_ispickl": [118, 129, 353, 359, 363], "test_td": [118, 129], "test_cach": [118, 129], "test_densitykgm3": [118, 129], "test_pseudodensitykgm3": [118, 129], "test_water_at_freez": [118, 130], "test_water_at_boil": [118, 130], "test_water_at_critcalpoint": [118, 130], "test_validatenam": [118, 130], "superclass": 119, "verif": [120, 130, 455, 483], "300k": 120, "ratio": [120, 163, 288, 331, 400, 402, 480, 499, 503, 504, 505, 507], "_material_test": [121, 122, 124, 125, 126, 127, 128], "0759": 124, "discover": [125, 487], "1723": 125, "efg": 125, "pseudo": [125, 129, 157, 452, 487, 509], "linearli": [125, 400], "_mixtur": 125, "nickl": 125, "spec": 125, "nnuclid": [125, 297, 301, 303], "ncustom": [125, 301], "customisotopic1": 125, "customisotopic2": 125, "nblock": [125, 297, 300, 301, 303], "block_fuel": [125, 297, 303, 498, 507, 513], "fuel1": [125, 297, 303, 318, 333, 507], "component_fuel_fuel1": [125, 297, 303, 507], "tinput": [125, 297, 300, 301, 303, 305, 306, 307, 308, 310, 324, 356, 357, 470, 478, 498, 499, 507, 513], "thot": [125, 297, 300, 301, 303, 305, 306, 307, 308, 310, 324, 353, 356, 357, 470, 478, 492, 498, 499, 507, 513], "ip": [125, 288, 297, 300, 301, 303, 306, 308, 356, 357, 470, 478, 498, 507, 508], "mult": [125, 219, 288, 292, 297, 300, 301, 303, 306, 307, 308, 310, 356, 357, 470, 478, 498, 499, 504, 507, 508, 513], "op": [125, 288, 297, 300, 301, 303, 305, 306, 307, 308, 334, 356, 357, 377, 470, 478, 498, 507, 508], "fuel2": [125, 297, 303, 318, 333, 507], "component_fuel_fuel2": [125, 297, 303, 507], "nassembli": [125, 297, 300, 301, 303], "assembly_a": [125, 297, 300, 301, 303, 507], "height": [125, 174, 224, 285, 288, 289, 291, 297, 299, 300, 301, 303, 306, 308, 310, 311, 315, 316, 324, 330, 331, 337, 342, 354, 355, 356, 357, 399, 412, 437, 478, 486, 487, 490, 492, 498, 499, 503, 507], "materialmodif": [125, 284, 289, 290, 303], "picklabl": [129, 392], "commun": [129, 151, 165, 204, 355, 376, 450, 510, 513], "iapw": [130, 139], "if97": [130, 139], "0c": 130, "relguid": [130, 139], "supsat": [130, 139], "100c": 130, "096k": 130, "iaea": [131, 132, 133, 212], "tecdoc": [131, 132, 133], "1450": [131, 132, 133], "u233": [131, 155, 496], "u233_wt_frac": [131, 507], "te": [131, 132, 133, 153, 155, 507], "challeng": [133, 166, 294, 331, 342, 456, 484], "2005": [133, 490], "pub": 133, "mtcd": 133, "te_1450_web": 133, "1223": 133, "232": [133, 134, 496], "030806": 133, "264": 133, "029606": 133, "298k": 133, "zirc": 134, "233": [134, 496], "zr_wt_frac": [134, 135, 303, 507], "notion": [135, 252, 340], "10zr": [135, 311], "chandrabhanu": 135, "incorrect": [135, 344, 487, 513], "basak": 135, "prasad": 135, "kamath": 135, "prabhu": 135, "rich": [135, 377, 446, 484, 509], "480": 135, "2009": [135, 484], "857": 135, "862": 135, "issn": 135, "0925": 135, "8388": 135, "1016": [135, 484], "jallcom": 135, "02": [135, 137, 155, 285, 301, 449, 462, 471, 472, 478, 479, 481, 486, 487, 488, 492, 496, 507, 509], "077": 135, "aaafuel": 136, "kim": 136, "aaa": [136, 142, 505], "2003": [136, 499], "822554": 136, "01591t": 136, "907": 136, "215": [136, 361, 496], "1600": [136, 142], "255": 136, "nse": 136, "gl": 136, "07": [136, 163, 449, 462, 471, 478, 479, 489, 492, 496, 507], "27": [137, 153, 361, 456, 486, 487, 492], "302": 137, "008463": 137, "87410000": 137, "548": [137, 487], "68": [137, 153, 361], "18531": 137, "3100": 137, "3123": 137, "3000": 137, "dioxid": 137, "nonequilibrium": 137, "molecular": [137, 311], "motoyama": 137, "60": [137, 153, 216, 220, 223, 285, 288, 340, 356, 361, 401, 410, 412, 502, 503, 505, 513], "juli": 137, "1999": 137, "92": [137, 152, 153, 155, 361, 496], "380289e": [137, 496], "599930e": 137, "1200": [137, 142, 468], "1800": [137, 142], "2100": 137, "2700": 137, "991": 137, "864": 137, "768": 137, "567": [137, 463, 465, 492], "073": 137, "891": 137, "847": 137, "718": 137, "u234": [137, 155, 294, 301, 492, 496, 507], "curv": [137, 208, 412, 487], "faith": 139, "supplementari": 139, "ordinari": 139, "substanc": 139, "1992": [139, 490], "steam": 139, "satur": 139, "industri": [139, 484, 494], "h2o": [139, 162], "007976e": 139, "sr1": 139, "86": [139, 153, 361, 507], "pressur": [139, 153, 212, 228, 278, 344, 444, 484, 502, 503, 505, 507], "096": 139, "322": 139, "064": 139, "22064000": 139, "5453657571674064": 139, "65134998e": 139, "08": [139, 449, 470, 471, 478, 479, 486, 487, 492], "2690": 139, "66631": 139, "127": [139, 361, 472, 498], "287297": 139, "003439": 139, "981825814": 139, "alpha": [139, 155, 162, 163, 165, 470, 475, 477, 480, 495, 503, 511], "1135": 139, "905627715": 139, "phi": 139, "2319": 139, "5246": 139, "1e": [139, 142, 167, 211, 374, 404, 416, 464, 470, 479, 507, 510], "06": [139, 142, 247, 301, 449, 462, 471, 478, 479, 487, 492, 496], "wrt": 139, "quantiti": [139, 165, 330, 347, 356, 416, 418, 502, 513], "kgk": 139, "yttrium": [140, 153], "yttria": 140, "zinc": [141, 153], "1491": 141, "28": [141, 153, 361], "polycrystallin": 141, "devic": 141, "technologi": [141, 237, 484], "45803": 142, "touloukian": 142, "kirbi": 142, "taylor": 142, "desai": 142, "ifi": 142, "plenum": [142, 237, 284, 285, 288, 333, 354, 355, 483, 492, 497], "washington": 142, "1975": 142, "700": [142, 468, 492], "1136": [142, 487, 492], "99999": 142, "1137": 142, "1400": 142, "7e": [142, 470], "9e": [142, 470], "6e": [142, 470], "8e": [142, 470], "2e": [142, 159, 470], "5e": [142, 454, 470], "03e": 142, "mk": 142, "upgrad": [144, 252, 484, 487, 499, 507], "invest": [144, 484], "thousand": [144, 162, 331, 449, 456, 484, 502, 503, 504], "seriou": [144, 484, 494, 507], "analyst": [144, 312, 449, 451, 484, 492, 507, 509], "strongli": [144, 311, 448, 509], "oftentim": [144, 294, 507], "week": [144, 484], "monetari": 144, "tempor": 144, "meanwhil": [144, 484], "fix": [144, 152, 165, 170, 223, 241, 252, 330, 347, 355, 377, 412, 419, 448, 455, 456, 507], "eas": [144, 308, 484, 486], "train": 144, "cognit": 144, "burden": [144, 383, 507], "background": 144, "word": [144, 311, 312, 335, 342, 357, 383, 418, 419, 455, 507], "spreadsheet": [144, 484], "test_m0_1_6": [144, 148], "testmigr": [144, 148, 149], "test_migration_bas": [144, 148], "testmigrationbas": [144, 148, 150], "testsettingsmigr": [144, 148, 150], "fromvers": [144, 145, 146, 147], "tovers": [144, 145, 146, 147], "classic": [145, 498], "_applytostream": 145, "center": [146, 219, 220, 223, 285, 288, 307, 310, 311, 317, 318, 331, 337, 340, 341, 342, 354, 355, 400, 401, 410, 419, 428, 437, 472, 480, 487, 492, 494, 499, 503, 507, 513], "na23": [146, 470, 484, 492], "na": [146, 153, 261, 294, 311, 355, 470, 492, 497, 507], "mn55": [146, 492], "he4": [146, 163, 492], "he": [146, 153, 492, 497, 503], "w182": [146, 301, 492], "o16": [146, 294, 499, 507], "al27": [146, 162, 499], "n14": 146, "w183": [146, 301, 492], "w184": [146, 301, 492], "w186": [146, 301, 492], "alphanumer": [147, 486], "ring": [147, 219, 220, 223, 241, 288, 306, 310, 317, 318, 325, 331, 335, 336, 337, 340, 341, 342, 343, 363, 366, 382, 410, 428, 463, 464, 486, 505, 507, 509, 513], "a2003b": 147, "test_locationlabelmigr": [148, 149], "test_basic_valid": [148, 150], "test_loadstreamfrompath": [148, 150], "locationlabel": 149, "mpi_comm": [151, 452], "bcast": [151, 205, 400], "wait": [151, 205, 452, 456, 494], "sync": [151, 394, 452], "sit": [151, 163, 205, 220, 331, 452, 480, 483], "someinst": 151, "comm_world": 151, "interestingli": 151, "strong": [151, 228, 245], "discourag": [151, 311], "sign": [151, 204, 311, 448, 454], "allcpuresult": 151, "objectsforallcorestoit": 151, "subset": [151, 240, 294, 311, 312, 329, 404, 424, 425, 486, 507], "len": [151, 155, 220, 311, 411, 416, 452, 470, 473, 474, 477, 496, 497, 509], "clase": 151, "numpernod": 151, "mpi_siz": [151, 261, 452], "workload": 151, "spawn": [151, 486], "varaibl": 151, "think": [151, 311, 456, 486, 507, 509], "dsitributionact": 151, "amongst": [151, 344, 507], "skipinterfac": 151, "minim": [152, 220, 223, 239, 344, 394, 406, 412, 455, 480, 485, 498, 514], "mainli": [152, 241, 283], "three": [152, 155, 167, 169, 182, 223, 289, 310, 311, 340, 342, 376, 412, 494, 498, 499, 507], "byz": [152, 153, 496], "ironfromz": 152, "ironfromnam": 152, "bynam": [152, 153, 155, 162, 462, 469, 470, 477, 496], "iron": [152, 153, 154, 496, 507], "ironfromsymbol": 152, "bysymbol": [152, 153, 496], "lower": [152, 219, 223, 241, 284, 285, 288, 293, 311, 313, 314, 324, 331, 333, 339, 342, 343, 383, 487, 502, 513], "upper": [152, 153, 169, 201, 219, 223, 243, 252, 284, 285, 288, 313, 314, 324, 333, 339, 342, 343, 401, 410, 507, 513], "truli": [152, 400, 484, 503], "ever": [152, 333, 355, 357, 367, 455, 484, 494, 507], "118": [152, 153, 361], "fe56": [152, 162, 475, 492], "stand_alon": 152, "human": [152, 155, 334, 381, 507], "readabl": [152, 155, 283, 381, 455, 507], "capit": [152, 155, 240, 454, 455, 507], "letter": [152, 166, 201, 240, 288, 401, 415, 455, 490, 498, 503, 507], "tradition": [152, 218], "legaci": [152, 238, 352, 484], "Of": [152, 163, 219, 312, 484, 492, 497, 499], "reserv": [152, 241, 455, 456], "aa": [152, 164, 173, 201, 240, 241, 256, 331, 357, 475, 476], "ab": [152, 200, 240, 288, 311, 331, 492, 494, 503], "za": 152, "pu39": [152, 288], "along": [152, 155, 166, 212, 223, 241, 252, 282, 288, 311, 312, 315, 316, 324, 330, 333, 339, 374, 375, 412, 449, 451], "bylabel": [152, 155, 496], "softwar": [152, 155, 165, 449, 455, 483, 484, 485, 498, 507, 514], "mcnp": [152, 155, 162, 245, 283, 288, 318, 331, 404, 412, 424, 444, 461, 465, 482, 487, 490, 494, 500, 507], "serpent": [152, 155, 204, 241, 245, 507], "mc2": [152, 154, 155, 159, 169, 171, 173, 176, 200, 204, 245, 249, 256, 288, 413, 449, 484, 490, 507], "94": [152, 153, 154, 361, 487], "tinfromnam": 152, "sn112": 152, "tinfromlabel": 152, "tinfrommcc2id": 152, "sn1125": 152, "tinfrommcc3id": 152, "sn1127": 152, "fulfil": 152, "ll": [152, 285, 342, 343, 419, 452, 485, 492, 494, 497, 498, 507, 514], "test_el": [152, 156], "testel": [152, 156, 157], "test_nucdirectori": [152, 156], "testnucdirectori": [152, 156, 158], "test_nuclidebas": [152, 156], "testnuclid": [152, 156, 159], "testaaazzzsid": [152, 156, 159], "test_thermalscatt": [152, 156], "buildblockwithtsl": [152, 156, 160], "testthermalscatt": [152, 156, 160], "getnuclidethermalscatteringdata": [152, 156, 160], "test_transmut": [152, 156], "randomstr": [152, 156, 161], "transmutationtest": [152, 156, 161], "decaymodetest": [152, 156, 161], "alkali_met": [152, 153, 496], "alkaline_earth_met": [152, 153], "nonmet": [152, 153], "transition_met": [152, 153], "post_transition_met": [152, 153], "metalloid": [152, 153], "halogen": [152, 153], "noble_ga": [152, 153], "lanthanid": [152, 153], "actinid": [152, 153, 247, 294, 311, 480, 507], "isnaturallyoccur": [152, 153, 157, 496], "getdatabasenam": [152, 155], "getdecai": [152, 155], "getmcc2id": [152, 155], "getmcc3id": [152, 155, 490], "getmcc3idendfbvii0": [152, 155], "getmcc3idendfbvii1": [152, 155], "getserpentid": [152, 155], "fissil": [152, 155, 182, 240, 285, 311, 492, 502, 503, 505, 507, 512], "spontaneous_fiss": [152, 155], "getmcnpid": [152, 155], "getaaazzzsid": [152, 155], "getendfmatnum": [152, 155], "getsubjectnuclidebas": [152, 162], "getpreferredproduct": [152, 163], "outlin": [153, 155, 401, 454, 509], "gaseou": [153, 247, 487, 507], "stp": [153, 250], "hydrogen": [153, 160, 499], "helium": 153, "nitrogen": 153, "fluorin": 153, "ne": [153, 154, 311], "neon": [153, 154], "chlorin": 153, "argon": 153, "36": [153, 361, 507], "krypton": [153, 416], "xe": [153, 245, 416], "54": [153, 361], "xenon": [153, 416, 507], "rn": 153, "radon": 153, "og": 153, "oganesson": 153, "classifi": [153, 311], "ac": [153, 162, 497], "actinium": 153, "90": [153, 288, 311, 361, 401, 411, 471, 484, 498, 507], "91": [153, 361], "protactinium": [153, 157], "93": [153, 361, 507], "neptunium": 153, "plutonium": 153, "am": [153, 245], "americium": 153, "curium": [153, 507], "bk": 153, "berkelium": 153, "cf": 153, "98": [153, 361, 477, 480, 492, 507], "einsteinium": 153, "fm": 153, "fermium": 153, "md": [153, 494], "101": [153, 361, 412], "mendelevium": 153, "NO": 153, "102": [153, 361, 473, 481], "nobelium": 153, "lr": 153, "103": [153, 361], "lawrencium": 153, "num": [153, 211, 288, 354, 449, 471, 513], "aluminium": 153, "phosphoru": 153, "sc": [153, 417], "37": [153, 361], "titanium": 153, "ti": [153, 340, 341, 454, 480, 495], "vanadium": 153, "34": [153, 361, 492], "manganes": 153, "38": [153, 361, 498], "cobalt": 153, "co": [153, 471, 485, 507, 514], "29": [153, 344, 361, 489], "zn": [153, 301], "gallium": 153, "germanium": 153, "ge": 153, "33": [153, 178, 254, 361, 419, 470], "arsen": 153, "AS": [153, 166, 484, 498], "selenium": 153, "se": 153, "bromin": 153, "br": 153, "rubidium": 153, "rb": [153, 166, 170], "strontium": 153, "sr": [153, 442], "57": [153, 361], "nb": [153, 155, 162, 462, 477, 480], "mo": [153, 245, 301, 492, 497, 507], "technetium": 153, "ruthenium": 153, "ru": 153, "rhodium": 153, "rh": 153, "palladium": 153, "pd": [153, 263, 346], "53": [153, 361], "silver": 153, "ag": [153, 419], "74": [153, 361, 364, 498], "cadmium": 153, "cd": [153, 484, 485, 494, 514], "49": [153, 361], "indium": 153, "IN": [153, 167, 174], "88": [153, 361], "tin": [153, 507], "sn": [153, 165, 252], "59": [153, 361], "antimoni": 153, "sb": 153, "52": [153, 288, 361], "tellurium": 153, "iodin": 153, "barium": 153, "ba": [153, 240], "lanthanum": 153, "la": [153, 162, 165], "58": [153, 344, 361], "cerium": 153, "ce": 153, "praseodymium": 153, "pr": [153, 448, 455, 487, 488, 489, 490], "neodymium": 153, "nd": [153, 163, 261, 301], "61": [153, 361], "promethium": 153, "pm": [153, 346], "62": [153, 361], "samarium": 153, "europium": 153, "eu": 153, "gadolinium": 153, "gd": 153, "65": [153, 240, 361], "terbium": 153, "tb": 153, "dysprosium": 153, "dy": 153, "holmium": 153, "ho": 153, "erbium": 153, "er": 153, "69": [153, 361], "thulium": 153, "70": [153, 355, 361, 411, 419, 497, 507], "ytterbium": 153, "yb": 153, "71": [153, 361, 492], "lutetium": 153, "lu": 153, "72": [153, 361, 507], "ta": 153, "75": [153, 361, 498], "rhenium": 153, "osmium": 153, "iridium": 153, "ir": 153, "platinum": 153, "pt": 153, "79": [153, 361, 507], "gold": [153, 442], "au": 153, "mercuri": 153, "hg": 153, "81": [153, 361], "thallium": 153, "pb": [153, 283, 353, 362, 383, 394], "bi": [153, 452], "84": [153, 361, 492, 496], "polonium": 153, "po": [153, 331, 336, 337, 340, 342, 343, 363, 486, 509], "astatin": 153, "AT": [153, 172], "87": [153, 361, 496], "francium": 153, "fr": 153, "radium": 153, "ra": [153, 159], "104": [153, 361], "rutherfordium": 153, "rf": 153, "105": [153, 361], "dubnium": 153, "106": [153, 361, 474, 481], "seaborgium": 153, "sg": 153, "107": [153, 361], "bohrium": 153, "bh": 153, "108": [153, 361], "hassium": 153, "109": [153, 361], "meitnerium": 153, "mt": [153, 492, 512], "110": [153, 237, 356, 361, 411], "darmstadtium": 153, "111": [153, 361], "roentgenium": 153, "rg": 153, "112": [153, 361], "copernicium": 153, "cn": 153, "113": [153, 361], "nihonium": 153, "nh": 153, "114": [153, 361], "flevrovium": 153, "fl": 153, "115": [153, 361], "moscovium": 153, "mc": [153, 154, 155, 171, 188, 200, 252, 293, 498, 507], "116": [153, 361], "livermorium": 153, "lv": 153, "117": [153, 361], "tennessin": 153, "119": [153, 361], "dummi": [153, 155, 171, 173, 176, 200, 211, 284, 292, 301, 324, 331, 333, 355, 357, 381, 390, 452, 470, 471, 479, 492, 499], "120": [153, 223, 288, 318, 361, 489, 496, 513], "lumpedfissionproduct": [153, 238, 244, 288, 308, 311], "lp": 153, "proton": [153, 155, 163, 469, 477, 480, 496], "chemic": [153, 228, 250, 311, 404, 483, 503, 505], "cut": [153, 288, 310, 318, 401, 484, 507], "elem": 153, "abbrevi": [153, 154, 159, 455], "getz": 153, "elementzbysymbol": 153, "elementsymbol": 154, "prefix": [154, 165, 166, 214, 400, 455], "xstype": [154, 238, 241, 245, 288, 291, 478, 503, 507], "suffix": [154, 164, 200, 201, 256, 288, 311, 352], "u235ia": 154, "zircfb": 154, "2355": [154, 155], "ia": 154, "fb": 154, "mc2liblabel": 154, "am242": [154, 155, 240, 301], "a242": 154, "am242m": [154, 155, 159, 492], "adjustnuclid": 154, "amass": 154, "u239": [154, 496], "lindhard": 154, "cutoff": [154, 241, 402, 507], "displac": [154, 158, 213, 237, 484, 503, 507, 513], "specter": 154, "ii": 154, "greenwood": 154, "fpp": 154, "197": [154, 361], "argonn": [154, 167, 175, 483, 484], "1985": [154, 490], "ed": [154, 507], "ev": [154, 169, 200, 243, 475, 503, 505], "350439e": [155, 496], "hl": [155, 496], "22160758861e": [155, 496], "204000e": [155, 496], "03": [155, 449, 462, 465, 471, 478, 479, 487, 492, 496, 507, 509], "bymcc2id": [155, 496], "bymcc3idendfvii0": 155, "u235_7": 155, "bymcnpid": [155, 496], "92235": [155, 462], "aaazzz": 155, "byaaazzzsid": [155, 496], "2350920": 155, "npu239": 155, "decaytyp": 155, "dectyp": 155, "sf": [155, 163, 492], "identif": [155, 174, 183], "endf": [155, 159, 162, 184, 245, 294, 490, 507], "vii": [155, 159, 162, 184, 490, 507], "fissl": 155, "halflif": [155, 496], "mcc2id": 155, "mcc3idendfbvii0": 155, "mcc3idendfbvii1": 155, "nucleon": 155, "excit": [155, 494, 499], "pad": [155, 252, 324, 400, 411, 419, 437, 505, 507], "nusf": [155, 163, 496], "cm244": [155, 301, 492], "answer": [155, 342, 377, 421, 483, 484, 492, 496], "card": [155, 200, 404, 424, 461, 465, 482, 487, 500], "isomer": 155, "94239": [155, 462], "6000": [155, 462], "eg": [155, 201, 311], "129m": 155, "njoi": [155, 245], "lightest": 155, "9228": 155, "9237": 155, "92000": 155, "Not": [155, 198, 200, 241, 311, 337, 400, 403, 503, 509], "nat": 155, "placehold": [155, 207, 285, 367, 401, 419, 498], "truncat": [155, 400, 419], "lump": [155, 163, 240, 245, 247, 249, 250, 308, 311, 480, 487, 507], "fissionproduct": [155, 245, 471, 478, 479, 492, 509], "expend": 155, "numberdensitydict": 155, "activenuclid": [155, 353, 357], "march": [155, 449, 490, 507], "smallest": [155, 288, 305, 314, 317, 412], "orderedset": 155, "lambda": [155, 311, 346, 411, 416, 419, 471, 494, 497, 505], "nn": [155, 509], "zn64": 155, "zn66": 155, "zn67": 155, "zn68": 155, "zn70": 155, "zr90": [155, 492], "zr91": [155, 492], "zr92": [155, 492], "zr94": [155, 492], "zr96": [155, 492], "zr93": 155, "zr95": 155, "isomers90": 155, "isom": [155, 162], "mo95": [155, 492], "mo2n": 155, "nb95": 155, "nb2n": 155, "zr2n": 155, "meet": [155, 288, 311, 331, 337, 346], "0107358968": 155, "am4c": 155, "newlabel": 155, "burnchainstream": [155, 480], "twice": [155, 224, 341, 498], "rebuild": 155, "orphan": 155, "burnchain": 155, "believ": [155, 484], "bymcc3idendfbvii0": 155, "bymcc3idendfbvii1": 155, "henc": [155, 308, 419, 451], "ecosystem": [155, 283, 448, 450, 455, 456, 484, 495], "everyth": [155, 175, 201, 202, 205, 241, 252, 311, 317, 344, 415, 419, 452, 498, 513], "metast": [155, 480, 505], "ground": [155, 484, 487], "test_elements_elementbulkproperti": [156, 157], "test_element_elementbynamereturnsel": [156, 157], "test_element_elementbyzreturnsel": [156, 157], "test_element_elementbysymbolreturnsel": [156, 157], "test_element_addexistingelementfail": [156, 157], "test_element_addedelementappearsinelementlist": [156, 157], "test_element_getnatrualisotpicsonlyretrievesabundacegt0": [156, 157], "test_element_isnaturallyoccur": [156, 157], "test_abundancesaddtoon": [156, 157], "test_isheavymet": [156, 157], "test_nucdir_getnameforolddashednam": [156, 158], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclid": [156, 158], "test_nucdir_getnuclidesfromforbadnam": [156, 158], "test_getdisplacementenergi": [156, 158], "test_nucbases_fromnamebadnameraisesexcept": [156, 159], "test_nucbase_allabundancesaddtoon": [156, 159], "test_nucbases_alllabelsareuniqu": [156, 159], "test_nucbases_negativezraisesexcept": [156, 159], "test_nucbases_z295raisesexcept": [156, 159], "test_nucbases_mc2element": [156, 159], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail": [156, 159], "test_naturalnuclidebase_getnatrualisotp": [156, 159], "test_nucbases_singlefailswithmultiplematch": [156, 159], "test_nucbases_singlefailswithnomatch": [156, 159], "test_nucbases_singleisprettyspecif": [156, 159], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotop": [156, 159], "test_nucbases_labelandnamecollsionsareforsamenuclid": [156, 159], "test_nucbases_imposeburnchaindecaybulkstatist": [156, 159], "test_nucbases_imposeburnchaintransmutationbulkstatist": [156, 159], "test_nucbases_imposeburn_nusf": [156, 159], "test_nucbases_databasenamesstartwith_n": [156, 159], "test_nucbases_alldatabasenamesareuniqu": [156, 159], "test_nucbases_am242m": [156, 159], "test_nucbases_isheavymet": [156, 159], "test_getdecai": [156, 159], "test_getendfmatnum": [156, 159], "test_nonmc2nuclid": [156, 159], "test_kryptondecayconst": [156, 159], "test_curiedefinitionwithra226": [156, 159], "test_loadmcc2data": [156, 159], "test_loadmcc3endfvii0data": [156, 159], "test_loadmcc3endfvii1data": [156, 159], "test_aaazzzsnamegener": [156, 159], "test_graphiteonreactor": [156, 160], "test_endf8compound": [156, 160], "test_endf8elementincompound": [156, 160], "test_endf8isotop": [156, 160], "test_acecompound": [156, 160], "test_aceelementincompound": [156, 160], "test_aceisotop": [156, 160], "test_failonmultipl": [156, 160], "test_transmutation_validreactiontyp": [156, 161], "test_transmutation_productparticl": [156, 161], "test_transmutation_invalidreactiontyp": [156, 161], "test_decaymode_validreactiontyp": [156, 161], "test_decaymode_invalidreactiontyp": [156, 161], "ripl": [157, 486, 487], "debat": 157, "yeah": [157, 212], "branch": [159, 163, 256, 448, 480, 487], "3e": [159, 470], "threshold": [159, 243, 269], "ternari": [159, 354], "sponan": 159, "am242g": 159, "226": [159, 496], "ci": [159, 311, 462, 487, 489], "988": 159, "mcc": [159, 173], "aaazz": 159, "tsl": [160, 162], "armiobj": 160, "conceptu": [160, 308, 366, 484, 507], "offici": [160, 174, 347, 456], "tslbynuclidebas": 160, "subject": [160, 162, 283, 455, 484], "tslinfo": 160, "nucbas": 160, "acelabel": [160, 162], "awar": [162, 205, 315, 484, 507], "characterist": [162, 344], "significantli": [162, 165, 204, 241, 311, 317, 449], "molecul": [162, 311], "beta": [162, 163, 169, 237, 480, 503, 505, 507], "solver": [162, 163, 169, 173, 175, 204, 245, 251, 252, 283, 288, 317, 330, 463, 471, 480, 494, 498, 499, 507], "c12": 162, "parson": 162, "ur": 162, "25096": 162, "lanl": [162, 173], "pdf_file": 162, "classif": 162, "beo": 162, "crystallin": 162, "porou": [162, 237], "para": 162, "ortho": 162, "ch4": 162, "sio2": 162, "benzen": 162, "iii": 162, "kernel": [162, 214, 240, 252, 291, 292, 412, 484, 487, 492, 493, 498, 507, 509], "bynbandcompound": 162, "compoundnam": 162, "endf8label": 162, "whose": [162, 241, 288, 315, 344, 400, 411, 419], "methan": 162, "endf8": 162, "rebuilt": 162, "burnchainfilenam": [163, 507], "np237": [163, 301, 492], "n2n": [163, 188, 197, 200, 261, 311, 503], "lfp38": [163, 245, 301, 492], "np239": 163, "ngamma": [163, 261, 416, 475, 480], "45000e": 163, "halflifeinsecond": 163, "4099935680e": 163, "gamma": [163, 165, 170, 171, 176, 191, 200, 201, 202, 238, 252, 259, 261, 288, 308, 311, 329, 330, 344, 347, 416, 475, 480, 487, 503, 507], "low": [163, 240, 241, 284, 333, 400, 416, 471, 492, 499, 502, 503, 504, 505, 507], "explicitli": [163, 219, 245, 283, 295, 331, 333, 452, 456, 473, 474, 486, 494, 498, 507, 513], "matrix": [163, 166, 167, 169, 172, 173, 182, 191, 197, 200, 202, 261, 400, 467, 480, 481, 482, 497, 500, 503, 509], "ill": 163, "exponenti": [163, 412, 480], "cram": 163, "adequ": [163, 455], "solut": [163, 171, 240, 241, 245, 312, 317, 347, 412, 507], "intrins": [163, 483, 503, 505], "pusa": 163, "maria": 163, "jaakko": 163, "leppanen": 163, "164": [163, 361], "2010": 163, "140": [163, 361], "150": [163, 361, 411, 412, 464, 507], "moler": 163, "cleve": 163, "charl": 163, "van": 163, "loan": 163, "nineteen": 163, "dubiou": 163, "siam": 163, "1978": 163, "836": 163, "datadict": 163, "productnuclid": [163, 480], "fallback": [163, 219, 385], "productparticl": 163, "outgo": [163, 175, 190, 219, 507], "particl": [163, 503, 507], "scale": [163, 167, 288, 294, 311, 318, 337, 354, 363, 404, 416, 418, 495, 503, 510], "doubl": [163, 166, 291, 419, 509], "librarynucnam": 163, "daughter": [163, 505], "circuit": [163, 346, 347], "shorter": [163, 375, 419, 450, 456, 499], "nalph": [163, 261, 416, 475, 480], "deuteron": 163, "triton": 163, "nt": [163, 261, 507], "bmd": [163, 480], "bpd": [163, 480], "electron": 163, "ec": [163, 472], "xsid": [164, 201, 240, 241, 267], "isotx": [164, 165, 167, 169, 188, 195, 200, 201, 202, 242, 259, 261, 288, 308, 311, 331, 416, 467, 470, 476, 481, 482, 486, 487, 500, 507], "compx": [164, 165, 174, 182, 195, 201], "gamiso": [164, 165, 173, 186, 201, 202, 486, 487], "cycle0": 164, "pmatrx": [164, 165, 191, 200, 201, 202, 486, 487], "implicit_int": [164, 165, 166], "iorecord": [164, 165, 166], "binaryrecordread": [164, 165, 166], "binaryrecordwrit": [164, 165, 166], "asciirecordread": [164, 165, 166], "asciirecordwrit": [164, 165, 166], "datacontain": [164, 165, 166, 168, 172, 174, 175, 177, 178, 179], "streamwithdatacontain": [164, 165, 166, 168, 172, 174, 175, 177, 178, 179], "getblockbandwidth": [164, 165, 166], "compxsregion": [164, 165, 167], "dif3d": [164, 165, 167, 169, 170, 171, 173, 174, 175, 178, 183, 185, 187, 189, 192, 200, 204, 220, 285, 288, 318, 330, 335, 343, 449, 483, 498, 503, 507], "dif3ddata": [164, 165, 168], "dif3dstream": [164, 165, 168], "dlayx": [164, 165, 184], "delayedneutrondata": [164, 165, 169], "readbinari": [164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 201, 470, 475, 476], "readascii": [164, 165, 166, 169, 176, 400, 401], "writebinari": [164, 165, 166, 167, 169, 170, 172, 173, 176, 177, 178, 179], "writeascii": [164, 165, 166, 169, 175, 176, 179, 400, 401], "dlayxsio": [164, 165, 169], "fixsrc": [164, 165, 185, 507], "comparenuclidex": [164, 165, 171, 173, 176], "adddummynuclidestolibrari": [164, 165, 171, 173, 176], "geodst": [164, 165, 175, 177, 187, 331, 487], "geodstdata": [164, 165, 172], "geodststream": [164, 165, 172], "compareset": [164, 165, 173], "isotxsio": [164, 165, 173], "labelsdata": [164, 165, 174], "labelsstream": [164, 165, 174], "nhflux": [164, 165, 178, 190, 487], "nhfluxstream": [164, 165, 175], "nafluxstream": [164, 165, 175], "nhfluxstreamvari": [164, 165, 175], "nafluxstreamvari": [164, 165, 175], "getnhfluxread": [164, 165, 175], "pmatrxio": [164, 165, 176], "pwdint": [164, 165, 192], "pwdintdata": [164, 165, 177], "pwdintstream": [164, 165, 177], "rtflux": [164, 165, 170, 193], "rtfluxdata": [164, 165, 178], "rtfluxstream": [164, 165, 178], "atfluxstream": [164, 165, 178], "getfdfluxread": [164, 165, 178], "rzflux": [164, 165, 178, 194], "rzfluxdata": [164, 165, 179], "rzfluxstream": [164, 165, 179], "test_xscollect": [164, 196], "testxscollect": [164, 196, 197], "mockblueprint": [164, 196, 197], "mockblock": [164, 196, 197], "test_xslibrari": [164, 196], "tempfilemixin": [164, 196, 198], "testxslibrari": [164, 196, 198], "testgetisotxsfilesinworkingdirectori": [164, 196, 198], "abstracttestxslibrarymerg": [164, 196, 198], "pmatrx_merge_test": [164, 196, 198], "isotxs_merge_test": [164, 165, 180, 188, 196, 198], "gamiso_merge_test": [164, 196, 198], "combined_merge_test": [164, 196, 198], "test_xsnuclid": [164, 196], "nuclidetest": [164, 196, 199], "getdefaultx": [164, 200], "getabsorptionx": [164, 200], "gettotalscattermatrix": [164, 200], "collapsecrosssect": [164, 200], "createmacrosonblocklist": [164, 200], "createmacrosfrommicro": [164, 200], "gammaenergyupperbound": [164, 201], "neutrondoseconversionfactor": [164, 201], "gammadoseconversionfactor": [164, 201], "numgroup": [164, 167, 200, 201], "numgroupsgamma": [164, 201], "nuclidelabel": [164, 201], "resetscatterweight": [164, 201], "getscatterweight": [164, 201], "purgefissionproduct": [164, 201], "regionlabel": [164, 201], "updatebasenuclid": [164, 202], "getmicrox": [164, 199, 202], "getx": [164, 165, 167, 202], "buildnormalizedscattercolumn": [164, 202], "tran": [164, 202, 480], "late": 165, "1960": [165, 484], "recogn": [165, 283, 484], "establish": [165, 315, 405, 406, 455, 484], "committe": 165, "coordin": [165, 175, 199, 214, 219, 245, 252, 285, 288, 293, 311, 318, 319, 326, 327, 330, 331, 335, 337, 340, 341, 342, 354, 355, 361, 401, 410, 412, 421, 443, 444, 464, 473, 494, 499, 513], "1977": 165, "iv": [165, 169, 170, 172, 173, 177, 178, 179, 332], "partisn": [165, 507], "multigroup": [165, 167, 169, 170, 171, 173, 176, 178, 179, 200, 213, 243, 252, 256, 288, 308, 311, 330, 331, 356, 416, 470, 490, 503, 507], "grupx": 165, "brkox": 165, "bondarenko": 165, "russian": 165, "delai": [165, 167, 169, 184, 238, 241, 271, 503, 505, 507], "precursor": [165, 169, 238, 271, 505, 507], "isogx": 165, "ndxsrf": 165, "znatdn": 165, "subzon": 165, "sncon": 165, "ordin": [165, 418], "surfac": [165, 175, 190, 503], "scalar": [165, 331, 418, 497, 503, 509, 513], "atflux": [165, 170, 178], "adjoint": [165, 175, 178, 193, 238, 252, 288, 308, 311, 330, 331, 416, 503, 505, 507], "rcurnt": 165, "acurnt": 165, "raflux": 165, "angular": [165, 310, 343], "aaflux": 165, "avearg": 165, "densitii": 165, "interv": [165, 177, 412, 430], "dougla": 165, "dell": 165, "procedur": [165, 330], "6941": 165, "lo": 165, "alamo": 165, "septemb": 165, "5369298": 165, "ascii": [165, 166, 169, 172, 175, 176, 177, 178, 179, 181, 182, 191, 193, 194, 219, 293, 360, 401, 421, 486, 498, 507], "confus": [165, 166, 294, 308, 311, 333, 340, 455, 487, 507], "rw": [165, 166], "talk": [165, 166, 507, 513], "hide": [165, 213, 301, 308, 357, 447, 455, 486], "record": [165, 166, 167, 168, 172, 174, 177, 367, 369, 419, 437], "byte": [165, 166, 311, 408, 411, 437], "fortran": [165, 166, 412, 484], "unformat": 165, "sequenti": [165, 166, 442, 449], "gcc": [165, 492], "gnu": [165, 383], "onlinedoc": 165, "gfortran": 165, "pyne": 165, "terrapow": [165, 241, 413, 446, 451, 456, 483, 484, 485, 487, 498, 514], "author": [165, 419], "era": 165, "inspir": 165, "prof": 165, "jame": 165, "paul": 165, "hollowai": 165, "ccccutil": 165, "2001": 165, "test_cccc": [165, 180], "cccciostreamtest": [165, 180, 181], "ccccbinaryrecordtest": [165, 180, 181], "ccccasciirecordtest": [165, 180, 181], "test_compx": [165, 180], "testcompx": [165, 180, 182], "test_dif3d": [165, 180], "testdif3dsimplehexz": [165, 180, 183], "testdif3demptyrecord": [165, 180, 183], "test_dlayx": [165, 180], "dlayxstest": [165, 180, 184], "test_fixsrc": [165, 180], "testfixsrc": [165, 180, 185], "test_gamiso": [165, 180], "testgamiso": [165, 180, 186], "test_geodst": [165, 180], "testgeodst": [165, 180, 187, 192], "test_isotx": [165, 180], "testisotx": [165, 180, 188], "test_label": [165, 180, 353, 360], "testlabel": [165, 180, 189], "test_nhflux": [165, 180], "testnhflux": [165, 180, 190], "testnhfluxvari": [165, 180, 190], "test_pmatrx": [165, 180], "testpmatrxnuclid": [165, 180, 191], "testpmatrx": [165, 180, 191], "testproductionmatrix_fromwritten": [165, 180, 191], "testproductionmatrix_fromwrittenascii": [165, 180, 191], "test_pwdint": [165, 180], "test_rtflux": [165, 180], "testrtflux": [165, 180, 193], "test_rzflux": [165, 180], "testrzflux": [165, 180, 194], "binaryfilesequ": [165, 180, 194], "maxsiz": [165, 166], "rwint": [165, 166], "rwbool": [165, 166], "rwfloat": [165, 166], "rwdoubl": [165, 166], "rwstring": [165, 166], "rwlist": [165, 166], "rwmatrix": [165, 166], "rwdoublematrix": [165, 166], "rwintmatrix": [165, 166], "rwimplicitlytypedmap": [165, 166], "rwlong": [165, 166], "readwrit": [165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179], "createrecord": [165, 166], "initmetadata": [165, 167], "allocatex": [165, 167], "makescatteringmatric": [165, 167], "generateaveragedelayedneutronconst": [165, 169], "fluxmoment": [165, 175], "partialcurrentshex": [165, 175], "partialcurrentshex_ext": [165, 175], "partialcurrentsz": [165, 175], "groupflux": [165, 178, 179], "getenergygroupindex": [165, 178], "no_iter": [165, 179], "diverg": [165, 179, 220, 385], "ijklmn": 166, "implicit": [166, 446, 498], "hasrecordboundari": 166, "signific": [166, 228, 288, 308, 404, 484], "enforc": [166, 283, 334, 347, 361, 375, 383, 449, 489, 507], "tradeoff": [166, 507], "comprehend": 166, "885": [166, 487], "seemingli": 166, "odd": [166, 175, 331, 337, 455], "precis": [166, 330, 331, 347, 442, 486, 487, 498, 507], "containedtyp": [166, 368, 375], "strlength": 166, "fortran77": 166, "roughli": [166, 311, 471, 498], "front": [166, 333, 507], "newlin": [166, 204, 419], "streamwithdatastructur": 166, "filemod": [166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179], "io": [166, 311, 442, 446, 484], "wb": [166, 170], "boilerpl": 166, "nintj": 166, "nblok": 166, "bandwidth": 166, "jl": 166, "ju": 166, "WITH": 166, "THE": [166, 167], "AND": [166, 174, 331], "min0": 166, "jup": 166, "matric": [166, 167, 182, 197, 200, 202, 261, 476], "spars": [166, 167, 182, 202, 381], "jh": 166, "jmax": 166, "band": 166, "derstin": [167, 343], "solv": [167, 169, 229, 252, 330, 341, 347, 410, 412, 480, 485, 494, 498, 507, 509, 514], "diffus": [167, 252, 261, 318, 330, 483, 484, 486, 487], "april": 167, "1984": [167, 343, 490], "illinoi": 167, "unt": 167, "ark": 167, "67531": 167, "metadc283553": 167, "octob": [167, 175], "north": [167, 331, 513], "texa": 167, "credit": 167, "govern": [167, 484, 498], "depart": 167, "IF": [167, 174, 369], "FOR": [167, 174], "OF": [167, 484, 498], "decreas": [167, 319, 412, 499], "r0": 167, "macro": [167, 200, 261, 288, 499], "higherorderscatt": 167, "p1": [167, 412], "p5": 167, "compxs2": 167, "watt": [167, 177, 288, 505], "powerconvmult": 167, "integr": [167, 288, 305, 311, 330, 354, 450, 484, 503, 505, 510], "absorpt": [167, 200, 330, 503, 505], "similari": 167, "lib1": [167, 169, 171, 173, 176, 201], "lib2": [167, 169, 171, 173, 176, 201], "verbos": [167, 173, 200, 369, 397, 400, 419, 456, 497, 507, 509], "disregard": [167, 288], "regionnumb": 167, "filewidechi": 167, "reg00": 167, "reg01": 167, "reg02": 167, "regnn": 167, "r10": 167, "01147095": 167, "01006284": 167, "0065597": 167, "00660079": 167, "005587": 167, "08920149": 167, "13035864": 167, "16192732": 167, "sigma_": [167, 200, 288], "rem": 167, "cdot": [167, 308], "reconstruct": [167, 190, 195, 202, 252, 503, 507, 509], "s_": 167, "rightarrow": 167, "segment": [167, 310, 483, 507], "xscatu_j": 167, "lbrace": [167, 510], "vert": 167, "nup": 167, "rbrace": [167, 510], "xscatj_j": 167, "xscatd_j": 167, "j_ndn": 167, "ndn": 167, "upscatt": 167, "downscatt": [167, 243], "scipi": [167, 182, 285, 412], "csc_matrix": [167, 182], "five": [168, 223, 410], "emiss": [169, 184], "spectra": 169, "numenergygroup": 169, "numprecursorgroup": 169, "kinet": [169, 184, 212, 347, 503], "precursordecayconst": 169, "character": [169, 256, 342, 343, 483], "delayemissionspectrum": [169, 184], "famili": [169, 288, 403, 492, 507], "pxg": 169, "spectrum": [169, 184, 240, 241, 252, 288, 416, 480, 503], "aka": [169, 507], "chi": [169, 200, 237, 261, 503], "delayneutronsperfiss": 169, "nubar": 169, "ordereddict": [169, 290, 291, 292, 293, 294, 295, 437], "contribut": [169, 200, 330, 448, 485, 514], "nuclidefamili": 169, "numfamili": 169, "numnuclid": 169, "neutronenergyupperbound": 169, "nuclidecontributionfract": 169, "perturbationtheori": 169, "perturbationtheoryinterfac": 169, "calculatebeta": 169, "triangular": 170, "photon": [170, 200, 252, 487], "fixsrcarrai": 170, "intent": [170, 285, 484], "preexist": 170, "v3": [171, 452], "microscop": [171, 173, 197, 200, 202, 240, 252, 261, 288, 317, 331, 476, 495], "gamsor": [171, 176], "smith": [171, 175, 419], "lee": [171, 176], "hill": 171, "1343095": 171, "nuc1": [171, 173, 176], "nuc2": [171, 173, 176], "dummynuclid": [171, 173, 176], "coars": [172, 183, 220], "geo": 172, "xmesh": 172, "zmesh": 172, "geodst2": 172, "rememb": [172, 219, 311, 348, 452, 455, 507], "analog": [172, 179, 204, 324, 509], "istox": [172, 179, 202], "stand": 173, "dragon": 173, "mylib": [173, 200], "fis5": 173, "micro": [173, 200, 261, 475, 476], "scat": 173, "1st": 173, "elast": [173, 197, 200], "captureenergi": 173, "isotxsmetadata": 173, "ecapt": 173, "cacluat": 173, "closer": 173, "shown": [173, 284, 416, 452, 484, 498, 507], "getnuclidefunc": [173, 176], "semi": 173, "t2": 173, "transx": 173, "hyper": 173, "isotsx": 173, "variant": [174, 175, 189, 205, 487], "transvers": 174, "nhts1": 174, "gt": [174, 492, 496, 497, 499], "OR": [174, 484, 498], "distanc": [174, 219, 288, 307, 317, 337, 340, 341, 342, 410, 494, 498, 507], "ngts2": 174, "nset": [174, 211, 441], "nalia": 174, "rod": [174, 285, 288, 289, 317, 330, 484, 487, 498, 502, 505], "nbank": 174, "bank": 174, "channel": [174, 503, 507], "llchn": 174, "llrod": 174, "mmesh": 174, "nvari": 174, "maxbrn": 174, "maxord": 174, "labeldata": 174, "labelstream": 174, "moment": [175, 178, 190, 322, 491], "nhfluxdata": 175, "nfluxstream": 175, "numdatasetstoread": 175, "reader": [175, 178, 181, 182, 311, 369, 403, 442, 454, 455, 487], "v11": 175, "incomingpointerstoallassembli": 175, "geodstcoordmap": 175, "externalcurrentpoint": 175, "boundari": [175, 183, 252, 285, 293, 318, 330, 331, 334, 335, 336, 339, 342, 354, 361, 364, 442, 498, 505, 507], "outgoingpcsymsecpoint": 175, "outpgo": 175, "sector": 175, "ingoingpcsymsecpoint": 175, "ingo": 175, "fluxmomentsal": 175, "jth": 175, "planar": [175, 505, 507], "pariti": 175, "partialcurrentshexal": 175, "partialcurrentshex_extal": 175, "adjac": [175, 190, 498], "partialcurrentszal": 175, "upward": [175, 487], "downward": 175, "rebu": [175, 484, 498], "2014": [175, 443], "palmiotti": 175, "lewi": 175, "carrico": 175, "variat": [175, 259, 283, 288, 455], "anisotrop": 175, "multidimension": 175, "il": 175, "shemon": 175, "1127298": 175, "anlpub": 175, "04": [175, 247, 301, 449, 462, 465, 471, 478, 479, 481, 484, 492, 496], "78313": 175, "naflux": 175, "setter": [175, 330, 344, 347, 362, 375], "radial": [175, 252, 284, 285, 289, 310, 318, 319, 330, 331, 333, 335, 343, 492, 494, 497, 499, 502, 503, 505, 506], "conflict": [175, 394, 484, 485, 494, 507, 514], "_readwrit": 175, "sassi": [175, 331, 503], "adjointflag": [175, 178], "variantflag": 175, "mc23": 176, "changho": 176, "jung": 176, "yeon": 176, "sang": 176, "yang": 176, "sik": 176, "2018": [176, 413], "1483949": 176, "xslib": [176, 455], "pwr": 177, "pwdint2": 177, "rtflux2": 178, "adjointflux": 178, "ng": [178, 254, 261, 311, 503], "fd": [178, 288], "rzflux2": 179, "itp": 179, "test_initwithfilemod": [180, 181], "test_writeandreadsimpleintegerrecord": [180, 181], "test_writeandreadsimplefloatrecord": [180, 181], "test_writeandreadsimplestringrecord": [180, 181], "test_notreadinganentirerecordraisesexcept": [180, 181], "test_readingbeyondrecordraisesexcept": [180, 181], "binarywritepath": [180, 182], "asciiwritepath": [180, 182], "test_librarydata": [180, 182], "test_regionprimaryx": [180, 182], "test_totalscattermatrix": [180, 182], "test_binaryrw": [180, 182], "test_asciirw": [180, 182], "test_mergecompxslibrari": [180, 182], "test_getcompxsfilenam": [180, 182], "test__rwfileid": [180, 183], "test__rwfile1drecord": [180, 183], "test__rw2drecord": [180, 183], "test__rw3drecord": [180, 183], "test__rw4drecord": [180, 183], "test__rw5drecord": [180, 183], "test_writebinari": [180, 183, 186, 188], "test_empty4and5record": [180, 183], "test_decayconst": [180, 184], "test_chi_delai": [180, 184], "test_chi_delaysumsto1": [180, 184], "test_nudelai": [180, 184], "test_endfvii1decayconst": [180, 184], "test_endfvii1neutronsperfiss": [180, 184], "test_compar": [180, 184, 186], "test_writebinary_mcc3": [180, 184], "test_nuclid": [180, 184, 296, 299], "test_avg": [180, 184], "test_writereadbinaryloop": [180, 185], "test_adddummynuclidestolibrari": [180, 186], "test_readgeodst": [180, 187, 192], "test_writegeodst": [180, 187, 192], "test_isotxsgeneraldata": [180, 188], "test_isotxsdetaileddata": [180, 188], "test_getscatteringweight": [180, 188], "test_getnuclid": [180, 188, 353, 357], "test_n2nisreactionbas": [180, 188], "test_getscatterweight": [180, 188], "test_getisotxsfilenam": [180, 188], "test_getgamisofilenam": [180, 188], "test_mergemccv2filesremovesthefilewidechi": [180, 188], "test_readlabelsbinari": [180, 189], "test_writelabelsascii": [180, 189], "test_fc": [180, 190], "test_fluxmo": [180, 190], "test_xypartialcurr": [180, 190], "test_zpartialcurr": [180, 190], "test_writ": [180, 190, 383, 397], "test_pmatrxnuclidedataaa": [180, 191], "test_pmatrxnuclidedataab": [180, 191], "test_nuclidedataisdiffer": [180, 191], "test_getpmatrxfilenam": [180, 191], "test_pmatrxgammaenergi": [180, 191], "test_pmatrxneutronenergi": [180, 191], "test_pmatrxnuclidenam": [180, 191], "test_pmatrxdoesnthavedoseconversionfactor": [180, 191], "test_writtenisidenticaltoorigin": [180, 191], "test_readrtflux": [180, 193], "test_writertflux": [180, 193], "test_rwascii": [180, 193, 194], "test_adjoint": [180, 193], "test_readrzflux": [180, 194], "test_writerzflux": [180, 194], "vector": [182, 200, 202, 223, 247, 261, 311, 331, 342, 361, 404, 486, 502, 503, 504, 505, 509, 513], "indptr": 182, "correspons": 182, "verifi": [182, 183, 184, 190, 259, 274, 283, 311, 324, 328, 355, 356, 364, 377, 383, 471, 478, 479, 492, 497, 507], "optimum": 183, "overrelax": 183, "rebal": 183, "delayx": 184, "nu": [184, 503], "nndc": 184, "bnl": 184, "robert": 184, "keepin": 184, "comment": [184, 448, 450, 456, 498, 499, 507], "subtract": [190, 288, 305, 341, 355, 356, 504, 507], "xy": [190, 252, 416, 444, 502, 503, 507], "fn1": 194, "fn2": 194, "bytewis": 194, "assist": [195, 223, 383, 484, 485, 486, 497, 514], "rewrit": 195, "scaffold": 195, "overal": [195, 454, 455, 484, 492], "_metadata": 195, "test_generatetotalscatteringmatrix": [196, 197], "test_generatetotalscatteringmatrixwithmissingdata": [196, 197], "test_plotnucx": [196, 197], "test_createmacrosfrommicro": [196, 197], "test_collapsecrosssect": [196, 197], "getvolum": [196, 197, 284, 285, 288, 305, 308, 311, 468, 492, 494], "getnuclidenumberdens": [196, 197, 200, 284, 305, 308, 311], "paramcollectiontyp": [196, 197, 284, 285, 288, 305, 306, 307, 308, 310, 311, 331, 332, 348, 350, 351, 353, 357], "setnumberdens": [196, 197, 284, 305, 308, 311, 484, 492], "testfilenam": [196, 198], "test_canpickleandunpickleisotx": [196, 198], "test_canpickleandunpicklegamiso": [196, 198], "test_canpickleandunpicklepmatrx": [196, 198], "test_comparework": [196, 198], "test_comparedifferentcomponentsofanxslibrari": [196, 198], "test_mergefailswithnonisotxsfil": [196, 198], "test_isotxslibraryattribut": [196, 198], "test_gamisolibraryattribut": [196, 198], "test_pmatrxlibraryattribut": [196, 198], "test_mergexslibrarieswithdifferentdatawork": [196, 198], "test_canwriteisotxsfromcombinedxslibrari": [196, 198], "test_canwritegamisofromcombinedxslibrari": [196, 198], "test_canwritepmatrxfromcombinedxslibrari": [196, 198], "test_getisotxsfileswithoutlibrarysuffix": [196, 198], "test_getisotxsfileswithlibrarysuffix": [196, 198], "assert_contains_onli": [196, 198], "geterrortyp": [196, 198], "getreadfunc": [196, 198], "getwritefunc": [196, 198], "getlibaapath": [196, 198], "getlibabpath": [196, 198], "getlibaa_abpath": [196, 198], "getliblumpedpath": [196, 198], "test_cannotmergexslibwithsamenuclidenam": [196, 198], "test_cannotmergexslibxwithdifferentgroupstructur": [196, 198], "test_mergeemptyxslibwithotheressentiallyclonestheoth": [196, 198], "test_mergetwoxslibfil": [196, 198], "test_canremoveisotop": [196, 198], "test_cannotmergexslibswithdifferentgammagroupstructur": [196, 198], "test_mergeallxslibfil": [196, 198], "test_nuclide_createfromlabelfailsonbadnam": [196, 199], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict": [196, 199], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclid": [196, 199], "test_nuclide_newlabelsdontcausewarn": [196, 199], "test_nuclide_oldlabelscausewarn": [196, 199], "test_nuclide_nuclidebasemethodsshouldnotfail": [196, 199], "test_nuclide_isoaadetail": [196, 199], "test_nuclide_2dxsarrangementiscorrect": [196, 199], "test_nuclide_scatterxsarrangementiscorrect": [196, 199], "test_getmicrox": [196, 199], "test_getx": [196, 199], "inelast": [197, 200, 476], "collaps": [197, 200, 245], "barn": [197, 252, 311, 475, 507], "blockparametercollect": [197, 288, 344, 348], "shouldbether": 198, "shouldnotbether": 198, "nicer": [198, 513], "microscopicxscollect": 200, "microlib": 200, "u235aa": [200, 201], "macrocollect": 200, "blockswithmacro": 200, "nuclidecollect": 200, "displai": [200, 311, 416, 442, 483], "crosssect": 200, "extrem": [200, 413, 455, 497], "efficaci": 200, "survei": 200, "bar": [200, 316, 408, 416, 418, 420, 427, 444, 454, 470], "sigma": [200, 288, 343, 503, 505], "sum_g": 200, "sigma_g": 200, "phi_g": [200, 288], "onegroupx": 200, "relativetoler": [200, 417], "overlap": [200, 237, 288, 311, 314, 317, 330, 355, 480, 484], "attributestoignor": 200, "buildscattermatrix": [200, 261], "buildonlycool": [200, 261], "minimumnuclidedens": [200, 261, 487, 507], "creation": [200, 241, 250, 266, 311, 330, 344, 348, 362, 363, 425, 427, 454, 484, 487, 513], "microlibrari": 200, "blocklist": [200, 240, 252, 256, 284, 289, 291, 331, 478], "libtyp": [200, 261], "gammax": [200, 261], "isotxslib": 200, "4b": 200, "hmg4c": 200, "chi_g": 200, "sum_": [200, 288, 311, 510], "chi_": 200, "n_n": 200, "nu_": 200, "sum_n": 200, "microsuffix": 200, "deposit": [200, 288, 355, 503], "obtain": [200, 220, 240, 288, 311, 318, 331, 348, 355, 400, 410, 484, 498, 503, 510, 511, 513], "bn": [200, 247, 308, 311, 404, 492, 502, 503, 504], "getmicrosuffix": [200, 284, 288, 305, 308, 311], "energydepositionconst": 200, "e_": 200, "generation_fiss": 200, "kappa_f": 200, "sigma_f": 200, "fissionenergyfactor": 200, "joul": [200, 288], "kappa_c": 200, "sigma_c": 200, "getnumberdens": [200, 244, 247, 284, 305, 308, 311, 462, 492], "captureenergyfactor": 200, "constantnam": 200, "multconst": 200, "multlib": 200, "macrogroupconst": 200, "attributenam": 201, "veloc": [201, 256, 494, 503], "nuclabel": 201, "xslibrarysuffix": [201, 256, 257], "xslibfilenam": 201, "doppler": [201, 228, 240, 241, 256, 331, 489, 503, 505, 510], "isoaa": 201, "isoba": 201, "isoca": 201, "n1": 201, "isoab": 201, "n2": [201, 400], "isoda": 201, "mergegammalib": 201, "alternatedirectori": 201, "alphabet": [201, 240, 331, 359, 366, 490], "referencedummynuclid": 201, "_xslibrari": 201, "libisotx": 201, "dose": [201, 212, 252, 483, 484, 503, 505, 507], "scattermatrixkei": [201, 202], "elasticscatt": 201, "_buildscatterweight": 201, "purg": 201, "pu39aa": 202, "xscollectionkei": 202, "containerkei": 202, "homogregion": 202, "scatterweight": 202, "fromg": 202, "gx1": 202, "cannib": 202, "newli": [202, 238, 283, 369, 399, 402, 507], "scattermatrix": 202, "scattertypelabel": 202, "scattermatrix1": 202, "scattermatrix2": 202, "graphic": [202, 402, 483, 485, 494, 507, 514], "chosen": [203, 311, 449, 490, 494, 507, 513], "introduc": [203, 238, 344, 395, 451, 487, 499, 505], "test_operatorsnapshot": [203, 209], "testoperatorsnapshot": [203, 209, 210], "testoperatorsnapshotsset": [203, 209, 210], "test_oper": [203, 209], "interfacea": [203, 209, 211], "interfaceb": [203, 209, 211], "interfacec": [203, 209, 211], "operatortest": [203, 209, 211], "testcreateoper": [203, 209, 211], "cyclessettingstest": [203, 209, 211, 400, 420, 441], "testinterfaceandeventhead": [203, 209, 211], "maxburnstep": [203, 204], "steplength": [203, 204, 400, 512], "cyclelength": [203, 204, 344, 400, 441, 454, 497, 498, 499, 507, 512], "powerfract": [203, 204, 400, 441, 507], "availabilityfactor": [203, 204, 400, 441, 498, 499, 507, 512], "cyclenam": [203, 204, 400], "ateol": [203, 204, 208], "initializeinterfac": [203, 204], "printinterfacesummari": [203, 204], "interactallinit": [203, 204], "interactallbol": [203, 204, 449], "interactallboc": [203, 204], "interactalleverynod": [203, 204], "interactalleoc": [203, 204], "interactalleol": [203, 204], "interactallerror": [203, 204], "removeallinterfac": [203, 204], "removeinterfac": [203, 204], "interfaceisact": [203, 204], "getactiveinterfac": [203, 204], "reattach": [203, 204], "snapshotrequest": [203, 204], "setstatetodefault": [203, 204, 208], "couplingisact": [203, 204, 211], "workerquit": [203, 205], "collapseallstderr": [203, 205], "plant": [204, 483, 484, 497, 507, 512], "orchestr": 204, "piec": [204, 311, 449, 492, 495, 507], "flow": [204, 212, 215, 238, 256, 278, 288, 347, 449, 484, 494, 502, 503, 505, 507], "narr": [204, 457, 482, 500], "topic": [204, 442, 454], "tier": 204, "intra": [204, 400], "durat": [204, 503, 507], "outag": [204, 215, 216, 219, 223, 418, 483, 507, 512], "oserror": 204, "unabl": 204, "ncycl": [204, 211, 400, 441, 498, 499, 507], "mainoper": [204, 449], "interactionnam": 204, "statepointindex": 204, "grep": [204, 497], "leverag": [204, 484], "banner": 204, "excludedinterfacenam": 204, "tn": [204, 240], "couplediter": [204, 505], "lie": [204, 337], "reverseateol": 204, "question": [204, 227, 238, 311, 337, 342, 376, 377, 415, 416, 418, 442, 448, 484, 496, 507], "ephemer": 204, "interfacenam": 204, "wasn": 204, "___": [204, 377, 485, 492, 497, 514], "simpler": [204, 340, 447], "touch": [204, 219, 456, 489], "interactst": 204, "dictat": [204, 214, 331, 451], "activeinterfac": 204, "opportun": [204, 331, 454], "weakref": 204, "network": [204, 214, 311, 483, 507], "updatemassfract": 204, "rerout": 204, "didn": 204, "evolv": [204, 449, 484], "smart": [205, 324, 411], "optim": [205, 220, 256, 288, 310, 322, 331, 484, 497, 507], "_mainoper": 205, "rank": [205, 452, 492, 507], "instruct": [205, 452, 456, 485, 514], "devis": 205, "stderr": [205, 367, 509], "arrang": [205, 295, 335, 449, 483, 484, 507], "deprecationwarn": 207, "disappear": 207, "2025": [207, 490, 492], "rx": [208, 254, 375, 480], "behav": [208, 317, 331, 340, 346, 348, 412, 507], "chrolog": 208, "test_ateol": [209, 210], "test_setstatetodefault": [209, 210, 211], "test_mainoper": [209, 210], "test_createinterfac": [209, 210], "test_createinterfacesdis": [209, 210], "test_getoperatorclassfromset": [209, 210], "test_operatordata": [209, 211], "test_orderedinterfac": [209, 211], "test_addinterfacesubclasscollis": [209, 211], "test_interfaceisact": [209, 211], "test_getactiveinterfac": [209, 211], "test_loadstateerror": [209, 211], "test_snapshotrequest": [209, 211], "test_createoper": [209, 211], "test_getsteplength": [209, 211, 420, 441], "test_couplingisact": [209, 211], "test_performtightcoupling_inact": [209, 211], "test_performtightcoupling_skip": [209, 211], "test_performtightcoupling_notconverg": [209, 211], "test_performtightcoupling_writedb": [209, 211], "test_performtightcoupling_nowritedb": [209, 211], "dbwriteforcoupl": [209, 211], "test_computetightcouplingconverg": [209, 211], "detailedcyclesset": [209, 211, 420, 441], "powerfractionssolut": [209, 211], "cyclenamessolut": [209, 211], "availabilityfactorssolut": [209, 211], "steplengthssolut": [209, 211], "cyclelengthssolut": [209, 211], "burnstepssolut": [209, 211], "maxburnstepssolut": [209, 211], "test_getpowerfract": [209, 211, 420, 441], "test_getcyclenam": [209, 211, 420, 441], "test_getavailabilityfactor": [209, 211, 420, 441], "test_getcyclelength": [209, 211, 420, 441], "test_getburnstep": [209, 211, 420, 441], "test_getmaxburnstep": [209, 211, 420, 441], "test_expandcycleandtimenodeargs_empti": [209, 211], "test_expandcycleandtimenodeargs_cycl": [209, 211], "test_expandcycleandtimenodeargs_everynod": [209, 211], "test_expandcycleandtimenodeargs_coupl": [209, 211], "interactal": 211, "fakedirlist": 211, "fakecopi": 211, "conf_tight_coupl": 211, "_performtightcoupl": 211, "conf_cycles_skip_tight_coupling_interact": 211, "address": [211, 228, 289, 344, 450, 492], "accour": 211, "WILL": [211, 322], "writedb": 211, "greater": [211, 288, 305, 410], "prescrib": [211, 315, 444, 499, 510], "previterkeff": 211, "curriterkeff": 211, "nmetadata": [211, 441], "1000000000": [211, 441, 498, 499], "r4": [211, 441], "cyclenodeinfo": 211, "vast": 212, "fairli": [212, 214, 499, 507], "ve": [212, 351, 484, 492, 494, 507], "reprocess": [212, 483], "accid": [212, 228, 484], "drop": [212, 311, 375, 400, 411, 419, 454], "econom": [212, 449, 484, 512], "cost": [212, 455, 484, 512], "estim": [212, 503, 504], "stretch": 212, "supersourceterm": 212, "magwoodsbrain": 212, "assemblyrotationalgorithm": [212, 215, 223, 507], "bureducingassemblyrot": [212, 215, 216, 490], "simpleassemblyrot": [212, 215, 216, 507], "fuelhandlerfactori": [212, 215, 492], "fuelhandlerinterfac": [212, 215, 219, 224, 256, 283], "fuelhandl": [212, 215, 216, 217, 218, 223, 283, 331, 385, 418, 449, 471, 479, 487, 492, 498, 507], "hexassemblyfuelmgmtutil": [212, 215], "getoptimalassemblyorient": [212, 215, 220, 490], "buildringschedul": [212, 215, 220], "buildconvergentringschedul": [212, 215, 220], "getfuelcycleset": [212, 215, 221], "getfuelcyclesettingvalid": [212, 215, 221], "assemblyhasfuelpinpow": [212, 215, 227], "assemblyhasfuelpinburnup": [212, 215, 227], "maxburnuploc": [212, 215, 227], "maxburnupblock": [212, 215, 227], "fuelperformanceopt": [212, 228, 229], "fuelperformanceexecut": [212, 228, 229], "getfuelperformanceparameterdefinit": [212, 228, 230], "fuelperformanceplugin": [212, 228, 231, 235], "definevalid": [212, 228, 232, 275, 279, 494], "applyfueldisplac": [212, 228, 237], "gasconductivitycorrect": [212, 228, 237], "everynod": [212, 238, 256, 266, 449, 490, 507], "firstcouplediter": [212, 238, 259, 266, 507], "fissionproductmodel": [212, 238, 288, 308, 311, 492], "latticephys": [212, 238, 241], "const": [212, 238, 275], "crosssectiongroupmanag": [212, 224, 238, 241, 245, 266, 492], "getxstypenumberfromlabel": [212, 238, 240], "getxstypelabelfromnumb": [212, 238, 240], "blockcollect": [212, 238, 240, 487], "medianblockcollect": [212, 238, 240], "averageblockcollect": [212, 238, 240], "getblocknuclidetemperatur": [212, 238, 240], "getblocknuclidetemperatureavgterm": [212, 238, 240], "cylindricalcomponentsaverageblockcollect": [212, 238, 240, 487], "cylindricalcomponentsducthetaverageblockcollect": [212, 238, 240], "slabcomponentsaverageblockcollect": [212, 238, 240], "fluxweightedaverageblockcollect": [212, 238, 240], "blockcollectionfactori": [212, 238, 240], "crosssectionset": [212, 238], "xsgeometrytyp": [212, 238, 241], "xsset": [212, 238, 240, 241, 507], "xsmodelingopt": [212, 238, 241, 267], "serializexsset": [212, 238, 241], "xssettingdef": [212, 238, 241], "xssettingsvalid": [212, 238, 241], "diffisotx": [212, 238], "compareisotxslibrari": [212, 238, 242], "energygroup": [212, 238, 475], "getfastfluxgroupcutoff": [212, 238, 243], "getgroupstructur": [212, 238, 243, 475], "getgroupstructuretyp": [212, 238, 243], "group_structur": [212, 238, 243], "macroxsgenerationinterfac": [212, 238, 270], "macroxsgener": [212, 238, 261], "getneutronicsparameterdefinit": [212, 238, 262], "insertneutronicsreport": [212, 238, 263], "insertneutronicsbolcont": [212, 238, 263], "neutronicsplot": [212, 238, 263, 454], "insertinitialcorefuelassem": [212, 238, 263], "generatelineplot": [212, 238, 263], "pd_plot": [212, 238, 263], "getneutronicssettingvalid": [212, 238, 264], "test_execut": [212, 228, 233, 273], "mockparam": [212, 273, 274], "mockcor": [212, 251, 253, 254, 273, 274], "testexecutionopt": [212, 273, 274], "testexecut": [212, 273, 274], "getparameterdefinit": [212, 275, 277], "thermalhydraulicsplugin": [212, 275, 278, 281, 490], "fromuserset": [212, 214, 228, 229, 251, 252], "fromreactor": [212, 214, 228, 229, 251, 252, 284, 352, 400, 401], "resolvederivedopt": [212, 214], "setrundirfromcasetitl": [212, 214], "dpa": [213, 252, 254, 285, 454, 487, 502, 503, 505, 507], "executor": 214, "pathwai": [214, 480], "inputfil": 214, "stdin": 214, "outputfil": [214, 413], "extrainputfil": 214, "sourcenam": 214, "destnam": 214, "brought": [214, 219, 283, 288], "rundir": [214, 274], "transit": [214, 334, 451, 484, 491, 494], "extraoutputfil": 214, "executablepath": [214, 413], "workingdir": 214, "savephysicsfil": [214, 252, 487, 507], "dedic": [214, 289], "copyoutput": [214, 487], "applyresultstoreactor": 214, "deliber": [214, 252, 283, 344, 442], "paralleliz": 214, "maxim": [214, 223, 293, 419, 513], "reusabl": [214, 293, 455], "transform": [214, 252, 318, 341, 342, 400, 411, 463, 480], "executeropt": [214, 254], "mine": 215, "dispos": 215, "ex": [215, 295, 332, 350, 393, 413, 426, 486, 490, 507], "chemistri": 215, "handler": [215, 218, 219, 223, 224, 283, 492, 498, 507], "hookspec": [215, 283, 451], "inspect": [215, 231, 238, 278, 283, 377, 490, 497], "test_assemblyrotationalgorithm": [215, 222], "mockfuelhandl": [215, 222, 223], "shuffleandrotatetesthelp": [215, 222, 223], "testoptimalassemblyrot": [215, 222, 223], "testfuelhandlermgmttool": [215, 222, 223], "simplerotationtest": [215, 222, 223], "test_fuelhandl": [215, 222], "fuelhandlertesthelp": [215, 222, 224], "mocklatticephysicsinterfac": [215, 222, 224], "mockxsgm": [215, 222, 224], "testfuelhandl": [215, 222, 224], "testfuelplugin": [215, 222, 224], "addsomedetailassembli": [215, 222, 224], "test_hexassemblyfuelmgmtutil": [215, 222], "testhexassemmgmttool": [215, 222, 225], "test_util": [215, 222, 400, 420], "fuelcycleutilstest": [215, 222, 226], "managefuel": [215, 218, 224], "makeshufflereport": [215, 218, 219], "chooseswap": [215, 219, 222, 223, 383, 385, 498, 507], "prepcor": [215, 219], "findassembli": [215, 219, 224, 492, 507], "isassemblyinazon": [215, 219], "swapassembli": [215, 219, 471, 492], "dischargeswap": [215, 219, 498], "swapcascad": [215, 219], "repeatshufflepattern": [215, 219], "readmov": [215, 218, 219], "trackchain": [215, 219], "processmovelist": [215, 219], "dorepeatshuffl": [215, 219, 331], "prepshufflemap": [215, 219], "makeshufflearrow": [215, 219], "rotat": [216, 219, 220, 223, 227, 252, 284, 285, 288, 307, 340, 354, 361, 410, 412, 428, 480, 490, 502, 503, 505, 506, 507], "fh": [216, 224, 492], "lowest": [216, 220, 223, 243, 285, 331, 400, 471, 492, 507], "orient": [216, 220, 285, 288, 315, 340, 361, 401, 410, 428, 455, 472, 483, 492, 502, 503, 505, 513], "stationari": [216, 224, 333, 507], "isotrop": 216, "txt": [218, 219, 224, 331, 507], "fuelhandlernam": [219, 498, 507], "decis": [219, 245, 341, 454], "supervisori": 219, "movelist": [219, 490], "shufflefactor": 219, "aux": 219, "targetr": [219, 331], "compareto": [219, 492, 507], "forcesid": 219, "mandatoryloc": 219, "zonelist": 219, "excludedloc": 219, "minparam": 219, "minval": [219, 319, 412], "maxparam": 219, "maxval": [219, 311, 319], "findmani": [219, 224], "coord": [219, 284, 285, 288, 363, 489, 492, 494], "exacttyp": [219, 331], "acceptfirstcandidat": 219, "blocklevelmax": [219, 492], "findfromsfp": 219, "maxnumassem": 219, "circularringflag": 219, "criterion": [219, 471], "had": [219, 344, 407, 408, 442, 487, 507], "bob": [219, 419, 452], "ye": [219, 449, 455, 492], "timetolimit": [219, 502, 503], "pick": [219, 331, 418, 447, 484, 492, 507, 513], "assembi": [219, 295], "ignit": [219, 284, 288, 333, 505, 507], "earliest": 219, "maxbu": 219, "candid": [219, 240, 311, 376, 471], "maxburnup": 219, "toggl": [219, 344, 507], "gotten": 219, "valuabl": [219, 456, 505], "reconsid": [219, 229], "assemlist": 219, "feed": [219, 223, 284, 288, 331, 333, 404, 484, 505, 507, 512], "discharg": [219, 220, 331, 351, 502, 507], "goingout": 219, "inter1": 219, "inter2": 219, "goingin": 219, "art": 219, "explicitrepeatshuffl": [219, 507], "casenam": 219, "oldloc": [219, 331], "newloc": [219, 331], "enrichlist": [219, 331], "assemtyp": [219, 283, 285, 318, 331], "bottom": [219, 252, 285, 288, 314, 324, 331, 336, 337, 341, 342, 344, 347, 354, 401, 437, 492, 494, 498, 499, 502, 503, 505, 507], "startingat": 219, "alreadydon": 219, "mont": [219, 245, 484], "carlo": [219, 245, 484], "fromloc": 219, "toloc": 219, "assemnam": [219, 331, 343], "loadnam": 219, "charg": [219, 220, 487, 502], "movingassemnam": 219, "loadchain": 219, "loadqueu": [219, 285], "loopchain": 219, "loadchargetyp": 219, "movement": [219, 331], "maneuv": [219, 416], "arrow": [219, 416, 480, 507], "currentcoord": 219, "oldcoord": 219, "aprev": 220, "peak": [220, 252, 263, 288, 330, 416, 454, 484, 487, 498, 503, 505, 507], "hexgrid": [220, 284, 317, 335, 340, 354, 470, 472, 489, 513], "rotateindex": [220, 335, 340], "getpincoordin": [220, 284, 288, 361, 490, 513], "linpowbypin": [220, 223, 288, 361, 503, 513], "site": [220, 223, 513], "assumpt": [220, 240, 256, 285, 288, 317, 322, 331, 487, 507, 511, 513], "plausibl": 220, "pi": [220, 285, 288, 307, 317, 444, 464, 471, 472, 474, 480, 498], "counterclockwis": [220, 288, 331, 340, 502, 503, 505], "insuffici": 220, "maxringincor": 220, "charger": 220, "jumpringfrom": 220, "jumpringto": 220, "coarsefactor": 220, "combo": [220, 294, 452], "jumpr": [220, 505, 507], "scheme": [220, 456, 507], "jump": [220, 455, 505, 507], "sublist": [220, 411], "subcas": 220, "baselist": [220, 256], "enter": [220, 305, 311, 498, 502, 507], "outermost": [220, 288], "hit": [220, 324, 355, 484], "rj": 220, "rd": 220, "ringschedul": 220, "ringwidth": 220, "getnumr": [220, 284, 331], "innermost": [220, 288, 492], "conwidth": 220, "n_pin": [222, 223, 226], "ensureblockhasspatialgrid": [222, 223], "setassemblypinburnup": [222, 223], "setassemblypinpow": [222, 223], "powerwithminvalu": [222, 223], "burnupwithmaxvalu": [222, 223], "comparemockedtoexpectedrot": [222, 223], "test_flatpowernorot": [222, 223], "test_maxburnupatcenternorot": [222, 223], "test_oppositerot": [222, 223], "test_noblockswithburnup": [222, 223], "test_mismatchpinpowersandloc": [222, 223], "test_burotationwithfreshfe": [222, 223], "test_burotationwithstationaryrot": [222, 223], "test_rotateinshufflequeu": [222, 223], "test_simpleassemblyrot": [222, 223], "test_getparammax": [222, 224], "test_findhighbu": [222, 224], "test_outag": [222, 224], "test_outageedgecas": [222, 224], "test_isassemblyinazon": [222, 224], "test_width": [222, 224], "test_findmani": [222, 224], "test_findinsfp": [222, 224], "test_findbycoord": [222, 224], "test_findwithminmax": [222, 224], "runshuffl": [222, 224], "test_repeatshuffl": [222, 224], "test_readmov": [222, 224], "test_processmovelist": [222, 224], "test_getfactorlist": [222, 224], "test_linpowbypin": [222, 224], "test_linpowbypinneutron": [222, 224], "test_linpowbypingamma": [222, 224], "test_transferstationaryblock": [222, 224], "test_transferdifferentnumberstationaryblock": [222, 224], "test_transferunalignedlocationstationaryblock": [222, 224], "test_transferincompatibleheightstationaryblock": [222, 224], "test_dischargeswap": [222, 224], "test_dischargeswapincompatiblestationaryblock": [222, 224], "test_getassembliesinr": [222, 224], "test_settingsarediscov": [222, 224], "test_buildconvergentringschedul": [222, 225], "test_buildringschedul": [222, 225], "test_maxburnuplocationfromcompon": [222, 226], "test_singlelocatorwithburnup": [222, 226], "test_maxburnuplocatorwithnoburnup": [222, 226], "test_maxburnuplocatormismatcheddata": [222, 226], "test_assemblyhaspinpow": [222, 226], "test_assemblyhaspinburnup": [222, 226], "test_maxburnupblock": [222, 226], "test_maxburnupblocknoblock": [222, 226], "test_maxburnupblocknoburnup": [222, 226], "169": [223, 226, 300, 301, 361, 507], "spatial": [223, 227, 241, 285, 288, 293, 311, 317, 332, 335, 339, 342, 351, 354, 355, 416, 449, 484, 486, 487, 490, 492, 498, 502, 503, 505, 506, 507], "pinpow": 223, "prep": [223, 229, 252], "minindex": [223, 412], "maxindex": 223, "nrotat": 223, "mrotat": 223, "suggest": [223, 344, 376, 377, 446, 507], "180": [223, 361, 480, 498], "pinpercentbu": [223, 226, 227, 504], "examin": [223, 294, 318, 331, 507], "ccw": [223, 340, 412], "latticephysicsinterfac": [224, 238, 241, 245, 255, 259, 507], "mockgetsymmetri": 224, "mockchooseswap": 224, "repeatshuffl": 224, "_transferstationaryblock": 224, "unalign": [224, 330], "unequ": 224, "hist": 224, "indiffer": 226, "geometr": [227, 240, 288, 289, 308, 339, 483, 484, 486, 492, 498, 507, 508, 513], "phenomena": [228, 511], "lwr": [228, 467, 471, 482, 483, 486, 487, 498, 499, 500, 507, 513], "triso": [228, 292], "degrad": 228, "fcci": [228, 505], "eros": 228, "fcmi": 228, "stress": [228, 254, 483], "gase": 228, "feedback": [228, 331, 484, 487, 503, 510], "absorb": [228, 330, 498, 503, 505], "influenc": [228, 342], "bond": [228, 237, 284, 308, 325, 333, 357, 492, 498, 503, 507], "squeez": 228, "impact": [228, 245, 285, 311], "testfuelperformanceopt": [228, 233, 234], "test_fuelperformanceplugin": [228, 233], "testfuelperformanceplugin": [228, 233, 235], "test_fuelperformanceutil": [228, 233], "testfuelperformanceutil": [228, 233, 236], "subpackag": [229, 306, 383, 445, 449, 480, 494], "hope": [229, 262, 334, 484, 495], "parameterdefinitioncollect": [230, 262, 277, 283, 284, 285, 288, 305, 306, 307, 308, 310, 311, 330, 331, 344, 346, 347, 348, 350, 357, 362, 394], "test_fuelperformanceopt": [233, 234], "test_applyfueldisplac": [233, 236], "test_gasconductivitycorrection_morph0": [233, 236], "test_gasconductivitycorrection_morph1": [233, 236], "test_gasconductivitycorrection_morph2": [233, 236], "test_gasconductivitycorrection_morph3": [233, 236], "test_gasconductivitycorrection_morph4": [233, 236], "displacementincm": 237, "radiu": [237, 288, 305, 310, 317, 331, 343, 355, 364, 472], "conserv": [237, 252, 285, 288, 308, 312, 315, 317, 318, 324, 328, 330, 355, 356, 464, 487, 489, 494, 505, 507], "buffer": [237, 292], "prime": [237, 308, 330], "tempinc": [237, 468], "poros": [237, 495], "morphologi": 237, "pore": [237, 503], "irregular": [237, 339, 507], "conservat": 237, "bauer": 237, "spheric": [237, 310, 492], "660": [237, 492], "maxwel": 237, "eucken": 237, "source1": 237, "pile": 237, "holland": 237, "407": 237, "source2": 237, "ondracek": 237, "schulz": 237, "1973": 237, "258": 237, "encompass": [238, 307], "temporarili": [238, 311, 418, 509], "untangl": 238, "dbload": [238, 283, 331, 399, 494], "intenum": 238, "frequenc": [238, 256, 259, 266, 484, 507], "c0n0": 238, "n0": 238, "fissionproductmodelset": [238, 244], "getfissionproductmodelsettingvalid": [238, 244, 246], "lumpedfissionproductcollect": [238, 244, 247], "fissionproductdefinitionfil": [238, 244, 247], "lumpedfissionproductfactori": [238, 244, 247], "isga": [238, 244, 247], "globalfluxinterfaceusingexecut": [238, 251, 252, 254], "globalfluxopt": [238, 251, 252, 254, 330], "globalfluxexecut": [238, 251, 252, 254], "globalfluxresultmapp": [238, 251, 252], "computedpar": [238, 251, 252], "calcreactionr": [238, 251, 252, 330], "setblockneutronveloc": [238, 255, 256], "latticephysicswrit": [238, 255, 260], "test_crosssectionmanag": [238, 265], "testblockcollect": [238, 265, 266], "testblockcollectionmedian": [238, 265, 266], "testblockcollectionaverag": [238, 265, 266], "testcomponentaverag": [238, 265, 266], "testblockcollectioncomponentaverag": [238, 265, 266], "testblockcollectioncomponentaverage1dcylind": [238, 265, 266], "testblockcollectionfluxweightedaverag": [238, 265, 266], "testcrosssectiongroupmanag": [238, 265, 266], "testcrosssectiongroupmanagerwithtempgroup": [238, 265, 266], "testxsnumberconvert": [238, 265, 266], "makeblock": [238, 265, 266], "test_crosssectionset": [238, 265], "testcrosssectionset": [238, 265, 267], "testxsset": [238, 265, 267], "test_crosssectiont": [238, 265], "testcrosssectiont": [238, 265, 268], "test_energygroup": [238, 265], "testenergygroup": [238, 265, 269], "test_macroxsgenerationinterfac": [238, 265], "testmacroxsgenerationinterfac": [238, 265, 270], "test_neutronicsplugin": [238, 265], "testneutronicsplugin": [238, 265, 271], "neutronicsreactortest": [238, 265, 271], "createrepresentativeblock": [238, 240], "calcavgnuclidetemperatur": [238, 240], "getweight": [238, 240], "getcandidateblock": [238, 240], "clearrepresentativeblock": [238, 240], "xstypeispregener": [238, 240], "fluxsolutionispregener": [238, 240], "createrepresentativeblocksusingexistingblock": [238, 240], "getnextavailablexstyp": [238, 240], "makecrosssectiongroup": [238, 240], "disableenvgroupupd": [238, 240], "enableenvgroupupd": [238, 240], "getnuctemperatur": [238, 240], "updatenuclidetemperatur": [238, 240], "zero_dimension": [238, 241], "one_dimensional_slab": [238, 241], "one_dimensional_cylind": [238, 241], "two_dimensional_hex": [238, 241], "getstr": [238, 241], "setdefault": [238, 241, 267], "envgroup": [238, 241, 288, 489, 503], "xsispregener": [238, 241], "fluxispregener": [238, 241], "buildmacro": [238, 261], "circular": [239, 288, 305, 307, 331, 355, 486, 487, 507], "sent": [240, 283, 452, 507], "csm": 240, "_setbugroupbound": 240, "bugroup": [240, 418, 454, 489, 498, 499, 507], "_settempgroupbound": 240, "tempgroup": [240, 241, 507], "_addxsgroupsfromblock": 240, "representativeblocklist": 240, "representativeblock": [240, 256, 257, 487], "blockthatrepresentsba": 240, "xsgm": [240, 266], "xstypelabel": 240, "xtview": [240, 318, 483, 486], "xstypenumb": 240, "allnuclidesinproblem": [240, 245, 353, 357], "validblocktyp": [240, 241], "averagebycompon": [240, 241, 266], "best": [240, 252, 312, 331, 412, 448, 451, 452, 453, 454, 456, 484, 495, 503, 507], "n_i": [240, 261, 308, 311, 330], "v_i": 240, "t_i": 240, "reflector": [240, 284, 285, 318, 333, 449, 478, 492, 497, 499], "leakag": [240, 505], "median": [240, 503, 505, 507], "accur": [240, 245, 256, 285, 311, 418, 443, 463, 486], "allnucnam": 240, "denomin": 240, "trace": [240, 241, 308, 357, 453, 499, 507], "cylindr": [240, 241, 266, 317, 463, 487], "opinion": [240, 317], "slab": 240, "forese": 240, "xsgroup": [240, 471, 478, 479, 492, 509], "originalrepresentativeblock": 240, "remain": [240, 285, 288, 311, 317, 318, 334, 342, 404, 446, 471, 484, 507], "unperturb": [240, 505], "blockcollectionbyxsgroup": 240, "modifiedreprblock": 240, "origxsidsfromnew": 240, "howmani": [240, 266], "excludedxstyp": 240, "unrepres": 240, "env": [240, 492, 497, 513], "avgnuctemperatur": 240, "arug": 240, "carri": [241, 374, 399, 442, 484], "0d": 241, "blockrepresent": [241, 267], "past": [241, 318, 344, 366, 380, 442, 449, 451, 455, 484, 494, 507], "block_collect": 241, "xsfileloc": [241, 267], "fluxfileloc": 241, "driverid": 241, "criticalbuckl": 241, "nuclidereactiondriv": 241, "externaldriv": 241, "usehomogenizedblockcomposit": 241, "numinternalr": [241, 317], "numexternalr": [241, 317, 463], "mergeintoclad": [241, 317], "mergeintofuel": [241, 317], "meshsubdivisionspercm": 241, "xsexecuteexclus": 241, "xsprioriti": 241, "xsmaxatomnumb": 241, "mindriverdens": 241, "ductheterogen": [241, 317, 463], "traceisotopethreshold": 241, "xstempisotop": 241, "subcrit": 241, "buckl": [241, 507], "gap": [241, 284, 288, 311, 325, 333, 355, 356, 463, 478, 492, 497, 498, 499, 503, 507, 513], "subregion": 241, "prioriti": [241, 320, 321, 484], "dilut": [241, 257, 507], "basi": [241, 256, 318, 341, 484, 498], "dehomogen": 241, "heterogen": [241, 266, 308, 317, 463, 507], "domin": [241, 311], "templat": [241, 314], "char": [241, 412], "conf_xsid": 241, "mutual": [241, 293, 334, 366, 484], "tune": [241, 412], "xssettingsdict": 241, "coerc": [241, 374, 380], "egrpstruc": 243, "descend": 243, "propag": [243, 375], "neutronenergyboundsinev": 243, "test_fissionproductmodel": [244, 248], "testfissionproductmodellumpedfissionproduct": [244, 248, 249], "testfissionproductmodelexplicitmc2librari": [244, 248, 249], "testfissionproductmodelexplicitmc2libraryslow": [244, 248, 249], "test_lumpedfissionproduct": [244, 248], "getdummylfpfil": [244, 248, 250], "testfissionproductdefinitionfil": [244, 248, 250], "testlumpedfissionproduct": [244, 248, 250], "testlumpedfissionproductcollect": [244, 248, 250], "testlumpedfissionproductsfromreferencefil": [244, 248, 250], "testlumpedfissionproductsexplicit": [244, 248, 250], "testmo99lfp": [244, 248, 250], "setallcomponentfissionproduct": [244, 245], "setallblocklfp": [244, 245], "getgloballumpedfissionproduct": [244, 245], "setgloballumpedfissionproduct": [244, 245], "getallfissionproductnam": [244, 245, 247], "removefissiongasesfromblock": [244, 245], "getgaseousyieldfract": [244, 247], "gettotalyield": [244, 247], "getmassfracdenom": [244, 247], "getlumpedfissionproductnam": [244, 247], "getallfissionproductnuclidebas": [244, 247], "createlfpsfromfil": [244, 247], "createsinglelfpfromfil": [244, 247], "inventori": [245, 404], "substanti": [245, 288], "lfp35": [245, 247, 301, 492], "lfp39": [245, 247, 301, 492], "lfp40": [245, 301, 492], "lfp41": [245, 301, 492], "fpmodel": [245, 507], "lfp": [245, 247, 288, 294, 308, 311], "casmo": 245, "referencefissionproduct": [245, 250], "dat": [245, 250, 507], "nuclideflag": [245, 284, 289, 294, 478, 507], "quick": [245, 252, 356, 448, 457, 482, 485, 494, 500, 507, 514], "aim": [245, 401, 484], "fpmodellibrari": [245, 507], "autoupdatenuclideflag": [245, 284, 289, 294], "vision": 245, "origen": [245, 507], "caveat": [245, 407, 455, 507], "box": [245, 283, 472], "autofil": 245, "getallnuclidebasesbylibrari": [245, 284, 289, 294], "setlumpedfissionproduct": [245, 284, 305, 308, 311], "isotopicdeplet": [245, 292, 489], "depletioninterfac": 245, "buildfissionproduct": 245, "getlumpedfissionproductcollect": [245, 247, 284, 288, 305, 308, 311], "fp": [247, 249, 250], "yld": 247, "fpd": 247, "eu151": 247, "9773e": 247, "objectwithparentdens": 247, "densfunc": 247, "fpdensiti": 247, "oldmassfrac": 247, "ge73": 247, "9000e": 247, "ge74": 247, "4000e": 247, "ge76": 247, "6000e": 247, "as75": 247, "lfpcompositionfilepath": [247, 507], "test_loadgloballfpsfromfil": [248, 249], "test_getallfissionproductnam": [248, 249, 250], "test_fpappl": [248, 249], "test_nuclideflag": [248, 249, 296, 299], "test_nuclidesinmodelfuel": [248, 249], "test_nuclidesinmodelalldepletableblock": [248, 249], "test_createlfp": [248, 250], "test_createreferencelfp": [248, 250], "test_getyield": [248, 250], "test_gaseousyieldfract": [248, 250], "test_isga": [248, 250], "test_getallfissionproductnuclidebas": [248, 250], "test_getnumberdens": [248, 250, 353, 355, 356, 357], "test_getmassfrac": [248, 250], "test_fissionproductyield": [248, 250], "test_explicitfissionproduct": [248, 250], "faster": [249, 288, 289, 311, 316, 331, 344, 382], "slower": [249, 497, 507], "lumpedfissionproduc": 250, "explicitfissionproduct": [250, 487, 507], "mo99": [250, 507], "test_globalfluxinterfac": [251, 253], "mockcoreparam": [251, 253, 254], "mockglobalfluxinterfac": [251, 253, 254], "mockglobalfluxwithexecut": [251, 253, 254], "mockglobalfluxwithexecutersnonuniform": [251, 253, 254], "mockglobalfluxexecut": [251, 253, 254], "testglobalfluxopt": [251, 253, 254], "testglobalfluxinterfac": [251, 253, 254], "testglobalfluxinterfacewithexecut": [251, 253, 254], "testglobalfluxinterfacewithexecutersnonuniform": [251, 253, 254], "testglobalfluxresultmapp": [251, 253, 254], "testglobalfluxutil": [251, 253, 254], "applydummyflux": [251, 253, 254], "checkenergybal": [251, 252], "getiofilenam": [251, 252], "calculatekeff": [251, 252], "getoptionscl": [251, 252], "getexecutercl": [251, 252, 253, 254], "getexecuteropt": [251, 252, 253, 254], "getexecut": [251, 252], "getlabel": [251, 252, 335, 339, 340], "edgeassembliesareneed": [251, 252], "getkeff": [251, 252], "clearflux": [251, 252], "getdpax": [251, 252], "getburnuppeakingfactor": [251, 252], "updatedpar": [251, 252], "updatemaxdpaparam": [251, 252], "versu": [252, 489], "tightli": [252, 505, 513], "coupledit": 252, "additionallabel": 252, "stdname": 252, "eigenvalu": [252, 330, 505, 507], "interoper": 252, "myriad": 252, "blank": [252, 375, 401, 456, 498, 503], "calc": [252, 254, 330, 356, 413], "calcreactionratesonmeshconvers": 252, "recalcul": [252, 288, 330], "remap": [252, 330], "eigenvalueproblem": 252, "includefixedsourc": 252, "eig": 252, "fredholm": 252, "satisfi": [252, 283, 311, 334, 335, 483], "uniform": [252, 254, 285, 288, 289, 293, 307, 315, 318, 319, 324, 329, 330, 331, 342, 347, 468, 486, 487, 503, 505, 507], "aclpdoselimit": [252, 507], "detailedaxialexpans": [252, 315, 324, 329, 330, 331, 344, 347, 396, 487, 507], "dpaperflu": [252, 503, 507], "dirti": [252, 507], "dpapeak": [252, 507], "fastfluencepeak": [252, 503, 507], "energydepocalcmethodstep": 252, "epseigenvalu": 252, "epsfissionsourceavg": 252, "epsfissionsourcepoint": 252, "rz": [252, 284, 285, 318, 327, 334, 364, 461, 465, 482, 484, 486, 500], "rzt": [252, 284, 318, 331, 334, 335, 342, 364], "hasnonuniformassem": 252, "isrestart": 252, "guess": [252, 412, 442, 507], "kernelnam": 252, "loadpadelev": [252, 507], "elev": [252, 285, 416, 499, 502, 507], "aclp": [252, 284, 324, 333, 505, 507], "plate": [252, 285, 331, 335, 483, 494, 498, 505, 507], "loadpadlength": [252, 507], "maxout": 252, "savephysicsfileslist": 252, "timestamp": [252, 507], "xskernel": [252, 507], "pn": 252, "edg": [252, 288, 311, 318, 324, 326, 330, 331, 344, 346, 347, 363, 397, 401, 437, 484, 490, 503, 507], "unifi": [252, 324, 342], "pipe": [252, 367, 494], "delta": [252, 363, 494, 495, 502, 503, 511], "burnuppeakingfactor": [252, 507], "avg": [252, 331, 412, 494, 505, 507], "updatefluenceanddpa": 252, "mgflux": [252, 262, 288, 311, 330, 470, 492, 494, 503], "dpax": 252, "incur": 252, "exposur": 252, "convolut": 252, "dpapersecond": 252, "nusigf": 252, "test_readfromset": [253, 254], "test_readfromreactor": [253, 254], "test_savephysicsfil": [253, 254], "test_computedpar": [253, 254], "test_interact": [253, 254], "test_getiofilenam": [253, 254], "test_gethistoryparam": [253, 254], "test_checkenergybal": [253, 254], "test_executerinteract": [253, 254], "test_calculatekeff": [253, 254], "test_getexecutercl": [253, 254], "test_settightcouplingdefault": [253, 254], "test_gettightcouplingvalu": [253, 254], "test_executerinteractionnonuniformassem": [253, 254], "test_mapp": [253, 254], "test_getdpax": [253, 254], "test_getburnuppeakingfactor": [253, 254], "test_getburnuppeakingfactorzero": [253, 254], "test_calcreactionr": [253, 254], "fake": [254, 324, 396, 492, 513], "gf": 254, "pcm": [254, 505, 507], "reli": [254, 305, 316, 339, 342, 470, 499], "swing": [254, 505], "observ": 254, "mockgeometrytransform": 254, "mockexecut": 254, "mockconverterfactori": 254, "broad": [254, 256, 487, 494, 507, 509], "test_latticeinterfac": [255, 258], "latticeinterfacetest": [255, 258, 259], "latticeinterfacetesterlibfals": [255, 258, 259], "testlatticephysicsinterfacebas": [255, 258, 259], "testlatticephysicsinterfac": [255, 258, 259], "testlatticephysicslibrarycr": [255, 258, 259], "test_latticewrit": [255, 258], "fakelatticephysicswrit": [255, 258, 260], "testlatticephysicswrit": [255, 258, 260], "updatexslibrari": [255, 256], "readexistingxslibrari": [255, 256, 258, 259], "makecyclexsfilesasbasefil": [255, 256], "clearx": [255, 256, 507], "computecrosssect": [255, 256], "generatelatticephysicsinput": [255, 256], "getwrit": [255, 256], "getread": [255, 256], "getrepresentativeblock": [255, 256], "unused_categori": [255, 257], "fuel_categori": [255, 257], "structure_categori": [255, 257], "coolant_categori": [255, 257], "fission_product_categori": [255, 257], "undeplet": [255, 257], "inf_dilut": [255, 257], "neutronveloc": 256, "mgneutronveloc": [256, 503], "genx": [256, 498, 499, 507], "runlatticephysicsbeforeshuffl": 256, "weather": 256, "regener": [256, 331, 499, 507], "_is_": 256, "reson": 256, "lifetim": [256, 505, 510], "forceseri": 256, "book": [256, 456], "xswriter": 256, "bc": 256, "returnedfromwrit": 256, "agent": 256, "cyclic": [256, 406, 505], "seek": 257, "generateexclusivegammax": 257, "inf": [257, 496, 510], "test_includegammax": [258, 259], "test_latticephysicsinterfac": [258, 259], "test_interacteverynodewhencoupl": [258, 259], "test_interacteverynodewhencoupledbutnot": [258, 259], "test_interacteverynodefirstcoupl": [258, 259], "test_interacteverynodeal": [258, 259], "test_interactfirstcouplediter": [258, 259, 265, 266], "test_interactal": [258, 259], "test_getsuffix": [258, 259], "test_libcreation_nogenx": [258, 259], "test_libcreation_genx": [258, 259], "test_libcreation_nogenxs_2": [258, 259], "test_libcreation_genxs_2": [258, 259], "test_libcreation_genxs_3": [258, 259], "test_setblockneutronveloc": [258, 260], "test_latticephysicswrit": [258, 260], "test_writetitl": [258, 260], "test_issourcedriven": [258, 260], "test_isgammaxsgenerationen": [258, 260], "test_getallnuclidesbytemperatureincnon": [258, 260], "test_getallnuclidesbytemperatureinc": [258, 260], "test_getallnuclidesbytemperatureincexplicitfissionproduct": [258, 260], "test_getavgnuclidetemperatureinc": [258, 260], "test_getfueltemperatur": [258, 260], "test_getdetailedfissionproduct": [258, 260], "test_getdetailedfissionproductspass": [258, 260], "test_getdetailedfpdens": [258, 260], "test_iscriticalbucklingsearchact": [258, 260], "test_getdriverblock": [258, 260], "_newlibraryshouldbecr": 259, "flip": 259, "testverif": 259, "gen": [259, 266], "sigma_i": 261, "interactxyz": 261, "macroxsgen": 261, "blistsom": 261, "gxg": 261, "fluxrecon": [261, 507], "computepinmgfluxandpow": 261, "denot": [263, 454], "addtion": 263, "subsectionhead": 263, "areal": [263, 505, 509], "test_add": [265, 266, 353, 354, 355, 358, 363], "test_getblocksingroup": [265, 266], "test_is_pickl": [265, 266], "test_createrepresentativeblock": [265, 266], "test_getblocknuclidetemperatur": [265, 266], "test_performaveragebycompon": [265, 266], "test_checkblocksimilar": [265, 266], "test_createrepresentativeblockdissimilar": [265, 266], "test_getaveragecomponentnumberdens": [265, 266], "test_getaveragecomponenttemperatur": [265, 266], "test_getaveragecomponenttemperaturevariedweight": [265, 266], "test_getaveragecomponenttemperaturenomass": [265, 266], "test_componentaveragerepblock": [265, 266], "test_componentaverage1dcylind": [265, 266], "test_componentaverageducthet1dcylind": [265, 266], "test_checkcomponentconsist": [265, 266], "test_invalidweight": [265, 266], "test_enableenvgroupupd": [265, 266], "test_disableenvgroupupd": [265, 266], "test_updateburnupgroup": [265, 266], "test_setbugroupbound": [265, 266], "test_settempgroupbound": [265, 266], "test_addxsgroupsfromblock": [265, 266], "test_calcweightedburnup": [265, 266], "test_getnextavailablexstyp": [265, 266], "test_getrepresentativeblock": [265, 266], "test_createrepresentativeblocksusingexistingblock": [265, 266], "test_createrepresentativeblocksusingexistingblocksdisablevalidblocktyp": [265, 266], "test_interactallcoupl": [265, 266], "test_xsgmisrunbeforex": [265, 266], "test_copypregeneratedfil": [265, 266], "test_updateenvironmentgroup": [265, 266], "test_convers": [265, 266], "test_conversion_2digit": [265, 266], "test_crosssect": [265, 267], "test_pregeneratedcrosssect": [265, 267], "test_pregeneratedfluxinput": [265, 267], "test_priorit": [265, 267], "test_homogeneousxsdefaultsettingassign": [265, 267], "test_setdefaultsettingsbylowestenvgrouphomogen": [265, 267], "test_setdefaultsettingsbylowestenvgrouponedimension": [265, 267], "test_optionalkei": [265, 267], "test_badcrosssect": [265, 267], "test_yamlio": [265, 267, 353, 360], "test_caseset": [265, 267], "test_csblockrepresent": [265, 267], "test_csblockrepresentationfileloc": [265, 267], "test_xssettingssetdefault": [265, 267], "test_maket": [265, 268], "test_isotopicdepletioninterfac": [265, 268], "test_invalidgroupstructuretyp": [265, 269], "test_consistenciesbetweengroupstructureandgroupstructuretyp": [265, 269], "test_getfastfluxgroupcutoff": [265, 269], "test_macroxsgenerationinterfacebas": [265, 270], "test_customsettingobjectio": [265, 271], "test_customsettingroundtrip": [265, 271], "test_neutronicssettingsload": [265, 271], "test_kineticsparameterassign": [265, 271], "test_neutronicssettingsvalid": [265, 271], "dissimilar": [266, 318], "zppr": [266, 288, 484], "cylind": 266, "disableblocktypeexclusioninxsgener": 266, "whip": [267, 341, 486], "forth": 271, "test_runningdirectorypath": [273, 274], "test_collectinputsandoutput": [273, 274], "test_updaterundir": [273, 274], "test_runexternalexecut": [273, 274], "hydraul": [275, 277, 278, 279, 281, 288, 331, 347, 484, 487, 495, 498, 507], "test_thermalhydraulicsplugin": [275, 280], "testthermalhydraulicsplugin": [275, 280, 281], "concern": [278, 507], "test_thermalhydraulicssettingsload": [280, 281], "test_thermalhydraulicssettingsset": [280, 281], "stock": 282, "pluggi": [282, 283, 451], "featur": [282, 283, 289, 330, 344, 375, 377, 408, 418, 424, 425, 446, 449, 451, 456, 471, 480, 484, 486, 494, 496, 498, 499, 507, 509], "mutat": [282, 380], "cheapli": 282, "altitud": 283, "subtl": 283, "exercis": 283, "forget": [283, 492, 509], "ergonom": [283, 334], "lest": 283, "endeavor": 283, "redesign": 283, "parametercollect": [283, 284, 311, 344, 347, 348, 362, 394, 490], "metaclass": [283, 308, 311, 344, 348], "stateless": [283, 451], "pluginmagag": 283, "notic": [283, 337, 451, 452, 455, 456, 498], "staticmethod": [283, 330, 342, 451, 494], "preclud": 283, "componenttyp": [283, 284, 305, 308], "registr": [283, 308, 494], "surpris": [283, 311, 333, 507], "ersatz": 283, "inter": [283, 311, 412, 437], "favor": [283, 352], "predat": 283, "pluginblockparam": 283, "createbuild": [283, 344, 347], "defparam": [283, 344, 347], "plugblkp1": 283, "pluginassemparam": 283, "plugasmp1": 283, "constraint": [283, 416, 449, 503], "alter": [283, 408, 507], "novel": 283, "blocktyp": [283, 285, 331], "largest": [283, 288, 311, 317, 401], "suspect": 283, "ceas": 283, "beyond": [283, 305, 451, 484, 492, 498], "elsewher": [283, 311, 340, 455], "elimin": [283, 344, 484, 486], "altogeth": [283, 507], "resolutionmethod": 283, "unbound": 283, "enhanc": [283, 450, 484], "t1671": 283, "misbehav": 283, "declar": [283, 311, 315, 507], "member": [283, 311, 400, 412, 456], "widget": [283, 375], "tab": [283, 419, 449, 492], "widgetdata": 283, "submitt": 283, "abstracttab": 283, "addsectionsfromplugin": 283, "mcnpaddtal": 283, "usesrctp": 283, "frustrat": 283, "rule": [283, 334, 347, 348, 367, 376, 377, 451, 455, 456, 507], "intact": 283, "collid": [283, 344, 386], "superoldparam": 283, "oldparam": 283, "currentparam": 283, "newer": [283, 350, 415, 485, 514], "arguabl": 283, "suboptim": 283, "axialexpansionchang": [283, 284, 308, 312, 324, 396, 490], "negat": [283, 340], "encourag": [283, 448], "tryfirst": 283, "hookimpl": [283, 451, 494], "invoc": [283, 447], "changer": [283, 288, 318, 326, 396, 406, 425, 486, 487, 507], "myplugin": [283, 507], "myproject": 283, "bespokeaxialexpans": 283, "mod": [283, 446, 499], "adapt": [283, 295, 451], "stapl": 283, "programm": [283, 507], "improperli": [283, 344], "collis": [283, 427], "hous": [284, 492], "constructassem": [284, 289, 324], "adddefaultsfp": [284, 289], "assemblyblueprint": [284, 289, 478, 490], "bycomponentmodif": [284, 289, 290], "assemblykeyedlist": [284, 289, 290, 478], "blockblueprint": [284, 289, 292, 478], "blockkeyedlist": [284, 289, 291, 478], "componentblueprint": [284, 289, 291, 299, 300, 478], "componentdimens": [284, 289, 292], "expandelement": [284, 289, 292], "insertdepletablenuclidekei": [284, 289, 292, 299], "componentkeyedlist": [284, 289, 292], "groupedcompon": [284, 289, 292], "componentgroup": [284, 289, 292], "gridblueprint": [284, 289, 295, 352, 478], "triplet": [284, 288, 289, 293, 478], "savetostream": [284, 289, 293], "getdefaultnuclideflag": [284, 289, 294], "eleexpandinfobasedoncodeendf": [284, 289, 294], "gendefaultnucflag": [284, 289, 294, 478], "reactorblueprint": [284, 289, 352, 478], "systemblueprint": [284, 289, 295, 478], "summarizematerialdata": [284, 289, 295, 490], "getboundingcircleouterdiamet": [284, 305, 306, 307, 308, 310, 311, 314, 353, 357], "getdimens": [284, 288, 305, 308, 508, 513], "dimension_nam": [284, 305, 306, 307, 308, 310], "init_signatur": [284, 305, 306, 307, 308, 310], "pdef": [284, 285, 288, 305, 306, 307, 308, 310, 311, 331, 344, 346, 348, 350, 353, 357, 362, 383, 394], "getcomponentarea": [284, 305, 306, 307, 308, 310], "fromcompon": [284, 305], "is3d": [284, 305, 306, 307, 308, 310], "getcomponentvolum": [284, 305, 308, 310], "setvolum": [284, 305, 308], "computevolum": [284, 305, 308, 356], "getmaxvolum": [284, 305, 489], "basicshap": [284, 288, 305], "circl": [284, 288, 301, 305, 306, 307, 308, 309, 310, 311, 314, 317, 356, 357, 416, 468, 470, 478, 483, 492, 498, 499, 507, 513], "rectangl": [284, 288, 305, 306, 307, 308, 309, 337, 342, 356, 480, 486, 507], "solidrectangl": [284, 305, 306, 356, 507], "squar": [284, 305, 306, 307, 331, 335, 355, 356, 469, 473, 480, 486, 499, 507], "complexshap": [284, 305, 487], "holedhexagon": [284, 305, 307, 309, 356, 507], "hexholedcircl": [284, 305, 307, 309, 356, 507], "holedrectangl": [284, 305, 307, 309, 356, 507], "holedsquar": [284, 305, 307, 356, 507], "helix": [284, 305, 307, 309, 311, 356, 478, 483, 487, 492, 498, 507], "componenttypeisvalid": [284, 305, 308], "shapedcompon": [284, 305, 306, 307, 308, 310, 507], "componentparamet": [284, 305], "getcomponentparameterdefinit": [284, 305, 309], "getcircleparameterdefinit": [284, 305, 309], "gethexagonparameterdefinit": [284, 305, 309], "getholedhexagonparameterdefinit": [284, 305, 309], "gethexholedcircleparameterdefinit": [284, 305, 309], "getholedrectangleparameterdefinit": [284, 305, 309], "gethelixparameterdefinit": [284, 305, 309], "getrectangleparameterdefinit": [284, 305, 309], "getcubeparameterdefinit": [284, 305, 309], "gettriangleparameterdefinit": [284, 305, 309], "getunshapedparameterdefinit": [284, 305, 309], "getradialsegmentparameterdefinit": [284, 305, 309], "volumetricshap": [284, 305], "sphere": [284, 299, 305, 310, 356, 364, 507], "cube": [284, 305, 309, 310, 356, 507], "radialseg": [284, 305, 309, 310, 356, 507], "differentialradialseg": [284, 288, 305, 310, 356, 507], "parametersweep": [284, 312], "blockconvert": [284, 312, 463], "componentmerg": [284, 312, 317], "multiplecomponentmerg": [284, 312, 317], "blockavgtocylconvert": [284, 312, 317], "hexcomponentstocylconvert": [284, 312, 317, 463], "getouterdiamfromidandarea": [284, 312, 317], "radiifromhexpitch": [284, 312, 317], "radiifromhexsid": [284, 312, 317], "radiifromringofrod": [284, 312, 317], "stripcompon": [284, 312, 317], "geometryconvert": [284, 288, 312, 321, 330, 331, 464], "geometrychang": [284, 312, 318], "fuelassemnummodifi": [284, 312, 318], "hextorzthetaconvert": [284, 312, 318], "hextorzconvert": [284, 312, 318, 326, 464], "thirdcorehextofullcorechang": [284, 312, 318], "edgeassemblychang": [284, 288, 312, 318, 492], "meshconvert": [284, 312, 318], "rzthetareactormeshconvert": [284, 312, 319], "rzthetareactormeshconverterbyringcompositionaxialbin": [284, 312, 319], "rzthetareactormeshconverterbyringcompositionaxialcoordin": [284, 312, 319], "rzthetareactormeshconverterbyringcompositionaxialflag": [284, 312, 319], "checklastvalueinlist": [284, 312, 319], "checklistbound": [284, 312, 319], "generatebin": [284, 312, 319], "pintypeblockconvert": [284, 312], "adjustsmeardens": [284, 312, 322], "adjustcladthicknessbyod": [284, 312, 322], "adjustcladthicknessbyid": [284, 312, 322], "uniformmesh": [284, 288, 312, 315, 487], "converterfactori": [284, 312, 330], "uniformmeshgener": [284, 312, 330], "uniformmeshgeometryconvert": [284, 288, 295, 312, 330, 487], "neutronicsuniformmeshconvert": [284, 312, 330], "gammauniformmeshconvert": [284, 312, 330], "parammapp": [284, 312, 330], "setnumberdensitiesfromoverlap": [284, 312, 330], "axialgrid": [284, 335, 336, 470], "cartesiangrid": [284, 317, 335, 337, 473, 486], "locationbas": [284, 311, 332, 335, 336, 339, 341, 351], "multiindexloc": [284, 288, 293, 335, 341, 513], "coordinateloc": [284, 335, 341, 513], "addingisvalid": [284, 335, 341], "structuredgrid": [284, 335, 336, 337, 340, 343, 488, 489], "gridparamet": [284, 335, 342], "thetarz": [284, 285, 288, 335, 342, 355], "thetarzgrid": [284, 319, 335, 343, 474], "parameterdefinitionerror": [284, 344, 345], "parametererror": [284, 344, 345], "unknownparametererror": [284, 344, 345], "global_serial_num": [284, 344, 346], "collectpluginparamet": [284, 344, 346], "applyallparamet": [284, 344, 346], "parameterdefinit": [284, 285, 288, 305, 306, 307, 308, 310, 311, 331, 344, 346, 350, 357, 362, 394], "paramloc": [284, 288, 344, 346, 347, 513], "nodefault": [284, 344, 347], "isnumpyarrai": [284, 344, 347], "isnumpyf32arrai": [284, 344, 347], "parameterbuild": [284, 344, 347, 362, 394], "resolvecollect": [284, 344], "resolveparametersmeta": [284, 311, 344, 346, 348], "test_assembli": [284, 353], "buildtestassembli": [284, 353, 354], "materialinassembly_testcas": [284, 353, 354], "maketestassembli": [284, 353, 354], "assembly_testcas": [284, 353, 354], "assemblyinreactor_testcas": [284, 353, 354], "annularfueltestcas": [284, 353, 354], "test_block": [284, 311, 353, 365, 468], "buildsimplefuelblock": [284, 353, 355, 468], "loadtestblock": [284, 353, 355], "applydummydata": [284, 353, 355], "getcomponentdata": [284, 353, 355], "testdetailedndensupd": [284, 353, 355], "block_testcas": [284, 311, 353, 355], "blockinputheightstest": [284, 353, 355], "blockenergydepositionconst": [284, 353, 355], "testnegativevolum": [284, 353, 355], "hexblock_testcas": [284, 353, 355], "testhexblockorient": [284, 353, 355], "thrzblock_testcas": [284, 353, 355], "cartesianblock_testcas": [284, 353, 355], "massconservationtest": [284, 312, 323, 328, 353, 355], "test_compon": [284, 296, 299, 353], "testcomponentfactori": [284, 353, 356], "testgeneralcompon": [284, 353, 356], "testcompon": [284, 353, 356], "testnullcompon": [284, 353, 356], "testunshapedcompon": [284, 353, 356], "testshapedcompon": [284, 353, 356], "testderivedshap": [284, 353, 356], "testderivedshapegetarea": [284, 353, 356], "testcircl": [284, 353, 356], "testcomponentexpans": [284, 353, 356], "testtriangl": [284, 353, 356, 400, 420, 439], "testrectangl": [284, 353, 356], "testsolidrectangl": [284, 353, 356], "testsquar": [284, 353, 356], "testcub": [284, 353, 356], "testhexagon": [284, 353, 356, 400, 420, 428], "testholedhexagon": [284, 353, 356], "testhexholedcircl": [284, 353, 356], "testholedrectangl": [284, 353, 356], "testholedsquar": [284, 353, 356], "testhelix": [284, 353, 356], "testspher": [284, 353, 356], "testradialseg": [284, 353, 356], "testdifferentialradialseg": [284, 353, 356], "testmaterialadjust": [284, 353, 356], "testpinquant": [284, 353, 356], "test_composit": [284, 353], "mockbp": [284, 353, 357], "getdummyparamdef": [284, 353, 357], "dummycomposit": [284, 353, 357], "dummyleaf": [284, 353, 357], "testcompositepattern": [284, 353, 357], "testcompositetre": [284, 353, 357], "testflagseri": [284, 353, 357], "testmiscmethod": [284, 353, 357], "testgetreactionratedict": [284, 353, 357], "test_excorestructur": [284, 296, 304, 353], "testexcorestructur": [284, 353, 358], "testspentfuelpool": [284, 353, 358], "testexcorecollect": [284, 353, 358], "test_flag": [284, 353, 400, 420], "testflag": [284, 353, 359, 400, 420, 427], "test_geometri": [284, 353], "testgeomtyp": [284, 353, 360], "testsymmetrytyp": [284, 353, 360], "testsystemlayoutinput": [284, 353, 360], "testsystemlayoutinputtrz": [284, 353, 360], "test_hexblockrot": [284, 353], "hexblockrotatetest": [284, 353, 361], "emptyblockrotatetest": [284, 353, 361], "test_paramet": [284, 353], "mockcomposit": [284, 353, 362], "mockcompositegrandpar": [284, 353, 362], "mockcompositepar": [284, 353, 362], "mockcompositechild": [284, 353, 362], "parametertest": [284, 353, 362], "paramcollectionwher": [284, 353, 362], "testmakeparametersreadonli": [284, 353, 362], "test_reactor": [284, 353, 462, 463, 464, 471, 479], "buildoperatorofemptyhexblock": [284, 353, 363], "buildoperatorofemptycartesianblock": [284, 353, 363], "reactortest": [284, 353, 363], "hexreactortest": [284, 353, 363], "cartesianreactorneighbortest": [284, 353, 363], "test_rz_reactor": [284, 353], "testrztreactor": [284, 353, 364], "testrztreactormodern": [284, 353, 364], "test_zon": [284, 353], "testzon": [284, 353, 365], "load_queu": [284, 285], "spent_fuel_pool": [284, 285], "not_in_cor": [284, 285], "renameblocksaccordingtoassemblynum": [284, 285], "makenamefromassemnum": [284, 285], "renumb": [284, 285, 331, 350, 351], "makeuniqu": [284, 285], "moveto": [284, 285, 311], "scaleparamstonewsymmetryfactor": [284, 285], "getnum": [284, 285], "getloc": [284, 285, 288, 289, 293, 492], "getarea": [284, 285, 288, 305, 308, 311, 356, 490, 504], "getpinplenumvolumeincubicmet": [284, 285], "getaverageplenumtemperatur": [284, 285], "adjustresolut": [284, 285], "getaxialmesh": [284, 285, 331, 487], "calculatezcoord": [284, 285, 288], "gettotalheight": [284, 285], "getheight": [284, 285, 288, 492], "getreactiveheight": [284, 285], "getelevationboundariesbyblocktyp": [284, 285], "getelevationsmatchingparamvalu": [284, 285], "getag": [284, 285], "makeaxialsnaplist": [284, 285, 503], "setblockmesh": [284, 285, 489, 503], "setblockheight": [284, 285], "getblock": [284, 285, 288, 331, 452, 462, 463, 471, 479, 492, 494], "getblocksandz": [284, 285], "hascontinuouscoolantchannel": [284, 285], "getfirstblock": [284, 285, 331, 470, 492, 499, 508], "getfirstblockbytyp": [284, 285], "getblockatelev": [284, 285], "getbindexfromzindex": [284, 285], "getblocksbetweenelev": [284, 285], "getparamvaluesatz": [284, 285], "getparamofzfunct": [284, 285], "reestablishblockord": [284, 285], "countblockswithflag": [284, 285, 331], "getdim": [284, 285, 288], "getsymmetryfactor": [284, 285, 288, 311, 318, 355, 363, 492, 494], "isonwhichsymmetrylin": [284, 285, 489], "orientblock": [284, 285], "radialout": [284, 285, 288], "radialinn": [284, 285, 288], "thetaout": [284, 285, 288], "thetainn": [284, 285, 288], "uniqid": [284, 288], "pitch_dimens": [284, 288], "pitch_component_typ": [284, 288], "createhomogenizedcopi": [284, 288], "makenam": [284, 288], "getsmeardens": [284, 288], "autocreatespatialgrid": [284, 288, 513], "getmgflux": [284, 288, 311], "setpinmgflux": [284, 288], "setheight": [284, 288], "getwettedperimet": [284, 288, 487], "getflowareaperpin": [284, 288], "gethydraulicdiamet": [284, 288], "adjustuenrich": [284, 288], "setbulimitinfo": [284, 288], "getmaxarea": [284, 288, 311], "adjustdens": [284, 288], "completeinitialload": [284, 288, 322], "setb10volparam": [284, 288], "replaceblockwithblock": [284, 288, 355], "plotflux": [284, 288], "removeal": [284, 288, 311], "getcomponentsthatarelinkedto": [284, 288], "getcomponentsinlinkedord": [284, 288], "getsortedcomponentsinsideofcompon": [284, 288], "getnumpin": [284, 288, 487, 513], "mergewithblock": [284, 288], "getcomponentareafrac": [284, 288], "verifyblockdim": [284, 288], "getpincenterflattoflat": [284, 288], "getwirewrapcladgap": [284, 288], "getplenumpin": [284, 288], "isplenumpin": [284, 288], "getpitch": [284, 288], "haspinpitch": [284, 288], "getpinpitch": [284, 288, 513], "getlargestcompon": [284, 288], "setpitch": [284, 288], "getmfp": [284, 288], "setareafractionsreport": [284, 288], "updatecomponentdim": [284, 288, 310], "getintegratedmgflux": [284, 288, 305, 308, 311], "setaxialexptargetcomp": [284, 288], "getpinloc": [284, 288, 513], "gettotalenergygenerationconst": [284, 288, 489], "getfissionenergygenerationconst": [284, 288, 489], "getcaptureenergygenerationconst": [284, 288, 489], "getneutronenergydepositionconst": [284, 288, 489], "getgammaenergydepositionconst": [284, 288, 489], "getboronmassenrich": [284, 288, 489], "geturaniummassenrich": [284, 288, 489], "getinputheight": [284, 288, 490], "getductip": [284, 288], "getductop": [284, 288], "initializepinloc": [284, 288], "setpinpow": [284, 288], "getpintoductgap": [284, 288], "getrotationnum": [284, 288], "setrotationnum": [284, 288], "getflowarea": [284, 288], "axialinn": [284, 288], "axialout": [284, 288], "copyparamsfrom": [284, 311], "updateparamsfrom": [284, 311], "getcompon": [284, 311, 333, 468, 494, 499, 508], "itercompon": [284, 305, 308, 311, 353, 357], "dochildrenhaveflag": [284, 311], "containsatleastonechildwithflag": [284, 311], "containsonlychildrenwithflag": [284, 311], "copyparamstochildren": [284, 311], "getparametercollect": [284, 311], "getparamnam": [284, 311], "setnam": [284, 305, 308, 311], "hasflag": [284, 285, 311, 333], "gettyp": [284, 311, 492, 498], "settyp": [284, 311, 470], "getvolumefract": [284, 308, 311, 355, 468], "getmass": [284, 305, 308, 311, 357, 492], "getchildrenwithnuclid": [284, 311], "getancestor": [284, 311], "getancestoranddist": [284, 311], "getancestorwithflag": [284, 311], "gettotalnden": [284, 311], "updatenumberdens": [284, 305, 308, 311], "changendensbyfactor": [284, 311], "clearnumberdens": [284, 311], "getnumberofatom": [284, 311], "setchildrenlumpedfissionproduct": [284, 311], "getfissilemassenrich": [284, 311], "geturaniumnumenrich": [284, 311], "calctotalparam": [284, 311, 494], "calcavgparam": [284, 311], "getmaxparam": [284, 311, 357, 471, 484, 498], "getminparam": [284, 311, 357], "getchildparamvalu": [284, 311, 492], "isfuel": [284, 311, 492, 494], "containsheavymet": [284, 311], "getfissilemass": [284, 311, 492], "gethmmass": [284, 311, 464], "gethmmol": [284, 311, 355], "gethmden": [284, 311], "getfuelmass": [284, 305, 308, 311, 357], "constituentreport": [284, 311], "removemass": [284, 311], "addmass": [284, 311], "setmass": [284, 311, 404], "getboundingindic": [284, 311], "getcomponentnam": [284, 311], "getcomponentsofshap": [284, 311], "getcomponentsofmateri": [284, 311], "hascompon": [284, 311], "getcomponentbynam": [284, 311], "getnumcompon": [284, 311], "setcomponentdimensionsreport": [284, 311], "expandallelementalstoisotop": [284, 311], "expandelementaltoisotop": [284, 311, 470], "getaveragetempinc": [284, 311], "resolvelinkeddim": [284, 305, 308, 311, 356], "setchildren": [284, 311], "getchildrenoftyp": [284, 311], "syncmpist": [284, 311, 346, 359, 452], "retainst": [284, 311, 342, 346, 355], "getlumpedfissionproductsifnecessari": [284, 311], "requireslumpedfissionproduct": [284, 311], "getreactionr": [284, 311, 470, 487, 489], "printcont": [284, 305, 308, 311, 492], "getpumol": [284, 311, 355, 489, 490], "setoptionsfromc": [284, 331, 470], "powermultipli": [284, 331, 502], "isfullcor": [284, 331], "refassem": [284, 285, 331, 487], "sortassemsbyr": [284, 331, 487, 492], "summarizereactorstat": [284, 331], "setpowerfromdens": [284, 331], "setpowerifnecessari": [284, 331], "setblockmassparam": [284, 331], "getscalarevolut": [284, 331], "locateallassembli": [284, 331], "removeassembli": [284, 331], "removeassembliesinr": [284, 331], "normalizenam": [284, 331, 350, 351], "normalizeinternalbookeep": [284, 331], "genassembliesaddedthiscycl": [284, 331], "getnumhexr": [284, 331], "getnumassemblieswithallringsfilledout": [284, 331], "getnumenergygroup": [284, 331], "countfuelaxialblock": [284, 331], "getfirstfuelblockaxialnod": [284, 331], "getassembliesinr": [284, 331], "getmaxassembliesinhexr": [284, 331], "getassembliesinsquareorhexr": [284, 331], "getassembliesincircular": [284, 331], "buildcircularringdictionari": [284, 331], "getassemblybynam": [284, 331], "getnozzletyp": [284, 331], "getblockbynam": [284, 331], "getblocksbyindic": [284, 331], "genblocksbylocnam": [284, 331], "getfirstassembli": [284, 331], "regenassemblylist": [284, 285, 331], "getallxssuffix": [284, 331], "getnuclidecategori": [284, 331, 363], "summarizenuclidecategori": [284, 331], "getlocationcont": [284, 331], "makelocationlookup": [284, 331], "getfluxvector": [284, 331], "getassembliesoftyp": [284, 331], "getassemblywithassemnum": [284, 331], "getassemblywithstringloc": [284, 331], "getassemblypitch": [284, 331], "findneighbor": [284, 331], "setmovelist": [284, 331], "createfreshfe": [284, 331], "createassemblyoftyp": [284, 331, 498], "saveallflux": [284, 331], "getassembliesonsymmetrylin": [284, 331], "getcoreradiu": [284, 331], "findallmeshpoint": [284, 331, 363, 364], "findallaxialmeshpoint": [284, 285, 331], "updateaxialmesh": [284, 288, 315, 331], "findaxialmeshindexof": [284, 331], "addmorenod": [284, 331], "findallazimeshpoint": [284, 331], "findallradmeshpoint": [284, 331], "getmaxblockparam": [284, 331], "gettotalblockparam": [284, 331], "getmaxnumpin": [284, 331], "getminimumpercentfluxinfuel": [284, 331], "getavgtemp": [284, 331], "growtofullcor": [284, 326, 331, 352, 479, 487], "setpitchuniform": [284, 331], "calcblockmax": [284, 331], "getfuelbottomheight": [284, 331], "processload": [284, 315, 331, 487], "buildmanualzon": [284, 331], "tertiari": [284, 333], "annular": [284, 307, 308, 333, 355], "shield_block": [284, 333], "slug": [284, 333, 498], "starter": [284, 333, 494], "blanket": [284, 290, 333], "booster": [284, 331, 333], "grid_plat": [284, 324, 333, 507], "handling_socket": [284, 324, 333], "inlet_nozzl": [284, 324, 333], "liner": [284, 311, 317, 324, 325, 333, 337, 483, 484], "wire": [284, 285, 288, 307, 308, 324, 325, 331, 333, 355, 416, 478, 487, 492, 497, 498, 507, 513], "intercool": [284, 311, 317, 333, 355, 468, 478, 492, 498, 507], "load_pad": [284, 333], "skid": [284, 333, 507], "interductcool": [284, 333], "dspacerinsid": [284, 333], "guide_tub": [284, 324, 333, 499], "fission_chamb": [284, 333, 499], "core_barrel": [284, 333], "batchmassaddit": [284, 333], "poison": [284, 285, 303, 333, 507], "moveabl": [284, 333, 502], "fromstringignoreerror": [284, 333], "fromstr": [284, 333, 334], "tostr": [284, 333, 359, 490], "fromani": [284, 334], "null": [284, 334, 355, 356, 367], "full_cor": [284, 334], "third_cor": [284, 334, 470], "quarter_cor": [284, 334], "eighth_cor": [284, 334], "sixteenth_cor": [284, 334], "symmetryfactor": [284, 288, 334], "no_symmetri": [284, 334], "hassymmetri": [284, 334], "valid_symmetri": [284, 334], "createvalidsymmetrystr": [284, 334], "checkvalidsymmetri": [284, 334], "incrementassemnum": [284, 350], "root_tag": [284, 352], "readgeomfromfil": [284, 352], "readgeomfromstream": [284, 352], "togridblueprint": [284, 352], "modifyeqpath": [284, 352], "writegeom": [284, 352], "valid_typ": [284, 366], "addloc": [284, 366], "removeloc": [284, 366], "additem": [284, 366], "removeitem": [284, 366], "addzon": [284, 366], "removezon": [284, 366], "checkdupl": [284, 366], "getzoneloc": [284, 366], "getallloc": [284, 366], "findzoneitisin": [284, 366], "sortzon": [284, 366], "typ": [285, 311, 496], "assemnum": [285, 288, 331, 354, 486, 502, 503, 507], "compli": [285, 448], "newnum": 285, "impli": [285, 331, 367, 395, 410, 484, 498, 499, 507], "somewher": [285, 288, 341, 407, 416], "oldsymmetryfactor": 285, "plane": [285, 337, 340, 342, 444, 492, 507], "outlet": [285, 354, 494, 502, 503, 505, 507], "refa": 285, "zeroatfuel": 285, "zeroesatfuel": 285, "enrichthresh": 285, "zbottom": [285, 288, 503], "resid": [285, 341, 366, 503, 507, 513], "refmesh": 285, "stick": 285, "topindex": [285, 503], "snap": [285, 331], "rebusoutput": 285, "blockmesh": 285, "conservemassflag": 285, "depict": [285, 484], "slide": 285, "blockheight": 285, "returnbottomz": 285, "returntopz": 285, "zcoord": [285, 473], "blocksandcoord": 285, "bottomz": 285, "typenam": [285, 311, 419], "mergeblock": 285, "targetblock": 285, "zindex": [285, 331], "bindex": 285, "zlower": 285, "zupper": 285, "blockinfo": 285, "blockobj": 285, "overlapheightincm": 285, "block3": 285, "block2": 285, "block1": 285, "interptyp": 285, "fillvalu": [285, 419], "thoutlettemperatur": 285, "paramdefinedat": 285, "extrapol": [285, 412, 507], "spline": 285, "interp1d": 285, "nearest": [285, 331], "slinear": 285, "quadrat": 285, "cubic": [285, 340], "rough": 285, "valatz": 285, "extrapolol": 285, "nonphys": 285, "spatialgrid": [285, 288, 293, 311, 331, 337, 342, 351, 354, 355, 449, 470, 486, 492, 513], "wise": [285, 313, 314, 315, 316, 355, 419, 490, 504, 505, 507], "spatialloc": [285, 288, 293, 311, 331, 335, 340, 341, 342, 470, 471, 479, 492, 494, 499, 509, 513], "ztop": [285, 288, 503], "reorder": 285, "blocktypespec": [285, 331], "blockcount": 285, "dimnam": [285, 288], "rad": [285, 288, 317, 474], "angl": [285, 288, 306, 401, 444, 507], "radian": [285, 288, 319, 343, 412, 444, 513], "clockwis": [285, 288, 337, 340, 410, 503, 513], "parentspatialgrid": 285, "assemblyparametercollect": [285, 341], "divis": [285, 331, 484, 492], "subdivid": 285, "axialmesh": [285, 464, 487, 505], "azimuth": [285, 289, 310, 331, 343, 502], "bind": [288, 333, 346, 449, 507], "classvar": 288, "pinspatialloc": 288, "gloss": 288, "axialindex": [288, 291, 486], "inher": [288, 401, 454, 497, 510], "b0120": 288, "005": [288, 331, 486, 492, 507], "negativearea": 288, "systemspatialgrid": 288, "multiplicti": 288, "ringnumb": 288, "fastest": [288, 308, 311], "clock": [288, 503], "pinmgflux": [288, 490, 503, 513], "5th": 288, "6th": [288, 502, 503, 505], "modifiedheight": 288, "conservemass": 288, "adjustlist": 288, "bottleneck": 288, "fly": [288, 315, 340, 341, 486], "numpin": 288, "newenrich": [288, 311], "central": [288, 331, 337, 339, 369, 456, 484, 492, 499], "bisect": 288, "trisect": 288, "overhang": 288, "scaleparamsrelatedtosymmetri": [288, 312, 318], "returnmass": 288, "bolblock": [288, 322], "hm": [288, 311, 486, 503, 504], "initialload": 288, "ecpt": [288, 322], "hmden": [288, 311], "importgeom": [288, 310, 331], "_updateblockparametersafterdeplet": 288, "heighthot": 288, "initialb10componentvol": [288, 363, 503], "breplac": 288, "replacementblock": 288, "blist": [288, 416], "blist2": [288, 416], "recomputeareafract": 288, "stai": [288, 311, 315, 355, 367, 446], "linkedcomp": 288, "componentlist": 288, "otherblock": 288, "among": [288, 305, 311, 452, 484, 507, 509], "compnam": 288, "dimval": 288, "betwen": 288, "returncomp": 288, "largestcompon": 288, "updatebolparam": 288, "settingpitch": 288, "setdimens": [288, 305, 308], "034": [288, 492], "phi_e": 288, "mfp": 288, "mfpab": 288, "diffusionlength": 288, "thrz": [288, 310], "updatedim": [288, 305, 308, 310], "optimizationinterfac": [288, 310, 331], "modifycas": [288, 310], "tracklength": [288, 308, 311], "integratedflux": [288, 308, 311], "lfpname": [288, 308, 311], "targetcompon": 288, "centroid": [288, 331, 341, 344, 347, 443, 513], "localcoord": 288, "totalenergygenconst": 288, "fissionenergygenconst": 288, "energydepconst": 288, "attributeerror": [288, 417, 455], "umc": 288, "frequent": [288, 311, 331, 351, 401, 448, 492, 498], "determinist": [288, 507], "makeassemwithuniformmesh": [288, 312, 330], "powerkeysuffix": 288, "pinloc": [288, 487, 503], "elig": 288, "assembl": [288, 507], "pintoductgap": 288, "diameter": 288, "face": [288, 295, 340, 416, 456, 484, 487], "rotnum": 288, "contact": [288, 412, 484, 507], "spacer": [288, 498], "pinpitch": 288, "wet": [288, 355, 490], "perimet": [288, 306, 340, 355, 356, 490], "4a": 288, "minu": [288, 498, 502], "widthout": [288, 306, 307, 310, 356, 499, 507], "pertain": 289, "rigidli": 289, "adher": 289, "mymaterialmodification1": 289, "mymaterialmodification2": 289, "hotchannelfactor": [289, 502, 507], "twrpclad": [289, 507], "yamlstr": [289, 296, 301], "griddesign": [289, 478], "roundtrip": 289, "blueprintsobject": 289, "closur": 289, "irrelev": [289, 383], "inp": [289, 318, 383, 413], "textio": [289, 442], "cloader": 289, "10x": [289, 442], "roundtripload": 289, "submesh": [289, 329, 331, 487], "sophist": [289, 293, 442], "stabil": [289, 484, 507], "portion": [289, 394, 507, 513], "test_assemblyblueprint": [289, 296], "testmaterialmodif": [289, 296, 297, 303], "test_blockblueprint": [289, 296], "testgriddedblock": [289, 296, 298], "test_blueprint": [289, 296], "testblueprint": [289, 296, 299], "testblueprintsschema": [289, 296, 299], "test_componentblueprint": [289, 296], "testcomponentblueprint": [289, 296, 300], "test_customisotop": [289, 296, 299], "testcustomisotop": [289, 296, 301], "testcustomisotopics_errorcondit": [289, 296, 301], "testnuclideflagsexpans": [289, 296, 301], "test_gridblueprint": [289, 296], "testgridbproundtrip": [289, 296, 302], "testgridblueprintssect": [289, 296, 302], "testrztgridblueprint": [289, 296, 302], "test_materialmodif": [289, 296], "test_reactorblueprint": [289, 295, 296], "testreactorblueprint": [289, 296, 304], "key_typ": [289, 290, 294], "value_typ": [289, 290, 294], "getassemclass": [289, 290], "item_typ": [289, 290, 291, 292, 293, 294, 295], "byspecifi": [289, 290], "to_yaml": [289, 292], "readfromlatticemap": [289, 293], "expandtoful": [289, 293], "getmultiloc": [289, 293], "fileasactiveorinert": [289, 294], "from_yaml_key_v": [289, 294], "decoupl": [290, 487], "yamlizablestr": [290, 294], "mapattributecollect": [290, 294], "underneath": 290, "keyedlist": [290, 291, 292, 293, 294, 295], "_loadcomposit": 290, "keyedlistattributecollect": [290, 291, 292, 293, 294, 295], "axialmeshpoint": [291, 478], "materialinput": 291, "byblock": 291, "_rtd": 292, "matmod": 292, "_resolvenuclid": 292, "refactor": [292, 334, 446, 455, 490], "isotopicdepletioninterfac": 292, "isdeplet": 292, "pointer": [292, 494], "subassembli": [293, 486], "sh": [293, 498, 507], "rr": [293, 478, 498], "oc": [293, 498], "pc": [293, 480, 498], "latticemap": [293, 478], "latticedimens": 293, "gridbound": 293, "gridcont": 293, "__new__": [293, 295, 341], "setattr": [293, 295], "lazili": [293, 408, 419], "unfold": 293, "rudimentari": 293, "domain": [293, 331, 334, 339, 401, 502], "latticeid": [293, 499, 507, 513], "bluep": 293, "trymap": 293, "cobbl": 293, "regardless": [293, 311, 318, 342, 376, 437, 494, 507], "creator": 294, "o17": [294, 499, 507], "o18": [294, 404, 499], "reachabl": 294, "expandto": [294, 301, 486, 499, 507], "activeset": 294, "inertset": 294, "inert": 294, "yamlizablefloat": 294, "rtd": 294, "key_nod": 294, "val_nod": 294, "key_attr": 294, "customisotopicsnam": [294, 504], "customisotopicnam": 294, "customisoptop": 294, "infrequ": 294, "cm247": [294, 301, 492], "b11": [294, 492], "intellig": 294, "elementalstokeep": 294, "oxygen16": 294, "conf_fission_product_library_nam": 294, "proven": 295, "loadcomp": 295, "initnewreactor": [295, 312, 326, 330], "twoblockinput_correct": [296, 297], "twoblockinput_wrongmeshpoint": [296, 297], "twoblockinput_wrongheight": [296, 297], "twoblockinput_wrongxstyp": [296, 297], "twoblockinput_wrongmatmod": [296, 297], "loadcustomassembli": [296, 297], "test_checkparamconsist": [296, 297], "test_constructspatialgrid": [296, 298], "test_getlocatorsatlatticeposit": [296, 298], "test_blocklattic": [296, 298], "test_nonlatticecomponenthasrightmult": [296, 298], "test_explicitflag": [296, 298], "test_densityconsistentwithcomponentconstructor": [296, 298], "test_roundtripcompletebp": [296, 299], "test_getassemblytypebyspecifi": [296, 299], "test_specialisotopicvector": [296, 299], "test_componentdimens": [296, 299], "test_tracenuclid": [296, 299], "test_noduplicatekeysinyamlblueprint": [296, 299], "test_assemblyparamet": [296, 299], "test_nuclidesmc2v2": [296, 299], "test_nuclidesmc2v3": [296, 299], "test_merg": [296, 299], "test_cladding_invalid": [296, 299], "test_withoutblock": [296, 299], "test_toplevelcomponentinput": [296, 299], "test_componentgroupinput": [296, 299], "componentstr": [296, 300], "test_componentinitializationincompleteburnchain": [296, 300], "test_componentinitializationcontrolcustomisotop": [296, 300], "test_autodeplet": [296, 300], "test_componentinitializationamericiumcustomisotop": [296, 300], "test_componentinitializationthoriumburncustomisotop": [296, 300], "test_componentinitializationthoriumnoburncustomisotop": [296, 300], "yamlpreambl": [296, 301], "yamlgoodblock": [296, 301], "yamlbadblock": [296, 301], "yamlstringwitherror": [296, 301], "test_unmodifi": [296, 301], "test_massfractionsareappli": [296, 301], "test_densitiesappliedtononcustommateri": [296, 301], "test_customdensitylogsanderror": [296, 301], "test_numberfract": [296, 301], "test_numberdens": [296, 301], "test_numberdensitiesanchor": [296, 301], "test_expandednatur": [296, 301], "test_infdiluteareonlynatur": [296, 301], "test_densitymustbeposit": [296, 301], "test_nonconformantelementnam": [296, 301], "test_numberdensitiescannotspecifydens": [296, 301], "test_eleexpandinfobasedoncodeendf": [296, 301], "test_cont": [296, 302], "test_tinymap": [296, 302], "test_simpleread": [296, 302, 304], "test_simplereadlatticemap": [296, 302], "test_simplereadnolatticemap": [296, 302], "test_construct": [296, 302, 304, 323, 324], "test_geomfil": [296, 302], "uzrinput": [296, 303], "b4cinput": [296, 303], "loaduzrassembli": [296, 303], "loadb4cassembli": [296, 303], "test_nomaterialmodif": [296, 303], "test_u235_wt_frac_modif": [296, 303], "test_u235_wt_frac_bycomponent_modification1": [296, 303], "test_u235_wt_frac_bycomponent_modification2": [296, 303], "test_materialmodificationlength": [296, 303], "test_invalidcomponentmodif": [296, 303], "test_zrwtfracmodif": [296, 303], "test_bothu235zrwtfracmodif": [296, 303], "test_checkbycomponentmaterialinput": [296, 303], "test_filtermaterialinput": [296, 303], "test_invalidmatmodnam": [296, 303], "test_matmodsupthemro": [296, 303], "test_theoreticaldens": [296, 303], "test_materialdatasummari": [296, 304], "test_spentfuelpool": [296, 304], "assemblyinput": 297, "intermedi": [298, 507, 509], "faithfulli": [299, 330, 509], "robust": [299, 311, 355], "tip": [299, 330, 401, 451, 487, 502], "prove": [299, 303, 356, 366, 380, 399, 454, 456, 484], "mc2v3": [299, 507], "86602": [300, 301, 507], "dump2": [301, 492], "dump1": [301, 492], "pu236": [301, 492], "u236": [301, 492, 496, 507], "am243": [301, 492], "cm242": [301, 492], "cm245": [301, 492], "np238": [301, 492], "cm243": [301, 492], "cm246": [301, 492], "992742": 301, "007204": [301, 496], "000054": 301, "992650": 301, "007295": 301, "000055": 301, "u_isotop": 301, "6539102e": 301, "5254048e": 301, "7967943e": 301, "block_0": 301, "basic_fuel": 301, "block_1": 301, "block_2": 301, "block_3": 301, "block_4": 301, "block_5": 301, "block_6": 301, "overspecifi": 301, "block_7": 301, "block_8": 301, "block_9": 301, "assembly_b": 301, "assembly_c": 301, "assembly_d": 301, "unmodifi": 301, "fe54": [301, 492], "block_poison": 303, "mro": 303, "bcomp": 305, "lowercas": 305, "mergewith": [305, 306, 307, 308, 310, 504], "componentparametercollect": [305, 308], "modarea": [305, 306, 307, 310, 504, 507], "leftov": [305, 308], "othercompon": [305, 308], "freez": 305, "unshapedcomponentparametercollect": 305, "makemgfluxblock": 305, "makemassadditioncompon": 305, "circumst": [305, 308, 330, 331, 393, 408, 449, 485, 507, 513, 514], "dh": 305, "pai": [305, 507], "attent": [305, 507], "companion": [305, 494], "thermal_expansion_dim": [305, 306, 307, 308, 310], "getcircleinnerdiamet": [305, 306, 307, 308, 314, 487], "isencapsulatedbi": [305, 306], "getperimet": [305, 306], "getpitchdata": [305, 306, 308], "islatticecompon": [305, 306], "non_dimension_nam": [305, 308], "temperatureink": [305, 308], "setlink": [305, 308], "setproperti": [305, 308], "applymaterialmassfracstonumberdens": [305, 308, 315], "adjustdensityforheightexpans": [305, 308], "getheightfactor": [305, 308], "containsvoidmateri": [305, 308], "containssolidmateri": [305, 308], "setarea": [305, 308], "settemperatur": [305, 308, 468], "getmassenrich": [305, 308], "dimensionislink": [305, 308], "getdimensionnameslinkedto": [305, 308], "clearlinkedcach": [305, 308], "getlinkedcompon": [305, 308], "getthermalexpansionfactor": [305, 308], "setdimensionreport": [305, 308], "mergenuclidesinto": [305, 308], "getpinmgflux": [305, 308, 490], "finalizeloadingfromdb": [305, 308], "circleparametercollect": 306, "www3": 306, "wolframalpha": 306, "hexagonparametercollect": 306, "lengthout": [306, 307, 310, 356, 507], "lengthinn": [306, 310, 356, 507], "widthinn": [306, 310, 356, 499, 507], "rectangleparametercollect": 306, "hollow": [306, 307, 498], "lenth": 306, "triangleparametercollect": 306, "holeod": [307, 356, 507], "nhole": [307, 356, 507], "hole": [307, 356, 421, 486, 498, 507], "holedhexagonparametercollect": 307, "holeop": [307, 356, 507], "hexholedcircleparametercollect": 307, "holedrectangleparametercollect": 307, "holedsquareparametercollect": 307, "axialpitch": [307, 356, 478, 498, 507], "helixdiamet": [307, 356, 478, 498, 507], "spiral": 307, "mathworld": 307, "wolfram": 307, "climb": 307, "exterior": 307, "interior": [307, 487], "helixparametercollect": 307, "specfi": 308, "componettyp": 308, "addition": [308, 317, 452, 484, 507], "inputtemperatureinc": [308, 315, 316, 509], "othercomp": 308, "othercompkei": 308, "newhot": 308, "accommod": [308, 416, 449], "lfpcollect": [308, 311], "proport": [308, 463], "rho": [308, 311, 404], "f_n": 308, "dn": 308, "sim": 308, "nden": [308, 311, 462, 492, 503], "unlist": [308, 311], "ambigu": 308, "blend": [308, 507], "sum_i": [308, 311, 330], "a_i": [308, 311, 510], "n_a": [308, 311], "avogadro": 308, "retainlink": 308, "indirectli": [308, 404], "intersect": 308, "percentag": [308, 315, 331, 455, 503, 504], "includenuclid": [308, 311, 492], "comptomergewith": 308, "pervious": 308, "whichev": [308, 331, 449, 451, 484], "weigh": [308, 331], "ngroup": [308, 513], "doubli": [308, 354], "fetch": [308, 314, 346], "sphereparametercollect": 310, "heightout": [310, 356, 507], "heightinn": [310, 356, 507], "cuboid": 310, "centric": 310, "cubeparametercollect": 310, "inner_radiu": [310, 356, 507], "outer_radiu": [310, 356, 507], "inner_theta": [310, 507], "outer_theta": [310, 507], "283185307179586": 310, "xxxx": 310, "xxxxxxx": 310, "refvolum": 310, "refheight": 310, "radialsegmentparametercollect": 310, "radius_differenti": [310, 356, 507], "inner_axi": [310, 356, 507], "azimuthal_differenti": [310, 507], "thrzactiveheight": 310, "thrzactiveradiu": 310, "outer_axi": 310, "principl": 311, "everywher": 311, "analogi": 311, "unsaf": 311, "unexpect": [311, 455], "uint64": 311, "uint8": 311, "unsign": 311, "hood": [311, 498], "particip": [311, 486, 507], "gang": 311, "far": [311, 340, 401, 485, 494, 497, 505, 512, 514], "unstabl": [311, 486], "armiobjectparametercollect": [311, 332, 348, 351], "rapidli": [311, 484], "weak": 311, "complabel": 311, "unpickl": [311, 341, 400], "dig": 311, "__reduce__": [311, 339], "testfuel": [311, 331], "insensit": [311, 342], "typeid": 311, "bitwis": [311, 347, 408, 427], "qualifi": [311, 451, 486], "disallow": 311, "volfrac": [311, 468], "test_consistentareawithoverlappingcompon": [311, 353, 355], "insur": 311, "ai": 311, "m_i": 311, "sum_j": 311, "m_j": 311, "m_": 311, "nuclidetoadjust": 311, "elementtoadjust": 311, "nuclidetoholdconst": 311, "elementtoholdconst": 311, "5zr": 311, "oi": 311, "f1": 311, "f2": 311, "fn": 311, "caller": 311, "_distanc": 311, "ntot": 311, "unnatur": 311, "anticip": 311, "dealt": 311, "therebi": 311, "nearli": [311, 449, 486, 494, 509], "volumeintegr": [311, 331], "addsymmetricposit": 311, "calcbasedonfullobj": 311, "postion": 311, "weightingparam": 311, "volumeaverag": 311, "grandchildren": 311, "x_i": 311, "w_i": 311, "unset": 311, "returnobj": 311, "sought": 311, "magnitud": [311, 315, 342], "wholli": 311, "reduct": [311, 507], "pertin": [311, 454], "formula": [311, 330, 443, 487, 495], "mini": [311, 412], "maxi": 311, "minj": 311, "maxj": 311, "mink": 311, "maxk": 311, "shapeclass": 311, "materialnam": [311, 477], "selector": 311, "componentswiththismat": 311, "npin": [311, 503, 513], "elementalnuclid": 311, "naturalnuclid": 311, "tripl": [311, 341, 502, 503, 505], "pump": [311, 484, 499, 502, 505, 507], "apart": 311, "spatialoc": 311, "seq": [311, 411], "unari": 311, "getattr": 311, "child1": 311, "child2": 311, "child3": 311, "grandchild1": 311, "grandchild2": 311, "grandchild3": 311, "isinst": [311, 334], "synchron": [311, 346, 452], "revert": [311, 329, 375, 377, 507], "parmeterdefinit": [311, 346], "ndensiti": 311, "rxnrate": 311, "nf": 311, "compris": [311, 507], "rabc": 311, "implic": [311, 341], "unclear": 311, "__exit__": 311, "xssuffix": 311, "_label_": 311, "rxn": 311, "n3n": 311, "tediou": [312, 484], "autom": [312, 419, 451, 463, 483, 497, 507, 513], "assemblyaxiallinkag": [312, 313, 315, 396], "areaxiallylink": [312, 313, 314], "axiallink": [312, 313, 314, 324], "getdefaultreferenceassem": [312, 313, 315], "makeassemsabletosnaptouniformmesh": [312, 313, 315], "expansiondata": [312, 313, 315, 324, 383, 396], "itersolidcompon": [312, 313, 316, 324], "getsolidcompon": [312, 313, 316, 324], "generalparametersweepconvert": [312, 320], "parametersweepconvert": [312, 320, 321], "test_axialexpansionchang": [312, 323, 487], "axialexpansiontestbas": [312, 323, 324], "testaxialexpansionheight": [312, 323, 324], "testconserv": [312, 323, 324], "testmanagecoremesh": [312, 323, 324], "testexcept": [312, 323, 324], "testdeterminetargetcompon": [312, 323, 324], "testgetsolidcompon": [312, 323, 324], "testinputheightsconsideredhot": [312, 323, 324], "checkcoldblockheight": [312, 323, 324], "testcomponentlink": [312, 323, 324], "buildtestassemblywithfakemateri": [312, 323, 324], "fakemat": [312, 323, 324], "fakematexcept": [312, 323, 324], "testaxiallinkhelp": [312, 323, 324], "testblocklink": [312, 323, 324], "test_blockconvert": [312, 323], "buildsimplefuelblocknegativearea": [312, 323, 325], "testblockconvert": [312, 323, 325], "testtocircl": [312, 323, 325], "buildcontrolblockwithlinkednegativeareacompon": [312, 323, 325], "test_geometryconvert": [312, 323], "testgeometryconvert": [312, 323, 326], "testhextorzconvert": [312, 323, 326], "testedgeassemblychang": [312, 323, 326], "testthirdcorehextofullcorechang": [312, 323, 326], "test_meshconvert": [312, 323], "testrzreactormeshconvert": [312, 323, 327], "test_pintypeblockconvert": [312, 323], "testpintypeconvert": [312, 323, 328], "test_uniformmesh": [312, 323], "dummyfluxopt": [312, 323, 329], "testconverterfactori": [312, 323, 329], "testassemblyuniformmesh": [312, 323, 329], "testuniformmeshgener": [312, 323, 329], "testuniformmeshcompon": [312, 323, 329], "applynonuniformheightdistribut": [312, 323, 329], "testuniformmesh": [312, 323, 329], "testcalcreationr": [312, 323, 329], "testgammauniformmesh": [312, 323, 329], "testparamconvers": [312, 323, 329], "testuniformmeshnonuniformassemflag": [312, 323, 329], "dissolvecomponentintocompon": [312, 317], "restablishlink": [312, 317], "plotconvertedblock": [312, 317, 463], "addr": [312, 318, 326], "createhomogenizedrztblock": [312, 318], "plotconvertedreactor": [312, 318, 330, 464], "expected_input_symmetri": [312, 318], "restorepreviousgeometri": [312, 318], "addedgeassembli": [312, 318], "removeedgeassembli": [312, 318], "generatemesh": [312, 319], "writemeshdata": [312, 319], "setringstoconvert": [312, 319], "setaxialmesh": [312, 319], "setthetamesh": [312, 319], "generatecommonmesh": [312, 329, 330], "reactorparammappingcategori": [312, 330], "blockparammappingcategori": [312, 330], "applystatetoorigin": [312, 329, 330], "setassemblystatefromoverlap": [312, 330], "clearstateonassembli": [312, 330], "updatereactionr": [312, 330], "paramsett": [312, 330], "paramgett": [312, 330], "linkedblock": [313, 314], "linkedcompon": [313, 314], "getlinkedblock": [313, 314], "expandcolddimstohot": [313, 315], "performprescribedaxialexpans": [313, 315], "performthermalaxialexpans": [313, 315], "setassembli": [313, 315], "applycoldheightmassincreas": [313, 315], "axiallyexpandassembli": [313, 315], "managecoremesh": [313, 315], "componentreferencetemperatur": [313, 316], "setexpansionfactor": [313, 316], "updatecomponenttempsby1dtempfield": [313, 316], "updatecomponenttemp": [313, 316], "computethermalexpansionfactor": [313, 316], "getexpansionfactor": [313, 316], "determinetargetcompon": [313, 316, 324], "istargetcompon": [313, 316], "componenta": 314, "componentb": 314, "linkag": [314, 315, 324], "Their": [314, 513], "biggest": 314, "slight": [314, 507], "hint": [314, 487], "axialassemblylinkag": 314, "nonuniformassemflag": [315, 507], "referenceassembli": 315, "isdetailedaxialexpans": 315, "disjoint": 315, "finest": 315, "setfuel": [315, 316], "tempgrid": [315, 316, 324], "tempfield": [315, 316], "expandfromtinputtothot": [315, 316], "perfectli": [315, 392, 454], "gradient": 315, "loss": [315, 502, 503, 507], "tall": [315, 336, 498], "cheap": [315, 484], "oldmesh": 315, "_isfuellock": [316, 324], "cacul": 316, "expfrac": 316, "l1": [316, 324], "retriv": 316, "flagofinterest": 316, "axialexptargetcompon": [316, 503], "sourceblock": [317, 463], "solutenam": 317, "solventnam": 317, "minid": 317, "_sourceblock": 317, "solvent": [317, 325], "dissolv": [317, 325], "solutelink": 317, "sane": 317, "specifiedminid": 317, "_verifyexpans": 317, "farthest": 317, "driverfuelblock": [317, 463], "concentr": [317, 507], "surround": [317, 483, 507, 513], "mcc3": 317, "pincomponentsring1": 317, "pincomponentsring2": 317, "nonpin": 317, "annulu": [317, 498, 507], "radii": 317, "sidelength": 317, "disttorodcent": 317, "numrod": 317, "rodradii": 317, "radiilist": 317, "radtorodcent": 317, "thicknessoneachsid": 317, "r_1": 317, "equiv": 317, "r_2": 317, "texttt": 317, "compflag": 317, "strip": [317, 341], "newblock": 317, "mixtureflag": 317, "reactorconvert": 318, "usemostcommonxsid": 318, "expandreactor": 318, "geomconv": 318, "newr": 318, "convreactor": [318, 330, 464], "dif3dinterfac": 318, "dif3drz": 318, "rzgeom_actu": 318, "overwritelist": 318, "ringstoadd": 318, "furthest": [318, 502], "converterset": [318, 319, 464], "stricthomogen": 318, "rztheta": [318, 327, 342, 484], "uniformthetamesh": [318, 319, 464], "thetabin": [318, 319, 464], "radialconversiontyp": [318, 464], "axialconversiontyp": [318, 464], "_rzthetareactormeshconverterbyaxialcoordin": [318, 319], "_rzthetareactormeshconverterbyaxialbin": [318, 319], "homogenizeaxiallybyflag": 318, "byringcomposit": 318, "radialmesh": 318, "homblock": 318, "loweraxialz": 318, "upperaxialz": 318, "radialthetazoneassem": 318, "fnamebas": 318, "coremap": [318, 492, 498], "explan": 318, "myreactor": 318, "sourcereactor": [318, 330], "undo": 318, "edgechang": 318, "difnt": 318, "paramstoscalesubset": 318, "_rzthetareactormeshconverterbyringcomposit": 319, "_rzthetareactormeshconverterbyaxialflag": 319, "inputlist": 319, "listnam": 319, "expectedvalu": 319, "adjustlastvalu": 319, "totalnumdatapoint": 319, "numperbin": 319, "minnum": 319, "settingtomodifi": 321, "sd": 322, "fuel_r": 322, "clad_ir": 322, "fuel_od": 322, "clad_id": 322, "steel_component_lst": [323, 324], "test_assemblyaxialexpansionheight": [323, 324], "expandassemformassconservationtest": [323, 324], "test_thermalexpansioncontractionconservation_simpl": [323, 324], "test_thermalexpansioncontractionconservation_complex": [323, 324], "complexconservationtest": [323, 324], "test_prescribedexpansioncontractionconserv": [323, 324], "test_targetcomponentmassconserv": [323, 324], "test_nomovementaclp": [323, 324], "test_reset": [323, 324], "test_computethermalexpansionfactor": [323, 324], "test_managecoremesh": [323, 324], "test_componentconserv": [323, 324], "test_istopdummyblockpres": [323, 324], "test_setexpansionfactor": [323, 324], "test_updatecomponenttempsby1dtempfieldvalueerror": [323, 324], "test_updatecomponenttempsby1dtempfieldruntimeerror": [323, 324], "test_assemblyaxialexpansionexcept": [323, 324], "test_isfuellock": [323, 324], "test_determinelink": [323, 324], "test_getlinkedcompon": [323, 324], "test_determinetargetcompon": [323, 324], "test_determinetargetcomponentblockwithmultipleflag": [323, 324], "test_specifytargetcomponent_notfound": [323, 324], "test_specifytargetcomponent_singlesolid": [323, 324], "test_specifytargetcomponet_multiplefound": [323, 324], "test_manuallysettargetcompon": [323, 324], "test_getsolidcompon": [323, 324], "test_coldassemblyexpans": [323, 324], "checkcoldheightblockmass": [323, 324], "test_overlappingsolidpin": [323, 324], "test_differentmultnotoverlap": [323, 324], "test_solidpinnotoverlappingannulu": [323, 324], "test_solidpinoverlappingwithannulu": [323, 324], "test_annularpinnotoverlappingwithannulu": [323, 324], "test_annularpinoverlappingwithannul": [323, 324], "test_thinannularpinoverlappingwiththickannulu": [323, 324], "test_annularhexoverlappingthickannularhex": [323, 324], "test_liquid": [323, 324], "test_unshapedcomponentandcircl": [323, 324], "test_overrid": [323, 324], "test_singleblock": [323, 324], "test_multiblock": [323, 324], "test_emptyblock": [323, 324], "test_onassembli": [323, 324], "test_dissolvewireintocool": [323, 325], "test_dissolvelinerintoclad": [323, 325], "test_dissolvemultipl": [323, 325], "test_dissolvezeroarea": [323, 325], "test_dissolveintozeroarea": [323, 325], "test_dissolvenegativearea": [323, 325], "test_dissolveintonegativearea": [323, 325], "test_build_nthr": [323, 325], "test_buildinsideduct": [323, 325], "test_convert": [323, 325, 326], "test_converthexwithfueldriv": [323, 325], "test_converthexwithfueldriveronnegativecomponentareablock": [323, 325], "test_convertcartesianlatticewithfueldriv": [323, 325], "test_fromhex": [323, 325], "test_fromringofrod": [323, 325], "test_addr": [323, 326], "test_setnumberoffuelassem": [323, 326], "test_getassembliesinsector": [323, 326], "test_createhomogenizedrztblock": [323, 326], "test_edgeassembli": [323, 326], "test_growtofullcorefromthirdcor": [323, 326], "test_initnewfullreactor": [323, 326], "test_skipgrowtofullcorewhenalreadyfullcor": [323, 326], "test_meshbyringcompositionaxialbinssmallcor": [323, 327], "test_meshbyringcompositionaxialcoordinatessmallcor": [323, 327], "test_meshbyringcompositionaxialflagssmallcor": [323, 327], "test_meshbyringcompositionaxialbinslargecor": [323, 327], "test_meshbyringcompositionaxialcoordinateslargecor": [323, 327], "test_meshbyringcompositionaxialflagslargecor": [323, 327], "test_adjustcladthicknessbyod": [323, 328], "test_adjustcladthicknessbyid": [323, 328], "test_converterfactori": [323, 329], "test_makeassemwithuniformmesh": [323, 329], "test_makeassemwithuniformmeshsubmesh": [323, 329], "test_makeassemuniformmeshparammappingsamemesh": [323, 329], "test_clearassemblyst": [323, 329], "test_computeaverageaxialmesh": [323, 329], "test_filtermesh": [323, 329], "test_filteredtopandbottom": [323, 329], "test_generatecommonmesh": [323, 329], "test_blueprintcopi": [323, 329], "test_convertnumberdens": [323, 329], "test_applystatetoorigin": [323, 329], "test_calcreactionratesblocklist": [323, 329], "test_setstatefromoverlap": [323, 329], "test_reactorconvers": [323, 329], "137438953472": [324, 333], "274877906944": [324, 333], "549755813888": [324, 333], "1099511627776": [324, 333], "17592186044416": [324, 333], "140737488355328": [324, 333], "2251799813685248": [324, 333], "72057594037927936": [324, 333], "coldtemp": 324, "hotinlettemp": 324, "360": [324, 492, 494, 507], "numtempgridpt": 324, "tempstep": 324, "inlet": [324, 494, 502, 503, 507], "nomin": [324, 484, 502, 503], "metric": [324, 484], "isotherm": 324, "caught": 324, "_componentdeterminesblockheight": 324, "target_flags_in_preferred_ord": 324, "specifytargetcompon": 324, "r_armi_inp_cold_height": 324, "refsmallreactorbas": 324, "deltat": [324, 494], "bstd": 324, "bexp": 324, "flagtyp": 324, "underpredict": 324, "asserttyp": 324, "strforassert": 324, "componentstotest": 324, "assertionbool": 324, "commonarg": 324, "typea": 324, "typeb": 324, "annuli": 324, "dataclass": [324, 419], "setnumberoffuelassem": 326, "sourceassem": [329, 330], "newassem": [329, 498], "_decuspaxialmesh": 329, "dest": 329, "pden": [329, 416, 479, 484, 492, 494, 503], "lost": [330, 452], "finer": [330, 498], "uniformreactor": 330, "minimummeshs": 330, "decusp": [330, 487], "uniformmeshminimums": [330, 507], "_computeaverageaxialmesh": 330, "cusp": 330, "reactorparamstomap": 330, "blockparamstomap": 330, "_setparamstoupd": 330, "reactorparamnam": 330, "blockparamnam": 330, "newmesh": 330, "mapnumberdens": 330, "includepincoordin": 330, "sourceassembli": 330, "destinationassembli": 330, "int_": 330, "z_1": 330, "z_2": 330, "dz": 330, "piecewis": [330, 412], "smarter": 330, "param1": 330, "val1": [330, 417, 452], "param2": 330, "val2": [330, 417, 452], "b2": 330, "pinquant": [330, 344, 347, 487], "powergener": [330, 503], "powerneutron": [330, 503], "powergamma": [330, 503], "paramdef": [330, 344, 346, 347], "overlappingblockinfo": 330, "h_i": 330, "refin": [331, 487, 507], "powerdens": [331, 487, 505, 507], "kghm": [331, 483, 487, 503], "kgfi": [331, 464, 487, 503], "trackassem": [331, 487, 507], "spend": [331, 456, 484], "constrain": [331, 342, 463, 464, 486, 498], "fact": [331, 452, 498], "ringnum": 331, "overridecircularringmod": [331, 363], "startindex": [331, 351], "unoccupi": 331, "chargecycl": [331, 502], "indexbas": 331, "maxr": 331, "nring": 331, "nassmwithblank": 331, "read1d": 331, "assemtypespec": 331, "maxblock": 331, "circularringmod": [331, 507], "alist": 331, "fullcor": 331, "numedgeassem": 331, "_modifygeometryafterload": 331, "ringpitch": 331, "a0001": [331, 492], "sortkei": 331, "includebolassem": 331, "includesfp": 331, "includeal": 331, "similarli": [331, 346, 455, 499, 507, 513], "_children": 331, "nozzletyp": [331, 502, 507], "nozzleid": 331, "a0001a": 331, "blocksbynam": 331, "blocksbylocnam": 331, "btype": 331, "slipperi": 331, "detachallassembli": 331, "regrow": 331, "suffic": 331, "categor": [331, 333, 363, 375, 492], "broaden": [331, 510], "coolantnuclid": 331, "fuelnuclid": 331, "structurenuclid": 331, "assemblylevel": 331, "loccont": 331, "speedup": [331, 442, 448], "speed": [331, 487, 489, 507], "energyord": 331, "extsrc": [331, 503], "nxg": 331, "locationstr": 331, "assemblynam": 331, "foundassembli": 331, "showblank": 331, "duplicateassembliesonreflectiveboundari": 331, "neighbor": [331, 340, 342, 363, 488], "east": [331, 513], "west": 331, "south": 331, "border": [331, 470], "asymmetr": 331, "getsymmetricequival": [331, 335, 336, 337, 339, 340, 341, 343], "assemblytyp": 331, "allflux": 331, "symmetrylineid": 331, "applysubmesh": 331, "endpoint": [331, 342], "meshval": 331, "imbalanc": 331, "trz": [331, 360], "xyz": [331, 473, 474], "float_dimension_decim": [331, 487], "9th": 331, "10th": 331, "repetit": [331, 342, 442, 503, 507], "heightcm": 331, "meshlist": 331, "extraassem": 331, "mcpnxt": 331, "flux2weight": 331, "avgtemp": 331, "pitchincm": 331, "shift": [331, 340, 486, 507], "lowestfuelheightincm": 331, "coreparametercollect": 331, "zonedefinit": [331, 366, 507], "002": [331, 366, 486, 492, 507], "simplest": [332, 363, 497, 507], "baseclass": 332, "freeli": 332, "2311582653024": 332, "dual": 332, "2311590971136": 332, "noun": 333, "adject": 333, "disambigu": 333, "bitfield": 333, "widen": 333, "led": [333, 507], "clearli": [333, 366, 507], "stori": 333, "substr": 333, "decid": [333, 348, 456], "canon": [333, 397], "mention": [333, 454], "plenti": 333, "lta": 333, "distinguish": [333, 499], "circul": 333, "bundl": [333, 498, 502, 503, 505], "128": [333, 347, 361, 484], "256": [333, 347], "512": [333, 492], "1024": 333, "2048": 333, "4096": 333, "16384": 333, "65536": 333, "131072": 333, "262144": 333, "524288": 333, "1048576": 333, "2097152": 333, "4194304": 333, "8388608": 333, "16777216": 333, "33554432": 333, "67108864": 333, "134217728": 333, "268435456": 333, "536870912": 333, "1073741824": 333, "2147483648": 333, "4294967296": 333, "8589934592": 333, "17179869184": 333, "34359738368": 333, "68719476736": 333, "2199023255552": 333, "4398046511104": 333, "8796093022208": 333, "35184372088832": 333, "70368744177664": 333, "281474976710656": 333, "562949953421312": 333, "1125899906842624": 333, "4503599627370496": 333, "9007199254740992": 333, "18014398509481984": 333, "36028797018963968": 333, "144115188075855872": 333, "288230376151711744": 333, "576460752303423488": 333, "1152921504606846976": 333, "2305843009213693952": 333, "4611686018427387904": 333, "9223372036854775808": 333, "18446744073709551616": 333, "36893488147419103232": 333, "straightforward": [334, 347, 498, 499, 507], "quarter": [334, 342, 499, 507], "harder": [334, 455], "proceed": [334, 485, 507, 514], "reliev": 334, "elif": [334, 454], "instrument": 334, "forbid": 334, "shapestr": 334, "symmetrystr": 334, "throughcenterassembli": 334, "symmetryinput": 334, "outcom": 334, "fromrectangl": [335, 337], "getglobalcoordin": [335, 341, 471, 472, 473, 474, 479, 492, 494, 499], "test_grid": [335, 420, 437], "testspatialloc": 335, "test_recurs": 335, "getringpo": [335, 337, 340, 341, 342, 343], "indicestoringpo": [335, 340], "fromncel": [335, 336, 470], "locatorindomain": [335, 336, 337, 339, 340, 343], "getindicesfromringandpo": [335, 336, 337, 340, 342, 343], "getminimumr": [335, 336, 337, 340, 342, 343], "getpositionsinr": [335, 336, 337, 340, 342, 343], "overlapswhichsymmetrylin": [335, 336, 337, 339, 340, 343], "changepitch": [335, 337, 340], "isaxialonli": [335, 339, 342], "getcoordin": [335, 339, 342, 343], "getcellbas": [335, 339, 342], "getcelltop": [335, 339, 342], "cornersup": [335, 340, 489], "frompitch": [335, 340, 470, 472], "getneighboringcellindic": [335, 340, 342, 488], "trianglecoord": [335, 340], "isinfirstthird": [335, 340], "generatesortedhexlocationlist": [335, 340, 472], "detachedcopi": [335, 341], "parentloc": [335, 341], "getcompleteindic": [335, 341], "getlocalcoordin": [335, 341, 355, 513], "getglobalcellbas": [335, 341], "getglobalcelltop": [335, 341], "distanceto": [335, 341], "unitsteplimit": [335, 336, 337, 340, 342, 343], "unitstep": [335, 336, 337, 340, 342, 343, 473], "getaboveandbelowcellindic": [335, 342], "getindexbound": [335, 342], "getbound": [335, 342], "getlocatorfromringandpo": [335, 342], "getallindic": [335, 342], "fromgeom": [335, 343], "indicesofbound": [335, 343], "__init_": 336, "numcel": [336, 410], "symmetryoverlap": [336, 337, 339, 340], "noreturn": [336, 337, 343], "tricker": 337, "lai": 337, "illustr": [337, 340], "draw": [337, 419, 428, 480], "ax": [337, 341, 342, 412, 416, 468, 470, 472, 473, 474, 477, 480], "numr": [337, 340, 410], "isoffset": 337, "manhattan": 337, "quadrant": [337, 342], "diagon": [337, 340], "childrenbyloc": [337, 449], "_isthroughcent": 337, "xw": 337, "yw": 337, "dx": 339, "boundary_cent": [339, 340], "nativecoord": [339, 341, 342, 343], "hashabl": 339, "happi": [339, 451, 507], "__getstate__": [339, 346, 362, 380, 394], "__setstate__": 339, "_____": 340, "Being": [340, 484], "newpitchcm": 340, "includetopedg": 340, "nloc": 340, "a3001": 340, "a3003": 340, "stem": 340, "q": [340, 494], "motiv": 340, "notat": [340, 412, 499, 507], "immut": [341, 347, 369, 417, 486, 487], "unbeliev": 341, "inexplic": [341, 416, 418], "annoi": 341, "tagalong": 341, "rack": 341, "awkward": 341, "ok": [341, 493], "todo": [341, 455], "mygrid": 341, "parentgrid": 341, "vice": 342, "versa": 342, "dxi": 342, "dxj": 342, "jxk": 342, "dyi": 342, "dyj": 342, "dyk": 342, "dzi": 342, "dzj": 342, "dzk": 342, "dmn": 342, "0th": 342, "settl": [342, 502], "struggl": [342, 510], "orthogon": 342, "wast": 342, "compact": 342, "intuit": [342, 348, 507], "phantom": 342, "2x": 342, "backrefer": 342, "cleaner": [342, 347, 425], "disadvantag": 342, "pollut": 342, "recreat": 342, "exsist": 342, "dens": [342, 509], "unphys": [342, 494], "zeta": 343, "2pi": [343, 444], "geominfo": 343, "readgeomxml": 343, "rad0": 343, "rad1": 343, "theta0": 343, "theta1": 343, "0001": [343, 497], "350": 344, "hidden": [344, 346], "_p_": 344, "_p_cyclelength": 344, "circumv": 344, "rational": 344, "behind": [344, 454, 486, 495, 498], "5e13": 344, "fueltemp": 344, "217": [344, 478, 496], "curiou": 344, "heightbol": [344, 503], "collectiontyp": [344, 347], "suitabl": 344, "experi": [344, 483, 484, 507], "thefreedictionari": 344, "atmospher": 344, "meriam": 344, "webster": 344, "descriptor": [344, 346], "protocol": [344, 346, 400, 483], "all_definit": 344, "secret": 344, "pep": 344, "412": 344, "protect": [344, 455, 487], "__slots__": 344, "lite": 344, "roundabout": 344, "pain": 344, "consumpt": 344, "pylint": [344, 487], "overwhelm": 344, "unsustain": 344, "__dict__": 344, "slot": 344, "becam": [344, 408], "oner": [344, 348], "tradit": [344, 347, 484], "__something__": 344, "applyparamet": [344, 346], "definint": 344, "getsyncdata": [344, 346], "cumulativeovercycl": [344, 347], "assigninblueprint": [344, 347], "retainonreplac": [344, 347], "fluxquant": [344, 347], "multigroupquant": [344, 347], "reactivitycoeffici": [344, 347], "volume_integr": [344, 347, 489], "fieldnam": [344, 347], "savetodb": [344, 347, 507], "atloc": [344, 346, 347, 362], "hascategori": [344, 347, 362, 490], "incategori": [344, 347], "unchanged_sinc": [344, 347], "fortyp": [344, 347], "resetassignmentflag": [344, 347], "setassignmentflag": [344, 347], "bynameandtyp": [344, 347], "bynameandcollectiontyp": [344, 347], "lock": [344, 346, 347, 348, 417, 446, 487, 503], "towritetodb": [344, 347, 362], "associateparameterdefinitioncollect": [344, 347], "parameterfactori": 345, "setparam": 345, "27998": 346, "thread": [346, 494], "gil": 346, "_state": [346, 362, 394], "illeg": [346, 417], "redefin": 346, "_backup": 346, "_hist": 346, "transmit": [346, 452], "_allfield": [346, 362, 394], "accessor": 346, "proactiv": 346, "somedict": 346, "applydefinit": 346, "since_last_distribute_st": 346, "parmatercollect": 346, "proxi": 346, "accumul": [347, 498, 503, 504], "mark": [347, 451, 455, 507], "deseri": [347, 375], "datatyp": 347, "nativ": [347, 408, 452, 511], "wrote": 347, "dilig": 347, "paramstr": 347, "reassign": 347, "myparametercollect": 347, "diet": 347, "_p_speed": 347, "_representedtyp": 347, "__getitem__": 347, "categorynam": 347, "mask": 347, "complementari": 347, "compositetyp": 347, "vipan": 347, "htdoc": 347, "bitwisehelp": 347, "assignedmask": 347, "bitmask": 347, "syntax": [347, 507], "brief": [347, 492], "mutabl": [347, 408, 452], "engag": [347, 348, 448], "mimic": [348, 408], "blindli": 348, "parametercollectionclass": 348, "bparametercollect": 348, "needn": 348, "ourselv": 348, "sausag": 348, "profici": 348, "calss": 348, "paramt": 349, "writeabl": 349, "reactorparametercollect": 350, "pond": 351, "defunct": [352, 488], "tri": [352, 414, 419, 507], "modifiedpath": 352, "eqpathindex": 352, "eqpathcycl": 352, "outputfilenam": [352, 413], "geoemtri": 352, "test_sortnoloc": [353, 354], "test_uthzrmateri": [353, 354], "test_isonwhichsymmetrylin": [353, 354], "test_notesparamet": [353, 354], "test_it": [353, 354], "test_len": [353, 354], "test_append": [353, 354], "test_extend": [353, 354, 420, 427], "test_moveto": [353, 354], "test_scaleparamswhenmov": [353, 354], "test_getnam": [353, 354, 357], "test_getnum": [353, 354], "test_getloc": [353, 354], "test_getarea": [353, 354, 355, 356], "test_getvolum": [353, 354, 356], "test_adjustresolut": [353, 354], "test_getaxialmesh": [353, 354], "test_calculatezcoord": [353, 354], "test_gettotalheight": [353, 354], "test_getheight": [353, 354], "test_getreactiveheight": [353, 354], "test_getfissilemass": [353, 354, 357], "test_getmass": [353, 354, 355, 363], "test_getag": [353, 354], "test_makeaxialsnaplist": [353, 354], "test_snapaxialmeshtorefer": [353, 354], "test_updatefromassembli": [353, 354], "test_hasflag": [353, 354, 355, 357], "test_renameblocksaccordingtoassemblynum": [353, 354], "test_getblock": [353, 354], "test_getfirstblock": [353, 354], "test_getfirstblockbytyp": [353, 354], "test_getblockdata": [353, 354], "test_getmaxparam": [353, 354, 357], "test_getelevationsmatchingparamvalu": [353, 354], "test_calcavgparam": [353, 354], "test_calctotalparam": [353, 354], "test_reattach": [353, 354], "test_reestablishblockord": [353, 354], "test_countblocksoftyp": [353, 354, 363], "test_getdim": [353, 354], "test_getdominantmateri": [353, 354, 363], "test_iter": [353, 354, 365, 400, 420, 427], "test_getblocksandz": [353, 354], "test_getblocksbetweenelev": [353, 354], "test_getparamvaluesatz": [353, 354], "test_hascontinuouscoolantchannel": [353, 354], "test_carestiancoordin": [353, 354], "test_pinplenumvolum": [353, 354], "test_averageplenumtemperatur": [353, 354], "test_rot": [353, 354], "test_assem_block_typ": [353, 354], "test_assem_hex_typ": [353, 354], "test_getbindexfromzindex": [353, 354], "test_getelevationboundariesbyblocktyp": [353, 354], "test_snapaxialmeshtoreferenceconservingmassbasedonblockignit": [353, 354], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield": [353, 354], "test_areacheck": [353, 354], "test_updatedetailednden": [353, 355], "test_getsmeardens": [353, 355], "test_getsmeardensitymultiplelin": [353, 355], "test_getsmeardensityedgecas": [353, 355], "test_timenodeparam": [353, 355], "test_gettyp": [353, 355], "test_settyp": [353, 355], "test_homogenizedmixtur": [353, 355], "test_getxstyp": [353, 355], "test_27b_setenvgroup": [353, 355], "test_setzeroheight": [353, 355], "test_getvolumefractionswithzeroheight": [353, 355], "test_getvolumefractionwithoutpar": [353, 355], "test_cleardens": [353, 355], "test_removemass": [353, 355], "test_setnumberdens": [353, 355, 356], "test_setmass": [353, 355, 357], "test_gettotalmass": [353, 355], "test_replaceblockwithblock": [353, 355], "test_getwettedperimet": [353, 355], "test_getwettedperimetercircularinnerduct": [353, 355], "test_getwettedperimeterhexinnerduct": [353, 355], "test_getflowareaperpin": [353, 355], "test_getflowarea": [353, 355], "test_gethydraulicdiamet": [353, 355], "test_adjustuenrich": [353, 355], "test_setloc": [353, 355], "test_setbulimitinfo": [353, 355], "test_gettotalnden": [353, 355], "test_gethmden": [353, 355], "test_getfissilemassenrich": [353, 355], "test_getmicrosuffix": [353, 355], "test_geturaniummassenrich": [353, 355], "test_geturaniumnumenrich": [353, 355], "test_getnumberofatom": [353, 355], "test_getpu": [353, 355], "test_adjustdens": [353, 355], "test_completeinitialload": [353, 355], "test_hascompon": [353, 355], "test_getcomponentnam": [353, 355], "test_getcompon": [353, 355], "test_getcomponentsofshap": [353, 355], "test_getcomponentsofmateri": [353, 355], "test_getcomponentbynam": [353, 355], "test_getsortedcomponentsinsideofcomponentclad": [353, 355], "test_getsortedcomponentsinsideofcomponentduct": [353, 355], "test_getnumcompon": [353, 355], "test_getnumpin": [353, 355], "test_setlinpowbypin": [353, 355], "test_getcomponentareafrac": [353, 355], "test_100_getpinpitch": [353, 355], "test_101_getpitch": [353, 355], "test_102_setpitch": [353, 355], "test_106_getareafract": [353, 355], "test_expandelementaltoisotop": [353, 355], "test_expandallelementalstoisotop": [353, 355], "test_setpitch": [353, 355], "test_setimportantparam": [353, 355], "test_getmfp": [353, 355], "test_consistentmassdensityvolumebetweencoldblockandcoldcompon": [353, 355], "test_consistentmassdensityvolumebetweenhotblockandhotcompon": [353, 355], "test_pinmgflux": [353, 355], "test_getcomponentsinlinkedord": [353, 355], "test_mergewithblock": [353, 355], "test_getdimens": [353, 355, 356], "test_getplenumpin": [353, 355], "test_haspinpitch": [353, 355], "test_getreactionr": [353, 355, 357], "test_foundreactor": [353, 355], "test_noblueprint": [353, 355], "test_gettotalenergygenerationconst": [353, 355], "test_getfissionenergydepositionconst": [353, 355], "test_getcaptureenergygenerationconst": [353, 355], "test_getneutronenergydepositionconst": [353, 355], "test_getgammaenergydepositionconst": [353, 355], "test_negativevolum": [353, 355, 356], "test_component_typ": [353, 355], "test_coord": [353, 355], "test_block_dim": [353, 355], "test_symmetryfactor": [353, 355, 360], "test_retainst": [353, 355], "test_getpinloc": [353, 355], "test_getpincoordsandlocsagre": [353, 355], "test_getpincoord": [353, 355], "test_getpitchhomogeneousblock": [353, 355], "test_getductpitch": [353, 355], "test_getpincenterflattoflat": [353, 355], "test_gridcr": [353, 355], "test_gridnumpinsandloc": [353, 355], "test_gridnotcreatedmultiplemultipl": [353, 355], "getlocalcoordinatesblockbound": [353, 355], "test_validatereactorcornersup": [353, 355], "test_validatereactorflatsup": [353, 355], "test_radii": [353, 355], "test_theta": [353, 355], "test_axi": [353, 355], "test_verifyblockdim": [353, 355], "test_getthetarzgrid": [353, 355], "test_getpitchsquar": [353, 355], "test_getcartesiangrid": [353, 355], "test_heightexpansiondiffer": [353, 355], "test_massfuelheatup": [353, 355], "test_masscladheatup": [353, 355], "test_massductheatup": [353, 355], "test_masscoolheatup": [353, 355], "test_dimensionductheatup": [353, 355], "test_coldmass": [353, 355], "test_massconsist": [353, 355], "getcirclevoiddict": [353, 356], "getcirclefueldict": [353, 356], "test_factori": [353, 356], "test_componentinitializationanddupl": [353, 356], "test_factorybadshapenam": [353, 356], "test_invalidcoolantcomponentassign": [353, 356], "componentcl": [353, 356], "componentmateri": [353, 356], "componentdim": [353, 356], "test_initializecomponentmateri": [353, 356], "test_solid_materi": [353, 356], "test_cmp": [353, 356], "test_nonzero": [353, 356], "test_getcomponentarea": [353, 356], "test_getboundingcircleouterdiamet": [353, 356], "test_component_less_than": [353, 356], "test_fromcompon": [353, 356], "test_preservemassduringthermalexpans": [353, 356], "test_volumeafterclearcach": [353, 356], "test_densityconsist": [353, 356], "test_computevolum": [353, 356], "test_getareacoldtru": [353, 356], "test_getthermalexpansionfactorconservedmassbylinearexpansionperc": [353, 356], "test_thermallyexpand": [353, 356], "test_getcircleinnerdiamet": [353, 356], "test_dimensionthermallyexpand": [353, 356], "test_componentinteractionslinkingbydimens": [353, 356], "test_badcomponentnam": [353, 356], "test_componentinteractionslinkingbysubtract": [353, 356], "test_changenumberdens": [353, 356], "test_fuelmass": [353, 356], "test_theoreticaldensitysett": [353, 356], "tcold": [353, 356, 492], "twarm": [353, 356], "coldouterdiamet": [353, 356], "test_ht9expans": [353, 356], "test_uzrexpans": [353, 356], "test_b4cexpans": [353, 356], "runexpansiontest": [353, 356], "componentmassindependentofinputtemp": [353, 356], "expansionconservationhotheightdefin": [353, 356], "expansionconservationcoldheightdefin": [353, 356], "test_negativearea": [353, 356], "test_getperimet": [353, 356], "dimstotestexpans": [353, 356], "setclassdim": [353, 356], "test_validparamet": [353, 356], "test_updatedim": [353, 356], "test_setmassfrac": [353, 356], "test_setmassfraconcomponentmateri": [353, 356], "test_adjustmassfrac_invalid": [353, 356], "test_adjustmassfrac_u235": [353, 356], "test_adjustmassfrac_u": [353, 356], "test_adjustmassfrac_clear_zr": [353, 356], "test_adjustmassfrac_set_zr": [353, 356], "test_adjustmassfrac_leave_sam": [353, 356], "test_getenrich": [353, 356], "test_finalizeloaddbadjuststd": [353, 356], "test_getpinmgflux": [353, 356], "inactivenuclid": [353, 357], "elementstoexpand": [353, 357], "test_itercompon": [353, 357], "test_sort": [353, 357], "test_arechildernoftyp": [353, 357], "test_containsatleastonechildoftyp": [353, 357], "test_containsonlychildrenoftyp": [353, 357], "test_namecontain": [353, 357, 383, 390], "test_nucspec": [353, 357], "test_hasflagssubstr": [353, 357], "test_hasflagsnotypespecifi": [353, 357], "test_getboundingcirlceouterdiamet": [353, 357], "test_getparamnam": [353, 357], "test_updatevolum": [353, 357], "test_expandlfp": [353, 357], "test_setchildrenlumpedfissionproduct": [353, 357], "test_requireslumpedfissionproduct": [353, 357], "test_getlumpedfissionproductsifnecessarynullcas": [353, 357], "test_getintegratedmgflux": [353, 357], "test_syncparamet": [353, 357], "blueprintyaml": [353, 357], "test_ord": [353, 357], "test_sum": [353, 357], "test_constituentreport": [353, 357], "test_getfuelmass": [353, 357], "test_getchildrenincludemateri": [353, 357], "test_gethmmass": [353, 357], "test_getfpmass": [353, 357], "test_getminparam": [353, 357], "testflagsa": [353, 357], "testflagsb": [353, 357], "bprime": [353, 357], "test_flagseri": [353, 357], "test_flagconvers": [353, 357], "test_getnumberdensitieswithexpandedfissionproduct": [353, 357], "test_dimensionreport": [353, 357], "test_getatomicweight": [353, 357], "test_containsheavymet": [353, 357], "test_copyparamstochildren": [353, 357], "test_copyparamsfrom": [353, 357], "test_getreactionratedict": [353, 357], "test_constructor": [353, 358], "test_represent": [353, 358], "test_parentreactor": [353, 358], "test_getassembli": [353, 358], "test_updatenumberofcolumn": [353, 358], "test_getnextloc": [353, 358], "test_normalizenam": [353, 358, 363], "test_addlikedict": [353, 358], "test_addlikeattribut": [353, 358], "test_fromstr": [353, 359, 360], "test_fromstringwithnumb": [353, 359], "test_flagsdefinedwithnumb": [353, 359], "test_flagstoandfromstr": [353, 359], "test_tostringalphabet": [353, 359], "test_fromstringstrict": [353, 359], "test_lookup": [353, 359], "test_convertsstringswithnonflag": [353, 359], "test_defaultisfals": [353, 359], "test_str": [353, 360], "test_fromani": [353, 360], "test_baseconstructor": [353, 360], "test_domaintypenul": [353, 360], "test_checkvalidgeomsymmetrycombo": [353, 360], "test_readhexgeomxml": [353, 360], "test_readreactor": [353, 360], "test_asciimap": [353, 360, 400, 420], "test_readasciimap": [353, 360], "test_readtrzgeomxml": [353, 360], "test_trzyamlio": [353, 360], "boundary_param": [353, 361], "boundary_data": [353, 361], "pin_param": [353, 361], "pin_data": [353, 361], "test_orientationvector": [353, 361], "test_rotateboundaryparamet": [353, 361], "assertindexlocationequival": [353, 361], "test_pinrotationloc": [353, 361], "test_pinrotationcoordin": [353, 361], "test_updatechildloc": [353, 361], "test_pinparametersunmodifi": [353, 361], "test_orient": [353, 361], "test_mutabledefaultsnotsupport": [353, 362], "test_writesomeparamstodb": [353, 362], "test_serializer_pack_unpack": [353, 362], "test_parampropertydoesnotconflict": [353, 362], "test_parampropertydoesnotconflictwithnonedefault": [353, 362], "test_getwithoutdefaultraisesparametererror": [353, 362], "test_attemptingtosetparamwithoutsetterfail": [353, 362], "test_sett": [353, 362], "test_settergetterbas": [353, 362], "test_cannotdefineparameterwithsamenam": [353, 362], "test_paramdefinitionscompos": [353, 362], "test_cannotdefineparameterwithsamenameforcollectionsubclass": [353, 362], "test_cannotcreateattrbuteonparametercollectionsubclass": [353, 362], "test_cannotcreateinstanceof_nodefault": [353, 362], "test_cannotcreateinstanceof_undefin": [353, 362], "test_defaultloc": [353, 362], "test_categori": [353, 362], "test_parametercollectionshave__slots__": [353, 362], "scopeparamcollect": [353, 362], "test_oncategori": [353, 362], "test_onloc": [353, 362], "test_compl": [353, 362], "test_makeparametersreadonli": [353, 362], "test_coresfp": [353, 363], "test_factorysortset": [353, 363], "test_getsetparamet": [353, 363], "test_sortchildren": [353, 363], "test_sortassembyr": [353, 363], "test_gettotalparam": [353, 363], "test_geomtyp": [353, 363], "test_getblocksbyindic": [353, 363], "test_getallxssuffix": [353, 363], "test_genblocksbylocnam": [353, 363], "test_setpitchuniform": [353, 363], "test_setb10voloncr": [353, 363], "test_countfuelaxialblock": [353, 363], "test_getfirstfuelblockaxialnod": [353, 363], "test_getmaxassembliesinhexr": [353, 363], "test_getmaxnumpin": [353, 363], "test_addmultiplecor": [353, 363], "test_getreactor": [353, 363], "test_addmorenod": [353, 363], "test_findaxialmeshindexof": [353, 363], "test_findallaxialmeshpoint": [353, 363], "test_findallaxialmeshpoints_wsubmesh": [353, 363], "test_findallazimeshpoint": [353, 363], "test_findallradmeshpoint": [353, 363], "test_findneighbor": [353, 363], "test_getassembliesincircular": [353, 363], "test_getassembliesinhexr": [353, 363], "test_genassembliesaddedthiscycl": [353, 363], "test_getassemblypitch": [353, 363], "test_getnumassemblieswithallringsfilledout": [353, 363], "test_getnumassemblieswithallringsfilledoutbipass": [353, 363], "test_getnumenergygroup": [353, 363], "test_getminimumpercentfluxinfuel": [353, 363], "test_getassemblywithloc": [353, 363], "test_getassemblywithnam": [353, 363], "test_restorereactor": [353, 363], "test_differentnuclidemodel": [353, 363], "test_getsymmetryfactor": [353, 363], "test_getassembliesonsymmetrylin": [353, 363], "test_saveallflux": [353, 363], "test_getfluxvector": [353, 363], "test_getfuelbottomheight": [353, 363], "test_getgridbound": [353, 363], "test_loc": [353, 363], "test_removeassembli": [353, 363], "test_removeassemblynosfp": [353, 363], "test_removeassembliesinr": [353, 363], "test_removeassembliesinringbycount": [353, 363], "test_getnumr": [353, 363], "test_whennoassembli": [353, 363], "test_removeassembliesinringhex": [353, 363], "test_getnozzletyp": [353, 363], "test_createassemblyoftyp": [353, 363], "test_createfreshfe": [353, 363], "test_createassemblyoftypeexpandedcor": [353, 363], "test_getavgtemp": [353, 363], "test_getscalarevolut": [353, 363], "test_ifmissingspatialgrid": [353, 363], "test_pincoordsallblock": [353, 363], "test_nonuniformassem": [353, 363], "test_applythermalexpansion_coreconstruct": [353, 363], "test_updateblockbolheights_dbload": [353, 363], "test_buildmanualzon": [353, 363], "test_buildmanualzonesempti": [353, 363], "test_getnuclidecategori": [353, 363], "test_setpowerifnecessari": [353, 363], "test_findallmeshpoint": [353, 363, 364], "test_getassembliesinsquar": [353, 363], "test_getnuclidecategorieslog": [353, 363], "test_findneighborscartesian": [353, 363], "test_loadrzt": [353, 364], "test_loadrzt_reactor": [353, 364], "test_additem": [353, 365], "test_removeitem": [353, 365], "test_addloc": [353, 365], "test_removeloc": [353, 365], "test_repr": [353, 365], "test_dictionaryinterfac": [353, 365], "test_findzoneitisin": [353, 365], "test_getzoneloc": [353, 365], "test_getallloc": [353, 365], "test_summari": [353, 365], "test_sortzon": [353, 365], "uth": 354, "numblock": 354, "139765513992656": 354, "8660254": 354, "2500": 354, "carestiangrid": 354, "mock_sf": 355, "simlutan": 355, "165": [355, 361, 472, 481], "evacu": 355, "pullabl": 355, "magicmock": 355, "mock_captur": 355, "mock_fiss": 355, "mock_method": 355, "__name__": [355, 367, 456, 478, 480, 494, 509], "unshap": 355, "neutronical": 355, "grown": [355, 484], "excess": [355, 416, 418], "veifi": 356, "141592653589793": 356, "demonst": 356, "tutori": [356, 446, 449, 451, 457, 469, 482, 484, 486, 487, 492, 494, 498, 499, 500, 507, 513], "160": [356, 361], "170": [356, 361, 411], "dummycompositeparametercollect": 357, "dummyleafparametercollect": 357, "queryabl": 357, "block_metal_fuel": 357, "component_metal_fuel_fuel": 357, "component_metal_fuel_clad": 357, "450": [357, 468, 478, 492, 498, 499, 507], "component_metal_fuel_bond": 357, "component_metal_fuel_cool": 357, "component_metal_fuel_duct": 357, "block_oxide_fuel": 357, "compost": 357, "pickleabl": 359, "cornerfastflux": [361, 503, 513], "pointscornerdpa": [361, 503], "pointscornerdpar": [361, 503], "pointscornerfastfluxfr": [361, 503], "pointsedgedpa": [361, 503], "pointsedgedpar": [361, 503], "pointsedgefastfluxfr": [361, 503], "thedgetemp": [361, 503], "thcorntemp": [361, 503], "percentbubypin": [361, 503], "121": 361, "122": 361, "123": [361, 456], "124": 361, "125": 361, "126": 361, "129": 361, "130": [361, 411], "131": 361, "132": 361, "133": 361, "134": 361, "136": 361, "137": 361, "138": 361, "139": [361, 480], "142": [361, 492, 498], "143": 361, "145": [361, 507], "146": 361, "147": 361, "148": 361, "149": 361, "151": 361, "152": 361, "153": [361, 498], "154": [361, 480], "155": 361, "157": 361, "158": 361, "159": 361, "161": 361, "162": 361, "163": 361, "166": 361, "167": 361, "168": 361, "171": 361, "172": [361, 469, 481], "174": 361, "175": [361, 464], "176": 361, "178": 361, "179": 361, "182": 361, "183": 361, "184": [361, 492], "185": 361, "186": 361, "188": 361, "189": 361, "190": [361, 411], "191": [361, 498], "192": 361, "193": 361, "194": 361, "196": 361, "198": 361, "202": 361, "204": 361, "205": 361, "206": 361, "207": 361, "208": 361, "209": 361, "210": 361, "211": 361, "212": 361, "213": 361, "214": 361, "216": [361, 496], "reinforc": 361, "wherev": 361, "assort": [362, 404], "_writeparam": 362, "signifi": [362, 513], "lifecycl": 362, "accident": [362, 397, 415, 484], "customset": [363, 382], "getgridbound": 363, "mockgetassembli": 363, "godiva": 364, "heu": 364, "zonetyp": 366, "heavier": 366, "chicken": 366, "egg": [366, 419], "zonenam": [366, 507], "zoneloc": 366, "defint": 366, "consol": 367, "logger": [367, 369, 384, 397, 507, 509], "getlogg": [367, 456, 509], "someexcept": 367, "mpirank": [367, 415], "logdir": 367, "indent": [367, 442, 507], "levelnam": 367, "msgtype": [367, 384], "mangl": 367, "dedupl": 367, "stub": 367, "intlevel": 367, "isstderr": 367, "csfile": 368, "databaseset": [368, 370], "globalset": [368, 370, 494], "reportset": [368, 370], "tightcouplingset": [368, 370, 507, 510], "serializetightcouplingset": [368, 370, 374], "tightcouplingsettingdef": [368, 370, 374], "tightcouplingsettingsvalid": [368, 370, 374], "test_inspector": [368, 378], "testinspector": [368, 378, 379], "test_set": [368, 375, 378], "dummysettingplugin1": [368, 378, 380], "dummysettingplugin2": [368, 378, 380], "pluginaddsopt": [368, 378, 380], "testset": [368, 378, 380, 381], "testaddingopt": [368, 378, 380], "testsettings2": [368, 378, 380], "testsettingsutil": [368, 378, 380], "testflaglistset": [368, 378, 380], "testsettingsvalidationutil": [368, 378, 380], "test_settingsio": [368, 378], "settingsfailuretest": [368, 378, 381], "settingsreadertest": [368, 378, 381], "settingsrenametest": [368, 378, 381], "settingswritertest": [368, 378, 381], "mockentrypoint": [368, 378, 381], "settingargstest": [368, 378, 381], "defaultcasetitl": [368, 369], "environmentset": [368, 369], "reverttodefault": [368, 369, 375], "failonload": [368, 369], "loadfrominputfil": [368, 369], "loadfromstr": [368, 369], "initlogverbos": [368, 369], "writetoyamlfil": [368, 369], "getsettingssetbyus": [368, 369], "writetoyamlstream": [368, 369], "updateenvironmentsettingsfrom": [368, 369], "setmoduleverbos": [368, 369], "underlyingtyp": [368, 375], "setvalu": [368, 375], "changedefault": [368, 375], "isdefault": [368, 375], "offdefault": [368, 375], "getcustomattribut": [368, 375], "getdefaultattribut": [368, 375], "renameset": [368, 376], "settingsinputformat": [368, 376], "fromext": [368, 376], "readfromfil": [368, 376], "readfromstream": [368, 376], "writeyaml": [368, 376], "iscorrect": [368, 377], "no_act": [368, 377, 494], "addqueri": [368, 377], "addquerybadlocationwilllikelyfail": [368, 377], "addquerycurrentsettingmaynotsupportfeatur": [368, 377], "hundr": [369, 484], "begun": [369, 507], "setpath": 369, "went": 369, "hoc": [369, 493], "fromfil": 369, "fpath": 369, "usersettingsnam": 369, "settingssetbyus": [369, 376], "writabl": 369, "otherc": 369, "couplingset": 374, "tightcouplingsettingsdict": 374, "coeff": 375, "enforcedopt": 375, "sublabel": 375, "isenviron": 375, "oldnam": [375, 376], "legal": 375, "expir": [375, 376], "subtyp": 375, "serializ": 375, "newdefault": 375, "compund": 375, "gone": [375, 503, 507], "residu": 375, "settings_inst": 376, "dialogu": 377, "imposs": [377, 412, 455, 509], "propos": 377, "affirm": 377, "interplai": 377, "correctionsmad": 377, "initiallambda": 377, "versionthi": 377, "versionrequir": 377, "test_queri": [378, 379], "test_overwritesettingscorrectivequeri": [378, 379], "test_changeofc": [378, 379], "test_noncorrectivequeri": [378, 379], "test_callablecorrectioncheck": [378, 379], "test_assignc": [378, 379], "test_createqueryrevertbadpathtodefault": [378, 379], "test_correctcyclestozeroburnup": [378, 379], "test_checkforbothsimpleanddetailedcyclesinput": [378, 379], "test_updateenvironmentsettingsfrom": [378, 380], "test_metadata": [378, 380], "test_addingopt": [378, 380], "test_schemacheckstyp": [378, 380], "test_listsmut": [378, 380], "test_listcoercion": [378, 380], "test_typedetect": [378, 380], "test_cswork": [378, 380], "test_pluginvalidatorsarediscov": [378, 380], "test_pluginset": [378, 380], "test_default": [378, 380], "test_getsettingssetbyus": [378, 380], "test_setmoduleverbos": [378, 380], "test_getfailur": [378, 380], "test_settingisokaytograb": [378, 380], "test_modifi": [378, 380], "test_copyset": [378, 380], "test_copysettingnotdefault": [378, 380], "test_empti": [378, 380], "test_recursivescan": [378, 380], "test_prompt": [378, 380], "test_flaglistset": [378, 380], "test_invalidflaglisttypeerror": [378, 380], "test_validatevers": [378, 380], "test_settingsobjset": [378, 381], "test_loadfromyamlfailsonbadnam": [378, 381], "test_invalidfil": [378, 381], "test_basicsettingsread": [378, 381], "test_readfromfil": [378, 381], "test_renam": [378, 381], "test_collidingrenam": [378, 381], "test_writeshort": [378, 381], "test_writemedium": [378, 381], "test_writeful": [378, 381], "test_writeyaml": [378, 381], "test_errorsettingswrit": [378, 381], "test_commandlineset": [378, 381], "test_cannotloadsettingsafterparsingcommandlineset": [378, 381], "sound": 380, "particuar": 380, "_customschema": 380, "testsetting1": 381, "testsetting2": 381, "testsetting3": 381, "spare": 382, "inputfilepath": 382, "home": [382, 484, 492], "runner": [382, 492], "inputfilenam": [382, 471], "test_root": 382, "breat": 382, "maxnumr": 382, "neeed": 382, "refdirectori": 383, "abspath": 383, "fixturefunct": 383, "expectedfilepath": 383, "actualfilepath": 383, "falseneglist": 383, "mainten": 383, "rebaselin": 383, "accomod": 383, "epsilon": [383, 510], "impl": [383, 456], "rstrip": 383, "whitespac": [383, 419, 455], "parsabl": 383, "presenc": 383, "approv": 383, "clearsinglewarn": [383, 384], "getstdout": [383, 384], "emptystdout": [383, 384], "getstderrvalu": [383, 384], "test_getparamrenam": [383, 386], "test_registerpluginflag": [383, 386], "test_getparamrenamesinvalid": [383, 386], "test_vers": [383, 386], "test_getset": [383, 386], "test_splashtext": [383, 386], "test_splashtextdifferentapp": [383, 386], "test_isstablereleasevers": [383, 386], "test_disablefutureconfigur": [383, 386], "test_getdefaultpluginmanag": [383, 386], "test_overconfigur": [383, 386], "test_main": [383, 386], "test_comparefilessucess": [383, 387], "test_comparefilesfail": [383, 387], "test_comparefilessucceedfalseneg": [383, 387], "test_custom": [383, 388], "test_rank": [383, 389, 393], "test_nonnonedata": [383, 389, 393], "test_isrequesteddetailpoint": [383, 390], "test_en": [383, 390], "test_predistributest": [383, 390], "test_coupleract": [383, 390], "test_storepreviousiterationvalu": [383, 390], "test_storepreviousiterationvalueexcept": [383, 390], "test_isconvergedvalueerror": [383, 390], "test_isconverg": [383, 390], "test_isconvergedruntimeerror": [383, 390], "test_getlistdimens": [383, 390], "test_loadc5g7": [383, 391], "test_parallel": [383, 392, 426], "test_serialgath": [383, 392], "test_mpiit": [383, 392], "test_perfectbalanc": [383, 392], "test_excessprocess": [383, 392], "test_typicalbalanc": [383, 392], "test_runactionsdistributionact": [383, 392], "test_runactionsdistributestateact": [383, 392], "test_diagnosepickleerrortestreactor": [383, 392], "test_disableforexclusivetask": [383, 392], "test_makequeu": [383, 392], "test_basicoperatormpi": [383, 393], "test_primaryexcept": [383, 393], "test_primarycrit": [383, 393], "test_finalizeinteract": [383, 393], "test_distributeset": [383, 393], "test_distributereactor": [383, 393], "test_distributeinterfac": [383, 393], "test_distributest": [383, 393], "test_compileresult": [383, 393], "test_cleanpathmpi": [383, 393], "test_noconflict": [383, 394], "test_withconflict": [383, 394], "test_withconflictsbutsamevalu": [383, 394], "test_conflictsmaintainwithstateretain": [383, 394], "test_runparamsweep": [383, 395], "test_rundatamodel": [383, 395], "test_defineflag": [383, 396], "test_axialexpansionhook": [383, 396], "test_passivedbloadplugin": [383, 396], "test_beforereactorconstructionhook": [383, 396], "test_defineparamet": [383, 396], "test_exposeinterfac": [383, 396], "test_pluginsexposeinterfac": [383, 396], "test_defineblueprintssect": [383, 396], "test_setverbosityfrominteg": [383, 397], "test_setverbosityfromstr": [383, 397], "test_verbosityoutofrang": [383, 397], "test_invalidsetverbositybystr": [383, 397], "test_parentrunlog": [383, 397], "test_getwhitespac": [383, 397], "test_warningreport": [383, 397], "test_warningreportinvalid": [383, 397], "test_closelog": [383, 397], "test_setverbos": [383, 397], "test_setverbositybeforestartlog": [383, 397], "test_callingstartlogmultipletim": [383, 397], "test_concatenatelog": [383, 397], "test_createlogdir": [383, 397], "test_getduplicatesfilt": [383, 397], "test_allowstopdupl": [383, 397], "test_comparefilelin": [383, 398], "test_userpluginsflag": [383, 399], "test_validateuserpluginlimit": [383, 399], "test_registeruserplugin": [383, 399], "test_registeruserpluginsabspath": [383, 399], "test_registeruserpluginsfromset": [383, 399], "test_userpluginonprocesscoreload": [383, 399], "test_userpluginwithinterfac": [383, 399], "test_registerrepeateduserplugin": [383, 399], "_runlog": 384, "shuffler": 385, "factorlist": 385, "coexist": 386, "plugin1": 386, "dummyact": 390, "notif": 390, "coupler": 390, "rag": 390, "c5g7": [391, 486, 487, 498, 499, 513], "numproc": 392, "numobject": 392, "numobj": 392, "imbal": 392, "_diagnosepickleerror": 392, "featurest": 393, "commandlin": [393, 455], "mpi4pi": [393, 426, 452, 484, 485, 486, 514], "failer": 393, "mockopmpi": 393, "unittest": [394, 429, 455], "ipynb": [395, 446, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480], "inadvert": 395, "successfulli": [396, 400, 509], "carefulli": 397, "startlog": 397, "concat": 397, "flex": [399, 494], "meaningless": 399, "filepath": [400, 415, 442], "sha": [400, 419, 492], "timestepnum": 400, "timenodenum": 400, "picklechain": 400, "a101": 400, "fix_import": 400, "buffer_callback": 400, "pickler": 400, "testpickl": 400, "sob": 400, "classcount": 400, "heirarchi": 400, "trend": 400, "originallist": 400, "listtoprepend": 400, "beginn": 400, "prepend": [400, 401, 419], "cap": 400, "prestr": 400, "4d": 400, "4e": [400, 470, 492], "datalist": 400, "maxnumberofvaluesbeforedelimit": 400, "delimit": 400, "hello": 400, "n4": 400, "minv": 400, "maxv": 400, "xlabel": [400, 418, 469, 470, 475, 480, 495, 496], "ylabel": [400, 418, 469, 470, 475, 480, 495, 496], "xtick": 400, "ytick": 400, "cmap": [400, 477], "figsiz": [400, 469, 477, 480, 496], "friendli": [400, 402], "hyphen": [400, 419], "otherdictionari": 400, "dst": 400, "shutil": [400, 415], "testasciimap": [400, 420, 421], "test_codetim": [400, 420, 441], "codetimingtest": [400, 420, 422], "test_custom_except": [400, 420], "customexceptiontest": [400, 420, 423], "test_densitytool": [400, 420], "testdensitytool": [400, 420, 424], "test_directorychang": [400, 420], "expectedexcept": [400, 420, 425], "testdirectorychang": [400, 420, 425], "test_directorychangersmpi": [400, 420], "revealyourdirectori": [400, 420, 426], "testmpi": [400, 420, 426], "exampleflag": [400, 420, 427], "test_hexagon": [400, 420], "testiter": [400, 420, 429], "test_mathemat": [400, 420], "testmath": [400, 420, 430], "test_outputcach": [400, 420], "testoutputcach": [400, 420, 431], "test_pars": [400, 420], "literalevaltest": [400, 420, 432], "test_pathtool": [400, 420], "pathtoolstest": [400, 420, 433], "test_plot": [400, 420], "testplot": [400, 420, 434], "testpatch": [400, 420, 434], "test_properti": [400, 420], "immutableclass": [400, 420, 435], "immutablepropertytest": [400, 420, 435], "test_reportplot": [400, 420], "testradar": [400, 420, 436], "test_tabul": [400, 420], "testtabulateapi": [400, 420, 437], "testtabulateinput": [400, 420, 437], "testtabulateintern": [400, 420, 437], "testtabulateoutput": [400, 420, 437], "test_textprocessor": [400, 420], "testtextprocessor": [400, 420, 438], "yamlincludetest": [400, 420, 438], "sequentialreadertest": [400, 420, 438], "test_triangl": [400, 420], "test_unit": [400, 420], "testunit": [400, 420, 440], "testgeneralutil": [400, 420, 441], "asciilin": [400, 401], "asciioffset": [400, 401], "asciilabelbyindic": [400, 401], "gridcontentstoascii": [400, 401], "gettim": [400, 402], "starttim": [400, 402], "endtim": [400, 402], "startal": [400, 402], "stopal": [400, 402], "getactivetim": [400, 402], "timelin": [400, 402, 507], "movefil": [400, 405], "retrievefil": [400, 405], "getrandomdirectori": [400, 405], "sortedfield": [400, 408], "to_byt": [400, 408], "from_byt": [400, 408], "set_val": [400, 416], "updatepagedepthcolor": [400, 416], "sep": [400, 419, 492], "hline": [400, 419], "headerrow": [400, 419], "lineabov": [400, 419], "linebelow": [400, 419], "linebelowhead": [400, 419], "linebetweenrow": [400, 419], "withheaderhid": [400, 419], "unicode_whitespace_tran": [400, 419], "uspac": [400, 419], "wordsep_r": [400, 419], "wordsep_simple_r": [400, 419], "sentence_end_r": [400, 419], "from_iter": [400, 419], "func": [400, 403, 411, 412, 419, 452], "issuewarningonfindingtext": [400, 442], "raiseerroronfindingtext": [400, 442], "raiseerroronfindingpattern": [400, 442], "searchfortext": [400, 442], "searchforpattern": [400, 442], "searchforpatternonnextlin": [400, 442], "consumelin": [400, 442], "scipat": [400, 442], "decim": [400, 419, 437, 442], "errorcheck": [400, 442], "checkerror": [400, 442], "fsearch": [400, 438, 442], "reimplement": 401, "simplic": [401, 498], "vocabulari": 401, "nestabl": 401, "latticeblueprint": 401, "programat": [401, 497, 507], "linenum": 401, "colnum": 401, "ij": 401, "col": [401, 437], "decrement": [401, 412], "jaggedli": 401, "ridicul": 401, "horizont": [401, 416], "_ijmax": 401, "ijmax": 401, "toward": [401, 419, 480, 484], "timer": [402, 507], "mymethod": 402, "mymethod2": 402, "event_nam": 402, "unfriendli": 402, "unstart": 402, "master": [402, 492], "kill": [402, 456], "inclusion_cutoff": 402, "total_tim": 402, "_timer": 402, "__str__": 402, "base_file_nam": 402, "granular": 403, "inport": 403, "abort": 403, "uninteract": 403, "custommsgend": 403, "matnum": [404, 462], "minden": 404, "sigfig": 404, "mcnp6compat": 404, "mcnplibrari": 404, "mcard": 404, "nuclidevector": 404, "elementexpansionpair": 404, "nuclidbas": 404, "isotopicsubset": 404, "nuclideinventori": 404, "enrichedmassfrac": 404, "fertilemassfrac": 404, "remix": 404, "filestomov": [405, 406], "filestoretriev": [405, 406], "dumponexcept": 405, "outputpath": [405, 406], "cwd": 405, "tell": [405, 456, 471, 494, 498, 507], "stall": [405, 452], "chdir": 405, "race": 406, "importentirepackag": 407, "aenum": 408, "provis": [408, 507], "arithmet": 408, "emul": 408, "unlimit": 408, "myflag": 408, "foo": [408, 420, 427], "baz": [408, 420, 427], "byteord": 408, "snake_cas": [408, 455], "pythagorean": 410, "theorem": 410, "initialcellindex": 410, "orientationnumb": 410, "lst": 411, "lenght": 411, "padwith": [411, 452], "padwithnon": 411, "binaryrow": 411, "valuedict": 411, "hexrow": 411, "1000000": [411, 507], "0x": 411, "although": [411, 448, 507], "forev": 411, "remedi": 411, "dropwhil": 411, "takewhil": 411, "itertool": [411, 416, 473, 474], "pred": 411, "newseq": 411, "summat": [411, 412, 507, 509], "expon": 412, "repeatedlist": 412, "9r": [412, 507], "listtosearch": 412, "indx": 412, "searchlist": 412, "searchvalu": 412, "strtofloat": 412, "03231714805651": 412, "03231714805651e": 412, "scientif": [412, 494], "prevvalu": 412, "inputit": 412, "x0": 412, "y0": 412, "x1": [412, 443], "y1": [412, 443], "targetx": 412, "targeti": 412, "interpi": 412, "interpx": 412, "maxiter": 412, "positiveguess": 412, "tol": 412, "newton": 412, "p2": 412, "p3": 412, "parabola": 412, "x2": [412, 443], "x3": [412, 443], "y2": [412, 443], "y3": [412, 443], "bx": 412, "ap": 412, "cp": [412, 494], "targetk": [412, 507], "bt": 412, "2at": 412, "2a": 412, "slope": [412, 505], "realroot": 412, "newtim": 412, "v1": [412, 452, 456], "v2": [412, 452], "xin": 412, "yin": 412, "xout": 412, "resampl": 412, "realloc": 412, "resmampl": 412, "degreescounterclockwis": 412, "radianscounterclockwis": 412, "xr": 412, "yr": [412, 502, 505, 512], "crc": 413, "instantli": 413, "blah": 413, "inpfil": 413, "mccaa": 413, "rmzflx": 413, "outputfound": 413, "outfil": 413, "subprocess": 413, "exepath": 413, "inputpath": 413, "cachedir": 413, "loctoretrieveto": 413, "greedi": 413, "cachedfold": 413, "destruct": [413, 503], "teardown": 413, "requestedtyp": 414, "allownon": 414, "matchingnonetyp": 414, "datetim": 414, "pathpart": 415, "filepathdescript": 415, "sourcepath": 415, "destinationpath": 415, "path1": 415, "path2": 415, "ioerror": 415, "pathattr": 415, "myclass": 415, "userspecifiedmodul": 415, "copiou": 415, "everyon": [415, 455, 456], "misplac": 415, "net": [415, 503], "rmtree": 415, "matplotlib": [416, 418, 455, 464, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 492, 495, 496, 499], "bewar": [416, 418], "gobbl": [416, 418], "judici": [416, 418], "advis": [416, 418, 507], "skippedcolor": 416, "color": [416, 463, 469, 470, 480, 496, 499], "css": 416, "indefinit": 416, "bare": [416, 456], "cmapnam": 416, "jet": 416, "labelfmt": [416, 464, 479], "3f": 416, "legendmap": 416, "fontsiz": [416, 472, 477, 480], "minscal": 416, "maxscal": 416, "axisequ": 416, "makecolorbar": 416, "cbarlabel": 416, "shufflearrow": 416, "titles": 416, "depthindex": [416, 492], "viewabl": 416, "referencestokeep": 416, "colormap": 416, "pylab_exampl": 416, "show_colormap": 416, "labl": 416, "decript": 416, "legend": [416, 418, 468, 470, 475], "autoscal": 416, "ellips": 416, "patch": [416, 434, 442, 472, 480, 490], "facemap": [416, 467, 481, 482, 487, 490, 500], "typenumassem": 416, "rdylbu": 416, "fig": [416, 464, 468, 470, 472, 473, 474, 477, 478, 480], "galleri": [416, 450, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484], "sliderlabel": 416, "updatefunc": 416, "selecteddepthcolor": 416, "valinit": 416, "slider": 416, "valmin": 416, "valmax": 416, "_event": 416, "newval": 416, "maxassem": 416, "yaxislabel": 416, "plt": [416, 464, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 492, 495, 496, 499], "histogram": 416, "materiallist": 416, "fileformat": 416, "svg": [416, 507], "pictur": 416, "jpg": [416, 507], "xsname": 416, "noshow": 416, "ipython": [416, 499], "u238na": 416, "dependencyact": 417, "properrti": 417, "esenti": 417, "someclass": 417, "mynum": [417, 420, 435], "__doc__": [417, 419], "unlock": [417, 451], "unassign": 417, "dbi": [418, 492], "abscissa": 418, "chart": [418, 449, 467, 481, 482, 493, 500], "reactornam": 418, "radar": [418, 436], "spider": 418, "xmajortick": 418, "ymajortick": 418, "legendlabel": 418, "tick": 418, "legendslabel": 418, "zval": [418, 477], "datav": 418, "nplot": 418, "ylog": 418, "mit": [419, 437, 448, 456, 484], "licens": [419, 437, 450, 494, 498], "thank": [419, 437], "github": [419, 437, 446, 448, 455, 456, 484, 485, 487, 494, 514], "astanin": [419, 437], "anic": 419, "plain": [419, 437, 454, 509], "sun": 419, "696000": 419, "1989100000": 419, "6371": 419, "5973": 419, "moon": 419, "1737": [419, 489], "mar": 419, "3390": 419, "641": 419, "9891e": 419, "firstrow": [419, 437], "headerless": 419, "sex": 419, "alic": 419, "numalign": 419, "stralign": 419, "colglobalalign": [419, 437], "colalign": [419, 437], "coltyp": 419, "headersglobalalign": [419, 437], "headersalign": [419, 437], "behaviour": 419, "intfmt": 419, "floatfmt": 419, "missingv": 419, "spam": 419, "tablefmt": 419, "rst": [419, 437], "tsv": 419, "tabulateformat": [419, 437], "pseudograph": 419, "9999": 419, "451": 419, "pandoc": [419, 446], "simple_t": 419, "emac": 419, "el": 419, "grid_tabl": 419, "restructuredtext": 419, "42992e1": 419, "429920": 419, "disablenumpars": 419, "grain": 419, "longest": 419, "maxcolwidth": [419, 437], "john": 419, "maxheadercolwidth": [419, 437], "showindex": 419, "rowalign": 419, "psql": 419, "initial_ind": 419, "subsequent_ind": 419, "expand_tab": 419, "replace_whitespac": 419, "fix_sentence_end": 419, "break_long_word": 419, "drop_whitespac": 419, "break_on_hyphen": 419, "tabsiz": 419, "max_lin": 419, "tweak": 419, "_wrap_chunk": 419, "sentenc": [419, 456], "punctuat": 419, "unavoid": 419, "imperfect": 419, "trail": [419, 455], "x0b": 419, "x0c": 419, "em": 419, "dash": 419, "reformat": 419, "paragraph": [419, 454, 456], "expandtab": 419, "__next__": 419, "exhaust": 419, "field_nam": 419, "_asdict": 419, "_replac": 419, "iter1": 419, "iter2": 419, "stopiter": 419, "substitut": [419, 437], "test_hexthird": [420, 421], "test_hexwithhol": [420, 421], "test_hexwithemptyrow": [420, 421], "test_troublesomehexthird": [420, 421], "test_hexfullcornersupspotcheck": [420, 421], "test_hexfullcornersup": [420, 421], "test_hexfullflatsup": [420, 421], "test_hexfullflat": [420, 421], "test_hexsmallflat": [420, 421], "test_flathexbas": [420, 421], "test_method_definit": [420, 422], "test_alternate_usag": [420, 422], "test_property_access": [420, 422], "test_mast": [420, 422], "test_messy_starts_and_stop": [420, 422], "exampleinfomessag": [420, 423], "test_info_decor": [420, 423], "exampleimportantmessag": [420, 423], "test_important_decor": [420, 423], "examplewarnmessag": [420, 423], "test_warn_decor": [420, 423], "examplewarnwhenrootmessag": [420, 423], "test_warn_when_root_decor": [420, 423], "test_expandelementalmassfracstonuclid": [420, 424], "test_expandelementalzeromassfrac": [420, 424], "test_getchem": [420, 424], "test_expandel": [420, 424], "test_applyisotopicsmix": [420, 424], "test_getndensfrommass": [420, 424], "test_getmassfract": [420, 424], "test_calculatenumberdens": [420, 424], "test_getmassingram": [420, 424], "test_normalizenuclidelist": [420, 424], "test_formatmaterialcard": [420, 424], "test_mpiactionfailsonnonexistentpath": [420, 425], "test_except": [420, 425], "test_exception_dis": [420, 425], "test_change_to_nonexisting_fail": [420, 425], "test_change_to_nonexisting_works_forc": [420, 425], "test_temporary_clean": [420, 425], "test_file_retriev": [420, 425], "test_file_retrieval_missing_fil": [420, 425], "test_mpidirectorychang": [420, 426], "test_auto": [420, 427], "test_collision_extens": [420, 427], "test_collision_cr": [420, 427], "test_bool": [420, 427, 437], "test_inclus": [420, 427], "test_bitwis": [420, 427], "test_hash": [420, 427], "test_getitem": [420, 427], "n_fuzzy_draw": [420, 428], "test_hexagon_area": [420, 428], "test_numpositionsinr": [420, 428], "test_rotatedcellcent": [420, 428], "test_rotatedfirstr": [420, 428], "test_rotatefuzzi": [420, 428], "test_positionsuptor": [420, 428], "test_rotatedcellindexerror": [420, 428], "test_rotatedcellorientationerror": [420, 428], "test_indexwithnorot": [420, 428], "test_chunk": [420, 429], "test_split": [420, 429], "test_packingandunpackingbinarystr": [420, 429], "test_packingandunpackinghexstr": [420, 429], "test_sequenceinit": [420, 429], "test_sequ": [420, 429], "test_copysequ": [420, 429], "test_extendsequ": [420, 429], "test_appendsequ": [420, 429], "test_addingsequ": [420, 429], "test_listpivot": [420, 429], "test_arraypivot": [420, 429], "test_average1dwithintoler": [420, 430], "test_average1dwithintoleranceinvalid": [420, 430], "test_converttoslic": [420, 430], "test_efmt": [420, 430], "test_expandrepeatedfloat": [420, 430], "test_findclosest": [420, 430], "test_findnearestvalu": [420, 430], "test_fixthreedigitexp": [420, 430], "test_getfloat": [420, 430], "test_getstepsfromvalu": [420, 430], "test_ismonoton": [420, 430], "test_linearinterpol": [420, 430], "test_minimizescalarfunc": [420, 430], "test_newtonsmethod": [420, 430], "test_parabola": [420, 430], "test_parabolicinterpol": [420, 430], "test_relerr": [420, 430], "test_resamplestepwiseavg0": [420, 430], "test_resamplestepwiseavg1": [420, 430], "test_resamplestepwiseavg2": [420, 430], "test_resamplestepwiseavg3": [420, 430], "test_resamplestepwiseavg4": [420, 430], "test_resamplestepwiseavg5": [420, 430], "test_resamplestepwiseavg6": [420, 430], "test_resamplestepwiseavg7": [420, 430], "test_resamplestepwisesum0": [420, 430], "test_resamplestepwisesum1": [420, 430], "test_resamplestepwisesum2": [420, 430], "test_resamplestepwisesum3": [420, 430], "test_resamplestepwisesum4": [420, 430], "test_resamplestepwisesum5": [420, 430], "test_resamplestepwisesum6": [420, 430], "test_resamplestepwisesum7": [420, 430], "test_resamplestepwiseavgallnon": [420, 430], "test_resamplestepwiseavgonenon": [420, 430], "test_resamplestepwisesumallnon": [420, 430], "test_resamplestepwisesumonenon": [420, 430], "test_resamplestepwiseavgcomplicatednon": [420, 430], "test_resamplestepwiseavgnparrai": [420, 430], "test_resamplestepwiseavgnparrayaverag": [420, 430], "test_rotatexi": [420, 430], "test_hashfil": [420, 431], "test_deletecach": [420, 431], "test_getcachedfold": [420, 431], "test_makeoutputmanifest": [420, 431], "test_retrieveoutput": [420, 431], "test_tryliteralev": [420, 432], "test_parsevalu": [420, 432], "test_copyorwarnfil": [420, 433], "test_copyorwarndir": [420, 433], "test_separatemoduleandattribut": [420, 433], "test_importcustommodul": [420, 433], "test_moduleandattributeexist": [420, 433], "test_cleanpathnompi": [420, 433], "test_isfilepathnew": [420, 433], "test_isaccess": [420, 433], "test_plotdepthmap": [420, 434], "test_plotassemblytyp": [420, 434], "test_plotblockflux": [420, 434], "test_plothexblock": [420, 434], "test_plotcartesianblock": [420, 434], "test_makeassempatch": [420, 434], "test_retreivingunassignedvalueraiseserror": [420, 435], "test_cannotassignvaluetoimmutableproperti": [420, 435], "test_unlockdoesnotpermitsreassignmentofanimmutableproperti": [420, 435], "test_radar": [420, 436], "test_createplotmetadata": [420, 436], "test_plotaxialprofil": [420, 436], "test_keffvstim": [420, 436], "test_valuevstim": [420, 436], "test_movesvscycl": [420, 436], "test_xshistoryvstim": [420, 436], "test_tabulateformat": [420, 437], "test_iterableofempti": [420, 437], "test_iterableofiter": [420, 437], "test_iterableofiterableshead": [420, 437], "test_iterableofiterablesfirstrow": [420, 437], "test_listoflist": [420, 437], "test_listoflistsfirstrow": [420, 437], "test_listoflistskei": [420, 437], "test_dictlik": [420, 437], "test_numpy2d": [420, 437], "test_numpy2dfirstrow": [420, 437], "test_numpy2dkei": [420, 437], "test_numpyrecordarrai": [420, 437], "test_numpyrecordarraykei": [420, 437], "test_numpyrecordarrayhead": [420, 437], "test_listofnamedtupl": [420, 437], "test_listofnamedtupleskei": [420, 437], "test_listofdict": [420, 437], "test_listofuserdict": [420, 437], "test_listofdictskei": [420, 437], "test_listofuserdictskei": [420, 437], "test_listofdictswithmissingkei": [420, 437], "test_listofdictsfirstrow": [420, 437], "test_listofdictswithdictofhead": [420, 437], "test_listofdictswithlistofhead": [420, 437], "test_listofordereddict": [420, 437], "test_listbyt": [420, 437], "test_tightcouplingexampl": [420, 437], "test_aligncolumndecim": [420, 437], "test_aligncolumndecimalwiththousandsepar": [420, 437], "test_aligncolumndecimalwithincorrectthousandsepar": [420, 437], "test_aligncolumnnon": [420, 437], "test_aligncolumnmultilin": [420, 437], "test_aligncellveriticallyonelineonli": [420, 437], "test_aligncellveriticallytopsingletextmultiplepad": [420, 437], "test_aligncellveriticallycentersingletextmultiplepad": [420, 437], "test_aligncellveriticallybottomsingletextmultiplepad": [420, 437], "test_aligncellveriticallytopmultitextmultiplepad": [420, 437], "test_aligncellveriticallycentermultitextmultiplepad": [420, 437], "test_aligncellveriticallybottommultitextmultiplepad": [420, 437], "test_assortedrareedgecas": [420, 437], "test_buildlin": [420, 437], "test_buildrow": [420, 437], "test_format": [420, 437], "test_ismultilin": [420, 437], "test_multilinewidth": [420, 437], "test_normalizetabulardata": [420, 437], "test_typ": [420, 437], "test_visiblewidth": [420, 437], "test_wraptexttocolwidth": [420, 437], "test_plain": [420, 437], "test_plainheaderless": [420, 437], "test_plainmultilineheaderless": [420, 437], "test_plainmultilin": [420, 437], "test_plainmultilinewithlink": [420, 437], "test_plainmultilinewithemptycel": [420, 437], "test_plainmultilinewithemptycellsheaderless": [420, 437], "test_plainmaxcolwidthautowrap": [420, 437], "test_plainmaxcolwidthautowrapswithsep": [420, 437], "test_maxcolwidthsinglevalu": [420, 437], "test_maxcolwidthpadtailingwidth": [420, 437], "test_maxcolwidthhonordisableparsenum": [420, 437], "test_plainmaxheadercolwidthsautowrap": [420, 437], "test_simpl": [420, 437], "test_simplewithseplin": [420, 437], "test_readmeexamplewithsep": [420, 437], "test_simplemultiline2": [420, 437], "test_simplemultiline2withseplin": [420, 437], "test_simpleheaderless": [420, 437], "test_simpleheaderlesswithseplin": [420, 437], "test_simplemultilineheaderless": [420, 437], "test_simplemultilin": [420, 437], "test_simplemultilinewithlink": [420, 437], "test_simplemultilinewithemptycel": [420, 437], "test_simplemultilinewithemptycellsheaderless": [420, 437], "test_github": [420, 437], "test_gridheaderless": [420, 437], "test_gridmultilineheaderless": [420, 437], "test_gridmultilin": [420, 437], "test_gridmultilinewithemptycel": [420, 437], "test_gridmultilinewithemptycellsheaderless": [420, 437], "test_pretti": [420, 437], "test_prettyheaderless": [420, 437], "test_prettymultilineheaderless": [420, 437], "test_prettymultilin": [420, 437], "test_prettymultilinewithlink": [420, 437], "test_prettymultilinewithemptycel": [420, 437], "test_prettymultilinewithemptycellsheaderless": [420, 437], "test_rst": [420, 437], "test_rstwithemptyvaluesinfirstcolumn": [420, 437], "test_rstheaderless": [420, 437], "test_rstmultilin": [420, 437], "test_rstmultilinewithlink": [420, 437], "test_rstmultilinewithemptycel": [420, 437], "test_rstmultilinewithemptycellsheaderless": [420, 437], "test_nodata": [420, 437], "test_emptydata": [420, 437], "test_nodatawithouthead": [420, 437], "test_emptydatawithouthead": [420, 437], "test_intfmt": [420, 437], "test_emptydatawithhead": [420, 437], "test_floatfmt": [420, 437], "test_floatfmtmulti": [420, 437], "test_colalignmulti": [420, 437], "test_colalignmultiwithseplin": [420, 437], "test_columnglobalandspecificalign": [420, 437], "test_headersglobalandspecificalign": [420, 437], "test_colalignorheadersaligntoolong": [420, 437], "test_floatconvers": [420, 437], "test_missingv": [420, 437], "test_missingvalmulti": [420, 437], "test_columnalign": [420, 437], "test_dictlikewithindex": [420, 437], "test_listoflistswithindex": [420, 437], "test_listoflistswithindexwithseplin": [420, 437], "test_listoflistswithsuppliedindex": [420, 437], "test_listoflistswithindexfirstrow": [420, 437], "test_disablenumparsedefault": [420, 437], "test_disablenumparsetru": [420, 437], "test_disablenumparselist": [420, 437], "test_fsearch": [420, 438], "test_fsearchtext": [420, 438], "test_resolveinclud": [420, 438], "test_resolveincludes_stringio": [420, 438], "test_findinclud": [420, 438], "textstream": [420, 438], "test_readfil": [420, 438], "test_readfilewithpattern": [420, 438], "test_issuewarningonfindingtext": [420, 438], "test_raiseerroronfindingtext": [420, 438], "test_consumelin": [420, 438], "test_gettrianglearea": [420, 439], "test_checkifpointisintriangl": [420, 439], "test_checkifpointisintriangle2": [420, 439], "test_gettc": [420, 440], "test_gettk": [420, 440], "test_gettf": [420, 440], "test_pressure_convert": [420, 440], "test_gettmev": [420, 440], "test_gettemperatur": [420, 440], "test_convertxtopasc": [420, 440], "test_sanitizeangl": [420, 440], "test_getxylineparamet": [420, 440], "test_getfilesha1hash": [420, 441], "test_getfilesha1hashdir": [420, 441], "test_mergeabledictionari": [420, 441], "test_createformattedstrwithdelimit": [420, 441], "test_capstrlen": [420, 441], "test_list2str": [420, 441], "test_slantsplit": [420, 441], "test_prependtolist": [420, 441], "test_plotmatrix": [420, 441], "test_classesinhierarchi": [420, 441], "test_safecopi": [420, 441], "test_safemov": [420, 441], "test_safemovedir": [420, 441], "simplecyclesset": [420, 441], "powerfractionsdetailedsolut": [420, 441], "powerfractionssimplesolut": [420, 441], "cyclenamesdetailedsolut": [420, 441], "cyclenamessimplesolut": [420, 441], "availabilityfactorsdetailedsolut": [420, 441], "availabilityfactorssimplesolut": [420, 441], "steplengthsdetailedsolut": [420, 441], "steplengthssimplesolut": [420, 441], "cyclelengthsdetailedsolut": [420, 441], "cyclelengthssimplesolut": [420, 441], "burnstepsdetailedsolut": [420, 441], "burnstepssimplesolut": [420, 441], "nodespercycledetailedsolut": [420, 441], "nodespercyclesimplesolut": [420, 441], "maxburnstepsdetailedsolut": [420, 441], "maxburnstepssimplesolut": [420, 441], "test_hasburnup": [420, 441], "test_getnodespercycl": [420, 441], "test_getcyclenodefromcumulativestep": [420, 441], "test_getcyclenodefromcumulativenod": [420, 441], "test_getprevioustimenod": [420, 441], "test_getcumulativenodenum": [420, 441], "spot": 421, "chop": 421, "isotopc": 424, "succe": 425, "cohort": 427, "doesnt": 427, "fuzzi": 428, "invari": 428, "uneven": 430, "propereti": 435, "smoke": 436, "userdict": 437, "_align_column": 437, "is_multilin": 437, "multilin": 437, "celltext": 437, "_buildlin": 437, "_buildrow": 437, "_format": 437, "_ismultilin": 437, "_multilinewidth": 437, "_normalizetabulardata": 437, "_type": 437, "_visiblewidth": 437, "_wraptexttocolwidth": 437, "autowrap": 437, "partli": 437, "tail": [437, 509], "disable_parsenum": 437, "honor": [437, 507], "stringio": [438, 442, 487], "nthi": 438, "ncan": 438, "nfile": 438, "nx": [438, 492], "checkifpointisintrinagl": 439, "barycentriccheckifpointisintriangl": 439, "pascal": [440, 444], "dog": 441, "ferret": 441, "r2": [441, 507], "r1": 441, "03333333333333333": 441, "06666666666666667": 441, "10000000000000002": 441, "eedd": 442, "23e10": 442, "23ee10": 442, "23d10": 442, "23e": 442, "213423": 442, "2342": 442, "023": [442, 492], "relativeto": 442, "textiobas": 442, "ruamel": 442, "prohibit": 442, "drawback": 442, "underpin": 442, "alias": 442, "monkei": 442, "stackoverflow": 442, "44910886": 442, "pyyaml": [442, 487], "chunck": 442, "somefil": 442, "occurr": 442, "_searchfor": 442, "inidc": 442, "occurec": 442, "highmem": 442, "rewind": 442, "checkforerror": 442, "killon": 442, "textflag": 442, "vertici": 443, "heron": 443, "coordind": 443, "27s_formula": 443, "barycentr": 443, "totolog": 443, "blogspot": 443, "fahrenheit": 444, "tempunit": 444, "mmhg": 444, "pbar": 444, "patm": 444, "atomspher": 444, "sphinx": [446, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 494, 500], "restructedtext": 446, "repositori": [446, 456], "hyperlink": 446, "virtual": [446, 484, 492], "pip": [446, 448, 484], "graphviz": 446, "latex": [446, 480], "miktex": 446, "imagemagick": 446, "_build": 446, "host": 446, "rsync": 446, "ahv": 446, "intersphinx": 446, "intersphinx_map": 446, "sphinxcontrib": 446, "workflow": [446, 450, 454, 456, 494], "apidoc_extra_arg": 446, "sphx_glr_galleri": 446, "highlight": 446, "neat": 446, "nbsphinx": 446, "nbconvert": 446, "clearoutputpreprocessor": 446, "inplac": 446, "mynotebook": 446, "verb": 447, "joi": 447, "armi": [447, 448, 449, 450, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 485, 491, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514], "sampleentrypoint": 447, "conf_cycle_length": 447, "conf_burn_step": 447, "store_tru": 447, "inputcas": 447, "post_process": 447, "settingsfil": 447, "pythonpath": [447, 485, 494, 514], "codebas": [448, 507], "publicli": 448, "regul": 448, "annot": [448, 480], "ticket": [448, 455], "fork": 448, "guidanc": [448, 451, 456], "bot": 448, "agreement": 448, "publish": 448, "synopsi": 448, "pyproject": [448, 484, 487, 489, 494], "toml": [448, 484, 487, 489, 494], "superce": [448, 484], "apach": [448, 456, 484, 498], "gpl": [448, 456, 484], "bsd": [448, 456, 484], "explor": [449, 460, 467, 482, 493, 495, 497, 500], "spectral": 449, "heavili": [449, 456], "seen": [449, 456, 484, 494, 505, 507, 508], "guid": [449, 450, 484, 485, 498, 499, 513, 514], "environment": [449, 455, 485, 514], "former": [449, 513], "quasistat": 449, "promin": [449, 494], "softwaretest": 449, "orificedoptim": 449, "orific": [449, 502], "alchemylit": 449, "alchemi": 449, "subchan": 449, "launch": 449, "fire": [449, 452, 484], "teach": 450, "audienc": 450, "scientist": 450, "contributor": [450, 484], "black": [450, 480, 487], "ruff": [450, 451, 468, 478, 487, 488, 489], "nake": 450, "envelop": 451, "proprietari": [451, 477, 484, 507], "ship": 451, "perus": 451, "deeper": 451, "feel": [451, 494], "overli": [451, 498], "familiar": [451, 455, 485, 514], "chose": 451, "complain": [451, 487], "guidelin": [451, 455], "iceberg": 451, "cohes": 451, "plug": [451, 484], "Such": [451, 456, 507], "_pm": [451, 494], "plugina": 451, "pluginb": 451, "fear": 452, "mpi_rank": 452, "comm": 452, "proc0": 452, "proc1": 452, "proc2": 452, "proc3": 452, "val3": 452, "farm": 452, "worklist": 452, "_i": [452, 456], "unchunk": 452, "reassembl": 452, "mpi_exampl": 452, "v4": 452, "worklistloadbalanc": 452, "myvalstoadd": 452, "num1": 452, "num2": 452, "allresultsloadbalanc": 452, "allresult": 452, "5f": [452, 454], "transmiss": 452, "surviv": [452, 507], "someinterfac": 452, "interactevernod": 452, "bcastact": 452, "aresult": 452, "someparam": 452, "somefunct": 452, "opt": [452, 492], "someset": 452, "distrib": 452, "extractblockresult": 452, "whatact": 452, "generatemyobject": 452, "depletionmatrix": [452, 503], "burnmatrix": [452, 503], "computation": 452, "reasonbli": 453, "stat": 453, "gprof2dot": 453, "invalu": 453, "graphvi": 453, "pstat": 453, "mystatsfil": 453, "tpng": 453, "mydesiredimagenam": 453, "cornerston": 454, "creategeneralreportcont": 454, "blueprintcont": 454, "getendoflifecont": 454, "imagin": 454, "dicionari": 454, "scene": [454, 495, 498], "__get__": 454, "childcont": 454, "prose": 454, "enclos": 454, "bdesign": 454, "combat": 454, "currentt": 454, "overview": [454, 484, 507], "comprehensive_report": 454, "tablelist": 454, "outputfileextens": [454, 507], "mwt": [454, 498], "0e6": [454, 492], "similarili": 454, "conf_boundari": 454, "conf_neutronics_kernel": 454, "conf_fp_model": 454, "assembly_area": 454, "sup": 454, "beg": 454, "mayb": [454, 494, 513], "overdo": 454, "sole": 454, "neutronicssect": 454, "reportconst": 454, "neutronics_sect": 454, "keff_plot": 454, "thier": 454, "subpart": 455, "402": 455, "nqa": 455, "shall": 455, "clariti": [455, 470, 492], "theme": 455, "concis": [455, 457, 482, 500], "deviat": 455, "justifi": 455, "justif": 455, "consult": 455, "formatt": 455, "amaz": 455, "linter": [455, 487], "setabl": 455, "password": 455, "fragil": 455, "nigh": 455, "debugg": 455, "annoy": 455, "userbas": 455, "camelcas": [455, 484, 489], "hassl": 455, "correlationmatrix": 455, "prefac": 455, "underscor": 455, "_": [455, 485, 492, 497, 510, 514], "pronounc": 455, "acronym": 455, "understood": 455, "expert": 455, "pascalcas": 455, "diskio": 455, "iooper": 455, "renderhtml": 455, "test_": 455, "packagenam": 455, "modulenam": 455, "speed_of_light_in_meters_per_second": 455, "_one_over_pi": 455, "dosomeact": 455, "_dosomeact": 455, "_assembli": 455, "linearheatgenerationr": 455, "_unuseddescript": 455, "repetiti": 455, "harderd": 455, "runnabl": 455, "modern": [455, 484], "laptop": [455, 484], "pyplot": [455, 464, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 492, 495, 496, 499], "sin": 455, "articl": 455, "explain": [455, 456, 509], "zerodivisionerror": 455, "floatingpointerror": 455, "paradigm": 455, "json": 455, "strict": [455, 487, 489], "relic": 455, "fixm": 455, "xxx": 455, "stranger": 456, "voic": 456, "tens": 456, "oh": 456, "chapter": 456, "discourtesi": 456, "busi": 456, "polish": [456, 484], "draft": [456, 488], "thumb": 456, "lint": [456, 487, 488], "somebodi": 456, "bread": 456, "crumb": 456, "breadcrumb": 456, "minor": [456, 486], "conf": 456, "install_requir": 456, "abstractli": 456, "extras_requir": 456, "strictli": 456, "bump": [456, 480], "revv": 456, "nrc": 456, "sanction": 456, "deserv": 456, "admin": [456, 507], "privileg": 456, "ui": 456, "die": 456, "branchverbos": [456, 507, 509], "visibl": 456, "halt": 456, "happili": 456, "silli": 456, "wick": 456, "000": [456, 492, 497], "explanatori": [457, 482, 500], "download": [462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 485, 494, 498, 499, 514], "pervas": 462, "m1": 462, "40090": 462, "35498695e": 462, "40091": 462, "31641456e": 462, "40092": 462, "11832896e": 462, "40094": 462, "13332690e": 462, "40096": 462, "82584320e": 462, "92234": 462, "00000000e": 462, "36147243e": 462, "92236": 462, "92238": 462, "48425449e": 462, "93237": 462, "93238": 462, "94236": 462, "94238": 462, "94240": 462, "94241": 462, "94242": 462, "95241": 462, "95242": 462, "95243": 462, "96242": 462, "96243": 462, "96244": 462, "96245": 462, "96246": 462, "96247": 462, "m2": 462, "11023": 462, "21665718e": 462, "m3": 462, "67941747e": 462, "14028": 462, "78629407e": 462, "14029": 462, "92249968e": 462, "14030": 462, "26729800e": 462, "23050": 462, "79003816e": 462, "23051": 462, "70922523e": 462, "24050": 462, "52833976e": 462, "24052": 462, "73245259e": 462, "24053": 462, "90190013e": 462, "24054": 462, "46479253e": 462, "25055": 462, "19738893e": 462, "26054": 462, "09816265e": 462, "26056": 462, "43323879e": 462, "26057": 462, "48571542e": 462, "26058": 462, "97721449e": 462, "28058": 462, "94209415e": 462, "28060": 462, "13328336e": 462, "28061": 462, "92675527e": 462, "28062": 462, "57051128e": 462, "28064": 462, "00190823e": 462, "42092": 462, "13437638e": 462, "42094": 462, "44696641e": 462, "42095": 462, "65358976e": 462, "42096": 462, "01896213e": 462, "42097": 462, "59119235e": 462, "42098": 462, "16005724e": 462, "42100": 462, "62965260e": 462, "74182": 462, "66064130e": 462, "74183": 462, "97674630e": 462, "74184": 462, "23253002e": 462, "74186": 462, "92724649e": 462, "m4": 462, "68566498e": 462, "78937437e": 462, "92406371e": 462, "26832899e": 462, "79556212e": 462, "71142929e": 462, "53202374e": 462, "73955678e": 462, "90995571e": 462, "46679773e": 462, "20080367e": 462, "10149666e": 462, "43847248e": 462, "48692411e": 462, "97882303e": 462, "94448766e": 462, "13420533e": 462, "93076337e": 462, "57178896e": 462, "00516393e": 462, "14018048e": 462, "45058419e": 462, "65981625e": 462, "02548587e": 462, "59492746e": 462, "16100100e": 462, "63341900e": 462, "66361937e": 462, "97835446e": 462, "23597335e": 462, "93044146e": 462, "m5": 462, "m6": 462, "m7": 462, "sphinx_gallery_thumbnail_path": 462, "logo": 462, "_o": [462, 463], "bfuel": [462, 463], "ndensbybas": 462, "den": 462, "join": [462, 480], "minut": [462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480], "446": [462, 465], "run_blockmcnpmaterialcard": [462, 465], "bcontrol": 463, "run_hexblocktorzconvers": [463, 465], "sphinx_gallery_thumbnail_numb": [464, 471], "thetamesh": 464, "540": [464, 465, 487], "run_hexreactortorz": [464, 465], "553": 465, "gallery_analysi": 465, "sphx_glr_gallery_framework_run_fuelmanag": [467, 481, 482, 500], "assess": 468, "23641": 468, "0189566": 468, "0764606": 468, "553986": 468, "114187": 468, "233214": 468, "0189313": 468, "557207": 468, "234575": 468, "0189824": 468, "0766673": 468, "555588": 468, "0190348": 468, "0768788": 468, "55349": 468, "238847": 468, "0190871": 468, "07709": 468, "550789": 468, "242019": 468, "0191381": 468, "0772959": 468, "54736": 468, "246067": 468, "0191865": 468, "0774913": 468, "543069": 468, "264995": 468, "0193035": 468, "0779642": 468, "52355": 468, "noqa": [468, 478], "e402": [468, 478], "writeinitialvolumefract": 468, "plotvolfracswithcomponenttemp": 468, "uniformtemp": 468, "componentstomodifi": 468, "initialvol": 468, "relativevol": 468, "uniformtempsinc": 468, "subplot": [468, 470, 472, 477, 480], "set_titl": [468, 472, 477, 480], "set_ylabel": [468, 480], "set_xlabel": [468, 477, 480], "426": [468, 481], "run_blockvolumefract": [468, 481], "xyc": [469, 496], "zip": [469, 470, 473, 474, 485, 496, 499, 514], "marker": [469, 496], "run_chartofnuclid": [469, 481], "isoaa_path": [470, 475, 476], "_addflux": 470, "createdummyreactor": 470, "allrat": 470, "ratedata": 470, "ratelabel": 470, "nucrat": 470, "arang": [470, 477, 492, 494, 513], "set_xtick": [470, 477], "set_xticklabel": [470, 477], "axvlin": 470, "set_xlim": [470, 472, 480], "yscale": [470, 475], "405": [470, 481, 492], "run_computereactionr": [470, 481], "demo": [471, 480, 484, 497], "139765512652688": 471, "reftestcartesian": 471, "cosin": 471, "candidateassem": 471, "978": [471, 481], "run_fuelmanag": [471, 481], "mpatch": [472, 480], "patchcollect": [472, 480], "poli": 472, "set_aspect": [472, 480], "set_axis_off": 472, "hex_i": 472, "va": [472, 480], "regularpolygon": 472, "numvertic": 472, "fc": [472, 499], "white": 472, "add_collect": [472, 480], "margin": [472, 484], "bbox": 472, "get_datalim": 472, "transdata": 472, "xmin": 472, "xmax": 472, "set_ylim": [472, 480], "ymax": 472, "run_grids1_hex": [472, 481], "cartesian_grid": 473, "add_subplot": [473, 474], "run_grids2_cartesian": [473, 481], "linspac": [474, 495, 497], "rz_grid": 474, "run_grids3_rzt": [474, 481], "anl33": [475, 507], "xscale": 475, "438": [475, 481], "run_isotx": [475, 481], "inelasticscatt": 476, "n2nscatter": 476, "353": [476, 481], "run_isotxs2_matrix": [476, 481], "max_z": 477, "nummat": 477, "idx": 477, "indexerror": 477, "im": 477, "imshow": 477, "ylgn": 477, "set_ytick": 477, "set_yticklabel": 477, "466": [477, 481], "run_materi": [477, 481], "traceabl": 478, "139765489566960": 478, "buildcas": 478, "buildcompon": 478, "blockdesign": [478, 497], "buildblock": 478, "assemdesign": 478, "buildassembli": 478, "buildgrid": 478, "systemdesign": 478, "buildsystem": 478, "isothermal_temperature_in_c": 478, "508": 478, "5842": 478, "14224": 478, "72644": 478, "0109": 478, "6205": 478, "01420": 478, "cname": 478, "fuelbock": 478, "reflectorblock": 478, "fuelassem": [478, 513], "reflectorassem": 478, "coregrid": 478, "810": [478, 481], "run_programmaticreactordefinit": [478, 481], "139765519719440": 479, "139765553708624": 479, "898": [479, 481, 492], "run_reactorfacemap": [479, 481], "shortcut": 480, "bateman": 480, "plotnuc": 480, "ry": 480, "get_xi": 480, "cx": 480, "get_width": 480, "cy": 480, "get_height": 480, "plotal": 480, "xlim": 480, "ylim": 480, "xp": 480, "yp": 480, "deeppink": 480, "orang": 480, "arrowprop": 480, "shrink": 480, "rxntype": 480, "atan": 480, "grei": 480, "facecolor": 480, "mistyros": 480, "edgecolor": 480, "zoom": 480, "041": [480, 481, 492], "run_transmutationmatrix": [480, 481], "361": 481, "gallery_framework": 481, "megawatt": 483, "kilogram": 483, "mwd": [483, 503, 504], "radionuclid": [483, 503, 505], "fima": [483, 502, 503, 504, 505, 507], "thin": 483, "imped": 483, "wastag": [483, 484, 503, 505, 507], "predomin": 483, "todai": [483, 484], "gass": [483, 498], "twr": [483, 484], "travel": [483, 484], "wave": [483, 484], "breed": [483, 503, 505], "advantag": [483, 484], "streamlin": 484, "fingertip": [484, 498], "profession": 484, "llc": [484, 498], "compani": 484, "hub": 484, "spoke": 484, "specialist": 484, "acquir": 484, "first_time_contributor": 484, "prerequisit": [484, 506], "launcher": 484, "tour": 484, "nuclei": 484, "energet": 484, "induc": [484, 510], "withdraw": 484, "postul": 484, "earthquak": 484, "eniac": 484, "1940": [484, 490], "toss": 484, "experiment": [484, 499], "surprisingli": 484, "port": 484, "specialti": 484, "born": 484, "eclect": 484, "uncoupl": 484, "dispatch": 484, "multiobject": 484, "Its": [484, 494, 507], "labor": 484, "focu": [484, 513], "seamless": 484, "green": [484, 499], "skelet": 484, "schemat": [484, 507], "subchannel": [484, 498, 507], "cfd": [484, 507], "curat": 484, "wall": 484, "orif": [484, 503, 507], "electr": [484, 512], "creativ": [484, 498], "graduat": 484, "undergradu": 484, "greatli": [484, 486, 487], "uncommon": 484, "tedium": 484, "fftf": [484, 507], "perfect": 484, "wing": 484, "seattl": 484, "mission": 484, "intertwin": 484, "secreci": 484, "risk": 484, "entiti": 484, "hypothes": 484, "worldwid": 484, "shakedown": 484, "fund": 484, "predominantli": 484, "microsoft": 484, "flavor": 484, "realiz": 484, "mail": 484, "broadli": 484, "phenix": 484, "bf": 484, "acceler": 484, "trademark": 484, "holder": 484, "copyright": [484, 498], "2024": [484, 488, 489, 490, 492, 507], "complianc": [484, 498], "warranti": [484, 498], "touran": 484, "nichola": 484, "2017": 484, "518": 484, "526": [484, 492], "eng": 484, "016": 484, "glossari": 484, "python3": [485, 514], "pip3": [485, 514], "vv": [485, 514], "navig": [485, 514], "venv": [485, 501, 514], "deactiv": [485, 507, 514], "bat": [485, 514], "sudo": [485, 514], "apt": [485, 514], "libopenmpi": [485, 514], "ssh": [485, 514], "click": [485, 492, 507, 514], "bashrc": [485, 514], "____": [485, 492, 497, 514], "__": [485, 492, 497, 514], "congrat": [485, 514], "wxpython": [485, 514], "websit": [485, 514], "2021": [486, 487], "vestigi": 486, "detailassemsbybolloc": 486, "materialclassnam": 486, "armitestbas": 486, "dumplocationsnapshot": 486, "obviat": 486, "redund": [486, 487], "isannular": 486, "database3": [486, 487, 490], "doth": [486, 507], "armiabsdirfromnam": 486, "delat": 486, "addcompon": 486, "constist": 486, "latticefil": 486, "diment": 486, "pympler": 486, "demot": 486, "2023": 487, "1383": 487, "getmasterc": 487, "setmasterc": 487, "1399": 487, "1336": 487, "1349": 487, "1345": 487, "1355": 487, "1335": 487, "1395": 487, "sha1": 487, "1334": 487, "1409": 487, "gh": 487, "1341": 487, "avgfueltemp": [487, 503], "1362": 487, "1347": 487, "1396": 487, "_getnuctemphelp": 487, "1363": 487, "_processinclud": 487, "1333": 487, "1342": 487, "1280": 487, "1296": 487, "1288": 487, "1294": 487, "1265": 487, "1320": 487, "1183": 487, "1299": 487, "1277": 487, "drastic": 487, "1282": 487, "1275": 487, "density3": 487, "1163": 487, "1274": 487, "hcfcoretyp": 487, "1179": 487, "1248": 487, "1239": 487, "assemflagstoskipaxialexpans": 487, "1235": 487, "1204": 487, "1219": 487, "1218": 487, "1227": 487, "dctype": 487, "1228": 487, "1226": 487, "1229": 487, "createrepresentativeblocksfromexistingblock": 487, "1217": 487, "priorit": 487, "1237": 487, "1230": 487, "1238": 487, "1256": 487, "1257": 487, "1258": 487, "1270": 487, "1213": 487, "1216": 487, "1206": 487, "1225": 487, "1062": 487, "froze": 487, "1035": 487, "955": 487, "962": 487, "4614": [487, 496], "998": 487, "overhaul": 487, "loosecoupl": 487, "1033": 487, "c2n1": 487, "952": 487, "959": 487, "fuelcladlock": [487, 503], "1038": 487, "1022": 487, "1047": [487, 492], "1042": 487, "1086": 487, "1098": 487, "uniformmeshconvert": 487, "mapper": 487, "1108": 487, "1165": 487, "cyclesskiptightcouplinginteract": 487, "referenceblockaxialmesh": [487, 505], "980": 487, "deadelin": 487, "barrier": 487, "1046": 487, "1067": 487, "1118": 487, "992": 487, "1168": 487, "1129": 487, "magnessium": 487, "1126": 487, "1128": 487, "1131": 487, "1150": 487, "1149": 487, "1199": 487, "1178": 487, "1185": 487, "2022": [487, 490], "coveragerc": [487, 489], "924": 487, "932": 487, "922": [487, 492, 498], "943": 487, "942": 487, "fastflux": [487, 498, 503], "_swapfluxparam": 487, "665": 487, "settingsrul": 487, "872": 487, "__repr__": 487, "stationaryblock": 487, "stationaryblockflag": [487, 507], "isoxx": 487, "getreac": 487, "rotatepin": [487, 490], "855": 487, "_applythermalexpans": 487, "completeinitiaload": 487, "secur": 487, "alert": 487, "530": 487, "546": 487, "558": [487, 492], "uml": 487, "weren": 487, "550": 487, "557": 487, "507": [487, 492], "490": 487, "534": 487, "solidifi": 487, "stake": 487, "clarif": 487, "anl116": [487, 507], "multii": 487, "bugfix": 487, "_copyinputshelp": 488, "1416": 488, "1412": 488, "functool": 488, "1466": 488, "incorrectli": 488, "1614": 488, "mandat": 488, "1419": 488, "1438": 488, "downgrad": 488, "polici": 488, "1444": 488, "1665": 489, "1425": 489, "1689": 489, "1729": 489, "1750": 489, "1745": 489, "1726": 489, "1717": 489, "1796": 489, "1650": 489, "1651": 489, "allpositionsinthird": 489, "1655": 489, "getallnuclidesin": 489, "plottriangleflux": 489, "1656": 489, "dochelp": 489, "1662": 489, "convertdatabas": 489, "convertdb": 489, "1658": 489, "buildcommand": 489, "1773": 489, "1671": 489, "extran": 489, "armiojbect": 489, "1667": 489, "getmaxuraniummassenrich": 489, "getpufrac": 489, "getpumass": 489, "getpun": 489, "getzrfrac": 489, "printdens": 489, "rditernum": 489, "1704": 489, "outsidefuelr": 489, "outsidefuelringfluxfr": 489, "doorificedth": 489, "1706": 489, "1659": 489, "_expandcycleandtimenodearg": 489, "1766": 489, "1090": 489, "1649": 489, "1691": 489, "1653": 489, "1751": 489, "1771": 489, "1786": 489, "1713": 489, "1646": 489, "1770": 489, "1692": 489, "1670": 489, "tbd": 490, "2028": 490, "2052": 490, "1813": 490, "1996": 490, "1891": 490, "1917": 490, "1982": 490, "mcnplibraryvers": [490, 507], "1989": 490, "ingest": 490, "1811": 490, "1943": 490, "1927": 490, "1899": 490, "1846": 490, "1858": 490, "1870": 490, "1945": 490, "1963": 490, "1887": 490, "1949": 490, "1842": 490, "detailednden": [490, 502, 503, 504, 505], "1954": 490, "1990": 490, "bymcc3id": [490, 496], "1895": 490, "1844": 490, "1881": 490, "transpos": 490, "1937": 490, "1912": 490, "1934": 490, "syndbafterwrit": 490, "1968": 490, "buvstim": 490, "1994": 490, "assemblylist": 490, "doseresultsmapp": 490, "1952": 490, "smartlist": 490, "1835": 490, "doubleresolut": 490, "1951": 490, "buildeqringschedul": 490, "1928": 490, "prepsearch": 490, "1845": 490, "skippingxsgen_buchangedlessthantoler": 490, "autogenerateblockgrid": [490, 513], "1947": 490, "mpitaskspernod": 490, "numprocessor": 490, "1958": 490, "breakfuelcomponentsintoindividu": 490, "1831": 490, "1824": 490, "permissionerror": 490, "1857": 490, "1853": 490, "thkernel": [490, 507], "1855": 490, "1828": 490, "1883": 490, "1852": 490, "1925": 490, "1926": 490, "_checkparamconsist": 490, "1822": 490, "axialunitgrid": 490, "1809": 490, "1861": [490, 492], "1920": 490, "cadenc": 491, "v0": 491, "lt": [492, 496, 497], "afci": [492, 494, 497, 498, 501, 513], "haleu": [492, 498], "tru": [492, 498, 507], "dec": 492, "hostedtoolcach": 492, "x64": 492, "fv": 492, "az525": 492, "tue": 492, "jan": 492, "d0a0f84ddd": 492, "29f959e5a4": 492, "5904530cb2": 492, "fuelmanag": [492, 498], "59de407d9f": 492, "ubuntu": 492, "vendor_id": 492, "authenticamd": 492, "amd": 492, "epyc": 492, "7763": 492, "microcod": 492, "0xffffffff": 492, "mhz": 492, "2960": 492, "792": 492, "kb": 492, "apicid": 492, "fpu": 492, "fpu_except": 492, "cpuid": 492, "wp": 492, "vme": 492, "pse": 492, "tsc": 492, "msr": 492, "pae": 492, "mce": 492, "cx8": 492, "apic": 492, "mtrr": 492, "pge": 492, "mca": 492, "cmov": 492, "pat": 492, "pse36": 492, "clflush": 492, "mmx": 492, "fxsr": 492, "sse": 492, "sse2": 492, "ht": 492, "syscal": 492, "mmxext": 492, "fxsr_opt": 492, "pdpe1gb": 492, "rdtscp": 492, "lm": 492, "constant_tsc": 492, "rep_good": 492, "nopl": 492, "tsc_reliabl": 492, "nonstop_tsc": 492, "extd_apicid": 492, "aperfmperf": 492, "pni": 492, "pclmulqdq": 492, "ssse3": 492, "fma": 492, "cx16": 492, "pcid": 492, "sse4_1": 492, "sse4_2": 492, "movb": 492, "popcnt": 492, "ae": 492, "xsave": 492, "avx": 492, "f16c": 492, "rdrand": 492, "hypervisor": 492, "lahf_lm": 492, "cmp_legaci": 492, "svm": 492, "cr8_legaci": 492, "abm": 492, "sse4a": 492, "misalignss": 492, "3dnowprefetch": 492, "osvw": 492, "topoext": 492, "invpcid_singl": 492, "vmmcall": 492, "fsgsbase": 492, "bmi1": 492, "avx2": 492, "smep": 492, "bmi2": 492, "erm": 492, "invpcid": 492, "rdseed": 492, "adx": 492, "smap": 492, "clflushopt": 492, "clwb": 492, "sha_ni": 492, "xsaveopt": 492, "xsavec": 492, "xgetbv1": 492, "clzero": 492, "xsaveerptr": 492, "rdpru": 492, "arat": 492, "npt": 492, "nrip_sav": 492, "tsc_scale": 492, "vmcb_clean": 492, "flushbyasid": 492, "decodeassist": 492, "pausefilt": 492, "pfthreshold": 492, "v_vmsave_vmload": 492, "umip": 492, "vae": 492, "vpclmulqdq": 492, "rdpid": 492, "fsrm": 492, "sysret_ss_attr": 492, "null_seg": 492, "spectre_v1": 492, "spectre_v2": 492, "spec_store_bypass": 492, "srso": 492, "bogomip": 492, "4890": 492, "tlb": 492, "2560": 492, "4k": 492, "cache_align": 492, "2790": 492, "429": 492, "3282": 492, "3242": 492, "mw": [492, 497, 502, 503, 505], "411": [492, 498, 499], "9995": 492, "139894352451520": 492, "gp": [492, 497, 513], "006": [492, 497], "999999999998449e": [492, 497], "597": [492, 497, 498], "b0000": 492, "b0001": 492, "b0002": 492, "b0004": 492, "045": [492, 507], "b0005": 492, "011": 492, "056": 492, "b0006": 492, "b0007": 492, "018": 492, "b0008": 492, "029": 492, "b0009": [492, 513], "008": [492, 513], "040": [492, 513], "b0010": 492, "010": 492, "051": 492, "b0011": 492, "b0012": 492, "b0013": 492, "024": 492, "b0014": 492, "007": 492, "035": 492, "b0015": 492, "046": 492, "b0016": 492, "057": 492, "b0017": 492, "b0019": 492, "030": 492, "b0020": 492, "b0021": 492, "052": 492, "b0022": 492, "b0023": 492, "b0024": 492, "b0025": 492, "036": 492, "b0026": 492, "047": 492, "b0027": 492, "058": 492, "b0028": 492, "b0029": 492, "b0030": 492, "b0031": 492, "b0032": 492, "042": 492, "b0033": 492, "053": 492, "b0035": 492, "b0036": 492, "b0037": 492, "b0038": 492, "048": 492, "b0039": 492, "059": 492, "b0040": 492, "b0041": 492, "b0042": 492, "b0043": 492, "b0044": 492, "b0045": 492, "054": 492, "b0046": 492, "b0047": 492, "b0048": 492, "b0049": 492, "b0050": 492, "b0051": 492, "b0052": 492, "b0053": 492, "b0055": 492, "b0056": 492, "b0057": 492, "b0058": 492, "b0059": 492, "b0060": 492, "b0061": 492, "b0062": 492, "b0063": 492, "b0064": 492, "b0065": 492, "b0066": 492, "b0067": 492, "b0068": 492, "b0069": 492, "b0070": 492, "b0071": 492, "b0072": 492, "b0073": 492, "b0074": 492, "b0075": 492, "b0076": 492, "b0077": 492, "b0078": 492, "b0079": 492, "b0080": 492, "b0081": 492, "b0082": 492, "014": 492, "b0083": 492, "b0084": 492, "b0085": 492, "b0086": 492, "b0087": 492, "b0088": 492, "013": 492, "b0089": 492, "b0090": 492, "b0091": 492, "b0092": 492, "b0093": 492, "015": 492, "b0094": 492, "b0095": 492, "b0096": 492, "b0097": 492, "b0098": 492, "b0099": 492, "b0100": 492, "b0101": 492, "b0102": 492, "b0103": 492, "b0104": 492, "ni60": 492, "si30": 492, "cr52": 492, "ni61": 492, "fe58": 492, "ni62": 492, "si29": 492, "si28": 492, "ni64": 492, "mo96": 492, "cr53": 492, "mo97": 492, "v50": 492, "ni58": 492, "mo100": 492, "cr54": 492, "v51": 492, "mo94": 492, "mo98": 492, "fe57": 492, "cr50": 492, "mo92": 492, "helic": [492, 498], "dodecagon": 492, "a0005": 492, "a0004": 492, "a0010": 492, "a0016": 492, "a0003": 492, "a0009": 492, "a0015": 492, "a0021": 492, "a0027": 492, "a0002": 492, "a0008": 492, "a0014": 492, "a0020": 492, "a0026": 492, "a0033": 492, "a0039": 492, "a0007": 492, "a0013": 492, "a0019": 492, "a0025": 492, "a0032": 492, "a0038": 492, "a0045": 492, "a0000": 492, "fifth": 492, "fifthassem": 492, "drill": 492, "a0006": 492, "913110": 492, "7780886302": 492, "1615298013245032": 492, "e6": 492, "630279585150355": 492, "press": 492, "5940e": 492, "impt": [492, 497, 509], "271": [492, 498, 513], "6029": [492, 498], "6086118601525807": 492, "447": [492, 498], "6962": [492, 498], "6996347645979837": 492, "0466500": 492, "0455115": 492, "808": [492, 498], "8119863398379357": 492, "0559000": 492, "0561758": 492, "148007667250084": 492, "8888": [492, 498], "8931849738217292": 492, "0808": [492, 498], "08119863398379355": 492, "995619013690193": 492, "787506681749962": 492, "3940000": 492, "3959438": 492, "2160000": 492, "1772467": 492, "midplan": 492, "peakpow": [492, 494], "1e6": [492, 494, 497], "mgfluxbas": [492, 494], "setfakepow": [492, 494], "linalg": [492, 494], "fuelflag": [492, 494], "2121328751081": 492, "283": 492, "72676915791163": 492, "75679542940935": 492, "726": 492, "2065240578604": 492, "1481": 492, "7416753196674": 492, "594": 492, "2890628648304": 492, "832": 492, "7118344145881": 492, "1247": 492, "3666431166173": 492, "2061": 492, "589294063221": 492, "3983": 492, "795411797809": 492, "9068752321263": 492, "781": 492, "8211719174191": 492, "546832731319": 492, "1775": 492, "4675690469703": 492, "3037": 492, "7948251721677": 492, "576": 492, "436766311226": 492, "798": 492, "0792090090622": 492, "1171": 492, "232095330452": 492, "5889992921707": 492, "3298": 492, "9174953243905": 492, "4367663112263": 492, "543": 492, "7674846477125": 492, "736": 492, "7925560723418": 492, "1043": 492, "811476571239": 492, "1559": 492, "086660392669": 492, "2454": 492, "8587995069606": 492, "482": 492, "26958247687014": 492, "628": 492, "2425670515395": 492, "838": 492, "5497047927524": 492, "1141": 492, "6712238490518": 492, "1557": 492, "9644917470105": 492, "501": 492, "16274186391075": 492, "6884827804276": 492, "897": 492, "3713186381708": 492, "1253": 492, "5417832788535": 492, "1774": 492, "0124459802742": 492, "7937693841397": 492, "672": 492, "2615830527569": 492, "918": 492, "8562740000916": 492, "1295": 492, "8684850899372": 492, "1859": 492, "989350727691": 492, "8562740000918": 492, "433": 492, "2686512340821": 492, "547": 492, "5702713630133": 492, "749781243437": 492, "5628571891203": 492, "0693805556527": 492, "453": 492, "75938768776024": 492, "580": 492, "7120147457107": 492, "755": 492, "9623309969782": 492, "993": 492, "8470981807069": 492, "093144979462": 492, "464": 492, "7491657921643": 492, "598": 492, "8342655277754": 492, "786": 492, "9650870342906": 492, "1048": 492, "1321554651122": 492, "1388": 492, "8263886151203": 492, "7120147457109": 492, "8470981807073": 492, "7497812434373": 492, "069380555653": 492, "385": 492, "40733734089025": 492, "28984043160057": 492, "583": 492, "5451425775741": 492, "715": 492, "8005320700539": 492, "859": 492, "8515267335054": 492, "7823467609031": 492, "39119992660204": 492, "631": 492, "5597751814538": 492, "789": 492, "4185339360051": 492, "968": 492, "3266188429413": 492, "419": 492, "07528981152086": 492, "525": 492, "0945662075254": 492, "664": 492, "3581773715332": 492, "841": 492, "335903664775": 492, "624870298122": 492, "78234676090335": 492, "5597751814539": 492, "4185339360054": 492, "3359036647746": 492, "6248702981216": 492, "0940445113585": 492, "435": 492, "6795184040706": 492, "527": 492, "4099165571945": 492, "633": 492, "1389396547851": 492, "743": 492, "2808920676976": 492, "374": 492, "1357488147068": 492, "40437929246855": 492, "0878077962307": 492, "677": 492, "871204505851": 492, "805": 492, "6974218981927": 492, "381": 492, "5754294076418": 492, "467": 492, "5242208618066": 492, "8051751545618": 492, "6944398365334": 492, "0090146000248": 492, "0090146000249": 492, "135748814707": 492, "6974218981929": 492, "8712045058508": 492, "6795184040708": 492, "2808920676978": 492, "13164561512574927": 492, "sodiumbefor": 492, "2f": [492, 495], "sodiumaft": 492, "20250114181941851627": 492, "c00n01": 492, "databaseloc": 492, "dbo": 492, "fro": 492, "909142": 492, "5216630063": 492, "lucki": 492, "neutronicskernel": [492, 507], "brand": 492, "hopefulli": 492, "readi": 494, "shell": [494, 497], "proce": [494, 507], "my_armi_project": 494, "fluxsolv": 494, "thermalsolv": 494, "readm": 494, "quickstart": 494, "exampleapp": 494, "shortli": 494, "mixabl": 494, "__version__": 494, "armi_vers": 494, "myapp_vers": 494, "dummyphysicsplugin": 494, "cobra": 494, "cacophoni": 494, "subphys": 494, "conf_vers": 494, "setversioninset": 494, "fluxinterfac": 494, "thermalinterfac": 494, "facet": 494, "boiler": 494, "myappvers": 494, "nasti": 494, "conf_inlet_temperatur": 494, "inletinc": 494, "conf_outlet_temperatur": 494, "outletinc": 494, "520": 494, "weav": 494, "administr": 494, "gut": 494, "cloud": 494, "tini": 494, "dummyflux": 494, "fuelblock": [494, 513], "topfuelz": 494, "bottomfuelz": 494, "coremidplan": 494, "told": 494, "c_p": 494, "dummyth": 494, "runthermalhydraul": 494, "massflow": 494, "computeidealizedflow": 494, "computeaxialcoolanttemperatur": 494, "tempavg": 494, "coolantprop": 494, "massflowr": 494, "qdot": 494, "mdot": 494, "thcoolantinlett": [494, 502, 503], "thcoolantoutlett": [494, 502, 503], "thcoolantaveraget": [494, 503], "phenomen": 494, "lovingli": 494, "whack": 494, "slash": 494, "252": 494, "materialnamespaceord": [494, 507], "vizual": 494, "510": [494, 507], "lighter": 494, "finicki": 494, "sublass": [494, 510], "userpluginexampl": 494, "userplugin0": 494, "pluginz": [494, 507], "userplugin1": 494, "userplugin2": 494, "thermomechan": 495, "matur": 495, "density500": 495, "500c": [495, 508], "006270676074462742": 495, "8752281279010555": 495, "11850119602448178": 495, "l_0": [495, 511], "4f": 495, "0471": 495, "inlin": 495, "uo_2": 495, "creep": 495, "recal": [496, 499], "amu": 496, "nucsbytyp": 496, "4706": 496, "043929425": 496, "u215": 496, "150262e": 496, "00000000000e": 496, "000000e": 496, "u216": 496, "160240e": 496, "50000000000e": 496, "u217": 496, "170244e": 496, "60000000000e": 496, "u218": 496, "218": 496, "180235e": 496, "u219": 496, "219": 496, "190249e": 496, "u220": 496, "220": 496, "200247e": 496, "11110000000e": 496, "u221": 496, "210264e": 496, "u222": 496, "222": 496, "220261e": 496, "70000000000e": 496, "u223": 496, "223": 496, "230277e": 496, "80000000000e": 496, "u224": 496, "224": 496, "240276e": 496, "40000000000e": 496, "u225": 496, "225": 496, "250294e": 496, "90000000000e": 496, "u226": 496, "260293e": 496, "68000000000e": 496, "u227": 496, "227": 496, "270312e": 496, "u228": 496, "228": 496, "280314e": 496, "46000000000e": 496, "u229": 496, "229": 496, "290335e": 496, "48000000000e": 496, "u230": 496, "230": 496, "300339e": 496, "74787200000e": 496, "u231": 496, "231": 496, "310363e": 496, "62880000000e": 496, "u232": 496, "320372e": 496, "17427219965e": 496, "330396e": 496, "02354704590e": 496, "340410e": 496, "74722532676e": 496, "400000e": 496, "u235m": 496, "u23f": 496, "56000000000e": 496, "236": 496, "360456e": 496, "39063206325e": 496, "u237": 496, "370487e": 496, "83372800000e": 496, "380508e": 496, "40996345254e": 496, "927420e": 496, "390543e": 496, "40700000000e": 496, "u240": 496, "400566e": 496, "07600000000e": 496, "u241": 496, "410603e": 496, "u242": 496, "420629e": 496, "00800000000e": 496, "u243": 496, "243": 496, "430674e": 496, "u244": 496, "244": 496, "440679e": 496, "u245": 496, "245": 496, "450708e": 496, "u246": 496, "246": 496, "460702e": 496, "li7": 496, "016004e": 496, "li07": 496, "241000e": 496, "01600439548": 496, "92410004": 496, "940038e": 496, "li3": 496, "030775e": 496, "li03": 496, "li4": 496, "027185e": 496, "li04": 496, "li5": 496, "012538e": 496, "li05": 496, "70924971603e": 496, "015123e": 496, "li06": 496, "590000e": 496, "li8": 496, "022488e": 496, "li08": 496, "39900000000e": 496, "li9": 496, "026789e": 496, "li09": 496, "78300000000e": 496, "li10": 496, "003548e": 496, "li11": 496, "104380e": 496, "75000000000e": 496, "li12": 496, "205378e": 496, "li13": 496, "306117e": 496, "lielement": 496, "standardweight": 496, "940037501798687": 496, "fullfactori": 497, "powermodif": 497, "tracer": 497, "0002": 497, "0003": 497, "10000000": 497, "40000000": 497, "70000000": 497, "100000000": 497, "queu": 497, "cladthicknessmodifi": 497, "componentdesign": 497, "cladmodif": 497, "0004": 497, "inde": [497, 507], "a6": 497, "8250000000000001": 497, "8500000000000001": 497, "875": 497, "cyclelengthmod": 497, "conclus": 497, "ran": 497, "loadsuit": 497, "parametr": 497, "regress": 497, "lastli": 498, "lieu": 498, "crazi": 498, "hotter": 498, "710": 498, "interstiti": [498, 507], "punch": 498, "derivedcompon": 498, "unclad": 498, "breviti": [498, 513], "block_shield": [498, 507], "block_reflector": 498, "777": 498, "block_control": 498, "block_plenum": [498, 507], "88888": 498, "overlai": [498, 507], "paper": 498, "fuel_block": 498, "ic_x": 498, "weirdest": 498, "plena": 498, "trade": 498, "columnar": 498, "307": 498, "370": 498, "efpd": 498, "momentarili": 498, "sampleshuffl": 498, "frontend": 498, "fluenc": [498, 503], "0e23": 498, "violat": [498, 503], "shuffleparamet": 498, "cyclesecond": 498, "seconds_per_dai": 498, "peakfluenc": 498, "fastfluenc": [498, 503], "peakflux": 498, "philosophi": 498, "mistak": [498, 507], "nsc": 499, "00e": 499, "21e": 499, "50e": 499, "80e": 499, "40e": 499, "30e": 499, "63e": 499, "90e": 499, "16e": 499, "05e": 499, "225e": 499, "622e": 499, "70e": 499, "35e": 499, "78e": 499, "apear": 499, "block_uo2": 499, "8190": 499, "fuel_gap_1": 499, "clad_zr": 499, "8360": 499, "9500": 499, "fuel_gap_2": 499, "aluminum": 499, "clad_al": 499, "9700": 499, "0800": 499, "guide_tube_moder": 499, "6800": 499, "fission_chamber_guide_tub": 499, "fission_chamber_mod": 499, "332": 499, "block_mox": 499, "ml": 499, "mm": 499, "mh": 499, "block_mod": 499, "alongsid": 499, "said": [499, 507], "genreport": [499, 507], "fiddl": 499, "yellow": 499, "red": 499, "xi": [499, 510], "yi": 499, "zi": 499, "reftestbas": 501, "powerdecai": [502, 505], "decayheatcalctimesinsecond": 502, "arealpd": [502, 503, 509], "pct": 502, "bulimit": [502, 503], "chargebu": 502, "chargefi": 502, "chargetim": 502, "dust": 502, "dayssincelastmov": 502, "kinf": [502, 503, 505], "maxdpapeak": 502, "nummov": [502, 505], "fi": [502, 503, 504], "interf": [502, 503, 504], "detailednuckei": [502, 503, 504, 505], "unwis": 502, "crcriticalfract": 502, "crcurrentelev": 502, "crinsertedelev": 502, "crrodlength": 502, "crwithdrawnelev": 502, "withdrawn": 502, "thdeltapnograv": 502, "graviti": 502, "thdeltappump": 502, "rise": [502, 503, 505], "thdeltaptot": [502, 503], "thmassflowr": [502, 503], "thlocaldtout": [502, 503], "thlocaldtoutfuel": [502, 503], "thorificezon": [502, 503], "dischargetim": 502, "hcf": [502, 505, 507], "azimesh": 502, "radmesh": 502, "burnupmwdperkg": [503, 504], "fissilefract": 503, "moleshmbolbypin": 503, "newdpa": 503, "accru": 503, "percentbumax": 503, "percentbumaxpinloc": 503, "moleshmnow": 503, "moleshmbol": [503, 504], "masshmbol": [503, 504], "cycleaverageburnmatrix": 503, "envgroupnum": 503, "burat": [503, 504], "buratepeak": 503, "detaileddpa": [503, 505], "detaileddpapeak": 503, "detaileddpar": 503, "displacementx": [503, 513], "displacementi": 503, "heliuminb4c": 503, "powerrx": 503, "nhmatbol": 503, "withregard": 503, "eqregion": 503, "eqcascad": 503, "cascad": [503, 507], "xstypenum": 503, "rxfueldensitycoeffpermass": 503, "\u03b4k": [503, 505], "rxfueltemperaturecoeffpermass": 503, "rxfuelvoidedtemperaturecoeffpermass": 503, "rxcladdensitycoeffpermass": 503, "rxcladtemperaturecoeffpermass": 503, "rxstructuredensitycoeffpermass": 503, "rxstructuretemperaturecoeffpermass": 503, "rxcoolantdensitycoeffpermass": 503, "rxcoolanttemperaturecoeffpermass": 503, "rxfueldensitycoeffpertemp": [503, 505], "rxfueldopplercoeffpertemp": [503, 505], "rxfuelvoideddopplercoeffpertemp": [503, 505], "rxfueldopplerconst": [503, 505], "rxfuelvoideddopplerconst": [503, 505], "rxstructuredopplerconst": [503, 505], "rxcladdopplerconst": [503, 505], "rxfueltemperaturecoeffpertemp": [503, 505], "rxfuelvoidedtemperaturecoeffpertemp": [503, 505], "rxcladdensitycoeffpertemp": [503, 505], "rxcladdopplercoeffpertemp": [503, 505], "rxcladtemperaturecoeffpertemp": [503, 505], "rxstructuredensitycoeffpertemp": [503, 505], "rxstructuredopplercoeffpertemp": [503, 505], "rxstructuretemperaturecoeffpertemp": [503, 505], "rxcoolantdensitycoeffpertemp": [503, 505], "rxcoolanttemperaturecoeffpertemp": [503, 505], "reliabl": 503, "axextennodeheight": 503, "blockbeta": 503, "blockf": 503, "breedratio": 503, "fissiledestroi": 503, "fissilebefor": 503, "substep": [503, 507], "fissileaft": 503, "cladacci": 503, "\u00b5m": [503, 505], "convratio": 503, "crwastag": 503, "acci": 503, "cyclicnerr": 503, "intrinsicsourc": 503, "intrinsicsourcedecai": 503, "mchan": 503, "mreg": 503, "newdpapeak": 503, "percentbupeak": 503, "powershapedelta": 503, "pressurelosscoeff": 503, "hardwar": 503, "thhotchannelcladmidwallt": 503, "midwal": 503, "thhotchannelheattransfercoeff": 503, "film": 503, "thhotchannelcladodt": 503, "thhotchannelcladidt": 503, "thhotchannelfuelodt": 503, "thhotchannelfuelcenterlinet": 503, "centerlin": 503, "th0sigmacladodt": 503, "th2sigmacladodt": 503, "th3sigmacladodt": 503, "th0sigmacladidt": 503, "th2sigmacladidt": 503, "th3sigmacladidt": 503, "thdilationpressur": 503, "dilat": 503, "thtfuelcl": 503, "thtfuelod": 503, "thaveragecladodt": 503, "thaveragecladidt": 503, "thaveragecladtemp": 503, "thaveragegaptemp": 503, "thaverageducttemp": 503, "thcoolantstatict": 503, "thhotchanneloutlett": 503, "degc": 503, "thhotchannel": 503, "gasreleasefract": 503, "bondremov": [503, 507], "cladwastag": 503, "totalcladstrain": 503, "diametr": 503, "axialgrowthpct": 503, "growth": [503, 505, 507], "fppeakfueltemp": 503, "fpavefueltemp": 503, "axmesh": 503, "adjmgflux": 503, "lastmgflux": 503, "mgfluxgamma": 503, "mggammasrc": 503, "gammasrc": 503, "mgfluxsk": 503, "pinmgfluxesadj": 503, "naxialseg": 503, "pinmgfluxesgamma": 503, "axialpowerprofil": 503, "axialpowerprofileneutron": 503, "axialpowerprofilegamma": 503, "betad": 503, "chid": 503, "linpow": 503, "unavail": 503, "linpowbypinneutron": 503, "linpowbypingamma": 503, "reactionr": 503, "reactionstodb": 503, "100kev": 503, "ratebal": 503, "rateextsrc": 503, "ratefisab": 503, "ratefissrc": 503, "rateleak": 503, "leak": 503, "rateparasab": 503, "parasit": 503, "fertil": [503, 505], "rateprodnet": 503, "ratescatin": 503, "ratescatout": 503, "capturepowerfrac": 503, "fluxadj": 503, "fluxadjpeak": 503, "pdensdecai": 503, "fertilebonu": 503, "fisden": 503, "fisdenshom": 503, "fluxgamma": 503, "fluxpeak": 503, "medabs": 503, "medfis": 503, "medflx": 503, "pdensgamma": 503, "pdensneutron": 503, "ppden": 503, "ppdensgamma": 503, "rateab": 503, "fisson": 503, "ratecap": 503, "rateprodn2n": 503, "ratefi": 503, "rateprodfi": 503, "detaileddpathiscycl": 503, "detaileddpapeakr": 503, "dpapeakfromflu": 503, "enrichmentbol": 503, "fastfluxfr": 503, "pdensgener": 503, "pinnden": 504, "pinnum": 504, "zzzaaa": 505, "zzz": 505, "maxassemnum": [505, 512], "crmostvaluableprimaryrodloc": 505, "crmostvaluablesecondaryrodloc": 505, "crworthrequiredprimari": 505, "crworthrequiredsecondari": 505, "crtransientoverpowerworth": 505, "critsearchslop": 505, "doublingtim": 505, "fissilemass": 505, "heavymetalmass": 505, "lastkeff": 505, "loadpaddpaavg": 505, "loadpaddpapeak": 505, "maxcladfcci": 505, "maxdpa": 505, "maxgriddpa": 505, "minutessincestart": 505, "peakgriddpaat60year": 505, "totalintrinsicsourc": 505, "totalintrinsicsourcedecai": 505, "thmaxdeltappump": 505, "thmaxdilationpressur": 505, "thoutlettempid": 505, "pergram": 505, "medabscor": 505, "medfluxcor": 505, "medsrccor": 505, "pkflux": 505, "maxdetaileddpapeak": 505, "maxflux": 505, "adjweightedfissrc": 505, "maxdetaileddpathiscycl": 505, "dpafullwidthhalfmax": 505, "elevationofaclp3cycl": 505, "elevationofaclp7cycl": 505, "rxswing": 505, "maxbuf": 505, "maxbui": 505, "peakkeff": 505, "fastfluxfravg": 505, "leakagefractot": 505, "leakagefracplanar": 505, "leakagefracaxi": 505, "maxpden": 505, "maxpd": 505, "bred": 505, "betacompon": 505, "betadecayconst": 505, "promptneutrongenerationtim": 505, "promptneutronlifetim": 505, "rxfuelaxialexpansioncoeffpertemp": 505, "rxfuelaxialexpansioncoeffperperc": 505, "rxgridplateradialexpansioncoeffpertemp": 505, "rxaclpradialexpansioncoeffpertemp": 505, "rxcontrolroddrivelineexpansioncoeffpertemp": 505, "drivelin": 505, "rxcorewidecoolantvoidworth": 505, "rxspatiallydependentcoolantvoidworth": 505, "boeckeff": 505, "boec": 505, "maxcyclicnerr": 505, "breedingratio": 505, "convratiocor": 505, "absperfiscor": 505, "axialexpansionperc": 505, "fisfrac": 505, "fisratecor": 505, "infin": [505, 510], "refkeff": 505, "loos": 506, "resus": 507, "block_nam": 507, "erron": 507, "excerpt": [507, 509], "003454": 507, "detailassemlocationsbol": 507, "freshfeedtyp": 507, "refsmallreactor": 507, "moduleverbos": [507, 509], "palett": 507, "warrant": 507, "brush": 507, "multiphys": 507, "detailassemnum": 507, "detailallassem": 507, "dk": 507, "kk": 507, "dollar": 507, "cent": 507, "decayconst": 507, "six": [507, 513], "365": 507, "2425": 507, "uptim": [507, 512], "shorthand": 507, "overcom": 507, "emploi": 507, "r5": 507, "ramp": 507, "prolong": 507, "downtim": 507, "unevenli": 507, "buildup": 507, "rerun": 507, "000000": 507, "001002": 507, "loadstyl": 507, "fromdb": 507, "remaind": [507, 511], "frominput": 507, "skipcycl": 507, "makeup": 507, "core_grid": 507, "wit": 507, "elementari": 507, "neglect": 507, "flexibli": 507, "757": 507, "regex": 507, "extrud": 507, "componentnam": 507, "dimensionnam": 507, "label1": 507, "ousid": 507, "905": 507, "burnabl": 507, "fuelgrid": 507, "possess": 507, "buri": 507, "unambigu": 507, "standard_height": 507, "standard_axial_mesh_point": 507, "inner_core_block": 507, "dragger": 507, "defaul": 507, "superset": 507, "79213903298633": 507, "000664847887388523": 507, "182466356404319": 507, "00323253628006144": 507, "705266053783901": 507, "0171714161260001": 507, "00233843050046998": 507, "0831976890804466": 507, "00566266993741259": 507, "rect": 507, "cicl": 507, "downsid": 507, "pitchdefiningcompon": 507, "carbon_flag": 507, "getfactor": 507, "newincom": 507, "oldoutgo": 507, "daisi": 507, "overton": 507, "a3": 507, "a4": 507, "a5": 507, "thusli": 507, "essenc": 507, "peripheri": 507, "bluepint": 507, "watch": 507, "typenum": 507, "numdischarg": 507, "chargeenrich": 507, "defaultfactor": 507, "factorsearchflag": 507, "tout": 507, "acceptableblockareaerror": 507, "assemflagstoskipaxialexpa": 507, "nsion": 507, "assempowsummari": 507, "bureducingassemblyr": 507, "otat": 507, "assemblyrotationstationar": 507, "automaticvariablemesh": 507, "axialexpans": 507, "axialmeshrefinementfactor": 507, "bccoeffici": 507, "extrapolat": 507, "zerosurfaceflux": 507, "zeroinwardcurr": 507, "circularringord": 507, "distancesmart": 507, "circularringpitch": 507, "claddingstrain": 507, "claddingwastag": 507, "copyfilesfrom": 507, "copyfilesto": 507, "coverageconfigfil": 507, "crosssectioncontrol": 507, "dict_k": 507, "ei": 507, "customfuelmanagementindex": 507, "242199": 507, "cyclesskiptightcouplingin": 507, "teract": 507, "dbstorageaftercycl": 507, "debugdb": 507, "debugmems": 507, "deferredinterfacenam": 507, "deferredinterfacescycl": 507, "disableblocktypeexclus": 507, "inxsgener": 507, "01568627": 507, "451e": 507, "dpaxsset": 507, "dpa_ebrii_": 507, "dpa_ebrii_inc600": 507, "dpa_ebrii_incx750": 507, "dpa_ebrii_ht9": 507, "dpa_ebrii_pe16": 507, "dpa_ebrii_inc625": 507, "eigenprob": 507, "epseig": 507, "epsfsavg": 507, "epsfspoint": 507, "eqdirect": 507, "shuf": 507, "existingfixedsourc": 507, "varsrc": 507, "fgremov": 507, "fissiongasyieldfract": 507, "forcedbparam": 507, "nofissionproduct": 507, "infinitelydilut": 507, "explicitfissionp": 507, "roduct": 507, "explicitfissionpr": 507, "oduct": 507, "fuelperformanceengin": 507, "globalfluxact": 507, "gridplatedpaxsset": 507, "groupstructur": 507, "anl9": 507, "anl70": 507, "anl230": 507, "anl703": 507, "anl1041": 507, "anl2082": 507, "armi33": 507, "armi45": 507, "cinder63": 507, "growtofullcoreafterload": 507, "independentvarnam": 507, "infinitedilutecutoff": 507, "initializeburnchain": 507, "jumpringnum": 507, "checkerboard": 507, "levelspercascad": 507, "referencef": 507, "issionprod": 507, "uct": 507, "loadfromdbeverynod": 507, "lowpowerregionfract": 507, "makeallblocklfpsindepend": 507, "minmeshsizeratio": 507, "dp1": 507, "dp2": 507, "minimumfissilefract": 507, "neutronicstyp": 507, "numbermeshperedg": 507, "operatorloc": 507, "outputcacheloc": 507, "plotshufflearrow": 507, "namepl": 507, "reallysmallrun": 507, "removepercycl": 507, "restartneutron": 507, "runlatticephysicsbeforesh": 507, "uffl": 507, "smallrun": 507, "sortreactor": 507, "calul": 507, "grid_pla": 507, "summarizeassemdesign": 507, "tightcouplingmaxnumit": 507, "tightcoup": 507, "lingsettin": 507, "dict_kei": 507, "timelineinclusioncutoff": 507, "tolerateburnupchang": 507, "test_wha": 507, "xsblockrepresent": 507, "fluxweightedaverag": 507, "componentaverage1dslab": 507, "xsbucklingconverg": 507, "xseigenvalueconverg": 507, "mc2v2": 507, "xsscatteringord": 507, "zerooutnuclidesnotindb": 507, "loc1": 507, "loc2": 507, "loc3": 507, "odhot": 508, "id600": 508, "numclad": 508, "cladmat": 508, "savephysicsio": 509, "cxny": 509, "00x00y": 509, "xtra": 509, "traceback": 509, "monitor": 509, "myrun": 509, "mydatabas": 509, "ahist": 509, "filesystem": 509, "endian": 509, "portabl": 509, "supplement": 509, "stroke": 509, "operation": 509, "locationtyp": 509, "comp_typ": 509, "mold": 509, "tricki": 509, "interspers": 509, "thaveragecladtemperatur": 510, "k_": 510, "l2": 510, "_2": 510, "a_": 510, "b_": 510, "mathbf": 510, "quad": 510, "foral": 510, "epsilon_i": 510, "textbf": 510, "_settightcouplingdefault": 510, "easiest": 510, "t_0": 511, "rearrang": 511, "l_1": 511, "t_1": 511, "l_h": 511, "t_h": 511, "t_c": 511, "l_c": 511, "capacityfactor": 512, "lcoe": 512, "levelis": 512, "usd": 512, "kwh": 512, "efeedmt": 512, "efissil": 512, "eswu": 512, "swu": 512, "specifci": 513, "ten": 513, "819": 513, "2046645914880": 513, "4444": 513, "76972338": 513, "coordsfromfuel": 513, "coordsfrompin": 513, "coordsfromblock": 513, "mutli": 513, "leftmost": 513}, "objects": {"": [[0, 0, 0, "-", "armi"]], "armi": [[0, 1, 1, "", "applyAsyncioWindowsWorkaround"], [1, 0, 0, "-", "apps"], [2, 0, 0, "-", "bookkeeping"], [46, 0, 0, "-", "cases"], [60, 0, 0, "-", "cli"], [0, 1, 1, "", "configure"], [76, 0, 0, "-", "conftest"], [77, 0, 0, "-", "context"], [0, 1, 1, "", "disableFutureConfigures"], [0, 1, 1, "", "getApp"], [0, 1, 1, "", "getDefaultPluginManager"], [0, 1, 1, "", "getDefaultPlugins"], [0, 1, 1, "", "getPluginManager"], [0, 1, 1, "", "getPluginManagerOrFail"], [0, 1, 1, "", "init"], [78, 0, 0, "-", "interfaces"], [0, 1, 1, "", "isConfigured"], [0, 1, 1, "", "isStableReleaseVersion"], [79, 0, 0, "-", "materials"], [143, 0, 0, "-", "meta"], [144, 0, 0, "-", "migration"], [151, 0, 0, "-", "mpiActions"], [152, 0, 0, "-", "nucDirectory"], [164, 0, 0, "-", "nuclearDataIO"], [203, 0, 0, "-", "operators"], [212, 0, 0, "-", "physics"], [282, 0, 0, "-", "pluginManager"], [283, 0, 0, "-", "plugins"], [284, 0, 0, "-", "reactor"], [367, 0, 0, "-", "runLog"], [368, 0, 0, "-", "settings"], [382, 0, 0, "-", "testing"], [383, 0, 0, "-", "tests"], [400, 0, 0, "-", "utils"]], "armi.apps": [[1, 2, 1, "", "App"]], "armi.apps.App": [[1, 3, 1, "", "getParamRenames"], [1, 3, 1, "", "getSettings"], [1, 4, 1, "", "name"], [1, 5, 1, "", "pluginManager"], [1, 3, 1, "", "registerPluginFlags"], [1, 3, 1, "", "registerUserPlugins"], [1, 5, 1, "", "splashText"], [1, 5, 1, "", "version"]], "armi.bookkeeping": [[2, 2, 1, "", "BookkeepingPlugin"], [3, 0, 0, "-", "db"], [19, 0, 0, "-", "historyTracker"], [20, 0, 0, "-", "mainInterface"], [21, 0, 0, "-", "memoryProfiler"], [22, 0, 0, "-", "report"], [32, 0, 0, "-", "snapshotInterface"], [33, 0, 0, "-", "tests"], [37, 0, 0, "-", "visualization"]], "armi.bookkeeping.BookkeepingPlugin": [[2, 3, 1, "", "defineCaseDependencies"], [2, 3, 1, "", "defineEntryPoints"], [2, 3, 1, "", "exposeInterfaces"], [2, 3, 1, "", "getReportContents"], [2, 3, 1, "", "mpiActionRequiresReset"]], "armi.bookkeeping.db": [[3, 2, 1, "", "Database"], [3, 2, 1, "", "DatabaseInterface"], [4, 0, 0, "-", "compareDB3"], [3, 1, 1, "", "compareDatabases"], [5, 0, 0, "-", "database"], [3, 1, 1, "", "databaseFactory"], [6, 0, 0, "-", "databaseInterface"], [7, 0, 0, "-", "factory"], [8, 0, 0, "-", "jaggedArray"], [9, 0, 0, "-", "layout"], [3, 1, 1, "", "loadOperator"], [10, 0, 0, "-", "passiveDBLoadPlugin"], [11, 0, 0, "-", "permissions"], [12, 0, 0, "-", "tests"], [18, 0, 0, "-", "typedefs"]], "armi.bookkeeping.db.Database": [[3, 3, 1, "", "close"], [3, 5, 1, "", "fileName"], [3, 3, 1, "", "genAuxiliaryData"], [3, 3, 1, "", "genTimeStepGroups"], [3, 3, 1, "", "genTimeSteps"], [3, 3, 1, "", "getAuxiliaryDataPath"], [3, 3, 1, "", "getH5Group"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistoriesByLocation"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "getHistoryByLocation"], [3, 3, 1, "", "getLayout"], [3, 3, 1, "", "grabLocalCommitHash"], [3, 3, 1, "", "hasTimeStep"], [3, 3, 1, "", "isOpen"], [3, 3, 1, "", "keys"], [3, 3, 1, "", "load"], [3, 3, 1, "", "loadBlueprints"], [3, 3, 1, "", "loadCS"], [3, 3, 1, "", "loadGeometry"], [3, 3, 1, "", "loadReadOnly"], [3, 3, 1, "", "mergeHistory"], [3, 3, 1, "", "open"], [3, 3, 1, "", "readInputsFromDB"], [3, 3, 1, "", "splitDatabase"], [3, 3, 1, "", "syncToSharedFolder"], [3, 4, 1, "", "timeNodeGroupPattern"], [3, 5, 1, "", "version"], [3, 5, 1, "", "versionMajor"], [3, 5, 1, "", "versionMinor"], [3, 3, 1, "", "writeInputsToDB"], [3, 3, 1, "", "writeSystemAttributes"], [3, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.DatabaseInterface": [[3, 3, 1, "", "closeDB"], [3, 5, 1, "", "database"], [3, 3, 1, "", "distributable"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "initDB"], [3, 3, 1, "", "interactBOL"], [3, 3, 1, "", "interactDistributeState"], [3, 3, 1, "", "interactEOC"], [3, 3, 1, "", "interactEOL"], [3, 3, 1, "", "interactError"], [3, 3, 1, "", "interactEveryNode"], [3, 3, 1, "", "loadState"], [3, 4, 1, "", "name"], [3, 3, 1, "", "prepRestartRun"], [3, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.compareDB3": [[4, 2, 1, "", "DiffResults"], [4, 2, 1, "", "OutputWriter"], [4, 1, 1, "", "compareDatabases"]], "armi.bookkeeping.db.compareDB3.DiffResults": [[4, 3, 1, "", "addDiff"], [4, 3, 1, "", "addStructureDiffs"], [4, 3, 1, "", "addTimeStep"], [4, 3, 1, "", "nDiffs"], [4, 3, 1, "", "reportDiffs"]], "armi.bookkeeping.db.compareDB3.OutputWriter": [[4, 3, 1, "", "writeln"]], "armi.bookkeeping.db.database": [[5, 2, 1, "", "Database"], [5, 1, 1, "", "collectBlockNumberDensities"], [5, 1, 1, "", "getH5GroupName"], [5, 1, 1, "", "packSpecialData"], [5, 1, 1, "", "unpackSpecialData"]], "armi.bookkeeping.db.database.Database": [[5, 3, 1, "", "close"], [5, 5, 1, "", "fileName"], [5, 3, 1, "", "genAuxiliaryData"], [5, 3, 1, "", "genTimeStepGroups"], [5, 3, 1, "", "genTimeSteps"], [5, 3, 1, "", "getAuxiliaryDataPath"], [5, 3, 1, "", "getH5Group"], [5, 3, 1, "", "getHistories"], [5, 3, 1, "", "getHistoriesByLocation"], [5, 3, 1, "", "getHistory"], [5, 3, 1, "", "getHistoryByLocation"], [5, 3, 1, "", "getLayout"], [5, 3, 1, "", "grabLocalCommitHash"], [5, 4, 1, "", "h5db"], [5, 3, 1, "", "hasTimeStep"], [5, 3, 1, "", "isOpen"], [5, 3, 1, "", "keys"], [5, 3, 1, "", "load"], [5, 3, 1, "", "loadBlueprints"], [5, 3, 1, "", "loadCS"], [5, 3, 1, "", "loadGeometry"], [5, 3, 1, "", "loadReadOnly"], [5, 3, 1, "", "mergeHistory"], [5, 3, 1, "", "open"], [5, 3, 1, "", "readInputsFromDB"], [5, 3, 1, "", "splitDatabase"], [5, 3, 1, "", "syncToSharedFolder"], [5, 4, 1, "", "timeNodeGroupPattern"], [5, 5, 1, "", "version"], [5, 5, 1, "", "versionMajor"], [5, 5, 1, "", "versionMinor"], [5, 3, 1, "", "writeInputsToDB"], [5, 3, 1, "", "writeSystemAttributes"], [5, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.databaseInterface": [[6, 2, 1, "", "DatabaseInterface"], [6, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.db.databaseInterface.DatabaseInterface": [[6, 3, 1, "", "closeDB"], [6, 5, 1, "", "database"], [6, 3, 1, "", "distributable"], [6, 3, 1, "", "getHistories"], [6, 3, 1, "", "getHistory"], [6, 3, 1, "", "initDB"], [6, 3, 1, "", "interactBOL"], [6, 3, 1, "", "interactDistributeState"], [6, 3, 1, "", "interactEOC"], [6, 3, 1, "", "interactEOL"], [6, 3, 1, "", "interactError"], [6, 3, 1, "", "interactEveryNode"], [6, 3, 1, "", "loadState"], [6, 4, 1, "", "name"], [6, 3, 1, "", "prepRestartRun"], [6, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[7, 1, 1, "", "databaseFactory"]], "armi.bookkeeping.db.jaggedArray": [[8, 2, 1, "", "JaggedArray"]], "armi.bookkeeping.db.jaggedArray.JaggedArray": [[8, 3, 1, "", "flatten"], [8, 3, 1, "", "fromH5"], [8, 3, 1, "", "tolist"], [8, 3, 1, "", "unpack"]], "armi.bookkeeping.db.layout": [[9, 2, 1, "", "Layout"], [9, 1, 1, "", "replaceNonesWithNonsense"], [9, 1, 1, "", "replaceNonsenseWithNones"]], "armi.bookkeeping.db.layout.Layout": [[9, 3, 1, "", "allSubclasses"], [9, 3, 1, "", "computeAncestors"], [9, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.passiveDBLoadPlugin": [[10, 2, 1, "", "PassThroughYamlize"], [10, 2, 1, "", "PassiveDBLoadPlugin"]], "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize": [[10, 4, 1, "", "attributes"], [10, 3, 1, "", "from_yaml"]], "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin": [[10, 4, 1, "", "SKIP_BP_SECTIONS"], [10, 4, 1, "", "UNKNOWN_PARAMS"], [10, 3, 1, "", "buildParamColl"], [10, 3, 1, "", "defineBlueprintsSections"], [10, 3, 1, "", "defineParameters"]], "armi.bookkeeping.db.permissions": [[11, 2, 1, "", "Permissions"]], "armi.bookkeeping.db.permissions.Permissions": [[11, 4, 1, "", "CREATE_FILE_FIE"], [11, 4, 1, "", "CREATE_FILE_FIE2"], [11, 4, 1, "", "CREATE_FILE_TIE"], [11, 4, 1, "", "DEFAULT"], [11, 4, 1, "", "READ_ONLY_FME"], [11, 4, 1, "", "READ_WRITE_CREATE"], [11, 4, 1, "", "READ_WRITE_FME"], [11, 4, 1, "", "all"], [11, 4, 1, "", "create"], [11, 4, 1, "", "read"], [11, 4, 1, "", "write"]], "armi.bookkeeping.db.tests": [[13, 0, 0, "-", "test_comparedb3"], [14, 0, 0, "-", "test_database3"], [15, 0, 0, "-", "test_databaseInterface"], [16, 0, 0, "-", "test_jaggedArray"], [17, 0, 0, "-", "test_layout"]], "armi.bookkeeping.db.tests.test_comparedb3": [[13, 2, 1, "", "TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3": [[13, 3, 1, "", "test_compareAuxData"], [13, 3, 1, "", "test_compareDatabaseDuplicate"], [13, 3, 1, "", "test_compareDatabaseSim"], [13, 3, 1, "", "test_compareSets"], [13, 3, 1, "", "test_diffResultsBasic"], [13, 3, 1, "", "test_diffSimpleData"], [13, 3, 1, "", "test_diffSpecialData"], [13, 3, 1, "", "test_outputWriter"]], "armi.bookkeeping.db.tests.test_database3": [[14, 2, 1, "", "TestDatabase"], [14, 2, 1, "", "TestDatabaseSmaller"], [14, 2, 1, "", "TestWriteReadDatabase"]], "armi.bookkeeping.db.tests.test_database3.TestDatabase": [[14, 3, 1, "", "makeShuffleHistory"], [14, 3, 1, "", "test_history"], [14, 3, 1, "", "test_load"], [14, 3, 1, "", "test_loadSortSetting"]], "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller": [[14, 3, 1, "", "makeHistory"], [14, 3, 1, "", "test_auxData"], [14, 3, 1, "", "test_computeParents"], [14, 3, 1, "", "test_deleting"], [14, 3, 1, "", "test_fileName"], [14, 3, 1, "", "test_getH5File"], [14, 3, 1, "", "test_grabLocalCommitHash"], [14, 3, 1, "", "test_loadBlueprints"], [14, 3, 1, "", "test_loadCS"], [14, 3, 1, "", "test_loadOperator"], [14, 3, 1, "", "test_mergeHistory"], [14, 3, 1, "", "test_open"], [14, 3, 1, "", "test_prepRestartRun"], [14, 3, 1, "", "test_readInputsFromDB"], [14, 3, 1, "", "test_replaceNones"], [14, 3, 1, "", "test_splitDatabase"], [14, 3, 1, "", "test_writeToDB"]], "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase": [[14, 4, 1, "", "SMALL_YAML"], [14, 3, 1, "", "test_badData"], [14, 3, 1, "", "test_readWriteRoundTrip"]], "armi.bookkeeping.db.tests.test_databaseInterface": [[15, 2, 1, "", "MockInterface"], [15, 2, 1, "", "TestBadName"], [15, 2, 1, "", "TestDatabaseInterface"], [15, 2, 1, "", "TestDatabaseInterfaceBOL"], [15, 2, 1, "", "TestDatabaseReading"], [15, 2, 1, "", "TestDatabaseWriter"], [15, 2, 1, "", "TestStandardFollowOn"], [15, 1, 1, "", "getSimpleDBOperator"]], "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface": [[15, 3, 1, "", "interactEveryNode"], [15, 4, 1, "", "name"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName": [[15, 3, 1, "", "test_badDBName"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface": [[15, 3, 1, "", "test_demonstrateWritingInteractions"], [15, 3, 1, "", "test_distributable"], [15, 3, 1, "", "test_interactEveryNodeReturnTightCoupling"], [15, 3, 1, "", "test_noSyncDbAfterWrite"], [15, 3, 1, "", "test_syncDbAfterWrite"], [15, 3, 1, "", "test_timeNodeLoop_tightCoupling"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL": [[15, 3, 1, "", "test_interactBOL"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading": [[15, 3, 1, "", "test_growToFullCore"], [15, 3, 1, "", "test_growToFullCoreFromFactory"], [15, 3, 1, "", "test_growToFullCoreFromFactoryWithCS"], [15, 3, 1, "", "test_growToFullCoreWithCS"], [15, 3, 1, "", "test_loadReadOnly"], [15, 3, 1, "", "test_readWithoutInputs"], [15, 3, 1, "", "test_readWritten"], [15, 3, 1, "", "test_timesteps"], [15, 3, 1, "", "test_variousTypesWork"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter": [[15, 3, 1, "", "test_getHistory"], [15, 3, 1, "", "test_getHistoryByLocation"], [15, 3, 1, "", "test_metaDataEndFail"], [15, 3, 1, "", "test_metaData_endSuccessfully"], [15, 3, 1, "", "test_writeSystemAttributes"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn": [[15, 3, 1, "", "test_standardRestart"]], "armi.bookkeeping.db.tests.test_jaggedArray": [[16, 2, 1, "", "TestJaggedArray"]], "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray": [[16, 3, 1, "", "test_backwardsCompatible"], [16, 3, 1, "", "test_flatten"], [16, 3, 1, "", "test_roundTrip"], [16, 3, 1, "", "test_roundTripBool"]], "armi.bookkeeping.db.tests.test_layout": [[17, 2, 1, "", "TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout.TestLocationPacking": [[17, 3, 1, "", "test_close"], [17, 3, 1, "", "test_locationPacking"], [17, 3, 1, "", "test_locationPackingOldVersion"], [17, 3, 1, "", "test_locationPackingOlderVersions"]], "armi.bookkeeping.historyTracker": [[19, 2, 1, "", "HistoryTrackerInterface"], [19, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.historyTracker.HistoryTrackerInterface": [[19, 4, 1, "", "DETAILED_ASSEMBLY_FLAGS"], [19, 3, 1, "", "addAllDetailedAssems"], [19, 3, 1, "", "addDetailAssembliesBOL"], [19, 3, 1, "", "addDetailAssembly"], [19, 3, 1, "", "addDetailAssemsByAssemNums"], [19, 3, 1, "", "filterTimeIndices"], [19, 3, 1, "", "getBlockHistoryVal"], [19, 3, 1, "", "getDetailAssemblies"], [19, 3, 1, "", "getDetailBlocks"], [19, 3, 1, "", "getTimeSteps"], [19, 3, 1, "", "getTrackedParams"], [19, 3, 1, "", "interactBOC"], [19, 3, 1, "", "interactBOL"], [19, 3, 1, "", "interactEOL"], [19, 4, 1, "", "name"], [19, 3, 1, "", "preloadBlockHistoryVals"], [19, 3, 1, "", "unloadBlockHistoryVals"], [19, 3, 1, "", "writeAssemHistory"]], "armi.bookkeeping.mainInterface": [[20, 2, 1, "", "MainInterface"], [20, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.mainInterface.MainInterface": [[20, 3, 1, "", "cleanARMIFiles"], [20, 3, 1, "", "cleanLastCycleFiles"], [20, 3, 1, "", "interactBOC"], [20, 3, 1, "", "interactBOL"], [20, 3, 1, "", "interactEOL"], [20, 3, 1, "", "interactEveryNode"], [20, 4, 1, "", "name"]], "armi.bookkeeping.memoryProfiler": [[21, 2, 1, "", "InstanceCounter"], [21, 2, 1, "", "KlassCounter"], [21, 2, 1, "", "MemoryProfiler"], [21, 2, 1, "", "PrintSystemMemoryUsageAction"], [21, 2, 1, "", "ProfileMemoryUsageAction"], [21, 2, 1, "", "SystemAndProcessMemoryUsage"], [21, 1, 1, "", "describeInterfaces"], [21, 1, 1, "", "getCurrentMemoryUsage"], [21, 1, 1, "", "getTotalJobMemory"]], "armi.bookkeeping.memoryProfiler.InstanceCounter": [[21, 3, 1, "", "add"]], "armi.bookkeeping.memoryProfiler.KlassCounter": [[21, 3, 1, "", "countObjects"]], "armi.bookkeeping.memoryProfiler.MemoryProfiler": [[21, 3, 1, "", "checkForDuplicateObjectsOnArmiModel"], [21, 3, 1, "", "displayMemoryUsage"], [21, 3, 1, "", "getReferrers"], [21, 3, 1, "", "interactBOL"], [21, 3, 1, "", "interactEOL"], [21, 3, 1, "", "interactEveryNode"], [21, 4, 1, "", "name"], [21, 3, 1, "", "printCurrentMemoryState"]], "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction": [[21, 3, 1, "", "invokeHook"], [21, 5, 1, "", "maxProcessMemoryInMB"], [21, 5, 1, "", "minProcessMemoryInMB"], [21, 3, 1, "", "printUsage"]], "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction": [[21, 3, 1, "", "invokeHook"]], "armi.bookkeeping.report": [[23, 0, 0, "-", "data"], [24, 0, 0, "-", "html"], [25, 0, 0, "-", "newReportUtils"], [26, 0, 0, "-", "newReports"], [27, 0, 0, "-", "reportInterface"], [28, 0, 0, "-", "reportingUtils"], [22, 1, 1, "", "setData"], [29, 0, 0, "-", "tests"]], "armi.bookkeeping.report.data": [[23, 2, 1, "", "Group"], [23, 2, 1, "", "Image"], [23, 2, 1, "", "Report"], [23, 2, 1, "", "Table"]], "armi.bookkeeping.report.data.Group": [[23, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Image": [[23, 4, 1, "", "count"], [23, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Report": [[23, 3, 1, "", "addToReport"], [23, 4, 1, "", "componentWellGroups"], [23, 4, 1, "", "groupsOrderFirst"], [23, 3, 1, "", "writeGroupsHTML"], [23, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Table": [[23, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.html": [[24, 2, 1, "", "A"], [24, 2, 1, "", "B"], [24, 2, 1, "", "Body"], [24, 2, 1, "", "Caption"], [24, 2, 1, "", "Div"], [24, 2, 1, "", "Footer"], [24, 2, 1, "", "H1"], [24, 2, 1, "", "H2"], [24, 2, 1, "", "H3"], [24, 2, 1, "", "H4"], [24, 2, 1, "", "HTMLFile"], [24, 2, 1, "", "Head"], [24, 2, 1, "", "Html"], [24, 2, 1, "", "Img"], [24, 2, 1, "", "LI"], [24, 2, 1, "", "Link"], [24, 2, 1, "", "P"], [24, 2, 1, "", "Script"], [24, 2, 1, "", "Span"], [24, 2, 1, "", "Style"], [24, 2, 1, "", "TBody"], [24, 2, 1, "", "TD"], [24, 2, 1, "", "TH"], [24, 2, 1, "", "THead"], [24, 2, 1, "", "TR"], [24, 2, 1, "", "Table"], [24, 2, 1, "", "Tag"], [24, 2, 1, "", "Title"], [24, 2, 1, "", "UL"], [24, 1, 1, "", "encode64"], [24, 1, 1, "", "writeStandardReportTemplate"]], "armi.bookkeeping.report.html.A": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.B": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Body": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Caption": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Div": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Footer": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H1": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H2": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H3": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H4": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.HTMLFile": [[24, 3, 1, "", "write"], [24, 3, 1, "", "writeEscaped"]], "armi.bookkeeping.report.html.Head": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Html": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Img": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.LI": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Link": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.P": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Script": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Span": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Style": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TBody": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TD": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TH": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.THead": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TR": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Table": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Tag": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Title": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.UL": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.newReportUtils": [[25, 6, 1, "", "DESIGN"], [25, 1, 1, "", "comprehensiveBOLContent"], [25, 1, 1, "", "createDimensionReport"], [25, 1, 1, "", "getPinDesignTable"], [25, 1, 1, "", "insertAreaFractionsReport"], [25, 1, 1, "", "insertBlockDesignReport"], [25, 1, 1, "", "insertBlockDiagrams"], [25, 1, 1, "", "insertBlueprintContent"], [25, 1, 1, "", "insertCoreAndAssemblyMaps"], [25, 1, 1, "", "insertCoreDesignReport"], [25, 1, 1, "", "insertDesignContent"], [25, 1, 1, "", "insertEndOfLifeContent"], [25, 1, 1, "", "insertGeneralReportContent"], [25, 1, 1, "", "insertMetaTable"], [25, 1, 1, "", "insertSettingsData"]], "armi.bookkeeping.report.newReports": [[26, 2, 1, "", "Image"], [26, 2, 1, "", "ReportContent"], [26, 2, 1, "", "ReportNode"], [26, 2, 1, "", "ReportStage"], [26, 2, 1, "", "Section"], [26, 2, 1, "", "Table"], [26, 2, 1, "", "TimeSeries"], [26, 1, 1, "", "encode64"]], "armi.bookkeeping.report.newReports.Image": [[26, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportContent": [[26, 3, 1, "", "get"], [26, 3, 1, "", "tableOfContents"], [26, 3, 1, "", "writeReports"]], "armi.bookkeeping.report.newReports.ReportNode": [[26, 4, 1, "", "levelDict"], [26, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportStage": [[26, 4, 1, "", "Begin"], [26, 4, 1, "", "End"], [26, 4, 1, "", "Standard"]], "armi.bookkeeping.report.newReports.Section": [[26, 3, 1, "", "addChildElement"], [26, 3, 1, "", "get"], [26, 3, 1, "", "items"], [26, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.Table": [[26, 3, 1, "", "addRow"], [26, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.TimeSeries": [[26, 3, 1, "", "add"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "render"]], "armi.bookkeeping.report.reportInterface": [[27, 2, 1, "", "ReportInterface"], [27, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.report.reportInterface.ReportInterface": [[27, 3, 1, "", "countAssembliesSFP"], [27, 3, 1, "", "distributable"], [27, 3, 1, "", "generateDesignReport"], [27, 3, 1, "", "interactBOC"], [27, 3, 1, "", "interactBOL"], [27, 3, 1, "", "interactEOC"], [27, 3, 1, "", "interactEOL"], [27, 3, 1, "", "interactEveryNode"], [27, 4, 1, "", "name"], [27, 3, 1, "", "printReports"], [27, 3, 1, "", "reportSFP"], [27, 4, 1, "", "reports"], [27, 3, 1, "", "writeReports"], [27, 3, 1, "", "writeRunSummary"]], "armi.bookkeeping.report.reportingUtils": [[28, 1, 1, "", "getInterfaceStackSummary"], [28, 1, 1, "", "getNodeName"], [28, 1, 1, "", "getSystemInfo"], [28, 1, 1, "", "makeBlockDesignReport"], [28, 1, 1, "", "makeCoreAndAssemblyMaps"], [28, 1, 1, "", "makeCoreDesignReport"], [28, 1, 1, "", "setNeutronBalancesReport"], [28, 1, 1, "", "summarizePinDesign"], [28, 1, 1, "", "summarizePower"], [28, 1, 1, "", "summarizePowerPeaking"], [28, 1, 1, "", "writeAssemblyMassSummary"], [28, 1, 1, "", "writeCycleSummary"], [28, 1, 1, "", "writeTightCouplingConvergenceSummary"], [28, 1, 1, "", "writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[30, 0, 0, "-", "test_newReport"], [31, 0, 0, "-", "test_report"]], "armi.bookkeeping.report.tests.test_newReport": [[30, 2, 1, "", "TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation": [[30, 3, 1, "", "test_neutronicsPlotFunctions"], [30, 3, 1, "", "test_reportBasics"], [30, 3, 1, "", "test_reportContents"], [30, 3, 1, "", "test_reportContentsEnd"], [30, 3, 1, "", "test_reportLogs"], [30, 3, 1, "", "test_tableCreation"], [30, 3, 1, "", "test_timeSeries"], [30, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.report.tests.test_report": [[31, 2, 1, "", "TestReport"], [31, 2, 1, "", "TestReportInterface"], [31, 2, 1, "", "TestReportingUtils"]], "armi.bookkeeping.report.tests.test_report.TestReport": [[31, 3, 1, "", "test_getData"], [31, 3, 1, "", "test_reactorSpecificReporting"], [31, 3, 1, "", "test_setData"], [31, 3, 1, "", "test_writeWelcomeHeaders"]], "armi.bookkeeping.report.tests.test_report.TestReportInterface": [[31, 3, 1, "", "test_distributableReportInt"], [31, 3, 1, "", "test_interactBOC"], [31, 3, 1, "", "test_interactBOLReportInt"], [31, 3, 1, "", "test_interactEOC"], [31, 3, 1, "", "test_interactEOL"], [31, 3, 1, "", "test_interactEveryNode"], [31, 3, 1, "", "test_printReports"], [31, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.report.tests.test_report.TestReportingUtils": [[31, 3, 1, "", "test_getNodeName"], [31, 3, 1, "", "test_getSystemInfo"], [31, 3, 1, "", "test_getSystemInfoLinux"], [31, 3, 1, "", "test_getSystemInfoMac"], [31, 3, 1, "", "test_getSystemInfoWindows"]], "armi.bookkeeping.snapshotInterface": [[32, 2, 1, "", "SnapshotInterface"], [32, 1, 1, "", "describeInterfaces"], [32, 1, 1, "", "extractCycleNodeFromStamp"], [32, 1, 1, "", "getCycleNodeStamp"]], "armi.bookkeeping.snapshotInterface.SnapshotInterface": [[32, 3, 1, "", "activateDefaultSnapshots"], [32, 3, 1, "", "interactBOL"], [32, 3, 1, "", "interactCoupled"], [32, 3, 1, "", "interactEveryNode"], [32, 4, 1, "", "name"]], "armi.bookkeeping.tests": [[34, 0, 0, "-", "test_historyTracker"], [35, 0, 0, "-", "test_memoryProfiler"], [36, 0, 0, "-", "test_snapshot"]], "armi.bookkeeping.tests.test_historyTracker": [[34, 2, 1, "", "TestHistoryTracker"], [34, 2, 1, "", "TestHistoryTrackerNoModel"], [34, 1, 1, "", "runTutorialNotebook"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker": [[34, 3, 1, "", "test_calcMGFluence"], [34, 3, 1, "", "test_getBlockInAssembly"], [34, 3, 1, "", "test_historyParameters"], [34, 3, 1, "", "test_historyReport"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel": [[34, 3, 1, "", "test_blockName"], [34, 3, 1, "", "test_timestepFiltering"], [34, 3, 1, "", "test_timestepFilteringWithGap"]], "armi.bookkeeping.tests.test_memoryProfiler": [[35, 2, 1, "", "KlassCounterTests"], [35, 2, 1, "", "TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests": [[35, 3, 1, "", "get_containers"], [35, 3, 1, "", "test_countHandlesRecursion"], [35, 3, 1, "", "test_expandContainer"]], "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler": [[35, 3, 1, "", "test_checkForDuplicateObjectsOnArmiModel"], [35, 3, 1, "", "test_displayMemoryUsage"], [35, 3, 1, "", "test_fullBreakdown"], [35, 3, 1, "", "test_getCurrentMemoryUsage"], [35, 3, 1, "", "test_getReferrers"], [35, 3, 1, "", "test_getTotalJobMemory"], [35, 3, 1, "", "test_printCurrentMemoryState"], [35, 3, 1, "", "test_printCurrentMemoryState_noSetting"], [35, 3, 1, "", "test_printFullMemoryBreakdown"], [35, 3, 1, "", "test_profileMemoryUsageAction"]], "armi.bookkeeping.tests.test_snapshot": [[36, 2, 1, "", "MockReactor"], [36, 2, 1, "", "MockReactorParams"], [36, 2, 1, "", "TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface": [[36, 3, 1, "", "test_activeateDefaultSnapshots_17cycles5BurnSteps"], [36, 3, 1, "", "test_activeateDefaultSnapshots_30cycles2BurnSteps"], [36, 3, 1, "", "test_interactCoupled"], [36, 3, 1, "", "test_interactEveryNode"]], "armi.bookkeeping.visualization": [[38, 0, 0, "-", "dumper"], [39, 0, 0, "-", "entryPoint"], [40, 0, 0, "-", "tests"], [43, 0, 0, "-", "utils"], [44, 0, 0, "-", "vtk"], [45, 0, 0, "-", "xdmf"]], "armi.bookkeeping.visualization.dumper": [[38, 2, 1, "", "VisFileDumper"]], "armi.bookkeeping.visualization.dumper.VisFileDumper": [[38, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.entryPoint": [[39, 2, 1, "", "VisFileEntryPoint"]], "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint": [[39, 3, 1, "", "addOptions"], [39, 4, 1, "", "description"], [39, 3, 1, "", "invoke"], [39, 4, 1, "", "name"], [39, 3, 1, "", "parse"], [39, 4, 1, "", "settingsArgument"]], "armi.bookkeeping.visualization.tests": [[41, 0, 0, "-", "test_vis"], [42, 0, 0, "-", "test_xdmf"]], "armi.bookkeeping.visualization.tests.test_vis": [[41, 2, 1, "", "TestVisDump"], [41, 2, 1, "", "TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVisDump": [[41, 3, 1, "", "test_cartesianMesh"], [41, 3, 1, "", "test_dumpReactorVtk"], [41, 3, 1, "", "test_dumpReactorXdmf"], [41, 3, 1, "", "test_hexMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh": [[41, 3, 1, "", "test_testVtkMesh"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[42, 2, 1, "", "TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf": [[42, 3, 1, "", "test_dedupTimes"]], "armi.bookkeeping.visualization.utils": [[43, 2, 1, "", "VtkMesh"], [43, 1, 1, "", "createAssemMesh"], [43, 1, 1, "", "createBlockMesh"], [43, 1, 1, "", "createReactorAssemMesh"], [43, 1, 1, "", "createReactorBlockMesh"]], "armi.bookkeeping.visualization.utils.VtkMesh": [[43, 3, 1, "", "append"], [43, 3, 1, "", "empty"], [43, 3, 1, "", "write"], [43, 5, 1, "", "x"], [43, 5, 1, "", "y"], [43, 5, 1, "", "z"]], "armi.bookkeeping.visualization.vtk": [[44, 2, 1, "", "VtkDumper"]], "armi.bookkeeping.visualization.vtk.VtkDumper": [[44, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.xdmf": [[45, 2, 1, "", "XdmfDumper"]], "armi.bookkeeping.visualization.xdmf.XdmfDumper": [[45, 3, 1, "", "dumpState"]], "armi.cases": [[47, 0, 0, "-", "case"], [48, 0, 0, "-", "inputModifiers"], [55, 0, 0, "-", "suite"], [56, 0, 0, "-", "suiteBuilder"], [57, 0, 0, "-", "tests"]], "armi.cases.case": [[47, 2, 1, "", "Case"], [47, 1, 1, "", "copyInterfaceInputs"]], "armi.cases.case.Case": [[47, 3, 1, "", "addExplicitDependency"], [47, 5, 1, "", "bp"], [47, 3, 1, "", "checkInputs"], [47, 3, 1, "", "clone"], [47, 3, 1, "", "compare"], [47, 5, 1, "", "dbName"], [47, 5, 1, "", "dependencies"], [47, 5, 1, "", "directory"], [47, 5, 1, "", "geom"], [47, 3, 1, "", "getPotentialParentFromSettingValue"], [47, 5, 1, "", "independentVariables"], [47, 3, 1, "", "initializeOperator"], [47, 3, 1, "", "run"], [47, 3, 1, "", "setUpTaskDependence"], [47, 3, 1, "", "summarizeDesign"], [47, 5, 1, "", "title"], [47, 3, 1, "", "writeInputs"]], "armi.cases.inputModifiers": [[49, 0, 0, "-", "inputModifiers"], [50, 0, 0, "-", "neutronicsModifiers"], [51, 0, 0, "-", "pinTypeInputModifiers"], [52, 0, 0, "-", "tests"]], "armi.cases.inputModifiers.inputModifiers": [[49, 2, 1, "", "BluePrintBlockModifier"], [49, 2, 1, "", "FullCoreModifier"], [49, 2, 1, "", "InputModifier"], [49, 2, 1, "", "MultiSettingModifier"], [49, 2, 1, "", "SamplingInputModifier"], [49, 2, 1, "", "SettingsModifier"]], "armi.cases.inputModifiers.inputModifiers.InputModifier": [[49, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.neutronicsModifiers": [[50, 2, 1, "", "NeutronicConvergenceModifier"], [50, 2, 1, "", "NeutronicMeshsSizeModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers": [[51, 2, 1, "", "CladThicknessByIDModifier"], [51, 2, 1, "", "CladThicknessByODModifier"], [51, 2, 1, "", "SmearDensityModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier": [[51, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier": [[51, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.tests": [[53, 0, 0, "-", "test_inputModifiers"], [54, 0, 0, "-", "test_pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests.test_inputModifiers": [[53, 2, 1, "", "MockGeom"], [53, 2, 1, "", "NeutronicsKernelOpts"], [53, 2, 1, "", "TestFullCoreModifier"], [53, 2, 1, "", "TestSettingsModifiers"], [53, 2, 1, "", "TestsuiteBuilderIntegrations"]], "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom": [[53, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier": [[53, 3, 1, "", "test_fullCoreConversion"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers": [[53, 3, 1, "", "test_NeutronicConvergenceModifier"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations": [[53, 3, 1, "", "test_bluePrintBlockModifier"], [53, 3, 1, "", "test_settingsModifier"], [53, 3, 1, "", "test_smearDensityFail"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers": [[54, 2, 1, "", "MockGeom"], [54, 2, 1, "", "TestBlueprintModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom": [[54, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers": [[54, 3, 1, "", "test_AdjustSmearDensity"], [54, 3, 1, "", "test_CladThickenessByIDModifier"], [54, 3, 1, "", "test_CladThickenessByODModifier"]], "armi.cases.suite": [[55, 2, 1, "", "CaseSuite"]], "armi.cases.suite.CaseSuite": [[55, 3, 1, "", "add"], [55, 3, 1, "", "clone"], [55, 3, 1, "", "compare"], [55, 3, 1, "", "discover"], [55, 3, 1, "", "echoConfiguration"], [55, 3, 1, "", "remove"], [55, 3, 1, "", "run"], [55, 3, 1, "", "writeInputs"], [55, 3, 1, "", "writeTable"]], "armi.cases.suiteBuilder": [[56, 2, 1, "", "FullFactorialSuiteBuilder"], [56, 2, 1, "", "FullFactorialSuiteBuilderNoisy"], [56, 2, 1, "", "LatinHyperCubeSuiteBuilder"], [56, 2, 1, "", "SeparateEffectsSuiteBuilder"], [56, 2, 1, "", "SuiteBuilder"], [56, 1, 1, "", "getInputModifiers"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilder": [[56, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy": [[56, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder": [[56, 3, 1, "", "addDegreeOfFreedom"], [56, 3, 1, "", "buildSuite"]], "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder": [[56, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.SuiteBuilder": [[56, 3, 1, "", "addDegreeOfFreedom"], [56, 3, 1, "", "addModifierSet"], [56, 3, 1, "", "buildSuite"]], "armi.cases.tests": [[58, 0, 0, "-", "test_cases"], [59, 0, 0, "-", "test_suiteBuilder"]], "armi.cases.tests.test_cases": [[58, 2, 1, "", "MultiFilesInterfaces"], [58, 2, 1, "", "TestArmiCase"], [58, 2, 1, "", "TestCaseSuiteComparison"], [58, 2, 1, "", "TestCaseSuiteDependencies"], [58, 2, 1, "", "TestCopyInterfaceInputs"], [58, 2, 1, "", "TestExtraInputWriting"], [58, 2, 1, "", "TestPluginForCopyInterfacesMultipleFiles"], [58, 2, 1, "", "TestPluginWithDuplicateSetting"]], "armi.cases.tests.test_cases.MultiFilesInterfaces": [[58, 4, 1, "", "name"], [58, 3, 1, "", "specifyInputs"]], "armi.cases.tests.test_cases.TestArmiCase": [[58, 3, 1, "", "test_clone"], [58, 3, 1, "", "test_endCoverage"], [58, 3, 1, "", "test_endProfiling"], [58, 3, 1, "", "test_getCoverageRcFile"], [58, 3, 1, "", "test_independentVariables"], [58, 3, 1, "", "test_run"], [58, 3, 1, "", "test_setUpTaskDependence"], [58, 3, 1, "", "test_startCoverage"], [58, 3, 1, "", "test_startProfiling"], [58, 3, 1, "", "test_summarizeDesign"]], "armi.cases.tests.test_cases.TestCaseSuiteComparison": [[58, 3, 1, "", "test_compareNoDiffs"]], "armi.cases.tests.test_cases.TestCaseSuiteDependencies": [[58, 3, 1, "", "test_checkInputs"], [58, 3, 1, "", "test_clone"], [58, 3, 1, "", "test_dependenciesWithObscurePaths"], [58, 3, 1, "", "test_dependencyFromDBName"], [58, 3, 1, "", "test_dependencyFromExplictRepeatShuffles"], [58, 3, 1, "", "test_explicitDependency"], [58, 3, 1, "", "test_titleSetterGetter"]], "armi.cases.tests.test_cases.TestCopyInterfaceInputs": [[58, 3, 1, "", "test_copyInputsHelper"], [58, 3, 1, "", "test_copyInterfaceInputs_absPath"], [58, 3, 1, "", "test_copyInterfaceInputs_multipleFiles"], [58, 3, 1, "", "test_copyInterfaceInputs_nonFilePath"], [58, 3, 1, "", "test_copyInterfaceInputs_relPath"], [58, 3, 1, "", "test_copyInterfaceInputs_singleFile"], [58, 3, 1, "", "test_copyInterfaceInputs_wildcardFile"], [58, 3, 1, "", "test_failOnDuplicateSetting"]], "armi.cases.tests.test_cases.TestExtraInputWriting": [[58, 3, 1, "", "test_writeInput"]], "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles": [[58, 3, 1, "", "defineSettings"], [58, 3, 1, "", "exposeInterfaces"]], "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting": [[58, 3, 1, "", "defineSettings"]], "armi.cases.tests.test_suiteBuilder": [[59, 2, 1, "", "LatinHyperCubeModifier"], [59, 2, 1, "", "SettingModifier"], [59, 2, 1, "", "TestFullFactorialSuiteBuilder"], [59, 2, 1, "", "TestLatinHyperCubeSuiteBuilder"], [59, 2, 1, "", "TestSeparateEffectsBuilder"]], "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder": [[59, 3, 1, "", "test_buildSuite"]], "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder": [[59, 3, 1, "", "test_addDegreeOfFreedom"], [59, 3, 1, "", "test_buildSuite"], [59, 3, 1, "", "test_initialize"]], "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder": [[59, 3, 1, "", "test_buildSuite"]], "armi.cli": [[60, 2, 1, "", "ArmiCLI"], [60, 2, 1, "", "ArmiParser"], [60, 2, 1, "", "EntryPointsPlugin"], [61, 0, 0, "-", "checkInputs"], [62, 0, 0, "-", "cleanTemps"], [63, 0, 0, "-", "clone"], [64, 0, 0, "-", "compareCases"], [65, 0, 0, "-", "database"], [66, 0, 0, "-", "entryPoint"], [67, 0, 0, "-", "gridGui"], [68, 0, 0, "-", "migrateInputs"], [69, 0, 0, "-", "modify"], [70, 0, 0, "-", "reportsEntryPoint"], [71, 0, 0, "-", "run"], [72, 0, 0, "-", "runSuite"], [60, 1, 1, "", "splash"], [73, 0, 0, "-", "tests"]], "armi.cli.ArmiCLI": [[60, 3, 1, "", "executeCommand"], [60, 3, 1, "", "listCommands"], [60, 3, 1, "", "run"], [60, 3, 1, "", "showVersion"]], "armi.cli.ArmiParser": [[60, 3, 1, "", "print_help"]], "armi.cli.EntryPointsPlugin": [[60, 3, 1, "", "defineEntryPoints"]], "armi.cli.checkInputs": [[61, 2, 1, "", "CheckInputEntryPoint"], [61, 2, 1, "", "ExpandBlueprints"]], "armi.cli.checkInputs.CheckInputEntryPoint": [[61, 3, 1, "", "addOptions"], [61, 3, 1, "", "invoke"], [61, 4, 1, "", "name"], [61, 4, 1, "", "settingsArgument"]], "armi.cli.checkInputs.ExpandBlueprints": [[61, 3, 1, "", "addOptions"], [61, 3, 1, "", "invoke"], [61, 4, 1, "", "name"], [61, 4, 1, "", "settingsArgument"], [61, 4, 1, "", "splash"]], "armi.cli.cleanTemps": [[62, 2, 1, "", "CleanTemps"]], "armi.cli.cleanTemps.CleanTemps": [[62, 3, 1, "", "invoke"], [62, 4, 1, "", "name"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.clone": [[63, 2, 1, "", "CloneArmiRunCommandBatch"], [63, 2, 1, "", "CloneArmiRunCommandInteractive"], [63, 2, 1, "", "CloneSuiteCommand"]], "armi.cli.clone.CloneArmiRunCommandBatch": [[63, 3, 1, "", "addOptions"], [63, 3, 1, "", "invoke"], [63, 4, 1, "", "name"], [63, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneArmiRunCommandInteractive": [[63, 4, 1, "", "name"], [63, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneSuiteCommand": [[63, 3, 1, "", "addOptions"], [63, 3, 1, "", "invoke"], [63, 4, 1, "", "name"], [63, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases": [[64, 2, 1, "", "CompareCases"], [64, 2, 1, "", "CompareSuites"]], "armi.cli.compareCases.CompareCases": [[64, 3, 1, "", "addOptions"], [64, 3, 1, "", "invoke"], [64, 4, 1, "", "name"], [64, 3, 1, "", "parse"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases.CompareSuites": [[64, 3, 1, "", "addOptions"], [64, 3, 1, "", "invoke"], [64, 4, 1, "", "name"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.database": [[65, 2, 1, "", "ExtractInputs"], [65, 2, 1, "", "InjectInputs"]], "armi.cli.database.ExtractInputs": [[65, 3, 1, "", "addOptions"], [65, 3, 1, "", "invoke"], [65, 4, 1, "", "mode"], [65, 4, 1, "", "name"], [65, 3, 1, "", "parse_args"], [65, 4, 1, "", "settingsArgument"]], "armi.cli.database.InjectInputs": [[65, 3, 1, "", "addOptions"], [65, 3, 1, "", "invoke"], [65, 4, 1, "", "mode"], [65, 4, 1, "", "name"], [65, 4, 1, "", "settingsArgument"]], "armi.cli.entryPoint": [[66, 2, 1, "", "EntryPoint"], [66, 1, 1, "", "loadSettings"], [66, 1, 1, "", "setCaseTitle"], [66, 1, 1, "", "setSetting"], [66, 1, 1, "", "storeBool"]], "armi.cli.entryPoint.EntryPoint": [[66, 3, 1, "", "addOptions"], [66, 3, 1, "", "createOptionFromSetting"], [66, 4, 1, "", "description"], [66, 3, 1, "", "invoke"], [66, 4, 1, "", "mode"], [66, 4, 1, "", "name"], [66, 3, 1, "", "parse"], [66, 3, 1, "", "parse_args"], [66, 4, 1, "", "settingsArgument"], [66, 4, 1, "", "splash"]], "armi.cli.gridGui": [[67, 2, 1, "", "GridGuiEntryPoint"]], "armi.cli.gridGui.GridGuiEntryPoint": [[67, 3, 1, "", "addOptions"], [67, 3, 1, "", "invoke"], [67, 4, 1, "", "name"], [67, 4, 1, "", "settingsArgument"]], "armi.cli.migrateInputs": [[68, 2, 1, "", "MigrateInputs"]], "armi.cli.migrateInputs.MigrateInputs": [[68, 3, 1, "", "addOptions"], [68, 3, 1, "", "invoke"], [68, 4, 1, "", "name"], [68, 4, 1, "", "settingsArgument"]], "armi.cli.modify": [[69, 2, 1, "", "ModifyCaseSettingsCommand"]], "armi.cli.modify.ModifyCaseSettingsCommand": [[69, 3, 1, "", "addOptions"], [69, 3, 1, "", "invoke"], [69, 4, 1, "", "name"], [69, 4, 1, "", "settingsArgument"]], "armi.cli.reportsEntryPoint": [[70, 2, 1, "", "ReportsEntryPoint"], [70, 1, 1, "", "createReportFromSettings"]], "armi.cli.reportsEntryPoint.ReportsEntryPoint": [[70, 3, 1, "", "addOptions"], [70, 4, 1, "", "description"], [70, 3, 1, "", "invoke"], [70, 4, 1, "", "name"], [70, 4, 1, "", "report_out_dir"], [70, 4, 1, "", "settingsArgument"], [70, 3, 1, "", "toTwoTuple"]], "armi.cli.run": [[71, 2, 1, "", "RunEntryPoint"]], "armi.cli.run.RunEntryPoint": [[71, 3, 1, "", "addOptions"], [71, 3, 1, "", "invoke"], [71, 4, 1, "", "name"], [71, 4, 1, "", "settingsArgument"]], "armi.cli.runSuite": [[72, 2, 1, "", "RunSuiteCommand"]], "armi.cli.runSuite.RunSuiteCommand": [[72, 3, 1, "", "addOptions"], [72, 3, 1, "", "invoke"], [72, 4, 1, "", "name"], [72, 4, 1, "", "settingsArgument"]], "armi.cli.tests": [[74, 0, 0, "-", "test_runEntryPoint"], [75, 0, 0, "-", "test_runSuite"]], "armi.cli.tests.test_runEntryPoint": [[74, 2, 1, "", "TestCheckInputEntryPoint"], [74, 2, 1, "", "TestCloneArmiRunCommandBatch"], [74, 2, 1, "", "TestCloneSuiteCommand"], [74, 2, 1, "", "TestCompareCases"], [74, 2, 1, "", "TestCompareIsotxsLibsEntryPoint"], [74, 2, 1, "", "TestCompareSuites"], [74, 2, 1, "", "TestExpandBlueprints"], [74, 2, 1, "", "TestExtractInputs"], [74, 2, 1, "", "TestInitializationEntryPoints"], [74, 2, 1, "", "TestInjectInputs"], [74, 2, 1, "", "TestMigrateInputs"], [74, 2, 1, "", "TestModifyCaseSettingsCommand"], [74, 2, 1, "", "TestReportsEntryPoint"], [74, 2, 1, "", "TestRunEntryPoint"], [74, 2, 1, "", "TestRunSuiteCommand"], [74, 2, 1, "", "TestVisFileEntryPointCommand"], [74, 1, 1, "", "buildTestDB"]], "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint": [[74, 3, 1, "", "test_checkInputEntryPointBasics"], [74, 3, 1, "", "test_checkInputEntryPointInvoke"]], "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch": [[74, 3, 1, "", "test_cloneArmiRunCommandBatchBasics"], [74, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeMedium"], [74, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeShort"]], "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand": [[74, 3, 1, "", "test_cloneSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareCases": [[74, 3, 1, "", "test_compareCasesBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint": [[74, 3, 1, "", "test_compareIsotxsLibsBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareSuites": [[74, 3, 1, "", "test_compareSuitesBasics"]], "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints": [[74, 3, 1, "", "test_expandBlueprintsBasics"]], "armi.cli.tests.test_runEntryPoint.TestExtractInputs": [[74, 3, 1, "", "test_extractInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints": [[74, 3, 1, "", "test_entryPointInitialization"]], "armi.cli.tests.test_runEntryPoint.TestInjectInputs": [[74, 3, 1, "", "test_injectInputsBasics"], [74, 3, 1, "", "test_injectInputsInvokeIgnore"], [74, 3, 1, "", "test_injectInputsInvokeNoData"]], "armi.cli.tests.test_runEntryPoint.TestMigrateInputs": [[74, 3, 1, "", "test_migrateInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand": [[74, 3, 1, "", "test_modifyCaseSettingsCommandBasics"], [74, 3, 1, "", "test_modifyCaseSettingsCommandInvoke"]], "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint": [[74, 3, 1, "", "test_cleanArgs"], [74, 3, 1, "", "test_reportsEntryPointBasics"], [74, 3, 1, "", "test_toTwoTuple"]], "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint": [[74, 3, 1, "", "test_executeCommand"], [74, 3, 1, "", "test_runCommandHelp"], [74, 3, 1, "", "test_runEntryPointBasics"]], "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand": [[74, 3, 1, "", "test_runSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand": [[74, 3, 1, "", "test_visFileEntryPointBasics"]], "armi.cli.tests.test_runSuite": [[75, 2, 1, "", "TestRunSuiteSuite"]], "armi.cli.tests.test_runSuite.TestRunSuiteSuite": [[75, 3, 1, "", "test_listCommand"], [75, 3, 1, "", "test_run"], [75, 3, 1, "", "test_showVersion"]], "armi.conftest": [[76, 1, 1, "", "bootstrapArmiTestEnv"], [76, 1, 1, "", "pytest_sessionstart"]], "armi.context": [[77, 2, 1, "", "Mode"], [77, 1, 1, "", "activateLocalFastPath"], [77, 1, 1, "", "cleanAllArmiTempDirs"], [77, 1, 1, "", "cleanTempDirs"], [77, 1, 1, "", "disconnectAllHdfDBs"], [77, 1, 1, "", "getFastPath"]], "armi.context.Mode": [[77, 4, 1, "", "BATCH"], [77, 4, 1, "", "GUI"], [77, 4, 1, "", "INTERACTIVE"], [77, 3, 1, "", "setMode"]], "armi.interfaces": [[78, 2, 1, "", "InputWriter"], [78, 2, 1, "", "Interface"], [78, 2, 1, "", "InterfaceInfo"], [78, 2, 1, "", "OutputReader"], [78, 2, 1, "", "STACK_ORDER"], [78, 2, 1, "", "TightCoupler"], [78, 1, 1, "", "getActiveInterfaceInfo"], [78, 1, 1, "", "isInterfaceActive"]], "armi.interfaces.InputWriter": [[78, 3, 1, "", "getInterface"], [78, 3, 1, "", "write"]], "armi.interfaces.Interface": [[78, 2, 1, "", "Distribute"], [78, 3, 1, "", "attachReactor"], [78, 3, 1, "", "bolForce"], [78, 3, 1, "", "detachReactor"], [78, 3, 1, "", "distributable"], [78, 3, 1, "", "duplicate"], [78, 3, 1, "", "enabled"], [78, 4, 1, "", "function"], [78, 3, 1, "", "getDependencies"], [78, 3, 1, "", "getHistoryParams"], [78, 3, 1, "", "getInputFiles"], [78, 3, 1, "", "getInterface"], [78, 3, 1, "", "getTightCouplingValue"], [78, 3, 1, "", "interactBOC"], [78, 3, 1, "", "interactBOL"], [78, 3, 1, "", "interactCoupled"], [78, 3, 1, "", "interactDistributeState"], [78, 3, 1, "", "interactEOC"], [78, 3, 1, "", "interactEOL"], [78, 3, 1, "", "interactError"], [78, 3, 1, "", "interactEveryNode"], [78, 3, 1, "", "interactInit"], [78, 3, 1, "", "isRequestedDetailPoint"], [78, 4, 1, "", "name"], [78, 3, 1, "", "nameContains"], [78, 3, 1, "", "postDistributeState"], [78, 3, 1, "", "preDistributeState"], [78, 3, 1, "", "readOutput"], [78, 3, 1, "", "specifyInputs"], [78, 3, 1, "", "updatePhysicsCouplingControl"], [78, 3, 1, "", "workerOperate"], [78, 3, 1, "", "writeInput"]], "armi.interfaces.Interface.Distribute": [[78, 4, 1, "", "DUPLICATE"], [78, 4, 1, "", "NEW"], [78, 4, 1, "", "SKIP"]], "armi.interfaces.InterfaceInfo": [[78, 4, 1, "", "interfaceCls"], [78, 4, 1, "", "kwargs"], [78, 4, 1, "", "order"]], "armi.interfaces.OutputReader": [[78, 3, 1, "", "apply"], [78, 3, 1, "", "getInterface"], [78, 3, 1, "", "read"]], "armi.interfaces.STACK_ORDER": [[78, 4, 1, "", "AFTER"], [78, 4, 1, "", "BEFORE"], [78, 4, 1, "", "BOOKKEEPING"], [78, 4, 1, "", "CRITICAL_CONTROL"], [78, 4, 1, "", "CROSS_SECTIONS"], [78, 4, 1, "", "DEPLETION"], [78, 4, 1, "", "FLUX"], [78, 4, 1, "", "FUEL_MANAGEMENT"], [78, 4, 1, "", "FUEL_PERFORMANCE"], [78, 4, 1, "", "POSTPROCESSING"], [78, 4, 1, "", "PREPROCESSING"], [78, 4, 1, "", "REACTIVITY_COEFFS"], [78, 4, 1, "", "THERMAL_HYDRAULICS"], [78, 4, 1, "", "TRANSIENT"]], "armi.interfaces.TightCoupler": [[78, 3, 1, "", "getListDimension"], [78, 3, 1, "", "isConverged"], [78, 3, 1, "", "storePreviousIterationValue"]], "armi.materials": [[80, 0, 0, "-", "air"], [81, 0, 0, "-", "alloy200"], [82, 0, 0, "-", "b4c"], [83, 0, 0, "-", "be9"], [84, 0, 0, "-", "caH2"], [85, 0, 0, "-", "californium"], [86, 0, 0, "-", "concrete"], [87, 0, 0, "-", "copper"], [88, 0, 0, "-", "cs"], [89, 0, 0, "-", "custom"], [90, 0, 0, "-", "graphite"], [91, 0, 0, "-", "hafnium"], [92, 0, 0, "-", "hastelloyN"], [93, 0, 0, "-", "ht9"], [79, 1, 1, "", "importMaterialsIntoModuleNamespace"], [94, 0, 0, "-", "inconel"], [95, 0, 0, "-", "inconel600"], [96, 0, 0, "-", "inconel625"], [97, 0, 0, "-", "inconel800"], [98, 0, 0, "-", "inconelPE16"], [99, 0, 0, "-", "inconelX750"], [79, 1, 1, "", "iterAllMaterialClassesInNamespace"], [100, 0, 0, "-", "lead"], [101, 0, 0, "-", "leadBismuth"], [102, 0, 0, "-", "lithium"], [103, 0, 0, "-", "magnesium"], [104, 0, 0, "-", "material"], [105, 0, 0, "-", "mgO"], [106, 0, 0, "-", "mixture"], [107, 0, 0, "-", "molybdenum"], [108, 0, 0, "-", "mox"], [109, 0, 0, "-", "nZ"], [110, 0, 0, "-", "potassium"], [79, 1, 1, "", "resolveMaterialClassByName"], [111, 0, 0, "-", "scandiumOxide"], [79, 1, 1, "", "setMaterialNamespaceOrder"], [112, 0, 0, "-", "siC"], [113, 0, 0, "-", "sodium"], [114, 0, 0, "-", "sodiumChloride"], [115, 0, 0, "-", "sulfur"], [116, 0, 0, "-", "tZM"], [117, 0, 0, "-", "tantalum"], [118, 0, 0, "-", "tests"], [131, 0, 0, "-", "thU"], [132, 0, 0, "-", "thorium"], [133, 0, 0, "-", "thoriumOxide"], [134, 0, 0, "-", "uThZr"], [135, 0, 0, "-", "uZr"], [136, 0, 0, "-", "uranium"], [137, 0, 0, "-", "uraniumOxide"], [138, 0, 0, "-", "void"], [139, 0, 0, "-", "water"], [140, 0, 0, "-", "yttriumOxide"], [141, 0, 0, "-", "zincOxide"], [142, 0, 0, "-", "zr"]], "armi.materials.air": [[80, 2, 1, "", "Air"]], "armi.materials.air.Air": [[80, 3, 1, "", "heatCapacity"], [80, 4, 1, "", "propertyValidTemperature"], [80, 3, 1, "", "pseudoDensity"], [80, 3, 1, "", "setDefaultMassFracs"], [80, 3, 1, "", "specificVolumeLiquid"], [80, 3, 1, "", "thermalConductivity"]], "armi.materials.alloy200": [[81, 2, 1, "", "Alloy200"]], "armi.materials.alloy200.Alloy200": [[81, 3, 1, "", "density"], [81, 3, 1, "", "linearExpansion"], [81, 4, 1, "", "linearExpansionTable"], [81, 4, 1, "", "linearExpansionTableK"], [81, 4, 1, "", "modelConst"], [81, 4, 1, "", "propertyValidTemperature"], [81, 4, 1, "", "referenceMaxPercentImpurites"], [81, 4, 1, "", "references"], [81, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.b4c": [[82, 2, 1, "", "B4C"]], "armi.materials.b4c.B4C": [[82, 3, 1, "", "applyInputParams"], [82, 3, 1, "", "density"], [82, 4, 1, "", "enrichedNuclide"], [82, 3, 1, "", "getMassEnrichmentFromNumEnrich"], [82, 3, 1, "", "linearExpansionPercent"], [82, 4, 1, "", "propertyValidTemperature"], [82, 3, 1, "", "pseudoDensity"], [82, 3, 1, "", "setDefaultMassFracs"], [82, 3, 1, "", "setNewMassFracsFromMassEnrich"], [82, 3, 1, "", "updateTD"]], "armi.materials.be9": [[83, 2, 1, "", "Be9"]], "armi.materials.be9.Be9": [[83, 3, 1, "", "density"], [83, 3, 1, "", "linearExpansionPercent"], [83, 4, 1, "", "propertyValidTemperature"], [83, 3, 1, "", "setDefaultMassFracs"], [83, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.caH2": [[84, 2, 1, "", "CaH2"]], "armi.materials.caH2.CaH2": [[84, 3, 1, "", "density"], [84, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.californium": [[85, 2, 1, "", "Californium"]], "armi.materials.californium.Californium": [[85, 3, 1, "", "density"], [85, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.concrete": [[86, 2, 1, "", "Concrete"]], "armi.materials.concrete.Concrete": [[86, 3, 1, "", "density"], [86, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.copper": [[87, 2, 1, "", "Cu"]], "armi.materials.copper.Cu": [[87, 3, 1, "", "density"], [87, 3, 1, "", "linearExpansionPercent"], [87, 4, 1, "", "propertyValidTemperature"], [87, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.cs": [[88, 2, 1, "", "Cs"]], "armi.materials.cs.Cs": [[88, 3, 1, "", "meltingPoint"], [88, 3, 1, "", "pseudoDensity"], [88, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.custom": [[89, 2, 1, "", "Custom"]], "armi.materials.custom.Custom": [[89, 3, 1, "", "density"], [89, 4, 1, "", "enrichedNuclide"], [89, 3, 1, "", "pseudoDensity"], [89, 3, 1, "", "setMassFrac"]], "armi.materials.graphite": [[90, 2, 1, "", "Graphite"]], "armi.materials.graphite.Graphite": [[90, 3, 1, "", "density"], [90, 3, 1, "", "linearExpansionPercent"], [90, 3, 1, "", "setDefaultMassFracs"], [90, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.hafnium": [[91, 2, 1, "", "Hafnium"]], "armi.materials.hafnium.Hafnium": [[91, 3, 1, "", "density"], [91, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.hastelloyN": [[92, 2, 1, "", "HastelloyN"]], "armi.materials.hastelloyN.HastelloyN": [[92, 3, 1, "", "density"], [92, 3, 1, "", "heatCapacity"], [92, 3, 1, "", "linearExpansionPercent"], [92, 4, 1, "", "materialIntro"], [92, 3, 1, "", "meanCoefficientThermalExpansion"], [92, 4, 1, "", "propertyValidTemperature"], [92, 4, 1, "", "refTempK"], [92, 3, 1, "", "setDefaultMassFracs"], [92, 3, 1, "", "thermalConductivity"]], "armi.materials.ht9": [[93, 2, 1, "", "HT9"]], "armi.materials.ht9.HT9": [[93, 3, 1, "", "density"], [93, 3, 1, "", "linearExpansionPercent"], [93, 4, 1, "", "propertyValidTemperature"], [93, 3, 1, "", "setDefaultMassFracs"], [93, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel": [[94, 2, 1, "", "Inconel"], [94, 2, 1, "", "Inconel617"]], "armi.materials.inconel.Inconel": [[94, 3, 1, "", "density"], [94, 4, 1, "", "references"], [94, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconel600": [[95, 2, 1, "", "Inconel600"]], "armi.materials.inconel600.Inconel600": [[95, 3, 1, "", "density"], [95, 3, 1, "", "heatCapacity"], [95, 3, 1, "", "linearExpansion"], [95, 3, 1, "", "linearExpansionPercent"], [95, 3, 1, "", "polyfitHeatCapacity"], [95, 3, 1, "", "polyfitLinearExpansionPercent"], [95, 3, 1, "", "polyfitThermalConductivity"], [95, 4, 1, "", "propertyValidTemperature"], [95, 4, 1, "", "refTempK"], [95, 4, 1, "", "references"], [95, 3, 1, "", "setDefaultMassFracs"], [95, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel625": [[96, 2, 1, "", "Inconel625"]], "armi.materials.inconel625.Inconel625": [[96, 3, 1, "", "density"], [96, 3, 1, "", "heatCapacity"], [96, 3, 1, "", "linearExpansion"], [96, 3, 1, "", "linearExpansionPercent"], [96, 3, 1, "", "polyfitHeatCapacity"], [96, 3, 1, "", "polyfitLinearExpansionPercent"], [96, 3, 1, "", "polyfitThermalConductivity"], [96, 4, 1, "", "propertyValidTemperature"], [96, 4, 1, "", "refTempK"], [96, 4, 1, "", "references"], [96, 3, 1, "", "setDefaultMassFracs"], [96, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel800": [[97, 2, 1, "", "Inconel800"]], "armi.materials.inconel800.Inconel800": [[97, 3, 1, "", "density"], [97, 3, 1, "", "linearExpansionPercent"], [97, 3, 1, "", "meanCoefficientThermalExpansion"], [97, 4, 1, "", "propertyValidTemperature"], [97, 4, 1, "", "refTempK"], [97, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelPE16": [[98, 2, 1, "", "InconelPE16"]], "armi.materials.inconelPE16.InconelPE16": [[98, 3, 1, "", "density"], [98, 4, 1, "", "references"], [98, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelX750": [[99, 2, 1, "", "InconelX750"]], "armi.materials.inconelX750.InconelX750": [[99, 3, 1, "", "density"], [99, 3, 1, "", "heatCapacity"], [99, 3, 1, "", "linearExpansion"], [99, 3, 1, "", "linearExpansionPercent"], [99, 3, 1, "", "polyfitHeatCapacity"], [99, 3, 1, "", "polyfitLinearExpansionPercent"], [99, 3, 1, "", "polyfitThermalConductivity"], [99, 4, 1, "", "propertyValidTemperature"], [99, 4, 1, "", "refTempK"], [99, 4, 1, "", "references"], [99, 3, 1, "", "setDefaultMassFracs"], [99, 3, 1, "", "thermalConductivity"]], "armi.materials.lead": [[100, 2, 1, "", "Lead"]], "armi.materials.lead.Lead": [[100, 3, 1, "", "heatCapacity"], [100, 4, 1, "", "propertyValidTemperature"], [100, 3, 1, "", "pseudoDensity"], [100, 3, 1, "", "setDefaultMassFracs"], [100, 3, 1, "", "volumetricExpansion"]], "armi.materials.leadBismuth": [[101, 2, 1, "", "LeadBismuth"]], "armi.materials.leadBismuth.LeadBismuth": [[101, 3, 1, "", "dynamicVisc"], [101, 3, 1, "", "heatCapacity"], [101, 4, 1, "", "propertyValidTemperature"], [101, 3, 1, "", "pseudoDensity"], [101, 3, 1, "", "setDefaultMassFracs"], [101, 3, 1, "", "thermalConductivity"], [101, 3, 1, "", "volumetricExpansion"]], "armi.materials.lithium": [[102, 2, 1, "", "Lithium"]], "armi.materials.lithium.Lithium": [[102, 3, 1, "", "applyInputParams"], [102, 3, 1, "", "boilingPoint"], [102, 4, 1, "", "enrichedNuclide"], [102, 3, 1, "", "heatCapacity"], [102, 3, 1, "", "meltingPoint"], [102, 3, 1, "", "pseudoDensity"], [102, 4, 1, "", "references"], [102, 3, 1, "", "setDefaultMassFracs"], [102, 3, 1, "", "thermalConductivity"]], "armi.materials.magnesium": [[103, 2, 1, "", "Magnesium"]], "armi.materials.magnesium.Magnesium": [[103, 4, 1, "", "propertyValidTemperature"], [103, 3, 1, "", "pseudoDensity"], [103, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.material": [[104, 2, 1, "", "Fluid"], [104, 2, 1, "", "FuelMaterial"], [104, 2, 1, "", "Material"], [104, 2, 1, "", "SimpleSolid"], [104, 1, 1, "", "parentAwareDensityRedirect"]], "armi.materials.material.Fluid": [[104, 3, 1, "", "density"], [104, 3, 1, "", "getTempChangeForDensityChange"], [104, 3, 1, "", "getThermalExpansionDensityReduction"], [104, 3, 1, "", "linearExpansion"]], "armi.materials.material.FuelMaterial": [[104, 3, 1, "", "applyInputParams"], [104, 4, 1, "", "class1_custom_isotopics"], [104, 4, 1, "", "class1_wt_frac"], [104, 4, 1, "", "class2_custom_isotopics"], [104, 3, 1, "", "density"], [104, 3, 1, "", "duplicate"], [104, 4, 1, "", "puFrac"], [104, 4, 1, "", "uFrac"], [104, 4, 1, "", "zrFrac"]], "armi.materials.material.Material": [[104, 4, 1, "", "DATA_SOURCE"], [104, 3, 1, "", "adjustMassEnrichment"], [104, 3, 1, "", "adjustMassFrac"], [104, 3, 1, "", "adjustTD"], [104, 3, 1, "", "applyInputParams"], [104, 3, 1, "", "backUp"], [104, 3, 1, "", "checkPropertyTempRange"], [104, 3, 1, "", "checkTempRange"], [104, 3, 1, "", "clearCache"], [104, 3, 1, "", "clearMassFrac"], [104, 3, 1, "", "density"], [104, 3, 1, "", "densityKgM3"], [104, 3, 1, "", "densityTimesHeatCapacity"], [104, 3, 1, "", "duplicate"], [104, 4, 1, "", "enrichedNuclide"], [104, 5, 1, "", "gasPorosity"], [104, 3, 1, "", "getChildren"], [104, 3, 1, "", "getChildrenWithFlags"], [104, 3, 1, "", "getCorrosionRate"], [104, 3, 1, "", "getMassFrac"], [104, 3, 1, "", "getName"], [104, 3, 1, "", "getNuclides"], [104, 3, 1, "", "getProperty"], [104, 3, 1, "", "getTD"], [104, 3, 1, "", "getTempChangeForDensityChange"], [104, 3, 1, "", "getTemperatureAtDensity"], [104, 3, 1, "", "getThermalExpansionDensityReduction"], [104, 3, 1, "", "heatCapacity"], [104, 3, 1, "", "linearExpansion"], [104, 3, 1, "", "linearExpansionFactor"], [104, 3, 1, "", "linearExpansionPercent"], [104, 5, 1, "", "liquidPorosity"], [104, 4, 1, "", "modelConst"], [104, 5, 1, "", "name"], [104, 4, 1, "", "propertyValidTemperature"], [104, 3, 1, "", "pseudoDensity"], [104, 3, 1, "", "pseudoDensityKgM3"], [104, 4, 1, "", "references"], [104, 3, 1, "", "removeNucMassFrac"], [104, 3, 1, "", "restoreBackup"], [104, 3, 1, "", "setDefaultMassFracs"], [104, 3, 1, "", "setMassFrac"], [104, 3, 1, "", "thermalConductivity"], [104, 4, 1, "", "thermalScatteringLaws"], [104, 3, 1, "", "volumetricExpansion"], [104, 3, 1, "", "yieldStrength"]], "armi.materials.material.SimpleSolid": [[104, 3, 1, "", "density"], [104, 3, 1, "", "linearExpansionPercent"], [104, 3, 1, "", "pseudoDensity"], [104, 4, 1, "", "refTempK"]], "armi.materials.mgO": [[105, 2, 1, "", "MgO"]], "armi.materials.mgO.MgO": [[105, 3, 1, "", "density"], [105, 3, 1, "", "linearExpansionPercent"], [105, 4, 1, "", "propertyValidTemperature"], [105, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.molybdenum": [[107, 2, 1, "", "Molybdenum"]], "armi.materials.molybdenum.Molybdenum": [[107, 3, 1, "", "density"], [107, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.mox": [[108, 2, 1, "", "MOX"]], "armi.materials.mox.MOX": [[108, 3, 1, "", "applyInputParams"], [108, 4, 1, "", "enrichedNuclide"], [108, 3, 1, "", "getMassFracPuO2"], [108, 3, 1, "", "getMolFracPuO2"], [108, 3, 1, "", "meltingPoint"], [108, 3, 1, "", "setDefaultMassFracs"], [108, 3, 1, "", "setMassFracPuO2"]], "armi.materials.nZ": [[109, 2, 1, "", "NZ"]], "armi.materials.nZ.NZ": [[109, 3, 1, "", "density"], [109, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.potassium": [[110, 2, 1, "", "Potassium"]], "armi.materials.potassium.Potassium": [[110, 4, 1, "", "propertyValidTemperature"], [110, 3, 1, "", "pseudoDensity"]], "armi.materials.scandiumOxide": [[111, 2, 1, "", "Sc2O3"]], "armi.materials.scandiumOxide.Sc2O3": [[111, 3, 1, "", "density"], [111, 3, 1, "", "linearExpansionPercent"], [111, 4, 1, "", "propertyValidTemperature"], [111, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.siC": [[112, 2, 1, "", "SiC"]], "armi.materials.siC.SiC": [[112, 3, 1, "", "cumulativeLinearExpansion"], [112, 3, 1, "", "density"], [112, 3, 1, "", "heatCapacity"], [112, 3, 1, "", "meltingPoint"], [112, 4, 1, "", "propertyEquation"], [112, 4, 1, "", "propertyNotes"], [112, 4, 1, "", "propertyUnits"], [112, 4, 1, "", "propertyValidTemperature"], [112, 3, 1, "", "pseudoDensity"], [112, 4, 1, "", "refTempK"], [112, 4, 1, "", "references"], [112, 3, 1, "", "setDefaultMassFracs"], [112, 3, 1, "", "thermalConductivity"], [112, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.sodium": [[113, 2, 1, "", "Sodium"]], "armi.materials.sodium.Sodium": [[113, 3, 1, "", "enthalpy"], [113, 4, 1, "", "propertyValidTemperature"], [113, 3, 1, "", "pseudoDensity"], [113, 3, 1, "", "setDefaultMassFracs"], [113, 3, 1, "", "specificVolumeLiquid"], [113, 3, 1, "", "thermalConductivity"]], "armi.materials.sodiumChloride": [[114, 2, 1, "", "NaCl"]], "armi.materials.sodiumChloride.NaCl": [[114, 3, 1, "", "density"], [114, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.sulfur": [[115, 2, 1, "", "Sulfur"]], "armi.materials.sulfur.Sulfur": [[115, 3, 1, "", "applyInputParams"], [115, 4, 1, "", "propertyValidTemperature"], [115, 3, 1, "", "pseudoDensity"], [115, 3, 1, "", "setDefaultMassFracs"], [115, 3, 1, "", "updateTD"], [115, 3, 1, "", "volumetricExpansion"]], "armi.materials.tZM": [[116, 2, 1, "", "TZM"]], "armi.materials.tZM.TZM": [[116, 3, 1, "", "density"], [116, 3, 1, "", "linearExpansionPercent"], [116, 4, 1, "", "percentThermalExpansion"], [116, 4, 1, "", "propertyValidTemperature"], [116, 4, 1, "", "references"], [116, 3, 1, "", "setDefaultMassFracs"], [116, 4, 1, "", "temperatureC"]], "armi.materials.tantalum": [[117, 2, 1, "", "Tantalum"]], "armi.materials.tantalum.Tantalum": [[117, 3, 1, "", "density"], [117, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.tests": [[119, 0, 0, "-", "test__init__"], [120, 0, 0, "-", "test_air"], [121, 0, 0, "-", "test_b4c"], [122, 0, 0, "-", "test_be9"], [123, 0, 0, "-", "test_graphite"], [124, 0, 0, "-", "test_lithium"], [125, 0, 0, "-", "test_materials"], [126, 0, 0, "-", "test_sic"], [127, 0, 0, "-", "test_sulfur"], [128, 0, 0, "-", "test_thoriumOxide"], [129, 0, 0, "-", "test_uZr"], [130, 0, 0, "-", "test_water"]], "armi.materials.tests.test__init__": [[119, 2, 1, "", "Materials__init__Tests"], [119, 1, 1, "", "betterSubClassCheck"]], "armi.materials.tests.test__init__.Materials__init__Tests": [[119, 3, 1, "", "test_canAccessClassesFromPackage"], [119, 3, 1, "", "test_packageClassesEqualModuleClasses"]], "armi.materials.tests.test_air": [[120, 2, 1, "", "Test_Air"]], "armi.materials.tests.test_air.Test_Air": [[120, 3, 1, "", "test_heatCapacity"], [120, 3, 1, "", "test_massFrac"], [120, 3, 1, "", "test_pseudoDensity"], [120, 3, 1, "", "test_thermalConductivity"], [120, 3, 1, "", "test_validRanges"]], "armi.materials.tests.test_b4c": [[121, 2, 1, "", "B4C_TestCase"]], "armi.materials.tests.test_b4c.B4C_TestCase": [[121, 4, 1, "", "MAT_CLASS"], [121, 3, 1, "", "test_propertyValidTemperature"], [121, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_be9": [[122, 2, 1, "", "Test_Be9"]], "armi.materials.tests.test_be9.Test_Be9": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_graphite": [[123, 2, 1, "", "Graphite_TestCase"]], "armi.materials.tests.test_graphite.Graphite_TestCase": [[123, 4, 1, "", "MAT_CLASS"], [123, 3, 1, "", "test_density"], [123, 3, 1, "", "test_linearExpansionPercent"], [123, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_lithium": [[124, 2, 1, "", "Lithium_TestCase"]], "armi.materials.tests.test_lithium.Lithium_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 4, 1, "", "defaultMassFrac"], [124, 3, 1, "", "test_Lithium_material_modifications"], [124, 3, 1, "", "test_boilingPoint"], [124, 3, 1, "", "test_heatCapacity"], [124, 3, 1, "", "test_meltingPoint"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials": [[125, 2, 1, "", "Alloy200_TestCase"], [125, 2, 1, "", "CaH2_TestCase"], [125, 2, 1, "", "Californium_TestCase"], [125, 2, 1, "", "Cesium_TestCase"], [125, 2, 1, "", "Copper_TestCase"], [125, 2, 1, "", "FuelMaterial_TestCase"], [125, 2, 1, "", "Hafnium_TestCase"], [125, 2, 1, "", "HastelloyN_TestCase"], [125, 2, 1, "", "Inconel600_TestCase"], [125, 2, 1, "", "Inconel625_TestCase"], [125, 2, 1, "", "InconelX750_TestCase"], [125, 2, 1, "", "Inconel_TestCase"], [125, 2, 1, "", "LeadBismuth_TestCase"], [125, 2, 1, "", "Lead_TestCase"], [125, 2, 1, "", "MOX_TestCase"], [125, 2, 1, "", "MagnesiumOxide_TestCase"], [125, 2, 1, "", "Magnesium_TestCase"], [125, 2, 1, "", "MaterialConstructionTests"], [125, 2, 1, "", "MaterialFindingTests"], [125, 2, 1, "", "Mixture_TestCase"], [125, 2, 1, "", "Molybdenum_TestCase"], [125, 2, 1, "", "NaCl_TestCase"], [125, 2, 1, "", "NiobiumZirconium_TestCase"], [125, 2, 1, "", "Potassium_TestCase"], [125, 2, 1, "", "ScandiumOxide_TestCase"], [125, 2, 1, "", "Sodium_TestCase"], [125, 2, 1, "", "Sulfur_TestCase"], [125, 2, 1, "", "TZM_TestCase"], [125, 2, 1, "", "Tantalum_TestCase"], [125, 2, 1, "", "ThoriumOxide_TestCase"], [125, 2, 1, "", "ThoriumUraniumMetal_TestCase"], [125, 2, 1, "", "Thorium_TestCase"], [125, 2, 1, "", "UraniumOxide_TestCase"], [125, 2, 1, "", "Uranium_TestCase"], [125, 2, 1, "", "Void_TestCase"], [125, 2, 1, "", "YttriumOxide_TestCase"], [125, 2, 1, "", "ZincOxide_TestCase"], [125, 2, 1, "", "Zr_TestCase"]], "armi.materials.tests.test_materials.Alloy200_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_linearExpansionHotter"], [125, 3, 1, "", "test_nickleContent"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.CaH2_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Californium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_getCorrosionRate"], [125, 3, 1, "", "test_porosities"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Cesium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Copper_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_densityNeverChanges"], [125, 3, 1, "", "test_getChildren"], [125, 3, 1, "", "test_getChildrenWithFlags"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.FuelMaterial_TestCase": [[125, 4, 1, "", "baseInput"], [125, 3, 1, "", "loadAssembly"], [125, 3, 1, "", "test_class1Class2_class1_wt_frac"], [125, 3, 1, "", "test_class1Class2_classX_custom_isotopics"]], "armi.materials.tests.test_materials.Hafnium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.HastelloyN_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_meanCoefficientThermalExpansion"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Inconel600_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_00_setDefaultMassFracs"], [125, 3, 1, "", "test_01_linearExpansionPercent"], [125, 3, 1, "", "test_02_linearExpansion"], [125, 3, 1, "", "test_03_pseudoDensity"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_polyfitHeatCapacity"], [125, 3, 1, "", "test_polyfitLinearExpansionPercent"], [125, 3, 1, "", "test_polyfitThermalConductivity"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel625_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_00_setDefaultMassFracs"], [125, 3, 1, "", "test_01_linearExpansionPercent"], [125, 3, 1, "", "test_02_linearExpansion"], [125, 3, 1, "", "test_03_pseudoDensity"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_polyfitHeatCapacity"], [125, 3, 1, "", "test_polyfitLinearExpansionPercent"], [125, 3, 1, "", "test_polyfitThermalConductivity"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.InconelX750_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_00_setDefaultMassFracs"], [125, 3, 1, "", "test_01_linearExpansionPercent"], [125, 3, 1, "", "test_02_linearExpansion"], [125, 3, 1, "", "test_03_pseudoDensity"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_polyfitHeatCapacity"], [125, 3, 1, "", "test_polyfitLinearExpansionPercent"], [125, 3, 1, "", "test_polyfitThermalConductivity"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel_TestCase": [[125, 3, 1, "", "test_Iconel800_linearExpansion"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.LeadBismuth_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_dynamicVisc"], [125, 3, 1, "", "test_getTempChangeForDensityChange"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_setDefaultMassFracs"], [125, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.Lead_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_setDefaultMassFracs"], [125, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.MOX_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_applyInputParams"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_getMassFracPuO2"], [125, 3, 1, "", "test_getMeltingPoint"], [125, 3, 1, "", "test_getMolFracPuO2"]], "armi.materials.tests.test_materials.MagnesiumOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Magnesium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.MaterialConstructionTests": [[125, 3, 1, "", "test_material_initialization"]], "armi.materials.tests.test_materials.MaterialFindingTests": [[125, 3, 1, "", "test_findMaterial"], [125, 3, 1, "", "test_namespacing"]], "armi.materials.tests.test_materials.Mixture_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.Molybdenum_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.NaCl_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.NiobiumZirconium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Potassium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ScandiumOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Sodium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_enthalpy"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_specificVolumeLiquid"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Sulfur_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_setDefaultMassFracs"], [125, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.TZM_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_00_applyInputParams"], [125, 3, 1, "", "test_01_pseudoDensity"], [125, 3, 1, "", "test_02_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Tantalum_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ThoriumOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_meltingPoint"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_meltingPoint"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Thorium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_meltingPoint"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_setDefaultMassFracs"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.UraniumOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_adjustMassEnrichment"], [125, 3, 1, "", "test_applyInputParams"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_densityTimesHeatCapactiy"], [125, 3, 1, "", "test_duplicate"], [125, 3, 1, "", "test_getDensityExpansion3D"], [125, 3, 1, "", "test_getTempChangeForDensityChange"], [125, 3, 1, "", "test_getTemperatureAtDensity"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_meltingPoint"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_removeNucMassFrac"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Uranium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_applyInputParams"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Void_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.YttriumOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ZincOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Zr_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_sic": [[126, 2, 1, "", "Test_SiC"]], "armi.materials.tests.test_sic.Test_SiC": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_meltingPoint"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_sulfur": [[127, 2, 1, "", "Sulfur_TestCase"]], "armi.materials.tests.test_sulfur.Sulfur_TestCase": [[127, 4, 1, "", "MAT_CLASS"], [127, 3, 1, "", "test_propertyValidTemperature"], [127, 3, 1, "", "test_sulfur_density_frac"]], "armi.materials.tests.test_thoriumOxide": [[128, 2, 1, "", "ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase": [[128, 4, 1, "", "MAT_CLASS"], [128, 3, 1, "", "test_linearExpansionPercent"], [128, 3, 1, "", "test_propertyValidTemperature"], [128, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_uZr": [[129, 2, 1, "", "UZR_TestCase"]], "armi.materials.tests.test_uZr.UZR_TestCase": [[129, 4, 1, "", "MAT_CLASS"], [129, 3, 1, "", "test_TD"], [129, 3, 1, "", "test_cache"], [129, 3, 1, "", "test_density"], [129, 3, 1, "", "test_densityKgM3"], [129, 3, 1, "", "test_duplicate"], [129, 3, 1, "", "test_isPicklable"], [129, 3, 1, "", "test_propertyValidTemperature"], [129, 3, 1, "", "test_pseudoDensityKgM3"]], "armi.materials.tests.test_water": [[130, 2, 1, "", "Test_Water"]], "armi.materials.tests.test_water.Test_Water": [[130, 3, 1, "", "test_massFrac"], [130, 3, 1, "", "test_propertyValidTemperature"], [130, 3, 1, "", "test_validateNames"], [130, 3, 1, "", "test_water_at_boiling"], [130, 3, 1, "", "test_water_at_critcalPoint"], [130, 3, 1, "", "test_water_at_freezing"]], "armi.materials.thU": [[131, 2, 1, "", "ThU"]], "armi.materials.thU.ThU": [[131, 3, 1, "", "applyInputParams"], [131, 4, 1, "", "enrichedNuclide"], [131, 3, 1, "", "getEnrichment"], [131, 3, 1, "", "linearExpansion"], [131, 3, 1, "", "meltingPoint"], [131, 4, 1, "", "propertyValidTemperature"], [131, 3, 1, "", "setDefaultMassFracs"], [131, 3, 1, "", "thermalConductivity"]], "armi.materials.thorium": [[132, 2, 1, "", "Thorium"]], "armi.materials.thorium.Thorium": [[132, 3, 1, "", "linearExpansion"], [132, 3, 1, "", "meltingPoint"], [132, 4, 1, "", "propertyValidTemperature"], [132, 3, 1, "", "setDefaultMassFracs"], [132, 3, 1, "", "thermalConductivity"]], "armi.materials.thoriumOxide": [[133, 2, 1, "", "ThO2"], [133, 2, 1, "", "ThoriumOxide"]], "armi.materials.thoriumOxide.ThoriumOxide": [[133, 3, 1, "", "applyInputParams"], [133, 3, 1, "", "density"], [133, 3, 1, "", "linearExpansion"], [133, 3, 1, "", "linearExpansionPercent"], [133, 3, 1, "", "meltingPoint"], [133, 4, 1, "", "propertyValidTemperature"], [133, 3, 1, "", "setDefaultMassFracs"], [133, 3, 1, "", "thermalConductivity"]], "armi.materials.uThZr": [[134, 2, 1, "", "UThZr"]], "armi.materials.uThZr.UThZr": [[134, 3, 1, "", "applyInputParams"], [134, 4, 1, "", "enrichedNuclide"], [134, 3, 1, "", "pseudoDensity"], [134, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.uZr": [[135, 2, 1, "", "UZr"]], "armi.materials.uZr.UZr": [[135, 3, 1, "", "applyInputParams"], [135, 4, 1, "", "enrichedNuclide"], [135, 3, 1, "", "linearExpansionPercent"], [135, 3, 1, "", "setDefaultMassFracs"], [135, 4, 1, "", "uFracDefault"], [135, 4, 1, "", "zrFracDefault"]], "armi.materials.uranium": [[136, 2, 1, "", "Uranium"]], "armi.materials.uranium.Uranium": [[136, 3, 1, "", "applyInputParams"], [136, 3, 1, "", "density"], [136, 4, 1, "", "enrichedNuclide"], [136, 3, 1, "", "heatCapacity"], [136, 3, 1, "", "linearExpansion"], [136, 3, 1, "", "linearExpansionPercent"], [136, 4, 1, "", "materialIntro"], [136, 3, 1, "", "meltingPoint"], [136, 4, 1, "", "propertyEquation"], [136, 4, 1, "", "propertyNotes"], [136, 4, 1, "", "propertyRawData"], [136, 4, 1, "", "propertyUnits"], [136, 4, 1, "", "propertyValidTemperature"], [136, 3, 1, "", "pseudoDensity"], [136, 4, 1, "", "refDens"], [136, 4, 1, "", "references"], [136, 3, 1, "", "setDefaultMassFracs"], [136, 3, 1, "", "thermalConductivity"]], "armi.materials.uraniumOxide": [[137, 2, 1, "", "HeatCapacityConstants"], [137, 2, 1, "", "UO2"], [137, 2, 1, "", "UraniumOxide"]], "armi.materials.uraniumOxide.HeatCapacityConstants": [[137, 4, 1, "", "Ea"], [137, 4, 1, "", "c1"], [137, 4, 1, "", "c2"], [137, 4, 1, "", "c3"], [137, 4, 1, "", "theta"]], "armi.materials.uraniumOxide.UraniumOxide": [[137, 4, 1, "", "REFERENCE_TEMPERATURE"], [137, 3, 1, "", "applyInputParams"], [137, 3, 1, "", "density"], [137, 4, 1, "", "enrichedNuclide"], [137, 3, 1, "", "heatCapacity"], [137, 4, 1, "", "heatCapacityConstants"], [137, 3, 1, "", "linearExpansion"], [137, 3, 1, "", "linearExpansionPercent"], [137, 3, 1, "", "meltingPoint"], [137, 4, 1, "", "propertyUnits"], [137, 4, 1, "", "propertyValidTemperature"], [137, 4, 1, "", "references"], [137, 3, 1, "", "setDefaultMassFracs"], [137, 3, 1, "", "thermalConductivity"], [137, 4, 1, "", "thermalConductivityTable"], [137, 4, 1, "", "thermalConductivityTableK"], [137, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.void": [[138, 2, 1, "", "Void"]], "armi.materials.void.Void": [[138, 3, 1, "", "density"], [138, 3, 1, "", "pseudoDensity"]], "armi.materials.water": [[139, 2, 1, "", "SaturatedSteam"], [139, 2, 1, "", "SaturatedWater"], [139, 2, 1, "", "Water"]], "armi.materials.water.SaturatedSteam": [[139, 3, 1, "", "pseudoDensity"]], "armi.materials.water.SaturatedWater": [[139, 3, 1, "", "pseudoDensity"]], "armi.materials.water.Water": [[139, 4, 1, "", "ALPHA_0"], [139, 4, 1, "", "DENSITY_CRITICAL_GPERCUBICCENTIMETER"], [139, 4, 1, "", "DENSITY_CRITICAL_KGPERCUBICMETER"], [139, 4, 1, "", "PHI_0"], [139, 4, 1, "", "TEMPERATURE_CRITICAL_K"], [139, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_MPA"], [139, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_PA"], [139, 3, 1, "", "auxiliaryQuantitySpecificEnthalpy"], [139, 3, 1, "", "auxiliaryQuantitySpecificEntropy"], [139, 4, 1, "", "d"], [139, 3, 1, "", "enthalpy"], [139, 3, 1, "", "entropy"], [139, 3, 1, "", "pseudoDensity"], [139, 4, 1, "", "references"], [139, 3, 1, "", "setDefaultMassFracs"], [139, 3, 1, "", "tau"], [139, 4, 1, "", "thermalScatteringLaws"], [139, 3, 1, "", "theta"], [139, 3, 1, "", "vaporPressure"], [139, 3, 1, "", "vaporPressurePrime"]], "armi.materials.yttriumOxide": [[140, 2, 1, "", "Y2O3"]], "armi.materials.yttriumOxide.Y2O3": [[140, 3, 1, "", "density"], [140, 3, 1, "", "linearExpansionPercent"], [140, 4, 1, "", "propertyValidTemperature"], [140, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zincOxide": [[141, 2, 1, "", "ZnO"]], "armi.materials.zincOxide.ZnO": [[141, 3, 1, "", "density"], [141, 3, 1, "", "linearExpansionPercent"], [141, 4, 1, "", "propertyValidTemperature"], [141, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zr": [[142, 2, 1, "", "Zr"]], "armi.materials.zr.Zr": [[142, 3, 1, "", "density"], [142, 3, 1, "", "linearExpansion"], [142, 3, 1, "", "linearExpansionPercent"], [142, 4, 1, "", "linearExpansionTable"], [142, 4, 1, "", "linearExpansionTableK"], [142, 4, 1, "", "propertyValidTemperature"], [142, 4, 1, "", "refTempK"], [142, 4, 1, "", "references"], [142, 3, 1, "", "setDefaultMassFracs"], [142, 3, 1, "", "thermalConductivity"]], "armi.migration": [[145, 0, 0, "-", "base"], [146, 0, 0, "-", "m0_1_3"], [147, 0, 0, "-", "m0_1_6"], [148, 0, 0, "-", "tests"]], "armi.migration.base": [[145, 2, 1, "", "BlueprintsMigration"], [145, 2, 1, "", "DatabaseMigration"], [145, 2, 1, "", "Migration"], [145, 2, 1, "", "SettingsMigration"]], "armi.migration.base.Migration": [[145, 3, 1, "", "apply"], [145, 4, 1, "", "fromVersion"], [145, 4, 1, "", "toVersion"]], "armi.migration.m0_1_3": [[146, 2, 1, "", "RemoveCentersFromBlueprints"], [146, 2, 1, "", "UpdateElementalNuclides"]], "armi.migration.m0_1_3.RemoveCentersFromBlueprints": [[146, 4, 1, "", "fromVersion"], [146, 4, 1, "", "toVersion"]], "armi.migration.m0_1_3.UpdateElementalNuclides": [[146, 4, 1, "", "deletions"], [146, 4, 1, "", "fromVersion"], [146, 4, 1, "", "swaps"], [146, 4, 1, "", "toVersion"]], "armi.migration.m0_1_6": [[147, 2, 1, "", "ConvertAlphanumLocationSettingsToNum"], [147, 1, 1, "", "getIndicesFromDIF3DStyleLocatorLabel"]], "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum": [[147, 4, 1, "", "fromVersion"], [147, 4, 1, "", "toVersion"]], "armi.migration.tests": [[149, 0, 0, "-", "test_m0_1_6"], [150, 0, 0, "-", "test_migration_base"]], "armi.migration.tests.test_m0_1_6": [[149, 2, 1, "", "TestMigration"]], "armi.migration.tests.test_m0_1_6.TestMigration": [[149, 3, 1, "", "test_locationLabelMigration"]], "armi.migration.tests.test_migration_base": [[150, 2, 1, "", "TestMigrationBases"], [150, 2, 1, "", "TestSettingsMigration"]], "armi.migration.tests.test_migration_base.TestMigrationBases": [[150, 3, 1, "", "test_basic_validation"]], "armi.migration.tests.test_migration_base.TestSettingsMigration": [[150, 3, 1, "", "test_loadStreamFromPath"]], "armi.mpiActions": [[151, 2, 1, "", "DistributeStateAction"], [151, 2, 1, "", "DistributionAction"], [151, 2, 1, "", "MpiAction"], [151, 7, 1, "", "MpiActionError"], [151, 1, 1, "", "runActions"], [151, 1, 1, "", "runActionsInSerial"]], "armi.mpiActions.DistributeStateAction": [[151, 3, 1, "", "invokeHook"]], "armi.mpiActions.DistributionAction": [[151, 3, 1, "", "invokeHook"]], "armi.mpiActions.MpiAction": [[151, 3, 1, "", "broadcast"], [151, 3, 1, "", "gather"], [151, 3, 1, "", "invoke"], [151, 3, 1, "", "invokeAsMaster"], [151, 3, 1, "", "invokeHook"], [151, 3, 1, "", "mpiFlatten"], [151, 3, 1, "", "mpiIter"], [151, 5, 1, "", "parallel"]], "armi.nucDirectory": [[153, 0, 0, "-", "elements"], [154, 0, 0, "-", "nucDir"], [155, 0, 0, "-", "nuclideBases"], [156, 0, 0, "-", "tests"], [162, 0, 0, "-", "thermalScattering"], [163, 0, 0, "-", "transmutations"]], "armi.nucDirectory.elements": [[153, 2, 1, "", "ChemicalGroup"], [153, 2, 1, "", "ChemicalPhase"], [153, 2, 1, "", "Element"], [153, 1, 1, "", "addGlobalElement"], [153, 1, 1, "", "destroyGlobalElements"], [153, 1, 1, "", "factory"], [153, 1, 1, "", "getElementZ"], [153, 1, 1, "", "getElementsByChemicalGroup"], [153, 1, 1, "", "getElementsByChemicalPhase"], [153, 1, 1, "", "getName"], [153, 1, 1, "", "getSymbol"]], "armi.nucDirectory.elements.ChemicalGroup": [[153, 4, 1, "", "ACTINIDE"], [153, 4, 1, "", "ALKALINE_EARTH_METAL"], [153, 4, 1, "", "ALKALI_METAL"], [153, 4, 1, "", "HALOGEN"], [153, 4, 1, "", "LANTHANIDE"], [153, 4, 1, "", "METALLOID"], [153, 4, 1, "", "NOBLE_GAS"], [153, 4, 1, "", "NONMETAL"], [153, 4, 1, "", "POST_TRANSITION_METAL"], [153, 4, 1, "", "TRANSITION_METAL"], [153, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.ChemicalPhase": [[153, 4, 1, "", "GAS"], [153, 4, 1, "", "LIQUID"], [153, 4, 1, "", "SOLID"], [153, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.Element": [[153, 3, 1, "", "append"], [153, 3, 1, "", "getNaturalIsotopics"], [153, 3, 1, "", "isHeavyMetal"], [153, 3, 1, "", "isNaturallyOccurring"]], "armi.nucDirectory.nucDir": [[154, 1, 1, "", "getAtomicWeight"], [154, 1, 1, "", "getElementName"], [154, 1, 1, "", "getElementSymbol"], [154, 1, 1, "", "getMc2Label"], [154, 1, 1, "", "getNaturalIsotopics"], [154, 1, 1, "", "getNaturalMassIsotopics"], [154, 1, 1, "", "getNuclide"], [154, 1, 1, "", "getNuclideFromName"], [154, 1, 1, "", "getNuclideNames"], [154, 1, 1, "", "getNuclides"], [154, 1, 1, "", "getThresholdDisplacementEnergy"], [154, 1, 1, "", "isFissile"], [154, 1, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases": [[155, 2, 1, "", "DummyNuclideBase"], [155, 2, 1, "", "IMcnpNuclide"], [155, 2, 1, "", "INuclide"], [155, 2, 1, "", "LumpNuclideBase"], [155, 2, 1, "", "NaturalNuclideBase"], [155, 2, 1, "", "NuclideBase"], [155, 2, 1, "", "NuclideInterface"], [155, 2, 1, "", "NuclideWrapper"], [155, 1, 1, "", "addGlobalNuclide"], [155, 1, 1, "", "addNuclideBases"], [155, 1, 1, "", "changeLabel"], [155, 1, 1, "", "destroyGlobalNuclides"], [155, 1, 1, "", "factory"], [155, 1, 1, "", "fromName"], [155, 1, 1, "", "getDepletableNuclides"], [155, 1, 1, "", "getIsotopics"], [155, 1, 1, "", "imposeBurnChain"], [155, 1, 1, "", "initReachableActiveNuclidesThroughBurnChain"], [155, 1, 1, "", "isMonoIsotopicElement"], [155, 1, 1, "", "isotopes"], [155, 1, 1, "", "readMCCNuclideData"], [155, 1, 1, "", "single"], [155, 1, 1, "", "updateNuclideBasesForSpecialCases"], [155, 1, 1, "", "where"]], "armi.nucDirectory.nuclideBases.DummyNuclideBase": [[155, 3, 1, "", "getMcc2Id"], [155, 3, 1, "", "getMcc3Id"], [155, 3, 1, "", "getMcc3IdEndfbVII0"], [155, 3, 1, "", "getMcc3IdEndfbVII1"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.IMcnpNuclide": [[155, 3, 1, "", "getAAAZZZSId"], [155, 3, 1, "", "getMcnpId"]], "armi.nucDirectory.nuclideBases.INuclide": [[155, 4, 1, "", "DECAY"], [155, 4, 1, "", "SPONTANEOUS_FISSION"], [155, 4, 1, "", "TRANSMUTATION"], [155, 4, 1, "", "fissile"], [155, 3, 1, "", "getDatabaseName"], [155, 3, 1, "", "getDecay"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "isFissile"], [155, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.LumpNuclideBase": [[155, 3, 1, "", "getMcc2Id"], [155, 3, 1, "", "getMcc3Id"], [155, 3, 1, "", "getMcc3IdEndfbVII0"], [155, 3, 1, "", "getMcc3IdEndfbVII1"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NaturalNuclideBase": [[155, 3, 1, "", "getAAAZZZSId"], [155, 3, 1, "", "getEndfMatNum"], [155, 3, 1, "", "getMcc2Id"], [155, 3, 1, "", "getMcc3Id"], [155, 3, 1, "", "getMcc3IdEndfbVII0"], [155, 3, 1, "", "getMcc3IdEndfbVII1"], [155, 3, 1, "", "getMcnpId"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideBase": [[155, 3, 1, "", "getAAAZZZSId"], [155, 3, 1, "", "getEndfMatNum"], [155, 3, 1, "", "getMcc2Id"], [155, 3, 1, "", "getMcc3Id"], [155, 3, 1, "", "getMcc3IdEndfbVII0"], [155, 3, 1, "", "getMcc3IdEndfbVII1"], [155, 3, 1, "", "getMcnpId"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideInterface": [[155, 3, 1, "", "getDatabaseName"], [155, 3, 1, "", "getDecay"], [155, 3, 1, "", "getMcc2Id"], [155, 3, 1, "", "getMcc3Id"], [155, 3, 1, "", "getMcc3IdEndfbVII0"], [155, 3, 1, "", "getMcc3IdEndfbVII1"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "getSerpentId"], [155, 3, 1, "", "isFissile"], [155, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NuclideWrapper": [[155, 3, 1, "", "getDatabaseName"], [155, 3, 1, "", "getDecay"], [155, 3, 1, "", "getMcc2Id"], [155, 3, 1, "", "getMcc3Id"], [155, 3, 1, "", "getMcc3IdEndfbVII0"], [155, 3, 1, "", "getMcc3IdEndfbVII1"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "isFissile"], [155, 3, 1, "", "isHeavyMetal"], [155, 5, 1, "", "name"], [155, 5, 1, "", "weight"]], "armi.nucDirectory.tests": [[157, 0, 0, "-", "test_elements"], [158, 0, 0, "-", "test_nucDirectory"], [159, 0, 0, "-", "test_nuclideBases"], [160, 0, 0, "-", "test_thermalScattering"], [161, 0, 0, "-", "test_transmutations"]], "armi.nucDirectory.tests.test_elements": [[157, 2, 1, "", "TestElement"]], "armi.nucDirectory.tests.test_elements.TestElement": [[157, 3, 1, "", "test_abundancesAddToOne"], [157, 3, 1, "", "test_element_addExistingElementFails"], [157, 3, 1, "", "test_element_addedElementAppearsInElementList"], [157, 3, 1, "", "test_element_elementByNameReturnsElement"], [157, 3, 1, "", "test_element_elementBySymbolReturnsElement"], [157, 3, 1, "", "test_element_elementByZReturnsElement"], [157, 3, 1, "", "test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"], [157, 3, 1, "", "test_element_isNaturallyOccurring"], [157, 3, 1, "", "test_elements_elementBulkProperties"], [157, 3, 1, "", "test_isHeavyMetal"]], "armi.nucDirectory.tests.test_nucDirectory": [[158, 2, 1, "", "TestNucDirectory"]], "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory": [[158, 3, 1, "", "test_getDisplacementEnergy"], [158, 3, 1, "", "test_nucDir_getNameForOldDashedNames"], [158, 3, 1, "", "test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"], [158, 3, 1, "", "test_nucDir_getNuclidesFromForBadName"]], "armi.nucDirectory.tests.test_nuclideBases": [[159, 2, 1, "", "TestAAAZZZSId"], [159, 2, 1, "", "TestNuclide"]], "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId": [[159, 3, 1, "", "test_AAAZZZSNameGenerator"]], "armi.nucDirectory.tests.test_nuclideBases.TestNuclide": [[159, 3, 1, "", "test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"], [159, 3, 1, "", "test_NaturalNuclideBase_getNatrualIsotpics"], [159, 3, 1, "", "test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"], [159, 3, 1, "", "test_NonMc2Nuclide"], [159, 3, 1, "", "test_curieDefinitionWithRa226"], [159, 3, 1, "", "test_getDecay"], [159, 3, 1, "", "test_getEndfMatNum"], [159, 3, 1, "", "test_kryptonDecayConstants"], [159, 3, 1, "", "test_loadMcc2Data"], [159, 3, 1, "", "test_loadMcc3EndfVII0Data"], [159, 3, 1, "", "test_loadMcc3EndfVII1Data"], [159, 3, 1, "", "test_nucBase_AllAbundancesAddToOne"], [159, 3, 1, "", "test_nucBases_AllDatabaseNamesAreUnique"], [159, 3, 1, "", "test_nucBases_AllLabelsAreUnique"], [159, 3, 1, "", "test_nucBases_Am242m"], [159, 3, 1, "", "test_nucBases_Mc2Elementals"], [159, 3, 1, "", "test_nucBases_NegativeZRaisesException"], [159, 3, 1, "", "test_nucBases_Z295RaisesException"], [159, 3, 1, "", "test_nucBases_databaseNamesStartWith_n"], [159, 3, 1, "", "test_nucBases_fromNameBadNameRaisesException"], [159, 3, 1, "", "test_nucBases_imposeBurnChainDecayBulkStatistics"], [159, 3, 1, "", "test_nucBases_imposeBurnChainTransmutationBulkStatistics"], [159, 3, 1, "", "test_nucBases_imposeBurn_nuSF"], [159, 3, 1, "", "test_nucBases_isHeavyMetal"], [159, 3, 1, "", "test_nucBases_labelAndNameCollsionsAreForSameNuclide"], [159, 3, 1, "", "test_nucBases_singleFailsWithMultipleMatches"], [159, 3, 1, "", "test_nucBases_singleFailsWithNoMatches"], [159, 3, 1, "", "test_nucBases_singleIsPrettySpecific"]], "armi.nucDirectory.tests.test_thermalScattering": [[160, 2, 1, "", "TestThermalScattering"], [160, 1, 1, "", "buildBlockWithTSL"], [160, 1, 1, "", "getNuclideThermalScatteringData"]], "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering": [[160, 3, 1, "", "test_ACECompound"], [160, 3, 1, "", "test_ACEElementInCompound"], [160, 3, 1, "", "test_ACEIsotope"], [160, 3, 1, "", "test_endf8Compound"], [160, 3, 1, "", "test_endf8ElementInCompound"], [160, 3, 1, "", "test_endf8Isotope"], [160, 3, 1, "", "test_failOnMultiple"], [160, 3, 1, "", "test_graphiteOnReactor"]], "armi.nucDirectory.tests.test_transmutations": [[161, 2, 1, "", "DecayModeTests"], [161, 2, 1, "", "TransmutationTests"], [161, 1, 1, "", "randomString"]], "armi.nucDirectory.tests.test_transmutations.DecayModeTests": [[161, 3, 1, "", "test_DecayMode_invalidReactionTypes"], [161, 3, 1, "", "test_DecayMode_validReactionTypes"]], "armi.nucDirectory.tests.test_transmutations.TransmutationTests": [[161, 3, 1, "", "test_Transmutation_invalidReactionTypes"], [161, 3, 1, "", "test_Transmutation_productParticle"], [161, 3, 1, "", "test_Transmutation_validReactionTypes"]], "armi.nucDirectory.thermalScattering": [[162, 2, 1, "", "ThermalScattering"], [162, 1, 1, "", "factory"]], "armi.nucDirectory.thermalScattering.ThermalScattering": [[162, 3, 1, "", "getSubjectNuclideBases"]], "armi.nucDirectory.transmutations": [[163, 2, 1, "", "DecayMode"], [163, 2, 1, "", "Transmutable"], [163, 2, 1, "", "Transmutation"]], "armi.nucDirectory.transmutations.Transmutable": [[163, 3, 1, "", "getPreferredProduct"]], "armi.nuclearDataIO": [[165, 0, 0, "-", "cccc"], [164, 1, 1, "", "getExpectedCOMPXSFileName"], [164, 1, 1, "", "getExpectedGAMISOFileName"], [164, 1, 1, "", "getExpectedISOTXSFileName"], [164, 1, 1, "", "getExpectedPMATRXFileName"], [195, 0, 0, "-", "nuclearFileMetadata"], [196, 0, 0, "-", "tests"], [200, 0, 0, "-", "xsCollections"], [201, 0, 0, "-", "xsLibraries"], [202, 0, 0, "-", "xsNuclides"]], "armi.nuclearDataIO.cccc": [[166, 0, 0, "-", "cccc"], [167, 0, 0, "-", "compxs"], [168, 0, 0, "-", "dif3d"], [169, 0, 0, "-", "dlayxs"], [170, 0, 0, "-", "fixsrc"], [171, 0, 0, "-", "gamiso"], [172, 0, 0, "-", "geodst"], [173, 0, 0, "-", "isotxs"], [174, 0, 0, "-", "labels"], [175, 0, 0, "-", "nhflux"], [176, 0, 0, "-", "pmatrx"], [177, 0, 0, "-", "pwdint"], [178, 0, 0, "-", "rtflux"], [179, 0, 0, "-", "rzflux"], [180, 0, 0, "-", "tests"]], "armi.nuclearDataIO.cccc.cccc": [[166, 2, 1, "", "AsciiRecordReader"], [166, 2, 1, "", "AsciiRecordWriter"], [166, 2, 1, "", "BinaryRecordReader"], [166, 2, 1, "", "BinaryRecordWriter"], [166, 2, 1, "", "DataContainer"], [166, 6, 1, "", "IMPLICIT_INT"], [166, 2, 1, "", "IORecord"], [166, 2, 1, "", "Stream"], [166, 2, 1, "", "StreamWithDataContainer"], [166, 1, 1, "", "getBlockBandwidth"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader": [[166, 3, 1, "", "close"], [166, 3, 1, "", "rwDouble"], [166, 3, 1, "", "rwFloat"], [166, 3, 1, "", "rwInt"], [166, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter": [[166, 3, 1, "", "close"], [166, 3, 1, "", "open"], [166, 3, 1, "", "rwDouble"], [166, 3, 1, "", "rwFloat"], [166, 3, 1, "", "rwInt"], [166, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader": [[166, 3, 1, "", "close"], [166, 3, 1, "", "open"], [166, 3, 1, "", "rwBool"], [166, 3, 1, "", "rwDouble"], [166, 3, 1, "", "rwFloat"], [166, 3, 1, "", "rwInt"], [166, 3, 1, "", "rwLong"], [166, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter": [[166, 3, 1, "", "close"], [166, 3, 1, "", "open"], [166, 3, 1, "", "rwBool"], [166, 3, 1, "", "rwDouble"], [166, 3, 1, "", "rwFloat"], [166, 3, 1, "", "rwInt"], [166, 3, 1, "", "rwLong"], [166, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.IORecord": [[166, 3, 1, "", "close"], [166, 4, 1, "", "count"], [166, 4, 1, "", "maxsize"], [166, 3, 1, "", "open"], [166, 3, 1, "", "rwBool"], [166, 3, 1, "", "rwDouble"], [166, 3, 1, "", "rwDoubleMatrix"], [166, 3, 1, "", "rwFloat"], [166, 3, 1, "", "rwImplicitlyTypedMap"], [166, 3, 1, "", "rwInt"], [166, 3, 1, "", "rwIntMatrix"], [166, 3, 1, "", "rwList"], [166, 3, 1, "", "rwMatrix"], [166, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.Stream": [[166, 3, 1, "", "createRecord"], [166, 3, 1, "", "readAscii"], [166, 3, 1, "", "readBinary"], [166, 3, 1, "", "readWrite"], [166, 3, 1, "", "writeAscii"], [166, 3, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.compxs": [[167, 2, 1, "", "CompxsRegion"], [167, 1, 1, "", "compare"]], "armi.nuclearDataIO.cccc.compxs.CompxsRegion": [[167, 3, 1, "", "allocateXS"], [167, 3, 1, "", "getXS"], [167, 3, 1, "", "initMetadata"], [167, 5, 1, "", "isFissile"], [167, 3, 1, "", "makeScatteringMatrices"], [167, 3, 1, "", "merge"]], "armi.nuclearDataIO.cccc.dif3d": [[168, 2, 1, "", "Dif3dData"], [168, 2, 1, "", "Dif3dStream"]], "armi.nuclearDataIO.cccc.dif3d.Dif3dStream": [[168, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.dlayxs": [[169, 2, 1, "", "DelayedNeutronData"], [169, 2, 1, "", "Dlayxs"], [169, 2, 1, "", "DlayxsIO"], [169, 1, 1, "", "compare"], [169, 1, 1, "", "readAscii"], [169, 1, 1, "", "readBinary"], [169, 1, 1, "", "writeAscii"], [169, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.dlayxs.Dlayxs": [[169, 5, 1, "", "G"], [169, 3, 1, "", "generateAverageDelayedNeutronConstants"]], "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO": [[169, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.fixsrc": [[170, 2, 1, "", "FIXSRC"], [170, 1, 1, "", "readBinary"], [170, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.fixsrc.FIXSRC": [[170, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.gamiso": [[171, 1, 1, "", "addDummyNuclidesToLibrary"], [171, 1, 1, "", "compare"], [171, 1, 1, "", "compareNuclideXS"]], "armi.nuclearDataIO.cccc.geodst": [[172, 2, 1, "", "GeodstData"], [172, 2, 1, "", "GeodstStream"]], "armi.nuclearDataIO.cccc.geodst.GeodstStream": [[172, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.isotxs": [[173, 2, 1, "", "IsotxsIO"], [173, 1, 1, "", "addDummyNuclidesToLibrary"], [173, 1, 1, "", "compare"], [173, 1, 1, "", "compareNuclideXS"], [173, 1, 1, "", "compareSet"]], "armi.nuclearDataIO.cccc.isotxs.IsotxsIO": [[173, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.labels": [[174, 2, 1, "", "LabelsData"], [174, 2, 1, "", "LabelsStream"]], "armi.nuclearDataIO.cccc.labels.LabelsStream": [[174, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.nhflux": [[175, 2, 1, "", "NHFLUX"], [175, 2, 1, "", "NafluxStream"], [175, 2, 1, "", "NafluxStreamVariant"], [175, 2, 1, "", "NhfluxStream"], [175, 2, 1, "", "NhfluxStreamVariant"], [175, 1, 1, "", "getNhfluxReader"]], "armi.nuclearDataIO.cccc.nhflux.NHFLUX": [[175, 5, 1, "", "fluxMoments"], [175, 5, 1, "", "partialCurrentsHex"], [175, 5, 1, "", "partialCurrentsHex_ext"], [175, 5, 1, "", "partialCurrentsZ"]], "armi.nuclearDataIO.cccc.nhflux.NhfluxStream": [[175, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pmatrx": [[176, 2, 1, "", "PmatrxIO"], [176, 1, 1, "", "addDummyNuclidesToLibrary"], [176, 1, 1, "", "compare"], [176, 1, 1, "", "compareNuclideXS"], [176, 1, 1, "", "readAscii"], [176, 1, 1, "", "readBinary"], [176, 1, 1, "", "writeAscii"], [176, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO": [[176, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pwdint": [[177, 2, 1, "", "PwdintData"], [177, 2, 1, "", "PwdintStream"]], "armi.nuclearDataIO.cccc.pwdint.PwdintStream": [[177, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rtflux": [[178, 2, 1, "", "AtfluxStream"], [178, 2, 1, "", "RtfluxData"], [178, 2, 1, "", "RtfluxStream"], [178, 1, 1, "", "getFDFluxReader"]], "armi.nuclearDataIO.cccc.rtflux.AtfluxStream": [[178, 3, 1, "", "getEnergyGroupIndex"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxData": [[178, 4, 1, "", "groupFluxes"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxStream": [[178, 3, 1, "", "getEnergyGroupIndex"], [178, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rzflux": [[179, 2, 1, "", "Convergence"], [179, 2, 1, "", "RzfluxData"], [179, 2, 1, "", "RzfluxStream"]], "armi.nuclearDataIO.cccc.rzflux.Convergence": [[179, 4, 1, "", "CONVERGED"], [179, 4, 1, "", "CONVERGING"], [179, 4, 1, "", "DIVERGING"], [179, 4, 1, "", "NO_ITERATIONS"]], "armi.nuclearDataIO.cccc.rzflux.RzfluxStream": [[179, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.tests": [[181, 0, 0, "-", "test_cccc"], [182, 0, 0, "-", "test_compxs"], [183, 0, 0, "-", "test_dif3d"], [184, 0, 0, "-", "test_dlayxs"], [185, 0, 0, "-", "test_fixsrc"], [186, 0, 0, "-", "test_gamiso"], [187, 0, 0, "-", "test_geodst"], [188, 0, 0, "-", "test_isotxs"], [189, 0, 0, "-", "test_labels"], [190, 0, 0, "-", "test_nhflux"], [191, 0, 0, "-", "test_pmatrx"], [192, 0, 0, "-", "test_pwdint"], [193, 0, 0, "-", "test_rtflux"], [194, 0, 0, "-", "test_rzflux"]], "armi.nuclearDataIO.cccc.tests.test_cccc": [[181, 2, 1, "", "CcccAsciiRecordTests"], [181, 2, 1, "", "CcccBinaryRecordTests"], [181, 2, 1, "", "CcccIOStreamTests"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests": [[181, 3, 1, "", "test_notReadingAnEntireRecordRaisesException"], [181, 3, 1, "", "test_readingBeyondRecordRaisesException"], [181, 3, 1, "", "test_writeAndReadSimpleFloatRecord"], [181, 3, 1, "", "test_writeAndReadSimpleIntegerRecord"], [181, 3, 1, "", "test_writeAndReadSimpleStringRecord"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests": [[181, 3, 1, "", "test_initWithFileMode"]], "armi.nuclearDataIO.cccc.tests.test_compxs": [[182, 2, 1, "", "TestCompxs"]], "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs": [[182, 5, 1, "", "asciiWritePath"], [182, 5, 1, "", "binaryWritePath"], [182, 3, 1, "", "test_asciiRW"], [182, 3, 1, "", "test_binaryRW"], [182, 3, 1, "", "test_getCOMPXSFileName"], [182, 3, 1, "", "test_libraryData"], [182, 3, 1, "", "test_mergeCompxsLibraries"], [182, 3, 1, "", "test_regionPrimaryXS"], [182, 3, 1, "", "test_totalScatterMatrix"]], "armi.nuclearDataIO.cccc.tests.test_dif3d": [[183, 2, 1, "", "TestDif3dEmptyRecords"], [183, 2, 1, "", "TestDif3dSimpleHexz"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords": [[183, 3, 1, "", "test_empty4and5Records"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz": [[183, 3, 1, "", "test__rw2DRecord"], [183, 3, 1, "", "test__rw3DRecord"], [183, 3, 1, "", "test__rw4DRecord"], [183, 3, 1, "", "test__rw5DRecord"], [183, 3, 1, "", "test__rwFile1DRecord"], [183, 3, 1, "", "test__rwFileID"], [183, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs": [[184, 2, 1, "", "DlayxsTests"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests": [[184, 3, 1, "", "test_ENDFVII1DecayConstants"], [184, 3, 1, "", "test_ENDFVII1NeutronsPerFission"], [184, 3, 1, "", "test_NuDelay"], [184, 3, 1, "", "test_avg"], [184, 3, 1, "", "test_chi_delay"], [184, 3, 1, "", "test_chi_delaySumsTo1"], [184, 3, 1, "", "test_compare"], [184, 3, 1, "", "test_decayConstants"], [184, 3, 1, "", "test_nuclides"], [184, 3, 1, "", "test_writeBinary_mcc3"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc": [[185, 2, 1, "", "TestFixsrc"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc": [[185, 3, 1, "", "test_writeReadBinaryLoop"]], "armi.nuclearDataIO.cccc.tests.test_gamiso": [[186, 2, 1, "", "TestGamiso"]], "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso": [[186, 3, 1, "", "test_addDummyNuclidesToLibrary"], [186, 3, 1, "", "test_compare"], [186, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_geodst": [[187, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst": [[187, 3, 1, "", "test_readGeodst"], [187, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs": [[188, 2, 1, "", "Isotxs_merge_Tests"], [188, 2, 1, "", "TestIsotxs"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests": [[188, 3, 1, "", "test_mergeMccV2FilesRemovesTheFileWideChi"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs": [[188, 3, 1, "", "test_getGAMISOFileName"], [188, 3, 1, "", "test_getISOTXSFileName"], [188, 3, 1, "", "test_getNuclide"], [188, 3, 1, "", "test_getScatterWeights"], [188, 3, 1, "", "test_getScatteringWeights"], [188, 3, 1, "", "test_isotxsDetailedData"], [188, 3, 1, "", "test_isotxsGeneralData"], [188, 3, 1, "", "test_n2nIsReactionBased"], [188, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_labels": [[189, 2, 1, "", "TestLabels"]], "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels": [[189, 3, 1, "", "test_readLabelsBinary"], [189, 3, 1, "", "test_writeLabelsAscii"]], "armi.nuclearDataIO.cccc.tests.test_nhflux": [[190, 2, 1, "", "TestNhflux"], [190, 2, 1, "", "TestNhfluxVariant"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux": [[190, 3, 1, "", "test_fc"], [190, 3, 1, "", "test_fluxMoments"], [190, 3, 1, "", "test_write"], [190, 3, 1, "", "test_xyPartialCurrents"], [190, 3, 1, "", "test_zPartialCurrents"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant": [[190, 3, 1, "", "test_fc"], [190, 3, 1, "", "test_fluxMoments"], [190, 3, 1, "", "test_write"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx": [[191, 2, 1, "", "TestPmatrx"], [191, 2, 1, "", "TestPmatrxNuclides"], [191, 2, 1, "", "TestProductionMatrix_FromWritten"], [191, 2, 1, "", "TestProductionMatrix_FromWrittenAscii"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx": [[191, 3, 1, "", "test_pmatrxDoesntHaveDoseConversionFactors"], [191, 3, 1, "", "test_pmatrxGammaEnergies"], [191, 3, 1, "", "test_pmatrxNeutronEnergies"], [191, 3, 1, "", "test_pmatrxNuclideNames"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides": [[191, 3, 1, "", "test_getPMATRXFileName"], [191, 3, 1, "", "test_nuclideDataIsDifferent"], [191, 3, 1, "", "test_pmatrxNuclideDataAA"], [191, 3, 1, "", "test_pmatrxNuclideDataAB"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten": [[191, 3, 1, "", "test_writtenIsIdenticalToOriginal"]], "armi.nuclearDataIO.cccc.tests.test_pwdint": [[192, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst": [[192, 3, 1, "", "test_readGeodst"], [192, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_rtflux": [[193, 2, 1, "", "Testrtflux"]], "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux": [[193, 3, 1, "", "test_adjoint"], [193, 3, 1, "", "test_readrtflux"], [193, 3, 1, "", "test_rwAscii"], [193, 3, 1, "", "test_writertflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux": [[194, 2, 1, "", "TestRzflux"], [194, 1, 1, "", "binaryFilesEqual"]], "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux": [[194, 3, 1, "", "test_readRzflux"], [194, 3, 1, "", "test_rwAscii"], [194, 3, 1, "", "test_writeRzflux"]], "armi.nuclearDataIO.nuclearFileMetadata": [[195, 2, 1, "", "FileMetadata"], [195, 2, 1, "", "NuclideMetadata"], [195, 2, 1, "", "NuclideXSMetadata"], [195, 2, 1, "", "RegionXSMetadata"]], "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata": [[195, 3, 1, "", "update"]], "armi.nuclearDataIO.tests": [[197, 0, 0, "-", "test_xsCollections"], [198, 0, 0, "-", "test_xsLibraries"], [199, 0, 0, "-", "test_xsNuclides"]], "armi.nuclearDataIO.tests.test_xsCollections": [[197, 2, 1, "", "MockBlock"], [197, 2, 1, "", "MockBlueprints"], [197, 2, 1, "", "MockReactor"], [197, 2, 1, "", "TestXsCollections"]], "armi.nuclearDataIO.tests.test_xsCollections.MockBlock": [[197, 3, 1, "", "getNuclideNumberDensities"], [197, 3, 1, "", "getNuclides"], [197, 3, 1, "", "getVolume"], [197, 4, 1, "", "paramCollectionType"], [197, 5, 1, "", "r"], [197, 3, 1, "", "setNumberDensity"]], "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections": [[197, 3, 1, "", "test_collapseCrossSection"], [197, 3, 1, "", "test_createMacrosFromMicros"], [197, 3, 1, "", "test_generateTotalScatteringMatrix"], [197, 3, 1, "", "test_generateTotalScatteringMatrixWithMissingData"], [197, 3, 1, "", "test_plotNucXs"]], "armi.nuclearDataIO.tests.test_xsLibraries": [[198, 2, 1, "", "AbstractTestXSlibraryMerging"], [198, 2, 1, "", "Combined_Merge_Tests"], [198, 2, 1, "", "Gamiso_Merge_Tests"], [198, 2, 1, "", "Isotxs_Merge_Tests"], [198, 2, 1, "", "Pmatrx_Merge_Tests"], [198, 2, 1, "", "TempFileMixin"], [198, 2, 1, "", "TestGetISOTXSFilesInWorkingDirectory"], [198, 2, 1, "", "TestXSLibrary"]], "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging": [[198, 3, 1, "", "getErrorType"], [198, 3, 1, "", "getLibAAPath"], [198, 3, 1, "", "getLibAA_ABPath"], [198, 3, 1, "", "getLibABPath"], [198, 3, 1, "", "getLibLumpedPath"], [198, 3, 1, "", "getReadFunc"], [198, 3, 1, "", "getWriteFunc"], [198, 3, 1, "", "test_canRemoveIsotopes"], [198, 3, 1, "", "test_cannotMergeXSLibWithSameNuclideNames"], [198, 3, 1, "", "test_cannotMergeXSLibxWithDifferentGroupStructure"], [198, 3, 1, "", "test_mergeEmptyXSLibWithOtherEssentiallyClonesTheOther"], [198, 3, 1, "", "test_mergeTwoXSLibFiles"]], "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests": [[198, 3, 1, "", "test_mergeAllXSLibFiles"]], "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests": [[198, 3, 1, "", "getErrorType"], [198, 3, 1, "", "getLibAAPath"], [198, 3, 1, "", "getLibAA_ABPath"], [198, 3, 1, "", "getLibABPath"], [198, 3, 1, "", "getLibLumpedPath"], [198, 3, 1, "", "getReadFunc"], [198, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests": [[198, 3, 1, "", "getErrorType"], [198, 3, 1, "", "getLibAAPath"], [198, 3, 1, "", "getLibAA_ABPath"], [198, 3, 1, "", "getLibABPath"], [198, 3, 1, "", "getLibLumpedPath"], [198, 3, 1, "", "getReadFunc"], [198, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests": [[198, 3, 1, "", "getErrorType"], [198, 3, 1, "", "getLibAAPath"], [198, 3, 1, "", "getLibAA_ABPath"], [198, 3, 1, "", "getLibABPath"], [198, 3, 1, "", "getLibLumpedPath"], [198, 3, 1, "", "getReadFunc"], [198, 3, 1, "", "getWriteFunc"], [198, 3, 1, "", "test_canRemoveIsotopes"], [198, 3, 1, "", "test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin": [[198, 5, 1, "", "testFileName"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory": [[198, 3, 1, "", "assert_contains_only"], [198, 3, 1, "", "test_getISOTXSFilesWithLibrarySuffix"], [198, 3, 1, "", "test_getISOTXSFilesWithoutLibrarySuffix"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary": [[198, 3, 1, "", "test_canPickleAndUnpickleGAMISO"], [198, 3, 1, "", "test_canPickleAndUnpickleISOTXS"], [198, 3, 1, "", "test_canPickleAndUnpicklePMATRX"], [198, 3, 1, "", "test_canWriteGamisoFromCombinedXSLibrary"], [198, 3, 1, "", "test_canWriteIsotxsFromCombinedXSLibrary"], [198, 3, 1, "", "test_canWritePmatrxFromCombinedXSLibrary"], [198, 3, 1, "", "test_compareDifferentComponentsOfAnXSLibrary"], [198, 3, 1, "", "test_compareWorks"], [198, 3, 1, "", "test_gamisoLibraryAttributes"], [198, 3, 1, "", "test_isotxsLibraryAttributes"], [198, 3, 1, "", "test_mergeFailsWithNonIsotxsFiles"], [198, 3, 1, "", "test_mergeXSLibrariesWithDifferentDataWorks"], [198, 3, 1, "", "test_pmatrxLibraryAttributes"]], "armi.nuclearDataIO.tests.test_xsNuclides": [[199, 2, 1, "", "NuclideTests"]], "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests": [[199, 3, 1, "", "test_getMicroXS"], [199, 3, 1, "", "test_getXS"], [199, 3, 1, "", "test_nuclide_2dXsArrangementIsCorrect"], [199, 3, 1, "", "test_nuclide_createFromLabelFailsOnBadName"], [199, 3, 1, "", "test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"], [199, 3, 1, "", "test_nuclide_isoaaDetails"], [199, 3, 1, "", "test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"], [199, 3, 1, "", "test_nuclide_newLabelsDontCauseWarnings"], [199, 3, 1, "", "test_nuclide_nuclideBaseMethodsShouldNotFail"], [199, 3, 1, "", "test_nuclide_oldLabelsCauseWarnings"], [199, 3, 1, "", "test_nuclide_scatterXsArrangementIsCorrect"]], "armi.nuclearDataIO.xsCollections": [[200, 2, 1, "", "MacroscopicCrossSectionCreator"], [200, 2, 1, "", "XSCollection"], [200, 1, 1, "", "computeBlockAverageChi"], [200, 1, 1, "", "computeCaptureEnergyGenerationConstants"], [200, 1, 1, "", "computeFissionEnergyGenerationConstants"], [200, 1, 1, "", "computeGammaEnergyDepositionConstants"], [200, 1, 1, "", "computeMacroscopicGroupConstants"], [200, 1, 1, "", "computeNeutronEnergyDepositionConstants"]], "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator": [[200, 3, 1, "", "createMacrosFromMicros"], [200, 3, 1, "", "createMacrosOnBlocklist"]], "armi.nuclearDataIO.xsCollections.XSCollection": [[200, 3, 1, "", "clear"], [200, 3, 1, "", "collapseCrossSection"], [200, 3, 1, "", "compare"], [200, 3, 1, "", "get"], [200, 3, 1, "", "getAbsorptionXS"], [200, 3, 1, "", "getDefaultXs"], [200, 3, 1, "", "getTotalScatterMatrix"], [200, 3, 1, "", "merge"]], "armi.nuclearDataIO.xsLibraries": [[201, 2, 1, "", "CompxsLibrary"], [201, 2, 1, "", "IsotxsLibrary"], [201, 1, 1, "", "compare"], [201, 1, 1, "", "compareLibraryNeutronEnergies"], [201, 1, 1, "", "compareXSLibraryAttribute"], [201, 1, 1, "", "getISOTXSLibrariesToMerge"], [201, 1, 1, "", "getSuffixFromNuclideLabel"], [201, 1, 1, "", "mergeXSLibrariesInWorkingDirectory"]], "armi.nuclearDataIO.xsLibraries.CompxsLibrary": [[201, 3, 1, "", "merge"], [201, 5, 1, "", "regionLabels"], [201, 5, 1, "", "regions"]], "armi.nuclearDataIO.xsLibraries.IsotxsLibrary": [[201, 5, 1, "", "gammaDoseConversionFactors"], [201, 5, 1, "", "gammaEnergyUpperBounds"], [201, 3, 1, "", "get"], [201, 3, 1, "", "getNuclide"], [201, 3, 1, "", "getNuclides"], [201, 3, 1, "", "getScatterWeights"], [201, 3, 1, "", "merge"], [201, 5, 1, "", "neutronDoseConversionFactors"], [201, 5, 1, "", "nuclideLabels"], [201, 5, 1, "", "nuclides"], [201, 5, 1, "", "numGroups"], [201, 5, 1, "", "numGroupsGamma"], [201, 3, 1, "", "purgeFissionProducts"], [201, 3, 1, "", "resetScatterWeights"], [201, 5, 1, "", "xsIDs"]], "armi.nuclearDataIO.xsNuclides": [[202, 2, 1, "", "XSNuclide"], [202, 1, 1, "", "plotCompareScatterMatrix"], [202, 1, 1, "", "plotScatterMatrix"]], "armi.nuclearDataIO.xsNuclides.XSNuclide": [[202, 3, 1, "", "buildNormalizedScatterColumns"], [202, 5, 1, "", "decays"], [202, 3, 1, "", "getMicroXS"], [202, 3, 1, "", "getXS"], [202, 3, 1, "", "merge"], [202, 5, 1, "", "trans"], [202, 3, 1, "", "updateBaseNuclide"]], "armi.operators": [[203, 1, 1, "", "factory"], [203, 1, 1, "", "getOperatorClassFromSettings"], [204, 0, 0, "-", "operator"], [205, 0, 0, "-", "operatorMPI"], [206, 0, 0, "-", "runTypes"], [207, 0, 0, "-", "settingsValidation"], [208, 0, 0, "-", "snapshots"], [209, 0, 0, "-", "tests"]], "armi.operators.operator": [[204, 2, 1, "", "Operator"]], "armi.operators.operator.Operator": [[204, 3, 1, "", "addInterface"], [204, 5, 1, "", "atEOL"], [204, 5, 1, "", "availabilityFactors"], [204, 5, 1, "", "burnSteps"], [204, 3, 1, "", "couplingIsActive"], [204, 3, 1, "", "createInterfaces"], [204, 5, 1, "", "cycleLengths"], [204, 5, 1, "", "cycleNames"], [204, 3, 1, "", "detach"], [204, 3, 1, "", "getActiveInterfaces"], [204, 3, 1, "", "getInterface"], [204, 3, 1, "", "getInterfaces"], [204, 3, 1, "", "initializeInterfaces"], [204, 4, 1, "", "inspector"], [204, 3, 1, "", "interactAllBOC"], [204, 3, 1, "", "interactAllBOL"], [204, 3, 1, "", "interactAllCoupled"], [204, 3, 1, "", "interactAllEOC"], [204, 3, 1, "", "interactAllEOL"], [204, 3, 1, "", "interactAllError"], [204, 3, 1, "", "interactAllEveryNode"], [204, 3, 1, "", "interactAllInit"], [204, 3, 1, "", "interfaceIsActive"], [204, 3, 1, "", "loadState"], [204, 5, 1, "", "maxBurnSteps"], [204, 3, 1, "", "operate"], [204, 5, 1, "", "powerFractions"], [204, 3, 1, "", "printInterfaceSummary"], [204, 3, 1, "", "reattach"], [204, 3, 1, "", "removeAllInterfaces"], [204, 3, 1, "", "removeInterface"], [204, 3, 1, "", "setStateToDefault"], [204, 3, 1, "", "snapshotRequest"], [204, 5, 1, "", "stepLengths"]], "armi.operators.operatorMPI": [[205, 2, 1, "", "OperatorMPI"]], "armi.operators.operatorMPI.OperatorMPI": [[205, 3, 1, "", "collapseAllStderrs"], [205, 3, 1, "", "operate"], [205, 3, 1, "", "workerOperate"], [205, 3, 1, "", "workerQuit"]], "armi.operators.runTypes": [[206, 2, 1, "", "RunTypes"]], "armi.operators.runTypes.RunTypes": [[206, 4, 1, "", "EQUILIBRIUM"], [206, 4, 1, "", "SNAPSHOTS"], [206, 4, 1, "", "STANDARD"]], "armi.operators.snapshots": [[208, 2, 1, "", "OperatorSnapshots"]], "armi.operators.snapshots.OperatorSnapshots": [[208, 5, 1, "", "atEOL"], [208, 3, 1, "", "createInterfaces"], [208, 3, 1, "", "setStateToDefault"]], "armi.operators.tests": [[210, 0, 0, "-", "test_operatorSnapshots"], [211, 0, 0, "-", "test_operators"]], "armi.operators.tests.test_operatorSnapshots": [[210, 2, 1, "", "TestOperatorSnapshots"], [210, 2, 1, "", "TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots": [[210, 3, 1, "", "test_atEOL"], [210, 3, 1, "", "test_createInterfaces"], [210, 3, 1, "", "test_createInterfacesDisabled"], [210, 3, 1, "", "test_mainOperate"], [210, 3, 1, "", "test_setStateToDefault"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings": [[210, 3, 1, "", "test_getOperatorClassFromSettings"]], "armi.operators.tests.test_operators": [[211, 2, 1, "", "CyclesSettingsTests"], [211, 2, 1, "", "InterfaceA"], [211, 2, 1, "", "InterfaceB"], [211, 2, 1, "", "InterfaceC"], [211, 2, 1, "", "OperatorTests"], [211, 2, 1, "", "TestCreateOperator"], [211, 2, 1, "", "TestInterfaceAndEventHeaders"], [211, 2, 1, "", "TestTightCoupling"]], "armi.operators.tests.test_operators.CyclesSettingsTests": [[211, 4, 1, "", "availabilityFactorsSolution"], [211, 4, 1, "", "burnStepsSolution"], [211, 4, 1, "", "cycleLengthsSolution"], [211, 4, 1, "", "cycleNamesSolution"], [211, 4, 1, "", "detailedCyclesSettings"], [211, 4, 1, "", "maxBurnStepsSolution"], [211, 4, 1, "", "powerFractionsSolution"], [211, 4, 1, "", "stepLengthsSolution"], [211, 3, 1, "", "test_getAvailabilityFactors"], [211, 3, 1, "", "test_getBurnSteps"], [211, 3, 1, "", "test_getCycleLengths"], [211, 3, 1, "", "test_getCycleNames"], [211, 3, 1, "", "test_getMaxBurnSteps"], [211, 3, 1, "", "test_getPowerFractions"], [211, 3, 1, "", "test_getStepLengths"]], "armi.operators.tests.test_operators.InterfaceA": [[211, 4, 1, "", "function"], [211, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceB": [[211, 4, 1, "", "function"], [211, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceC": [[211, 4, 1, "", "function"], [211, 4, 1, "", "name"]], "armi.operators.tests.test_operators.OperatorTests": [[211, 3, 1, "", "test_addInterfaceSubclassCollision"], [211, 3, 1, "", "test_getActiveInterfaces"], [211, 3, 1, "", "test_interfaceIsActive"], [211, 3, 1, "", "test_loadStateError"], [211, 3, 1, "", "test_operatorData"], [211, 3, 1, "", "test_orderedInterfaces"], [211, 3, 1, "", "test_setStateToDefault"], [211, 3, 1, "", "test_snapshotRequest"]], "armi.operators.tests.test_operators.TestCreateOperator": [[211, 3, 1, "", "test_createOperator"]], "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders": [[211, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Coupled"], [211, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Cycle"], [211, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Empty"], [211, 3, 1, "", "test_expandCycleAndTimeNodeArgs_EveryNode"]], "armi.operators.tests.test_operators.TestTightCoupling": [[211, 3, 1, "", "dbWriteForCoupling"], [211, 3, 1, "", "test_computeTightCouplingConvergence"], [211, 3, 1, "", "test_couplingIsActive"], [211, 3, 1, "", "test_getStepLengths"], [211, 3, 1, "", "test_performTightCoupling_Inactive"], [211, 3, 1, "", "test_performTightCoupling_NoWriteDB"], [211, 3, 1, "", "test_performTightCoupling_WriteDB"], [211, 3, 1, "", "test_performTightCoupling_notConverged"], [211, 3, 1, "", "test_performTightCoupling_skip"]], "armi.physics": [[213, 0, 0, "-", "constants"], [214, 0, 0, "-", "executers"], [215, 0, 0, "-", "fuelCycle"], [228, 0, 0, "-", "fuelPerformance"], [238, 0, 0, "-", "neutronics"], [272, 0, 0, "-", "safety"], [273, 0, 0, "-", "tests"], [275, 0, 0, "-", "thermalHydraulics"]], "armi.physics.constants": [[213, 6, 1, "", "DPA_CROSS_SECTIONS"]], "armi.physics.executers": [[214, 2, 1, "", "DefaultExecuter"], [214, 2, 1, "", "Executer"], [214, 2, 1, "", "ExecutionOptions"]], "armi.physics.executers.DefaultExecuter": [[214, 3, 1, "", "run"], [214, 3, 1, "", "writeInput"]], "armi.physics.executers.Executer": [[214, 3, 1, "", "run"]], "armi.physics.executers.ExecutionOptions": [[214, 3, 1, "", "describe"], [214, 3, 1, "", "fromReactor"], [214, 3, 1, "", "fromUserSettings"], [214, 3, 1, "", "resolveDerivedOptions"], [214, 3, 1, "", "setRunDirFromCaseTitle"]], "armi.physics.fuelCycle": [[215, 2, 1, "", "FuelHandlerPlugin"], [216, 0, 0, "-", "assemblyRotationAlgorithms"], [217, 0, 0, "-", "fuelHandlerFactory"], [218, 0, 0, "-", "fuelHandlerInterface"], [219, 0, 0, "-", "fuelHandlers"], [220, 0, 0, "-", "hexAssemblyFuelMgmtUtils"], [221, 0, 0, "-", "settings"], [222, 0, 0, "-", "tests"], [227, 0, 0, "-", "utils"]], "armi.physics.fuelCycle.FuelHandlerPlugin": [[215, 3, 1, "", "defineSettings"], [215, 3, 1, "", "defineSettingsValidators"], [215, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms": [[216, 1, 1, "", "buReducingAssemblyRotation"], [216, 1, 1, "", "simpleAssemblyRotation"]], "armi.physics.fuelCycle.fuelHandlerFactory": [[217, 1, 1, "", "fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface": [[218, 2, 1, "", "FuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface": [[218, 3, 1, "", "interactBOC"], [218, 3, 1, "", "interactEOC"], [218, 3, 1, "", "interactEOL"], [218, 3, 1, "", "makeShuffleReport"], [218, 3, 1, "", "manageFuel"], [218, 4, 1, "", "name"], [218, 3, 1, "", "specifyInputs"], [218, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.fuelHandlers": [[219, 2, 1, "", "FuelHandler"]], "armi.physics.fuelCycle.fuelHandlers.FuelHandler": [[219, 3, 1, "", "chooseSwaps"], [219, 5, 1, "", "cs"], [219, 5, 1, "", "cycle"], [219, 3, 1, "", "dischargeSwap"], [219, 3, 1, "", "doRepeatShuffle"], [219, 3, 1, "", "findAssembly"], [219, 3, 1, "", "getFactorList"], [219, 3, 1, "", "isAssemblyInAZone"], [219, 3, 1, "", "makeShuffleArrows"], [219, 3, 1, "", "outage"], [219, 3, 1, "", "prepCore"], [219, 3, 1, "", "prepShuffleMap"], [219, 3, 1, "", "processMoveList"], [219, 5, 1, "", "r"], [219, 3, 1, "", "readMoves"], [219, 3, 1, "", "repeatShufflePattern"], [219, 3, 1, "", "swapAssemblies"], [219, 3, 1, "", "swapCascade"], [219, 3, 1, "", "trackChain"], [219, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils": [[220, 1, 1, "", "buildConvergentRingSchedule"], [220, 1, 1, "", "buildRingSchedule"], [220, 1, 1, "", "getOptimalAssemblyOrientation"]], "armi.physics.fuelCycle.settings": [[221, 1, 1, "", "getFuelCycleSettingValidators"], [221, 1, 1, "", "getFuelCycleSettings"]], "armi.physics.fuelCycle.tests": [[223, 0, 0, "-", "test_assemblyRotationAlgorithms"], [224, 0, 0, "-", "test_fuelHandlers"], [225, 0, 0, "-", "test_hexAssemblyFuelMgmtUtils"], [226, 0, 0, "-", "test_utils"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms": [[223, 2, 1, "", "MockFuelHandler"], [223, 2, 1, "", "ShuffleAndRotateTestHelper"], [223, 2, 1, "", "SimpleRotationTests"], [223, 2, 1, "", "TestFuelHandlerMgmtTools"], [223, 2, 1, "", "TestOptimalAssemblyRotation"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.MockFuelHandler": [[223, 3, 1, "", "chooseSwaps"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper": [[223, 4, 1, "", "N_PINS"], [223, 3, 1, "", "burnupWithMaxValue"], [223, 3, 1, "", "compareMockedToExpectedRotation"], [223, 3, 1, "", "ensureBlockHasSpatialGrid"], [223, 3, 1, "", "powerWithMinValue"], [223, 3, 1, "", "setAssemblyPinBurnups"], [223, 3, 1, "", "setAssemblyPinPowers"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.SimpleRotationTests": [[223, 3, 1, "", "test_simpleAssemblyRotation"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools": [[223, 3, 1, "", "test_buRotationWithFreshFeed"], [223, 3, 1, "", "test_buRotationWithStationaryRotation"], [223, 3, 1, "", "test_rotateInShuffleQueue"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation": [[223, 3, 1, "", "test_flatPowerNoRotation"], [223, 3, 1, "", "test_maxBurnupAtCenterNoRotation"], [223, 3, 1, "", "test_mismatchPinPowersAndLocations"], [223, 3, 1, "", "test_noBlocksWithBurnup"], [223, 3, 1, "", "test_oppositeRotation"]], "armi.physics.fuelCycle.tests.test_fuelHandlers": [[224, 2, 1, "", "FuelHandlerTestHelper"], [224, 2, 1, "", "MockLatticePhysicsInterface"], [224, 2, 1, "", "MockXSGM"], [224, 2, 1, "", "TestFuelHandler"], [224, 2, 1, "", "TestFuelPlugin"], [224, 1, 1, "", "addSomeDetailAssemblies"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface": [[224, 3, 1, "", "interactBOC"], [224, 4, 1, "", "name"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM": [[224, 3, 1, "", "interactBOC"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler": [[224, 3, 1, "", "runShuffling"], [224, 3, 1, "", "test_dischargeSwap"], [224, 3, 1, "", "test_dischargeSwapIncompatibleStationaryBlocks"], [224, 3, 1, "", "test_findByCoords"], [224, 3, 1, "", "test_findHighBu"], [224, 3, 1, "", "test_findInSFP"], [224, 3, 1, "", "test_findMany"], [224, 3, 1, "", "test_findWithMinMax"], [224, 3, 1, "", "test_getAssembliesInRings"], [224, 3, 1, "", "test_getFactorList"], [224, 3, 1, "", "test_getParamMax"], [224, 3, 1, "", "test_interactBOC"], [224, 3, 1, "", "test_isAssemblyInAZone"], [224, 3, 1, "", "test_linPowByPin"], [224, 3, 1, "", "test_linPowByPinGamma"], [224, 3, 1, "", "test_linPowByPinNeutron"], [224, 3, 1, "", "test_outage"], [224, 3, 1, "", "test_outageEdgeCase"], [224, 3, 1, "", "test_processMoveList"], [224, 3, 1, "", "test_readMoves"], [224, 3, 1, "", "test_repeatShuffles"], [224, 3, 1, "", "test_transferDifferentNumberStationaryBlocks"], [224, 3, 1, "", "test_transferIncompatibleHeightStationaryBlocks"], [224, 3, 1, "", "test_transferStationaryBlocks"], [224, 3, 1, "", "test_transferUnalignedLocationStationaryBlocks"], [224, 3, 1, "", "test_width"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin": [[224, 3, 1, "", "test_settingsAreDiscovered"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils": [[225, 2, 1, "", "TestHexAssemMgmtTools"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools": [[225, 3, 1, "", "test_buildConvergentRingSchedule"], [225, 3, 1, "", "test_buildRingSchedule"]], "armi.physics.fuelCycle.tests.test_utils": [[226, 2, 1, "", "FuelCycleUtilsTests"]], "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests": [[226, 4, 1, "", "N_PINS"], [226, 3, 1, "", "test_assemblyHasPinBurnups"], [226, 3, 1, "", "test_assemblyHasPinPower"], [226, 3, 1, "", "test_maxBurnupBlock"], [226, 3, 1, "", "test_maxBurnupBlockNoBlocks"], [226, 3, 1, "", "test_maxBurnupBlockNoBurnup"], [226, 3, 1, "", "test_maxBurnupLocationFromComponents"], [226, 3, 1, "", "test_maxBurnupLocatorMismatchedData"], [226, 3, 1, "", "test_maxBurnupLocatorWithNoBurnup"], [226, 3, 1, "", "test_singleLocatorWithBurnup"]], "armi.physics.fuelCycle.utils": [[227, 1, 1, "", "assemblyHasFuelPinBurnup"], [227, 1, 1, "", "assemblyHasFuelPinPowers"], [227, 1, 1, "", "maxBurnupBlock"], [227, 1, 1, "", "maxBurnupLocator"]], "armi.physics.fuelPerformance": [[229, 0, 0, "-", "executers"], [230, 0, 0, "-", "parameters"], [231, 0, 0, "-", "plugin"], [232, 0, 0, "-", "settings"], [233, 0, 0, "-", "tests"], [237, 0, 0, "-", "utils"]], "armi.physics.fuelPerformance.executers": [[229, 2, 1, "", "FuelPerformanceExecuter"], [229, 2, 1, "", "FuelPerformanceOptions"]], "armi.physics.fuelPerformance.executers.FuelPerformanceOptions": [[229, 3, 1, "", "fromReactor"], [229, 3, 1, "", "fromUserSettings"]], "armi.physics.fuelPerformance.parameters": [[230, 1, 1, "", "getFuelPerformanceParameterDefinitions"]], "armi.physics.fuelPerformance.plugin": [[231, 2, 1, "", "FuelPerformancePlugin"]], "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin": [[231, 3, 1, "", "defineParameters"], [231, 3, 1, "", "defineSettings"], [231, 3, 1, "", "defineSettingsValidators"], [231, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelPerformance.settings": [[232, 1, 1, "", "defineSettings"], [232, 1, 1, "", "defineValidators"]], "armi.physics.fuelPerformance.tests": [[234, 0, 0, "-", "test_executers"], [235, 0, 0, "-", "test_fuelPerformancePlugin"], [236, 0, 0, "-", "test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_executers": [[234, 2, 1, "", "TestFuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions": [[234, 3, 1, "", "test_fuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin": [[235, 2, 1, "", "TestFuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin": [[235, 4, 1, "", "plugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils": [[236, 2, 1, "", "TestFuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils": [[236, 3, 1, "", "test_applyFuelDisplacement"], [236, 3, 1, "", "test_gasConductivityCorrection_morph0"], [236, 3, 1, "", "test_gasConductivityCorrection_morph1"], [236, 3, 1, "", "test_gasConductivityCorrection_morph2"], [236, 3, 1, "", "test_gasConductivityCorrection_morph3"], [236, 3, 1, "", "test_gasConductivityCorrection_morph4"]], "armi.physics.fuelPerformance.utils": [[237, 1, 1, "", "applyFuelDisplacement"], [237, 1, 1, "", "gasConductivityCorrection"]], "armi.physics.neutronics": [[238, 2, 1, "", "LatticePhysicsFrequency"], [238, 2, 1, "", "NeutronicsPlugin"], [238, 1, 1, "", "adjointCalculationRequested"], [238, 1, 1, "", "applyEffectiveDelayedNeutronFractionToCore"], [239, 0, 0, "-", "const"], [240, 0, 0, "-", "crossSectionGroupManager"], [241, 0, 0, "-", "crossSectionSettings"], [242, 0, 0, "-", "diffIsotxs"], [243, 0, 0, "-", "energyGroups"], [244, 0, 0, "-", "fissionProductModel"], [238, 1, 1, "", "gammaTransportIsRequested"], [238, 1, 1, "", "gammaXsAreRequested"], [251, 0, 0, "-", "globalFlux"], [255, 0, 0, "-", "latticePhysics"], [261, 0, 0, "-", "macroXSGenerationInterface"], [262, 0, 0, "-", "parameters"], [238, 1, 1, "", "realCalculationRequested"], [263, 0, 0, "-", "reports"], [264, 0, 0, "-", "settings"], [265, 0, 0, "-", "tests"]], "armi.physics.neutronics.LatticePhysicsFrequency": [[238, 4, 1, "", "BOC"], [238, 4, 1, "", "BOL"], [238, 4, 1, "", "all"], [238, 4, 1, "", "everyNode"], [238, 4, 1, "", "firstCoupledIteration"], [238, 4, 1, "", "never"]], "armi.physics.neutronics.NeutronicsPlugin": [[238, 3, 1, "", "defineEntryPoints"], [238, 3, 1, "", "defineParameterRenames"], [238, 3, 1, "", "defineParameters"], [238, 3, 1, "", "defineSettings"], [238, 3, 1, "", "defineSettingsValidators"], [238, 3, 1, "", "exposeInterfaces"], [238, 3, 1, "", "getReportContents"], [238, 3, 1, "", "onProcessCoreLoading"]], "armi.physics.neutronics.crossSectionGroupManager": [[240, 2, 1, "", "AverageBlockCollection"], [240, 2, 1, "", "BlockCollection"], [240, 2, 1, "", "CrossSectionGroupManager"], [240, 2, 1, "", "CylindricalComponentsAverageBlockCollection"], [240, 2, 1, "", "CylindricalComponentsDuctHetAverageBlockCollection"], [240, 2, 1, "", "FluxWeightedAverageBlockCollection"], [240, 2, 1, "", "MedianBlockCollection"], [240, 2, 1, "", "SlabComponentsAverageBlockCollection"], [240, 1, 1, "", "blockCollectionFactory"], [240, 1, 1, "", "describeInterfaces"], [240, 1, 1, "", "getBlockNuclideTemperature"], [240, 1, 1, "", "getBlockNuclideTemperatureAvgTerms"], [240, 1, 1, "", "getXSTypeLabelFromNumber"], [240, 1, 1, "", "getXSTypeNumberFromLabel"]], "armi.physics.neutronics.crossSectionGroupManager.BlockCollection": [[240, 3, 1, "", "calcAvgNuclideTemperatures"], [240, 3, 1, "", "createRepresentativeBlock"], [240, 3, 1, "", "getCandidateBlocks"], [240, 3, 1, "", "getWeight"]], "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager": [[240, 3, 1, "", "clearRepresentativeBlocks"], [240, 3, 1, "", "createRepresentativeBlocks"], [240, 3, 1, "", "createRepresentativeBlocksUsingExistingBlocks"], [240, 3, 1, "", "disableEnvGroupUpdates"], [240, 3, 1, "", "enableEnvGroupUpdates"], [240, 3, 1, "", "fluxSolutionIsPregenerated"], [240, 3, 1, "", "getNextAvailableXsTypes"], [240, 3, 1, "", "getNucTemperature"], [240, 3, 1, "", "interactBOC"], [240, 3, 1, "", "interactBOL"], [240, 3, 1, "", "interactCoupled"], [240, 3, 1, "", "interactEOC"], [240, 3, 1, "", "interactEveryNode"], [240, 3, 1, "", "makeCrossSectionGroups"], [240, 4, 1, "", "name"], [240, 3, 1, "", "updateNuclideTemperatures"], [240, 3, 1, "", "xsTypeIsPregenerated"]], "armi.physics.neutronics.crossSectionSettings": [[241, 2, 1, "", "XSGeometryTypes"], [241, 2, 1, "", "XSModelingOptions"], [241, 2, 1, "", "XSSettingDef"], [241, 2, 1, "", "XSSettings"], [241, 1, 1, "", "serializeXSSettings"], [241, 1, 1, "", "xsSettingsValidator"]], "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes": [[241, 4, 1, "", "ONE_DIMENSIONAL_CYLINDER"], [241, 4, 1, "", "ONE_DIMENSIONAL_SLAB"], [241, 4, 1, "", "TWO_DIMENSIONAL_HEX"], [241, 4, 1, "", "ZERO_DIMENSIONAL"], [241, 3, 1, "", "getStr"]], "armi.physics.neutronics.crossSectionSettings.XSModelingOptions": [[241, 5, 1, "", "envGroup"], [241, 5, 1, "", "fluxIsPregenerated"], [241, 3, 1, "", "serialize"], [241, 3, 1, "", "setDefaults"], [241, 3, 1, "", "validate"], [241, 5, 1, "", "xsIsPregenerated"], [241, 5, 1, "", "xsType"]], "armi.physics.neutronics.crossSectionSettings.XSSettingDef": [[241, 3, 1, "", "dump"]], "armi.physics.neutronics.crossSectionSettings.XSSettings": [[241, 3, 1, "", "setDefaults"]], "armi.physics.neutronics.diffIsotxs": [[242, 2, 1, "", "CompareIsotxsLibraries"]], "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries": [[242, 3, 1, "", "addOptions"], [242, 3, 1, "", "invoke"], [242, 4, 1, "", "name"], [242, 4, 1, "", "settingsArgument"]], "armi.physics.neutronics.energyGroups": [[243, 6, 1, "", "GROUP_STRUCTURE"], [243, 1, 1, "", "getFastFluxGroupCutoff"], [243, 1, 1, "", "getGroupStructure"], [243, 1, 1, "", "getGroupStructureType"]], "armi.physics.neutronics.fissionProductModel": [[245, 0, 0, "-", "fissionProductModel"], [246, 0, 0, "-", "fissionProductModelSettings"], [247, 0, 0, "-", "lumpedFissionProduct"], [248, 0, 0, "-", "tests"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel": [[245, 2, 1, "", "FissionProductModel"], [245, 1, 1, "", "describeInterfaces"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel": [[245, 3, 1, "", "getAllFissionProductNames"], [245, 3, 1, "", "getGlobalLumpedFissionProducts"], [245, 3, 1, "", "interactBOC"], [245, 3, 1, "", "interactBOL"], [245, 3, 1, "", "interactDistributeState"], [245, 4, 1, "", "name"], [245, 3, 1, "", "removeFissionGasesFromBlocks"], [245, 3, 1, "", "setAllBlockLFPs"], [245, 3, 1, "", "setAllComponentFissionProducts"], [245, 3, 1, "", "setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings": [[246, 1, 1, "", "defineSettings"], [246, 1, 1, "", "getFissionProductModelSettingValidators"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct": [[247, 2, 1, "", "FissionProductDefinitionFile"], [247, 2, 1, "", "LumpedFissionProduct"], [247, 2, 1, "", "LumpedFissionProductCollection"], [247, 1, 1, "", "isGas"], [247, 1, 1, "", "lumpedFissionProductFactory"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile": [[247, 3, 1, "", "createLFPsFromFile"], [247, 3, 1, "", "createSingleLFPFromFile"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct": [[247, 3, 1, "", "duplicate"], [247, 3, 1, "", "getGaseousYieldFraction"], [247, 3, 1, "", "getMassFrac"], [247, 3, 1, "", "getMassFracDenom"], [247, 3, 1, "", "getMassFracs"], [247, 3, 1, "", "getTotalYield"], [247, 3, 1, "", "items"], [247, 3, 1, "", "keys"], [247, 3, 1, "", "values"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection": [[247, 3, 1, "", "duplicate"], [247, 3, 1, "", "getAllFissionProductNames"], [247, 3, 1, "", "getAllFissionProductNuclideBases"], [247, 3, 1, "", "getLumpedFissionProductNames"], [247, 3, 1, "", "getMassFrac"], [247, 3, 1, "", "getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests": [[249, 0, 0, "-", "test_fissionProductModel"], [250, 0, 0, "-", "test_lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel": [[249, 2, 1, "", "TestFissionProductModelExplicitMC2Library"], [249, 2, 1, "", "TestFissionProductModelExplicitMC2LibrarySlower"], [249, 2, 1, "", "TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library": [[249, 3, 1, "", "test_nuclideFlags"], [249, 3, 1, "", "test_nuclidesInModelFuel"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower": [[249, 3, 1, "", "test_nuclidesInModelAllDepletableBlocks"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts": [[249, 3, 1, "", "test_fpApplication"], [249, 3, 1, "", "test_getAllFissionProductNames"], [249, 3, 1, "", "test_loadGlobalLFPsFromFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct": [[250, 2, 1, "", "TestFissionProductDefinitionFile"], [250, 2, 1, "", "TestLumpedFissionProduct"], [250, 2, 1, "", "TestLumpedFissionProductCollection"], [250, 2, 1, "", "TestLumpedFissionProductsExplicit"], [250, 2, 1, "", "TestLumpedFissionProductsFromReferenceFile"], [250, 2, 1, "", "TestMo99LFP"], [250, 1, 1, "", "getDummyLFPFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile": [[250, 3, 1, "", "test_createLFPs"], [250, 3, 1, "", "test_createReferenceLFPs"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct": [[250, 3, 1, "", "test_gaseousYieldFraction"], [250, 3, 1, "", "test_getYield"], [250, 3, 1, "", "test_isGas"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection": [[250, 3, 1, "", "test_duplicate"], [250, 3, 1, "", "test_getAllFissionProductNames"], [250, 3, 1, "", "test_getAllFissionProductNuclideBases"], [250, 3, 1, "", "test_getMassFrac"], [250, 3, 1, "", "test_getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit": [[250, 3, 1, "", "test_explicitFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile": [[250, 3, 1, "", "test_fissionProductYields"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP": [[250, 3, 1, "", "test_getAllFissionProductNames"]], "armi.physics.neutronics.globalFlux": [[252, 0, 0, "-", "globalFluxInterface"], [253, 0, 0, "-", "tests"]], "armi.physics.neutronics.globalFlux.globalFluxInterface": [[252, 2, 1, "", "GlobalFluxExecuter"], [252, 2, 1, "", "GlobalFluxInterface"], [252, 2, 1, "", "GlobalFluxInterfaceUsingExecuters"], [252, 2, 1, "", "GlobalFluxOptions"], [252, 2, 1, "", "GlobalFluxResultMapper"], [252, 1, 1, "", "calcReactionRates"], [252, 1, 1, "", "computeDpaRate"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter": [[252, 3, 1, "", "edgeAssembliesAreNeeded"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface": [[252, 3, 1, "", "calculateKeff"], [252, 3, 1, "", "checkEnergyBalance"], [252, 4, 1, "", "function"], [252, 3, 1, "", "getHistoryParams"], [252, 3, 1, "", "getIOFileNames"], [252, 3, 1, "", "interactBOC"], [252, 3, 1, "", "interactCoupled"], [252, 3, 1, "", "interactEveryNode"], [252, 4, 1, "", "name"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters": [[252, 3, 1, "", "calculateKeff"], [252, 3, 1, "", "getExecuter"], [252, 3, 1, "", "getExecuterCls"], [252, 3, 1, "", "getExecuterOptions"], [252, 3, 1, "", "getLabel"], [252, 3, 1, "", "getOptionsCls"], [252, 3, 1, "", "getTightCouplingValue"], [252, 3, 1, "", "interactCoupled"], [252, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions": [[252, 3, 1, "", "fromReactor"], [252, 3, 1, "", "fromUserSettings"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper": [[252, 3, 1, "", "clearFlux"], [252, 3, 1, "", "getBurnupPeakingFactor"], [252, 3, 1, "", "getDpaXs"], [252, 3, 1, "", "getKeff"], [252, 3, 1, "", "updateDpaRate"], [252, 3, 1, "", "updateMaxDpaParams"]], "armi.physics.neutronics.globalFlux.tests": [[254, 0, 0, "-", "test_globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface": [[254, 2, 1, "", "MockCore"], [254, 2, 1, "", "MockCoreParams"], [254, 2, 1, "", "MockGlobalFluxExecuter"], [254, 2, 1, "", "MockGlobalFluxInterface"], [254, 2, 1, "", "MockGlobalFluxWithExecuters"], [254, 2, 1, "", "MockGlobalFluxWithExecutersNonUniform"], [254, 2, 1, "", "MockReactor"], [254, 2, 1, "", "MockReactorParams"], [254, 2, 1, "", "TestGlobalFluxInterface"], [254, 2, 1, "", "TestGlobalFluxInterfaceWithExecuters"], [254, 2, 1, "", "TestGlobalFluxInterfaceWithExecutersNonUniform"], [254, 2, 1, "", "TestGlobalFluxOptions"], [254, 2, 1, "", "TestGlobalFluxResultMapper"], [254, 2, 1, "", "TestGlobalFluxUtils"], [254, 1, 1, "", "applyDummyFlux"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface": [[254, 3, 1, "", "interactBOC"], [254, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters": [[254, 3, 1, "", "getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform": [[254, 3, 1, "", "getExecuterOptions"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface": [[254, 3, 1, "", "test_checkEnergyBalance"], [254, 3, 1, "", "test_computeDpaRate"], [254, 3, 1, "", "test_getHistoryParams"], [254, 3, 1, "", "test_getIOFileNames"], [254, 3, 1, "", "test_interaction"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters": [[254, 3, 1, "", "test_calculateKeff"], [254, 3, 1, "", "test_executerInteraction"], [254, 3, 1, "", "test_getExecuterCls"], [254, 3, 1, "", "test_getTightCouplingValue"], [254, 3, 1, "", "test_setTightCouplingDefaults"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform": [[254, 3, 1, "", "test_calculateKeff"], [254, 3, 1, "", "test_executerInteractionNonUniformAssems"], [254, 3, 1, "", "test_getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions": [[254, 3, 1, "", "test_readFromReactors"], [254, 3, 1, "", "test_readFromSettings"], [254, 3, 1, "", "test_savePhysicsFiles"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper": [[254, 3, 1, "", "test_getBurnupPeakingFactor"], [254, 3, 1, "", "test_getBurnupPeakingFactorZero"], [254, 3, 1, "", "test_getDpaXs"], [254, 3, 1, "", "test_mapper"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils": [[254, 3, 1, "", "test_calcReactionRates"]], "armi.physics.neutronics.latticePhysics": [[256, 0, 0, "-", "latticePhysicsInterface"], [257, 0, 0, "-", "latticePhysicsWriter"], [258, 0, 0, "-", "tests"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface": [[256, 2, 1, "", "LatticePhysicsInterface"], [256, 1, 1, "", "setBlockNeutronVelocities"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface": [[256, 3, 1, "", "clearXS"], [256, 3, 1, "", "computeCrossSections"], [256, 4, 1, "", "function"], [256, 3, 1, "", "generateLatticePhysicsInputs"], [256, 3, 1, "", "getReader"], [256, 3, 1, "", "getRepresentativeBlocks"], [256, 3, 1, "", "getWriters"], [256, 3, 1, "", "interactBOC"], [256, 3, 1, "", "interactBOL"], [256, 3, 1, "", "interactCoupled"], [256, 3, 1, "", "interactEOC"], [256, 3, 1, "", "interactEveryNode"], [256, 3, 1, "", "makeCycleXSFilesAsBaseFiles"], [256, 3, 1, "", "readExistingXSLibraries"], [256, 3, 1, "", "updatePhysicsCouplingControl"], [256, 3, 1, "", "updateXSLibrary"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter": [[257, 2, 1, "", "LatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter": [[257, 4, 1, "", "COOLANT_CATEGORY"], [257, 4, 1, "", "DEPLETABLE"], [257, 4, 1, "", "FISSION_PRODUCT_CATEGORY"], [257, 4, 1, "", "FUEL_CATEGORY"], [257, 4, 1, "", "INF_DILUTE"], [257, 4, 1, "", "REPRESENTED"], [257, 4, 1, "", "STRUCTURE_CATEGORY"], [257, 4, 1, "", "UNDEPLETABLE"], [257, 4, 1, "", "UNUSED_CATEGORY"], [257, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests": [[259, 0, 0, "-", "test_latticeInterface"], [260, 0, 0, "-", "test_latticeWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface": [[259, 2, 1, "", "LatticeInterfaceTester"], [259, 2, 1, "", "LatticeInterfaceTesterLibFalse"], [259, 2, 1, "", "TestLatticePhysicsInterface"], [259, 2, 1, "", "TestLatticePhysicsInterfaceBase"], [259, 2, 1, "", "TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester": [[259, 3, 1, "", "readExistingXSLibraries"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface": [[259, 3, 1, "", "test_getSuffix"], [259, 3, 1, "", "test_includeGammaXS"], [259, 3, 1, "", "test_interactAll"], [259, 3, 1, "", "test_interactBOC"], [259, 3, 1, "", "test_interactBOL"], [259, 3, 1, "", "test_interactEveryNode"], [259, 3, 1, "", "test_interactEveryNodeAll"], [259, 3, 1, "", "test_interactEveryNodeFirstCoupled"], [259, 3, 1, "", "test_interactEveryNodeWhenCoupled"], [259, 3, 1, "", "test_interactEveryNodeWhenCoupledButNot"], [259, 3, 1, "", "test_interactFirstCoupledIteration"], [259, 3, 1, "", "test_latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation": [[259, 3, 1, "", "test_libCreation_GenXS"], [259, 3, 1, "", "test_libCreation_GenXS_2"], [259, 3, 1, "", "test_libCreation_GenXS_3"], [259, 3, 1, "", "test_libCreation_NoGenXS"], [259, 3, 1, "", "test_libCreation_NoGenXS_2"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter": [[260, 2, 1, "", "FakeLatticePhysicsWriter"], [260, 2, 1, "", "TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter": [[260, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter": [[260, 3, 1, "", "test_getAllNuclidesByTemperatureInC"], [260, 3, 1, "", "test_getAllNuclidesByTemperatureInCExplicitFissionProducts"], [260, 3, 1, "", "test_getAllNuclidesByTemperatureInCNone"], [260, 3, 1, "", "test_getAvgNuclideTemperatureInC"], [260, 3, 1, "", "test_getDetailedFPDensities"], [260, 3, 1, "", "test_getDetailedFissionProducts"], [260, 3, 1, "", "test_getDetailedFissionProductsPass"], [260, 3, 1, "", "test_getDriverBlock"], [260, 3, 1, "", "test_getFuelTemperature"], [260, 3, 1, "", "test_isCriticalBucklingSearchActive"], [260, 3, 1, "", "test_isGammaXSGenerationEnabled"], [260, 3, 1, "", "test_isSourceDriven"], [260, 3, 1, "", "test_latticePhysicsWriter"], [260, 3, 1, "", "test_setBlockNeutronVelocities"], [260, 3, 1, "", "test_writeTitle"]], "armi.physics.neutronics.macroXSGenerationInterface": [[261, 2, 1, "", "MacroXSGenerationInterface"], [261, 2, 1, "", "MacroXSGenerator"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface": [[261, 3, 1, "", "buildMacros"], [261, 4, 1, "", "name"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator": [[261, 3, 1, "", "invokeHook"]], "armi.physics.neutronics.parameters": [[262, 1, 1, "", "getNeutronicsParameterDefinitions"]], "armi.physics.neutronics.reports": [[263, 6, 1, "", "PD_PLOT"], [263, 1, 1, "", "generateLinePlot"], [263, 1, 1, "", "insertInitialCoreFuelAssem"], [263, 1, 1, "", "insertNeutronicsBOLContent"], [263, 1, 1, "", "insertNeutronicsReport"], [263, 1, 1, "", "neutronicsPlotting"]], "armi.physics.neutronics.settings": [[264, 1, 1, "", "defineSettings"], [264, 1, 1, "", "getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[266, 0, 0, "-", "test_crossSectionManager"], [267, 0, 0, "-", "test_crossSectionSettings"], [268, 0, 0, "-", "test_crossSectionTable"], [269, 0, 0, "-", "test_energyGroups"], [270, 0, 0, "-", "test_macroXSGenerationInterface"], [271, 0, 0, "-", "test_neutronicsPlugin"]], "armi.physics.neutronics.tests.test_crossSectionManager": [[266, 2, 1, "", "TestBlockCollection"], [266, 2, 1, "", "TestBlockCollectionAverage"], [266, 2, 1, "", "TestBlockCollectionComponentAverage"], [266, 2, 1, "", "TestBlockCollectionComponentAverage1DCylinder"], [266, 2, 1, "", "TestBlockCollectionFluxWeightedAverage"], [266, 2, 1, "", "TestBlockCollectionMedian"], [266, 2, 1, "", "TestComponentAveraging"], [266, 2, 1, "", "TestCrossSectionGroupManager"], [266, 2, 1, "", "TestCrossSectionGroupManagerWithTempGrouping"], [266, 2, 1, "", "TestXSNumberConverters"], [266, 1, 1, "", "makeBlocks"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection": [[266, 3, 1, "", "test_add"], [266, 3, 1, "", "test_getBlocksInGroup"], [266, 3, 1, "", "test_is_pickleable"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage": [[266, 3, 1, "", "test_checkBlockSimilarity"], [266, 3, 1, "", "test_createRepresentativeBlock"], [266, 3, 1, "", "test_createRepresentativeBlockDissimilar"], [266, 3, 1, "", "test_performAverageByComponent"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage": [[266, 3, 1, "", "test_ComponentAverageRepBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder": [[266, 3, 1, "", "test_ComponentAverage1DCylinder"], [266, 3, 1, "", "test_ComponentAverageDuctHet1DCylinder"], [266, 3, 1, "", "test_checkComponentConsistency"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage": [[266, 3, 1, "", "test_createRepresentativeBlock"], [266, 3, 1, "", "test_invalidWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian": [[266, 3, 1, "", "test_createRepresentativeBlock"], [266, 3, 1, "", "test_getBlockNuclideTemperature"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging": [[266, 3, 1, "", "test_getAverageComponentNumberDensities"], [266, 3, 1, "", "test_getAverageComponentTemperature"], [266, 3, 1, "", "test_getAverageComponentTemperatureNoMass"], [266, 3, 1, "", "test_getAverageComponentTemperatureVariedWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager": [[266, 3, 1, "", "test_addXsGroupsFromBlocks"], [266, 3, 1, "", "test_calcWeightedBurnup"], [266, 3, 1, "", "test_copyPregeneratedFiles"], [266, 3, 1, "", "test_createRepresentativeBlocksUsingExistingBlocks"], [266, 3, 1, "", "test_createRepresentativeBlocksUsingExistingBlocksDisableValidBlockTypes"], [266, 3, 1, "", "test_disableEnvGroupUpdates"], [266, 3, 1, "", "test_enableEnvGroupUpdates"], [266, 3, 1, "", "test_getNextAvailableXsType"], [266, 3, 1, "", "test_getRepresentativeBlocks"], [266, 3, 1, "", "test_interactAllCoupled"], [266, 3, 1, "", "test_interactBOC"], [266, 3, 1, "", "test_interactBOL"], [266, 3, 1, "", "test_interactEveryNode"], [266, 3, 1, "", "test_interactFirstCoupledIteration"], [266, 3, 1, "", "test_setBuGroupBounds"], [266, 3, 1, "", "test_setTempGroupBounds"], [266, 3, 1, "", "test_updateBurnupGroups"], [266, 3, 1, "", "test_xsgmIsRunBeforeXS"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManagerWithTempGrouping": [[266, 3, 1, "", "test_updateEnvironmentGroups"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters": [[266, 3, 1, "", "test_conversion"], [266, 3, 1, "", "test_conversion_2digit"]], "armi.physics.neutronics.tests.test_crossSectionSettings": [[267, 2, 1, "", "TestCrossSectionSettings"], [267, 2, 1, "", "TestXSSettings"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings": [[267, 3, 1, "", "test_badCrossSections"], [267, 3, 1, "", "test_crossSections"], [267, 3, 1, "", "test_homogeneousXsDefaultSettingAssignment"], [267, 3, 1, "", "test_optionalKey"], [267, 3, 1, "", "test_pregeneratedCrossSections"], [267, 3, 1, "", "test_pregeneratedFluxInputs"], [267, 3, 1, "", "test_prioritization"], [267, 3, 1, "", "test_setDefaultSettingsByLowestEnvGroupHomogeneous"], [267, 3, 1, "", "test_setDefaultSettingsByLowestEnvGroupOneDimensional"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings": [[267, 3, 1, "", "test_caseSettings"], [267, 3, 1, "", "test_csBlockRepresentation"], [267, 3, 1, "", "test_csBlockRepresentationFileLocation"], [267, 3, 1, "", "test_xsSettingsSetDefault"], [267, 3, 1, "", "test_yamlIO"]], "armi.physics.neutronics.tests.test_crossSectionTable": [[268, 2, 1, "", "TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable": [[268, 3, 1, "", "test_isotopicDepletionInterface"], [268, 3, 1, "", "test_makeTable"]], "armi.physics.neutronics.tests.test_energyGroups": [[269, 2, 1, "", "TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups": [[269, 3, 1, "", "test_consistenciesBetweenGroupStructureAndGroupStructureType"], [269, 3, 1, "", "test_getFastFluxGroupCutoff"], [269, 3, 1, "", "test_invalidGroupStructureType"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface": [[270, 2, 1, "", "TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface": [[270, 3, 1, "", "test_macroXSGenerationInterfaceBasics"]], "armi.physics.neutronics.tests.test_neutronicsPlugin": [[271, 2, 1, "", "NeutronicsReactorTests"], [271, 2, 1, "", "TestNeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests": [[271, 3, 1, "", "test_kineticsParameterAssignment"], [271, 3, 1, "", "test_neutronicsSettingsValidators"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin": [[271, 4, 1, "", "plugin"], [271, 3, 1, "", "test_customSettingObjectIO"], [271, 3, 1, "", "test_customSettingRoundTrip"], [271, 3, 1, "", "test_neutronicsSettingsLoaded"]], "armi.physics.safety": [[272, 2, 1, "", "SafetyPlugin"]], "armi.physics.safety.SafetyPlugin": [[272, 3, 1, "", "defineSettings"]], "armi.physics.tests": [[274, 0, 0, "-", "test_executers"]], "armi.physics.tests.test_executers": [[274, 2, 1, "", "MockCore"], [274, 2, 1, "", "MockParams"], [274, 2, 1, "", "MockReactor"], [274, 2, 1, "", "TestExecuters"], [274, 2, 1, "", "TestExecutionOptions"]], "armi.physics.tests.test_executers.TestExecuters": [[274, 3, 1, "", "test_collectInputsAndOutputs"], [274, 3, 1, "", "test_runExternalExecutable"], [274, 3, 1, "", "test_updateRunDir"]], "armi.physics.tests.test_executers.TestExecutionOptions": [[274, 3, 1, "", "test_runningDirectoryPath"]], "armi.physics.thermalHydraulics": [[276, 0, 0, "-", "const"], [277, 0, 0, "-", "parameters"], [278, 0, 0, "-", "plugin"], [279, 0, 0, "-", "settings"], [280, 0, 0, "-", "tests"]], "armi.physics.thermalHydraulics.parameters": [[277, 1, 1, "", "getParameterDefinitions"]], "armi.physics.thermalHydraulics.plugin": [[278, 2, 1, "", "ThermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin": [[278, 3, 1, "", "afterConstructionOfAssemblies"], [278, 3, 1, "", "defineParameters"], [278, 3, 1, "", "defineSettings"], [278, 3, 1, "", "defineSettingsValidators"], [278, 3, 1, "", "exposeInterfaces"]], "armi.physics.thermalHydraulics.settings": [[279, 1, 1, "", "defineSettings"], [279, 1, 1, "", "defineValidators"]], "armi.physics.thermalHydraulics.tests": [[281, 0, 0, "-", "test_thermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin": [[281, 2, 1, "", "TestThermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin": [[281, 4, 1, "", "plugin"], [281, 3, 1, "", "test_thermalHydraulicsSettingsLoaded"], [281, 3, 1, "", "test_thermalHydraulicsSettingsSet"]], "armi.pluginManager": [[282, 2, 1, "", "ArmiPluginManager"]], "armi.pluginManager.ArmiPluginManager": [[282, 5, 1, "", "counter"], [282, 3, 1, "", "register"], [282, 3, 1, "", "unregister"]], "armi.plugins": [[283, 2, 1, "", "ArmiPlugin"], [283, 7, 1, "", "PluginError"], [283, 2, 1, "", "UserPlugin"], [283, 1, 1, "", "collectInterfaceDescriptions"], [283, 1, 1, "", "getNewPluginManager"]], "armi.plugins.ArmiPlugin": [[283, 3, 1, "", "afterConstructionOfAssemblies"], [283, 3, 1, "", "beforeReactorConstruction"], [283, 3, 1, "", "defineAssemblyTypes"], [283, 3, 1, "", "defineBlockTypes"], [283, 3, 1, "", "defineBlueprintsSections"], [283, 3, 1, "", "defineCaseDependencies"], [283, 3, 1, "", "defineEntryPoints"], [283, 3, 1, "", "defineFlags"], [283, 3, 1, "", "defineGuiWidgets"], [283, 3, 1, "", "defineParameterRenames"], [283, 3, 1, "", "defineParameters"], [283, 3, 1, "", "defineSettings"], [283, 3, 1, "", "defineSettingsValidators"], [283, 3, 1, "", "defineSystemBuilders"], [283, 3, 1, "", "exposeInterfaces"], [283, 3, 1, "", "getAxialExpansionChanger"], [283, 3, 1, "", "getOperatorClassFromRunType"], [283, 3, 1, "", "getReportContents"], [283, 3, 1, "", "mpiActionRequiresReset"], [283, 3, 1, "", "onProcessCoreLoading"]], "armi.plugins.UserPlugin": [[283, 3, 1, "", "defineParameterRenames"], [283, 3, 1, "", "defineParameters"], [283, 3, 1, "", "defineSettings"], [283, 3, 1, "", "defineSettingsValidators"]], "armi.reactor": [[284, 2, 1, "", "ReactorPlugin"], [285, 0, 0, "-", "assemblies"], [286, 0, 0, "-", "assemblyParameters"], [287, 0, 0, "-", "blockParameters"], [288, 0, 0, "-", "blocks"], [289, 0, 0, "-", "blueprints"], [305, 0, 0, "-", "components"], [311, 0, 0, "-", "composites"], [312, 0, 0, "-", "converters"], [331, 0, 0, "-", "cores"], [332, 0, 0, "-", "excoreStructure"], [333, 0, 0, "-", "flags"], [334, 0, 0, "-", "geometry"], [335, 0, 0, "-", "grids"], [344, 0, 0, "-", "parameters"], [349, 0, 0, "-", "reactorParameters"], [350, 0, 0, "-", "reactors"], [351, 0, 0, "-", "spentFuelPool"], [352, 0, 0, "-", "systemLayoutInput"], [353, 0, 0, "-", "tests"], [366, 0, 0, "-", "zones"]], "armi.reactor.ReactorPlugin": [[284, 3, 1, "", "beforeReactorConstruction"], [284, 3, 1, "", "defineAssemblyTypes"], [284, 3, 1, "", "defineBlockTypes"], [284, 3, 1, "", "defineSystemBuilders"], [284, 3, 1, "", "getAxialExpansionChanger"]], "armi.reactor.assemblies": [[285, 2, 1, "", "Assembly"], [285, 2, 1, "", "CartesianAssembly"], [285, 2, 1, "", "HexAssembly"], [285, 2, 1, "", "RZAssembly"], [285, 2, 1, "", "ThRZAssembly"]], "armi.reactor.assemblies.Assembly": [[285, 4, 1, "", "DATABASE"], [285, 4, 1, "", "LOAD_QUEUE"], [285, 4, 1, "", "NOT_IN_CORE"], [285, 4, 1, "", "SPENT_FUEL_POOL"], [285, 3, 1, "", "add"], [285, 3, 1, "", "adjustResolution"], [285, 3, 1, "", "calculateZCoords"], [285, 3, 1, "", "coords"], [285, 3, 1, "", "countBlocksWithFlags"], [285, 3, 1, "", "dump"], [285, 3, 1, "", "getAge"], [285, 3, 1, "", "getArea"], [285, 3, 1, "", "getAveragePlenumTemperature"], [285, 3, 1, "", "getAxialMesh"], [285, 3, 1, "", "getBIndexFromZIndex"], [285, 3, 1, "", "getBlockAtElevation"], [285, 3, 1, "", "getBlocks"], [285, 3, 1, "", "getBlocksAndZ"], [285, 3, 1, "", "getBlocksBetweenElevations"], [285, 3, 1, "", "getDim"], [285, 3, 1, "", "getElevationBoundariesByBlockType"], [285, 3, 1, "", "getElevationsMatchingParamValue"], [285, 3, 1, "", "getFirstBlock"], [285, 3, 1, "", "getFirstBlockByType"], [285, 3, 1, "", "getHeight"], [285, 3, 1, "", "getLocation"], [285, 3, 1, "", "getNum"], [285, 3, 1, "", "getParamOfZFunction"], [285, 3, 1, "", "getParamValuesAtZ"], [285, 3, 1, "", "getPinPlenumVolumeInCubicMeters"], [285, 3, 1, "", "getReactiveHeight"], [285, 3, 1, "", "getSymmetryFactor"], [285, 3, 1, "", "getTotalHeight"], [285, 3, 1, "", "getVolume"], [285, 3, 1, "", "hasContinuousCoolantChannel"], [285, 3, 1, "", "insert"], [285, 3, 1, "", "isOnWhichSymmetryLine"], [285, 3, 1, "", "makeAxialSnapList"], [285, 3, 1, "", "makeNameFromAssemNum"], [285, 3, 1, "", "makeUnique"], [285, 3, 1, "", "moveTo"], [285, 3, 1, "", "orientBlocks"], [285, 4, 1, "", "pDefs"], [285, 4, 1, "", "paramCollectionType"], [285, 3, 1, "", "reestablishBlockOrder"], [285, 3, 1, "", "renameBlocksAccordingToAssemblyNum"], [285, 3, 1, "", "renumber"], [285, 3, 1, "", "rotate"], [285, 3, 1, "", "scaleParamsToNewSymmetryFactor"], [285, 3, 1, "", "setBlockHeights"], [285, 3, 1, "", "setBlockMesh"]], "armi.reactor.assemblies.CartesianAssembly": [[285, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblies.HexAssembly": [[285, 4, 1, "", "paramCollectionType"], [285, 3, 1, "", "rotate"]], "armi.reactor.assemblies.RZAssembly": [[285, 4, 1, "", "paramCollectionType"], [285, 3, 1, "", "radialInner"], [285, 3, 1, "", "radialOuter"], [285, 3, 1, "", "thetaInner"], [285, 3, 1, "", "thetaOuter"]], "armi.reactor.assemblies.ThRZAssembly": [[285, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblyParameters": [[286, 1, 1, "", "getAssemblyParameterDefinitions"]], "armi.reactor.blockParameters": [[287, 1, 1, "", "getBlockParameterDefinitions"]], "armi.reactor.blocks": [[288, 2, 1, "", "Block"], [288, 2, 1, "", "CartesianBlock"], [288, 2, 1, "", "HexBlock"], [288, 2, 1, "", "ThRZBlock"]], "armi.reactor.blocks.Block": [[288, 4, 1, "", "PITCH_COMPONENT_TYPE"], [288, 4, 1, "", "PITCH_DIMENSION"], [288, 3, 1, "", "add"], [288, 3, 1, "", "adjustDensity"], [288, 3, 1, "", "adjustUEnrich"], [288, 3, 1, "", "autoCreateSpatialGrids"], [288, 3, 1, "", "completeInitialLoading"], [288, 3, 1, "", "coords"], [288, 5, 1, "", "core"], [288, 3, 1, "", "createHomogenizedCopy"], [288, 3, 1, "", "getArea"], [288, 3, 1, "", "getBlocks"], [288, 3, 1, "", "getBoronMassEnrich"], [288, 3, 1, "", "getCaptureEnergyGenerationConstants"], [288, 3, 1, "", "getComponentAreaFrac"], [288, 3, 1, "", "getComponentsInLinkedOrder"], [288, 3, 1, "", "getComponentsThatAreLinkedTo"], [288, 3, 1, "", "getDim"], [288, 3, 1, "", "getDimensions"], [288, 3, 1, "", "getFissionEnergyGenerationConstants"], [288, 3, 1, "", "getFlowAreaPerPin"], [288, 3, 1, "", "getGammaEnergyDepositionConstants"], [288, 3, 1, "", "getHeight"], [288, 3, 1, "", "getHydraulicDiameter"], [288, 3, 1, "", "getInputHeight"], [288, 3, 1, "", "getIntegratedMgFlux"], [288, 3, 1, "", "getLargestComponent"], [288, 3, 1, "", "getLocation"], [288, 3, 1, "", "getLumpedFissionProductCollection"], [288, 3, 1, "", "getMaxArea"], [288, 3, 1, "", "getMfp"], [288, 3, 1, "", "getMgFlux"], [288, 3, 1, "", "getMicroSuffix"], [288, 3, 1, "", "getNeutronEnergyDepositionConstants"], [288, 3, 1, "", "getNumPins"], [288, 3, 1, "", "getPinCenterFlatToFlat"], [288, 3, 1, "", "getPinCoordinates"], [288, 3, 1, "", "getPinLocations"], [288, 3, 1, "", "getPinPitch"], [288, 3, 1, "", "getPitch"], [288, 3, 1, "", "getPlenumPin"], [288, 3, 1, "", "getSmearDensity"], [288, 3, 1, "", "getSortedComponentsInsideOfComponent"], [288, 3, 1, "", "getSymmetryFactor"], [288, 3, 1, "", "getTotalEnergyGenerationConstants"], [288, 3, 1, "", "getUraniumMassEnrich"], [288, 3, 1, "", "getVolume"], [288, 3, 1, "", "getWettedPerimeter"], [288, 3, 1, "", "getWireWrapCladGap"], [288, 3, 1, "", "hasPinPitch"], [288, 3, 1, "", "isPlenumPin"], [288, 3, 1, "", "makeName"], [288, 3, 1, "", "mergeWithBlock"], [288, 4, 1, "", "pDefs"], [288, 4, 1, "", "paramCollectionType"], [288, 3, 1, "", "plotFlux"], [288, 3, 1, "", "remove"], [288, 3, 1, "", "removeAll"], [288, 3, 1, "", "replaceBlockWithBlock"], [288, 3, 1, "", "rotate"], [288, 3, 1, "", "setAreaFractionsReport"], [288, 3, 1, "", "setAxialExpTargetComp"], [288, 3, 1, "", "setB10VolParam"], [288, 3, 1, "", "setBuLimitInfo"], [288, 3, 1, "", "setHeight"], [288, 3, 1, "", "setPinMgFluxes"], [288, 3, 1, "", "setPitch"], [288, 4, 1, "", "uniqID"], [288, 3, 1, "", "updateComponentDims"], [288, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.CartesianBlock": [[288, 4, 1, "", "PITCH_COMPONENT_TYPE"], [288, 4, 1, "", "PITCH_DIMENSION"], [288, 3, 1, "", "getMaxArea"], [288, 3, 1, "", "getPinCenterFlatToFlat"], [288, 3, 1, "", "getSymmetryFactor"], [288, 4, 1, "", "paramCollectionType"], [288, 3, 1, "", "setPitch"]], "armi.reactor.blocks.HexBlock": [[288, 4, 1, "", "PITCH_COMPONENT_TYPE"], [288, 3, 1, "", "autoCreateSpatialGrids"], [288, 3, 1, "", "coords"], [288, 3, 1, "", "createHomogenizedCopy"], [288, 3, 1, "", "getDuctIP"], [288, 3, 1, "", "getDuctOP"], [288, 3, 1, "", "getFlowArea"], [288, 3, 1, "", "getHydraulicDiameter"], [288, 3, 1, "", "getMaxArea"], [288, 3, 1, "", "getPinCenterFlatToFlat"], [288, 3, 1, "", "getPinPitch"], [288, 3, 1, "", "getPinToDuctGap"], [288, 3, 1, "", "getRotationNum"], [288, 3, 1, "", "getSymmetryFactor"], [288, 3, 1, "", "getWettedPerimeter"], [288, 3, 1, "", "hasPinPitch"], [288, 3, 1, "", "initializePinLocations"], [288, 4, 1, "", "paramCollectionType"], [288, 3, 1, "", "rotate"], [288, 3, 1, "", "setPinPowers"], [288, 3, 1, "", "setRotationNum"], [288, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.ThRZBlock": [[288, 3, 1, "", "axialInner"], [288, 3, 1, "", "axialOuter"], [288, 3, 1, "", "getMaxArea"], [288, 4, 1, "", "paramCollectionType"], [288, 3, 1, "", "radialInner"], [288, 3, 1, "", "radialOuter"], [288, 3, 1, "", "thetaInner"], [288, 3, 1, "", "thetaOuter"], [288, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blueprints": [[289, 2, 1, "", "Blueprints"], [290, 0, 0, "-", "assemblyBlueprint"], [291, 0, 0, "-", "blockBlueprint"], [292, 0, 0, "-", "componentBlueprint"], [293, 0, 0, "-", "gridBlueprint"], [294, 0, 0, "-", "isotopicOptions"], [289, 1, 1, "", "loadFromCs"], [289, 1, 1, "", "migrate"], [295, 0, 0, "-", "reactorBlueprint"], [296, 0, 0, "-", "tests"]], "armi.reactor.blueprints.Blueprints": [[289, 3, 1, "", "addDefaultSFP"], [289, 4, 1, "", "attributes"], [289, 3, 1, "", "constructAssem"], [289, 3, 1, "", "load"], [289, 3, 1, "", "migrate"]], "armi.reactor.blueprints.assemblyBlueprint": [[290, 2, 1, "", "AssemblyBlueprint"], [290, 2, 1, "", "AssemblyKeyedList"], [290, 2, 1, "", "ByComponentModifications"], [290, 2, 1, "", "MaterialModifications"], [290, 2, 1, "", "Modifications"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint": [[290, 4, 1, "", "attributes"], [290, 3, 1, "", "construct"], [290, 3, 1, "", "getAssemClass"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList": [[290, 4, 1, "", "attributes"], [290, 5, 1, "", "bySpecifier"], [290, 4, 1, "", "item_type"]], "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications": [[290, 4, 1, "", "attributes"], [290, 4, 1, "", "key_type"], [290, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications": [[290, 4, 1, "", "attributes"], [290, 4, 1, "", "key_type"], [290, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.Modifications": [[290, 4, 1, "", "attributes"], [290, 4, 1, "", "key_type"], [290, 4, 1, "", "value_type"]], "armi.reactor.blueprints.blockBlueprint": [[291, 2, 1, "", "BlockBlueprint"], [291, 2, 1, "", "BlockKeyedList"], [291, 2, 1, "", "BlockList"]], "armi.reactor.blueprints.blockBlueprint.BlockBlueprint": [[291, 4, 1, "", "attributes"], [291, 3, 1, "", "construct"], [291, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockKeyedList": [[291, 4, 1, "", "attributes"], [291, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockList": [[291, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint": [[292, 2, 1, "", "ComponentBlueprint"], [292, 2, 1, "", "ComponentDimension"], [292, 2, 1, "", "ComponentGroup"], [292, 2, 1, "", "ComponentGroups"], [292, 2, 1, "", "ComponentKeyedList"], [292, 2, 1, "", "GroupedComponent"], [292, 1, 1, "", "expandElementals"], [292, 1, 1, "", "insertDepletableNuclideKeys"]], "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint": [[292, 4, 1, "", "attributes"], [292, 3, 1, "", "construct"]], "armi.reactor.blueprints.componentBlueprint.ComponentDimension": [[292, 4, 1, "", "attributes"], [292, 3, 1, "", "from_yaml"], [292, 3, 1, "", "to_yaml"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroup": [[292, 4, 1, "", "attributes"], [292, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroups": [[292, 4, 1, "", "attributes"], [292, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList": [[292, 4, 1, "", "attributes"], [292, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.GroupedComponent": [[292, 4, 1, "", "attributes"]], "armi.reactor.blueprints.gridBlueprint": [[293, 2, 1, "", "GridBlueprint"], [293, 2, 1, "", "Grids"], [293, 2, 1, "", "Triplet"], [293, 1, 1, "", "saveToStream"]], "armi.reactor.blueprints.gridBlueprint.GridBlueprint": [[293, 4, 1, "", "attributes"], [293, 3, 1, "", "construct"], [293, 3, 1, "", "expandToFull"], [293, 3, 1, "", "getLocators"], [293, 3, 1, "", "getMultiLocator"], [293, 5, 1, "", "readFromLatticeMap"]], "armi.reactor.blueprints.gridBlueprint.Grids": [[293, 4, 1, "", "attributes"], [293, 4, 1, "", "item_type"]], "armi.reactor.blueprints.gridBlueprint.Triplet": [[293, 4, 1, "", "attributes"]], "armi.reactor.blueprints.isotopicOptions": [[294, 2, 1, "", "CustomIsotopic"], [294, 2, 1, "", "CustomIsotopics"], [294, 2, 1, "", "NuclideFlag"], [294, 2, 1, "", "NuclideFlags"], [294, 1, 1, "", "autoUpdateNuclideFlags"], [294, 1, 1, "", "eleExpandInfoBasedOnCodeENDF"], [294, 1, 1, "", "genDefaultNucFlags"], [294, 1, 1, "", "getAllNuclideBasesByLibrary"], [294, 1, 1, "", "getDefaultNuclideFlags"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopic": [[294, 3, 1, "", "apply"], [294, 4, 1, "", "attributes"], [294, 5, 1, "", "density"], [294, 3, 1, "", "from_yaml"], [294, 3, 1, "", "from_yaml_key_val"], [294, 4, 1, "", "key_type"], [294, 4, 1, "", "value_type"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopics": [[294, 3, 1, "", "apply"], [294, 4, 1, "", "attributes"], [294, 4, 1, "", "item_type"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlag": [[294, 4, 1, "", "attributes"], [294, 3, 1, "", "fileAsActiveOrInert"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlags": [[294, 4, 1, "", "attributes"], [294, 4, 1, "", "item_type"]], "armi.reactor.blueprints.reactorBlueprint": [[295, 2, 1, "", "SystemBlueprint"], [295, 2, 1, "", "Systems"], [295, 1, 1, "", "summarizeMaterialData"]], "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint": [[295, 4, 1, "", "attributes"], [295, 3, 1, "", "construct"]], "armi.reactor.blueprints.reactorBlueprint.Systems": [[295, 4, 1, "", "attributes"], [295, 4, 1, "", "item_type"]], "armi.reactor.blueprints.tests": [[297, 0, 0, "-", "test_assemblyBlueprints"], [298, 0, 0, "-", "test_blockBlueprints"], [299, 0, 0, "-", "test_blueprints"], [300, 0, 0, "-", "test_componentBlueprint"], [301, 0, 0, "-", "test_customIsotopics"], [302, 0, 0, "-", "test_gridBlueprints"], [303, 0, 0, "-", "test_materialModifications"], [304, 0, 0, "-", "test_reactorBlueprints"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints": [[297, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications": [[297, 3, 1, "", "loadCustomAssembly"], [297, 3, 1, "", "test_checkParamConsistency"], [297, 4, 1, "", "twoBlockInput_correct"], [297, 4, 1, "", "twoBlockInput_wrongHeights"], [297, 4, 1, "", "twoBlockInput_wrongMatMods"], [297, 4, 1, "", "twoBlockInput_wrongMeshPoints"], [297, 4, 1, "", "twoBlockInput_wrongXSTypes"]], "armi.reactor.blueprints.tests.test_blockBlueprints": [[298, 2, 1, "", "TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock": [[298, 3, 1, "", "test_blockLattice"], [298, 3, 1, "", "test_constructSpatialGrid"], [298, 3, 1, "", "test_densityConsistentWithComponentConstructor"], [298, 3, 1, "", "test_explicitFlags"], [298, 3, 1, "", "test_getLocatorsAtLatticePositions"], [298, 3, 1, "", "test_nonLatticeComponentHasRightMult"]], "armi.reactor.blueprints.tests.test_blueprints": [[299, 2, 1, "", "TestBlueprints"], [299, 2, 1, "", "TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints": [[299, 3, 1, "", "test_componentDimensions"], [299, 3, 1, "", "test_getAssemblyTypeBySpecifier"], [299, 3, 1, "", "test_nuclides"], [299, 3, 1, "", "test_roundTripCompleteBP"], [299, 3, 1, "", "test_specialIsotopicVectors"], [299, 3, 1, "", "test_traceNuclides"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema": [[299, 3, 1, "", "test_assemblyParameters"], [299, 3, 1, "", "test_cladding_invalid"], [299, 3, 1, "", "test_componentGroupInput"], [299, 3, 1, "", "test_components"], [299, 3, 1, "", "test_customIsotopics"], [299, 3, 1, "", "test_merge"], [299, 3, 1, "", "test_noDuplicateKeysInYamlBlueprints"], [299, 3, 1, "", "test_nuclideFlags"], [299, 3, 1, "", "test_nuclidesMc2v2"], [299, 3, 1, "", "test_nuclidesMc2v3"], [299, 3, 1, "", "test_topLevelComponentInput"], [299, 3, 1, "", "test_withoutBlocks"]], "armi.reactor.blueprints.tests.test_componentBlueprint": [[300, 2, 1, "", "TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint": [[300, 4, 1, "", "componentString"], [300, 3, 1, "", "test_autoDepletable"], [300, 3, 1, "", "test_componentInitializationAmericiumCustomIsotopics"], [300, 3, 1, "", "test_componentInitializationControlCustomIsotopics"], [300, 3, 1, "", "test_componentInitializationIncompleteBurnChain"], [300, 3, 1, "", "test_componentInitializationThoriumBurnCustomIsotopics"], [300, 3, 1, "", "test_componentInitializationThoriumNoBurnCustomIsotopics"]], "armi.reactor.blueprints.tests.test_customIsotopics": [[301, 2, 1, "", "TestCustomIsotopics"], [301, 2, 1, "", "TestCustomIsotopics_ErrorConditions"], [301, 2, 1, "", "TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics": [[301, 3, 1, "", "test_customDensityLogsAndErrors"], [301, 3, 1, "", "test_densitiesAppliedToNonCustomMaterials"], [301, 3, 1, "", "test_expandedNatural"], [301, 3, 1, "", "test_infDiluteAreOnlyNatural"], [301, 3, 1, "", "test_massFractionsAreApplied"], [301, 3, 1, "", "test_numberDensities"], [301, 3, 1, "", "test_numberDensitiesAnchor"], [301, 3, 1, "", "test_numberFractions"], [301, 3, 1, "", "test_unmodified"], [301, 4, 1, "", "yamlBadBlocks"], [301, 4, 1, "", "yamlGoodBlocks"], [301, 4, 1, "", "yamlPreamble"], [301, 4, 1, "", "yamlString"], [301, 4, 1, "", "yamlStringWithError"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions": [[301, 3, 1, "", "test_densityMustBePositive"], [301, 3, 1, "", "test_nonConformantElementName"], [301, 3, 1, "", "test_numberDensitiesCannotSpecifyDensity"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion": [[301, 3, 1, "", "test_eleExpandInfoBasedOnCodeENDF"], [301, 3, 1, "", "test_expandedNatural"], [301, 4, 1, "", "yamlString"]], "armi.reactor.blueprints.tests.test_gridBlueprints": [[302, 2, 1, "", "TestGridBPRoundTrip"], [302, 2, 1, "", "TestGridBlueprintsSection"], [302, 2, 1, "", "TestRZTGridBlueprint"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip": [[302, 3, 1, "", "test_contents"], [302, 3, 1, "", "test_roundTrip"], [302, 3, 1, "", "test_tinyMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection": [[302, 3, 1, "", "test_simpleRead"], [302, 3, 1, "", "test_simpleReadLatticeMap"], [302, 3, 1, "", "test_simpleReadNoLatticeMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint": [[302, 3, 1, "", "test_construct"], [302, 3, 1, "", "test_geomFile"]], "armi.reactor.blueprints.tests.test_materialModifications": [[303, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications": [[303, 4, 1, "", "b4cInput"], [303, 3, 1, "", "loadB4CAssembly"], [303, 3, 1, "", "loadUZrAssembly"], [303, 3, 1, "", "test_bothU235ZrWtFracModification"], [303, 3, 1, "", "test_checkByComponentMaterialInput"], [303, 3, 1, "", "test_filterMaterialInput"], [303, 3, 1, "", "test_invalidComponentModification"], [303, 3, 1, "", "test_invalidMatModName"], [303, 3, 1, "", "test_matModsUpTheMRO"], [303, 3, 1, "", "test_materialModificationLength"], [303, 3, 1, "", "test_noMaterialModifications"], [303, 3, 1, "", "test_theoreticalDensity"], [303, 3, 1, "", "test_u235_wt_frac_byComponent_modification1"], [303, 3, 1, "", "test_u235_wt_frac_byComponent_modification2"], [303, 3, 1, "", "test_u235_wt_frac_modification"], [303, 3, 1, "", "test_zrWtFracModification"], [303, 4, 1, "", "uZrInput"]], "armi.reactor.blueprints.tests.test_reactorBlueprints": [[304, 2, 1, "", "TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints": [[304, 3, 1, "", "test_construct"], [304, 3, 1, "", "test_excoreStructure"], [304, 3, 1, "", "test_materialDataSummary"], [304, 3, 1, "", "test_simpleRead"], [304, 3, 1, "", "test_spentFuelPool"]], "armi.reactor.components": [[305, 2, 1, "", "DerivedShape"], [305, 2, 1, "", "NullComponent"], [305, 2, 1, "", "PositiveOrNegativeVolumeComponent"], [305, 2, 1, "", "UnshapedComponent"], [305, 2, 1, "", "UnshapedVolumetricComponent"], [305, 2, 1, "", "ZeroMassComponent"], [306, 0, 0, "-", "basicShapes"], [307, 0, 0, "-", "complexShapes"], [308, 0, 0, "-", "component"], [309, 0, 0, "-", "componentParameters"], [305, 1, 1, "", "factory"], [310, 0, 0, "-", "volumetricShapes"]], "armi.reactor.components.DerivedShape": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 3, 1, "", "computeVolume"], [305, 3, 1, "", "getBoundingCircleOuterDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 3, 1, "", "getMaxVolume"], [305, 3, 1, "", "getVolume"], [305, 4, 1, "", "material"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.NullComponent": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 3, 1, "", "getBoundingCircleOuterDiameter"], [305, 3, 1, "", "getDimension"], [305, 4, 1, "", "material"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.PositiveOrNegativeVolumeComponent": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "material"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedComponent": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 3, 1, "", "fromComponent"], [305, 3, 1, "", "getBoundingCircleOuterDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 4, 1, "", "material"], [305, 4, 1, "", "pDefs"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedVolumetricComponent": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 3, 1, "", "getComponentArea"], [305, 3, 1, "", "getComponentVolume"], [305, 4, 1, "", "is3D"], [305, 4, 1, "", "material"], [305, 4, 1, "", "paramCollectionType"], [305, 3, 1, "", "setVolume"]], "armi.reactor.components.ZeroMassComponent": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 3, 1, "", "getNumberDensity"], [305, 4, 1, "", "material"], [305, 4, 1, "", "paramCollectionType"], [305, 3, 1, "", "setNumberDensity"]], "armi.reactor.components.basicShapes": [[306, 2, 1, "", "Circle"], [306, 2, 1, "", "Hexagon"], [306, 2, 1, "", "Rectangle"], [306, 2, 1, "", "SolidRectangle"], [306, 2, 1, "", "Square"], [306, 2, 1, "", "Triangle"]], "armi.reactor.components.basicShapes.Circle": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [306, 3, 1, "", "getBoundingCircleOuterDiameter"], [306, 3, 1, "", "getCircleInnerDiameter"], [306, 3, 1, "", "getComponentArea"], [306, 4, 1, "", "is3D"], [306, 3, 1, "", "isEncapsulatedBy"], [306, 4, 1, "", "material"], [306, 4, 1, "", "pDefs"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Hexagon": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [306, 3, 1, "", "getBoundingCircleOuterDiameter"], [306, 3, 1, "", "getCircleInnerDiameter"], [306, 3, 1, "", "getComponentArea"], [306, 3, 1, "", "getPerimeter"], [306, 3, 1, "", "getPitchData"], [306, 4, 1, "", "is3D"], [306, 4, 1, "", "material"], [306, 4, 1, "", "pDefs"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Rectangle": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [306, 3, 1, "", "getBoundingCircleOuterDiameter"], [306, 3, 1, "", "getCircleInnerDiameter"], [306, 3, 1, "", "getComponentArea"], [306, 3, 1, "", "getPitchData"], [306, 4, 1, "", "is3D"], [306, 3, 1, "", "isLatticeComponent"], [306, 4, 1, "", "material"], [306, 4, 1, "", "pDefs"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.SolidRectangle": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [306, 3, 1, "", "getComponentArea"], [306, 4, 1, "", "is3D"], [306, 4, 1, "", "material"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Square": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 3, 1, "", "getBoundingCircleOuterDiameter"], [306, 3, 1, "", "getCircleInnerDiameter"], [306, 3, 1, "", "getComponentArea"], [306, 3, 1, "", "getPitchData"], [306, 4, 1, "", "is3D"], [306, 4, 1, "", "material"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Triangle": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [306, 3, 1, "", "getComponentArea"], [306, 4, 1, "", "is3D"], [306, 4, 1, "", "material"], [306, 4, 1, "", "pDefs"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes": [[307, 2, 1, "", "Helix"], [307, 2, 1, "", "HexHoledCircle"], [307, 2, 1, "", "HoledHexagon"], [307, 2, 1, "", "HoledRectangle"], [307, 2, 1, "", "HoledSquare"]], "armi.reactor.components.complexShapes.Helix": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getBoundingCircleOuterDiameter"], [307, 3, 1, "", "getCircleInnerDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "material"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HexHoledCircle": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getCircleInnerDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 4, 1, "", "material"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledHexagon": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getCircleInnerDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 4, 1, "", "material"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledRectangle": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getCircleInnerDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 4, 1, "", "material"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledSquare": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getCircleInnerDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 4, 1, "", "material"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.component": [[308, 2, 1, "", "Component"], [308, 2, 1, "", "ComponentType"], [308, 2, 1, "", "ShapedComponent"], [308, 1, 1, "", "componentTypeIsValid"]], "armi.reactor.components.component.Component": [[308, 4, 1, "", "DIMENSION_NAMES"], [308, 4, 1, "", "INIT_SIGNATURE"], [308, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [308, 3, 1, "", "adjustDensityForHeightExpansion"], [308, 3, 1, "", "adjustMassEnrichment"], [308, 3, 1, "", "applyMaterialMassFracsToNumberDensities"], [308, 3, 1, "", "backUp"], [308, 3, 1, "", "clearCache"], [308, 3, 1, "", "clearLinkedCache"], [308, 3, 1, "", "computeVolume"], [308, 3, 1, "", "containsSolidMaterial"], [308, 3, 1, "", "containsVoidMaterial"], [308, 3, 1, "", "density"], [308, 3, 1, "", "dimensionIsLinked"], [308, 3, 1, "", "finalizeLoadingFromDB"], [308, 5, 1, "", "gasPorosity"], [308, 3, 1, "", "getArea"], [308, 3, 1, "", "getBoundingCircleOuterDiameter"], [308, 3, 1, "", "getCircleInnerDiameter"], [308, 3, 1, "", "getComponentArea"], [308, 3, 1, "", "getComponentVolume"], [308, 3, 1, "", "getDimension"], [308, 3, 1, "", "getDimensionNamesLinkedTo"], [308, 3, 1, "", "getEnrichment"], [308, 3, 1, "", "getFuelMass"], [308, 3, 1, "", "getHeightFactor"], [308, 3, 1, "", "getIntegratedMgFlux"], [308, 3, 1, "", "getLinkedComponents"], [308, 3, 1, "", "getLumpedFissionProductCollection"], [308, 3, 1, "", "getMass"], [308, 3, 1, "", "getMassEnrichment"], [308, 3, 1, "", "getMicroSuffix"], [308, 3, 1, "", "getNuclideNumberDensities"], [308, 3, 1, "", "getNuclides"], [308, 3, 1, "", "getNumberDensity"], [308, 3, 1, "", "getPinMgFluxes"], [308, 3, 1, "", "getPitchData"], [308, 3, 1, "", "getProperties"], [308, 3, 1, "", "getThermalExpansionFactor"], [308, 3, 1, "", "getVolume"], [308, 4, 1, "", "is3D"], [308, 3, 1, "", "iterComponents"], [308, 5, 1, "", "liquidPorosity"], [308, 4, 1, "", "material"], [308, 3, 1, "", "mergeNuclidesInto"], [308, 4, 1, "", "pDefs"], [308, 4, 1, "", "paramCollectionType"], [308, 3, 1, "", "printContents"], [308, 3, 1, "", "resolveLinkedDims"], [308, 3, 1, "", "restoreBackup"], [308, 3, 1, "", "setArea"], [308, 3, 1, "", "setDimension"], [308, 3, 1, "", "setDimensionReport"], [308, 3, 1, "", "setLink"], [308, 3, 1, "", "setLumpedFissionProducts"], [308, 3, 1, "", "setName"], [308, 3, 1, "", "setNumberDensities"], [308, 3, 1, "", "setNumberDensity"], [308, 3, 1, "", "setProperties"], [308, 3, 1, "", "setTemperature"], [308, 3, 1, "", "setVolume"], [308, 5, 1, "", "temperatureInC"], [308, 5, 1, "", "temperatureInK"], [308, 3, 1, "", "updateDims"], [308, 3, 1, "", "updateNumberDensities"]], "armi.reactor.components.component.ComponentType": [[308, 4, 1, "", "NON_DIMENSION_NAMES"], [308, 4, 1, "", "TYPES"]], "armi.reactor.components.component.ShapedComponent": [[308, 4, 1, "", "DIMENSION_NAMES"], [308, 4, 1, "", "INIT_SIGNATURE"], [308, 4, 1, "", "material"], [308, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.componentParameters": [[309, 1, 1, "", "getCircleParameterDefinitions"], [309, 1, 1, "", "getComponentParameterDefinitions"], [309, 1, 1, "", "getCubeParameterDefinitions"], [309, 1, 1, "", "getHelixParameterDefinitions"], [309, 1, 1, "", "getHexHoledCircleParameterDefinitions"], [309, 1, 1, "", "getHexagonParameterDefinitions"], [309, 1, 1, "", "getHoledHexagonParameterDefinitions"], [309, 1, 1, "", "getHoledRectangleParameterDefinitions"], [309, 1, 1, "", "getRadialSegmentParameterDefinitions"], [309, 1, 1, "", "getRectangleParameterDefinitions"], [309, 1, 1, "", "getTriangleParameterDefinitions"], [309, 1, 1, "", "getUnshapedParameterDefinitions"]], "armi.reactor.components.volumetricShapes": [[310, 2, 1, "", "Cube"], [310, 2, 1, "", "DifferentialRadialSegment"], [310, 2, 1, "", "RadialSegment"], [310, 2, 1, "", "Sphere"]], "armi.reactor.components.volumetricShapes.Cube": [[310, 4, 1, "", "DIMENSION_NAMES"], [310, 4, 1, "", "INIT_SIGNATURE"], [310, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [310, 3, 1, "", "getComponentArea"], [310, 3, 1, "", "getComponentVolume"], [310, 4, 1, "", "is3D"], [310, 4, 1, "", "material"], [310, 4, 1, "", "pDefs"], [310, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.DifferentialRadialSegment": [[310, 4, 1, "", "DIMENSION_NAMES"], [310, 4, 1, "", "INIT_SIGNATURE"], [310, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [310, 3, 1, "", "getComponentArea"], [310, 3, 1, "", "getComponentVolume"], [310, 4, 1, "", "is3D"], [310, 4, 1, "", "material"], [310, 4, 1, "", "paramCollectionType"], [310, 3, 1, "", "updateDims"]], "armi.reactor.components.volumetricShapes.RadialSegment": [[310, 4, 1, "", "DIMENSION_NAMES"], [310, 4, 1, "", "INIT_SIGNATURE"], [310, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [310, 3, 1, "", "getBoundingCircleOuterDiameter"], [310, 3, 1, "", "getComponentArea"], [310, 3, 1, "", "getComponentVolume"], [310, 4, 1, "", "is3D"], [310, 4, 1, "", "material"], [310, 4, 1, "", "pDefs"], [310, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.Sphere": [[310, 4, 1, "", "DIMENSION_NAMES"], [310, 4, 1, "", "INIT_SIGNATURE"], [310, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [310, 3, 1, "", "getBoundingCircleOuterDiameter"], [310, 3, 1, "", "getComponentArea"], [310, 3, 1, "", "getComponentVolume"], [310, 4, 1, "", "is3D"], [310, 4, 1, "", "material"], [310, 4, 1, "", "pDefs"], [310, 4, 1, "", "paramCollectionType"]], "armi.reactor.composites": [[311, 2, 1, "", "ArmiObject"], [311, 2, 1, "", "Composite"], [311, 2, 1, "", "CompositeModelType"], [311, 2, 1, "", "FlagSerializer"], [311, 2, 1, "", "StateRetainer"], [311, 1, 1, "", "gatherMaterialsByVolume"], [311, 1, 1, "", "getDominantMaterial"], [311, 1, 1, "", "getReactionRateDict"]], "armi.reactor.composites.ArmiObject": [[311, 3, 1, "", "addMass"], [311, 3, 1, "", "addMasses"], [311, 3, 1, "", "adjustMassEnrichment"], [311, 3, 1, "", "adjustMassFrac"], [311, 3, 1, "", "calcAvgParam"], [311, 3, 1, "", "calcTotalParam"], [311, 3, 1, "", "changeNDensByFactor"], [311, 3, 1, "", "clearCache"], [311, 3, 1, "", "clearNumberDensities"], [311, 3, 1, "", "constituentReport"], [311, 3, 1, "", "containsAtLeastOneChildWithFlags"], [311, 3, 1, "", "containsHeavyMetal"], [311, 3, 1, "", "containsOnlyChildrenWithFlags"], [311, 3, 1, "", "copyParamsFrom"], [311, 3, 1, "", "copyParamsToChildren"], [311, 3, 1, "", "density"], [311, 3, 1, "", "doChildrenHaveFlags"], [311, 3, 1, "", "duplicate"], [311, 3, 1, "", "expandAllElementalsToIsotopics"], [311, 3, 1, "", "expandElementalToIsotopics"], [311, 3, 1, "", "getAncestor"], [311, 3, 1, "", "getAncestorAndDistance"], [311, 3, 1, "", "getAncestorWithFlags"], [311, 3, 1, "", "getArea"], [311, 3, 1, "", "getAtomicWeight"], [311, 3, 1, "", "getAverageTempInC"], [311, 3, 1, "", "getBoundingIndices"], [311, 3, 1, "", "getChildParamValues"], [311, 3, 1, "", "getChildren"], [311, 3, 1, "", "getChildrenWithFlags"], [311, 3, 1, "", "getChildrenWithNuclides"], [311, 3, 1, "", "getComponent"], [311, 3, 1, "", "getComponentByName"], [311, 3, 1, "", "getComponentNames"], [311, 3, 1, "", "getComponents"], [311, 3, 1, "", "getComponentsOfMaterial"], [311, 3, 1, "", "getComponentsOfShape"], [311, 3, 1, "", "getDominantMaterial"], [311, 3, 1, "", "getFPMass"], [311, 3, 1, "", "getFissileMass"], [311, 3, 1, "", "getFissileMassEnrich"], [311, 3, 1, "", "getFuelMass"], [311, 3, 1, "", "getHMDens"], [311, 3, 1, "", "getHMMass"], [311, 3, 1, "", "getHMMoles"], [311, 3, 1, "", "getIntegratedMgFlux"], [311, 3, 1, "", "getLumpedFissionProductCollection"], [311, 3, 1, "", "getMass"], [311, 3, 1, "", "getMassFrac"], [311, 3, 1, "", "getMassFracs"], [311, 3, 1, "", "getMasses"], [311, 3, 1, "", "getMaxArea"], [311, 3, 1, "", "getMaxParam"], [311, 3, 1, "", "getMgFlux"], [311, 3, 1, "", "getMicroSuffix"], [311, 3, 1, "", "getMinParam"], [311, 3, 1, "", "getName"], [311, 3, 1, "", "getNuclideNumberDensities"], [311, 3, 1, "", "getNuclides"], [311, 3, 1, "", "getNumComponents"], [311, 3, 1, "", "getNumberDensities"], [311, 3, 1, "", "getNumberDensity"], [311, 3, 1, "", "getNumberOfAtoms"], [311, 3, 1, "", "getParamNames"], [311, 3, 1, "", "getParameterCollection"], [311, 3, 1, "", "getSymmetryFactor"], [311, 3, 1, "", "getTotalNDens"], [311, 3, 1, "", "getType"], [311, 3, 1, "", "getUraniumNumEnrich"], [311, 3, 1, "", "getVolume"], [311, 3, 1, "", "getVolumeFraction"], [311, 3, 1, "", "getVolumeFractions"], [311, 3, 1, "", "hasComponents"], [311, 3, 1, "", "hasFlags"], [311, 3, 1, "", "isFuel"], [311, 3, 1, "", "iterComponents"], [311, 3, 1, "", "nameContains"], [311, 4, 1, "", "pDefs"], [311, 4, 1, "", "paramCollectionType"], [311, 3, 1, "", "removeMass"], [311, 3, 1, "", "resolveLinkedDims"], [311, 3, 1, "", "setChildrenLumpedFissionProducts"], [311, 3, 1, "", "setComponentDimensionsReport"], [311, 3, 1, "", "setLumpedFissionProducts"], [311, 3, 1, "", "setMass"], [311, 3, 1, "", "setMassFrac"], [311, 3, 1, "", "setMassFracs"], [311, 3, 1, "", "setMasses"], [311, 3, 1, "", "setName"], [311, 3, 1, "", "setNumberDensities"], [311, 3, 1, "", "setNumberDensity"], [311, 3, 1, "", "setType"], [311, 3, 1, "", "updateNumberDensities"], [311, 3, 1, "", "updateParamsFrom"]], "armi.reactor.composites.Composite": [[311, 3, 1, "", "add"], [311, 3, 1, "", "append"], [311, 3, 1, "", "backUp"], [311, 3, 1, "", "extend"], [311, 3, 1, "", "getBoundingCircleOuterDiameter"], [311, 3, 1, "", "getChildren"], [311, 3, 1, "", "getChildrenOfType"], [311, 3, 1, "", "getChildrenWithFlags"], [311, 3, 1, "", "getComponents"], [311, 3, 1, "", "getIntegratedMgFlux"], [311, 3, 1, "", "getLumpedFissionProductCollection"], [311, 3, 1, "", "getLumpedFissionProductsIfNecessary"], [311, 3, 1, "", "getPuMoles"], [311, 3, 1, "", "getReactionRates"], [311, 3, 1, "", "index"], [311, 3, 1, "", "insert"], [311, 3, 1, "", "iterComponents"], [311, 3, 1, "", "moveTo"], [311, 4, 1, "", "paramCollectionType"], [311, 3, 1, "", "printContents"], [311, 3, 1, "", "remove"], [311, 3, 1, "", "removeAll"], [311, 3, 1, "", "requiresLumpedFissionProducts"], [311, 3, 1, "", "restoreBackup"], [311, 3, 1, "", "retainState"], [311, 3, 1, "", "setChildren"], [311, 3, 1, "", "sort"], [311, 3, 1, "", "syncMpiState"]], "armi.reactor.composites.CompositeModelType": [[311, 4, 1, "", "TYPES"]], "armi.reactor.composites.FlagSerializer": [[311, 3, 1, "", "pack"], [311, 3, 1, "", "unpack"], [311, 4, 1, "", "version"]], "armi.reactor.converters": [[313, 0, 0, "-", "axialExpansionChanger"], [317, 0, 0, "-", "blockConverters"], [318, 0, 0, "-", "geometryConverters"], [319, 0, 0, "-", "meshConverters"], [320, 0, 0, "-", "parameterSweeps"], [322, 0, 0, "-", "pinTypeBlockConverters"], [323, 0, 0, "-", "tests"], [330, 0, 0, "-", "uniformMesh"]], "armi.reactor.converters.axialExpansionChanger": [[314, 0, 0, "-", "assemblyAxialLinkage"], [315, 0, 0, "-", "axialExpansionChanger"], [316, 0, 0, "-", "expansionData"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage": [[314, 2, 1, "", "AssemblyAxialLinkage"], [314, 2, 1, "", "AxialLink"], [314, 1, 1, "", "areAxiallyLinked"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage": [[314, 3, 1, "", "areAxiallyLinked"], [314, 3, 1, "", "getLinkedBlocks"], [314, 4, 1, "", "linkedBlocks"], [314, 4, 1, "", "linkedComponents"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AxialLink": [[314, 4, 1, "", "lower"], [314, 4, 1, "", "upper"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger": [[315, 2, 1, "", "AxialExpansionChanger"], [315, 1, 1, "", "getDefaultReferenceAssem"], [315, 1, 1, "", "makeAssemsAbleToSnapToUniformMesh"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger": [[315, 3, 1, "", "applyColdHeightMassIncrease"], [315, 3, 1, "", "axiallyExpandAssembly"], [315, 3, 1, "", "expandColdDimsToHot"], [315, 4, 1, "", "expansionData"], [315, 4, 1, "", "linked"], [315, 3, 1, "", "manageCoreMesh"], [315, 3, 1, "", "performPrescribedAxialExpansion"], [315, 3, 1, "", "performThermalAxialExpansion"], [315, 3, 1, "", "reset"], [315, 3, 1, "", "setAssembly"]], "armi.reactor.converters.axialExpansionChanger.expansionData": [[316, 2, 1, "", "ExpansionData"], [316, 1, 1, "", "getSolidComponents"], [316, 1, 1, "", "iterSolidComponents"]], "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData": [[316, 4, 1, "", "componentReferenceTemperature"], [316, 3, 1, "", "computeThermalExpansionFactors"], [316, 3, 1, "", "determineTargetComponent"], [316, 3, 1, "", "getExpansionFactor"], [316, 3, 1, "", "isTargetComponent"], [316, 3, 1, "", "setExpansionFactors"], [316, 3, 1, "", "updateComponentTemp"], [316, 3, 1, "", "updateComponentTempsBy1DTempField"]], "armi.reactor.converters.blockConverters": [[317, 2, 1, "", "BlockAvgToCylConverter"], [317, 2, 1, "", "BlockConverter"], [317, 2, 1, "", "ComponentMerger"], [317, 2, 1, "", "HexComponentsToCylConverter"], [317, 2, 1, "", "MultipleComponentMerger"], [317, 1, 1, "", "getOuterDiamFromIDAndArea"], [317, 1, 1, "", "radiiFromHexPitches"], [317, 1, 1, "", "radiiFromHexSides"], [317, 1, 1, "", "radiiFromRingOfRods"], [317, 1, 1, "", "stripComponents"]], "armi.reactor.converters.blockConverters.BlockAvgToCylConverter": [[317, 3, 1, "", "convert"], [317, 3, 1, "", "plotConvertedBlock"]], "armi.reactor.converters.blockConverters.BlockConverter": [[317, 3, 1, "", "convert"], [317, 3, 1, "", "dissolveComponentIntoComponent"], [317, 3, 1, "", "restablishLinks"]], "armi.reactor.converters.blockConverters.ComponentMerger": [[317, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.HexComponentsToCylConverter": [[317, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.MultipleComponentMerger": [[317, 3, 1, "", "convert"]], "armi.reactor.converters.geometryConverters": [[318, 2, 1, "", "EdgeAssemblyChanger"], [318, 2, 1, "", "FuelAssemNumModifier"], [318, 2, 1, "", "GeometryChanger"], [318, 2, 1, "", "GeometryConverter"], [318, 2, 1, "", "HexToRZConverter"], [318, 2, 1, "", "HexToRZThetaConverter"], [318, 2, 1, "", "ThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger": [[318, 3, 1, "", "addEdgeAssemblies"], [318, 3, 1, "", "removeEdgeAssemblies"], [318, 3, 1, "", "scaleParamsRelatedToSymmetry"]], "armi.reactor.converters.geometryConverters.FuelAssemNumModifier": [[318, 3, 1, "", "addRing"], [318, 3, 1, "", "convert"], [318, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.GeometryChanger": [[318, 3, 1, "", "convert"], [318, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.HexToRZThetaConverter": [[318, 3, 1, "", "convert"], [318, 3, 1, "", "createHomogenizedRZTBlock"], [318, 3, 1, "", "plotConvertedReactor"], [318, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger": [[318, 4, 1, "", "EXPECTED_INPUT_SYMMETRY"], [318, 3, 1, "", "convert"], [318, 3, 1, "", "restorePreviousGeometry"]], "armi.reactor.converters.meshConverters": [[319, 2, 1, "", "MeshConverter"], [319, 2, 1, "", "RZThetaReactorMeshConverter"], [319, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialBins"], [319, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"], [319, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialFlags"], [319, 1, 1, "", "checkLastValueInList"], [319, 1, 1, "", "checkListBounds"], [319, 1, 1, "", "generateBins"]], "armi.reactor.converters.meshConverters.MeshConverter": [[319, 3, 1, "", "generateMesh"], [319, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter": [[319, 3, 1, "", "generateMesh"], [319, 3, 1, "", "setAxialMesh"], [319, 3, 1, "", "setRingsToConvert"], [319, 3, 1, "", "setThetaMesh"], [319, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.parameterSweeps": [[321, 0, 0, "-", "generalParameterSweepConverters"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters": [[321, 2, 1, "", "NeutronicConvergenceModifier"], [321, 2, 1, "", "ParameterSweepConverter"], [321, 2, 1, "", "SettingsModifier"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier": [[321, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter": [[321, 4, 1, "", "PRIORITY"], [321, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier": [[321, 3, 1, "", "convert"]], "armi.reactor.converters.pinTypeBlockConverters": [[322, 1, 1, "", "adjustCladThicknessByID"], [322, 1, 1, "", "adjustCladThicknessByOD"], [322, 1, 1, "", "adjustSmearDensity"]], "armi.reactor.converters.tests": [[324, 0, 0, "-", "test_axialExpansionChanger"], [325, 0, 0, "-", "test_blockConverter"], [326, 0, 0, "-", "test_geometryConverters"], [327, 0, 0, "-", "test_meshConverters"], [328, 0, 0, "-", "test_pinTypeBlockConverters"], [329, 0, 0, "-", "test_uniformMesh"]], "armi.reactor.converters.tests.test_axialExpansionChanger": [[324, 2, 1, "", "AxialExpansionTestBase"], [324, 2, 1, "", "FakeMat"], [324, 2, 1, "", "FakeMatException"], [324, 2, 1, "", "Temperature"], [324, 2, 1, "", "TestAxialExpansionHeight"], [324, 2, 1, "", "TestAxialLinkHelper"], [324, 2, 1, "", "TestBlockLink"], [324, 2, 1, "", "TestComponentLinks"], [324, 2, 1, "", "TestConservation"], [324, 2, 1, "", "TestDetermineTargetComponent"], [324, 2, 1, "", "TestExceptions"], [324, 2, 1, "", "TestGetSolidComponents"], [324, 2, 1, "", "TestInputHeightsConsideredHot"], [324, 2, 1, "", "TestManageCoreMesh"], [324, 1, 1, "", "buildTestAssemblyWithFakeMaterial"], [324, 1, 1, "", "checkColdBlockHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase": [[324, 4, 1, "", "Steel_Component_Lst"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat": [[324, 3, 1, "", "linearExpansionPercent"], [324, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException": [[324, 3, 1, "", "linearExpansionPercent"], [324, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight": [[324, 3, 1, "", "test_AssemblyAxialExpansionHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialLinkHelper": [[324, 3, 1, "", "test_construct"], [324, 3, 1, "", "test_override"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestBlockLink": [[324, 3, 1, "", "test_emptyBlocks"], [324, 3, 1, "", "test_multiBlock"], [324, 3, 1, "", "test_onAssembly"], [324, 3, 1, "", "test_singleBlock"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks": [[324, 3, 1, "", "runTest"], [324, 3, 1, "", "test_AnnularHexOverlappingThickAnnularHex"], [324, 3, 1, "", "test_annularPinNotOverlappingWithAnnulus"], [324, 3, 1, "", "test_annularPinOverlappingWithAnnuls"], [324, 3, 1, "", "test_differentMultNotOverlapping"], [324, 3, 1, "", "test_liquids"], [324, 3, 1, "", "test_overlappingSolidPins"], [324, 3, 1, "", "test_solidPinNotOverlappingAnnulus"], [324, 3, 1, "", "test_solidPinOverlappingWithAnnulus"], [324, 3, 1, "", "test_thinAnnularPinOverlappingWithThickAnnulus"], [324, 3, 1, "", "test_unshapedComponentAndCircle"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation": [[324, 3, 1, "", "complexConservationTest"], [324, 3, 1, "", "expandAssemForMassConservationTest"], [324, 3, 1, "", "test_computeThermalExpansionFactors"], [324, 3, 1, "", "test_noMovementACLP"], [324, 3, 1, "", "test_prescribedExpansionContractionConservation"], [324, 3, 1, "", "test_reset"], [324, 3, 1, "", "test_targetComponentMassConservation"], [324, 3, 1, "", "test_thermalExpansionContractionConservation_complex"], [324, 3, 1, "", "test_thermalExpansionContractionConservation_simple"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent": [[324, 3, 1, "", "test_determineTargetComponent"], [324, 3, 1, "", "test_determineTargetComponentBlockWithMultipleFlags"], [324, 3, 1, "", "test_manuallySetTargetComponent"], [324, 3, 1, "", "test_specifyTargetComponent_NotFound"], [324, 3, 1, "", "test_specifyTargetComponent_singleSolid"], [324, 3, 1, "", "test_specifyTargetComponet_MultipleFound"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions": [[324, 3, 1, "", "test_AssemblyAxialExpansionException"], [324, 3, 1, "", "test_determineLinked"], [324, 3, 1, "", "test_getLinkedComponents"], [324, 3, 1, "", "test_isFuelLocked"], [324, 3, 1, "", "test_isTopDummyBlockPresent"], [324, 3, 1, "", "test_setExpansionFactors"], [324, 3, 1, "", "test_updateComponentTempsBy1DTempFieldRuntimeError"], [324, 3, 1, "", "test_updateComponentTempsBy1DTempFieldValueError"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents": [[324, 3, 1, "", "test_getSolidComponents"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot": [[324, 3, 1, "", "checkColdHeightBlockMass"], [324, 3, 1, "", "test_coldAssemblyExpansion"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh": [[324, 3, 1, "", "test_componentConservation"], [324, 3, 1, "", "test_manageCoreMesh"]], "armi.reactor.converters.tests.test_blockConverter": [[325, 2, 1, "", "TestBlockConverter"], [325, 2, 1, "", "TestToCircles"], [325, 1, 1, "", "buildControlBlockWithLinkedNegativeAreaComponent"], [325, 1, 1, "", "buildSimpleFuelBlockNegativeArea"]], "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter": [[325, 3, 1, "", "test_buildInsideDuct"], [325, 3, 1, "", "test_build_NthRing"], [325, 3, 1, "", "test_convert"], [325, 3, 1, "", "test_convertCartesianLatticeWithFuelDriver"], [325, 3, 1, "", "test_convertHexWithFuelDriver"], [325, 3, 1, "", "test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"], [325, 3, 1, "", "test_dissolveIntoNegativeArea"], [325, 3, 1, "", "test_dissolveIntoZeroArea"], [325, 3, 1, "", "test_dissolveLinerIntoClad"], [325, 3, 1, "", "test_dissolveMultiple"], [325, 3, 1, "", "test_dissolveNegativeArea"], [325, 3, 1, "", "test_dissolveWireIntoCoolant"], [325, 3, 1, "", "test_dissolveZeroArea"]], "armi.reactor.converters.tests.test_blockConverter.TestToCircles": [[325, 3, 1, "", "test_fromHex"], [325, 3, 1, "", "test_fromRingOfRods"]], "armi.reactor.converters.tests.test_geometryConverters": [[326, 2, 1, "", "TestEdgeAssemblyChanger"], [326, 2, 1, "", "TestGeometryConverters"], [326, 2, 1, "", "TestHexToRZConverter"], [326, 2, 1, "", "TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger": [[326, 3, 1, "", "test_edgeAssemblies"]], "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters": [[326, 3, 1, "", "test_addRing"], [326, 3, 1, "", "test_getAssembliesInSector"], [326, 3, 1, "", "test_setNumberOfFuelAssems"]], "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter": [[326, 3, 1, "", "test_convert"], [326, 3, 1, "", "test_createHomogenizedRZTBlock"]], "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger": [[326, 3, 1, "", "test_growToFullCoreFromThirdCore"], [326, 3, 1, "", "test_initNewFullReactor"], [326, 3, 1, "", "test_skipGrowToFullCoreWhenAlreadyFullCore"]], "armi.reactor.converters.tests.test_meshConverters": [[327, 2, 1, "", "TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter": [[327, 3, 1, "", "test_meshByRingCompositionAxialBinsLargeCore"], [327, 3, 1, "", "test_meshByRingCompositionAxialBinsSmallCore"], [327, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesLargeCore"], [327, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesSmallCore"], [327, 3, 1, "", "test_meshByRingCompositionAxialFlagsLargeCore"], [327, 3, 1, "", "test_meshByRingCompositionAxialFlagsSmallCore"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters": [[328, 2, 1, "", "MassConservationTests"], [328, 2, 1, "", "TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests": [[328, 3, 1, "", "test_adjustSmearDensity"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters": [[328, 3, 1, "", "test_adjustCladThicknessByID"], [328, 3, 1, "", "test_adjustCladThicknessByOD"]], "armi.reactor.converters.tests.test_uniformMesh": [[329, 2, 1, "", "DummyFluxOptions"], [329, 2, 1, "", "TestAssemblyUniformMesh"], [329, 2, 1, "", "TestCalcReationRates"], [329, 2, 1, "", "TestConverterFactory"], [329, 2, 1, "", "TestGammaUniformMesh"], [329, 2, 1, "", "TestParamConversion"], [329, 2, 1, "", "TestUniformMesh"], [329, 2, 1, "", "TestUniformMeshComponents"], [329, 2, 1, "", "TestUniformMeshGenerator"], [329, 2, 1, "", "TestUniformMeshNonUniformAssemFlags"], [329, 1, 1, "", "applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh": [[329, 3, 1, "", "test_clearAssemblyState"], [329, 3, 1, "", "test_makeAssemUniformMeshParamMappingSameMesh"], [329, 3, 1, "", "test_makeAssemWithUniformMesh"], [329, 3, 1, "", "test_makeAssemWithUniformMeshSubmesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestCalcReationRates": [[329, 3, 1, "", "test_calcReactionRatesBlockList"]], "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory": [[329, 3, 1, "", "test_converterFactory"]], "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh": [[329, 3, 1, "", "test_applyStateToOriginal"], [329, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion": [[329, 3, 1, "", "test_setStateFromOverlaps"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh": [[329, 3, 1, "", "test_applyStateToOriginal"], [329, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents": [[329, 3, 1, "", "test_blueprintCopy"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator": [[329, 3, 1, "", "test_computeAverageAxialMesh"], [329, 3, 1, "", "test_filterMesh"], [329, 3, 1, "", "test_filteredTopAndBottom"], [329, 3, 1, "", "test_generateCommonMesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags": [[329, 3, 1, "", "test_reactorConversion"]], "armi.reactor.converters.uniformMesh": [[330, 2, 1, "", "GammaUniformMeshConverter"], [330, 2, 1, "", "NeutronicsUniformMeshConverter"], [330, 2, 1, "", "ParamMapper"], [330, 2, 1, "", "UniformMeshGenerator"], [330, 2, 1, "", "UniformMeshGeometryConverter"], [330, 1, 1, "", "converterFactory"], [330, 1, 1, "", "setNumberDensitiesFromOverlaps"]], "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter": [[330, 4, 1, "", "blockParamMappingCategories"], [330, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter": [[330, 4, 1, "", "blockParamMappingCategories"], [330, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.ParamMapper": [[330, 3, 1, "", "paramGetter"], [330, 3, 1, "", "paramSetter"]], "armi.reactor.converters.uniformMesh.UniformMeshGenerator": [[330, 3, 1, "", "generateCommonMesh"]], "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter": [[330, 3, 1, "", "applyStateToOriginal"], [330, 4, 1, "", "blockParamMappingCategories"], [330, 3, 1, "", "clearStateOnAssemblies"], [330, 3, 1, "", "convert"], [330, 3, 1, "", "initNewReactor"], [330, 3, 1, "", "makeAssemWithUniformMesh"], [330, 3, 1, "", "plotConvertedReactor"], [330, 4, 1, "", "reactorParamMappingCategories"], [330, 3, 1, "", "reset"], [330, 3, 1, "", "setAssemblyStateFromOverlaps"], [330, 3, 1, "", "updateReactionRates"]], "armi.reactor.cores": [[331, 2, 1, "", "Core"]], "armi.reactor.cores.Core": [[331, 3, 1, "", "add"], [331, 3, 1, "", "addMoreNodes"], [331, 3, 1, "", "buildCircularRingDictionary"], [331, 3, 1, "", "buildManualZones"], [331, 3, 1, "", "calcBlockMaxes"], [331, 3, 1, "", "countBlocksWithFlags"], [331, 3, 1, "", "countFuelAxialBlocks"], [331, 3, 1, "", "createAssemblyOfType"], [331, 3, 1, "", "createFreshFeed"], [331, 3, 1, "", "findAllAxialMeshPoints"], [331, 3, 1, "", "findAllAziMeshPoints"], [331, 3, 1, "", "findAllMeshPoints"], [331, 3, 1, "", "findAllRadMeshPoints"], [331, 3, 1, "", "findAxialMeshIndexOf"], [331, 3, 1, "", "findNeighbors"], [331, 3, 1, "", "genAssembliesAddedThisCycle"], [331, 3, 1, "", "genBlocksByLocName"], [331, 5, 1, "", "geomType"], [331, 3, 1, "", "getAllXsSuffixes"], [331, 3, 1, "", "getAssemblies"], [331, 3, 1, "", "getAssembliesInCircularRing"], [331, 3, 1, "", "getAssembliesInRing"], [331, 3, 1, "", "getAssembliesInSquareOrHexRing"], [331, 3, 1, "", "getAssembliesOfType"], [331, 3, 1, "", "getAssembliesOnSymmetryLine"], [331, 3, 1, "", "getAssembly"], [331, 3, 1, "", "getAssemblyByName"], [331, 3, 1, "", "getAssemblyPitch"], [331, 3, 1, "", "getAssemblyWithAssemNum"], [331, 3, 1, "", "getAssemblyWithStringLocation"], [331, 3, 1, "", "getAvgTemp"], [331, 3, 1, "", "getBlockByName"], [331, 3, 1, "", "getBlocks"], [331, 3, 1, "", "getBlocksByIndices"], [331, 3, 1, "", "getCoreRadius"], [331, 3, 1, "", "getFirstAssembly"], [331, 3, 1, "", "getFirstBlock"], [331, 3, 1, "", "getFirstFuelBlockAxialNode"], [331, 3, 1, "", "getFluxVector"], [331, 3, 1, "", "getFuelBottomHeight"], [331, 3, 1, "", "getLocationContents"], [331, 3, 1, "", "getMaxAssembliesInHexRing"], [331, 3, 1, "", "getMaxBlockParam"], [331, 3, 1, "", "getMaxNumPins"], [331, 3, 1, "", "getMinimumPercentFluxInFuel"], [331, 3, 1, "", "getNozzleTypes"], [331, 3, 1, "", "getNuclideCategories"], [331, 3, 1, "", "getNumAssembliesWithAllRingsFilledOut"], [331, 3, 1, "", "getNumEnergyGroups"], [331, 3, 1, "", "getNumHexRings"], [331, 3, 1, "", "getNumRings"], [331, 3, 1, "", "getScalarEvolution"], [331, 3, 1, "", "getTotalBlockParam"], [331, 3, 1, "", "growToFullCore"], [331, 5, 1, "", "isFullCore"], [331, 5, 1, "", "lib"], [331, 3, 1, "", "locateAllAssemblies"], [331, 3, 1, "", "makeLocationLookup"], [331, 3, 1, "", "normalizeInternalBookeeping"], [331, 3, 1, "", "normalizeNames"], [331, 4, 1, "", "pDefs"], [331, 4, 1, "", "paramCollectionType"], [331, 5, 1, "", "powerMultiplier"], [331, 3, 1, "", "processLoading"], [331, 5, 1, "", "r"], [331, 5, 1, "", "refAssem"], [331, 3, 1, "", "regenAssemblyLists"], [331, 3, 1, "", "removeAssembliesInRing"], [331, 3, 1, "", "removeAssembly"], [331, 3, 1, "", "saveAllFlux"], [331, 3, 1, "", "setBlockMassParams"], [331, 3, 1, "", "setMoveList"], [331, 3, 1, "", "setOptionsFromCs"], [331, 3, 1, "", "setPitchUniform"], [331, 3, 1, "", "setPowerFromDensity"], [331, 3, 1, "", "setPowerIfNecessary"], [331, 3, 1, "", "sortAssemsByRing"], [331, 3, 1, "", "summarizeNuclideCategories"], [331, 3, 1, "", "summarizeReactorStats"], [331, 5, 1, "", "symmetry"], [331, 3, 1, "", "updateAxialMesh"]], "armi.reactor.excoreStructure": [[332, 2, 1, "", "ExcoreCollection"], [332, 2, 1, "", "ExcoreStructure"]], "armi.reactor.excoreStructure.ExcoreStructure": [[332, 3, 1, "", "add"], [332, 4, 1, "", "paramCollectionType"], [332, 5, 1, "", "r"]], "armi.reactor.flags": [[333, 2, 1, "", "Flags"], [333, 7, 1, "", "InvalidFlagsError"]], "armi.reactor.flags.Flags": [[333, 4, 1, "", "A"], [333, 4, 1, "", "ACLP"], [333, 4, 1, "", "ANNULAR"], [333, 4, 1, "", "AXIAL"], [333, 4, 1, "", "B"], [333, 4, 1, "", "BATCHMASSADDITION"], [333, 4, 1, "", "BLANKET"], [333, 4, 1, "", "BOND"], [333, 4, 1, "", "BOOSTER"], [333, 4, 1, "", "C"], [333, 4, 1, "", "CLAD"], [333, 4, 1, "", "CONTROL"], [333, 4, 1, "", "COOLANT"], [333, 4, 1, "", "CORE_BARREL"], [333, 4, 1, "", "D"], [333, 4, 1, "", "DEPLETABLE"], [333, 4, 1, "", "DRIVER"], [333, 4, 1, "", "DSPACERINSIDE"], [333, 4, 1, "", "DUCT"], [333, 4, 1, "", "DUMMY"], [333, 4, 1, "", "E"], [333, 4, 1, "", "FEED"], [333, 4, 1, "", "FISSION_CHAMBER"], [333, 4, 1, "", "FUEL"], [333, 4, 1, "", "GAP"], [333, 4, 1, "", "GRID_PLATE"], [333, 4, 1, "", "GUIDE_TUBE"], [333, 4, 1, "", "HANDLING_SOCKET"], [333, 4, 1, "", "HIGH"], [333, 4, 1, "", "IGNITER"], [333, 4, 1, "", "INLET_NOZZLE"], [333, 4, 1, "", "INNER"], [333, 4, 1, "", "INTERCOOLANT"], [333, 4, 1, "", "INTERDUCTCOOLANT"], [333, 4, 1, "", "LINER"], [333, 4, 1, "", "LOAD_PAD"], [333, 4, 1, "", "LOW"], [333, 4, 1, "", "LOWER"], [333, 4, 1, "", "MATERIAL"], [333, 4, 1, "", "MEDIUM"], [333, 4, 1, "", "MIDDLE"], [333, 4, 1, "", "MODERATOR"], [333, 4, 1, "", "MOVEABLE"], [333, 4, 1, "", "MOX"], [333, 4, 1, "", "OUTER"], [333, 4, 1, "", "PIN"], [333, 4, 1, "", "PLENUM"], [333, 4, 1, "", "POISON"], [333, 4, 1, "", "PRIMARY"], [333, 4, 1, "", "RADIAL"], [333, 4, 1, "", "REFLECTOR"], [333, 4, 1, "", "SECONDARY"], [333, 4, 1, "", "SHIELD"], [333, 4, 1, "", "SHIELD_BLOCK"], [333, 4, 1, "", "SHUTDOWN"], [333, 4, 1, "", "SKID"], [333, 4, 1, "", "SLUG"], [333, 4, 1, "", "STARTER"], [333, 4, 1, "", "STRUCTURE"], [333, 4, 1, "", "TARGET"], [333, 4, 1, "", "TERTIARY"], [333, 4, 1, "", "TEST"], [333, 4, 1, "", "ULTIMATE"], [333, 4, 1, "", "UPPER"], [333, 4, 1, "", "VOID"], [333, 4, 1, "", "WIRE"], [333, 3, 1, "", "fromString"], [333, 3, 1, "", "fromStringIgnoreErrors"], [333, 3, 1, "", "toString"]], "armi.reactor.geometry": [[334, 2, 1, "", "BoundaryType"], [334, 2, 1, "", "DomainType"], [334, 2, 1, "", "GeomType"], [334, 2, 1, "", "SymmetryType"], [334, 1, 1, "", "checkValidGeomSymmetryCombo"]], "armi.reactor.geometry.BoundaryType": [[334, 4, 1, "", "NO_SYMMETRY"], [334, 4, 1, "", "PERIODIC"], [334, 4, 1, "", "REFLECTIVE"], [334, 3, 1, "", "fromAny"], [334, 3, 1, "", "fromStr"], [334, 3, 1, "", "hasSymmetry"], [334, 5, 1, "", "label"]], "armi.reactor.geometry.DomainType": [[334, 4, 1, "", "EIGHTH_CORE"], [334, 4, 1, "", "FULL_CORE"], [334, 4, 1, "", "NULL"], [334, 4, 1, "", "QUARTER_CORE"], [334, 4, 1, "", "SIXTEENTH_CORE"], [334, 4, 1, "", "THIRD_CORE"], [334, 3, 1, "", "fromAny"], [334, 3, 1, "", "fromStr"], [334, 5, 1, "", "label"], [334, 3, 1, "", "symmetryFactor"]], "armi.reactor.geometry.GeomType": [[334, 4, 1, "", "CARTESIAN"], [334, 4, 1, "", "HEX"], [334, 4, 1, "", "RZ"], [334, 4, 1, "", "RZT"], [334, 3, 1, "", "fromAny"], [334, 3, 1, "", "fromStr"], [334, 5, 1, "", "label"]], "armi.reactor.geometry.SymmetryType": [[334, 4, 1, "", "VALID_SYMMETRY"], [334, 3, 1, "", "checkValidSymmetry"], [334, 3, 1, "", "createValidSymmetryStrings"], [334, 3, 1, "", "fromAny"], [334, 3, 1, "", "fromStr"], [334, 3, 1, "", "symmetryFactor"]], "armi.reactor.grids": [[336, 0, 0, "-", "axial"], [337, 0, 0, "-", "cartesian"], [338, 0, 0, "-", "constants"], [339, 0, 0, "-", "grid"], [340, 0, 0, "-", "hexagonal"], [341, 0, 0, "-", "locations"], [335, 1, 1, "", "locatorLabelToIndices"], [342, 0, 0, "-", "structuredGrid"], [343, 0, 0, "-", "thetarz"]], "armi.reactor.grids.axial": [[336, 2, 1, "", "AxialGrid"]], "armi.reactor.grids.axial.AxialGrid": [[336, 4, 1, "", "armiObject"], [336, 3, 1, "", "fromNCells"], [336, 3, 1, "", "getIndicesFromRingAndPos"], [336, 3, 1, "", "getMinimumRings"], [336, 3, 1, "", "getPositionsInRing"], [336, 3, 1, "", "getSymmetricEquivalents"], [336, 3, 1, "", "locatorInDomain"], [336, 3, 1, "", "overlapsWhichSymmetryLine"], [336, 5, 1, "", "pitch"]], "armi.reactor.grids.cartesian": [[337, 2, 1, "", "CartesianGrid"]], "armi.reactor.grids.cartesian.CartesianGrid": [[337, 4, 1, "", "armiObject"], [337, 3, 1, "", "changePitch"], [337, 3, 1, "", "fromRectangle"], [337, 3, 1, "", "getIndicesFromRingAndPos"], [337, 3, 1, "", "getMinimumRings"], [337, 3, 1, "", "getPositionsInRing"], [337, 3, 1, "", "getRingPos"], [337, 3, 1, "", "getSymmetricEquivalents"], [337, 3, 1, "", "locatorInDomain"], [337, 3, 1, "", "overlapsWhichSymmetryLine"], [337, 5, 1, "", "pitch"]], "armi.reactor.grids.grid": [[339, 2, 1, "", "Grid"]], "armi.reactor.grids.grid.Grid": [[339, 4, 1, "", "armiObject"], [339, 3, 1, "", "backUp"], [339, 5, 1, "", "geomType"], [339, 3, 1, "", "getCellBase"], [339, 3, 1, "", "getCellTop"], [339, 3, 1, "", "getCoordinates"], [339, 3, 1, "", "getLabel"], [339, 3, 1, "", "getSymmetricEquivalents"], [339, 5, 1, "", "isAxialOnly"], [339, 3, 1, "", "items"], [339, 3, 1, "", "locatorInDomain"], [339, 3, 1, "", "overlapsWhichSymmetryLine"], [339, 3, 1, "", "reduce"], [339, 3, 1, "", "restoreBackup"], [339, 5, 1, "", "symmetry"]], "armi.reactor.grids.hexagonal": [[340, 2, 1, "", "HexGrid"]], "armi.reactor.grids.hexagonal.HexGrid": [[340, 4, 1, "", "armiObject"], [340, 3, 1, "", "changePitch"], [340, 5, 1, "", "cornersUp"], [340, 3, 1, "", "fromPitch"], [340, 3, 1, "", "generateSortedHexLocationList"], [340, 3, 1, "", "getIndicesFromRingAndPos"], [340, 3, 1, "", "getLabel"], [340, 3, 1, "", "getMinimumRings"], [340, 3, 1, "", "getNeighboringCellIndices"], [340, 3, 1, "", "getPositionsInRing"], [340, 3, 1, "", "getRingPos"], [340, 3, 1, "", "getSymmetricEquivalents"], [340, 3, 1, "", "indicesToRingPos"], [340, 3, 1, "", "isInFirstThird"], [340, 3, 1, "", "locatorInDomain"], [340, 3, 1, "", "overlapsWhichSymmetryLine"], [340, 5, 1, "", "pitch"], [340, 3, 1, "", "rotateIndex"], [340, 3, 1, "", "triangleCoords"]], "armi.reactor.grids.locations": [[341, 2, 1, "", "CoordinateLocation"], [341, 2, 1, "", "IndexLocation"], [341, 2, 1, "", "LocationBase"], [341, 2, 1, "", "MultiIndexLocation"], [341, 1, 1, "", "addingIsValid"]], "armi.reactor.grids.locations.CoordinateLocation": [[341, 3, 1, "", "getCompleteIndices"], [341, 3, 1, "", "getGlobalCellBase"], [341, 3, 1, "", "getGlobalCellTop"], [341, 3, 1, "", "getLocalCoordinates"]], "armi.reactor.grids.locations.IndexLocation": [[341, 3, 1, "", "detachedCopy"], [341, 3, 1, "", "distanceTo"], [341, 3, 1, "", "getCompleteIndices"], [341, 3, 1, "", "getGlobalCellBase"], [341, 3, 1, "", "getGlobalCellTop"], [341, 3, 1, "", "getGlobalCoordinates"], [341, 3, 1, "", "getLocalCoordinates"], [341, 3, 1, "", "getRingPos"], [341, 3, 1, "", "getSymmetricEquivalents"], [341, 5, 1, "", "indices"], [341, 5, 1, "", "parentLocation"]], "armi.reactor.grids.locations.LocationBase": [[341, 3, 1, "", "associate"], [341, 5, 1, "", "grid"], [341, 5, 1, "", "i"], [341, 5, 1, "", "indices"], [341, 5, 1, "", "j"], [341, 5, 1, "", "k"]], "armi.reactor.grids.locations.MultiIndexLocation": [[341, 3, 1, "", "append"], [341, 3, 1, "", "associate"], [341, 3, 1, "", "detachedCopy"], [341, 3, 1, "", "extend"], [341, 3, 1, "", "getCompleteIndices"], [341, 5, 1, "", "indices"], [341, 3, 1, "", "pop"]], "armi.reactor.grids.structuredGrid": [[342, 2, 1, "", "GridParameters"], [342, 2, 1, "", "StructuredGrid"]], "armi.reactor.grids.structuredGrid.GridParameters": [[342, 4, 1, "", "bounds"], [342, 4, 1, "", "geomType"], [342, 4, 1, "", "offset"], [342, 4, 1, "", "symmetry"], [342, 4, 1, "", "unitStepLimits"], [342, 4, 1, "", "unitSteps"]], "armi.reactor.grids.structuredGrid.StructuredGrid": [[342, 4, 1, "", "armiObject"], [342, 3, 1, "", "backUp"], [342, 3, 1, "", "getAboveAndBelowCellIndices"], [342, 3, 1, "", "getAllIndices"], [342, 3, 1, "", "getBounds"], [342, 3, 1, "", "getCellBase"], [342, 3, 1, "", "getCellTop"], [342, 3, 1, "", "getCoordinates"], [342, 3, 1, "", "getIndexBounds"], [342, 3, 1, "", "getIndicesFromRingAndPos"], [342, 3, 1, "", "getLocatorFromRingAndPos"], [342, 3, 1, "", "getMinimumRings"], [342, 3, 1, "", "getNeighboringCellIndices"], [342, 3, 1, "", "getPositionsInRing"], [342, 3, 1, "", "getRingPos"], [342, 5, 1, "", "isAxialOnly"], [342, 3, 1, "", "items"], [342, 5, 1, "", "offset"], [342, 5, 1, "", "pitch"], [342, 3, 1, "", "reduce"], [342, 3, 1, "", "restoreBackup"]], "armi.reactor.grids.thetarz": [[343, 2, 1, "", "ThetaRZGrid"]], "armi.reactor.grids.thetarz.ThetaRZGrid": [[343, 4, 1, "", "armiObject"], [343, 3, 1, "", "fromGeom"], [343, 3, 1, "", "getCoordinates"], [343, 3, 1, "", "getIndicesFromRingAndPos"], [343, 3, 1, "", "getMinimumRings"], [343, 3, 1, "", "getPositionsInRing"], [343, 3, 1, "", "getRingPos"], [343, 3, 1, "", "getSymmetricEquivalents"], [343, 3, 1, "", "indicesOfBounds"], [343, 3, 1, "", "locatorInDomain"], [343, 3, 1, "", "overlapsWhichSymmetryLine"], [343, 3, 1, "", "pitch"]], "armi.reactor.parameters": [[345, 0, 0, "-", "exceptions"], [346, 0, 0, "-", "parameterCollections"], [347, 0, 0, "-", "parameterDefinitions"], [344, 1, 1, "", "reset"], [348, 0, 0, "-", "resolveCollections"]], "armi.reactor.parameters.exceptions": [[345, 7, 1, "", "ParameterDefinitionError"], [345, 7, 1, "", "ParameterError"], [345, 7, 1, "", "UnknownParameterError"]], "armi.reactor.parameters.parameterCollections": [[346, 6, 1, "", "GLOBAL_SERIAL_NUM"], [346, 2, 1, "", "ParameterCollection"], [346, 1, 1, "", "applyAllParameters"], [346, 1, 1, "", "collectPluginParameters"]], "armi.reactor.parameters.parameterCollections.ParameterCollection": [[346, 3, 1, "", "applyParameters"], [346, 3, 1, "", "backUp"], [346, 3, 1, "", "get"], [346, 3, 1, "", "getSyncData"], [346, 3, 1, "", "items"], [346, 3, 1, "", "keys"], [346, 4, 1, "", "pDefs"], [346, 5, 1, "", "paramDefs"], [346, 3, 1, "", "restoreBackup"], [346, 4, 1, "", "serialNum"], [346, 3, 1, "", "update"], [346, 3, 1, "", "values"], [346, 3, 1, "", "where"]], "armi.reactor.parameters.parameterDefinitions": [[347, 2, 1, "", "Category"], [347, 2, 1, "", "NoDefault"], [347, 2, 1, "", "ParamLocation"], [347, 2, 1, "", "Parameter"], [347, 2, 1, "", "ParameterBuilder"], [347, 2, 1, "", "ParameterDefinitionCollection"], [347, 2, 1, "", "Serializer"], [347, 1, 1, "", "isNumpyArray"], [347, 1, 1, "", "isNumpyF32Array"]], "armi.reactor.parameters.parameterDefinitions.Category": [[347, 4, 1, "", "assignInBlueprints"], [347, 4, 1, "", "cumulative"], [347, 4, 1, "", "cumulativeOverCycle"], [347, 4, 1, "", "depletion"], [347, 4, 1, "", "detailedAxialExpansion"], [347, 4, 1, "", "fluxQuantities"], [347, 4, 1, "", "gamma"], [347, 4, 1, "", "multiGroupQuantities"], [347, 4, 1, "", "neutronics"], [347, 4, 1, "", "pinQuantities"], [347, 4, 1, "", "reactivityCoefficients"], [347, 4, 1, "", "retainOnReplacement"], [347, 4, 1, "", "thermalHydraulics"]], "armi.reactor.parameters.parameterDefinitions.ParamLocation": [[347, 4, 1, "", "AVERAGE"], [347, 4, 1, "", "BOTTOM"], [347, 4, 1, "", "CENTROID"], [347, 4, 1, "", "CHILDREN"], [347, 4, 1, "", "CORNERS"], [347, 4, 1, "", "EDGES"], [347, 4, 1, "", "MAX"], [347, 4, 1, "", "TOP"], [347, 4, 1, "", "VOLUME_INTEGRATED"]], "armi.reactor.parameters.parameterDefinitions.Parameter": [[347, 4, 1, "", "assigned"], [347, 3, 1, "", "atLocation"], [347, 3, 1, "", "backUp"], [347, 4, 1, "", "categories"], [347, 4, 1, "", "collectionType"], [347, 4, 1, "", "default"], [347, 4, 1, "", "description"], [347, 4, 1, "", "fieldName"], [347, 3, 1, "", "hasCategory"], [347, 4, 1, "", "location"], [347, 4, 1, "", "name"], [347, 3, 1, "", "restoreBackup"], [347, 4, 1, "", "saveToDB"], [347, 4, 1, "", "serializer"], [347, 3, 1, "", "setter"], [347, 4, 1, "", "units"]], "armi.reactor.parameters.parameterDefinitions.ParameterBuilder": [[347, 3, 1, "", "associateParameterDefinitionCollection"], [347, 3, 1, "", "defParam"]], "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection": [[347, 3, 1, "", "add"], [347, 3, 1, "", "atLocation"], [347, 3, 1, "", "byNameAndCollectionType"], [347, 3, 1, "", "byNameAndType"], [347, 5, 1, "", "categories"], [347, 3, 1, "", "createBuilder"], [347, 3, 1, "", "extend"], [347, 3, 1, "", "forType"], [347, 3, 1, "", "inCategory"], [347, 3, 1, "", "items"], [347, 3, 1, "", "lock"], [347, 5, 1, "", "locked"], [347, 5, 1, "", "names"], [347, 3, 1, "", "resetAssignmentFlag"], [347, 3, 1, "", "setAssignmentFlag"], [347, 3, 1, "", "since"], [347, 3, 1, "", "toWriteToDB"], [347, 3, 1, "", "unchanged_since"]], "armi.reactor.parameters.parameterDefinitions.Serializer": [[347, 3, 1, "", "pack"], [347, 3, 1, "", "unpack"], [347, 4, 1, "", "version"]], "armi.reactor.parameters.resolveCollections": [[348, 2, 1, "", "ResolveParametersMeta"]], "armi.reactor.reactorParameters": [[349, 1, 1, "", "defineCoreParameters"], [349, 1, 1, "", "defineReactorParameters"], [349, 1, 1, "", "makeParametersReadOnly"]], "armi.reactor.reactors": [[350, 2, 1, "", "Reactor"], [350, 1, 1, "", "factory"], [350, 1, 1, "", "loadFromCs"]], "armi.reactor.reactors.Reactor": [[350, 3, 1, "", "add"], [350, 3, 1, "", "incrementAssemNum"], [350, 3, 1, "", "normalizeNames"], [350, 4, 1, "", "pDefs"], [350, 4, 1, "", "paramCollectionType"]], "armi.reactor.spentFuelPool": [[351, 2, 1, "", "SpentFuelPool"]], "armi.reactor.spentFuelPool.SpentFuelPool": [[351, 3, 1, "", "add"], [351, 3, 1, "", "getAssembly"], [351, 3, 1, "", "normalizeNames"], [351, 4, 1, "", "paramCollectionType"]], "armi.reactor.systemLayoutInput": [[352, 2, 1, "", "SystemLayoutInput"]], "armi.reactor.systemLayoutInput.SystemLayoutInput": [[352, 4, 1, "", "ROOT_TAG"], [352, 3, 1, "", "fromReactor"], [352, 3, 1, "", "growToFullCore"], [352, 3, 1, "", "loadFromCs"], [352, 3, 1, "", "modifyEqPaths"], [352, 3, 1, "", "readGeomFromFile"], [352, 3, 1, "", "readGeomFromStream"], [352, 3, 1, "", "toGridBlueprints"], [352, 3, 1, "", "writeGeom"]], "armi.reactor.tests": [[354, 0, 0, "-", "test_assemblies"], [355, 0, 0, "-", "test_blocks"], [356, 0, 0, "-", "test_components"], [357, 0, 0, "-", "test_composites"], [358, 0, 0, "-", "test_excoreStructures"], [359, 0, 0, "-", "test_flags"], [360, 0, 0, "-", "test_geometry"], [361, 0, 0, "-", "test_hexBlockRotate"], [362, 0, 0, "-", "test_parameters"], [363, 0, 0, "-", "test_reactors"], [364, 0, 0, "-", "test_rz_reactors"], [365, 0, 0, "-", "test_zones"]], "armi.reactor.tests.test_assemblies": [[354, 2, 1, "", "AnnularFuelTestCase"], [354, 2, 1, "", "AssemblyInReactor_TestCase"], [354, 2, 1, "", "Assembly_TestCase"], [354, 2, 1, "", "MaterialInAssembly_TestCase"], [354, 1, 1, "", "buildTestAssemblies"], [354, 1, 1, "", "makeTestAssembly"]], "armi.reactor.tests.test_assemblies.AnnularFuelTestCase": [[354, 3, 1, "", "test_areaCheck"]], "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase": [[354, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"], [354, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "armi.reactor.tests.test_assemblies.Assembly_TestCase": [[354, 3, 1, "", "test_add"], [354, 3, 1, "", "test_adjustResolution"], [354, 3, 1, "", "test_append"], [354, 3, 1, "", "test_assem_block_types"], [354, 3, 1, "", "test_assem_hex_type"], [354, 3, 1, "", "test_averagePlenumTemperature"], [354, 3, 1, "", "test_calcAvgParam"], [354, 3, 1, "", "test_calcTotalParam"], [354, 3, 1, "", "test_calculateZCoords"], [354, 3, 1, "", "test_carestianCoordinates"], [354, 3, 1, "", "test_countBlocksOfType"], [354, 3, 1, "", "test_duplicate"], [354, 3, 1, "", "test_extend"], [354, 3, 1, "", "test_getAge"], [354, 3, 1, "", "test_getArea"], [354, 3, 1, "", "test_getAxialMesh"], [354, 3, 1, "", "test_getBIndexFromZIndex"], [354, 3, 1, "", "test_getBlockData"], [354, 3, 1, "", "test_getBlocks"], [354, 3, 1, "", "test_getBlocksAndZ"], [354, 3, 1, "", "test_getBlocksBetweenElevations"], [354, 3, 1, "", "test_getDim"], [354, 3, 1, "", "test_getDominantMaterial"], [354, 3, 1, "", "test_getElevationBoundariesByBlockType"], [354, 3, 1, "", "test_getElevationsMatchingParamValue"], [354, 3, 1, "", "test_getFirstBlock"], [354, 3, 1, "", "test_getFirstBlockByType"], [354, 3, 1, "", "test_getFissileMass"], [354, 3, 1, "", "test_getHeight"], [354, 3, 1, "", "test_getLocation"], [354, 3, 1, "", "test_getMass"], [354, 3, 1, "", "test_getMaxParam"], [354, 3, 1, "", "test_getName"], [354, 3, 1, "", "test_getNum"], [354, 3, 1, "", "test_getParamValuesAtZ"], [354, 3, 1, "", "test_getReactiveHeight"], [354, 3, 1, "", "test_getTotalHeight"], [354, 3, 1, "", "test_getVolume"], [354, 3, 1, "", "test_hasContinuousCoolantChannel"], [354, 3, 1, "", "test_hasFlags"], [354, 3, 1, "", "test_isOnWhichSymmetryLine"], [354, 3, 1, "", "test_iter"], [354, 3, 1, "", "test_iteration"], [354, 3, 1, "", "test_len"], [354, 3, 1, "", "test_makeAxialSnapList"], [354, 3, 1, "", "test_moveTo"], [354, 3, 1, "", "test_notesParameter"], [354, 3, 1, "", "test_pinPlenumVolume"], [354, 3, 1, "", "test_reattach"], [354, 3, 1, "", "test_reestablishBlockOrder"], [354, 3, 1, "", "test_renameBlocksAccordingToAssemblyNum"], [354, 3, 1, "", "test_rotate"], [354, 3, 1, "", "test_scaleParamsWhenMoved"], [354, 3, 1, "", "test_snapAxialMeshToReference"], [354, 3, 1, "", "test_updateFromAssembly"]], "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase": [[354, 3, 1, "", "test_UThZrMaterial"], [354, 3, 1, "", "test_sortNoLocator"]], "armi.reactor.tests.test_blocks": [[355, 2, 1, "", "BlockEnergyDepositionConstants"], [355, 2, 1, "", "BlockInputHeightsTests"], [355, 2, 1, "", "Block_TestCase"], [355, 2, 1, "", "CartesianBlock_TestCase"], [355, 2, 1, "", "HexBlock_TestCase"], [355, 2, 1, "", "MassConservationTests"], [355, 2, 1, "", "TestDetailedNDensUpdate"], [355, 2, 1, "", "TestHexBlockOrientation"], [355, 2, 1, "", "TestNegativeVolume"], [355, 2, 1, "", "ThRZBlock_TestCase"], [355, 1, 1, "", "applyDummyData"], [355, 1, 1, "", "buildSimpleFuelBlock"], [355, 1, 1, "", "getComponentData"], [355, 1, 1, "", "loadTestBlock"]], "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants": [[355, 3, 1, "", "test_getCaptureEnergyGenerationConstants"], [355, 3, 1, "", "test_getFissionEnergyDepositionConstants"], [355, 3, 1, "", "test_getGammaEnergyDepositionConstants"], [355, 3, 1, "", "test_getNeutronEnergyDepositionConstants"], [355, 3, 1, "", "test_getTotalEnergyGenerationConstants"]], "armi.reactor.tests.test_blocks.BlockInputHeightsTests": [[355, 3, 1, "", "test_foundReactor"], [355, 3, 1, "", "test_noBlueprints"]], "armi.reactor.tests.test_blocks.Block_TestCase": [[355, 3, 1, "", "test_100_getPinPitch"], [355, 3, 1, "", "test_101_getPitch"], [355, 3, 1, "", "test_102_setPitch"], [355, 3, 1, "", "test_106_getAreaFractions"], [355, 3, 1, "", "test_27b_setEnvGroup"], [355, 3, 1, "", "test_add"], [355, 3, 1, "", "test_adjustDensity"], [355, 3, 1, "", "test_adjustUEnrich"], [355, 3, 1, "", "test_clearDensity"], [355, 3, 1, "", "test_completeInitialLoading"], [355, 3, 1, "", "test_consistentAreaWithOverlappingComponents"], [355, 3, 1, "", "test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"], [355, 3, 1, "", "test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"], [355, 3, 1, "", "test_duplicate"], [355, 3, 1, "", "test_expandAllElementalsToIsotopics"], [355, 3, 1, "", "test_expandElementalToIsotopics"], [355, 3, 1, "", "test_getComponent"], [355, 3, 1, "", "test_getComponentAreaFrac"], [355, 3, 1, "", "test_getComponentByName"], [355, 3, 1, "", "test_getComponentNames"], [355, 3, 1, "", "test_getComponents"], [355, 3, 1, "", "test_getComponentsInLinkedOrder"], [355, 3, 1, "", "test_getComponentsOfMaterial"], [355, 3, 1, "", "test_getComponentsOfShape"], [355, 3, 1, "", "test_getDimensions"], [355, 3, 1, "", "test_getFissileMassEnrich"], [355, 3, 1, "", "test_getFlowArea"], [355, 3, 1, "", "test_getFlowAreaPerPin"], [355, 3, 1, "", "test_getHMDens"], [355, 3, 1, "", "test_getHydraulicDiameter"], [355, 3, 1, "", "test_getMass"], [355, 3, 1, "", "test_getMasses"], [355, 3, 1, "", "test_getMfp"], [355, 3, 1, "", "test_getMicroSuffix"], [355, 3, 1, "", "test_getNumComponents"], [355, 3, 1, "", "test_getNumPins"], [355, 3, 1, "", "test_getNumberDensity"], [355, 3, 1, "", "test_getNumberOfAtoms"], [355, 3, 1, "", "test_getPlenumPin"], [355, 3, 1, "", "test_getPu"], [355, 3, 1, "", "test_getReactionRates"], [355, 3, 1, "", "test_getSmearDensity"], [355, 3, 1, "", "test_getSmearDensityEdgeCases"], [355, 3, 1, "", "test_getSmearDensityMultipleLiner"], [355, 3, 1, "", "test_getSortedComponentsInsideOfComponentClad"], [355, 3, 1, "", "test_getSortedComponentsInsideOfComponentDuct"], [355, 3, 1, "", "test_getTotalMass"], [355, 3, 1, "", "test_getTotalNDens"], [355, 3, 1, "", "test_getType"], [355, 3, 1, "", "test_getUraniumMassEnrich"], [355, 3, 1, "", "test_getUraniumNumEnrich"], [355, 3, 1, "", "test_getVolumeFractionWithoutParent"], [355, 3, 1, "", "test_getVolumeFractionsWithZeroHeight"], [355, 3, 1, "", "test_getWettedPerimeter"], [355, 3, 1, "", "test_getWettedPerimeterCircularInnerDuct"], [355, 3, 1, "", "test_getWettedPerimeterHexInnerDuct"], [355, 3, 1, "", "test_getXsType"], [355, 3, 1, "", "test_hasComponents"], [355, 3, 1, "", "test_hasFlags"], [355, 3, 1, "", "test_hasPinPitch"], [355, 3, 1, "", "test_homogenizedMixture"], [355, 3, 1, "", "test_mergeWithBlock"], [355, 3, 1, "", "test_pinMgFluxes"], [355, 3, 1, "", "test_removeMass"], [355, 3, 1, "", "test_replaceBlockWithBlock"], [355, 3, 1, "", "test_setBuLimitInfo"], [355, 3, 1, "", "test_setImportantParams"], [355, 3, 1, "", "test_setLinPowByPin"], [355, 3, 1, "", "test_setLocation"], [355, 3, 1, "", "test_setMass"], [355, 3, 1, "", "test_setNumberDensities"], [355, 3, 1, "", "test_setNumberDensity"], [355, 3, 1, "", "test_setPitch"], [355, 3, 1, "", "test_setType"], [355, 3, 1, "", "test_setZeroHeight"], [355, 3, 1, "", "test_timeNodeParams"]], "armi.reactor.tests.test_blocks.CartesianBlock_TestCase": [[355, 4, 1, "", "PITCH"], [355, 3, 1, "", "test_getCartesianGrid"], [355, 3, 1, "", "test_getHydraulicDiameter"], [355, 3, 1, "", "test_getPitchHomogeneousBlock"], [355, 3, 1, "", "test_getPitchSquare"], [355, 3, 1, "", "test_getWettedPerimeter"]], "armi.reactor.tests.test_blocks.HexBlock_TestCase": [[355, 3, 1, "", "test_block_dims"], [355, 3, 1, "", "test_component_type"], [355, 3, 1, "", "test_coords"], [355, 3, 1, "", "test_getArea"], [355, 3, 1, "", "test_getDuctPitch"], [355, 3, 1, "", "test_getNumPins"], [355, 3, 1, "", "test_getPinCenterFlatToFlat"], [355, 3, 1, "", "test_getPinCoords"], [355, 3, 1, "", "test_getPinCoordsAndLocsAgree"], [355, 3, 1, "", "test_getPinLocations"], [355, 3, 1, "", "test_getPitchHomogeneousBlock"], [355, 3, 1, "", "test_gridCreation"], [355, 3, 1, "", "test_gridNotCreatedMultipleMultiplicities"], [355, 3, 1, "", "test_gridNumPinsAndLocations"], [355, 3, 1, "", "test_retainState"], [355, 3, 1, "", "test_symmetryFactor"]], "armi.reactor.tests.test_blocks.MassConservationTests": [[355, 3, 1, "", "test_coldMass"], [355, 3, 1, "", "test_dimensionDuctHeatup"], [355, 3, 1, "", "test_heightExpansionDifferences"], [355, 3, 1, "", "test_massCladHeatup"], [355, 3, 1, "", "test_massConsistency"], [355, 3, 1, "", "test_massCoolHeatup"], [355, 3, 1, "", "test_massDuctHeatup"], [355, 3, 1, "", "test_massFuelHeatup"]], "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate": [[355, 3, 1, "", "test_updateDetailedNdens"]], "armi.reactor.tests.test_blocks.TestHexBlockOrientation": [[355, 3, 1, "", "getLocalCoordinatesBlockBounds"], [355, 3, 1, "", "test_validateReactorCornersUp"], [355, 3, 1, "", "test_validateReactorFlatsUp"]], "armi.reactor.tests.test_blocks.TestNegativeVolume": [[355, 3, 1, "", "test_negativeVolume"]], "armi.reactor.tests.test_blocks.ThRZBlock_TestCase": [[355, 3, 1, "", "test_axial"], [355, 3, 1, "", "test_getHydraulicDiameter"], [355, 3, 1, "", "test_getThetaRZGrid"], [355, 3, 1, "", "test_getWettedPerimeter"], [355, 3, 1, "", "test_radii"], [355, 3, 1, "", "test_theta"], [355, 3, 1, "", "test_verifyBlockDims"]], "armi.reactor.tests.test_components": [[356, 2, 1, "", "TestCircle"], [356, 2, 1, "", "TestComponent"], [356, 2, 1, "", "TestComponentExpansion"], [356, 2, 1, "", "TestComponentFactory"], [356, 2, 1, "", "TestCube"], [356, 2, 1, "", "TestDerivedShape"], [356, 2, 1, "", "TestDerivedShapeGetArea"], [356, 2, 1, "", "TestDifferentialRadialSegment"], [356, 2, 1, "", "TestGeneralComponents"], [356, 2, 1, "", "TestHelix"], [356, 2, 1, "", "TestHexHoledCircle"], [356, 2, 1, "", "TestHexagon"], [356, 2, 1, "", "TestHoledHexagon"], [356, 2, 1, "", "TestHoledRectangle"], [356, 2, 1, "", "TestHoledSquare"], [356, 2, 1, "", "TestMaterialAdjustments"], [356, 2, 1, "", "TestNullComponent"], [356, 2, 1, "", "TestPinQuantities"], [356, 2, 1, "", "TestRadialSegment"], [356, 2, 1, "", "TestRectangle"], [356, 2, 1, "", "TestShapedComponent"], [356, 2, 1, "", "TestSolidRectangle"], [356, 2, 1, "", "TestSphere"], [356, 2, 1, "", "TestSquare"], [356, 2, 1, "", "TestTriangle"], [356, 2, 1, "", "TestUnshapedComponent"]], "armi.reactor.tests.test_components.TestCircle": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_badComponentName"], [356, 3, 1, "", "test_changeNumberDensities"], [356, 3, 1, "", "test_componentInteractionsLinkingByDimensions"], [356, 3, 1, "", "test_componentInteractionsLinkingBySubtraction"], [356, 3, 1, "", "test_dimensionThermallyExpands"], [356, 3, 1, "", "test_fuelMass"], [356, 3, 1, "", "test_getArea"], [356, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [356, 3, 1, "", "test_getCircleInnerDiameter"], [356, 3, 1, "", "test_getDimension"], [356, 3, 1, "", "test_getNumberDensities"], [356, 3, 1, "", "test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"], [356, 3, 1, "", "test_theoreticalDensitySetter"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestComponent": [[356, 4, 1, "", "componentCls"], [356, 3, 1, "", "test_initializeComponentMaterial"], [356, 3, 1, "", "test_setNumberDensities"], [356, 3, 1, "", "test_setNumberDensity"], [356, 3, 1, "", "test_solid_material"]], "armi.reactor.tests.test_components.TestComponentExpansion": [[356, 4, 1, "", "coldOuterDiameter"], [356, 3, 1, "", "componentMassIndependentOfInputTemp"], [356, 3, 1, "", "expansionConservationColdHeightDefined"], [356, 3, 1, "", "expansionConservationHotHeightDefined"], [356, 3, 1, "", "runExpansionTests"], [356, 4, 1, "", "tCold"], [356, 4, 1, "", "tHot"], [356, 4, 1, "", "tWarm"], [356, 3, 1, "", "test_B4CExpansion"], [356, 3, 1, "", "test_HT9Expansion"], [356, 3, 1, "", "test_UZrExpansion"]], "armi.reactor.tests.test_components.TestComponentFactory": [[356, 3, 1, "", "getCircleFuelDict"], [356, 3, 1, "", "getCircleVoidDict"], [356, 3, 1, "", "test_componentInitializationAndDuplication"], [356, 3, 1, "", "test_factory"], [356, 3, 1, "", "test_factoryBadShapeName"], [356, 3, 1, "", "test_invalidCoolantComponentAssignment"]], "armi.reactor.tests.test_components.TestCube": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_getVolume"], [356, 3, 1, "", "test_negativeVolume"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestDerivedShape": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 4, 1, "", "componentMaterial"], [356, 3, 1, "", "test_computeVolume"], [356, 3, 1, "", "test_getBoundingCircleOuterDiameter"]], "armi.reactor.tests.test_components.TestDerivedShapeGetArea": [[356, 3, 1, "", "test_getAreaColdTrue"]], "armi.reactor.tests.test_components.TestDifferentialRadialSegment": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [356, 3, 1, "", "test_getVolume"], [356, 3, 1, "", "test_thermallyExpands"], [356, 3, 1, "", "test_updateDims"]], "armi.reactor.tests.test_components.TestGeneralComponents": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 4, 1, "", "componentMaterial"]], "armi.reactor.tests.test_components.TestHelix": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_dimensionThermallyExpands"], [356, 3, 1, "", "test_getArea"], [356, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [356, 3, 1, "", "test_getCircleInnerDiameter"], [356, 3, 1, "", "test_thermallyExpands"], [356, 3, 1, "", "test_validParameters"]], "armi.reactor.tests.test_components.TestHexHoledCircle": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_dimensionThermallyExpands"], [356, 3, 1, "", "test_getArea"], [356, 3, 1, "", "test_getCircleInnerDiameter"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHexagon": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_dimensionThermallyExpands"], [356, 3, 1, "", "test_getArea"], [356, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [356, 3, 1, "", "test_getCircleInnerDiameter"], [356, 3, 1, "", "test_getPerimeter"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledHexagon": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_dimensionThermallyExpands"], [356, 3, 1, "", "test_getArea"], [356, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [356, 3, 1, "", "test_getCircleInnerDiameter"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledRectangle": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 4, 1, "", "dimsToTestExpansion"], [356, 3, 1, "", "setClassDims"], [356, 3, 1, "", "test_dimensionThermallyExpands"], [356, 3, 1, "", "test_getArea"], [356, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [356, 3, 1, "", "test_getCircleInnerDiameter"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledSquare": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 4, 1, "", "dimsToTestExpansion"], [356, 3, 1, "", "setClassDims"], [356, 3, 1, "", "test_getCircleInnerDiameter"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestMaterialAdjustments": [[356, 3, 1, "", "test_adjustMassEnrichment"], [356, 3, 1, "", "test_adjustMassFrac_U"], [356, 3, 1, "", "test_adjustMassFrac_U235"], [356, 3, 1, "", "test_adjustMassFrac_clear_ZR"], [356, 3, 1, "", "test_adjustMassFrac_invalid"], [356, 3, 1, "", "test_adjustMassFrac_leave_same"], [356, 3, 1, "", "test_adjustMassFrac_set_ZR"], [356, 3, 1, "", "test_finalizeLoadDBAdjustsTD"], [356, 3, 1, "", "test_getEnrichment"], [356, 3, 1, "", "test_setMassFrac"], [356, 3, 1, "", "test_setMassFracOnComponentMaterial"]], "armi.reactor.tests.test_components.TestNullComponent": [[356, 4, 1, "", "componentCls"], [356, 3, 1, "", "test_cmp"], [356, 3, 1, "", "test_getDimension"], [356, 3, 1, "", "test_nonzero"]], "armi.reactor.tests.test_components.TestPinQuantities": [[356, 3, 1, "", "test_getPinMgFluxes"]], "armi.reactor.tests.test_components.TestRadialSegment": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [356, 3, 1, "", "test_getVolume"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestRectangle": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_dimensionThermallyExpands"], [356, 3, 1, "", "test_getArea"], [356, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [356, 3, 1, "", "test_getCircleInnerDiameter"], [356, 3, 1, "", "test_negativeArea"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestShapedComponent": [[356, 3, 1, "", "test_density"], [356, 3, 1, "", "test_densityConsistent"], [356, 3, 1, "", "test_preserveMassDuringThermalExpansion"], [356, 3, 1, "", "test_volumeAfterClearCache"]], "armi.reactor.tests.test_components.TestSolidRectangle": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_dimensionThermallyExpands"], [356, 3, 1, "", "test_getArea"], [356, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSphere": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_getVolume"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSquare": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_dimensionThermallyExpands"], [356, 3, 1, "", "test_getArea"], [356, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [356, 3, 1, "", "test_getCircleInnerDiameter"], [356, 3, 1, "", "test_negativeArea"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestTriangle": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 3, 1, "", "test_dimensionThermallyExpands"], [356, 3, 1, "", "test_getArea"], [356, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestUnshapedComponent": [[356, 4, 1, "", "componentCls"], [356, 4, 1, "", "componentDims"], [356, 4, 1, "", "componentMaterial"], [356, 3, 1, "", "test_component_less_than"], [356, 3, 1, "", "test_fromComponent"], [356, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [356, 3, 1, "", "test_getComponentArea"]], "armi.reactor.tests.test_composites": [[357, 2, 1, "", "DummyComposite"], [357, 2, 1, "", "DummyLeaf"], [357, 2, 1, "", "MockBP"], [357, 2, 1, "", "TestCompositePattern"], [357, 2, 1, "", "TestCompositeTree"], [357, 2, 1, "", "TestFlagSerializer"], [357, 2, 1, "", "TestGetReactionRateDict"], [357, 2, 1, "", "TestMiscMethods"], [357, 1, 1, "", "getDummyParamDefs"]], "armi.reactor.tests.test_composites.DummyComposite": [[357, 4, 1, "", "pDefs"], [357, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.DummyLeaf": [[357, 3, 1, "", "getBoundingCircleOuterDiameter"], [357, 3, 1, "", "getChildren"], [357, 3, 1, "", "getChildrenWithFlags"], [357, 3, 1, "", "iterComponents"], [357, 4, 1, "", "pDefs"], [357, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.MockBP": [[357, 4, 1, "", "activeNuclides"], [357, 4, 1, "", "allNuclidesInProblem"], [357, 4, 1, "", "customIsotopics"], [357, 4, 1, "", "elementsToExpand"], [357, 4, 1, "", "inactiveNuclides"]], "armi.reactor.tests.test_composites.TestCompositePattern": [[357, 3, 1, "", "test_areChildernOfType"], [357, 3, 1, "", "test_composite"], [357, 3, 1, "", "test_containsAtLeastOneChildOfType"], [357, 3, 1, "", "test_containsOnlyChildrenOfType"], [357, 3, 1, "", "test_expandLFPs"], [357, 3, 1, "", "test_getBoundingCirlceOuterDiameter"], [357, 3, 1, "", "test_getChildren"], [357, 3, 1, "", "test_getIntegratedMgFlux"], [357, 3, 1, "", "test_getLumpedFissionProductsIfNecessaryNullCase"], [357, 3, 1, "", "test_getName"], [357, 3, 1, "", "test_getParamNames"], [357, 3, 1, "", "test_getReactionRates"], [357, 3, 1, "", "test_hasFlags"], [357, 3, 1, "", "test_hasFlagsNoTypeSpecified"], [357, 3, 1, "", "test_hasFlagsSubstring"], [357, 3, 1, "", "test_iterComponents"], [357, 3, 1, "", "test_nameContains"], [357, 3, 1, "", "test_nucSpec"], [357, 3, 1, "", "test_requiresLumpedFissionProducts"], [357, 3, 1, "", "test_setChildrenLumpedFissionProducts"], [357, 3, 1, "", "test_sort"], [357, 3, 1, "", "test_syncParameters"], [357, 3, 1, "", "test_updateVolume"]], "armi.reactor.tests.test_composites.TestCompositeTree": [[357, 4, 1, "", "blueprintYaml"], [357, 3, 1, "", "test_constituentReport"], [357, 3, 1, "", "test_getChildrenIncludeMaterials"], [357, 3, 1, "", "test_getFPMass"], [357, 3, 1, "", "test_getFissileMass"], [357, 3, 1, "", "test_getFuelMass"], [357, 3, 1, "", "test_getHMMass"], [357, 3, 1, "", "test_getMaxParam"], [357, 3, 1, "", "test_getMinParam"], [357, 3, 1, "", "test_getNuclides"], [357, 3, 1, "", "test_ordering"], [357, 3, 1, "", "test_summing"]], "armi.reactor.tests.test_composites.TestFlagSerializer": [[357, 2, 1, "", "TestFlagsA"], [357, 2, 1, "", "TestFlagsB"], [357, 3, 1, "", "test_flagConversion"], [357, 3, 1, "", "test_flagSerialization"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA": [[357, 4, 1, "", "A"], [357, 4, 1, "", "B"], [357, 4, 1, "", "C"], [357, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB": [[357, 4, 1, "", "A"], [357, 4, 1, "", "B"], [357, 4, 1, "", "BPRIME"], [357, 4, 1, "", "C"], [357, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestGetReactionRateDict": [[357, 3, 1, "", "test_getReactionRateDict"]], "armi.reactor.tests.test_composites.TestMiscMethods": [[357, 3, 1, "", "test_containsHeavyMetal"], [357, 3, 1, "", "test_copyParamsFrom"], [357, 3, 1, "", "test_copyParamsToChildren"], [357, 3, 1, "", "test_dimensionReport"], [357, 3, 1, "", "test_getAtomicWeight"], [357, 3, 1, "", "test_getNumberDensities"], [357, 3, 1, "", "test_getNumberDensitiesWithExpandedFissionProducts"], [357, 3, 1, "", "test_setMass"]], "armi.reactor.tests.test_excoreStructures": [[358, 2, 1, "", "TestExcoreCollection"], [358, 2, 1, "", "TestExcoreStructure"], [358, 2, 1, "", "TestSpentFuelPool"]], "armi.reactor.tests.test_excoreStructures.TestExcoreCollection": [[358, 3, 1, "", "test_addLikeAttribute"], [358, 3, 1, "", "test_addLikeDict"]], "armi.reactor.tests.test_excoreStructures.TestExcoreStructure": [[358, 3, 1, "", "test_add"], [358, 3, 1, "", "test_constructor"], [358, 3, 1, "", "test_parentReactor"], [358, 3, 1, "", "test_representation"]], "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool": [[358, 3, 1, "", "test_add"], [358, 3, 1, "", "test_constructor"], [358, 3, 1, "", "test_getAssembly"], [358, 3, 1, "", "test_getNextLocation"], [358, 3, 1, "", "test_normalizeNames"], [358, 3, 1, "", "test_representation"], [358, 3, 1, "", "test_updateNumberOfColumns"]], "armi.reactor.tests.test_flags": [[359, 2, 1, "", "TestFlags"]], "armi.reactor.tests.test_flags.TestFlags": [[359, 3, 1, "", "test_convertsStringsWithNonFlags"], [359, 3, 1, "", "test_defaultIsFalse"], [359, 3, 1, "", "test_flagsDefinedWithNumbers"], [359, 3, 1, "", "test_flagsToAndFromString"], [359, 3, 1, "", "test_fromString"], [359, 3, 1, "", "test_fromStringStrict"], [359, 3, 1, "", "test_fromStringWithNumbers"], [359, 3, 1, "", "test_isPickleable"], [359, 3, 1, "", "test_lookup"], [359, 3, 1, "", "test_toStringAlphabetical"]], "armi.reactor.tests.test_geometry": [[360, 2, 1, "", "TestGeomType"], [360, 2, 1, "", "TestSymmetryType"], [360, 2, 1, "", "TestSystemLayoutInput"], [360, 2, 1, "", "TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry.TestGeomType": [[360, 3, 1, "", "test_fromStr"], [360, 3, 1, "", "test_label"], [360, 3, 1, "", "test_str"]], "armi.reactor.tests.test_geometry.TestSymmetryType": [[360, 3, 1, "", "test_SymmetryFactor"], [360, 3, 1, "", "test_baseConstructor"], [360, 3, 1, "", "test_checkValidGeomSymmetryCombo"], [360, 3, 1, "", "test_domainTypeNulls"], [360, 3, 1, "", "test_fromAny"], [360, 3, 1, "", "test_fromStr"], [360, 3, 1, "", "test_label"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInput": [[360, 3, 1, "", "test_asciimap"], [360, 3, 1, "", "test_growToFullCore"], [360, 3, 1, "", "test_readAsciimap"], [360, 3, 1, "", "test_readHexGeomXML"], [360, 3, 1, "", "test_readReactor"], [360, 3, 1, "", "test_yamlIO"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ": [[360, 3, 1, "", "test_TRZyamlIO"], [360, 3, 1, "", "test_readTRZGeomXML"]], "armi.reactor.tests.test_hexBlockRotate": [[361, 2, 1, "", "EmptyBlockRotateTest"], [361, 2, 1, "", "HexBlockRotateTests"]], "armi.reactor.tests.test_hexBlockRotate.EmptyBlockRotateTest": [[361, 3, 1, "", "test_orientation"]], "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests": [[361, 4, 1, "", "BOUNDARY_DATA"], [361, 4, 1, "", "BOUNDARY_PARAMS"], [361, 4, 1, "", "PIN_DATA"], [361, 4, 1, "", "PIN_PARAMS"], [361, 3, 1, "", "assertIndexLocationEquivalent"], [361, 3, 1, "", "test_orientationVector"], [361, 3, 1, "", "test_pinParametersUnmodified"], [361, 3, 1, "", "test_pinRotationCoordinates"], [361, 3, 1, "", "test_pinRotationLocations"], [361, 3, 1, "", "test_rotateBoundaryParameters"], [361, 3, 1, "", "test_updateChildLocations"]], "armi.reactor.tests.test_parameters": [[362, 2, 1, "", "MockComposite"], [362, 2, 1, "", "MockCompositeChild"], [362, 2, 1, "", "MockCompositeGrandParent"], [362, 2, 1, "", "MockCompositeParent"], [362, 2, 1, "", "ParamCollectionWhere"], [362, 2, 1, "", "ParameterTests"], [362, 2, 1, "", "TestMakeParametersReadOnly"]], "armi.reactor.tests.test_parameters.ParamCollectionWhere": [[362, 2, 1, "", "ScopeParamCollection"], [362, 3, 1, "", "test_complicated"], [362, 3, 1, "", "test_onCategory"], [362, 3, 1, "", "test_onLocation"]], "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection": [[362, 4, 1, "", "pDefs"], [362, 4, 1, "", "pb"]], "armi.reactor.tests.test_parameters.ParameterTests": [[362, 3, 1, "", "test_attemptingToSetParamWithoutSetterFails"], [362, 3, 1, "", "test_cannotCreateAttrbuteOnParameterCollectionSubclass"], [362, 3, 1, "", "test_cannotCreateInstanceOf_NoDefault"], [362, 3, 1, "", "test_cannotCreateInstanceOf_Undefined"], [362, 3, 1, "", "test_cannotDefineParameterWithSameName"], [362, 3, 1, "", "test_cannotDefineParameterWithSameNameForCollectionSubclass"], [362, 3, 1, "", "test_categories"], [362, 3, 1, "", "test_defaultLocation"], [362, 3, 1, "", "test_getWithoutDefaultRaisesParameterError"], [362, 3, 1, "", "test_mutableDefaultsNotSupported"], [362, 3, 1, "", "test_paramDefinitionsCompose"], [362, 3, 1, "", "test_paramPropertyDoesNotConflict"], [362, 3, 1, "", "test_paramPropertyDoesNotConflictWithNoneDefault"], [362, 3, 1, "", "test_parameterCollectionsHave__slots__"], [362, 3, 1, "", "test_serializer_pack_unpack"], [362, 3, 1, "", "test_setter"], [362, 3, 1, "", "test_setterGetterBasics"], [362, 3, 1, "", "test_writeSomeParamsToDB"]], "armi.reactor.tests.test_parameters.TestMakeParametersReadOnly": [[362, 3, 1, "", "test_makeParametersReadOnly"]], "armi.reactor.tests.test_reactors": [[363, 2, 1, "", "CartesianReactorNeighborTests"], [363, 2, 1, "", "CartesianReactorTests"], [363, 2, 1, "", "HexReactorTests"], [363, 2, 1, "", "ReactorTests"], [363, 1, 1, "", "buildOperatorOfEmptyCartesianBlocks"], [363, 1, 1, "", "buildOperatorOfEmptyHexBlocks"]], "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests": [[363, 3, 1, "", "test_findNeighborsCartesian"]], "armi.reactor.tests.test_reactors.CartesianReactorTests": [[363, 3, 1, "", "test_add"], [363, 3, 1, "", "test_getAssembliesInSquareRing"], [363, 3, 1, "", "test_getAssemblyPitch"], [363, 3, 1, "", "test_getNuclideCategoriesLogging"]], "armi.reactor.tests.test_reactors.HexReactorTests": [[363, 3, 1, "", "test_addMoreNodes"], [363, 3, 1, "", "test_addMultipleCores"], [363, 3, 1, "", "test_applyThermalExpansion_CoreConstruct"], [363, 3, 1, "", "test_buildManualZones"], [363, 3, 1, "", "test_buildManualZonesEmpty"], [363, 3, 1, "", "test_coreSfp"], [363, 3, 1, "", "test_countBlocksOfType"], [363, 3, 1, "", "test_countFuelAxialBlocks"], [363, 3, 1, "", "test_createAssemblyOfType"], [363, 3, 1, "", "test_createAssemblyOfTypeExpandedCore"], [363, 3, 1, "", "test_createFreshFeed"], [363, 3, 1, "", "test_differentNuclideModels"], [363, 3, 1, "", "test_factorySortSetting"], [363, 3, 1, "", "test_findAllAxialMeshPoints"], [363, 3, 1, "", "test_findAllAxialMeshPoints_wSubmesh"], [363, 3, 1, "", "test_findAllAziMeshPoints"], [363, 3, 1, "", "test_findAllMeshPoints"], [363, 3, 1, "", "test_findAllRadMeshPoints"], [363, 3, 1, "", "test_findAxialMeshIndexOf"], [363, 3, 1, "", "test_findNeighbors"], [363, 3, 1, "", "test_genAssembliesAddedThisCycle"], [363, 3, 1, "", "test_genBlocksByLocName"], [363, 3, 1, "", "test_geomType"], [363, 3, 1, "", "test_getAllXsSuffixes"], [363, 3, 1, "", "test_getAssembliesInCircularRing"], [363, 3, 1, "", "test_getAssembliesInHexRing"], [363, 3, 1, "", "test_getAssembliesOnSymmetryLine"], [363, 3, 1, "", "test_getAssemblyPitch"], [363, 3, 1, "", "test_getAssemblyWithLoc"], [363, 3, 1, "", "test_getAssemblyWithName"], [363, 3, 1, "", "test_getAvgTemp"], [363, 3, 1, "", "test_getBlocksByIndices"], [363, 3, 1, "", "test_getDominantMaterial"], [363, 3, 1, "", "test_getFirstFuelBlockAxialNode"], [363, 3, 1, "", "test_getFluxVector"], [363, 3, 1, "", "test_getFuelBottomHeight"], [363, 3, 1, "", "test_getGridBounds"], [363, 3, 1, "", "test_getMass"], [363, 3, 1, "", "test_getMaxAssembliesInHexRing"], [363, 3, 1, "", "test_getMaxNumPins"], [363, 3, 1, "", "test_getMinimumPercentFluxInFuel"], [363, 3, 1, "", "test_getNozzleTypes"], [363, 3, 1, "", "test_getNuclideCategories"], [363, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOut"], [363, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOutBipass"], [363, 3, 1, "", "test_getNumEnergyGroups"], [363, 3, 1, "", "test_getNumRings"], [363, 3, 1, "", "test_getReactor"], [363, 3, 1, "", "test_getScalarEvolution"], [363, 3, 1, "", "test_getSetParameters"], [363, 3, 1, "", "test_getSymmetryFactor"], [363, 3, 1, "", "test_getTotalParam"], [363, 3, 1, "", "test_growToFullCore"], [363, 3, 1, "", "test_ifMissingSpatialGrid"], [363, 3, 1, "", "test_isPickleable"], [363, 3, 1, "", "test_locations"], [363, 3, 1, "", "test_nonUniformAssems"], [363, 3, 1, "", "test_normalizeNames"], [363, 3, 1, "", "test_pinCoordsAllBlocks"], [363, 3, 1, "", "test_removeAssembliesInRing"], [363, 3, 1, "", "test_removeAssembliesInRingByCount"], [363, 3, 1, "", "test_removeAssembliesInRingHex"], [363, 3, 1, "", "test_removeAssembly"], [363, 3, 1, "", "test_removeAssemblyNoSfp"], [363, 3, 1, "", "test_restoreReactor"], [363, 3, 1, "", "test_saveAllFlux"], [363, 3, 1, "", "test_setB10VolOnCreation"], [363, 3, 1, "", "test_setPitchUniform"], [363, 3, 1, "", "test_setPowerIfNecessary"], [363, 3, 1, "", "test_sortAssemByRing"], [363, 3, 1, "", "test_sortChildren"], [363, 3, 1, "", "test_updateBlockBOLHeights_DBLoad"], [363, 3, 1, "", "test_whenNoAssemblies"]], "armi.reactor.tests.test_rz_reactors": [[364, 2, 1, "", "TestRZTReactor"], [364, 2, 1, "", "TestRZTReactorModern"]], "armi.reactor.tests.test_rz_reactors.TestRZTReactor": [[364, 3, 1, "", "test_findAllMeshPoints"], [364, 3, 1, "", "test_loadRZT"]], "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern": [[364, 3, 1, "", "test_loadRZT_reactor"]], "armi.reactor.tests.test_zones": [[365, 2, 1, "", "TestZone"], [365, 2, 1, "", "TestZones"]], "armi.reactor.tests.test_zones.TestZone": [[365, 3, 1, "", "test_addItem"], [365, 3, 1, "", "test_addItems"], [365, 3, 1, "", "test_addLoc"], [365, 3, 1, "", "test_addLocs"], [365, 3, 1, "", "test_blocks"], [365, 3, 1, "", "test_iteration"], [365, 3, 1, "", "test_removeItem"], [365, 3, 1, "", "test_removeItems"], [365, 3, 1, "", "test_removeLoc"], [365, 3, 1, "", "test_removeLocs"], [365, 3, 1, "", "test_repr"]], "armi.reactor.tests.test_zones.TestZones": [[365, 3, 1, "", "test_dictionaryInterface"], [365, 3, 1, "", "test_findZoneItIsIn"], [365, 3, 1, "", "test_getAllLocations"], [365, 3, 1, "", "test_getZoneLocations"], [365, 3, 1, "", "test_sortZones"], [365, 3, 1, "", "test_summary"]], "armi.reactor.zones": [[366, 2, 1, "", "Zone"], [366, 2, 1, "", "Zones"]], "armi.reactor.zones.Zone": [[366, 4, 1, "", "VALID_TYPES"], [366, 3, 1, "", "addItem"], [366, 3, 1, "", "addItems"], [366, 3, 1, "", "addLoc"], [366, 3, 1, "", "addLocs"], [366, 3, 1, "", "removeItem"], [366, 3, 1, "", "removeItems"], [366, 3, 1, "", "removeLoc"], [366, 3, 1, "", "removeLocs"]], "armi.reactor.zones.Zones": [[366, 3, 1, "", "addZone"], [366, 3, 1, "", "addZones"], [366, 3, 1, "", "checkDuplicates"], [366, 3, 1, "", "findZoneItIsIn"], [366, 3, 1, "", "getAllLocations"], [366, 3, 1, "", "getZoneLocations"], [366, 5, 1, "", "names"], [366, 3, 1, "", "removeZone"], [366, 3, 1, "", "removeZones"], [366, 3, 1, "", "sortZones"], [366, 3, 1, "", "summary"]], "armi.runLog": [[367, 2, 1, "", "DeduplicationFilter"], [367, 2, 1, "", "NullLogger"], [367, 2, 1, "", "RunLogger"], [367, 1, 1, "", "close"], [367, 1, 1, "", "concatenateLogs"], [367, 1, 1, "", "createLogDir"], [367, 1, 1, "", "debug"], [367, 1, 1, "", "error"], [367, 1, 1, "", "extra"], [367, 1, 1, "", "getVerbosity"], [367, 1, 1, "", "header"], [367, 1, 1, "", "important"], [367, 1, 1, "", "info"], [367, 1, 1, "", "logFactory"], [367, 1, 1, "", "raw"], [367, 1, 1, "", "setVerbosity"], [367, 1, 1, "", "warning"], [367, 1, 1, "", "warningReport"]], "armi.runLog.DeduplicationFilter": [[367, 3, 1, "", "filter"]], "armi.runLog.NullLogger": [[367, 3, 1, "", "addHandler"]], "armi.runLog.RunLogger": [[367, 4, 1, "", "FMT"], [367, 3, 1, "", "allowStopDuplicates"], [367, 3, 1, "", "close"], [367, 3, 1, "", "flush"], [367, 3, 1, "", "getDuplicatesFilter"], [367, 3, 1, "", "log"], [367, 3, 1, "", "setVerbosity"], [367, 3, 1, "", "warningReport"], [367, 3, 1, "", "write"]], "armi.settings": [[369, 0, 0, "-", "caseSettings"], [370, 0, 0, "-", "fwSettings"], [368, 1, 1, "", "isBoolSetting"], [368, 1, 1, "", "promptForSettingsFile"], [368, 1, 1, "", "recursivelyLoadSettingsFiles"], [375, 0, 0, "-", "setting"], [376, 0, 0, "-", "settingsIO"], [377, 0, 0, "-", "settingsValidation"], [378, 0, 0, "-", "tests"]], "armi.settings.caseSettings": [[369, 2, 1, "", "Settings"]], "armi.settings.caseSettings.Settings": [[369, 5, 1, "", "caseTitle"], [369, 4, 1, "", "defaultCaseTitle"], [369, 3, 1, "", "duplicate"], [369, 5, 1, "", "environmentSettings"], [369, 3, 1, "", "failOnLoad"], [369, 3, 1, "", "getSetting"], [369, 3, 1, "", "getSettingsSetByUser"], [369, 3, 1, "", "initLogVerbosity"], [369, 5, 1, "", "inputDirectory"], [369, 3, 1, "", "items"], [369, 3, 1, "", "keys"], [369, 3, 1, "", "loadFromInputFile"], [369, 3, 1, "", "loadFromString"], [369, 3, 1, "", "modified"], [369, 3, 1, "", "registerUserPlugins"], [369, 3, 1, "", "revertToDefaults"], [369, 3, 1, "", "setModuleVerbosities"], [369, 3, 1, "", "updateEnvironmentSettingsFrom"], [369, 3, 1, "", "values"], [369, 3, 1, "", "writeToYamlFile"], [369, 3, 1, "", "writeToYamlStream"]], "armi.settings.fwSettings": [[371, 0, 0, "-", "databaseSettings"], [370, 1, 1, "", "getFrameworkSettings"], [372, 0, 0, "-", "globalSettings"], [373, 0, 0, "-", "reportSettings"], [374, 0, 0, "-", "tightCouplingSettings"]], "armi.settings.fwSettings.databaseSettings": [[371, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.globalSettings": [[372, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.reportSettings": [[373, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.tightCouplingSettings": [[374, 2, 1, "", "TightCouplingSettingDef"], [374, 2, 1, "", "TightCouplingSettings"], [374, 1, 1, "", "serializeTightCouplingSettings"], [374, 1, 1, "", "tightCouplingSettingsValidator"]], "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef": [[374, 3, 1, "", "dump"]], "armi.settings.setting": [[375, 2, 1, "", "Default"], [375, 2, 1, "", "FlagListSetting"], [375, 2, 1, "", "Option"], [375, 2, 1, "", "Setting"]], "armi.settings.setting.Default": [[375, 4, 1, "", "settingName"], [375, 4, 1, "", "value"]], "armi.settings.setting.FlagListSetting": [[375, 3, 1, "", "dump"], [375, 3, 1, "", "schema"]], "armi.settings.setting.Option": [[375, 4, 1, "", "option"], [375, 4, 1, "", "settingName"]], "armi.settings.setting.Setting": [[375, 3, 1, "", "addOption"], [375, 3, 1, "", "addOptions"], [375, 3, 1, "", "changeDefault"], [375, 5, 1, "", "containedType"], [375, 5, 1, "", "default"], [375, 3, 1, "", "dump"], [375, 3, 1, "", "getCustomAttributes"], [375, 3, 1, "", "getDefaultAttributes"], [375, 3, 1, "", "isDefault"], [375, 5, 1, "", "offDefault"], [375, 3, 1, "", "revertToDefault"], [375, 3, 1, "", "setValue"], [375, 5, 1, "", "underlyingType"], [375, 5, 1, "", "value"]], "armi.settings.settingsIO": [[376, 2, 1, "", "Roots"], [376, 7, 1, "", "RunLogPromptCancel"], [376, 7, 1, "", "RunLogPromptUnresolvable"], [376, 2, 1, "", "SettingRenamer"], [376, 2, 1, "", "SettingsReader"], [376, 2, 1, "", "SettingsWriter"], [376, 1, 1, "", "prompt"]], "armi.settings.settingsIO.Roots": [[376, 4, 1, "", "CUSTOM"], [376, 4, 1, "", "VERSION"]], "armi.settings.settingsIO.SettingRenamer": [[376, 3, 1, "", "renameSetting"]], "armi.settings.settingsIO.SettingsReader": [[376, 2, 1, "", "SettingsInputFormat"], [376, 3, 1, "", "readFromFile"], [376, 3, 1, "", "readFromStream"]], "armi.settings.settingsIO.SettingsReader.SettingsInputFormat": [[376, 4, 1, "", "YAML"], [376, 3, 1, "", "fromExt"]], "armi.settings.settingsIO.SettingsWriter": [[376, 3, 1, "", "writeYaml"]], "armi.settings.settingsValidation": [[377, 2, 1, "", "Inspector"], [377, 2, 1, "", "Query"], [377, 1, 1, "", "createQueryRevertBadPathToDefault"], [377, 1, 1, "", "validateVersion"]], "armi.settings.settingsValidation.Inspector": [[377, 3, 1, "", "NO_ACTION"], [377, 3, 1, "", "addQuery"], [377, 3, 1, "", "addQueryBadLocationWillLikelyFail"], [377, 3, 1, "", "addQueryCurrentSettingMayNotSupportFeatures"], [377, 3, 1, "", "run"]], "armi.settings.settingsValidation.Query": [[377, 3, 1, "", "isCorrective"], [377, 3, 1, "", "resolve"]], "armi.settings.tests": [[379, 0, 0, "-", "test_inspectors"], [380, 0, 0, "-", "test_settings"], [381, 0, 0, "-", "test_settingsIO"]], "armi.settings.tests.test_inspectors": [[379, 2, 1, "", "TestInspector"]], "armi.settings.tests.test_inspectors.TestInspector": [[379, 3, 1, "", "test_assignCS"], [379, 3, 1, "", "test_callableCorrectionCheck"], [379, 3, 1, "", "test_changeOfCS"], [379, 3, 1, "", "test_checkForBothSimpleAndDetailedCyclesInputs"], [379, 3, 1, "", "test_correctCyclesToZeroBurnup"], [379, 3, 1, "", "test_createQueryRevertBadPathToDefault"], [379, 3, 1, "", "test_nonCorrectiveQuery"], [379, 3, 1, "", "test_overwriteSettingsCorrectiveQuery"], [379, 3, 1, "", "test_query"]], "armi.settings.tests.test_settings": [[380, 2, 1, "", "DummySettingPlugin1"], [380, 2, 1, "", "DummySettingPlugin2"], [380, 2, 1, "", "PluginAddsOptions"], [380, 2, 1, "", "TestAddingOptions"], [380, 2, 1, "", "TestFlagListSetting"], [380, 2, 1, "", "TestSettings"], [380, 2, 1, "", "TestSettings2"], [380, 2, 1, "", "TestSettingsUtils"], [380, 2, 1, "", "TestSettingsValidationUtils"]], "armi.settings.tests.test_settings.DummySettingPlugin1": [[380, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.DummySettingPlugin2": [[380, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.PluginAddsOptions": [[380, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.TestAddingOptions": [[380, 3, 1, "", "test_addingOptions"]], "armi.settings.tests.test_settings.TestFlagListSetting": [[380, 3, 1, "", "test_flagListSetting"], [380, 3, 1, "", "test_invalidFlagListTypeError"]], "armi.settings.tests.test_settings.TestSettings": [[380, 3, 1, "", "test_metaData"], [380, 3, 1, "", "test_updateEnvironmentSettingsFrom"]], "armi.settings.tests.test_settings.TestSettings2": [[380, 3, 1, "", "test_copySetting"], [380, 3, 1, "", "test_copySettingNotDefault"], [380, 3, 1, "", "test_csWorks"], [380, 3, 1, "", "test_default"], [380, 3, 1, "", "test_empty"], [380, 3, 1, "", "test_getFailures"], [380, 3, 1, "", "test_getSettingsSetByUser"], [380, 3, 1, "", "test_listCoercion"], [380, 3, 1, "", "test_listsMutable"], [380, 3, 1, "", "test_modified"], [380, 3, 1, "", "test_pluginSettings"], [380, 3, 1, "", "test_pluginValidatorsAreDiscovered"], [380, 3, 1, "", "test_schemaChecksType"], [380, 3, 1, "", "test_setModuleVerbosities"], [380, 3, 1, "", "test_settingIsOkayToGrab"], [380, 3, 1, "", "test_typeDetection"]], "armi.settings.tests.test_settings.TestSettingsUtils": [[380, 3, 1, "", "test_prompt"], [380, 3, 1, "", "test_recursiveScan"]], "armi.settings.tests.test_settings.TestSettingsValidationUtils": [[380, 3, 1, "", "test_validateVersion"]], "armi.settings.tests.test_settingsIO": [[381, 2, 1, "", "MockEntryPoint"], [381, 2, 1, "", "SettingArgsTests"], [381, 2, 1, "", "SettingsFailureTests"], [381, 2, 1, "", "SettingsReaderTests"], [381, 2, 1, "", "SettingsRenameTests"], [381, 2, 1, "", "SettingsWriterTests"]], "armi.settings.tests.test_settingsIO.MockEntryPoint": [[381, 4, 1, "", "name"], [381, 4, 1, "", "settingsArgument"]], "armi.settings.tests.test_settingsIO.SettingArgsTests": [[381, 3, 1, "", "test_cannotLoadSettingsAfterParsingCommandLineSetting"], [381, 3, 1, "", "test_commandLineSetting"]], "armi.settings.tests.test_settingsIO.SettingsFailureTests": [[381, 3, 1, "", "test_invalidFile"], [381, 3, 1, "", "test_loadFromYamlFailsOnBadNames"], [381, 3, 1, "", "test_settingsObjSetting"]], "armi.settings.tests.test_settingsIO.SettingsReaderTests": [[381, 3, 1, "", "test_basicSettingsReader"], [381, 3, 1, "", "test_readFromFile"]], "armi.settings.tests.test_settingsIO.SettingsRenameTests": [[381, 4, 1, "", "testSettings"], [381, 3, 1, "", "test_collidingRenames"], [381, 3, 1, "", "test_rename"]], "armi.settings.tests.test_settingsIO.SettingsWriterTests": [[381, 3, 1, "", "test_errorSettingsWriter"], [381, 3, 1, "", "test_writeFull"], [381, 3, 1, "", "test_writeMedium"], [381, 3, 1, "", "test_writeShort"], [381, 3, 1, "", "test_writeYaml"]], "armi.testing": [[382, 1, 1, "", "loadTestReactor"], [382, 1, 1, "", "reduceTestReactorRings"]], "armi.tests": [[383, 2, 1, "", "ArmiTestHelper"], [383, 2, 1, "", "Fixture"], [383, 1, 1, "", "fixture"], [383, 1, 1, "", "getEmptyCartesianReactor"], [383, 1, 1, "", "getEmptyHexReactor"], [384, 0, 0, "-", "mockRunLogs"], [383, 1, 1, "", "rebaselineTextComparisons"], [385, 0, 0, "-", "refSmallReactorShuffleLogic"], [383, 1, 1, "", "requires_fixture"], [386, 0, 0, "-", "test_apps"], [387, 0, 0, "-", "test_armiTestHelper"], [388, 0, 0, "-", "test_cartesian"], [389, 0, 0, "-", "test_context"], [390, 0, 0, "-", "test_interfaces"], [391, 0, 0, "-", "test_lwrInputs"], [392, 0, 0, "-", "test_mpiActions"], [393, 0, 0, "-", "test_mpiFeatures"], [394, 0, 0, "-", "test_mpiParameters"], [395, 0, 0, "-", "test_notebooks"], [396, 0, 0, "-", "test_plugins"], [397, 0, 0, "-", "test_runLog"], [398, 0, 0, "-", "test_tests"], [399, 0, 0, "-", "test_user_plugins"]], "armi.tests.ArmiTestHelper": [[383, 3, 1, "", "compareFilesLineByLine"], [383, 3, 1, "", "compareLines"]], "armi.tests.mockRunLogs": [[384, 2, 1, "", "BufferLog"], [384, 2, 1, "", "LogCounter"]], "armi.tests.mockRunLogs.BufferLog": [[384, 3, 1, "", "clearSingleWarnings"], [384, 3, 1, "", "emptyStdout"], [384, 3, 1, "", "getStderrValue"], [384, 3, 1, "", "getStdout"], [384, 3, 1, "", "log"]], "armi.tests.mockRunLogs.LogCounter": [[384, 3, 1, "", "log"]], "armi.tests.refSmallReactorShuffleLogic": [[385, 2, 1, "", "EquilibriumShuffler"], [385, 1, 1, "", "getFactorList"]], "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler": [[385, 3, 1, "", "chooseSwaps"]], "armi.tests.test_apps": [[386, 2, 1, "", "TestApps"], [386, 2, 1, "", "TestArmiHighLevel"], [386, 2, 1, "", "TestPlugin1"], [386, 2, 1, "", "TestPlugin2"], [386, 2, 1, "", "TestPlugin3"], [386, 2, 1, "", "TestPlugin4"]], "armi.tests.test_apps.TestApps": [[386, 3, 1, "", "test_disableFutureConfigures"], [386, 3, 1, "", "test_getParamRenames"], [386, 3, 1, "", "test_getParamRenamesInvalids"], [386, 3, 1, "", "test_getSettings"], [386, 3, 1, "", "test_isStableReleaseVersion"], [386, 3, 1, "", "test_registerPluginFlags"], [386, 3, 1, "", "test_splashText"], [386, 3, 1, "", "test_splashTextDifferentApp"], [386, 3, 1, "", "test_version"]], "armi.tests.test_apps.TestArmiHighLevel": [[386, 3, 1, "", "test_getDefaultPluginManager"], [386, 3, 1, "", "test_main"], [386, 3, 1, "", "test_overConfigured"]], "armi.tests.test_apps.TestPlugin1": [[386, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin2": [[386, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin3": [[386, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin4": [[386, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_armiTestHelper": [[387, 2, 1, "", "TestArmiTestHelper"]], "armi.tests.test_armiTestHelper.TestArmiTestHelper": [[387, 3, 1, "", "test_compareFilesFail"], [387, 3, 1, "", "test_compareFilesSucceedFalseNegative"], [387, 3, 1, "", "test_compareFilesSucess"]], "armi.tests.test_cartesian": [[388, 2, 1, "", "CartesianReactorTests"]], "armi.tests.test_cartesian.CartesianReactorTests": [[388, 3, 1, "", "test_custom"]], "armi.tests.test_context": [[389, 2, 1, "", "TestContextSerial"]], "armi.tests.test_context.TestContextSerial": [[389, 3, 1, "", "test_nonNoneData"], [389, 3, 1, "", "test_rank"]], "armi.tests.test_interfaces": [[390, 2, 1, "", "DummyInterface"], [390, 2, 1, "", "TestCodeInterface"], [390, 2, 1, "", "TestTightCoupler"]], "armi.tests.test_interfaces.DummyInterface": [[390, 4, 1, "", "function"], [390, 4, 1, "", "name"]], "armi.tests.test_interfaces.TestCodeInterface": [[390, 3, 1, "", "test_distributable"], [390, 3, 1, "", "test_duplicate"], [390, 3, 1, "", "test_enabled"], [390, 3, 1, "", "test_isRequestedDetailPoint"], [390, 3, 1, "", "test_nameContains"], [390, 3, 1, "", "test_preDistributeState"]], "armi.tests.test_interfaces.TestTightCoupler": [[390, 3, 1, "", "test_couplerActive"], [390, 3, 1, "", "test_getListDimension"], [390, 3, 1, "", "test_isConverged"], [390, 3, 1, "", "test_isConvergedRuntimeError"], [390, 3, 1, "", "test_isConvergedValueError"], [390, 3, 1, "", "test_storePreviousIterationValue"], [390, 3, 1, "", "test_storePreviousIterationValueException"]], "armi.tests.test_lwrInputs": [[391, 2, 1, "", "C5G7ReactorTests"]], "armi.tests.test_lwrInputs.C5G7ReactorTests": [[391, 3, 1, "", "test_loadC5G7"]], "armi.tests.test_mpiActions": [[392, 2, 1, "", "MpiIterTests"], [392, 2, 1, "", "QueueActionsTests"], [392, 1, 1, "", "passer"]], "armi.tests.test_mpiActions.MpiIterTests": [[392, 3, 1, "", "test_diagnosePickleErrorTestReactor"], [392, 3, 1, "", "test_excessProcesses"], [392, 3, 1, "", "test_mpiIter"], [392, 3, 1, "", "test_parallel"], [392, 3, 1, "", "test_perfectBalancing"], [392, 3, 1, "", "test_runActionsDistributeStateAction"], [392, 3, 1, "", "test_runActionsDistributionAction"], [392, 3, 1, "", "test_serialGather"], [392, 3, 1, "", "test_typicalBalancing"]], "armi.tests.test_mpiActions.QueueActionsTests": [[392, 3, 1, "", "test_disableForExclusiveTasks"], [392, 3, 1, "", "test_makeQueue"]], "armi.tests.test_mpiFeatures": [[393, 2, 1, "", "BcastAction1"], [393, 2, 1, "", "BcastAction2"], [393, 2, 1, "", "FailingInterface1"], [393, 2, 1, "", "FailingInterface2"], [393, 2, 1, "", "FailingInterface3"], [393, 2, 1, "", "MockInterface"], [393, 2, 1, "", "MpiDistributeStateTests"], [393, 2, 1, "", "MpiOperatorTests"], [393, 2, 1, "", "MpiPathToolsTests"], [393, 2, 1, "", "TestContextMpi"]], "armi.tests.test_mpiFeatures.BcastAction1": [[393, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.BcastAction2": [[393, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.FailingInterface1": [[393, 3, 1, "", "interactEveryNode"], [393, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface2": [[393, 3, 1, "", "interactEveryNode"], [393, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface3": [[393, 3, 1, "", "fail"], [393, 3, 1, "", "interactEveryNode"], [393, 4, 1, "", "name"], [393, 3, 1, "", "workerOperate"]], "armi.tests.test_mpiFeatures.MockInterface": [[393, 3, 1, "", "interactInit"], [393, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.MpiDistributeStateTests": [[393, 3, 1, "", "test_compileResults"], [393, 3, 1, "", "test_distributeInterfaces"], [393, 3, 1, "", "test_distributeReactor"], [393, 3, 1, "", "test_distributeSettings"], [393, 3, 1, "", "test_distributeState"]], "armi.tests.test_mpiFeatures.MpiOperatorTests": [[393, 3, 1, "", "test_basicOperatorMPI"], [393, 3, 1, "", "test_finalizeInteract"], [393, 3, 1, "", "test_primaryCritical"], [393, 3, 1, "", "test_primaryException"]], "armi.tests.test_mpiFeatures.MpiPathToolsTests": [[393, 3, 1, "", "test_cleanPathMpi"]], "armi.tests.test_mpiFeatures.TestContextMpi": [[393, 3, 1, "", "test_nonNoneData"], [393, 3, 1, "", "test_rank"]], "armi.tests.test_mpiParameters": [[394, 2, 1, "", "MockSyncPC"], [394, 2, 1, "", "SynchronizationTests"], [394, 1, 1, "", "makeComp"]], "armi.tests.test_mpiParameters.MockSyncPC": [[394, 4, 1, "", "pDefs"], [394, 4, 1, "", "pb"]], "armi.tests.test_mpiParameters.SynchronizationTests": [[394, 3, 1, "", "test_conflictsMaintainWithStateRetainer"], [394, 3, 1, "", "test_noConflicts"], [394, 3, 1, "", "test_withConflicts"], [394, 3, 1, "", "test_withConflictsButSameValue"]], "armi.tests.test_notebooks": [[395, 2, 1, "", "NotebookTests"], [395, 1, 1, "", "runNotebook"]], "armi.tests.test_notebooks.NotebookTests": [[395, 3, 1, "", "test_runDataModel"], [395, 3, 1, "", "test_runParamSweep"]], "armi.tests.test_plugins": [[396, 2, 1, "", "BeforeReactorPlugin"], [396, 2, 1, "", "PluginFlags1"], [396, 2, 1, "", "SillyAxialExpansionChanger"], [396, 2, 1, "", "SillyAxialPlugin"], [396, 2, 1, "", "TestPlugin"], [396, 2, 1, "", "TestPluginBasics"], [396, 2, 1, "", "TestPluginRegistration"]], "armi.tests.test_plugins.BeforeReactorPlugin": [[396, 3, 1, "", "beforeReactorConstruction"]], "armi.tests.test_plugins.PluginFlags1": [[396, 3, 1, "", "defineFlags"]], "armi.tests.test_plugins.SillyAxialExpansionChanger": [[396, 4, 1, "", "expansionData"], [396, 4, 1, "", "linked"]], "armi.tests.test_plugins.SillyAxialPlugin": [[396, 3, 1, "", "getAxialExpansionChanger"]], "armi.tests.test_plugins.TestPlugin": [[396, 4, 1, "", "plugin"], [396, 3, 1, "", "test_defineBlueprintsSections"], [396, 3, 1, "", "test_exposeInterfaces"]], "armi.tests.test_plugins.TestPluginBasics": [[396, 3, 1, "", "test_defineParameters"], [396, 3, 1, "", "test_exposeInterfaces"], [396, 3, 1, "", "test_pluginsExposeInterfaces"]], "armi.tests.test_plugins.TestPluginRegistration": [[396, 3, 1, "", "test_axialExpansionHook"], [396, 3, 1, "", "test_beforeReactorConstructionHook"], [396, 3, 1, "", "test_defineFlags"], [396, 3, 1, "", "test_passiveDBLoadPlugin"]], "armi.tests.test_runLog": [[397, 2, 1, "", "TestRunLog"], [397, 2, 1, "", "TestRunLogger"]], "armi.tests.test_runLog.TestRunLog": [[397, 3, 1, "", "test_callingStartLogMultipleTimes"], [397, 3, 1, "", "test_closeLogging"], [397, 3, 1, "", "test_concatenateLogs"], [397, 3, 1, "", "test_createLogDir"], [397, 3, 1, "", "test_getWhiteSpace"], [397, 3, 1, "", "test_invalidSetVerbosityByString"], [397, 3, 1, "", "test_parentRunLogging"], [397, 3, 1, "", "test_setVerbosity"], [397, 3, 1, "", "test_setVerbosityBeforeStartLog"], [397, 3, 1, "", "test_setVerbosityFromInteger"], [397, 3, 1, "", "test_setVerbosityFromString"], [397, 3, 1, "", "test_verbosityOutOfRange"], [397, 3, 1, "", "test_warningReport"], [397, 3, 1, "", "test_warningReportInvalid"]], "armi.tests.test_runLog.TestRunLogger": [[397, 3, 1, "", "test_allowStopDuplicates"], [397, 3, 1, "", "test_getDuplicatesFilter"], [397, 3, 1, "", "test_write"]], "armi.tests.test_tests": [[398, 2, 1, "", "TestCompareFiles"]], "armi.tests.test_tests.TestCompareFiles": [[398, 3, 1, "", "test_compareFileLine"]], "armi.tests.test_user_plugins": [[399, 2, 1, "", "TestUserPlugins"], [399, 2, 1, "", "UpInterface"], [399, 2, 1, "", "UserPluginBadDefineParameterRenames"], [399, 2, 1, "", "UserPluginBadDefinesSettings"], [399, 2, 1, "", "UserPluginFlags"], [399, 2, 1, "", "UserPluginFlags2"], [399, 2, 1, "", "UserPluginFlags3"], [399, 2, 1, "", "UserPluginOnProcessCoreLoading"], [399, 2, 1, "", "UserPluginWithInterface"]], "armi.tests.test_user_plugins.TestUserPlugins": [[399, 3, 1, "", "test_registerRepeatedUserPlugins"], [399, 3, 1, "", "test_registerUserPlugins"], [399, 3, 1, "", "test_registerUserPluginsAbsPath"], [399, 3, 1, "", "test_registerUserPluginsFromSettings"], [399, 3, 1, "", "test_userPluginOnProcessCoreLoading"], [399, 3, 1, "", "test_userPluginWithInterfaces"], [399, 3, 1, "", "test_userPluginsFlags"], [399, 3, 1, "", "test_validateUserPluginLimitations"]], "armi.tests.test_user_plugins.UpInterface": [[399, 3, 1, "", "interactEveryNode"], [399, 4, 1, "", "name"]], "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames": [[399, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_user_plugins.UserPluginBadDefinesSettings": [[399, 3, 1, "", "defineSettings"]], "armi.tests.test_user_plugins.UserPluginFlags": [[399, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags2": [[399, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags3": [[399, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading": [[399, 3, 1, "", "onProcessCoreLoading"]], "armi.tests.test_user_plugins.UserPluginWithInterface": [[399, 3, 1, "", "exposeInterfaces"]], "armi.utils": [[400, 2, 1, "", "MergeableDict"], [400, 2, 1, "", "MyPickler"], [401, 0, 0, "-", "asciimaps"], [400, 1, 1, "", "capStrLen"], [400, 1, 1, "", "classesInHierarchy"], [402, 0, 0, "-", "codeTiming"], [400, 1, 1, "", "createFormattedStrWithDelimiter"], [403, 0, 0, "-", "customExceptions"], [404, 0, 0, "-", "densityTools"], [405, 0, 0, "-", "directoryChangers"], [406, 0, 0, "-", "directoryChangersMpi"], [400, 1, 1, "", "doTestPickleOnAllContents2"], [407, 0, 0, "-", "dynamicImporter"], [408, 0, 0, "-", "flags"], [400, 1, 1, "", "getAvailabilityFactors"], [400, 1, 1, "", "getBurnSteps"], [400, 1, 1, "", "getCumulativeNodeNum"], [400, 1, 1, "", "getCycleLengths"], [400, 1, 1, "", "getCycleNames"], [400, 1, 1, "", "getCycleNodeFromCumulativeNode"], [400, 1, 1, "", "getCycleNodeFromCumulativeStep"], [400, 1, 1, "", "getFileSHA1Hash"], [400, 1, 1, "", "getMaxBurnSteps"], [400, 1, 1, "", "getNodesPerCycle"], [400, 1, 1, "", "getPowerFractions"], [400, 1, 1, "", "getPreviousTimeNode"], [400, 1, 1, "", "getStepLengths"], [400, 1, 1, "", "hasBurnup"], [410, 0, 0, "-", "hexagon"], [411, 0, 0, "-", "iterables"], [400, 1, 1, "", "list2str"], [412, 0, 0, "-", "mathematics"], [413, 0, 0, "-", "outputCache"], [414, 0, 0, "-", "parsing"], [415, 0, 0, "-", "pathTools"], [400, 1, 1, "", "plotMatrix"], [416, 0, 0, "-", "plotting"], [400, 1, 1, "", "prependToList"], [417, 0, 0, "-", "properties"], [418, 0, 0, "-", "reportPlotting"], [400, 1, 1, "", "safeCopy"], [400, 1, 1, "", "safeMove"], [400, 1, 1, "", "slantSplit"], [419, 0, 0, "-", "tabulate"], [420, 0, 0, "-", "tests"], [442, 0, 0, "-", "textProcessors"], [443, 0, 0, "-", "triangle"], [400, 1, 1, "", "tryPickleOnAllContents"], [400, 1, 1, "", "tryPickleOnAllContents3"], [444, 0, 0, "-", "units"], [400, 1, 1, "", "userName"]], "armi.utils.MergeableDict": [[400, 3, 1, "", "merge"]], "armi.utils.MyPickler": [[400, 3, 1, "", "save"]], "armi.utils.asciimaps": [[401, 2, 1, "", "AsciiMap"], [401, 2, 1, "", "AsciiMapCartesian"], [401, 2, 1, "", "AsciiMapHexFullFlatsUp"], [401, 2, 1, "", "AsciiMapHexFullTipsUp"], [401, 2, 1, "", "AsciiMapHexThirdFlatsUp"], [401, 1, 1, "", "asciiMapFromGeomAndDomain"]], "armi.utils.asciimaps.AsciiMap": [[401, 4, 1, "", "asciiLabelByIndices"], [401, 4, 1, "", "asciiLines"], [401, 4, 1, "", "asciiOffsets"], [401, 3, 1, "", "fromReactor"], [401, 3, 1, "", "gridContentsToAscii"], [401, 3, 1, "", "items"], [401, 3, 1, "", "keys"], [401, 3, 1, "", "readAscii"], [401, 3, 1, "", "writeAscii"]], "armi.utils.codeTiming": [[402, 2, 1, "", "MasterTimer"], [402, 1, 1, "", "getMasterTimer"], [402, 1, 1, "", "timed"]], "armi.utils.codeTiming.MasterTimer": [[402, 3, 1, "", "endTimer"], [402, 3, 1, "", "getActiveTimers"], [402, 3, 1, "", "getMasterTimer"], [402, 3, 1, "", "getTimer"], [402, 3, 1, "", "report"], [402, 3, 1, "", "startAll"], [402, 3, 1, "", "startTimer"], [402, 3, 1, "", "stopAll"], [402, 3, 1, "", "time"], [402, 3, 1, "", "timeline"]], "armi.utils.customExceptions": [[403, 7, 1, "", "InputError"], [403, 7, 1, "", "InvalidSettingsFileError"], [403, 7, 1, "", "InvalidSettingsStopProcess"], [403, 7, 1, "", "NonexistentSetting"], [403, 7, 1, "", "NonexistentSettingsFileError"], [403, 7, 1, "", "SettingException"], [403, 1, 1, "", "important"], [403, 1, 1, "", "info"], [403, 1, 1, "", "warn"], [403, 1, 1, "", "warn_when_root"]], "armi.utils.densityTools": [[404, 1, 1, "", "applyIsotopicsMix"], [404, 1, 1, "", "calculateMassDensity"], [404, 1, 1, "", "calculateNumberDensity"], [404, 1, 1, "", "expandElementalMassFracsToNuclides"], [404, 1, 1, "", "expandElementalNuclideMassFracs"], [404, 1, 1, "", "filterNuclideList"], [404, 1, 1, "", "formatMaterialCard"], [404, 1, 1, "", "getChemicals"], [404, 1, 1, "", "getMassFractions"], [404, 1, 1, "", "getMassInGrams"], [404, 1, 1, "", "getNDensFromMasses"], [404, 1, 1, "", "normalizeNuclideList"]], "armi.utils.directoryChangers": [[405, 2, 1, "", "DirectoryChanger"], [405, 2, 1, "", "ForcedCreationDirectoryChanger"], [405, 2, 1, "", "TemporaryDirectoryChanger"], [405, 1, 1, "", "directoryChangerFactory"]], "armi.utils.directoryChangers.DirectoryChanger": [[405, 3, 1, "", "close"], [405, 3, 1, "", "moveFiles"], [405, 3, 1, "", "open"], [405, 3, 1, "", "retrieveFiles"]], "armi.utils.directoryChangers.TemporaryDirectoryChanger": [[405, 3, 1, "", "GetRandomDirectory"]], "armi.utils.directoryChangersMpi": [[406, 2, 1, "", "MpiDirectoryChanger"]], "armi.utils.directoryChangersMpi.MpiDirectoryChanger": [[406, 3, 1, "", "close"], [406, 3, 1, "", "open"]], "armi.utils.dynamicImporter": [[407, 1, 1, "", "getEntireFamilyTree"]], "armi.utils.flags": [[408, 2, 1, "", "Flag"], [408, 2, 1, "", "auto"]], "armi.utils.flags.Flag": [[408, 3, 1, "", "extend"], [408, 3, 1, "", "fields"], [408, 3, 1, "", "from_bytes"], [408, 3, 1, "", "sortedFields"], [408, 3, 1, "", "to_bytes"], [408, 3, 1, "", "width"]], "armi.utils.hexagon": [[410, 1, 1, "", "area"], [410, 1, 1, "", "corners"], [410, 1, 1, "", "getIndexOfRotatedCell"], [410, 1, 1, "", "numPositionsInRing"], [410, 1, 1, "", "numRingsToHoldNumCells"], [410, 1, 1, "", "pitch"], [410, 1, 1, "", "side"], [410, 1, 1, "", "totalPositionsUpToRing"]], "armi.utils.iterables": [[411, 2, 1, "", "Sequence"], [411, 1, 1, "", "chunk"], [411, 1, 1, "", "flatten"], [411, 1, 1, "", "packBinaryStrings"], [411, 1, 1, "", "packHexStrings"], [411, 1, 1, "", "pivot"], [411, 1, 1, "", "split"], [411, 1, 1, "", "unpackBinaryStrings"], [411, 1, 1, "", "unpackHexStrings"]], "armi.utils.iterables.Sequence": [[411, 3, 1, "", "append"], [411, 3, 1, "", "copy"], [411, 3, 1, "", "drop"], [411, 3, 1, "", "extend"], [411, 3, 1, "", "select"], [411, 3, 1, "", "transform"]], "armi.utils.mathematics": [[412, 1, 1, "", "average1DWithinTolerance"], [412, 1, 1, "", "convertToSlice"], [412, 1, 1, "", "efmt"], [412, 1, 1, "", "expandRepeatedFloats"], [412, 1, 1, "", "findClosest"], [412, 1, 1, "", "findNearestValue"], [412, 1, 1, "", "findNearestValueAndIndex"], [412, 1, 1, "", "fixThreeDigitExp"], [412, 1, 1, "", "getFloat"], [412, 1, 1, "", "getStepsFromValues"], [412, 1, 1, "", "isMonotonic"], [412, 1, 1, "", "linearInterpolation"], [412, 1, 1, "", "minimizeScalarFunc"], [412, 1, 1, "", "newtonsMethod"], [412, 1, 1, "", "parabolaFromPoints"], [412, 1, 1, "", "parabolicInterpolation"], [412, 1, 1, "", "relErr"], [412, 1, 1, "", "resampleStepwise"], [412, 1, 1, "", "rotateXY"]], "armi.utils.outputCache": [[413, 1, 1, "", "cacheCall"], [413, 1, 1, "", "deleteCache"], [413, 1, 1, "", "retrieveOutput"], [413, 1, 1, "", "store"]], "armi.utils.parsing": [[414, 1, 1, "", "datetimeFromStr"], [414, 1, 1, "", "parseValue"], [414, 1, 1, "", "tryLiteralEval"]], "armi.utils.pathTools": [[415, 1, 1, "", "armiAbsPath"], [415, 1, 1, "", "cleanPath"], [415, 1, 1, "", "copyOrWarn"], [415, 1, 1, "", "importCustomPyModule"], [415, 1, 1, "", "isAccessible"], [415, 1, 1, "", "isFilePathNewer"], [415, 1, 1, "", "moduleAndAttributeExist"], [415, 1, 1, "", "separateModuleAndAttribute"]], "armi.utils.plotting": [[416, 2, 1, "", "DepthSlider"], [416, 1, 1, "", "close"], [416, 1, 1, "", "colorGenerator"], [416, 1, 1, "", "makeHistogram"], [416, 1, 1, "", "plotAssemblyTypes"], [416, 1, 1, "", "plotBlockDepthMap"], [416, 1, 1, "", "plotBlockDiagram"], [416, 1, 1, "", "plotBlockFlux"], [416, 1, 1, "", "plotFaceMap"], [416, 1, 1, "", "plotNucXs"]], "armi.utils.plotting.DepthSlider": [[416, 3, 1, "", "next"], [416, 3, 1, "", "previous"], [416, 3, 1, "", "set_val"], [416, 3, 1, "", "updatePageDepthColor"]], "armi.utils.properties": [[417, 7, 1, "", "ImmutablePropertyError"], [417, 1, 1, "", "areEqual"], [417, 1, 1, "", "createImmutableProperty"], [417, 1, 1, "", "lockImmutableProperties"], [417, 1, 1, "", "numpyHackForEqual"], [417, 1, 1, "", "unlockImmutableProperties"]], "armi.utils.reportPlotting": [[418, 1, 1, "", "createPlotMetaData"], [418, 1, 1, "", "keffVsTime"], [418, 1, 1, "", "movesVsCycle"], [418, 1, 1, "", "plotAxialProfile"], [418, 1, 1, "", "plotCoreOverviewRadar"], [418, 1, 1, "", "plotReactorPerformance"], [418, 1, 1, "", "valueVsTime"], [418, 1, 1, "", "xsHistoryVsTime"]], "armi.utils.tabulate": [[419, 2, 1, "", "DataRow"], [419, 2, 1, "", "Iterable"], [419, 2, 1, "", "Line"], [419, 2, 1, "", "Sized"], [419, 2, 1, "", "TableFormat"], [419, 2, 1, "", "TextWrapper"], [419, 2, 1, "", "chain"], [419, 1, 1, "", "namedtuple"], [419, 2, 1, "", "partial"], [419, 1, 1, "", "reduce"], [419, 1, 1, "", "tabulate"], [419, 2, 1, "", "zip_longest"]], "armi.utils.tabulate.DataRow": [[419, 4, 1, "", "begin"], [419, 4, 1, "", "end"], [419, 4, 1, "", "sep"]], "armi.utils.tabulate.Line": [[419, 4, 1, "", "begin"], [419, 4, 1, "", "end"], [419, 4, 1, "", "hline"], [419, 4, 1, "", "sep"]], "armi.utils.tabulate.TableFormat": [[419, 4, 1, "", "datarow"], [419, 4, 1, "", "headerrow"], [419, 4, 1, "", "lineabove"], [419, 4, 1, "", "linebelow"], [419, 4, 1, "", "linebelowheader"], [419, 4, 1, "", "linebetweenrows"], [419, 4, 1, "", "padding"], [419, 4, 1, "", "withHeaderHide"]], "armi.utils.tabulate.TextWrapper": [[419, 3, 1, "", "fill"], [419, 4, 1, "", "sentence_end_re"], [419, 4, 1, "", "unicode_whitespace_trans"], [419, 4, 1, "", "uspace"], [419, 4, 1, "", "wordsep_re"], [419, 4, 1, "", "wordsep_simple_re"], [419, 3, 1, "", "wrap"], [419, 4, 1, "", "x"]], "armi.utils.tabulate.chain": [[419, 3, 1, "", "from_iterable"]], "armi.utils.tabulate.partial": [[419, 4, 1, "", "args"], [419, 4, 1, "", "func"], [419, 4, 1, "", "keywords"]], "armi.utils.tests": [[421, 0, 0, "-", "test_asciimaps"], [422, 0, 0, "-", "test_codeTiming"], [423, 0, 0, "-", "test_custom_exceptions"], [424, 0, 0, "-", "test_densityTools"], [425, 0, 0, "-", "test_directoryChangers"], [426, 0, 0, "-", "test_directoryChangersMpi"], [427, 0, 0, "-", "test_flags"], [428, 0, 0, "-", "test_hexagon"], [429, 0, 0, "-", "test_iterables"], [430, 0, 0, "-", "test_mathematics"], [431, 0, 0, "-", "test_outputCache"], [432, 0, 0, "-", "test_parsing"], [433, 0, 0, "-", "test_pathTools"], [434, 0, 0, "-", "test_plotting"], [435, 0, 0, "-", "test_properties"], [436, 0, 0, "-", "test_reportPlotting"], [437, 0, 0, "-", "test_tabulate"], [438, 0, 0, "-", "test_textProcessors"], [439, 0, 0, "-", "test_triangle"], [440, 0, 0, "-", "test_units"], [441, 0, 0, "-", "test_utils"]], "armi.utils.tests.test_asciimaps": [[421, 2, 1, "", "TestAsciiMaps"]], "armi.utils.tests.test_asciimaps.TestAsciiMaps": [[421, 3, 1, "", "test_cartesian"], [421, 3, 1, "", "test_flatHexBases"], [421, 3, 1, "", "test_hexFullCornersUp"], [421, 3, 1, "", "test_hexFullCornersUpSpotCheck"], [421, 3, 1, "", "test_hexFullFlat"], [421, 3, 1, "", "test_hexFullFlatsUp"], [421, 3, 1, "", "test_hexSmallFlat"], [421, 3, 1, "", "test_hexThird"], [421, 3, 1, "", "test_hexWithEmptyRow"], [421, 3, 1, "", "test_hexWithHoles"], [421, 3, 1, "", "test_troublesomeHexThird"]], "armi.utils.tests.test_codeTiming": [[422, 2, 1, "", "CodeTimingTest"]], "armi.utils.tests.test_codeTiming.CodeTimingTest": [[422, 3, 1, "", "test_alternate_usages"], [422, 3, 1, "", "test_master"], [422, 3, 1, "", "test_messy_starts_and_stops"], [422, 3, 1, "", "test_method_definitions"], [422, 3, 1, "", "test_property_access"]], "armi.utils.tests.test_custom_exceptions": [[423, 2, 1, "", "CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions.CustomExceptionTests": [[423, 3, 1, "", "exampleImportantMessage"], [423, 3, 1, "", "exampleInfoMessage"], [423, 3, 1, "", "exampleWarnMessage"], [423, 3, 1, "", "exampleWarnWhenRootMessage"], [423, 3, 1, "", "test_important_decorator"], [423, 3, 1, "", "test_info_decorator"], [423, 3, 1, "", "test_warn_decorator"], [423, 3, 1, "", "test_warn_when_root_decorator"]], "armi.utils.tests.test_densityTools": [[424, 2, 1, "", "TestDensityTools"], [424, 2, 1, "", "UraniumOxide"]], "armi.utils.tests.test_densityTools.TestDensityTools": [[424, 3, 1, "", "test_applyIsotopicsMix"], [424, 3, 1, "", "test_calculateNumberDensity"], [424, 3, 1, "", "test_expandElement"], [424, 3, 1, "", "test_expandElementalMassFracsToNuclides"], [424, 3, 1, "", "test_expandElementalZeroMassFrac"], [424, 3, 1, "", "test_formatMaterialCard"], [424, 3, 1, "", "test_getChemicals"], [424, 3, 1, "", "test_getMassFractions"], [424, 3, 1, "", "test_getMassInGrams"], [424, 3, 1, "", "test_getNDensFromMasses"], [424, 3, 1, "", "test_normalizeNuclideList"]], "armi.utils.tests.test_densityTools.UraniumOxide": [[424, 3, 1, "", "density"], [424, 3, 1, "", "pseudoDensity"]], "armi.utils.tests.test_directoryChangers": [[425, 7, 1, "", "ExpectedException"], [425, 2, 1, "", "TestDirectoryChangers"]], "armi.utils.tests.test_directoryChangers.TestDirectoryChangers": [[425, 3, 1, "", "test_change_to_nonexisting_fails"], [425, 3, 1, "", "test_change_to_nonexisting_works_forced"], [425, 3, 1, "", "test_exception"], [425, 3, 1, "", "test_exception_disabled"], [425, 3, 1, "", "test_file_retrieval"], [425, 3, 1, "", "test_file_retrieval_missing_file"], [425, 3, 1, "", "test_mpiAction"], [425, 3, 1, "", "test_mpiActionFailsOnNonexistentPath"], [425, 3, 1, "", "test_temporary_cleans"]], "armi.utils.tests.test_directoryChangersMpi": [[426, 2, 1, "", "RevealYourDirectory"], [426, 2, 1, "", "TestMPI"]], "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory": [[426, 3, 1, "", "invokeHook"]], "armi.utils.tests.test_directoryChangersMpi.TestMPI": [[426, 3, 1, "", "test_MpiDirectoryChanger"]], "armi.utils.tests.test_flags": [[427, 2, 1, "", "ExampleFlag"], [427, 2, 1, "", "TestFlag"]], "armi.utils.tests.test_flags.ExampleFlag": [[427, 4, 1, "", "BAR"], [427, 4, 1, "", "BAZ"], [427, 4, 1, "", "FOO"]], "armi.utils.tests.test_flags.TestFlag": [[427, 3, 1, "", "test_auto"], [427, 3, 1, "", "test_bitwise"], [427, 3, 1, "", "test_bool"], [427, 3, 1, "", "test_collision_creation"], [427, 3, 1, "", "test_collision_extension"], [427, 3, 1, "", "test_extend"], [427, 3, 1, "", "test_getitem"], [427, 3, 1, "", "test_hashable"], [427, 3, 1, "", "test_inclusion"], [427, 3, 1, "", "test_iteration"]], "armi.utils.tests.test_hexagon": [[428, 2, 1, "", "TestHexagon"]], "armi.utils.tests.test_hexagon.TestHexagon": [[428, 4, 1, "", "N_FUZZY_DRAWS"], [428, 3, 1, "", "test_hexagon_area"], [428, 3, 1, "", "test_indexWithNoRotation"], [428, 3, 1, "", "test_numPositionsInRing"], [428, 3, 1, "", "test_positionsUpToRing"], [428, 3, 1, "", "test_rotateFuzzy"], [428, 3, 1, "", "test_rotatedCellCenter"], [428, 3, 1, "", "test_rotatedCellIndexErrors"], [428, 3, 1, "", "test_rotatedCellOrientationErrors"], [428, 3, 1, "", "test_rotatedFirstRing"]], "armi.utils.tests.test_iterables": [[429, 2, 1, "", "TestIterables"]], "armi.utils.tests.test_iterables.TestIterables": [[429, 3, 1, "", "test_addingSequences"], [429, 3, 1, "", "test_appendSequence"], [429, 3, 1, "", "test_arrayPivot"], [429, 3, 1, "", "test_chunk"], [429, 3, 1, "", "test_copySequence"], [429, 3, 1, "", "test_extendSequence"], [429, 3, 1, "", "test_flatten"], [429, 3, 1, "", "test_listPivot"], [429, 3, 1, "", "test_packingAndUnpackingBinaryStrings"], [429, 3, 1, "", "test_packingAndUnpackingHexStrings"], [429, 3, 1, "", "test_sequence"], [429, 3, 1, "", "test_sequenceInit"], [429, 3, 1, "", "test_split"]], "armi.utils.tests.test_mathematics": [[430, 2, 1, "", "TestMath"]], "armi.utils.tests.test_mathematics.TestMath": [[430, 3, 1, "", "test_average1DWithinTolerance"], [430, 3, 1, "", "test_average1DWithinToleranceInvalid"], [430, 3, 1, "", "test_convertToSlice"], [430, 3, 1, "", "test_efmt"], [430, 3, 1, "", "test_expandRepeatedFloats"], [430, 3, 1, "", "test_findClosest"], [430, 3, 1, "", "test_findNearestValue"], [430, 3, 1, "", "test_fixThreeDigitExp"], [430, 3, 1, "", "test_getFloat"], [430, 3, 1, "", "test_getStepsFromValues"], [430, 3, 1, "", "test_isMonotonic"], [430, 3, 1, "", "test_linearInterpolation"], [430, 3, 1, "", "test_minimizeScalarFunc"], [430, 3, 1, "", "test_newtonsMethod"], [430, 3, 1, "", "test_parabola"], [430, 3, 1, "", "test_parabolicInterpolation"], [430, 3, 1, "", "test_relErr"], [430, 3, 1, "", "test_resampleStepwiseAvg0"], [430, 3, 1, "", "test_resampleStepwiseAvg1"], [430, 3, 1, "", "test_resampleStepwiseAvg2"], [430, 3, 1, "", "test_resampleStepwiseAvg3"], [430, 3, 1, "", "test_resampleStepwiseAvg4"], [430, 3, 1, "", "test_resampleStepwiseAvg5"], [430, 3, 1, "", "test_resampleStepwiseAvg6"], [430, 3, 1, "", "test_resampleStepwiseAvg7"], [430, 3, 1, "", "test_resampleStepwiseAvgAllNones"], [430, 3, 1, "", "test_resampleStepwiseAvgComplicatedNone"], [430, 3, 1, "", "test_resampleStepwiseAvgNpArray"], [430, 3, 1, "", "test_resampleStepwiseAvgNpArrayAverage"], [430, 3, 1, "", "test_resampleStepwiseAvgOneNone"], [430, 3, 1, "", "test_resampleStepwiseSum0"], [430, 3, 1, "", "test_resampleStepwiseSum1"], [430, 3, 1, "", "test_resampleStepwiseSum2"], [430, 3, 1, "", "test_resampleStepwiseSum3"], [430, 3, 1, "", "test_resampleStepwiseSum4"], [430, 3, 1, "", "test_resampleStepwiseSum5"], [430, 3, 1, "", "test_resampleStepwiseSum6"], [430, 3, 1, "", "test_resampleStepwiseSum7"], [430, 3, 1, "", "test_resampleStepwiseSumAllNones"], [430, 3, 1, "", "test_resampleStepwiseSumOneNone"], [430, 3, 1, "", "test_rotateXY"]], "armi.utils.tests.test_outputCache": [[431, 2, 1, "", "TestOutputCache"]], "armi.utils.tests.test_outputCache.TestOutputCache": [[431, 3, 1, "", "test_deleteCache"], [431, 3, 1, "", "test_getCachedFolder"], [431, 3, 1, "", "test_hashFiles"], [431, 3, 1, "", "test_makeOutputManifest"], [431, 3, 1, "", "test_retrieveOutput"]], "armi.utils.tests.test_parsing": [[432, 2, 1, "", "LiteralEvalTest"]], "armi.utils.tests.test_parsing.LiteralEvalTest": [[432, 3, 1, "", "test_parseValue"], [432, 3, 1, "", "test_tryLiteralEval"]], "armi.utils.tests.test_pathTools": [[433, 2, 1, "", "PathToolsTests"]], "armi.utils.tests.test_pathTools.PathToolsTests": [[433, 3, 1, "", "test_cleanPathNoMpi"], [433, 3, 1, "", "test_copyOrWarnDir"], [433, 3, 1, "", "test_copyOrWarnFile"], [433, 3, 1, "", "test_importCustomModule"], [433, 3, 1, "", "test_isAccessible"], [433, 3, 1, "", "test_isFilePathNewer"], [433, 3, 1, "", "test_moduleAndAttributeExist"], [433, 3, 1, "", "test_separateModuleAndAttribute"]], "armi.utils.tests.test_plotting": [[434, 2, 1, "", "TestPatches"], [434, 2, 1, "", "TestPlotting"]], "armi.utils.tests.test_plotting.TestPatches": [[434, 3, 1, "", "test_makeAssemPatches"]], "armi.utils.tests.test_plotting.TestPlotting": [[434, 3, 1, "", "test_plotAssemblyTypes"], [434, 3, 1, "", "test_plotBlockFlux"], [434, 3, 1, "", "test_plotCartesianBlock"], [434, 3, 1, "", "test_plotDepthMap"], [434, 3, 1, "", "test_plotHexBlock"]], "armi.utils.tests.test_properties": [[435, 2, 1, "", "ImmutableClass"], [435, 2, 1, "", "ImmutablePropertyTests"]], "armi.utils.tests.test_properties.ImmutableClass": [[435, 3, 1, "", "initialize"], [435, 5, 1, "", "myNum"]], "armi.utils.tests.test_properties.ImmutablePropertyTests": [[435, 3, 1, "", "test_cannotAssignValueToImmutableProperty"], [435, 3, 1, "", "test_retreivingUnassignedValueRaisesError"], [435, 3, 1, "", "test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "armi.utils.tests.test_reportPlotting": [[436, 2, 1, "", "TestRadar"]], "armi.utils.tests.test_reportPlotting.TestRadar": [[436, 3, 1, "", "test_createPlotMetaData"], [436, 3, 1, "", "test_keffVsTime"], [436, 3, 1, "", "test_movesVsCycle"], [436, 3, 1, "", "test_plotAxialProfile"], [436, 3, 1, "", "test_radar"], [436, 3, 1, "", "test_valueVsTime"], [436, 3, 1, "", "test_xsHistoryVsTime"]], "armi.utils.tests.test_tabulate": [[437, 2, 1, "", "TestTabulateAPI"], [437, 2, 1, "", "TestTabulateInputs"], [437, 2, 1, "", "TestTabulateInternal"], [437, 2, 1, "", "TestTabulateOutput"]], "armi.utils.tests.test_tabulate.TestTabulateAPI": [[437, 3, 1, "", "test_tabulateFormats"]], "armi.utils.tests.test_tabulate.TestTabulateInputs": [[437, 3, 1, "", "test_dictLike"], [437, 3, 1, "", "test_iterableOfEmpties"], [437, 3, 1, "", "test_iterableOfIterables"], [437, 3, 1, "", "test_iterableOfIterablesFirstrow"], [437, 3, 1, "", "test_iterableOfIterablesHeaders"], [437, 3, 1, "", "test_listBytes"], [437, 3, 1, "", "test_listOfDicts"], [437, 3, 1, "", "test_listOfDictsFirstrow"], [437, 3, 1, "", "test_listOfDictsKeys"], [437, 3, 1, "", "test_listOfDictsWithDictOfHeaders"], [437, 3, 1, "", "test_listOfDictsWithListOfHeaders"], [437, 3, 1, "", "test_listOfDictsWithMissingKeys"], [437, 3, 1, "", "test_listOfLists"], [437, 3, 1, "", "test_listOfListsFirstrow"], [437, 3, 1, "", "test_listOfListsKeys"], [437, 3, 1, "", "test_listOfNamedtuples"], [437, 3, 1, "", "test_listOfNamedtuplesKeys"], [437, 3, 1, "", "test_listOfOrdereddicts"], [437, 3, 1, "", "test_listOfUserdicts"], [437, 3, 1, "", "test_listOfUserdictsKeys"], [437, 3, 1, "", "test_numpy2d"], [437, 3, 1, "", "test_numpy2dFirstrow"], [437, 3, 1, "", "test_numpy2dKeys"], [437, 3, 1, "", "test_numpyRecordArray"], [437, 3, 1, "", "test_numpyRecordArrayHeaders"], [437, 3, 1, "", "test_numpyRecordArrayKeys"], [437, 3, 1, "", "test_tightCouplingExample"]], "armi.utils.tests.test_tabulate.TestTabulateInternal": [[437, 3, 1, "", "test_alignCellVeriticallyBottomMultiTextMultiplePad"], [437, 3, 1, "", "test_alignCellVeriticallyBottomSingleTextMultiplePad"], [437, 3, 1, "", "test_alignCellVeriticallyCenterMultiTextMultiplePad"], [437, 3, 1, "", "test_alignCellVeriticallyCenterSingleTextMultiplePad"], [437, 3, 1, "", "test_alignCellVeriticallyOneLineOnly"], [437, 3, 1, "", "test_alignCellVeriticallyTopMultiTextMultiplePad"], [437, 3, 1, "", "test_alignCellVeriticallyTopSingleTextMultiplePad"], [437, 3, 1, "", "test_alignColumnDecimal"], [437, 3, 1, "", "test_alignColumnDecimalWithIncorrectThousandSeparators"], [437, 3, 1, "", "test_alignColumnDecimalWithThousandSeparators"], [437, 3, 1, "", "test_alignColumnMultiline"], [437, 3, 1, "", "test_alignColumnNone"], [437, 3, 1, "", "test_assortedRareEdgeCases"], [437, 3, 1, "", "test_bool"], [437, 3, 1, "", "test_buildLine"], [437, 3, 1, "", "test_buildRow"], [437, 3, 1, "", "test_format"], [437, 3, 1, "", "test_isMultiline"], [437, 3, 1, "", "test_multilineWidth"], [437, 3, 1, "", "test_normalizeTabularData"], [437, 3, 1, "", "test_type"], [437, 3, 1, "", "test_visibleWidth"], [437, 3, 1, "", "test_wrapTextToColWidths"]], "armi.utils.tests.test_tabulate.TestTabulateOutput": [[437, 3, 1, "", "test_colAlignMulti"], [437, 3, 1, "", "test_colAlignMultiWithSepLine"], [437, 3, 1, "", "test_colAlignOrheadersAlignTooLong"], [437, 3, 1, "", "test_columnAlignment"], [437, 3, 1, "", "test_columnGlobalAndSpecificAlignment"], [437, 3, 1, "", "test_dictLikeWithIndex"], [437, 3, 1, "", "test_disableNumParseDefault"], [437, 3, 1, "", "test_disableNumParseList"], [437, 3, 1, "", "test_disableNumParseTrue"], [437, 3, 1, "", "test_emptyData"], [437, 3, 1, "", "test_emptyDataWithHeaders"], [437, 3, 1, "", "test_emptyDataWithoutHeaders"], [437, 3, 1, "", "test_floatConversions"], [437, 3, 1, "", "test_floatFmt"], [437, 3, 1, "", "test_floatFmtMulti"], [437, 3, 1, "", "test_github"], [437, 3, 1, "", "test_grid"], [437, 3, 1, "", "test_gridHeaderless"], [437, 3, 1, "", "test_gridMultiline"], [437, 3, 1, "", "test_gridMultilineHeaderless"], [437, 3, 1, "", "test_gridMultilineWithEmptyCells"], [437, 3, 1, "", "test_gridMultilineWithEmptyCellsHeaderless"], [437, 3, 1, "", "test_headersGlobalAndSpecificAlignment"], [437, 3, 1, "", "test_intFmt"], [437, 3, 1, "", "test_listOfListsWithIndex"], [437, 3, 1, "", "test_listOfListsWithIndexFirstrow"], [437, 3, 1, "", "test_listOfListsWithIndexWithSepLine"], [437, 3, 1, "", "test_listOfListsWithSuppliedIndex"], [437, 3, 1, "", "test_maxColWidthsingleValue"], [437, 3, 1, "", "test_maxcolwidthHonorDisableParsenum"], [437, 3, 1, "", "test_maxcolwidthPadTailingWidths"], [437, 3, 1, "", "test_missingVal"], [437, 3, 1, "", "test_missingValMulti"], [437, 3, 1, "", "test_noData"], [437, 3, 1, "", "test_noDataWithoutHeaders"], [437, 3, 1, "", "test_plain"], [437, 3, 1, "", "test_plainHeaderless"], [437, 3, 1, "", "test_plainMaxcolwidthAutowraps"], [437, 3, 1, "", "test_plainMaxcolwidthAutowrapsWithSep"], [437, 3, 1, "", "test_plainMultiline"], [437, 3, 1, "", "test_plainMultilineHeaderless"], [437, 3, 1, "", "test_plainMultilineWithEmptyCells"], [437, 3, 1, "", "test_plainMultilineWithEmptyCellsHeaderless"], [437, 3, 1, "", "test_plainMultilineWithLinks"], [437, 3, 1, "", "test_plainmaxHeaderColWidthsAutowraps"], [437, 3, 1, "", "test_pretty"], [437, 3, 1, "", "test_prettyHeaderless"], [437, 3, 1, "", "test_prettyMultiline"], [437, 3, 1, "", "test_prettyMultilineHeaderless"], [437, 3, 1, "", "test_prettyMultilineWithEmptyCells"], [437, 3, 1, "", "test_prettyMultilineWithEmptyCellsHeaderless"], [437, 3, 1, "", "test_prettyMultilineWithLinks"], [437, 3, 1, "", "test_readmeExampleWithSep"], [437, 3, 1, "", "test_rst"], [437, 3, 1, "", "test_rstHeaderless"], [437, 3, 1, "", "test_rstMultiline"], [437, 3, 1, "", "test_rstMultilineWithEmptyCells"], [437, 3, 1, "", "test_rstMultilineWithEmptyCellsHeaderless"], [437, 3, 1, "", "test_rstMultilineWithLinks"], [437, 3, 1, "", "test_rstWithEmptyValuesInFirstColumn"], [437, 3, 1, "", "test_simple"], [437, 3, 1, "", "test_simpleHeaderless"], [437, 3, 1, "", "test_simpleHeaderlessWithSepLine"], [437, 3, 1, "", "test_simpleMultiline"], [437, 3, 1, "", "test_simpleMultiline2"], [437, 3, 1, "", "test_simpleMultiline2WithSepLine"], [437, 3, 1, "", "test_simpleMultilineHeaderless"], [437, 3, 1, "", "test_simpleMultilineWithEmptyCells"], [437, 3, 1, "", "test_simpleMultilineWithEmptyCellsHeaderless"], [437, 3, 1, "", "test_simpleMultilineWithLinks"], [437, 3, 1, "", "test_simpleWithSepLine"]], "armi.utils.tests.test_textProcessors": [[438, 2, 1, "", "SequentialReaderTests"], [438, 2, 1, "", "TestTextProcessor"], [438, 2, 1, "", "YamlIncludeTest"]], "armi.utils.tests.test_textProcessors.SequentialReaderTests": [[438, 3, 1, "", "test_consumeLine"], [438, 3, 1, "", "test_issueWarningOnFindingText"], [438, 3, 1, "", "test_raiseErrorOnFindingText"], [438, 3, 1, "", "test_readFile"], [438, 3, 1, "", "test_readFileWithPattern"], [438, 4, 1, "", "textStream"]], "armi.utils.tests.test_textProcessors.TestTextProcessor": [[438, 3, 1, "", "test_fsearch"], [438, 3, 1, "", "test_fsearchText"]], "armi.utils.tests.test_textProcessors.YamlIncludeTest": [[438, 3, 1, "", "test_findIncludes"], [438, 3, 1, "", "test_resolveIncludes"], [438, 3, 1, "", "test_resolveIncludes_StringIO"]], "armi.utils.tests.test_triangle": [[439, 2, 1, "", "TestTriangle"]], "armi.utils.tests.test_triangle.TestTriangle": [[439, 3, 1, "", "test_checkIfPointIsInTriangle"], [439, 3, 1, "", "test_checkIfPointIsInTriangle2"], [439, 3, 1, "", "test_getTriangleArea"]], "armi.utils.tests.test_units": [[440, 2, 1, "", "TestUnits"]], "armi.utils.tests.test_units.TestUnits": [[440, 3, 1, "", "test_convertXtoPascal"], [440, 3, 1, "", "test_getTc"], [440, 3, 1, "", "test_getTemperature"], [440, 3, 1, "", "test_getTf"], [440, 3, 1, "", "test_getTk"], [440, 3, 1, "", "test_getTmev"], [440, 3, 1, "", "test_getXYLineParameters"], [440, 3, 1, "", "test_pressure_converter"], [440, 3, 1, "", "test_sanitizeAngle"]], "armi.utils.tests.test_utils": [[441, 2, 1, "", "CyclesSettingsTests"], [441, 2, 1, "", "TestGeneralUtils"]], "armi.utils.tests.test_utils.CyclesSettingsTests": [[441, 4, 1, "", "availabilityFactorsDetailedSolution"], [441, 4, 1, "", "availabilityFactorsSimpleSolution"], [441, 4, 1, "", "burnStepsDetailedSolution"], [441, 4, 1, "", "burnStepsSimpleSolution"], [441, 4, 1, "", "cycleLengthsDetailedSolution"], [441, 4, 1, "", "cycleLengthsSimpleSolution"], [441, 4, 1, "", "cycleNamesDetailedSolution"], [441, 4, 1, "", "cycleNamesSimpleSolution"], [441, 4, 1, "", "detailedCyclesSettings"], [441, 4, 1, "", "maxBurnStepsDetailedSolution"], [441, 4, 1, "", "maxBurnStepsSimpleSolution"], [441, 4, 1, "", "nodesPerCycleDetailedSolution"], [441, 4, 1, "", "nodesPerCycleSimpleSolution"], [441, 4, 1, "", "powerFractionsDetailedSolution"], [441, 4, 1, "", "powerFractionsSimpleSolution"], [441, 4, 1, "", "simpleCyclesSettings"], [441, 4, 1, "", "stepLengthsDetailedSolution"], [441, 4, 1, "", "stepLengthsSimpleSolution"], [441, 3, 1, "", "test_getAvailabilityFactors"], [441, 3, 1, "", "test_getBurnSteps"], [441, 3, 1, "", "test_getCumulativeNodeNum"], [441, 3, 1, "", "test_getCycleLengths"], [441, 3, 1, "", "test_getCycleNames"], [441, 3, 1, "", "test_getCycleNodeFromCumulativeNode"], [441, 3, 1, "", "test_getCycleNodeFromCumulativeStep"], [441, 3, 1, "", "test_getMaxBurnSteps"], [441, 3, 1, "", "test_getNodesPerCycle"], [441, 3, 1, "", "test_getPowerFractions"], [441, 3, 1, "", "test_getPreviousTimeNode"], [441, 3, 1, "", "test_getStepLengths"], [441, 3, 1, "", "test_hasBurnup"]], "armi.utils.tests.test_utils.TestGeneralUtils": [[441, 3, 1, "", "test_capStrLen"], [441, 3, 1, "", "test_classesInHierarchy"], [441, 3, 1, "", "test_codeTiming"], [441, 3, 1, "", "test_createFormattedStrWithDelimiter"], [441, 3, 1, "", "test_getFileSHA1Hash"], [441, 3, 1, "", "test_getFileSHA1HashDir"], [441, 3, 1, "", "test_list2str"], [441, 3, 1, "", "test_mergeableDictionary"], [441, 3, 1, "", "test_plotMatrix"], [441, 3, 1, "", "test_prependToList"], [441, 3, 1, "", "test_safeCopy"], [441, 3, 1, "", "test_safeMove"], [441, 3, 1, "", "test_safeMoveDir"], [441, 3, 1, "", "test_slantSplit"]], "armi.utils.textProcessors": [[442, 6, 1, "", "DECIMAL_PATTERN"], [442, 6, 1, "", "FLOATING_PATTERN"], [442, 2, 1, "", "FileMark"], [442, 6, 1, "", "SCIENTIFIC_PATTERN"], [442, 2, 1, "", "SequentialReader"], [442, 2, 1, "", "SequentialStringIOReader"], [442, 2, 1, "", "TextProcessor"], [442, 1, 1, "", "findYamlInclusions"], [442, 1, 1, "", "resolveMarkupInclusions"]], "armi.utils.textProcessors.SequentialReader": [[442, 3, 1, "", "consumeLine"], [442, 3, 1, "", "issueWarningOnFindingText"], [442, 3, 1, "", "raiseErrorOnFindingPattern"], [442, 3, 1, "", "raiseErrorOnFindingText"], [442, 3, 1, "", "searchForPattern"], [442, 3, 1, "", "searchForPatternOnNextLine"], [442, 3, 1, "", "searchForText"]], "armi.utils.textProcessors.TextProcessor": [[442, 3, 1, "", "checkErrors"], [442, 4, 1, "", "decimal"], [442, 3, 1, "", "errorChecking"], [442, 3, 1, "", "fsearch"], [442, 4, 1, "", "number"], [442, 3, 1, "", "reset"], [442, 4, 1, "", "scipat"]], "armi.utils.triangle": [[443, 1, 1, "", "checkIfPointIsInTriangle"], [443, 1, 1, "", "getTriangleArea"], [443, 1, 1, "", "getTriangleCentroid"]], "armi.utils.units": [[444, 1, 1, "", "convertAtmToPascal"], [444, 1, 1, "", "convertBarToPascal"], [444, 1, 1, "", "convertMmhgToPascal"], [444, 1, 1, "", "getTc"], [444, 1, 1, "", "getTemperature"], [444, 1, 1, "", "getTf"], [444, 1, 1, "", "getTk"], [444, 1, 1, "", "getTmev"], [444, 1, 1, "", "getXYLineParameters"], [444, 1, 1, "", "sanitizeAngle"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"armi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 451, 452, 453, 454, 455, 456, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 507, 508], "packag": [0, 2, 3, 12, 22, 29, 33, 37, 40, 46, 48, 52, 57, 60, 73, 79, 118, 144, 148, 152, 156, 164, 165, 180, 196, 203, 209, 212, 215, 222, 228, 233, 238, 244, 248, 251, 253, 255, 258, 265, 272, 273, 275, 280, 284, 289, 296, 305, 312, 313, 320, 323, 335, 344, 353, 368, 370, 378, 382, 383, 400, 420, 446, 456, 496], "note": [0, 1, 3, 5, 6, 7, 9, 10, 15, 19, 20, 28, 47, 49, 50, 54, 55, 56, 74, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 92, 93, 95, 96, 97, 99, 102, 103, 104, 105, 110, 111, 112, 114, 115, 116, 139, 140, 141, 142, 151, 153, 154, 155, 159, 160, 163, 165, 166, 167, 171, 172, 173, 174, 175, 176, 179, 184, 191, 197, 198, 200, 201, 202, 204, 205, 207, 208, 211, 213, 214, 215, 216, 219, 220, 223, 224, 227, 237, 238, 240, 241, 243, 245, 249, 252, 254, 256, 259, 266, 267, 283, 285, 288, 289, 292, 293, 294, 295, 305, 306, 307, 308, 310, 311, 314, 315, 316, 317, 318, 319, 322, 324, 326, 330, 331, 337, 339, 340, 341, 342, 347, 349, 350, 352, 355, 356, 363, 366, 369, 374, 375, 380, 382, 383, 390, 400, 401, 404, 405, 406, 410, 412, 413, 415, 416, 434, 442, 443, 444, 456, 486, 487, 488, 489, 490, 491], "subpackag": [0, 2, 3, 22, 37, 46, 48, 60, 79, 144, 152, 164, 165, 203, 212, 215, 228, 238, 244, 251, 255, 275, 284, 289, 312, 368, 400], "submodul": [0, 2, 3, 12, 22, 29, 33, 37, 40, 46, 48, 52, 57, 60, 73, 79, 118, 144, 148, 152, 156, 164, 165, 180, 196, 203, 209, 212, 215, 222, 228, 233, 238, 244, 248, 251, 253, 255, 258, 265, 273, 275, 280, 284, 289, 296, 305, 312, 313, 320, 323, 335, 344, 353, 368, 370, 378, 383, 400, 420, 494], "app": [1, 451, 494], "modul": [1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 252, 254, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 274, 276, 277, 278, 279, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 456], "bookkeep": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "db": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "when": 3, "updat": [3, 446, 485, 514], "version": [3, 456], "databas": [3, 5, 19, 65, 492, 509], "revis": 3, "changelog": 3, "comparedb3": 4, "databaseinterfac": 6, "factori": [7, 497], "jaggedarrai": 8, "layout": 9, "passivedbloadplugin": 10, "permiss": 11, "test": [12, 13, 14, 15, 16, 17, 29, 30, 31, 33, 34, 35, 36, 40, 41, 42, 52, 53, 54, 57, 58, 59, 73, 74, 75, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 148, 149, 150, 156, 157, 158, 159, 160, 161, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 209, 210, 211, 222, 223, 224, 225, 226, 233, 234, 235, 236, 248, 249, 250, 253, 254, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 273, 274, 280, 281, 296, 297, 298, 299, 300, 301, 302, 303, 304, 323, 324, 325, 326, 327, 328, 329, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 448, 455, 456], "test_comparedb3": 13, "test_database3": 14, "test_databaseinterfac": 15, "test_jaggedarrai": 16, "test_layout": 17, "typedef": 18, "historytrack": 19, "get": [19, 449, 484, 485, 514], "histori": [19, 484, 507, 509], "inform": 19, "us": [19, 165, 446, 452, 455, 484], "base": [19, 145, 152, 451, 494], "tracker": 19, "specifi": [19, 498], "paramet": [19, 230, 262, 277, 288, 344, 345, 346, 347, 348, 449, 455, 497, 502, 503, 504, 505, 512, 513], "add": [19, 456], "eol": 19, "report": [19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 263, 454, 501, 507], "block": [19, 288, 456, 463, 468, 470, 498, 499, 503, 507, 510, 513], "assembli": [19, 285, 498, 499, 502, 507], "track": 19, "maininterfac": 20, "memoryprofil": 21, "data": [23, 449, 455, 496, 508, 513], "html": [24, 454], "newreportutil": 25, "newreport": 26, "reportinterfac": 27, "reportingutil": 28, "test_newreport": 30, "test_report": 31, "snapshotinterfac": 32, "test_historytrack": 34, "test_memoryprofil": 35, "test_snapshot": 36, "visual": [37, 38, 39, 40, 41, 42, 43, 44, 45], "dumper": 38, "entrypoint": [39, 66], "test_vi": 41, "test_xdmf": 42, "util": [43, 227, 237, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444], "vtk": 44, "limit": 44, "xdmf": [45, 494], "case": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 484, 507], "inputmodifi": [48, 49, 50, 51, 52, 53, 54], "neutronicsmodifi": 50, "pintypeinputmodifi": 51, "test_inputmodifi": 53, "test_pintypeinputmodifi": 54, "suit": 55, "suitebuild": 56, "test_cas": 58, "test_suitebuild": 59, "cli": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "checkinput": 61, "cleantemp": 62, "clone": 63, "comparecas": 64, "gridgui": 67, "migrateinput": 68, "modifi": [69, 492, 497], "reportsentrypoint": 70, "run": [71, 455, 494, 507], "runsuit": 72, "test_runentrypoint": 74, "test_runsuit": 75, "conftest": 76, "context": 77, "interfac": [78, 449, 494, 510], "materi": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 462, 477, 494, 495], "air": 80, "alloy200": 81, "b4c": 82, "be9": 83, "cah2": 84, "californium": 85, "concret": 86, "copper": 87, "c": 88, "custom": [89, 494, 499, 507], "graphit": 90, "hafnium": 91, "hastelloyn": 92, "ht9": 93, "inconel": 94, "inconel600": 95, "inconel625": 96, "inconel800": 97, "inconelpe16": 98, "inconelx750": 99, "lead": 100, "leadbismuth": 101, "lithium": [102, 496], "magnesium": 103, "mgo": 105, "mixtur": 106, "molybdenum": 107, "mox": [108, 499], "nz": 109, "potassium": 110, "scandiumoxid": 111, "sic": 112, "sodium": 113, "sodiumchlorid": 114, "sulfur": 115, "tzm": 116, "tantalum": 117, "test__init__": 119, "test_air": 120, "test_b4c": 121, "test_be9": 122, "test_graphit": 123, "test_lithium": 124, "test_materi": 125, "test_sic": 126, "test_sulfur": 127, "test_thoriumoxid": 128, "test_uzr": 129, "test_wat": 130, "thu": 131, "thorium": 132, "thoriumoxid": 133, "uthzr": 134, "uzr": 135, "uranium": 136, "uraniumoxid": 137, "void": 138, "water": 139, "yttriumoxid": 140, "zincoxid": 141, "zr": 142, "meta": 143, "migrat": [144, 145, 146, 147, 148, 149, 150], "m0_1_3": 146, "m0_1_6": 147, "test_m0_1_6": 149, "test_migration_bas": 150, "mpiaction": 151, "sampl": 151, "mpi": [151, 452], "action": 151, "workflow": 151, "nucdirectori": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "element": [152, 153, 454, 496], "nuclid": [152, 469, 496, 499, 507], "name": [152, 455, 507], "label": [152, 174], "id": 152, "indic": 152, "rapid": 152, "access": [152, 496, 501, 508], "list": [153, 477, 494], "nucdir": 154, "nuclidebas": 155, "test_el": 157, "test_nucdirectori": 158, "test_nuclidebas": 159, "test_thermalscatt": 160, "test_transmut": 161, "thermalscatt": 162, "transmut": [163, 480], "nucleardataio": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "cccc": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "system": [165, 484, 499, 507], "implement": [165, 451], "detail": [165, 451, 469, 507], "discuss": 165, "compx": 167, "dif3d": 168, "dlayx": 169, "fixsrc": 170, "gamiso": 171, "geodst": 172, "isotx": [173, 475], "nhflux": 175, "pmatrx": 176, "pwdint": 177, "rtflux": 178, "rzflux": 179, "test_cccc": 181, "test_compx": 182, "test_dif3d": 183, "test_dlayx": 184, "test_fixsrc": 185, "test_gamiso": 186, "test_geodst": 187, "test_isotx": 188, "test_label": 189, "test_nhflux": 190, "test_pmatrx": 191, "test_pwdint": 192, "test_rtflux": 193, "test_rzflux": 194, "nuclearfilemetadata": 195, "test_xscollect": 197, "test_xslibrari": 198, "test_xsnuclid": 199, "xscollect": 200, "xslibrari": 201, "xsnuclid": 202, "oper": [203, 204, 205, 206, 207, 208, 209, 210, 211, 449, 484, 507], "operatormpi": 205, "runtyp": 206, "settingsvalid": [207, 377], "snapshot": [208, 449], "test_operatorsnapshot": 210, "test_oper": 211, "physic": [212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 484, 494, 510], "constant": [213, 338], "execut": [214, 229], "fuelcycl": [215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "assemblyrotationalgorithm": 216, "fuelhandlerfactori": 217, "fuelhandlerinterfac": 218, "fuelhandl": 219, "hexassemblyfuelmgmtutil": 220, "set": [221, 232, 264, 279, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 494, 498, 499, 507, 508, 509], "test_assemblyrotationalgorithm": 223, "test_fuelhandl": 224, "test_hexassemblyfuelmgmtutil": 225, "test_util": [226, 441], "fuelperform": [228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "plugin": [231, 278, 283, 446, 449, 451, 494, 507], "test_execut": [234, 274], "test_fuelperformanceplugin": 235, "test_fuelperformanceutil": 236, "neutron": [238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "const": [239, 276], "crosssectiongroupmanag": 240, "crosssectionset": 241, "diffisotx": 242, "energygroup": 243, "fissionproductmodel": [244, 245, 246, 247, 248, 249, 250], "fissionproductmodelset": 246, "lumpedfissionproduct": 247, "test_fissionproductmodel": 249, "test_lumpedfissionproduct": 250, "globalflux": [251, 252, 253, 254], "globalfluxinterfac": 252, "test_globalfluxinterfac": 254, "latticephys": [255, 256, 257, 258, 259, 260], "latticephysicsinterfac": 256, "latticephysicswrit": 257, "test_latticeinterfac": 259, "test_latticewrit": 260, "macroxsgenerationinterfac": 261, "test_crosssectionmanag": 266, "test_crosssectionset": 267, "test_crosssectiont": 268, "test_energygroup": 269, "test_macroxsgenerationinterfac": 270, "test_neutronicsplugin": 271, "safeti": 272, "thermalhydraul": [275, 276, 277, 278, 279, 280, 281], "test_thermalhydraulicsplugin": 281, "pluginmanag": 282, "reactor": [284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 449, 464, 478, 479, 492, 497, 498, 499, 509, 512], "assemblyparamet": 286, "blockparamet": 287, "blueprint": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 449, 498, 499, 507, 509, 513], "assemblyblueprint": 290, "blockblueprint": 291, "componentblueprint": 292, "gridblueprint": 293, "isotopicopt": 294, "reactorblueprint": 295, "test_assemblyblueprint": 297, "test_blockblueprint": 298, "test_blueprint": 299, "test_componentblueprint": 300, "test_customisotop": 301, "test_gridblueprint": 302, "test_materialmodif": 303, "test_reactorblueprint": 304, "compon": [305, 306, 307, 308, 309, 310, 468, 504, 507, 513], "basicshap": 306, "complexshap": 307, "componentparamet": 309, "volumetricshap": 310, "composit": 311, "convert": [312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 449], "axialexpansionchang": [313, 314, 315, 316], "assemblyaxiallinkag": 314, "expansiondata": 316, "blockconvert": 317, "geometryconvert": 318, "meshconvert": 319, "parametersweep": [320, 321], "generalparametersweepconvert": 321, "pintypeblockconvert": 322, "test_axialexpansionchang": 324, "test_blockconvert": 325, "test_geometryconvert": 326, "test_meshconvert": 327, "test_pintypeblockconvert": 328, "test_uniformmesh": 329, "uniformmesh": 330, "requir": [330, 456, 484, 489], "core": [331, 498, 505], "excorestructur": 332, "flag": [333, 408, 499, 507], "geometri": [334, 463, 464], "grid": [335, 336, 337, 338, 339, 340, 341, 342, 343, 472, 473, 474, 499, 507, 513], "axial": [336, 511], "cartesian": [337, 473], "hexagon": [340, 410], "locat": [341, 513], "structuredgrid": 342, "thetarz": 343, "exampl": [344, 452, 507], "basic": 344, "usag": [344, 413, 419], "design": [344, 497], "consider": 344, "except": [345, 455], "parametercollect": 346, "parameterdefinit": 347, "resolvecollect": 348, "reactorparamet": 349, "spentfuelpool": 351, "systemlayoutinput": 352, "test_assembli": 354, "test_block": 355, "test_compon": 356, "test_composit": 357, "test_excorestructur": 358, "test_flag": [359, 427], "test_geometri": 360, "test_hexblockrot": 361, "test_paramet": 362, "test_reactor": 363, "test_rz_reactor": 364, "test_zon": 365, "zone": 366, "runlog": [367, 456], "caseset": 369, "fwset": [370, 371, 372, 373, 374], "databaseset": 371, "globalset": 372, "reportset": 373, "tightcouplingset": 374, "settingsio": 376, "test_inspector": 379, "test_set": 380, "test_settingsio": 381, "mockrunlog": 384, "refsmallreactorshufflelog": 385, "test_app": 386, "test_armitesthelp": 387, "test_cartesian": 388, "test_context": 389, "test_interfac": 390, "test_lwrinput": 391, "test_mpiact": 392, "test_mpifeatur": 393, "test_mpiparamet": 394, "test_notebook": 395, "test_plugin": 396, "test_runlog": 397, "test_test": 398, "test_user_plugin": 399, "asciimap": 401, "codetim": 402, "customexcept": 403, "densitytool": 404, "directorychang": 405, "directorychangersmpi": 406, "dynamicimport": 407, "grideditor": 409, "iter": 411, "mathemat": 412, "outputcach": 413, "api": [413, 486, 489, 490], "pars": [414, 419], "pathtool": 415, "plot": [416, 469, 475, 476, 479, 496], "properti": 417, "reportplot": 418, "tabul": 419, "tabl": [419, 454], "header": 419, "column": 419, "align": 419, "format": [419, 455, 494, 509], "number": [419, 492], "width": 419, "auto": [419, 513], "line": 419, "wrap": 419, "test_asciimap": 421, "test_codetim": 422, "test_custom_except": 423, "test_densitytool": 424, "test_directorychang": 425, "test_directorychangersmpi": 426, "test_hexagon": 428, "test_iter": 429, "test_mathemat": 430, "test_outputcach": 431, "test_pars": 432, "test_pathtool": 433, "test_plot": 434, "test_properti": 435, "test_reportplot": 436, "test_tabul": 437, "test_textprocessor": 438, "test_triangl": 439, "test_unit": 440, "textprocessor": 442, "triangl": 443, "unit": [444, 455], "document": [446, 456], "build": [446, 478, 487, 498, 499], "link": [446, 484, 507], "from": [446, 475, 492, 502, 503, 504, 505, 512], "automat": [446, 468], "apidoc": 446, "namespac": 446, "galleri": [446, 457, 482, 500], "jupyt": 446, "notebook": 446, "entri": [447, 449, 494, 501], "point": [447, 449, 494, 501], "first": [448, 494], "time": [448, 465, 481], "contributor": 448, "guid": 448, "help": [448, 484], "want": 448, "submit": 448, "chang": [448, 486, 487, 489, 490], "licens": [448, 456, 484], "tool": [448, 456], "framework": [449, 460, 467, 482, 496, 500, 502, 503, 504, 505, 512], "architectur": 449, "The": [449, 454, 484, 485, 495, 496, 499, 507, 509, 510, 514], "model": [449, 455, 492], "find": 449, "object": 449, "standard": [449, 455, 509], "stack": 449, "interact": [449, 513], "hook": [449, 454], "ad": [449, 494], "new": [449, 456, 484, 487, 488, 489, 490, 494], "how": [449, 496, 498], "call": 449, "develop": [450, 485, 514], "doc": [450, 506], "make": [451, 472, 473, 474, 494, 507], "head": 451, "up": [451, 496, 498, 499], "some": [451, 507, 508], "your": [451, 494], "own": 451, "applic": [451, 459, 466, 482, 500], "parallel": 452, "code": [452, 455, 485, 514], "commun": [452, 484], "crash": 452, "cours": 452, "within": [452, 455], "bcast": 452, "scatter": [452, 476], "A": [452, 497], "simplifi": 452, "approach": 452, "profil": 453, "getreportcont": 454, "what": [454, 487, 488, 494, 499], "i": [454, 456], "reportcont": 454, "section": [454, 507], "imag": 454, "timeseri": 454, "summari": 454, "practic": 455, "black": 455, "address": 455, "ruff": 455, "warn": 455, "remov": 455, "comment": 455, "out": 455, "avoid": 455, "hard": 455, "global": [455, 510], "keyword": 455, "convent": 455, "meaning": 455, "gener": 455, "quick": [455, 484], "refer": 455, "common": 455, "prefer": 455, "shorter": 455, "method": 455, "repeat": 455, "public": 455, "should": 455, "have": 455, "docstr": 455, "import": 455, "statement": 455, "order": 455, "don": [455, 456], "t": [455, 456], "creat": [455, 494], "nake": 455, "input": [455, 478, 485, 498, 499, 507, 514], "file": [455, 494, 498, 499, 507, 509], "do": 455, "": [455, 487, 488], "infrastructur": 456, "good": 456, "commit": 456, "messag": 456, "pull": 456, "request": 456, "One": 456, "idea": 456, "pr": 456, "open": 456, "until": 456, "readi": 456, "It": 456, "watch": 456, "releas": [456, 486, 487, 488, 489, 490, 491], "depend": 456, "manag": [456, 492, 498, 499, 507], "pyproject": 456, "toml": 456, "third": 456, "parti": 456, "log": 456, "duplic": 456, "level": 456, "analysi": [458, 461, 482, 484, 500], "write": 462, "mcnp": 462, "card": 462, "hex": [463, 464, 472], "rz": [463, 464], "convers": [463, 464], "comput": [465, 468, 470, 481], "volum": 468, "fraction": 468, "thermal": [468, 494, 499, 511], "expans": [468, 511], "chart": [469, 496], "more": 469, "reaction": [470, 480], "rate": 470, "theta": 474, "r": 474, "z": 474, "multi": [475, 476], "group": [475, 476], "x": 475, "matrix": 476, "librari": [477, 485, 495, 514], "programmat": 478, "facemap": 479, "decai": 480, "glossari": 483, "start": [484, 494], "background": 484, "coupl": [484, 510], "autom": 484, "capabl": 484, "research": 484, "scientist": 484, "nuclear": 484, "startup": 484, "engin": 484, "vendor": 484, "enthusiast": 484, "disclaim": 484, "instal": [485, 514], "prerequisit": [485, 514], "right": [485, 514], "python": [485, 494, 514], "command": [485, 514], "prepar": [485, 514], "virtual": [485, 514], "environ": [485, 507, 514], "step": [485, 514], "0": [485, 486, 487, 488, 489, 490, 514], "pip": [485, 514], "option": [485, 514], "1": [485, 486, 487, 490, 492, 514], "2": [485, 486, 487, 514], "repositori": [485, 514], "verifi": [485, 514], "setup": [485, 514], "gui": [485, 507, 514], "output": [485, 494, 509, 514], "v0": [486, 487, 488, 489, 490], "7": [486, 487, 496], "bug": [486, 487, 488, 489, 490], "fix": [486, 487, 488, 489, 490], "6": [486, 487], "deprec": 486, "bugfix": 486, "5": [486, 487, 490], "user": [486, 506], "face": 486, "enhanc": 486, "backend": 486, "4": [486, 487, 489], "3": [486, 487, 488, 499], "hotfix": 486, "9": 487, "8": 487, "backward": 487, "incompat": 487, "qualiti": [488, 489, 490], "work": [488, 489, 490], "featur": [489, 490], "affect": 489, "hand": 492, "termin": 492, "initi": 492, "explor": [492, 496], "quiz": 492, "question": 492, "state": [492, 508, 509], "densiti": 492, "save": 492, "disk": 492, "fuel": [492, 498, 499, 507], "load": [492, 509], "tutori": 493, "regist": 494, "defin": [494, 496, 498, 499, 507], "class": 494, "v": 494, "ar": [494, 496, 498], "again": 494, "kernel": 494, "dummi": 494, "flux": [494, 510], "hydraul": 494, "debug": 494, "window": 494, "tip": [494, 507], "yet": 494, "anoth": 494, "wai": 494, "why": 494, "__main__": 494, "py": 494, "check": 494, "fanci": 494, "bonu": 494, "hoc": 494, "userplugin": 494, "individu": 496, "attribut": 496, "mani": 496, "total": 496, "look": 496, "u": 496, "235": 496, "li": 496, "sweep": 497, "simpl": 497, "one": 497, "dimension": 497, "full": 497, "post": 497, "process": 497, "result": 497, "fast": 498, "non": 498, "radial": [498, 511], "shield": 498, "reflector": 498, "control": 498, "plenum": 498, "arrang": 498, "map": 498, "isotop": [499, 507], "vector": 499, "uo2": 499, "moder": 499, "d": 499, "definit": 499, "ok": 499, "so": 499, "now": 499, "thermalhydraulicsplugin": 503, "fuelperformanceplugin": 503, "neutronicsplugin": [503, 505], "yaml": 507, "clicker": 507, "tab": 507, "special": 507, "kinet": 507, "cycl": 507, "restart": 507, "type": 507, "pin": [507, 513], "lattic": 507, "behavior": 507, "advanc": 507, "topic": 507, "overlap": 507, "shape": 507, "area": 507, "modif": 507, "put": 507, "all": 507, "togeth": 507, "unshap": 507, "swapassembli": 507, "dischargeswap": 507, "swapcascad": 507, "choos": 507, "move": 507, "converg": 507, "diverg": 507, "branch": 507, "search": 507, "variabl": 508, "interest": 508, "info": 508, "extract": 509, "structur": 509, "read": 509, "onli": 509, "loos": 510, "tight": 510, "eigenvalu": 510, "wise": 510, "power": 510, "contract": 511, "spatial": 513, "sub": 513, "rotat": 513, "corner": 513, "edg": 513, "other": 513}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"armi package": [[0, "module-armi"]], "Notes": [[0, null], [1, null], [1, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [5, null], [5, null], [5, null], [5, null], [5, null], [6, null], [6, null], [6, null], [6, null], [6, null], [7, null], [9, null], [9, null], [10, null], [15, null], [19, null], [19, null], [19, null], [20, null], [28, null], [47, null], [47, null], [47, null], [47, null], [47, null], [47, null], [49, null], [50, null], [54, null], [55, null], [55, null], [56, null], [74, null], [77, null], [77, null], [77, null], [78, null], [78, null], [78, null], [78, null], [78, null], [78, null], [78, null], [78, null], [78, null], [79, null], [80, null], [80, null], [81, null], [81, null], [82, null], [82, null], [82, null], [83, null], [87, null], [88, null], [89, null], [90, null], [92, null], [93, null], [95, null], [96, null], [97, null], [99, null], [102, null], [103, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [105, null], [110, null], [111, null], [111, null], [112, null], [114, null], [114, null], [115, null], [116, null], [139, null], [139, null], [139, null], [139, null], [139, null], [139, null], [139, null], [140, null], [140, null], [141, null], [142, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [153, null], [153, null], [153, null], [154, null], [155, null], [155, null], [155, null], [155, null], [155, null], [155, null], [155, null], [155, null], [155, null], [155, null], [159, null], [160, null], [163, null], [163, null], [163, null], [163, null], [165, null], [166, null], [166, null], [166, null], [166, null], [166, null], [166, null], [166, null], [166, null], [166, null], [166, null], [166, null], [167, null], [167, null], [171, null], [172, null], [173, null], [173, null], [173, null], [173, null], [174, null], [175, null], [175, null], [175, null], [176, null], [179, null], [184, null], [191, null], [197, null], [197, null], [198, null], [200, null], [200, null], [200, null], [200, null], [200, null], [201, null], [201, null], [202, null], [202, null], [202, null], [202, null], [204, null], [204, null], [204, null], [204, null], [204, null], [204, null], [204, null], [205, null], [205, null], [207, null], [208, null], [211, null], [213, null], [214, null], [215, null], [216, null], [216, null], [219, null], [219, null], [219, null], [219, null], [219, null], [219, null], [219, null], [219, null], [220, null], [220, null], [223, null], [223, null], [224, null], [227, null], [237, null], [238, null], [240, null], [240, null], [240, null], [240, null], [240, null], [240, null], [240, null], [240, null], [240, null], [241, null], [241, null], [241, null], [241, null], [241, null], [241, null], [243, null], [245, null], [245, null], [245, null], [249, null], [252, null], [254, null], [256, null], [256, null], [256, null], [259, null], [259, null], [266, null], [266, null], [267, null], [283, null], [283, null], [283, null], [283, null], [283, null], [283, null], [283, null], [283, null], [283, null], [283, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [288, null], [288, null], [288, null], [288, null], [288, null], [288, null], [288, null], [288, null], [288, null], [288, null], [288, null], [288, null], [288, null], [288, null], [288, null], [289, null], [289, null], [292, null], [293, null], [293, null], [294, null], [294, null], [294, null], [295, null], [295, null], [305, null], [305, null], [305, null], [305, null], [306, null], [306, null], [306, null], [306, null], [306, null], [307, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [310, null], [311, null], [311, null], [311, null], [311, null], [311, null], [311, null], [311, null], [311, null], [311, null], [311, null], [311, null], [311, null], [311, null], [311, null], [314, null], [314, null], [315, null], [315, null], [315, null], [315, null], [315, null], [315, null], [316, null], [316, null], [316, null], [316, null], [317, null], [317, null], [317, null], [317, null], [317, null], [318, null], [318, null], [318, null], [318, null], [318, null], [319, null], [322, null], [322, null], [324, null], [324, null], [324, null], [324, null], [324, null], [324, null], [324, null], [324, null], [324, null], [324, null], [326, null], [330, null], [330, null], [330, null], [330, null], [330, null], [330, null], [330, null], [331, null], [331, null], [331, null], [331, null], [331, null], [331, null], [331, null], [331, null], [331, null], [331, null], [331, null], [331, null], [331, null], [337, null], [337, null], [337, null], [339, null], [340, null], [340, null], [340, null], [340, null], [340, null], [340, null], [341, null], [342, null], [342, null], [347, null], [347, null], [347, null], [347, null], [347, null], [349, null], [350, null], [352, null], [352, null], [355, null], [355, null], [355, null], [355, null], [356, null], [356, null], [363, null], [363, null], [366, null], [366, null], [369, null], [369, null], [369, null], [369, null], [369, null], [374, null], [374, null], [374, null], [375, null], [375, null], [380, null], [382, null], [382, null], [383, null], [390, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [401, null], [404, null], [405, null], [406, null], [410, null], [410, null], [410, null], [410, null], [412, null], [412, null], [413, null], [413, null], [413, null], [413, null], [415, null], [415, null], [416, null], [416, null], [416, null], [434, null], [442, null], [442, null], [442, null], [442, null], [442, null], [442, null], [443, null], [443, null], [444, null]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [3, "subpackages"], [22, "subpackages"], [37, "subpackages"], [46, "subpackages"], [48, "subpackages"], [60, "subpackages"], [79, "subpackages"], [144, "subpackages"], [152, "subpackages"], [164, "subpackages"], [165, "subpackages"], [203, "subpackages"], [212, "subpackages"], [215, "subpackages"], [228, "subpackages"], [238, "subpackages"], [244, "subpackages"], [251, "subpackages"], [255, "subpackages"], [275, "subpackages"], [284, "subpackages"], [289, "subpackages"], [312, "subpackages"], [368, "subpackages"], [400, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [12, "submodules"], [22, "submodules"], [29, "submodules"], [33, "submodules"], [37, "submodules"], [40, "submodules"], [46, "submodules"], [48, "submodules"], [52, "submodules"], [57, "submodules"], [60, "submodules"], [73, "submodules"], [79, "submodules"], [118, "submodules"], [144, "submodules"], [148, "submodules"], [152, "submodules"], [156, "submodules"], [164, "submodules"], [165, "submodules"], [180, "submodules"], [196, "submodules"], [203, "submodules"], [209, "submodules"], [212, "submodules"], [215, "submodules"], [222, "submodules"], [228, "submodules"], [233, "submodules"], [238, "submodules"], [244, "submodules"], [248, "submodules"], [251, "submodules"], [253, "submodules"], [255, "submodules"], [258, "submodules"], [265, "submodules"], [273, "submodules"], [275, "submodules"], [280, "submodules"], [284, "submodules"], [289, "submodules"], [296, "submodules"], [305, "submodules"], [312, "submodules"], [313, "submodules"], [320, "submodules"], [323, "submodules"], [335, "submodules"], [344, "submodules"], [353, "submodules"], [368, "submodules"], [370, "submodules"], [378, "submodules"], [383, "submodules"], [400, "submodules"], [420, "submodules"]], "armi.apps module": [[1, "module-armi.apps"]], "armi.bookkeeping package": [[2, "module-armi.bookkeeping"]], "armi.bookkeeping.db package": [[3, "module-armi.bookkeeping.db"]], "When updating a db version": [[3, "when-updating-a-db-version"]], "Database revision changelog": [[3, "database-revision-changelog"]], "armi.bookkeeping.db.compareDB3 module": [[4, "module-armi.bookkeeping.db.compareDB3"]], "armi.bookkeeping.db.database module": [[5, "module-armi.bookkeeping.db.database"]], "armi.bookkeeping.db.databaseInterface module": [[6, "module-armi.bookkeeping.db.databaseInterface"]], "armi.bookkeeping.db.factory module": [[7, "module-armi.bookkeeping.db.factory"]], "armi.bookkeeping.db.jaggedArray module": [[8, "module-armi.bookkeeping.db.jaggedArray"]], "armi.bookkeeping.db.layout module": [[9, "module-armi.bookkeeping.db.layout"]], "armi.bookkeeping.db.passiveDBLoadPlugin module": [[10, "module-armi.bookkeeping.db.passiveDBLoadPlugin"]], "armi.bookkeeping.db.permissions module": [[11, "module-armi.bookkeeping.db.permissions"]], "armi.bookkeeping.db.tests package": [[12, "module-armi.bookkeeping.db.tests"]], "armi.bookkeeping.db.tests.test_comparedb3 module": [[13, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "armi.bookkeeping.db.tests.test_database3 module": [[14, "module-armi.bookkeeping.db.tests.test_database3"]], "armi.bookkeeping.db.tests.test_databaseInterface module": [[15, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "armi.bookkeeping.db.tests.test_jaggedArray module": [[16, "module-armi.bookkeeping.db.tests.test_jaggedArray"]], "armi.bookkeeping.db.tests.test_layout module": [[17, "module-armi.bookkeeping.db.tests.test_layout"]], "armi.bookkeeping.db.typedefs module": [[18, "module-armi.bookkeeping.db.typedefs"]], "armi.bookkeeping.historyTracker module": [[19, "module-armi.bookkeeping.historyTracker"]], "Getting history information": [[19, "getting-history-information"]], "Using the database-based history trackers": [[19, "using-the-database-based-history-trackers"]], "Specifying parameters to add to the EOL history report": [[19, "specifying-parameters-to-add-to-the-eol-history-report"]], "Specifying blocks and assemblies to track": [[19, "specifying-blocks-and-assemblies-to-track"]], "armi.bookkeeping.mainInterface module": [[20, "module-armi.bookkeeping.mainInterface"]], "armi.bookkeeping.memoryProfiler module": [[21, "module-armi.bookkeeping.memoryProfiler"]], "armi.bookkeeping.report package": [[22, "module-armi.bookkeeping.report"]], "armi.bookkeeping.report.data module": [[23, "module-armi.bookkeeping.report.data"]], "armi.bookkeeping.report.html module": [[24, "module-armi.bookkeeping.report.html"]], "armi.bookkeeping.report.newReportUtils module": [[25, "module-armi.bookkeeping.report.newReportUtils"]], "armi.bookkeeping.report.newReports module": [[26, "module-armi.bookkeeping.report.newReports"]], "armi.bookkeeping.report.reportInterface module": [[27, "module-armi.bookkeeping.report.reportInterface"]], "armi.bookkeeping.report.reportingUtils module": [[28, "module-armi.bookkeeping.report.reportingUtils"]], "armi.bookkeeping.report.tests package": [[29, "module-armi.bookkeeping.report.tests"]], "armi.bookkeeping.report.tests.test_newReport module": [[30, "module-armi.bookkeeping.report.tests.test_newReport"]], "armi.bookkeeping.report.tests.test_report module": [[31, "module-armi.bookkeeping.report.tests.test_report"]], "armi.bookkeeping.snapshotInterface module": [[32, "module-armi.bookkeeping.snapshotInterface"]], "armi.bookkeeping.tests package": [[33, "module-armi.bookkeeping.tests"]], "armi.bookkeeping.tests.test_historyTracker module": [[34, "module-armi.bookkeeping.tests.test_historyTracker"]], "armi.bookkeeping.tests.test_memoryProfiler module": [[35, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "armi.bookkeeping.tests.test_snapshot module": [[36, "module-armi.bookkeeping.tests.test_snapshot"]], "armi.bookkeeping.visualization package": [[37, "module-armi.bookkeeping.visualization"]], "armi.bookkeeping.visualization.dumper module": [[38, "module-armi.bookkeeping.visualization.dumper"]], "armi.bookkeeping.visualization.entryPoint module": [[39, "module-armi.bookkeeping.visualization.entryPoint"]], "armi.bookkeeping.visualization.tests package": [[40, "module-armi.bookkeeping.visualization.tests"]], "armi.bookkeeping.visualization.tests.test_vis module": [[41, "module-armi.bookkeeping.visualization.tests.test_vis"]], "armi.bookkeeping.visualization.tests.test_xdmf module": [[42, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "armi.bookkeeping.visualization.utils module": [[43, "module-armi.bookkeeping.visualization.utils"]], "armi.bookkeeping.visualization.vtk module": [[44, "module-armi.bookkeeping.visualization.vtk"]], "Limitations": [[44, "limitations"]], "armi.bookkeeping.visualization.xdmf module": [[45, "module-armi.bookkeeping.visualization.xdmf"]], "armi.cases package": [[46, "module-armi.cases"]], "armi.cases.case module": [[47, "module-armi.cases.case"]], "armi.cases.inputModifiers package": [[48, "module-armi.cases.inputModifiers"]], "armi.cases.inputModifiers.inputModifiers module": [[49, "module-armi.cases.inputModifiers.inputModifiers"]], "armi.cases.inputModifiers.neutronicsModifiers module": [[50, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "armi.cases.inputModifiers.pinTypeInputModifiers module": [[51, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests package": [[52, "module-armi.cases.inputModifiers.tests"]], "armi.cases.inputModifiers.tests.test_inputModifiers module": [[53, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module": [[54, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "armi.cases.suite module": [[55, "module-armi.cases.suite"]], "armi.cases.suiteBuilder module": [[56, "module-armi.cases.suiteBuilder"]], "armi.cases.tests package": [[57, "module-armi.cases.tests"]], "armi.cases.tests.test_cases module": [[58, "module-armi.cases.tests.test_cases"]], "armi.cases.tests.test_suiteBuilder module": [[59, "module-armi.cases.tests.test_suiteBuilder"]], "armi.cli package": [[60, "module-armi.cli"]], "armi.cli.checkInputs module": [[61, "module-armi.cli.checkInputs"]], "armi.cli.cleanTemps module": [[62, "module-armi.cli.cleanTemps"]], "armi.cli.clone module": [[63, "module-armi.cli.clone"]], "armi.cli.compareCases module": [[64, "module-armi.cli.compareCases"]], "armi.cli.database module": [[65, "module-armi.cli.database"]], "armi.cli.entryPoint module": [[66, "module-armi.cli.entryPoint"]], "armi.cli.gridGui module": [[67, "module-armi.cli.gridGui"]], "armi.cli.migrateInputs module": [[68, "module-armi.cli.migrateInputs"]], "armi.cli.modify module": [[69, "module-armi.cli.modify"]], "armi.cli.reportsEntryPoint module": [[70, "module-armi.cli.reportsEntryPoint"]], "armi.cli.run module": [[71, "module-armi.cli.run"]], "armi.cli.runSuite module": [[72, "module-armi.cli.runSuite"]], "armi.cli.tests package": [[73, "module-armi.cli.tests"]], "armi.cli.tests.test_runEntryPoint module": [[74, "module-armi.cli.tests.test_runEntryPoint"]], "armi.cli.tests.test_runSuite module": [[75, "module-armi.cli.tests.test_runSuite"]], "armi.conftest module": [[76, "module-armi.conftest"]], "armi.context module": [[77, "module-armi.context"]], "armi.interfaces module": [[78, "module-armi.interfaces"]], "armi.materials package": [[79, "module-armi.materials"]], "armi.materials.air module": [[80, "module-armi.materials.air"]], "armi.materials.alloy200 module": [[81, "module-armi.materials.alloy200"]], "armi.materials.b4c module": [[82, "module-armi.materials.b4c"]], "armi.materials.be9 module": [[83, "module-armi.materials.be9"]], "armi.materials.caH2 module": [[84, "module-armi.materials.caH2"]], "armi.materials.californium module": [[85, "module-armi.materials.californium"]], "armi.materials.concrete module": [[86, "module-armi.materials.concrete"]], "armi.materials.copper module": [[87, "module-armi.materials.copper"]], "armi.materials.cs module": [[88, "module-armi.materials.cs"]], "armi.materials.custom module": [[89, "module-armi.materials.custom"]], "armi.materials.graphite module": [[90, "module-armi.materials.graphite"]], "armi.materials.hafnium module": [[91, "module-armi.materials.hafnium"]], "armi.materials.hastelloyN module": [[92, "module-armi.materials.hastelloyN"]], "armi.materials.ht9 module": [[93, "module-armi.materials.ht9"]], "armi.materials.inconel module": [[94, "module-armi.materials.inconel"]], "armi.materials.inconel600 module": [[95, "module-armi.materials.inconel600"]], "armi.materials.inconel625 module": [[96, "module-armi.materials.inconel625"]], "armi.materials.inconel800 module": [[97, "module-armi.materials.inconel800"]], "armi.materials.inconelPE16 module": [[98, "module-armi.materials.inconelPE16"]], "armi.materials.inconelX750 module": [[99, "module-armi.materials.inconelX750"]], "armi.materials.lead module": [[100, "module-armi.materials.lead"]], "armi.materials.leadBismuth module": [[101, "module-armi.materials.leadBismuth"]], "armi.materials.lithium module": [[102, "module-armi.materials.lithium"]], "armi.materials.magnesium module": [[103, "module-armi.materials.magnesium"]], "armi.materials.material module": [[104, "module-armi.materials.material"]], "armi.materials.mgO module": [[105, "module-armi.materials.mgO"]], "armi.materials.mixture module": [[106, "module-armi.materials.mixture"]], "armi.materials.molybdenum module": [[107, "module-armi.materials.molybdenum"]], "armi.materials.mox module": [[108, "module-armi.materials.mox"]], "armi.materials.nZ module": [[109, "module-armi.materials.nZ"]], "armi.materials.potassium module": [[110, "module-armi.materials.potassium"]], "armi.materials.scandiumOxide module": [[111, "module-armi.materials.scandiumOxide"]], "armi.materials.siC module": [[112, "module-armi.materials.siC"]], "armi.materials.sodium module": [[113, "module-armi.materials.sodium"]], "armi.materials.sodiumChloride module": [[114, "module-armi.materials.sodiumChloride"]], "armi.materials.sulfur module": [[115, "module-armi.materials.sulfur"]], "armi.materials.tZM module": [[116, "module-armi.materials.tZM"]], "armi.materials.tantalum module": [[117, "module-armi.materials.tantalum"]], "armi.materials.tests package": [[118, "module-armi.materials.tests"]], "armi.materials.tests.test__init__ module": [[119, "module-armi.materials.tests.test__init__"]], "armi.materials.tests.test_air module": [[120, "module-armi.materials.tests.test_air"]], "armi.materials.tests.test_b4c module": [[121, "module-armi.materials.tests.test_b4c"]], "armi.materials.tests.test_be9 module": [[122, "module-armi.materials.tests.test_be9"]], "armi.materials.tests.test_graphite module": [[123, "module-armi.materials.tests.test_graphite"]], "armi.materials.tests.test_lithium module": [[124, "module-armi.materials.tests.test_lithium"]], "armi.materials.tests.test_materials module": [[125, "module-armi.materials.tests.test_materials"]], "armi.materials.tests.test_sic module": [[126, "module-armi.materials.tests.test_sic"]], "armi.materials.tests.test_sulfur module": [[127, "module-armi.materials.tests.test_sulfur"]], "armi.materials.tests.test_thoriumOxide module": [[128, "module-armi.materials.tests.test_thoriumOxide"]], "armi.materials.tests.test_uZr module": [[129, "module-armi.materials.tests.test_uZr"]], "armi.materials.tests.test_water module": [[130, "module-armi.materials.tests.test_water"]], "armi.materials.thU module": [[131, "module-armi.materials.thU"]], "armi.materials.thorium module": [[132, "module-armi.materials.thorium"]], "armi.materials.thoriumOxide module": [[133, "module-armi.materials.thoriumOxide"]], "armi.materials.uThZr module": [[134, "module-armi.materials.uThZr"]], "armi.materials.uZr module": [[135, "module-armi.materials.uZr"]], "armi.materials.uranium module": [[136, "module-armi.materials.uranium"]], "armi.materials.uraniumOxide module": [[137, "module-armi.materials.uraniumOxide"]], "armi.materials.void module": [[138, "module-armi.materials.void"]], "armi.materials.water module": [[139, "module-armi.materials.water"]], "armi.materials.yttriumOxide module": [[140, "module-armi.materials.yttriumOxide"]], "armi.materials.zincOxide module": [[141, "module-armi.materials.zincOxide"]], "armi.materials.zr module": [[142, "module-armi.materials.zr"]], "armi.meta module": [[143, "module-armi.meta"]], "armi.migration package": [[144, "module-armi.migration"]], "armi.migration.base module": [[145, "module-armi.migration.base"]], "armi.migration.m0_1_3 module": [[146, "module-armi.migration.m0_1_3"]], "armi.migration.m0_1_6 module": [[147, "module-armi.migration.m0_1_6"]], "armi.migration.tests package": [[148, "module-armi.migration.tests"]], "armi.migration.tests.test_m0_1_6 module": [[149, "module-armi.migration.tests.test_m0_1_6"]], "armi.migration.tests.test_migration_base module": [[150, "module-armi.migration.tests.test_migration_base"]], "armi.mpiActions module": [[151, "module-armi.mpiActions"]], "Sample MPI Action Workflow": [[151, "id1"]], "armi.nucDirectory package": [[152, "module-armi.nucDirectory"]], "Elements": [[152, "elements"]], "Nuclide Bases": [[152, "nuclide-bases"]], "Nuclide names, labels, and IDs": [[152, "nuclide-names-labels-and-ids"]], "Indices - rapid access": [[152, "indices-rapid-access"]], "armi.nucDirectory.elements module": [[153, "module-armi.nucDirectory.elements"]], "List of elements": [[153, "nuclide-bases-table"]], "armi.nucDirectory.nucDir module": [[154, "module-armi.nucDirectory.nucDir"]], "armi.nucDirectory.nuclideBases module": [[155, "module-armi.nucDirectory.nuclideBases"]], "armi.nucDirectory.tests package": [[156, "module-armi.nucDirectory.tests"]], "armi.nucDirectory.tests.test_elements module": [[157, "module-armi.nucDirectory.tests.test_elements"]], "armi.nucDirectory.tests.test_nucDirectory module": [[158, "module-armi.nucDirectory.tests.test_nucDirectory"]], "armi.nucDirectory.tests.test_nuclideBases module": [[159, "module-armi.nucDirectory.tests.test_nuclideBases"]], "armi.nucDirectory.tests.test_thermalScattering module": [[160, "module-armi.nucDirectory.tests.test_thermalScattering"]], "armi.nucDirectory.tests.test_transmutations module": [[161, "module-armi.nucDirectory.tests.test_transmutations"]], "armi.nucDirectory.thermalScattering module": [[162, "module-armi.nucDirectory.thermalScattering"]], "armi.nucDirectory.transmutations module": [[163, "module-armi.nucDirectory.transmutations"]], "armi.nuclearDataIO package": [[164, "module-armi.nuclearDataIO"]], "armi.nuclearDataIO.cccc package": [[165, "module-armi.nuclearDataIO.cccc"]], "Using the system": [[165, "using-the-system"]], "Implementation details": [[165, "implementation-details"]], "Discussion": [[165, "discussion"]], "armi.nuclearDataIO.cccc.cccc module": [[166, "module-armi.nuclearDataIO.cccc.cccc"]], "armi.nuclearDataIO.cccc.compxs module": [[167, "module-armi.nuclearDataIO.cccc.compxs"]], "armi.nuclearDataIO.cccc.dif3d module": [[168, "module-armi.nuclearDataIO.cccc.dif3d"]], "armi.nuclearDataIO.cccc.dlayxs module": [[169, "module-armi.nuclearDataIO.cccc.dlayxs"]], "armi.nuclearDataIO.cccc.fixsrc module": [[170, "module-armi.nuclearDataIO.cccc.fixsrc"]], "armi.nuclearDataIO.cccc.gamiso module": [[171, "module-armi.nuclearDataIO.cccc.gamiso"]], "armi.nuclearDataIO.cccc.geodst module": [[172, "module-armi.nuclearDataIO.cccc.geodst"]], "armi.nuclearDataIO.cccc.isotxs module": [[173, "module-armi.nuclearDataIO.cccc.isotxs"]], "armi.nuclearDataIO.cccc.labels module": [[174, "module-armi.nuclearDataIO.cccc.labels"]], "armi.nuclearDataIO.cccc.nhflux module": [[175, "module-armi.nuclearDataIO.cccc.nhflux"]], "armi.nuclearDataIO.cccc.pmatrx module": [[176, "module-armi.nuclearDataIO.cccc.pmatrx"]], "armi.nuclearDataIO.cccc.pwdint module": [[177, "module-armi.nuclearDataIO.cccc.pwdint"]], "armi.nuclearDataIO.cccc.rtflux module": [[178, "module-armi.nuclearDataIO.cccc.rtflux"]], "armi.nuclearDataIO.cccc.rzflux module": [[179, "module-armi.nuclearDataIO.cccc.rzflux"]], "armi.nuclearDataIO.cccc.tests package": [[180, "module-armi.nuclearDataIO.cccc.tests"]], "armi.nuclearDataIO.cccc.tests.test_cccc module": [[181, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "armi.nuclearDataIO.cccc.tests.test_compxs module": [[182, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "armi.nuclearDataIO.cccc.tests.test_dif3d module": [[183, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs module": [[184, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc module": [[185, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"]], "armi.nuclearDataIO.cccc.tests.test_gamiso module": [[186, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "armi.nuclearDataIO.cccc.tests.test_geodst module": [[187, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs module": [[188, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "armi.nuclearDataIO.cccc.tests.test_labels module": [[189, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "armi.nuclearDataIO.cccc.tests.test_nhflux module": [[190, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx module": [[191, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "armi.nuclearDataIO.cccc.tests.test_pwdint module": [[192, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "armi.nuclearDataIO.cccc.tests.test_rtflux module": [[193, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux module": [[194, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "armi.nuclearDataIO.nuclearFileMetadata module": [[195, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "armi.nuclearDataIO.tests package": [[196, "module-armi.nuclearDataIO.tests"]], "armi.nuclearDataIO.tests.test_xsCollections module": [[197, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "armi.nuclearDataIO.tests.test_xsLibraries module": [[198, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "armi.nuclearDataIO.tests.test_xsNuclides module": [[199, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "armi.nuclearDataIO.xsCollections module": [[200, "module-armi.nuclearDataIO.xsCollections"]], "armi.nuclearDataIO.xsLibraries module": [[201, "module-armi.nuclearDataIO.xsLibraries"]], "armi.nuclearDataIO.xsNuclides module": [[202, "module-armi.nuclearDataIO.xsNuclides"]], "armi.operators package": [[203, "module-armi.operators"]], "armi.operators.operator module": [[204, "module-armi.operators.operator"]], "armi.operators.operatorMPI module": [[205, "module-armi.operators.operatorMPI"]], "armi.operators.runTypes module": [[206, "module-armi.operators.runTypes"]], "armi.operators.settingsValidation module": [[207, "module-armi.operators.settingsValidation"]], "armi.operators.snapshots module": [[208, "module-armi.operators.snapshots"]], "armi.operators.tests package": [[209, "module-armi.operators.tests"]], "armi.operators.tests.test_operatorSnapshots module": [[210, "module-armi.operators.tests.test_operatorSnapshots"]], "armi.operators.tests.test_operators module": [[211, "module-armi.operators.tests.test_operators"]], "armi.physics package": [[212, "module-armi.physics"]], "armi.physics.constants module": [[213, "module-armi.physics.constants"]], "armi.physics.executers module": [[214, "module-armi.physics.executers"]], "armi.physics.fuelCycle package": [[215, "module-armi.physics.fuelCycle"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms module": [[216, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.fuelHandlerFactory module": [[217, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface module": [[218, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlers module": [[219, "module-armi.physics.fuelCycle.fuelHandlers"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module": [[220, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.settings module": [[221, "module-armi.physics.fuelCycle.settings"]], "armi.physics.fuelCycle.tests package": [[222, "module-armi.physics.fuelCycle.tests"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module": [[223, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.tests.test_fuelHandlers module": [[224, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module": [[225, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.tests.test_utils module": [[226, "module-armi.physics.fuelCycle.tests.test_utils"]], "armi.physics.fuelCycle.utils module": [[227, "module-armi.physics.fuelCycle.utils"]], "armi.physics.fuelPerformance package": [[228, "module-armi.physics.fuelPerformance"]], "armi.physics.fuelPerformance.executers module": [[229, "module-armi.physics.fuelPerformance.executers"]], "armi.physics.fuelPerformance.parameters module": [[230, "module-armi.physics.fuelPerformance.parameters"]], "armi.physics.fuelPerformance.plugin module": [[231, "module-armi.physics.fuelPerformance.plugin"]], "armi.physics.fuelPerformance.settings module": [[232, "module-armi.physics.fuelPerformance.settings"]], "armi.physics.fuelPerformance.tests package": [[233, "module-armi.physics.fuelPerformance.tests"]], "armi.physics.fuelPerformance.tests.test_executers module": [[234, "module-armi.physics.fuelPerformance.tests.test_executers"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module": [[235, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module": [[236, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.utils module": [[237, "module-armi.physics.fuelPerformance.utils"]], "armi.physics.neutronics package": [[238, "module-armi.physics.neutronics"]], "armi.physics.neutronics.const module": [[239, "module-armi.physics.neutronics.const"]], "armi.physics.neutronics.crossSectionGroupManager module": [[240, "module-armi.physics.neutronics.crossSectionGroupManager"]], "armi.physics.neutronics.crossSectionSettings module": [[241, "module-armi.physics.neutronics.crossSectionSettings"]], "armi.physics.neutronics.diffIsotxs module": [[242, "module-armi.physics.neutronics.diffIsotxs"]], "armi.physics.neutronics.energyGroups module": [[243, "module-armi.physics.neutronics.energyGroups"]], "armi.physics.neutronics.fissionProductModel package": [[244, "module-armi.physics.neutronics.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel module": [[245, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module": [[246, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module": [[247, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests package": [[248, "module-armi.physics.neutronics.fissionProductModel.tests"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module": [[249, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module": [[250, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "armi.physics.neutronics.globalFlux package": [[251, "module-armi.physics.neutronics.globalFlux"]], "armi.physics.neutronics.globalFlux.globalFluxInterface module": [[252, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests package": [[253, "module-armi.physics.neutronics.globalFlux.tests"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module": [[254, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "armi.physics.neutronics.latticePhysics package": [[255, "module-armi.physics.neutronics.latticePhysics"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module": [[256, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module": [[257, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests package": [[258, "module-armi.physics.neutronics.latticePhysics.tests"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module": [[259, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module": [[260, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "armi.physics.neutronics.macroXSGenerationInterface module": [[261, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "armi.physics.neutronics.parameters module": [[262, "module-armi.physics.neutronics.parameters"]], "armi.physics.neutronics.reports module": [[263, "module-armi.physics.neutronics.reports"]], "armi.physics.neutronics.settings module": [[264, "module-armi.physics.neutronics.settings"]], "armi.physics.neutronics.tests package": [[265, "module-armi.physics.neutronics.tests"]], "armi.physics.neutronics.tests.test_crossSectionManager module": [[266, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "armi.physics.neutronics.tests.test_crossSectionSettings module": [[267, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "armi.physics.neutronics.tests.test_crossSectionTable module": [[268, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "armi.physics.neutronics.tests.test_energyGroups module": [[269, "module-armi.physics.neutronics.tests.test_energyGroups"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface module": [[270, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_neutronicsPlugin module": [[271, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "armi.physics.safety package": [[272, "module-armi.physics.safety"]], "armi.physics.tests package": [[273, "module-armi.physics.tests"]], "armi.physics.tests.test_executers module": [[274, "module-armi.physics.tests.test_executers"]], "armi.physics.thermalHydraulics package": [[275, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalHydraulics.const module": [[276, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalHydraulics.parameters module": [[277, "module-armi.physics.thermalHydraulics.parameters"]], "armi.physics.thermalHydraulics.plugin module": [[278, "module-armi.physics.thermalHydraulics.plugin"]], "armi.physics.thermalHydraulics.settings module": [[279, "module-armi.physics.thermalHydraulics.settings"]], "armi.physics.thermalHydraulics.tests package": [[280, "module-armi.physics.thermalHydraulics.tests"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin module": [[281, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"]], "armi.pluginManager module": [[282, "module-armi.pluginManager"]], "armi.plugins module": [[283, "module-armi.plugins"]], "armi.reactor package": [[284, "module-armi.reactor"]], "armi.reactor.assemblies module": [[285, "module-armi.reactor.assemblies"]], "armi.reactor.assemblyParameters module": [[286, "module-armi.reactor.assemblyParameters"]], "armi.reactor.blockParameters module": [[287, "module-armi.reactor.blockParameters"]], "armi.reactor.blocks module": [[288, "module-armi.reactor.blocks"]], "Parameter": [[288, "parameter"]], "armi.reactor.blueprints package": [[289, "module-armi.reactor.blueprints"]], "armi.reactor.blueprints.assemblyBlueprint module": [[290, "module-armi.reactor.blueprints.assemblyBlueprint"]], "armi.reactor.blueprints.blockBlueprint module": [[291, "module-armi.reactor.blueprints.blockBlueprint"]], "armi.reactor.blueprints.componentBlueprint module": [[292, "module-armi.reactor.blueprints.componentBlueprint"]], "armi.reactor.blueprints.gridBlueprint module": [[293, "module-armi.reactor.blueprints.gridBlueprint"]], "armi.reactor.blueprints.isotopicOptions module": [[294, "module-armi.reactor.blueprints.isotopicOptions"]], "armi.reactor.blueprints.reactorBlueprint module": [[295, "module-armi.reactor.blueprints.reactorBlueprint"]], "armi.reactor.blueprints.tests package": [[296, "module-armi.reactor.blueprints.tests"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints module": [[297, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "armi.reactor.blueprints.tests.test_blockBlueprints module": [[298, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "armi.reactor.blueprints.tests.test_blueprints module": [[299, "module-armi.reactor.blueprints.tests.test_blueprints"]], "armi.reactor.blueprints.tests.test_componentBlueprint module": [[300, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "armi.reactor.blueprints.tests.test_customIsotopics module": [[301, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "armi.reactor.blueprints.tests.test_gridBlueprints module": [[302, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "armi.reactor.blueprints.tests.test_materialModifications module": [[303, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "armi.reactor.blueprints.tests.test_reactorBlueprints module": [[304, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "armi.reactor.components package": [[305, "module-armi.reactor.components"]], "armi.reactor.components.basicShapes module": [[306, "module-armi.reactor.components.basicShapes"]], "armi.reactor.components.complexShapes module": [[307, "module-armi.reactor.components.complexShapes"]], "armi.reactor.components.component module": [[308, "module-armi.reactor.components.component"]], "armi.reactor.components.componentParameters module": [[309, "module-armi.reactor.components.componentParameters"]], "armi.reactor.components.volumetricShapes module": [[310, "module-armi.reactor.components.volumetricShapes"]], "armi.reactor.composites module": [[311, "module-armi.reactor.composites"]], "armi.reactor.converters package": [[312, "module-armi.reactor.converters"]], "armi.reactor.converters.axialExpansionChanger package": [[313, "module-armi.reactor.converters.axialExpansionChanger"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage module": [[314, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger module": [[315, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"]], "armi.reactor.converters.axialExpansionChanger.expansionData module": [[316, "module-armi.reactor.converters.axialExpansionChanger.expansionData"]], "armi.reactor.converters.blockConverters module": [[317, "module-armi.reactor.converters.blockConverters"]], "armi.reactor.converters.geometryConverters module": [[318, "module-armi.reactor.converters.geometryConverters"]], "armi.reactor.converters.meshConverters module": [[319, "module-armi.reactor.converters.meshConverters"]], "armi.reactor.converters.parameterSweeps package": [[320, "module-armi.reactor.converters.parameterSweeps"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module": [[321, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "armi.reactor.converters.pinTypeBlockConverters module": [[322, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests package": [[323, "module-armi.reactor.converters.tests"]], "armi.reactor.converters.tests.test_axialExpansionChanger module": [[324, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "armi.reactor.converters.tests.test_blockConverter module": [[325, "module-armi.reactor.converters.tests.test_blockConverter"]], "armi.reactor.converters.tests.test_geometryConverters module": [[326, "module-armi.reactor.converters.tests.test_geometryConverters"]], "armi.reactor.converters.tests.test_meshConverters module": [[327, "module-armi.reactor.converters.tests.test_meshConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters module": [[328, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "armi.reactor.converters.tests.test_uniformMesh module": [[329, "module-armi.reactor.converters.tests.test_uniformMesh"]], "armi.reactor.converters.uniformMesh module": [[330, "module-armi.reactor.converters.uniformMesh"]], "Requirements": [[330, "requirements"]], "armi.reactor.cores module": [[331, "module-armi.reactor.cores"]], "armi.reactor.excoreStructure module": [[332, "module-armi.reactor.excoreStructure"]], "armi.reactor.flags module": [[333, "module-armi.reactor.flags"]], "armi.reactor.geometry module": [[334, "module-armi.reactor.geometry"]], "armi.reactor.grids package": [[335, "module-armi.reactor.grids"]], "armi.reactor.grids.axial module": [[336, "module-armi.reactor.grids.axial"]], "armi.reactor.grids.cartesian module": [[337, "module-armi.reactor.grids.cartesian"]], "armi.reactor.grids.constants module": [[338, "module-armi.reactor.grids.constants"]], "armi.reactor.grids.grid module": [[339, "module-armi.reactor.grids.grid"]], "armi.reactor.grids.hexagonal module": [[340, "module-armi.reactor.grids.hexagonal"]], "armi.reactor.grids.locations module": [[341, "module-armi.reactor.grids.locations"]], "armi.reactor.grids.structuredGrid module": [[342, "module-armi.reactor.grids.structuredGrid"]], "armi.reactor.grids.thetarz module": [[343, "module-armi.reactor.grids.thetarz"]], "armi.reactor.parameters package": [[344, "module-armi.reactor.parameters"]], "Example Parameters": [[344, "id1"]], "Basic Usage": [[344, "basic-usage"]], "Design Considerations": [[344, "design-considerations"]], "Design considerations": [[344, "id2"]], "armi.reactor.parameters.exceptions module": [[345, "module-armi.reactor.parameters.exceptions"]], "armi.reactor.parameters.parameterCollections module": [[346, "module-armi.reactor.parameters.parameterCollections"]], "armi.reactor.parameters.parameterDefinitions module": [[347, "module-armi.reactor.parameters.parameterDefinitions"]], "armi.reactor.parameters.resolveCollections module": [[348, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorParameters module": [[349, "module-armi.reactor.reactorParameters"]], "armi.reactor.reactors module": [[350, "module-armi.reactor.reactors"]], "armi.reactor.spentFuelPool module": [[351, "module-armi.reactor.spentFuelPool"]], "armi.reactor.systemLayoutInput module": [[352, "module-armi.reactor.systemLayoutInput"]], "armi.reactor.tests package": [[353, "module-armi.reactor.tests"]], "armi.reactor.tests.test_assemblies module": [[354, "module-armi.reactor.tests.test_assemblies"]], "armi.reactor.tests.test_blocks module": [[355, "module-armi.reactor.tests.test_blocks"]], "armi.reactor.tests.test_components module": [[356, "module-armi.reactor.tests.test_components"]], "armi.reactor.tests.test_composites module": [[357, "module-armi.reactor.tests.test_composites"]], "armi.reactor.tests.test_excoreStructures module": [[358, "module-armi.reactor.tests.test_excoreStructures"]], "armi.reactor.tests.test_flags module": [[359, "module-armi.reactor.tests.test_flags"]], "armi.reactor.tests.test_geometry module": [[360, "module-armi.reactor.tests.test_geometry"]], "armi.reactor.tests.test_hexBlockRotate module": [[361, "module-armi.reactor.tests.test_hexBlockRotate"]], "armi.reactor.tests.test_parameters module": [[362, "module-armi.reactor.tests.test_parameters"]], "armi.reactor.tests.test_reactors module": [[363, "module-armi.reactor.tests.test_reactors"]], "armi.reactor.tests.test_rz_reactors module": [[364, "module-armi.reactor.tests.test_rz_reactors"]], "armi.reactor.tests.test_zones module": [[365, "module-armi.reactor.tests.test_zones"]], "armi.reactor.zones module": [[366, "module-armi.reactor.zones"]], "armi.runLog module": [[367, "module-armi.runLog"]], "armi.settings package": [[368, "module-armi.settings"]], "armi.settings.caseSettings module": [[369, "module-armi.settings.caseSettings"]], "armi.settings.fwSettings package": [[370, "module-armi.settings.fwSettings"]], "armi.settings.fwSettings.databaseSettings module": [[371, "module-armi.settings.fwSettings.databaseSettings"]], "armi.settings.fwSettings.globalSettings module": [[372, "module-armi.settings.fwSettings.globalSettings"]], "armi.settings.fwSettings.reportSettings module": [[373, "module-armi.settings.fwSettings.reportSettings"]], "armi.settings.fwSettings.tightCouplingSettings module": [[374, "module-armi.settings.fwSettings.tightCouplingSettings"]], "armi.settings.setting module": [[375, "module-armi.settings.setting"]], "armi.settings.settingsIO module": [[376, "module-armi.settings.settingsIO"]], "armi.settings.settingsValidation module": [[377, "module-armi.settings.settingsValidation"]], "armi.settings.tests package": [[378, "module-armi.settings.tests"]], "armi.settings.tests.test_inspectors module": [[379, "module-armi.settings.tests.test_inspectors"]], "armi.settings.tests.test_settings module": [[380, "module-armi.settings.tests.test_settings"]], "armi.settings.tests.test_settingsIO module": [[381, "module-armi.settings.tests.test_settingsIO"]], "armi.testing package": [[382, "module-armi.testing"]], "armi.tests package": [[383, "module-armi.tests"]], "armi.tests.mockRunLogs module": [[384, "module-armi.tests.mockRunLogs"]], "armi.tests.refSmallReactorShuffleLogic module": [[385, "module-armi.tests.refSmallReactorShuffleLogic"]], "armi.tests.test_apps module": [[386, "module-armi.tests.test_apps"]], "armi.tests.test_armiTestHelper module": [[387, "module-armi.tests.test_armiTestHelper"]], "armi.tests.test_cartesian module": [[388, "module-armi.tests.test_cartesian"]], "armi.tests.test_context module": [[389, "module-armi.tests.test_context"]], "armi.tests.test_interfaces module": [[390, "module-armi.tests.test_interfaces"]], "armi.tests.test_lwrInputs module": [[391, "module-armi.tests.test_lwrInputs"]], "armi.tests.test_mpiActions module": [[392, "module-armi.tests.test_mpiActions"]], "armi.tests.test_mpiFeatures module": [[393, "module-armi.tests.test_mpiFeatures"]], "armi.tests.test_mpiParameters module": [[394, "module-armi.tests.test_mpiParameters"]], "armi.tests.test_notebooks module": [[395, "module-armi.tests.test_notebooks"]], "armi.tests.test_plugins module": [[396, "module-armi.tests.test_plugins"]], "armi.tests.test_runLog module": [[397, "module-armi.tests.test_runLog"]], "armi.tests.test_tests module": [[398, "module-armi.tests.test_tests"]], "armi.tests.test_user_plugins module": [[399, "module-armi.tests.test_user_plugins"]], "armi.utils package": [[400, "module-armi.utils"]], "armi.utils.asciimaps module": [[401, "module-armi.utils.asciimaps"]], "armi.utils.codeTiming module": [[402, "module-armi.utils.codeTiming"]], "armi.utils.customExceptions module": [[403, "module-armi.utils.customExceptions"]], "armi.utils.densityTools module": [[404, "module-armi.utils.densityTools"]], "armi.utils.directoryChangers module": [[405, "module-armi.utils.directoryChangers"]], "armi.utils.directoryChangersMpi module": [[406, "module-armi.utils.directoryChangersMpi"]], "armi.utils.dynamicImporter module": [[407, "module-armi.utils.dynamicImporter"]], "armi.utils.flags module": [[408, "module-armi.utils.flags"]], "armi.utils.gridEditor module": [[409, "armi-utils-grideditor-module"]], "armi.utils.hexagon module": [[410, "module-armi.utils.hexagon"]], "armi.utils.iterables module": [[411, "module-armi.utils.iterables"]], "armi.utils.mathematics module": [[412, "module-armi.utils.mathematics"]], "armi.utils.outputCache module": [[413, "module-armi.utils.outputCache"]], "API usage": [[413, "api-usage"]], "armi.utils.parsing module": [[414, "module-armi.utils.parsing"]], "armi.utils.pathTools module": [[415, "module-armi.utils.pathTools"]], "armi.utils.plotting module": [[416, "module-armi.utils.plotting"]], "armi.utils.properties module": [[417, "module-armi.utils.properties"]], "armi.utils.reportPlotting module": [[418, "module-armi.utils.reportPlotting"]], "armi.utils.tabulate module": [[419, "module-armi.utils.tabulate"]], "Usage": [[419, "usage"]], "Table headers": [[419, "table-headers"]], "Column and Headers alignment": [[419, "column-and-headers-alignment"]], "Table formats": [[419, "table-formats"]], "Number parsing": [[419, "number-parsing"]], "Column Widths and Auto Line Wrapping": [[419, "column-widths-and-auto-line-wrapping"]], "armi.utils.tests package": [[420, "module-armi.utils.tests"]], "armi.utils.tests.test_asciimaps module": [[421, "module-armi.utils.tests.test_asciimaps"]], "armi.utils.tests.test_codeTiming module": [[422, "module-armi.utils.tests.test_codeTiming"]], "armi.utils.tests.test_custom_exceptions module": [[423, "module-armi.utils.tests.test_custom_exceptions"]], "armi.utils.tests.test_densityTools module": [[424, "module-armi.utils.tests.test_densityTools"]], "armi.utils.tests.test_directoryChangers module": [[425, "module-armi.utils.tests.test_directoryChangers"]], "armi.utils.tests.test_directoryChangersMpi module": [[426, "module-armi.utils.tests.test_directoryChangersMpi"]], "armi.utils.tests.test_flags module": [[427, "module-armi.utils.tests.test_flags"]], "armi.utils.tests.test_hexagon module": [[428, "module-armi.utils.tests.test_hexagon"]], "armi.utils.tests.test_iterables module": [[429, "module-armi.utils.tests.test_iterables"]], "armi.utils.tests.test_mathematics module": [[430, "module-armi.utils.tests.test_mathematics"]], "armi.utils.tests.test_outputCache module": [[431, "module-armi.utils.tests.test_outputCache"]], "armi.utils.tests.test_parsing module": [[432, "module-armi.utils.tests.test_parsing"]], "armi.utils.tests.test_pathTools module": [[433, "module-armi.utils.tests.test_pathTools"]], "armi.utils.tests.test_plotting module": [[434, "module-armi.utils.tests.test_plotting"]], "armi.utils.tests.test_properties module": [[435, "module-armi.utils.tests.test_properties"]], "armi.utils.tests.test_reportPlotting module": [[436, "module-armi.utils.tests.test_reportPlotting"]], "armi.utils.tests.test_tabulate module": [[437, "module-armi.utils.tests.test_tabulate"]], "armi.utils.tests.test_textProcessors module": [[438, "module-armi.utils.tests.test_textProcessors"]], "armi.utils.tests.test_triangle module": [[439, "module-armi.utils.tests.test_triangle"]], "armi.utils.tests.test_units module": [[440, "module-armi.utils.tests.test_units"]], "armi.utils.tests.test_utils module": [[441, "module-armi.utils.tests.test_utils"]], "armi.utils.textProcessors module": [[442, "module-armi.utils.textProcessors"]], "armi.utils.triangle module": [[443, "module-armi.utils.triangle"]], "armi.utils.units module": [[444, "module-armi.utils.units"]], "armi": [[445, "armi"]], "Documenting ARMI": [[446, "documenting-armi"]], "Building the documentation": [[446, "building-the-documentation"]], "Documentation for ARMI plugins": [[446, "documentation-for-armi-plugins"]], "Linking to ARMI documentation from plugins": [[446, "linking-to-armi-documentation-from-plugins"]], "Automatically building apidocs of namespace packages": [[446, "automatically-building-apidocs-of-namespace-packages"]], "Updating the Gallery": [[446, "updating-the-gallery"]], "Using Jupyter notebooks": [[446, "using-jupyter-notebooks"]], "Entry Points": [[447, "entry-points"], [449, "entry-points"]], "First Time Contributors Guide": [[448, "first-time-contributors-guide"]], "Help Wanted": [[448, "help-wanted"]], "Testing": [[448, "testing"]], "Submitting Changes": [[448, "submitting-changes"]], "Licensing of Tools": [[448, "licensing-of-tools"]], "Framework Architecture": [[449, "framework-architecture"]], "The Reactor Data Model": [[449, "the-reactor-data-model"]], "Finding objects in a model": [[449, "finding-objects-in-a-model"]], "Parameters": [[449, "parameters"]], "Converters": [[449, "converters"]], "Blueprints": [[449, "blueprints"], [513, "blueprints"]], "Operators": [[449, "operators"]], "The Standard Operator": [[449, "the-standard-operator"]], "The Snapshots Operator": [[449, "the-snapshots-operator"]], "The Interface Stack": [[449, "the-interface-stack"]], "Interface Interaction Hooks": [[449, "interface-interaction-hooks"]], "Adding a new interface": [[449, "adding-a-new-interface"]], "How interfaces get called": [[449, "how-interfaces-get-called"]], "Plugins": [[449, "plugins"]], "Developer Docs": [[450, "developer-docs"]], "Making ARMI-based Apps": [[451, "making-armi-based-apps"]], "Heads up": [[451, null]], "ARMI Plugins": [[451, "armi-plugins"]], "Some implementation details": [[451, "some-implementation-details"]], "Making your own Plugin": [[451, "making-your-own-plugin"]], "ARMI-Based Applications": [[451, "armi-based-applications"]], "Parallel Code in ARMI": [[452, "parallel-code-in-armi"]], "MPI communication crash course": [[452, "mpi-communication-crash-course"]], "MPI Communication within ARMI": [[452, "mpi-communication-within-armi"]], "Example using bcast": [[452, "example-using-bcast"]], "Example using scatter": [[452, "example-using-scatter"]], "A simplified approach": [[452, "a-simplified-approach"]], "Profiling ARMI": [[453, "profiling-armi"]], "Reports in ARMI": [[454, "reports-in-armi"]], "The Hook: getReportContents()": [[454, "the-hook-getreportcontents"]], "What is ReportContent?": [[454, "what-is-reportcontent"]], "Sections": [[454, "sections"]], "Tables": [[454, "tables"]], "Images": [[454, "images"]], "TimeSeries": [[454, "timeseries"]], "HTML Elements": [[454, "html-elements"]], "Summary": [[454, "summary"]], "Standards and Practices for Coding": [[455, "standards-and-practices-for-coding"]], "Code formatting with Black": [[455, "code-formatting-with-black"]], "Address the ruff warnings": [[455, "address-the-ruff-warnings"]], "Remove commented-out code": [[455, "remove-commented-out-code"]], "Avoid hard-coding run parameters": [[455, "avoid-hard-coding-run-parameters"]], "Avoid the global keyword": [[455, "avoid-the-global-keyword"]], "Naming conventions": [[455, "naming-conventions"]], "Use meaningful names": [[455, "use-meaningful-names"]], "General conventions": [[455, "general-conventions"]], "Naming quick-reference": [[455, "naming-quick-reference"]], "Common naming conventions within ARMI": [[455, "common-naming-conventions-within-armi"]], "Prefer shorter methods": [[455, "prefer-shorter-methods"]], "Avoid repeating code": [[455, "avoid-repeating-code"]], "Public methods should have docstrings": [[455, "public-methods-should-have-docstrings"]], "Unit tests": [[455, "unit-tests"]], "Import statements": [[455, "import-statements"]], "Import ordering": [[455, "import-ordering"]], "Don\u2019t create naked exceptions.": [[455, "don-t-create-naked-exceptions"]], "Data model": [[455, "data-model"]], "Input files": [[455, "input-files"]], "General do\u2019s and don\u2019ts": [[455, "general-do-s-and-don-ts"]], "Tooling and Infrastructure": [[456, "tooling-and-infrastructure"]], "Good Commit Messages": [[456, "good-commit-messages"]], "Good Pull Requests": [[456, "good-pull-requests"]], "One Idea = One PR": [[456, "one-idea-one-pr"]], "Don\u2019t open until it is ready": [[456, "don-t-open-until-it-is-ready"]], "Test It": [[456, "test-it"]], "Document It": [[456, "document-it"]], "Watch for Requirements": [[456, "watch-for-requirements"]], "Add Release Notes": [[456, "add-release-notes"]], "Packaging and dependency management": [[456, "packaging-and-dependency-management"]], "pyproject.toml": [[456, "pyproject-toml"]], "Third-Party Licensing": [[456, "third-party-licensing"]], "Releasing a New Version of ARMI": [[456, "releasing-a-new-version-of-armi"]], "Logging with runLog": [[456, "logging-with-runlog"]], "Blocking Duplicate Logs": [[456, "blocking-duplicate-logs"]], "Module-Level Logging": [[456, "module-level-logging"]], "Gallery": [[457, "gallery"], [482, "gallery"], [500, "gallery"]], "Analysis": [[458, "analysis"], [461, "analysis"], [482, "analysis"], [500, "analysis"]], "Applications": [[459, "applications"], [466, "applications"], [482, "applications"], [500, "applications"]], "Framework": [[460, "framework"], [467, "framework"], [482, "framework"], [500, "framework"]], "Write MCNP Material Cards": [[462, "write-mcnp-material-cards"]], "Hex block to RZ geometry conversion": [[463, "hex-block-to-rz-geometry-conversion"]], "Hex reactor to RZ geometry conversion": [[464, "hex-reactor-to-rz-geometry-conversion"]], "Computation times": [[465, "computation-times"], [481, "computation-times"]], "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion": [[468, "computing-component-volume-fractions-on-a-block-with-automatic-thermal-expansion"]], "Plot a chart of the nuclides.": [[469, "plot-a-chart-of-the-nuclides"]], "More details": [[469, null]], "Computing Reaction Rates on a Block.": [[470, "computing-reaction-rates-on-a-block"]], "Make a hex grid.": [[472, "make-a-hex-grid"]], "Make a Cartesian grid.": [[473, "make-a-cartesian-grid"]], "Make a Theta-R-Z grid.": [[474, "make-a-theta-r-z-grid"]], "Plotting Multi-group XS from ISOTXS.": [[475, "plotting-multi-group-xs-from-isotxs"]], "Plotting a multi-group scatter matrix.": [[476, "plotting-a-multi-group-scatter-matrix"]], "Listing of Material Library.": [[477, "listing-of-material-library"]], "Build Reactor Inputs Programmatically.": [[478, "build-reactor-inputs-programmatically"]], "Plot a reactor facemap.": [[479, "plot-a-reactor-facemap"]], "Transmutation and decay reactions.": [[480, "transmutation-and-decay-reactions"]], "Glossary": [[483, "glossary"]], "ARMI": [[484, "armi"]], "Quick links": [[484, "id3"]], "Quick start": [[484, "quick-start"]], "Background": [[484, "background"]], "Communication and coupling": [[484, "communication-and-coupling"]], "Automation": [[484, "automation"]], "New analysis and physics capabilities": [[484, "new-analysis-and-physics-capabilities"]], "Use cases": [[484, "use-cases"]], "The Research Scientist": [[484, "the-research-scientist"]], "The Nuclear Startup Engineer": [[484, "the-nuclear-startup-engineer"]], "Operating and Vendor Engineers": [[484, "operating-and-vendor-engineers"]], "The Enthusiast": [[484, "the-enthusiast"]], "History of ARMI": [[484, "history-of-armi"]], "System Requirements": [[484, "system-requirements"]], "Getting help": [[484, "getting-help"]], "Disclaimers": [[484, "disclaimers"]], "License": [[484, "license"]], "Installation": [[485, "installation"], [514, "installation"]], "Prerequisites": [[485, "prerequisites"], [514, "prerequisites"]], "The right Python command": [[485, null], [514, null]], "Preparing a Virtual Environment": [[485, "preparing-a-virtual-environment"], [514, "preparing-a-virtual-environment"]], "Getting the code": [[485, "getting-the-code"], [514, "getting-the-code"]], "Step 0: Update PIP": [[485, "step-0-update-pip"], [514, "step-0-update-pip"]], "Option 1: Install as a library": [[485, "option-1-install-as-a-library"], [514, "option-1-install-as-a-library"]], "Option 2: Install as a repository (for developers)": [[485, "option-2-install-as-a-repository-for-developers"], [514, "option-2-install-as-a-repository-for-developers"]], "Verifying installation": [[485, "verifying-installation"], [514, "verifying-installation"]], "Optional Setup": [[485, "optional-setup"], [514, "optional-setup"]], "GUI input": [[485, "gui-input"], [514, "gui-input"]], "GUI output": [[485, "gui-output"], [514, "gui-output"]], "ARMI v0.1 Release Notes": [[486, "armi-v0-1-release-notes"]], "ARMI v0.1.7": [[486, "armi-v0-1-7"]], "API changes": [[486, "api-changes"]], "Bug fixes": [[486, "bug-fixes"], [487, "bug-fixes"], [487, "id6"], [487, "id9"], [487, "id13"], [487, "id16"], [487, "id18"], [487, "id22"], [487, "id24"], [487, "id26"], [487, "id29"]], "ARMI v0.1.6": [[486, "armi-v0-1-6"]], "Deprecations": [[486, "deprecations"]], "Bugfixes": [[486, "bugfixes"], [486, "id1"], [486, "id2"], [486, "id4"]], "ARMI v0.1.5": [[486, "armi-v0-1-5"]], "User-facing enhancements": [[486, "user-facing-enhancements"], [486, "id3"], [486, "id6"]], "Backend changes": [[486, "backend-changes"], [486, "id5"], [486, "id7"]], "ARMI v0.1.4": [[486, "armi-v0-1-4"]], "ARMI v0.1.3": [[486, "armi-v0-1-3"]], "ARMI v0.1.2": [[486, "armi-v0-1-2"]], "Hotfixes": [[486, "hotfixes"]], "ARMI v0.1.1": [[486, "armi-v0-1-1"]], "ARMI v0.1.0": [[486, "armi-v0-1-0"]], "ARMI v0.2 Release Notes": [[487, "armi-v0-2-release-notes"]], "ARMI v0.2.9": [[487, "armi-v0-2-9"]], "What\u2019s new in ARMI": [[487, "what-s-new-in-armi"], [487, "id5"], [487, "id7"], [487, "id11"], [487, "id15"], [487, "id17"], [487, "id21"]], "Build changes": [[487, "build-changes"]], "ARMI v0.2.8": [[487, "armi-v0-2-8"]], "ARMI v0.2.7": [[487, "armi-v0-2-7"]], "ARMI v0.2.6": [[487, "armi-v0-2-6"]], "ARMI v0.2.5": [[487, "armi-v0-2-5"]], "ARMI v0.2.4": [[487, "armi-v0-2-4"]], "ARMI v0.2.3": [[487, "armi-v0-2-3"]], "ARMI v0.2.2": [[487, "armi-v0-2-2"]], "What\u2019s new in ARMI v0.2.2": [[487, "what-s-new-in-armi-v0-2-2"]], "ARMI v0.2.1": [[487, "armi-v0-2-1"]], "What\u2019s new in ARMI v0.2.1": [[487, "what-s-new-in-armi-v0-2-1"]], "ARMI v0.2.0": [[487, "armi-v0-2-0"]], "What\u2019s new in ARMI v0.2.0": [[487, "what-s-new-in-armi-v0-2-0"]], "Backwards incompatible changes": [[487, "backwards-incompatible-changes"]], "ARMI v0.3 Release Notes": [[488, "armi-v0-3-release-notes"]], "ARMI v0.3.0": [[488, "armi-v0-3-0"]], "What\u2019s new in ARMI?": [[488, "what-s-new-in-armi"]], "Bug Fixes": [[488, "bug-fixes"], [489, "bug-fixes"], [490, "bug-fixes"], [490, "id13"]], "Quality Work": [[488, "quality-work"], [489, "quality-work"], [490, "quality-work"], [490, "id16"]], "ARMI v0.4 Release Notes": [[489, "armi-v0-4-release-notes"]], "ARMI v0.4.0": [[489, "armi-v0-4-0"]], "New Features": [[489, "new-features"], [490, "new-features"], [490, "id1"]], "API Changes": [[489, "api-changes"], [490, "api-changes"], [490, "id4"]], "Changes that Affect Requirements": [[489, "changes-that-affect-requirements"]], "ARMI v0.5 Release Notes": [[490, "armi-v0-5-release-notes"]], "ARMI v0.5.1": [[490, "armi-v0-5-1"]], "ARMI v0.5.0": [[490, "armi-v0-5-0"]], "Release Notes": [[491, "release-notes"]], "Hands-on at the ARMI Terminal": [[492, "Hands-on-at-the-ARMI-Terminal"]], "Initializing and Exploring the ARMI Model": [[492, "Initializing-and-Exploring-the-ARMI-Model"]], "Quiz Question 1": [[492, null]], "Exploring the state of the reactor": [[492, "Exploring-the-state-of-the-reactor"]], "Modifying the state of the reactor": [[492, "Modifying-the-state-of-the-reactor"]], "Modifying number densities": [[492, "Modifying-number-densities"]], "Saving state to disk": [[492, "Saving-state-to-disk"]], "Fuel management": [[492, "Fuel-management"]], "Loading from the database": [[492, "Loading-from-the-database"]], "Tutorials": [[493, "tutorials"]], "Making your first ARMI-based App": [[494, "making-your-first-armi-based-app"]], "Starting a new app": [[494, "starting-a-new-app"]], "Registering the app with ARMI": [[494, "registering-the-app-with-armi"]], "Defining the app class": [[494, "defining-the-app-class"]], "Apps vs. plugins vs. interfaces": [[494, null]], "Defining the physics plugin": [[494, "defining-the-physics-plugin"]], "What are plugins again?": [[494, null]], "Defining custom settings": [[494, "defining-custom-settings"]], "Creating the physics kernels": [[494, "creating-the-physics-kernels"]], "Making the (dummy) flux kernel": [[494, "making-the-dummy-flux-kernel"]], "Making the thermal/hydraulics kernel": [[494, "making-the-thermal-hydraulics-kernel"]], "Adding entry points": [[494, "adding-entry-points"]], "Running the app and debugging": [[494, "running-the-app-and-debugging"]], "Windows tip": [[494, null]], "Submodule tip": [[494, null]], "Yet another way": [[494, null]], "Adding a new material": [[494, "adding-a-new-material"]], "Why __main__.py?": [[494, null]], "Checking the output": [[494, "checking-the-output"]], "Fancy XDMF format": [[494, null]], "Bonus: Ad-hoc UserPlugins": [[494, "bonus-ad-hoc-userplugins"]], "Define the UserPlugin in Python": [[494, "define-the-userplugin-in-python"]], "Define a list of UserPlugins in the Settings File": [[494, "define-a-list-of-userplugins-in-the-settings-file"]], "The ARMI Material Library": [[495, "The-ARMI-Material-Library"]], "The ARMI Nuclide and Element Packages": [[496, "The-ARMI-Nuclide-and-Element-Packages"]], "Accessing Individual Nuclide Data/Attributes": [[496, "Accessing-Individual-Nuclide-Data/Attributes"]], "How many total nuclides and elements are defined in the framework?": [[496, "How-many-total-nuclides-and-elements-are-defined-in-the-framework?"]], "Looking up nuclide and elemental data for U-235": [[496, "Looking-up-nuclide-and-elemental-data-for-U-235"]], "Looking up nuclide and elemental data for Li-7": [[496, "Looking-up-nuclide-and-elemental-data-for-Li-7"]], "Exploring elemental Lithium data": [[496, "Exploring-elemental-Lithium-data"]], "Plotting the Chart of the Nuclides": [[496, "Plotting-the-Chart-of-the-Nuclides"]], "Parameter sweeps": [[497, "Parameter-sweeps"]], "A simple one-dimensional parameter sweep": [[497, "A-simple-one-dimensional-parameter-sweep"]], "Modifying the reactor design": [[497, "Modifying-the-reactor-design"]], "A full factorial parameter sweep": [[497, "A-full-factorial-parameter-sweep"]], "Post-processing the results of the sweep": [[497, "Post-processing-the-results-of-the-sweep"]], "Building input files for a fast reactor": [[498, "building-input-files-for-a-fast-reactor"]], "Setting up the blueprints": [[498, "setting-up-the-blueprints"], [499, "setting-up-the-blueprints"]], "Defining non-fuel blocks": [[498, "defining-non-fuel-blocks"]], "Radial Shields": [[498, "radial-shields"]], "Reflectors": [[498, "reflectors"]], "Control": [[498, "control"]], "Plenum": [[498, "plenum"]], "Defining how the blocks are arranged into assemblies": [[498, "defining-how-the-blocks-are-arranged-into-assemblies"]], "Defining the fuel assemblies": [[498, "defining-the-fuel-assemblies"]], "Defining the non-fuel assemblies": [[498, "defining-the-non-fuel-assemblies"]], "Specifying the core map": [[498, "specifying-the-core-map"]], "Specifying settings": [[498, "specifying-settings"]], "Defining fuel management": [[498, "defining-fuel-management"], [499, "defining-fuel-management"]], "Building input files for a thermal reactor": [[499, "building-input-files-for-a-thermal-reactor"]], "Custom isotopic vectors": [[499, "custom-isotopic-vectors"]], "The UO2 block": [[499, "the-uo2-block"]], "The MOX block": [[499, "the-mox-block"]], "The moderator block": [[499, "the-moderator-block"]], "The 3-D Assembly definitions": [[499, "the-3-d-assembly-definitions"]], "The Systems definition": [[499, "the-systems-definition"]], "The Grids definitions": [[499, "the-grids-definitions"]], "Nuclide Flags": [[499, "nuclide-flags"], [507, "nuclide-flags"]], "The settings file": [[499, "the-settings-file"]], "Ok, so now what?": [[499, "ok-so-now-what"]], "Accessing Entry Points": [[501, "accessing-entry-points"]], "Reports Entry Point": [[501, "reports-entry-point"]], "Assembly Parameters": [[502, "assembly-parameters"]], "Assembly Parameters from Framework": [[502, "id1"]], "Block Parameters": [[503, "block-parameters"]], "Block Parameters from Framework": [[503, "id1"]], "Block Parameters from ThermalHydraulicsPlugin": [[503, "id2"]], "Block Parameters from FuelPerformancePlugin": [[503, "id3"]], "Block Parameters from NeutronicsPlugin": [[503, "id4"]], "Component Parameters": [[504, "component-parameters"]], "Component Parameters from Framework": [[504, "id1"]], "Core Parameters": [[505, "core-parameters"]], "Core Parameters from Framework": [[505, "id1"]], "Core Parameters from NeutronicsPlugin": [[505, "id2"]], "User Docs": [[506, "user-docs"]], "Inputs": [[507, "inputs"]], "YAML Files": [[507, "yaml-files"]], "The Settings Input File": [[507, "the-settings-input-file"]], "The ARMI GUI": [[507, "the-armi-gui"]], "The assembly clicker": [[507, "the-assembly-clicker"]], "The ARMI Environment Tab": [[507, "the-armi-environment-tab"]], "Some special settings": [[507, "some-special-settings"]], "Detail assemblies": [[507, "detail-assemblies"]], "Kinetics settings": [[507, "kinetics-settings"]], "Cycle history": [[507, "cycle-history"]], "Restart cases": [[507, "restart-cases"]], "The Blueprints Input File": [[507, "the-blueprints-input-file"]], "Blueprint sections": [[507, "blueprint-sections"]], "Blocks and Components": [[507, "blocks-and-components"]], "Defining a Component": [[507, "defining-a-component"]], "Component Types": [[507, "component-types"]], "Component Links": [[507, "component-links"]], "Pin lattices": [[507, "pin-lattices"]], "Flags and naming": [[507, "flags-and-naming"]], "Assemblies": [[507, "assemblies"]], "Systems": [[507, "systems"]], "Plugin Behavior": [[507, "plugin-behavior"]], "Grids": [[507, "grids"]], "Custom Isotopics": [[507, "custom-isotopics"]], "Advanced topics": [[507, "advanced-topics"]], "Overlapping shapes": [[507, "overlapping-shapes"]], "Component area modifications": [[507, "component-area-modifications"]], "Putting it all together to make a Block": [[507, "putting-it-all-together-to-make-a-block"]], "Making blocks with unshaped components": [[507, "making-blocks-with-unshaped-components"]], "Fuel Management Input": [[507, "fuel-management-input"]], "Fuel Management Operations": [[507, "fuel-management-operations"]], "swapAssemblies": [[507, "swapassemblies"]], "dischargeSwap": [[507, "dischargeswap"]], "swapCascade": [[507, "swapcascade"]], "Choosing Assemblies to Move": [[507, "choosing-assemblies-to-move"]], "Fuel Management Examples": [[507, "fuel-management-examples"]], "Convergent-Divergent": [[507, "convergent-divergent"]], "Fuel Management Tips": [[507, "fuel-management-tips"]], "Running a branch search": [[507, "running-a-branch-search"]], "Settings Report": [[507, "settings-report"]], "ARMI Settings": [[507, "id15"]], "Accessing Data in ARMI": [[508, "accessing-data-in-armi"]], "Settings and State Variables": [[508, "settings-and-state-variables"]], "Accessing Some Interesting Info": [[508, "accessing-some-interesting-info"]], "Outputs": [[509, "outputs"]], "The Standard Output": [[509, "the-standard-output"]], "The Database File": [[509, "the-database-file"]], "Loading Reactor State": [[509, "loading-reactor-state"]], "Extracting Reactor History": [[509, "extracting-reactor-history"]], "Extracting Settings and Blueprints": [[509, "extracting-settings-and-blueprints"]], "File format": [[509, "file-format"]], "Database Structure": [[509, "database-structure"]], "Database structure": [[509, "id1"]], "Loading Reactor State as Read-Only": [[509, "loading-reactor-state-as-read-only"]], "Physics Coupling": [[510, "physics-coupling"]], "Loose Coupling": [[510, "loose-coupling"]], "Tight Coupling": [[510, "tight-coupling"]], "Eigenvalue": [[510, "eigenvalue"]], "Block-wise Power": [[510, "block-wise-power"]], "The Global Flux Interface": [[510, "the-global-flux-interface"]], "Radial and Axial Expansion and Contraction": [[511, "radial-and-axial-expansion-and-contraction"]], "Thermal Expansion": [[511, "thermal-expansion"]], "Reactor Parameters": [[512, "reactor-parameters"]], "Reactor Parameters from Framework": [[512, "id1"]], "Spatial block parameters": [[513, "spatial-block-parameters"]], "Sub-block spatial grid": [[513, "sub-block-spatial-grid"]], "Auto grid": [[513, "auto-grid"]], "Interacting with spatial data": [[513, "interacting-with-spatial-data"]], "Component locations": [[513, "component-locations"]], "Pin locations": [[513, "pin-locations"]], "Pin parameter data": [[513, "pin-parameter-data"]], "Block rotation": [[513, "block-rotation"]], "Spatial locators": [[513, "spatial-locators"]], "Pin parameters": [[513, "pin-parameters"]], "Corners and edges": [[513, "corners-and-edges"]], "Other rotated parameters": [[513, "other-rotated-parameters"]]}, "indexentries": {"applyasynciowindowsworkaround() (in module armi)": [[0, "armi.applyAsyncioWindowsWorkaround"]], "armi": [[0, "module-armi"], [483, "term-ARMI"]], "configure() (in module armi)": [[0, "armi.configure"]], "disablefutureconfigures() (in module armi)": [[0, "armi.disableFutureConfigures"]], "getapp() (in module armi)": [[0, "armi.getApp"]], "getdefaultpluginmanager() (in module armi)": [[0, "armi.getDefaultPluginManager"]], "getdefaultplugins() (in module armi)": [[0, "armi.getDefaultPlugins"]], "getpluginmanager() (in module armi)": [[0, "armi.getPluginManager"]], "getpluginmanagerorfail() (in module armi)": [[0, "armi.getPluginManagerOrFail"]], "init() (in module armi)": [[0, "armi.init"]], "isconfigured() (in module armi)": [[0, "armi.isConfigured"]], "isstablereleaseversion() (in module armi)": [[0, "armi.isStableReleaseVersion"]], "module": [[0, "module-armi"], [1, "module-armi.apps"], [2, "module-armi.bookkeeping"], [3, "module-armi.bookkeeping.db"], [4, "module-armi.bookkeeping.db.compareDB3"], [5, "module-armi.bookkeeping.db.database"], [6, "module-armi.bookkeeping.db.databaseInterface"], [7, "module-armi.bookkeeping.db.factory"], [8, "module-armi.bookkeeping.db.jaggedArray"], [9, "module-armi.bookkeeping.db.layout"], [10, "module-armi.bookkeeping.db.passiveDBLoadPlugin"], [11, "module-armi.bookkeeping.db.permissions"], [12, "module-armi.bookkeeping.db.tests"], [13, "module-armi.bookkeeping.db.tests.test_comparedb3"], [14, "module-armi.bookkeeping.db.tests.test_database3"], [15, "module-armi.bookkeeping.db.tests.test_databaseInterface"], [16, "module-armi.bookkeeping.db.tests.test_jaggedArray"], [17, "module-armi.bookkeeping.db.tests.test_layout"], [18, "module-armi.bookkeeping.db.typedefs"], [19, "module-armi.bookkeeping.historyTracker"], [20, "module-armi.bookkeeping.mainInterface"], [21, "module-armi.bookkeeping.memoryProfiler"], [22, "module-armi.bookkeeping.report"], [23, "module-armi.bookkeeping.report.data"], [24, "module-armi.bookkeeping.report.html"], [25, "module-armi.bookkeeping.report.newReportUtils"], [26, "module-armi.bookkeeping.report.newReports"], [27, "module-armi.bookkeeping.report.reportInterface"], [28, "module-armi.bookkeeping.report.reportingUtils"], [29, "module-armi.bookkeeping.report.tests"], [30, "module-armi.bookkeeping.report.tests.test_newReport"], [31, "module-armi.bookkeeping.report.tests.test_report"], [32, "module-armi.bookkeeping.snapshotInterface"], [33, "module-armi.bookkeeping.tests"], [34, "module-armi.bookkeeping.tests.test_historyTracker"], [35, "module-armi.bookkeeping.tests.test_memoryProfiler"], [36, "module-armi.bookkeeping.tests.test_snapshot"], [37, "module-armi.bookkeeping.visualization"], [38, "module-armi.bookkeeping.visualization.dumper"], [39, "module-armi.bookkeeping.visualization.entryPoint"], [40, "module-armi.bookkeeping.visualization.tests"], [41, "module-armi.bookkeeping.visualization.tests.test_vis"], [42, "module-armi.bookkeeping.visualization.tests.test_xdmf"], [43, "module-armi.bookkeeping.visualization.utils"], [44, "module-armi.bookkeeping.visualization.vtk"], [45, "module-armi.bookkeeping.visualization.xdmf"], [46, "module-armi.cases"], [47, "module-armi.cases.case"], [48, "module-armi.cases.inputModifiers"], [49, "module-armi.cases.inputModifiers.inputModifiers"], [50, "module-armi.cases.inputModifiers.neutronicsModifiers"], [51, "module-armi.cases.inputModifiers.pinTypeInputModifiers"], [52, "module-armi.cases.inputModifiers.tests"], [53, "module-armi.cases.inputModifiers.tests.test_inputModifiers"], [54, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"], [55, "module-armi.cases.suite"], [56, "module-armi.cases.suiteBuilder"], [57, "module-armi.cases.tests"], [58, "module-armi.cases.tests.test_cases"], [59, "module-armi.cases.tests.test_suiteBuilder"], [60, "module-armi.cli"], [61, "module-armi.cli.checkInputs"], [62, "module-armi.cli.cleanTemps"], [63, "module-armi.cli.clone"], [64, "module-armi.cli.compareCases"], [65, "module-armi.cli.database"], [66, "module-armi.cli.entryPoint"], [67, "module-armi.cli.gridGui"], [68, "module-armi.cli.migrateInputs"], [69, "module-armi.cli.modify"], [70, "module-armi.cli.reportsEntryPoint"], [71, "module-armi.cli.run"], [72, "module-armi.cli.runSuite"], [73, "module-armi.cli.tests"], [74, "module-armi.cli.tests.test_runEntryPoint"], [75, "module-armi.cli.tests.test_runSuite"], [76, "module-armi.conftest"], [77, "module-armi.context"], [78, "module-armi.interfaces"], [79, "module-armi.materials"], [80, "module-armi.materials.air"], [81, "module-armi.materials.alloy200"], [82, "module-armi.materials.b4c"], [83, "module-armi.materials.be9"], [84, "module-armi.materials.caH2"], [85, "module-armi.materials.californium"], [86, "module-armi.materials.concrete"], [87, "module-armi.materials.copper"], [88, "module-armi.materials.cs"], [89, "module-armi.materials.custom"], [90, "module-armi.materials.graphite"], [91, "module-armi.materials.hafnium"], [92, "module-armi.materials.hastelloyN"], [93, "module-armi.materials.ht9"], [94, "module-armi.materials.inconel"], [95, "module-armi.materials.inconel600"], [96, "module-armi.materials.inconel625"], [97, "module-armi.materials.inconel800"], [98, "module-armi.materials.inconelPE16"], [99, "module-armi.materials.inconelX750"], [100, "module-armi.materials.lead"], [101, "module-armi.materials.leadBismuth"], [102, "module-armi.materials.lithium"], [103, "module-armi.materials.magnesium"], [104, "module-armi.materials.material"], [105, "module-armi.materials.mgO"], [106, "module-armi.materials.mixture"], [107, "module-armi.materials.molybdenum"], [108, "module-armi.materials.mox"], [109, "module-armi.materials.nZ"], [110, "module-armi.materials.potassium"], [111, "module-armi.materials.scandiumOxide"], [112, "module-armi.materials.siC"], [113, "module-armi.materials.sodium"], [114, "module-armi.materials.sodiumChloride"], [115, "module-armi.materials.sulfur"], [116, "module-armi.materials.tZM"], [117, "module-armi.materials.tantalum"], [118, "module-armi.materials.tests"], [119, "module-armi.materials.tests.test__init__"], [120, "module-armi.materials.tests.test_air"], [121, "module-armi.materials.tests.test_b4c"], [122, "module-armi.materials.tests.test_be9"], [123, "module-armi.materials.tests.test_graphite"], [124, "module-armi.materials.tests.test_lithium"], [125, "module-armi.materials.tests.test_materials"], [126, "module-armi.materials.tests.test_sic"], [127, "module-armi.materials.tests.test_sulfur"], [128, "module-armi.materials.tests.test_thoriumOxide"], [129, "module-armi.materials.tests.test_uZr"], [130, "module-armi.materials.tests.test_water"], [131, "module-armi.materials.thU"], [132, "module-armi.materials.thorium"], [133, "module-armi.materials.thoriumOxide"], [134, "module-armi.materials.uThZr"], [135, "module-armi.materials.uZr"], [136, "module-armi.materials.uranium"], [137, "module-armi.materials.uraniumOxide"], [138, "module-armi.materials.void"], [139, "module-armi.materials.water"], [140, "module-armi.materials.yttriumOxide"], [141, "module-armi.materials.zincOxide"], [142, "module-armi.materials.zr"], [143, "module-armi.meta"], [144, "module-armi.migration"], [145, "module-armi.migration.base"], [146, "module-armi.migration.m0_1_3"], [147, "module-armi.migration.m0_1_6"], [148, "module-armi.migration.tests"], [149, "module-armi.migration.tests.test_m0_1_6"], [150, "module-armi.migration.tests.test_migration_base"], [151, "module-armi.mpiActions"], [152, "module-armi.nucDirectory"], [153, "module-armi.nucDirectory.elements"], [154, "module-armi.nucDirectory.nucDir"], [155, "module-armi.nucDirectory.nuclideBases"], [156, "module-armi.nucDirectory.tests"], [157, "module-armi.nucDirectory.tests.test_elements"], [158, "module-armi.nucDirectory.tests.test_nucDirectory"], [159, "module-armi.nucDirectory.tests.test_nuclideBases"], [160, "module-armi.nucDirectory.tests.test_thermalScattering"], [161, "module-armi.nucDirectory.tests.test_transmutations"], [162, "module-armi.nucDirectory.thermalScattering"], [163, "module-armi.nucDirectory.transmutations"], [164, "module-armi.nuclearDataIO"], [165, "module-armi.nuclearDataIO.cccc"], [166, "module-armi.nuclearDataIO.cccc.cccc"], [167, "module-armi.nuclearDataIO.cccc.compxs"], [168, "module-armi.nuclearDataIO.cccc.dif3d"], [169, "module-armi.nuclearDataIO.cccc.dlayxs"], [170, "module-armi.nuclearDataIO.cccc.fixsrc"], [171, "module-armi.nuclearDataIO.cccc.gamiso"], [172, "module-armi.nuclearDataIO.cccc.geodst"], [173, "module-armi.nuclearDataIO.cccc.isotxs"], [174, "module-armi.nuclearDataIO.cccc.labels"], [175, "module-armi.nuclearDataIO.cccc.nhflux"], [176, "module-armi.nuclearDataIO.cccc.pmatrx"], [177, "module-armi.nuclearDataIO.cccc.pwdint"], [178, "module-armi.nuclearDataIO.cccc.rtflux"], [179, "module-armi.nuclearDataIO.cccc.rzflux"], [180, "module-armi.nuclearDataIO.cccc.tests"], [181, "module-armi.nuclearDataIO.cccc.tests.test_cccc"], [182, "module-armi.nuclearDataIO.cccc.tests.test_compxs"], [183, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"], [184, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"], [185, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"], [186, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"], [187, "module-armi.nuclearDataIO.cccc.tests.test_geodst"], [188, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"], [189, "module-armi.nuclearDataIO.cccc.tests.test_labels"], [190, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"], [191, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"], [192, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"], [193, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"], [194, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"], [195, "module-armi.nuclearDataIO.nuclearFileMetadata"], [196, "module-armi.nuclearDataIO.tests"], [197, "module-armi.nuclearDataIO.tests.test_xsCollections"], [198, "module-armi.nuclearDataIO.tests.test_xsLibraries"], [199, "module-armi.nuclearDataIO.tests.test_xsNuclides"], [200, "module-armi.nuclearDataIO.xsCollections"], [201, "module-armi.nuclearDataIO.xsLibraries"], [202, "module-armi.nuclearDataIO.xsNuclides"], [203, "module-armi.operators"], [204, "module-armi.operators.operator"], [205, "module-armi.operators.operatorMPI"], [206, "module-armi.operators.runTypes"], [207, "module-armi.operators.settingsValidation"], [208, "module-armi.operators.snapshots"], [209, "module-armi.operators.tests"], [210, "module-armi.operators.tests.test_operatorSnapshots"], [211, "module-armi.operators.tests.test_operators"], [212, "module-armi.physics"], [213, "module-armi.physics.constants"], [214, "module-armi.physics.executers"], [215, "module-armi.physics.fuelCycle"], [216, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"], [217, "module-armi.physics.fuelCycle.fuelHandlerFactory"], [218, "module-armi.physics.fuelCycle.fuelHandlerInterface"], [219, "module-armi.physics.fuelCycle.fuelHandlers"], [220, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"], [221, "module-armi.physics.fuelCycle.settings"], [222, "module-armi.physics.fuelCycle.tests"], [223, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"], [224, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"], [225, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"], [226, "module-armi.physics.fuelCycle.tests.test_utils"], [227, "module-armi.physics.fuelCycle.utils"], [228, "module-armi.physics.fuelPerformance"], [229, "module-armi.physics.fuelPerformance.executers"], [230, "module-armi.physics.fuelPerformance.parameters"], [231, "module-armi.physics.fuelPerformance.plugin"], [232, "module-armi.physics.fuelPerformance.settings"], [233, "module-armi.physics.fuelPerformance.tests"], [234, "module-armi.physics.fuelPerformance.tests.test_executers"], [235, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"], [236, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"], [237, "module-armi.physics.fuelPerformance.utils"], [238, "module-armi.physics.neutronics"], [239, "module-armi.physics.neutronics.const"], [240, "module-armi.physics.neutronics.crossSectionGroupManager"], [241, "module-armi.physics.neutronics.crossSectionSettings"], [242, "module-armi.physics.neutronics.diffIsotxs"], [243, "module-armi.physics.neutronics.energyGroups"], [244, "module-armi.physics.neutronics.fissionProductModel"], [245, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"], [246, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"], [247, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"], [248, "module-armi.physics.neutronics.fissionProductModel.tests"], [249, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"], [250, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"], [251, "module-armi.physics.neutronics.globalFlux"], [252, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"], [253, "module-armi.physics.neutronics.globalFlux.tests"], [254, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"], [255, "module-armi.physics.neutronics.latticePhysics"], [256, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"], [257, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"], [258, "module-armi.physics.neutronics.latticePhysics.tests"], [259, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"], [260, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"], [261, "module-armi.physics.neutronics.macroXSGenerationInterface"], [262, "module-armi.physics.neutronics.parameters"], [263, "module-armi.physics.neutronics.reports"], [264, "module-armi.physics.neutronics.settings"], [265, "module-armi.physics.neutronics.tests"], [266, "module-armi.physics.neutronics.tests.test_crossSectionManager"], [267, "module-armi.physics.neutronics.tests.test_crossSectionSettings"], [268, "module-armi.physics.neutronics.tests.test_crossSectionTable"], [269, "module-armi.physics.neutronics.tests.test_energyGroups"], [270, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"], [271, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"], [272, "module-armi.physics.safety"], [273, "module-armi.physics.tests"], [274, "module-armi.physics.tests.test_executers"], [275, "module-armi.physics.thermalHydraulics"], [276, "module-armi.physics.thermalHydraulics.const"], [277, "module-armi.physics.thermalHydraulics.parameters"], [278, "module-armi.physics.thermalHydraulics.plugin"], [279, "module-armi.physics.thermalHydraulics.settings"], [280, "module-armi.physics.thermalHydraulics.tests"], [281, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"], [282, "module-armi.pluginManager"], [283, "module-armi.plugins"], [284, "module-armi.reactor"], [285, "module-armi.reactor.assemblies"], [286, "module-armi.reactor.assemblyParameters"], [287, "module-armi.reactor.blockParameters"], [288, "module-armi.reactor.blocks"], [289, "module-armi.reactor.blueprints"], [290, "module-armi.reactor.blueprints.assemblyBlueprint"], [291, "module-armi.reactor.blueprints.blockBlueprint"], [292, "module-armi.reactor.blueprints.componentBlueprint"], [293, "module-armi.reactor.blueprints.gridBlueprint"], [294, "module-armi.reactor.blueprints.isotopicOptions"], [295, "module-armi.reactor.blueprints.reactorBlueprint"], [296, "module-armi.reactor.blueprints.tests"], [297, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"], [298, "module-armi.reactor.blueprints.tests.test_blockBlueprints"], [299, "module-armi.reactor.blueprints.tests.test_blueprints"], [300, "module-armi.reactor.blueprints.tests.test_componentBlueprint"], [301, "module-armi.reactor.blueprints.tests.test_customIsotopics"], [302, "module-armi.reactor.blueprints.tests.test_gridBlueprints"], [303, "module-armi.reactor.blueprints.tests.test_materialModifications"], [304, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"], [305, "module-armi.reactor.components"], [306, "module-armi.reactor.components.basicShapes"], [307, "module-armi.reactor.components.complexShapes"], [308, "module-armi.reactor.components.component"], [309, "module-armi.reactor.components.componentParameters"], [310, "module-armi.reactor.components.volumetricShapes"], [311, "module-armi.reactor.composites"], [312, "module-armi.reactor.converters"], [313, "module-armi.reactor.converters.axialExpansionChanger"], [314, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"], [315, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"], [316, "module-armi.reactor.converters.axialExpansionChanger.expansionData"], [317, "module-armi.reactor.converters.blockConverters"], [318, "module-armi.reactor.converters.geometryConverters"], [319, "module-armi.reactor.converters.meshConverters"], [320, "module-armi.reactor.converters.parameterSweeps"], [321, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"], [322, "module-armi.reactor.converters.pinTypeBlockConverters"], [323, "module-armi.reactor.converters.tests"], [324, "module-armi.reactor.converters.tests.test_axialExpansionChanger"], [325, "module-armi.reactor.converters.tests.test_blockConverter"], [326, "module-armi.reactor.converters.tests.test_geometryConverters"], [327, "module-armi.reactor.converters.tests.test_meshConverters"], [328, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"], [329, "module-armi.reactor.converters.tests.test_uniformMesh"], [330, "module-armi.reactor.converters.uniformMesh"], [331, "module-armi.reactor.cores"], [332, "module-armi.reactor.excoreStructure"], [333, "module-armi.reactor.flags"], [334, "module-armi.reactor.geometry"], [335, "module-armi.reactor.grids"], [336, "module-armi.reactor.grids.axial"], [337, "module-armi.reactor.grids.cartesian"], [338, "module-armi.reactor.grids.constants"], [339, "module-armi.reactor.grids.grid"], [340, "module-armi.reactor.grids.hexagonal"], [341, "module-armi.reactor.grids.locations"], [342, "module-armi.reactor.grids.structuredGrid"], [343, "module-armi.reactor.grids.thetarz"], [344, "module-armi.reactor.parameters"], [345, "module-armi.reactor.parameters.exceptions"], [346, "module-armi.reactor.parameters.parameterCollections"], [347, "module-armi.reactor.parameters.parameterDefinitions"], [348, "module-armi.reactor.parameters.resolveCollections"], [349, "module-armi.reactor.reactorParameters"], [350, "module-armi.reactor.reactors"], [351, "module-armi.reactor.spentFuelPool"], [352, "module-armi.reactor.systemLayoutInput"], [353, "module-armi.reactor.tests"], [354, "module-armi.reactor.tests.test_assemblies"], [355, "module-armi.reactor.tests.test_blocks"], [356, "module-armi.reactor.tests.test_components"], [357, "module-armi.reactor.tests.test_composites"], [358, "module-armi.reactor.tests.test_excoreStructures"], [359, "module-armi.reactor.tests.test_flags"], [360, "module-armi.reactor.tests.test_geometry"], [361, "module-armi.reactor.tests.test_hexBlockRotate"], [362, "module-armi.reactor.tests.test_parameters"], [363, "module-armi.reactor.tests.test_reactors"], [364, "module-armi.reactor.tests.test_rz_reactors"], [365, "module-armi.reactor.tests.test_zones"], [366, "module-armi.reactor.zones"], [367, "module-armi.runLog"], [368, "module-armi.settings"], [369, "module-armi.settings.caseSettings"], [370, "module-armi.settings.fwSettings"], [371, "module-armi.settings.fwSettings.databaseSettings"], [372, "module-armi.settings.fwSettings.globalSettings"], [373, "module-armi.settings.fwSettings.reportSettings"], [374, "module-armi.settings.fwSettings.tightCouplingSettings"], [375, "module-armi.settings.setting"], [376, "module-armi.settings.settingsIO"], [377, "module-armi.settings.settingsValidation"], [378, "module-armi.settings.tests"], [379, "module-armi.settings.tests.test_inspectors"], [380, "module-armi.settings.tests.test_settings"], [381, "module-armi.settings.tests.test_settingsIO"], [382, "module-armi.testing"], [383, "module-armi.tests"], [384, "module-armi.tests.mockRunLogs"], [385, "module-armi.tests.refSmallReactorShuffleLogic"], [386, "module-armi.tests.test_apps"], [387, "module-armi.tests.test_armiTestHelper"], [388, "module-armi.tests.test_cartesian"], [389, "module-armi.tests.test_context"], [390, "module-armi.tests.test_interfaces"], [391, "module-armi.tests.test_lwrInputs"], [392, "module-armi.tests.test_mpiActions"], [393, "module-armi.tests.test_mpiFeatures"], [394, "module-armi.tests.test_mpiParameters"], [395, "module-armi.tests.test_notebooks"], [396, "module-armi.tests.test_plugins"], [397, "module-armi.tests.test_runLog"], [398, "module-armi.tests.test_tests"], [399, "module-armi.tests.test_user_plugins"], [400, "module-armi.utils"], [401, "module-armi.utils.asciimaps"], [402, "module-armi.utils.codeTiming"], [403, "module-armi.utils.customExceptions"], [404, "module-armi.utils.densityTools"], [405, "module-armi.utils.directoryChangers"], [406, "module-armi.utils.directoryChangersMpi"], [407, "module-armi.utils.dynamicImporter"], [408, "module-armi.utils.flags"], [410, "module-armi.utils.hexagon"], [411, "module-armi.utils.iterables"], [412, "module-armi.utils.mathematics"], [413, "module-armi.utils.outputCache"], [414, "module-armi.utils.parsing"], [415, "module-armi.utils.pathTools"], [416, "module-armi.utils.plotting"], [417, "module-armi.utils.properties"], [418, "module-armi.utils.reportPlotting"], [419, "module-armi.utils.tabulate"], [420, "module-armi.utils.tests"], [421, "module-armi.utils.tests.test_asciimaps"], [422, "module-armi.utils.tests.test_codeTiming"], [423, "module-armi.utils.tests.test_custom_exceptions"], [424, "module-armi.utils.tests.test_densityTools"], [425, "module-armi.utils.tests.test_directoryChangers"], [426, "module-armi.utils.tests.test_directoryChangersMpi"], [427, "module-armi.utils.tests.test_flags"], [428, "module-armi.utils.tests.test_hexagon"], [429, "module-armi.utils.tests.test_iterables"], [430, "module-armi.utils.tests.test_mathematics"], [431, "module-armi.utils.tests.test_outputCache"], [432, "module-armi.utils.tests.test_parsing"], [433, "module-armi.utils.tests.test_pathTools"], [434, "module-armi.utils.tests.test_plotting"], [435, "module-armi.utils.tests.test_properties"], [436, "module-armi.utils.tests.test_reportPlotting"], [437, "module-armi.utils.tests.test_tabulate"], [438, "module-armi.utils.tests.test_textProcessors"], [439, "module-armi.utils.tests.test_triangle"], [440, "module-armi.utils.tests.test_units"], [441, "module-armi.utils.tests.test_utils"], [442, "module-armi.utils.textProcessors"], [443, "module-armi.utils.triangle"], [444, "module-armi.utils.units"]], "app (class in armi.apps)": [[1, "armi.apps.App"]], "armi.apps": [[1, "module-armi.apps"]], "getparamrenames() (armi.apps.app method)": [[1, "armi.apps.App.getParamRenames"]], "getsettings() (armi.apps.app method)": [[1, "armi.apps.App.getSettings"]], "name (armi.apps.app attribute)": [[1, "armi.apps.App.name"]], "pluginmanager (armi.apps.app property)": [[1, "armi.apps.App.pluginManager"]], "registerpluginflags() (armi.apps.app method)": [[1, "armi.apps.App.registerPluginFlags"]], "registeruserplugins() (armi.apps.app method)": [[1, "armi.apps.App.registerUserPlugins"]], "splashtext (armi.apps.app property)": [[1, "armi.apps.App.splashText"]], "version (armi.apps.app property)": [[1, "armi.apps.App.version"]], "bookkeepingplugin (class in armi.bookkeeping)": [[2, "armi.bookkeeping.BookkeepingPlugin"]], "armi.bookkeeping": [[2, "module-armi.bookkeeping"]], "definecasedependencies() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineEntryPoints"]], "exposeinterfaces() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.exposeInterfaces"]], "getreportcontents() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.mpiActionRequiresReset"]], "database (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.Database"]], "databaseinterface (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.DatabaseInterface"]], "armi.bookkeeping.db": [[3, "module-armi.bookkeeping.db"]], "close() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.close"]], "closedb() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.closeDB"]], "comparedatabases() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.compareDatabases"]], "database (armi.bookkeeping.db.databaseinterface property)": [[3, "armi.bookkeeping.db.DatabaseInterface.database"]], "databasefactory() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.databaseFactory"]], "distributable() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.distributable"]], "filename (armi.bookkeeping.db.database property)": [[3, "armi.bookkeeping.db.Database.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database static method)": [[3, "armi.bookkeeping.db.Database.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getH5Group"]], "gethistories() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getHistories"]], "gethistories() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getHistory"]], "gethistory() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database static method)": [[3, "armi.bookkeeping.db.Database.grabLocalCommitHash"]], "hastimestep() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.hasTimeStep"]], "initdb() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEveryNode"]], "isopen() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.isOpen"]], "keys() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.keys"]], "load() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.load"]], "loadblueprints() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.loadGeometry"]], "loadoperator() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.loadOperator"]], "loadreadonly() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.loadReadOnly"]], "loadstate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.loadState"]], "mergehistory() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.mergeHistory"]], "name (armi.bookkeeping.db.databaseinterface attribute)": [[3, "armi.bookkeeping.db.DatabaseInterface.name"]], "open() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.open"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.prepRestartRun"]], "readinputsfromdb() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database attribute)": [[3, "armi.bookkeeping.db.Database.timeNodeGroupPattern"]], "version (armi.bookkeeping.db.database property)": [[3, "armi.bookkeeping.db.Database.version"]], "versionmajor (armi.bookkeeping.db.database property)": [[3, "armi.bookkeeping.db.Database.versionMajor"]], "versionminor (armi.bookkeeping.db.database property)": [[3, "armi.bookkeeping.db.Database.versionMinor"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.writeDBEveryNode"]], "writeinputstodb() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.writeInputsToDB"]], "writesystemattributes() (armi.bookkeeping.db.database static method)": [[3, "armi.bookkeeping.db.Database.writeSystemAttributes"]], "writetodb() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.writeToDB"]], "diffresults (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults"]], "outputwriter (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter"]], "adddiff() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addDiff"]], "addstructurediffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addStructureDiffs"]], "addtimestep() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addTimeStep"]], "armi.bookkeeping.db.comparedb3": [[4, "module-armi.bookkeeping.db.compareDB3"]], "comparedatabases() (in module armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.compareDatabases"]], "ndiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.nDiffs"]], "reportdiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.reportDiffs"]], "writeln() (armi.bookkeeping.db.comparedb3.outputwriter method)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter.writeln"]], "database (class in armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.Database"]], "armi.bookkeeping.db.database": [[5, "module-armi.bookkeeping.db.database"]], "close() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.close"]], "collectblocknumberdensities() (in module armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.collectBlockNumberDensities"]], "filename (armi.bookkeeping.db.database.database property)": [[5, "armi.bookkeeping.db.database.Database.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database.database static method)": [[5, "armi.bookkeeping.db.database.Database.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getH5Group"]], "geth5groupname() (in module armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.getH5GroupName"]], "gethistories() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database.database static method)": [[5, "armi.bookkeeping.db.database.Database.grabLocalCommitHash"]], "h5db (armi.bookkeeping.db.database.database attribute)": [[5, "armi.bookkeeping.db.database.Database.h5db"]], "hastimestep() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.hasTimeStep"]], "isopen() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.isOpen"]], "keys() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.keys"]], "load() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.load"]], "loadblueprints() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.loadGeometry"]], "loadreadonly() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.loadReadOnly"]], "mergehistory() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.mergeHistory"]], "open() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.open"]], "packspecialdata() (in module armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.packSpecialData"]], "readinputsfromdb() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database.database attribute)": [[5, "armi.bookkeeping.db.database.Database.timeNodeGroupPattern"]], "unpackspecialdata() (in module armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.unpackSpecialData"]], "version (armi.bookkeeping.db.database.database property)": [[5, "armi.bookkeeping.db.database.Database.version"]], "versionmajor (armi.bookkeeping.db.database.database property)": [[5, "armi.bookkeeping.db.database.Database.versionMajor"]], "versionminor (armi.bookkeeping.db.database.database property)": [[5, "armi.bookkeeping.db.database.Database.versionMinor"]], "writeinputstodb() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.writeInputsToDB"]], "writesystemattributes() (armi.bookkeeping.db.database.database static method)": [[5, "armi.bookkeeping.db.database.Database.writeSystemAttributes"]], "writetodb() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.writeToDB"]], "databaseinterface (class in armi.bookkeeping.db.databaseinterface)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface"]], "armi.bookkeeping.db.databaseinterface": [[6, "module-armi.bookkeeping.db.databaseInterface"]], "closedb() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.closeDB"]], "database (armi.bookkeeping.db.databaseinterface.databaseinterface property)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.database"]], "describeinterfaces() (in module armi.bookkeeping.db.databaseinterface)": [[6, "armi.bookkeeping.db.databaseInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.distributable"]], "gethistories() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistories"]], "gethistory() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistory"]], "initdb() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEveryNode"]], "loadstate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.loadState"]], "name (armi.bookkeeping.db.databaseinterface.databaseinterface attribute)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.name"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.prepRestartRun"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[7, "module-armi.bookkeeping.db.factory"]], "databasefactory() (in module armi.bookkeeping.db.factory)": [[7, "armi.bookkeeping.db.factory.databaseFactory"]], "jaggedarray (class in armi.bookkeeping.db.jaggedarray)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray"]], "armi.bookkeeping.db.jaggedarray": [[8, "module-armi.bookkeeping.db.jaggedArray"]], "flatten() (armi.bookkeeping.db.jaggedarray.jaggedarray static method)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray.flatten"]], "fromh5() (armi.bookkeeping.db.jaggedarray.jaggedarray class method)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray.fromH5"]], "tolist() (armi.bookkeeping.db.jaggedarray.jaggedarray method)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray.tolist"]], "unpack() (armi.bookkeeping.db.jaggedarray.jaggedarray method)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray.unpack"]], "layout (class in armi.bookkeeping.db.layout)": [[9, "armi.bookkeeping.db.layout.Layout"]], "allsubclasses() (armi.bookkeeping.db.layout.layout static method)": [[9, "armi.bookkeeping.db.layout.Layout.allSubclasses"]], "armi.bookkeeping.db.layout": [[9, "module-armi.bookkeeping.db.layout"]], "computeancestors() (armi.bookkeeping.db.layout.layout static method)": [[9, "armi.bookkeeping.db.layout.Layout.computeAncestors"]], "replacenoneswithnonsense() (in module armi.bookkeeping.db.layout)": [[9, "armi.bookkeeping.db.layout.replaceNonesWithNonsense"]], "replacenonsensewithnones() (in module armi.bookkeeping.db.layout)": [[9, "armi.bookkeeping.db.layout.replaceNonsenseWithNones"]], "writetodb() (armi.bookkeeping.db.layout.layout method)": [[9, "armi.bookkeeping.db.layout.Layout.writeToDB"]], "passthroughyamlize (class in armi.bookkeeping.db.passivedbloadplugin)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize"]], "passivedbloadplugin (class in armi.bookkeeping.db.passivedbloadplugin)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin"]], "skip_bp_sections (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin attribute)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.SKIP_BP_SECTIONS"]], "unknown_params (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin attribute)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.UNKNOWN_PARAMS"]], "armi.bookkeeping.db.passivedbloadplugin": [[10, "module-armi.bookkeeping.db.passiveDBLoadPlugin"]], "attributes (armi.bookkeeping.db.passivedbloadplugin.passthroughyamlize attribute)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize.attributes"]], "buildparamcoll() (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin static method)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.buildParamColl"]], "defineblueprintssections() (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin static method)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.defineBlueprintsSections"]], "defineparameters() (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin static method)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.defineParameters"]], "from_yaml() (armi.bookkeeping.db.passivedbloadplugin.passthroughyamlize class method)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize.from_yaml"]], "create_file_fie (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE"]], "create_file_fie2 (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE2"]], "create_file_tie (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_TIE"]], "default (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.DEFAULT"]], "permissions (class in armi.bookkeeping.db.permissions)": [[11, "armi.bookkeeping.db.permissions.Permissions"]], "read_only_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.READ_ONLY_FME"]], "read_write_create (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_CREATE"]], "read_write_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_FME"]], "all (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.all"]], "armi.bookkeeping.db.permissions": [[11, "module-armi.bookkeeping.db.permissions"]], "create (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.create"]], "read (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.read"]], "write (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.write"]], "armi.bookkeeping.db.tests": [[12, "module-armi.bookkeeping.db.tests"]], "testcomparedb3 (class in armi.bookkeeping.db.tests.test_comparedb3)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3": [[13, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "test_compareauxdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareAuxData"]], "test_comparedatabaseduplicate() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseDuplicate"]], "test_comparedatabasesim() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseSim"]], "test_comparesets() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareSets"]], "test_diffresultsbasic() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffResultsBasic"]], "test_diffsimpledata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSimpleData"]], "test_diffspecialdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSpecialData"]], "test_outputwriter() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_outputWriter"]], "small_yaml (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase attribute)": [[14, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.SMALL_YAML"]], "testdatabase (class in armi.bookkeeping.db.tests.test_database3)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase"]], "testdatabasesmaller (class in armi.bookkeeping.db.tests.test_database3)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller"]], "testwritereaddatabase (class in armi.bookkeeping.db.tests.test_database3)": [[14, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase"]], "armi.bookkeeping.db.tests.test_database3": [[14, "module-armi.bookkeeping.db.tests.test_database3"]], "makehistory() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.makeHistory"]], "makeshufflehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase.makeShuffleHistory"]], "test_auxdata() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_auxData"]], "test_baddata() (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.test_badData"]], "test_computeparents() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_computeParents"]], "test_deleting() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_deleting"]], "test_filename() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_fileName"]], "test_geth5file() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_getH5File"]], "test_grablocalcommithash() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_grabLocalCommitHash"]], "test_history() (armi.bookkeeping.db.tests.test_database3.testdatabase method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase.test_history"]], "test_load() (armi.bookkeeping.db.tests.test_database3.testdatabase method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase.test_load"]], "test_loadblueprints() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_loadBlueprints"]], "test_loadcs() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_loadCS"]], "test_loadoperator() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_loadOperator"]], "test_loadsortsetting() (armi.bookkeeping.db.tests.test_database3.testdatabase method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase.test_loadSortSetting"]], "test_mergehistory() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_mergeHistory"]], "test_open() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_open"]], "test_preprestartrun() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_prepRestartRun"]], "test_readinputsfromdb() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_readInputsFromDB"]], "test_readwriteroundtrip() (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.test_readWriteRoundTrip"]], "test_replacenones() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_replaceNones"]], "test_splitdatabase() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_splitDatabase"]], "test_writetodb() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_writeToDB"]], "mockinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface"]], "testbadname (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName"]], "testdatabaseinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface"]], "testdatabaseinterfacebol (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL"]], "testdatabasereading (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading"]], "testdatabasewriter (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter"]], "teststandardfollowon (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn"]], "armi.bookkeeping.db.tests.test_databaseinterface": [[15, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "getsimpledboperator() (in module armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.getSimpleDBOperator"]], "interacteverynode() (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.interactEveryNode"]], "name (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface attribute)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.name"]], "test_baddbname() (armi.bookkeeping.db.tests.test_databaseinterface.testbadname method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName.test_badDBName"]], "test_demonstratewritinginteractions() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_demonstrateWritingInteractions"]], "test_distributable() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_distributable"]], "test_gethistory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistory"]], "test_gethistorybylocation() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistoryByLocation"]], "test_growtofullcore() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCore"]], "test_growtofullcorefromfactory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactory"]], "test_growtofullcorefromfactorywithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactoryWithCS"]], "test_growtofullcorewithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreWithCS"]], "test_interactbol() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterfacebol method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL.test_interactBOL"]], "test_interacteverynodereturntightcoupling() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_interactEveryNodeReturnTightCoupling"]], "test_loadreadonly() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_loadReadOnly"]], "test_metadataendfail() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaDataEndFail"]], "test_metadata_endsuccessfully() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaData_endSuccessfully"]], "test_nosyncdbafterwrite() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_noSyncDbAfterWrite"]], "test_readwithoutinputs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWithoutInputs"]], "test_readwritten() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWritten"]], "test_standardrestart() (armi.bookkeeping.db.tests.test_databaseinterface.teststandardfollowon method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn.test_standardRestart"]], "test_syncdbafterwrite() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_syncDbAfterWrite"]], "test_timenodeloop_tightcoupling() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_timeNodeLoop_tightCoupling"]], "test_timesteps() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_timesteps"]], "test_varioustypeswork() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_variousTypesWork"]], "test_writesystemattributes() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_writeSystemAttributes"]], "testjaggedarray (class in armi.bookkeeping.db.tests.test_jaggedarray)": [[16, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray"]], "armi.bookkeeping.db.tests.test_jaggedarray": [[16, "module-armi.bookkeeping.db.tests.test_jaggedArray"]], "test_backwardscompatible() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[16, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_backwardsCompatible"]], "test_flatten() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[16, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_flatten"]], "test_roundtrip() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[16, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_roundTrip"]], "test_roundtripbool() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[16, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_roundTripBool"]], "testlocationpacking (class in armi.bookkeeping.db.tests.test_layout)": [[17, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout": [[17, "module-armi.bookkeeping.db.tests.test_layout"]], "test_close() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[17, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_close"]], "test_locationpacking() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[17, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPacking"]], "test_locationpackingoldversion() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[17, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOldVersion"]], "test_locationpackingolderversions() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[17, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOlderVersions"]], "armi.bookkeeping.db.typedefs": [[18, "module-armi.bookkeeping.db.typedefs"]], "detailed_assembly_flags (armi.bookkeeping.historytracker.historytrackerinterface attribute)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.DETAILED_ASSEMBLY_FLAGS"]], "historytrackerinterface (class in armi.bookkeeping.historytracker)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface"]], "addalldetailedassems() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addAllDetailedAssems"]], "adddetailassembliesbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembliesBOL"]], "adddetailassembly() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembly"]], "adddetailassemsbyassemnums() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssemsByAssemNums"]], "armi.bookkeeping.historytracker": [[19, "module-armi.bookkeeping.historyTracker"]], "describeinterfaces() (in module armi.bookkeeping.historytracker)": [[19, "armi.bookkeeping.historyTracker.describeInterfaces"]], "filtertimeindices() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.filterTimeIndices"]], "getblockhistoryval() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getBlockHistoryVal"]], "getdetailassemblies() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailAssemblies"]], "getdetailblocks() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailBlocks"]], "gettimesteps() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTimeSteps"]], "gettrackedparams() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTrackedParams"]], "interactboc() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOC"]], "interactbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOL"]], "interacteol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactEOL"]], "name (armi.bookkeeping.historytracker.historytrackerinterface attribute)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.name"]], "preloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.preloadBlockHistoryVals"]], "unloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.unloadBlockHistoryVals"]], "writeassemhistory() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.writeAssemHistory"]], "maininterface (class in armi.bookkeeping.maininterface)": [[20, "armi.bookkeeping.mainInterface.MainInterface"]], "armi.bookkeeping.maininterface": [[20, "module-armi.bookkeeping.mainInterface"]], "cleanarmifiles() (armi.bookkeeping.maininterface.maininterface method)": [[20, "armi.bookkeeping.mainInterface.MainInterface.cleanARMIFiles"]], "cleanlastcyclefiles() (armi.bookkeeping.maininterface.maininterface method)": [[20, "armi.bookkeeping.mainInterface.MainInterface.cleanLastCycleFiles"]], "describeinterfaces() (in module armi.bookkeeping.maininterface)": [[20, "armi.bookkeeping.mainInterface.describeInterfaces"]], "interactboc() (armi.bookkeeping.maininterface.maininterface method)": [[20, "armi.bookkeeping.mainInterface.MainInterface.interactBOC"]], "interactbol() (armi.bookkeeping.maininterface.maininterface method)": [[20, "armi.bookkeeping.mainInterface.MainInterface.interactBOL"]], "interacteol() (armi.bookkeeping.maininterface.maininterface method)": [[20, "armi.bookkeeping.mainInterface.MainInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.maininterface.maininterface method)": [[20, "armi.bookkeeping.mainInterface.MainInterface.interactEveryNode"]], "name (armi.bookkeeping.maininterface.maininterface attribute)": [[20, "armi.bookkeeping.mainInterface.MainInterface.name"]], "instancecounter (class in armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.InstanceCounter"]], "klasscounter (class in armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.KlassCounter"]], "memoryprofiler (class in armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler"]], "printsystemmemoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction"]], "profilememoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction"]], "systemandprocessmemoryusage (class in armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.SystemAndProcessMemoryUsage"]], "add() (armi.bookkeeping.memoryprofiler.instancecounter method)": [[21, "armi.bookkeeping.memoryProfiler.InstanceCounter.add"]], "armi.bookkeeping.memoryprofiler": [[21, "module-armi.bookkeeping.memoryProfiler"]], "checkforduplicateobjectsonarmimodel() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.checkForDuplicateObjectsOnArmiModel"]], "countobjects() (armi.bookkeeping.memoryprofiler.klasscounter method)": [[21, "armi.bookkeeping.memoryProfiler.KlassCounter.countObjects"]], "describeinterfaces() (in module armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.describeInterfaces"]], "displaymemoryusage() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.displayMemoryUsage"]], "getcurrentmemoryusage() (in module armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.getCurrentMemoryUsage"]], "getreferrers() (armi.bookkeeping.memoryprofiler.memoryprofiler static method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.getReferrers"]], "gettotaljobmemory() (in module armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.getTotalJobMemory"]], "interactbol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactBOL"]], "interacteol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEOL"]], "interacteverynode() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEveryNode"]], "invokehook() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[21, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.invokeHook"]], "invokehook() (armi.bookkeeping.memoryprofiler.profilememoryusageaction method)": [[21, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction.invokeHook"]], "maxprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[21, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.maxProcessMemoryInMB"]], "minprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[21, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.minProcessMemoryInMB"]], "name (armi.bookkeeping.memoryprofiler.memoryprofiler attribute)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.name"]], "printcurrentmemorystate() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.printCurrentMemoryState"]], "printusage() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[21, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.printUsage"]], "armi.bookkeeping.report": [[22, "module-armi.bookkeeping.report"]], "setdata() (in module armi.bookkeeping.report)": [[22, "armi.bookkeeping.report.setData"]], "group (class in armi.bookkeeping.report.data)": [[23, "armi.bookkeeping.report.data.Group"]], "image (class in armi.bookkeeping.report.data)": [[23, "armi.bookkeeping.report.data.Image"]], "report (class in armi.bookkeeping.report.data)": [[23, "armi.bookkeeping.report.data.Report"]], "table (class in armi.bookkeeping.report.data)": [[23, "armi.bookkeeping.report.data.Table"]], "addtoreport() (armi.bookkeeping.report.data.report method)": [[23, "armi.bookkeeping.report.data.Report.addToReport"]], "armi.bookkeeping.report.data": [[23, "module-armi.bookkeeping.report.data"]], "componentwellgroups (armi.bookkeeping.report.data.report attribute)": [[23, "armi.bookkeeping.report.data.Report.componentWellGroups"]], "count (armi.bookkeeping.report.data.image attribute)": [[23, "armi.bookkeeping.report.data.Image.count"]], "groupsorderfirst (armi.bookkeeping.report.data.report attribute)": [[23, "armi.bookkeeping.report.data.Report.groupsOrderFirst"]], "writegroupshtml() (armi.bookkeeping.report.data.report method)": [[23, "armi.bookkeeping.report.data.Report.writeGroupsHTML"]], "writehtml() (armi.bookkeeping.report.data.group method)": [[23, "armi.bookkeeping.report.data.Group.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.image method)": [[23, "armi.bookkeeping.report.data.Image.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.report method)": [[23, "armi.bookkeeping.report.data.Report.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.table method)": [[23, "armi.bookkeeping.report.data.Table.writeHTML"]], "a (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.A"]], "b (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.B"]], "body (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Body"]], "caption (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Caption"]], "div (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Div"]], "footer (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Footer"]], "h1 (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.H1"]], "h2 (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.H2"]], "h3 (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.H3"]], "h4 (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.H4"]], "htmlfile (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.HTMLFile"]], "head (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Head"]], "html (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Html"]], "img (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Img"]], "li (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.LI"]], "link (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Link"]], "p (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.P"]], "script (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Script"]], "span (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Span"]], "style (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Style"]], "tbody (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.TBody"]], "td (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.TD"]], "th (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.TH"]], "thead (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.THead"]], "tr (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.TR"]], "table (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Table"]], "tag (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Tag"]], "title (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Title"]], "ul (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.UL"]], "armi.bookkeeping.report.html": [[24, "module-armi.bookkeeping.report.html"]], "encode64() (in module armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.encode64"]], "tag (armi.bookkeeping.report.html.a attribute)": [[24, "armi.bookkeeping.report.html.A.tag"]], "tag (armi.bookkeeping.report.html.b attribute)": [[24, "armi.bookkeeping.report.html.B.tag"]], "tag (armi.bookkeeping.report.html.body attribute)": [[24, "armi.bookkeeping.report.html.Body.tag"]], "tag (armi.bookkeeping.report.html.caption attribute)": [[24, "armi.bookkeeping.report.html.Caption.tag"]], "tag (armi.bookkeeping.report.html.div attribute)": [[24, "armi.bookkeeping.report.html.Div.tag"]], "tag (armi.bookkeeping.report.html.footer attribute)": [[24, "armi.bookkeeping.report.html.Footer.tag"]], "tag (armi.bookkeeping.report.html.h1 attribute)": [[24, "armi.bookkeeping.report.html.H1.tag"]], "tag (armi.bookkeeping.report.html.h2 attribute)": [[24, "armi.bookkeeping.report.html.H2.tag"]], "tag (armi.bookkeeping.report.html.h3 attribute)": [[24, "armi.bookkeeping.report.html.H3.tag"]], "tag (armi.bookkeeping.report.html.h4 attribute)": [[24, "armi.bookkeeping.report.html.H4.tag"]], "tag (armi.bookkeeping.report.html.head attribute)": [[24, "armi.bookkeeping.report.html.Head.tag"]], "tag (armi.bookkeeping.report.html.html attribute)": [[24, "armi.bookkeeping.report.html.Html.tag"]], "tag (armi.bookkeeping.report.html.img attribute)": [[24, "armi.bookkeeping.report.html.Img.tag"]], "tag (armi.bookkeeping.report.html.li attribute)": [[24, "armi.bookkeeping.report.html.LI.tag"]], "tag (armi.bookkeeping.report.html.link attribute)": [[24, "armi.bookkeeping.report.html.Link.tag"]], "tag (armi.bookkeeping.report.html.p attribute)": [[24, "armi.bookkeeping.report.html.P.tag"]], "tag (armi.bookkeeping.report.html.script attribute)": [[24, "armi.bookkeeping.report.html.Script.tag"]], "tag (armi.bookkeeping.report.html.span attribute)": [[24, "armi.bookkeeping.report.html.Span.tag"]], "tag (armi.bookkeeping.report.html.style attribute)": [[24, "armi.bookkeeping.report.html.Style.tag"]], "tag (armi.bookkeeping.report.html.tbody attribute)": [[24, "armi.bookkeeping.report.html.TBody.tag"]], "tag (armi.bookkeeping.report.html.td attribute)": [[24, "armi.bookkeeping.report.html.TD.tag"]], "tag (armi.bookkeeping.report.html.th attribute)": [[24, "armi.bookkeeping.report.html.TH.tag"]], "tag (armi.bookkeeping.report.html.thead attribute)": [[24, "armi.bookkeeping.report.html.THead.tag"]], "tag (armi.bookkeeping.report.html.tr attribute)": [[24, "armi.bookkeeping.report.html.TR.tag"]], "tag (armi.bookkeeping.report.html.table attribute)": [[24, "armi.bookkeeping.report.html.Table.tag"]], "tag (armi.bookkeeping.report.html.tag attribute)": [[24, "armi.bookkeeping.report.html.Tag.tag"]], "tag (armi.bookkeeping.report.html.title attribute)": [[24, "armi.bookkeeping.report.html.Title.tag"]], "tag (armi.bookkeeping.report.html.ul attribute)": [[24, "armi.bookkeeping.report.html.UL.tag"]], "write() (armi.bookkeeping.report.html.htmlfile method)": [[24, "armi.bookkeeping.report.html.HTMLFile.write"]], "writeescaped() (armi.bookkeeping.report.html.htmlfile method)": [[24, "armi.bookkeeping.report.html.HTMLFile.writeEscaped"]], "writestandardreporttemplate() (in module armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.writeStandardReportTemplate"]], "design (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.DESIGN"]], "armi.bookkeeping.report.newreportutils": [[25, "module-armi.bookkeeping.report.newReportUtils"]], "comprehensivebolcontent() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.comprehensiveBOLContent"]], "createdimensionreport() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.createDimensionReport"]], "getpindesigntable() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.getPinDesignTable"]], "insertareafractionsreport() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertAreaFractionsReport"]], "insertblockdesignreport() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertBlockDesignReport"]], "insertblockdiagrams() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertBlockDiagrams"]], "insertblueprintcontent() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertBlueprintContent"]], "insertcoreandassemblymaps() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertCoreAndAssemblyMaps"]], "insertcoredesignreport() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertCoreDesignReport"]], "insertdesigncontent() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertDesignContent"]], "insertendoflifecontent() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertEndOfLifeContent"]], "insertgeneralreportcontent() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertGeneralReportContent"]], "insertmetatable() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertMetaTable"]], "insertsettingsdata() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertSettingsData"]], "begin (armi.bookkeeping.report.newreports.reportstage attribute)": [[26, "armi.bookkeeping.report.newReports.ReportStage.Begin"]], "end (armi.bookkeeping.report.newreports.reportstage attribute)": [[26, "armi.bookkeeping.report.newReports.ReportStage.End"]], "image (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.Image"]], "reportcontent (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.ReportContent"]], "reportnode (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.ReportNode"]], "reportstage (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.ReportStage"]], "section (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.Section"]], "standard (armi.bookkeeping.report.newreports.reportstage attribute)": [[26, "armi.bookkeeping.report.newReports.ReportStage.Standard"]], "table (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.Table"]], "timeseries (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.TimeSeries"]], "add() (armi.bookkeeping.report.newreports.timeseries method)": [[26, "armi.bookkeeping.report.newReports.TimeSeries.add"]], "addchildelement() (armi.bookkeeping.report.newreports.section method)": [[26, "armi.bookkeeping.report.newReports.Section.addChildElement"]], "addrow() (armi.bookkeeping.report.newreports.table method)": [[26, "armi.bookkeeping.report.newReports.Table.addRow"]], "armi.bookkeeping.report.newreports": [[26, "module-armi.bookkeeping.report.newReports"]], "encode64() (in module armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.encode64"]], "get() (armi.bookkeeping.report.newreports.reportcontent method)": [[26, "armi.bookkeeping.report.newReports.ReportContent.get"]], "get() (armi.bookkeeping.report.newreports.section method)": [[26, "armi.bookkeeping.report.newReports.Section.get"]], "items() (armi.bookkeeping.report.newreports.section method)": [[26, "armi.bookkeeping.report.newReports.Section.items"]], "leveldict (armi.bookkeeping.report.newreports.reportnode attribute)": [[26, "armi.bookkeeping.report.newReports.ReportNode.levelDict"]], "plot() (armi.bookkeeping.report.newreports.timeseries method)": [[26, "armi.bookkeeping.report.newReports.TimeSeries.plot"]], "render() (armi.bookkeeping.report.newreports.image method)": [[26, "armi.bookkeeping.report.newReports.Image.render"]], "render() (armi.bookkeeping.report.newreports.reportnode method)": [[26, "armi.bookkeeping.report.newReports.ReportNode.render"]], "render() (armi.bookkeeping.report.newreports.section method)": [[26, "armi.bookkeeping.report.newReports.Section.render"]], "render() (armi.bookkeeping.report.newreports.table method)": [[26, "armi.bookkeeping.report.newReports.Table.render"]], "render() (armi.bookkeeping.report.newreports.timeseries method)": [[26, "armi.bookkeeping.report.newReports.TimeSeries.render"]], "tableofcontents() (armi.bookkeeping.report.newreports.reportcontent method)": [[26, "armi.bookkeeping.report.newReports.ReportContent.tableOfContents"]], "writereports() (armi.bookkeeping.report.newreports.reportcontent method)": [[26, "armi.bookkeeping.report.newReports.ReportContent.writeReports"]], "reportinterface (class in armi.bookkeeping.report.reportinterface)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface"]], "armi.bookkeeping.report.reportinterface": [[27, "module-armi.bookkeeping.report.reportInterface"]], "countassembliessfp() (armi.bookkeeping.report.reportinterface.reportinterface static method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.countAssembliesSFP"]], "describeinterfaces() (in module armi.bookkeeping.report.reportinterface)": [[27, "armi.bookkeeping.report.reportInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.distributable"]], "generatedesignreport() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.generateDesignReport"]], "interactboc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOC"]], "interactbol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOL"]], "interacteoc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOC"]], "interacteol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEveryNode"]], "name (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.name"]], "printreports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.printReports"]], "reportsfp() (armi.bookkeeping.report.reportinterface.reportinterface static method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.reportSFP"]], "reports (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.reports"]], "writereports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.writeReports"]], "writerunsummary() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.writeRunSummary"]], "armi.bookkeeping.report.reportingutils": [[28, "module-armi.bookkeeping.report.reportingUtils"]], "getinterfacestacksummary() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.getInterfaceStackSummary"]], "getnodename() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.getNodeName"]], "getsysteminfo() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.getSystemInfo"]], "makeblockdesignreport() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.makeBlockDesignReport"]], "makecoreandassemblymaps() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.makeCoreAndAssemblyMaps"]], "makecoredesignreport() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.makeCoreDesignReport"]], "setneutronbalancesreport() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.setNeutronBalancesReport"]], "summarizepindesign() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.summarizePinDesign"]], "summarizepower() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.summarizePower"]], "summarizepowerpeaking() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.summarizePowerPeaking"]], "writeassemblymasssummary() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.writeAssemblyMassSummary"]], "writecyclesummary() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.writeCycleSummary"]], "writetightcouplingconvergencesummary() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.writeTightCouplingConvergenceSummary"]], "writewelcomeheaders() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[29, "module-armi.bookkeeping.report.tests"]], "testreportcontentcreation (class in armi.bookkeeping.report.tests.test_newreport)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newreport": [[30, "module-armi.bookkeeping.report.tests.test_newReport"]], "test_neutronicsplotfunctions() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_neutronicsPlotFunctions"]], "test_reportbasics() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportBasics"]], "test_reportcontents() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContents"]], "test_reportcontentsend() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContentsEnd"]], "test_reportlogs() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportLogs"]], "test_tablecreation() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_tableCreation"]], "test_timeseries() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_timeSeries"]], "test_writereports() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_writeReports"]], "testreport (class in armi.bookkeeping.report.tests.test_report)": [[31, "armi.bookkeeping.report.tests.test_report.TestReport"]], "testreportinterface (class in armi.bookkeeping.report.tests.test_report)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface"]], "testreportingutils (class in armi.bookkeeping.report.tests.test_report)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportingUtils"]], "armi.bookkeeping.report.tests.test_report": [[31, "module-armi.bookkeeping.report.tests.test_report"]], "test_distributablereportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_distributableReportInt"]], "test_getdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReport.test_getData"]], "test_getnodename() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getNodeName"]], "test_getsysteminfo() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfo"]], "test_getsysteminfolinux() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoLinux"]], "test_getsysteminfomac() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoMac"]], "test_getsysteminfowindows() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoWindows"]], "test_interactboc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOC"]], "test_interactbolreportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOLReportInt"]], "test_interacteoc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOC"]], "test_interacteol() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOL"]], "test_interacteverynode() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEveryNode"]], "test_printreports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_printReports"]], "test_reactorspecificreporting() (armi.bookkeeping.report.tests.test_report.testreport method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReport.test_reactorSpecificReporting"]], "test_setdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReport.test_setData"]], "test_writereports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_writeReports"]], "test_writewelcomeheaders() (armi.bookkeeping.report.tests.test_report.testreport method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReport.test_writeWelcomeHeaders"]], "snapshotinterface (class in armi.bookkeeping.snapshotinterface)": [[32, "armi.bookkeeping.snapshotInterface.SnapshotInterface"]], "activatedefaultsnapshots() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[32, "armi.bookkeeping.snapshotInterface.SnapshotInterface.activateDefaultSnapshots"]], "armi.bookkeeping.snapshotinterface": [[32, "module-armi.bookkeeping.snapshotInterface"]], "describeinterfaces() (in module armi.bookkeeping.snapshotinterface)": [[32, "armi.bookkeeping.snapshotInterface.describeInterfaces"]], "extractcyclenodefromstamp() (in module armi.bookkeeping.snapshotinterface)": [[32, "armi.bookkeeping.snapshotInterface.extractCycleNodeFromStamp"]], "getcyclenodestamp() (in module armi.bookkeeping.snapshotinterface)": [[32, "armi.bookkeeping.snapshotInterface.getCycleNodeStamp"]], "interactbol() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[32, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactBOL"]], "interactcoupled() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[32, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactCoupled"]], "interacteverynode() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[32, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactEveryNode"]], "name (armi.bookkeeping.snapshotinterface.snapshotinterface attribute)": [[32, "armi.bookkeeping.snapshotInterface.SnapshotInterface.name"]], "armi.bookkeeping.tests": [[33, "module-armi.bookkeeping.tests"]], "testhistorytracker (class in armi.bookkeeping.tests.test_historytracker)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker"]], "testhistorytrackernomodel (class in armi.bookkeeping.tests.test_historytracker)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel"]], "armi.bookkeeping.tests.test_historytracker": [[34, "module-armi.bookkeeping.tests.test_historyTracker"]], "runtutorialnotebook() (in module armi.bookkeeping.tests.test_historytracker)": [[34, "armi.bookkeeping.tests.test_historyTracker.runTutorialNotebook"]], "test_blockname() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_blockName"]], "test_calcmgfluence() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_calcMGFluence"]], "test_getblockinassembly() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_getBlockInAssembly"]], "test_historyparameters() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyParameters"]], "test_historyreport() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyReport"]], "test_timestepfiltering() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFiltering"]], "test_timestepfilteringwithgap() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFilteringWithGap"]], "klasscountertests (class in armi.bookkeeping.tests.test_memoryprofiler)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests"]], "testmemoryprofiler (class in armi.bookkeeping.tests.test_memoryprofiler)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryprofiler": [[35, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "get_containers() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.get_containers"]], "test_checkforduplicateobjectsonarmimodel() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_checkForDuplicateObjectsOnArmiModel"]], "test_counthandlesrecursion() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_countHandlesRecursion"]], "test_displaymemoryusage() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_displayMemoryUsage"]], "test_expandcontainer() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_expandContainer"]], "test_fullbreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_fullBreakdown"]], "test_getcurrentmemoryusage() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_getCurrentMemoryUsage"]], "test_getreferrers() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_getReferrers"]], "test_gettotaljobmemory() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_getTotalJobMemory"]], "test_printcurrentmemorystate() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_printCurrentMemoryState"]], "test_printcurrentmemorystate_nosetting() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_printCurrentMemoryState_noSetting"]], "test_printfullmemorybreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_printFullMemoryBreakdown"]], "test_profilememoryusageaction() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_profileMemoryUsageAction"]], "mockreactor (class in armi.bookkeeping.tests.test_snapshot)": [[36, "armi.bookkeeping.tests.test_snapshot.MockReactor"]], "mockreactorparams (class in armi.bookkeeping.tests.test_snapshot)": [[36, "armi.bookkeeping.tests.test_snapshot.MockReactorParams"]], "testsnapshotinterface (class in armi.bookkeeping.tests.test_snapshot)": [[36, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot": [[36, "module-armi.bookkeeping.tests.test_snapshot"]], "test_activeatedefaultsnapshots_17cycles5burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[36, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_17cycles5BurnSteps"]], "test_activeatedefaultsnapshots_30cycles2burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[36, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_30cycles2BurnSteps"]], "test_interactcoupled() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[36, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactCoupled"]], "test_interacteverynode() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[36, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactEveryNode"]], "armi.bookkeeping.visualization": [[37, "module-armi.bookkeeping.visualization"]], "visfiledumper (class in armi.bookkeeping.visualization.dumper)": [[38, "armi.bookkeeping.visualization.dumper.VisFileDumper"]], "armi.bookkeeping.visualization.dumper": [[38, "module-armi.bookkeeping.visualization.dumper"]], "dumpstate() (armi.bookkeeping.visualization.dumper.visfiledumper method)": [[38, "armi.bookkeeping.visualization.dumper.VisFileDumper.dumpState"]], "visfileentrypoint (class in armi.bookkeeping.visualization.entrypoint)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint"]], "addoptions() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.addOptions"]], "armi.bookkeeping.visualization.entrypoint": [[39, "module-armi.bookkeeping.visualization.entryPoint"]], "description (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.description"]], "invoke() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.invoke"]], "name (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.name"]], "parse() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.parse"]], "settingsargument (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.settingsArgument"]], "armi.bookkeeping.visualization.tests": [[40, "module-armi.bookkeeping.visualization.tests"]], "testvisdump (class in armi.bookkeeping.visualization.tests.test_vis)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump"]], "testvtkmesh (class in armi.bookkeeping.visualization.tests.test_vis)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis": [[41, "module-armi.bookkeeping.visualization.tests.test_vis"]], "test_cartesianmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_cartesianMesh"]], "test_dumpreactorvtk() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorVtk"]], "test_dumpreactorxdmf() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorXdmf"]], "test_hexmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_hexMesh"]], "test_testvtkmesh() (armi.bookkeeping.visualization.tests.test_vis.testvtkmesh method)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh.test_testVtkMesh"]], "testxdmf (class in armi.bookkeeping.visualization.tests.test_xdmf)": [[42, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[42, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "test_deduptimes() (armi.bookkeeping.visualization.tests.test_xdmf.testxdmf method)": [[42, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf.test_dedupTimes"]], "vtkmesh (class in armi.bookkeeping.visualization.utils)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh"]], "append() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh.append"]], "armi.bookkeeping.visualization.utils": [[43, "module-armi.bookkeeping.visualization.utils"]], "createassemmesh() (in module armi.bookkeeping.visualization.utils)": [[43, "armi.bookkeeping.visualization.utils.createAssemMesh"]], "createblockmesh() (in module armi.bookkeeping.visualization.utils)": [[43, "armi.bookkeeping.visualization.utils.createBlockMesh"]], "createreactorassemmesh() (in module armi.bookkeeping.visualization.utils)": [[43, "armi.bookkeeping.visualization.utils.createReactorAssemMesh"]], "createreactorblockmesh() (in module armi.bookkeeping.visualization.utils)": [[43, "armi.bookkeeping.visualization.utils.createReactorBlockMesh"]], "empty() (armi.bookkeeping.visualization.utils.vtkmesh static method)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh.empty"]], "write() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh.write"]], "x (armi.bookkeeping.visualization.utils.vtkmesh property)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh.x"]], "y (armi.bookkeeping.visualization.utils.vtkmesh property)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh.y"]], "z (armi.bookkeeping.visualization.utils.vtkmesh property)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh.z"]], "vtkdumper (class in armi.bookkeeping.visualization.vtk)": [[44, "armi.bookkeeping.visualization.vtk.VtkDumper"]], "armi.bookkeeping.visualization.vtk": [[44, "module-armi.bookkeeping.visualization.vtk"]], "dumpstate() (armi.bookkeeping.visualization.vtk.vtkdumper method)": [[44, "armi.bookkeeping.visualization.vtk.VtkDumper.dumpState"]], "xdmfdumper (class in armi.bookkeeping.visualization.xdmf)": [[45, "armi.bookkeeping.visualization.xdmf.XdmfDumper"]], "armi.bookkeeping.visualization.xdmf": [[45, "module-armi.bookkeeping.visualization.xdmf"]], "dumpstate() (armi.bookkeeping.visualization.xdmf.xdmfdumper method)": [[45, "armi.bookkeeping.visualization.xdmf.XdmfDumper.dumpState"]], "armi.cases": [[46, "module-armi.cases"]], "case (class in armi.cases.case)": [[47, "armi.cases.case.Case"]], "addexplicitdependency() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.addExplicitDependency"]], "armi.cases.case": [[47, "module-armi.cases.case"]], "bp (armi.cases.case.case property)": [[47, "armi.cases.case.Case.bp"]], "checkinputs() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.checkInputs"]], "clone() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.clone"]], "compare() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.compare"]], "copyinterfaceinputs() (in module armi.cases.case)": [[47, "armi.cases.case.copyInterfaceInputs"]], "dbname (armi.cases.case.case property)": [[47, "armi.cases.case.Case.dbName"]], "dependencies (armi.cases.case.case property)": [[47, "armi.cases.case.Case.dependencies"]], "directory (armi.cases.case.case property)": [[47, "armi.cases.case.Case.directory"]], "geom (armi.cases.case.case property)": [[47, "armi.cases.case.Case.geom"]], "getpotentialparentfromsettingvalue() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.getPotentialParentFromSettingValue"]], "independentvariables (armi.cases.case.case property)": [[47, "armi.cases.case.Case.independentVariables"]], "initializeoperator() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.initializeOperator"]], "run() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.run"]], "setuptaskdependence() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.setUpTaskDependence"]], "summarizedesign() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.summarizeDesign"]], "title (armi.cases.case.case property)": [[47, "armi.cases.case.Case.title"]], "writeinputs() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.writeInputs"]], "armi.cases.inputmodifiers": [[48, "module-armi.cases.inputModifiers"]], "blueprintblockmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[49, "armi.cases.inputModifiers.inputModifiers.BluePrintBlockModifier"]], "fail_if_after (armi.cases.inputmodifiers.inputmodifiers.inputmodifier attribute)": [[49, "armi.cases.inputModifiers.inputModifiers.InputModifier.FAIL_IF_AFTER"]], "fullcoremodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[49, "armi.cases.inputModifiers.inputModifiers.FullCoreModifier"]], "inputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[49, "armi.cases.inputModifiers.inputModifiers.InputModifier"]], "multisettingmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[49, "armi.cases.inputModifiers.inputModifiers.MultiSettingModifier"]], "samplinginputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[49, "armi.cases.inputModifiers.inputModifiers.SamplingInputModifier"]], "settingsmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[49, "armi.cases.inputModifiers.inputModifiers.SettingsModifier"]], "armi.cases.inputmodifiers.inputmodifiers": [[49, "module-armi.cases.inputModifiers.inputModifiers"]], "neutronicconvergencemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[50, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicConvergenceModifier"]], "neutronicmeshssizemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[50, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicMeshsSizeModifier"]], "armi.cases.inputmodifiers.neutronicsmodifiers": [[50, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "cladthicknessbyidmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[51, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier"]], "cladthicknessbyodmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[51, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyidmodifier attribute)": [[51, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier.FAIL_IF_AFTER"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyodmodifier attribute)": [[51, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier.FAIL_IF_AFTER"]], "smeardensitymodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[51, "armi.cases.inputModifiers.pinTypeInputModifiers.SmearDensityModifier"]], "armi.cases.inputmodifiers.pintypeinputmodifiers": [[51, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputmodifiers.tests": [[52, "module-armi.cases.inputModifiers.tests"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom"]], "neutronicskernelopts (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.NeutronicsKernelOpts"]], "testfullcoremodifier (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier"]], "testsettingsmodifiers (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers"]], "testsuitebuilderintegrations (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations"]], "armi.cases.inputmodifiers.tests.test_inputmodifiers": [[53, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_inputmodifiers.mockgeom attribute)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom.geomType"]], "test_neutronicconvergencemodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsettingsmodifiers method)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers.test_NeutronicConvergenceModifier"]], "test_blueprintblockmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_bluePrintBlockModifier"]], "test_fullcoreconversion() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testfullcoremodifier method)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier.test_fullCoreConversion"]], "test_settingsmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_settingsModifier"]], "test_smeardensityfail() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_smearDensityFail"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom"]], "testblueprintmodifiers (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers"]], "armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers": [[54, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.mockgeom attribute)": [[54, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom.geomType"]], "test_adjustsmeardensity() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[54, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_AdjustSmearDensity"]], "test_cladthickenessbyidmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[54, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByIDModifier"]], "test_cladthickenessbyodmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[54, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByODModifier"]], "casesuite (class in armi.cases.suite)": [[55, "armi.cases.suite.CaseSuite"]], "add() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.add"]], "armi.cases.suite": [[55, "module-armi.cases.suite"]], "clone() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.clone"]], "compare() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.compare"]], "discover() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.discover"]], "echoconfiguration() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.echoConfiguration"]], "remove() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.remove"]], "run() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.run"]], "writeinputs() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.writeInputs"]], "writetable() (armi.cases.suite.casesuite static method)": [[55, "armi.cases.suite.CaseSuite.writeTable"]], "fullfactorialsuitebuilder (class in armi.cases.suitebuilder)": [[56, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder"]], "fullfactorialsuitebuildernoisy (class in armi.cases.suitebuilder)": [[56, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy"]], "latinhypercubesuitebuilder (class in armi.cases.suitebuilder)": [[56, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder"]], "separateeffectssuitebuilder (class in armi.cases.suitebuilder)": [[56, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder"]], "suitebuilder (class in armi.cases.suitebuilder)": [[56, "armi.cases.suiteBuilder.SuiteBuilder"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuilder method)": [[56, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuildernoisy method)": [[56, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[56, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.separateeffectssuitebuilder method)": [[56, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.suitebuilder method)": [[56, "armi.cases.suiteBuilder.SuiteBuilder.addDegreeOfFreedom"]], "addmodifierset() (armi.cases.suitebuilder.suitebuilder method)": [[56, "armi.cases.suiteBuilder.SuiteBuilder.addModifierSet"]], "armi.cases.suitebuilder": [[56, "module-armi.cases.suiteBuilder"]], "buildsuite() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[56, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.buildSuite"]], "buildsuite() (armi.cases.suitebuilder.suitebuilder method)": [[56, "armi.cases.suiteBuilder.SuiteBuilder.buildSuite"]], "getinputmodifiers() (in module armi.cases.suitebuilder)": [[56, "armi.cases.suiteBuilder.getInputModifiers"]], "armi.cases.tests": [[57, "module-armi.cases.tests"]], "multifilesinterfaces (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.MultiFilesInterfaces"]], "testarmicase (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestArmiCase"]], "testcasesuitecomparison (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteComparison"]], "testcasesuitedependencies (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies"]], "testcopyinterfaceinputs (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs"]], "testextrainputwriting (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestExtraInputWriting"]], "testpluginforcopyinterfacesmultiplefiles (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles"]], "testpluginwithduplicatesetting (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting"]], "armi.cases.tests.test_cases": [[58, "module-armi.cases.tests.test_cases"]], "definesettings() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[58, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.defineSettings"]], "definesettings() (armi.cases.tests.test_cases.testpluginwithduplicatesetting static method)": [[58, "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting.defineSettings"]], "exposeinterfaces() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[58, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.exposeInterfaces"]], "name (armi.cases.tests.test_cases.multifilesinterfaces attribute)": [[58, "armi.cases.tests.test_cases.MultiFilesInterfaces.name"]], "specifyinputs() (armi.cases.tests.test_cases.multifilesinterfaces static method)": [[58, "armi.cases.tests.test_cases.MultiFilesInterfaces.specifyInputs"]], "test_checkinputs() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_checkInputs"]], "test_clone() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_clone"]], "test_clone() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_clone"]], "test_comparenodiffs() (armi.cases.tests.test_cases.testcasesuitecomparison method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteComparison.test_compareNoDiffs"]], "test_copyinputshelper() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInputsHelper"]], "test_copyinterfaceinputs_abspath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_absPath"]], "test_copyinterfaceinputs_multiplefiles() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_multipleFiles"]], "test_copyinterfaceinputs_nonfilepath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_nonFilePath"]], "test_copyinterfaceinputs_relpath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_relPath"]], "test_copyinterfaceinputs_singlefile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_singleFile"]], "test_copyinterfaceinputs_wildcardfile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_wildcardFile"]], "test_dependencieswithobscurepaths() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependenciesWithObscurePaths"]], "test_dependencyfromdbname() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromDBName"]], "test_dependencyfromexplictrepeatshuffles() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromExplictRepeatShuffles"]], "test_endcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_endCoverage"]], "test_endprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_endProfiling"]], "test_explicitdependency() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_explicitDependency"]], "test_failonduplicatesetting() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_failOnDuplicateSetting"]], "test_getcoveragercfile() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_getCoverageRcFile"]], "test_independentvariables() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_independentVariables"]], "test_run() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_run"]], "test_setuptaskdependence() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_setUpTaskDependence"]], "test_startcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_startCoverage"]], "test_startprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_startProfiling"]], "test_summarizedesign() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_summarizeDesign"]], "test_titlesettergetter() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_titleSetterGetter"]], "test_writeinput() (armi.cases.tests.test_cases.testextrainputwriting method)": [[58, "armi.cases.tests.test_cases.TestExtraInputWriting.test_writeInput"]], "latinhypercubemodifier (class in armi.cases.tests.test_suitebuilder)": [[59, "armi.cases.tests.test_suiteBuilder.LatinHyperCubeModifier"]], "settingmodifier (class in armi.cases.tests.test_suitebuilder)": [[59, "armi.cases.tests.test_suiteBuilder.SettingModifier"]], "testfullfactorialsuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[59, "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder"]], "testlatinhypercubesuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[59, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder"]], "testseparateeffectsbuilder (class in armi.cases.tests.test_suitebuilder)": [[59, "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder"]], "armi.cases.tests.test_suitebuilder": [[59, "module-armi.cases.tests.test_suiteBuilder"]], "test_adddegreeoffreedom() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[59, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_addDegreeOfFreedom"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testfullfactorialsuitebuilder method)": [[59, "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder.test_buildSuite"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[59, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_buildSuite"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testseparateeffectsbuilder method)": [[59, "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder.test_buildSuite"]], "test_initialize() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[59, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_initialize"]], "armicli (class in armi.cli)": [[60, "armi.cli.ArmiCLI"]], "armiparser (class in armi.cli)": [[60, "armi.cli.ArmiParser"]], "entrypointsplugin (class in armi.cli)": [[60, "armi.cli.EntryPointsPlugin"]], "armi.cli": [[60, "module-armi.cli"]], "defineentrypoints() (armi.cli.entrypointsplugin static method)": [[60, "armi.cli.EntryPointsPlugin.defineEntryPoints"]], "executecommand() (armi.cli.armicli method)": [[60, "armi.cli.ArmiCLI.executeCommand"]], "listcommands() (armi.cli.armicli method)": [[60, "armi.cli.ArmiCLI.listCommands"]], "print_help() (armi.cli.armiparser method)": [[60, "armi.cli.ArmiParser.print_help"]], "run() (armi.cli.armicli method)": [[60, "armi.cli.ArmiCLI.run"]], "showversion() (armi.cli.armicli static method)": [[60, "armi.cli.ArmiCLI.showVersion"]], "splash() (in module armi.cli)": [[60, "armi.cli.splash"]], "checkinputentrypoint (class in armi.cli.checkinputs)": [[61, "armi.cli.checkInputs.CheckInputEntryPoint"]], "expandblueprints (class in armi.cli.checkinputs)": [[61, "armi.cli.checkInputs.ExpandBlueprints"]], "addoptions() (armi.cli.checkinputs.checkinputentrypoint method)": [[61, "armi.cli.checkInputs.CheckInputEntryPoint.addOptions"]], "addoptions() (armi.cli.checkinputs.expandblueprints method)": [[61, "armi.cli.checkInputs.ExpandBlueprints.addOptions"]], "armi.cli.checkinputs": [[61, "module-armi.cli.checkInputs"]], "invoke() (armi.cli.checkinputs.checkinputentrypoint method)": [[61, "armi.cli.checkInputs.CheckInputEntryPoint.invoke"]], "invoke() (armi.cli.checkinputs.expandblueprints method)": [[61, "armi.cli.checkInputs.ExpandBlueprints.invoke"]], "name (armi.cli.checkinputs.checkinputentrypoint attribute)": [[61, "armi.cli.checkInputs.CheckInputEntryPoint.name"]], "name (armi.cli.checkinputs.expandblueprints attribute)": [[61, "armi.cli.checkInputs.ExpandBlueprints.name"]], "settingsargument (armi.cli.checkinputs.checkinputentrypoint attribute)": [[61, "armi.cli.checkInputs.CheckInputEntryPoint.settingsArgument"]], "settingsargument (armi.cli.checkinputs.expandblueprints attribute)": [[61, "armi.cli.checkInputs.ExpandBlueprints.settingsArgument"]], "splash (armi.cli.checkinputs.expandblueprints attribute)": [[61, "armi.cli.checkInputs.ExpandBlueprints.splash"]], "cleantemps (class in armi.cli.cleantemps)": [[62, "armi.cli.cleanTemps.CleanTemps"]], "armi.cli.cleantemps": [[62, "module-armi.cli.cleanTemps"]], "invoke() (armi.cli.cleantemps.cleantemps method)": [[62, "armi.cli.cleanTemps.CleanTemps.invoke"]], "name (armi.cli.cleantemps.cleantemps attribute)": [[62, "armi.cli.cleanTemps.CleanTemps.name"]], "settingsargument (armi.cli.cleantemps.cleantemps attribute)": [[62, "armi.cli.cleanTemps.CleanTemps.settingsArgument"]], "clonearmiruncommandbatch (class in armi.cli.clone)": [[63, "armi.cli.clone.CloneArmiRunCommandBatch"]], "clonearmiruncommandinteractive (class in armi.cli.clone)": [[63, "armi.cli.clone.CloneArmiRunCommandInteractive"]], "clonesuitecommand (class in armi.cli.clone)": [[63, "armi.cli.clone.CloneSuiteCommand"]], "addoptions() (armi.cli.clone.clonearmiruncommandbatch method)": [[63, "armi.cli.clone.CloneArmiRunCommandBatch.addOptions"]], "addoptions() (armi.cli.clone.clonesuitecommand method)": [[63, "armi.cli.clone.CloneSuiteCommand.addOptions"]], "armi.cli.clone": [[63, "module-armi.cli.clone"]], "invoke() (armi.cli.clone.clonearmiruncommandbatch method)": [[63, "armi.cli.clone.CloneArmiRunCommandBatch.invoke"]], "invoke() (armi.cli.clone.clonesuitecommand method)": [[63, "armi.cli.clone.CloneSuiteCommand.invoke"]], "name (armi.cli.clone.clonearmiruncommandbatch attribute)": [[63, "armi.cli.clone.CloneArmiRunCommandBatch.name"]], "name (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[63, "armi.cli.clone.CloneArmiRunCommandInteractive.name"]], "name (armi.cli.clone.clonesuitecommand attribute)": [[63, "armi.cli.clone.CloneSuiteCommand.name"]], "settingsargument (armi.cli.clone.clonearmiruncommandbatch attribute)": [[63, "armi.cli.clone.CloneArmiRunCommandBatch.settingsArgument"]], "settingsargument (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[63, "armi.cli.clone.CloneArmiRunCommandInteractive.settingsArgument"]], "settingsargument (armi.cli.clone.clonesuitecommand attribute)": [[63, "armi.cli.clone.CloneSuiteCommand.settingsArgument"]], "comparecases (class in armi.cli.comparecases)": [[64, "armi.cli.compareCases.CompareCases"]], "comparesuites (class in armi.cli.comparecases)": [[64, "armi.cli.compareCases.CompareSuites"]], "addoptions() (armi.cli.comparecases.comparecases method)": [[64, "armi.cli.compareCases.CompareCases.addOptions"]], "addoptions() (armi.cli.comparecases.comparesuites method)": [[64, "armi.cli.compareCases.CompareSuites.addOptions"]], "armi.cli.comparecases": [[64, "module-armi.cli.compareCases"]], "invoke() (armi.cli.comparecases.comparecases method)": [[64, "armi.cli.compareCases.CompareCases.invoke"]], "invoke() (armi.cli.comparecases.comparesuites method)": [[64, "armi.cli.compareCases.CompareSuites.invoke"]], "name (armi.cli.comparecases.comparecases attribute)": [[64, "armi.cli.compareCases.CompareCases.name"]], "name (armi.cli.comparecases.comparesuites attribute)": [[64, "armi.cli.compareCases.CompareSuites.name"]], "parse() (armi.cli.comparecases.comparecases method)": [[64, "armi.cli.compareCases.CompareCases.parse"]], "settingsargument (armi.cli.comparecases.comparecases attribute)": [[64, "armi.cli.compareCases.CompareCases.settingsArgument"]], "settingsargument (armi.cli.comparecases.comparesuites attribute)": [[64, "armi.cli.compareCases.CompareSuites.settingsArgument"]], "extractinputs (class in armi.cli.database)": [[65, "armi.cli.database.ExtractInputs"]], "injectinputs (class in armi.cli.database)": [[65, "armi.cli.database.InjectInputs"]], "addoptions() (armi.cli.database.extractinputs method)": [[65, "armi.cli.database.ExtractInputs.addOptions"]], "addoptions() (armi.cli.database.injectinputs method)": [[65, "armi.cli.database.InjectInputs.addOptions"]], "armi.cli.database": [[65, "module-armi.cli.database"]], "invoke() (armi.cli.database.extractinputs method)": [[65, "armi.cli.database.ExtractInputs.invoke"]], "invoke() (armi.cli.database.injectinputs method)": [[65, "armi.cli.database.InjectInputs.invoke"]], "mode (armi.cli.database.extractinputs attribute)": [[65, "armi.cli.database.ExtractInputs.mode"]], "mode (armi.cli.database.injectinputs attribute)": [[65, "armi.cli.database.InjectInputs.mode"]], "name (armi.cli.database.extractinputs attribute)": [[65, "armi.cli.database.ExtractInputs.name"]], "name (armi.cli.database.injectinputs attribute)": [[65, "armi.cli.database.InjectInputs.name"]], "parse_args() (armi.cli.database.extractinputs method)": [[65, "armi.cli.database.ExtractInputs.parse_args"]], "settingsargument (armi.cli.database.extractinputs attribute)": [[65, "armi.cli.database.ExtractInputs.settingsArgument"]], "settingsargument (armi.cli.database.injectinputs attribute)": [[65, "armi.cli.database.InjectInputs.settingsArgument"]], "entrypoint (class in armi.cli.entrypoint)": [[66, "armi.cli.entryPoint.EntryPoint"]], "addoptions() (armi.cli.entrypoint.entrypoint method)": [[66, "armi.cli.entryPoint.EntryPoint.addOptions"]], "armi.cli.entrypoint": [[66, "module-armi.cli.entryPoint"]], "createoptionfromsetting() (armi.cli.entrypoint.entrypoint method)": [[66, "armi.cli.entryPoint.EntryPoint.createOptionFromSetting"]], "description (armi.cli.entrypoint.entrypoint attribute)": [[66, "armi.cli.entryPoint.EntryPoint.description"]], "invoke() (armi.cli.entrypoint.entrypoint method)": [[66, "armi.cli.entryPoint.EntryPoint.invoke"]], "loadsettings() (in module armi.cli.entrypoint)": [[66, "armi.cli.entryPoint.loadSettings"]], "mode (armi.cli.entrypoint.entrypoint attribute)": [[66, "armi.cli.entryPoint.EntryPoint.mode"]], "name (armi.cli.entrypoint.entrypoint attribute)": [[66, "armi.cli.entryPoint.EntryPoint.name"]], "parse() (armi.cli.entrypoint.entrypoint method)": [[66, "armi.cli.entryPoint.EntryPoint.parse"]], "parse_args() (armi.cli.entrypoint.entrypoint method)": [[66, "armi.cli.entryPoint.EntryPoint.parse_args"]], "setcasetitle() (in module armi.cli.entrypoint)": [[66, "armi.cli.entryPoint.setCaseTitle"]], "setsetting() (in module armi.cli.entrypoint)": [[66, "armi.cli.entryPoint.setSetting"]], "settingsargument (armi.cli.entrypoint.entrypoint attribute)": [[66, "armi.cli.entryPoint.EntryPoint.settingsArgument"]], "splash (armi.cli.entrypoint.entrypoint attribute)": [[66, "armi.cli.entryPoint.EntryPoint.splash"]], "storebool() (in module armi.cli.entrypoint)": [[66, "armi.cli.entryPoint.storeBool"]], "gridguientrypoint (class in armi.cli.gridgui)": [[67, "armi.cli.gridGui.GridGuiEntryPoint"]], "addoptions() (armi.cli.gridgui.gridguientrypoint method)": [[67, "armi.cli.gridGui.GridGuiEntryPoint.addOptions"]], "armi.cli.gridgui": [[67, "module-armi.cli.gridGui"]], "invoke() (armi.cli.gridgui.gridguientrypoint method)": [[67, "armi.cli.gridGui.GridGuiEntryPoint.invoke"]], "name (armi.cli.gridgui.gridguientrypoint attribute)": [[67, "armi.cli.gridGui.GridGuiEntryPoint.name"]], "settingsargument (armi.cli.gridgui.gridguientrypoint attribute)": [[67, "armi.cli.gridGui.GridGuiEntryPoint.settingsArgument"]], "migrateinputs (class in armi.cli.migrateinputs)": [[68, "armi.cli.migrateInputs.MigrateInputs"]], "addoptions() (armi.cli.migrateinputs.migrateinputs method)": [[68, "armi.cli.migrateInputs.MigrateInputs.addOptions"]], "armi.cli.migrateinputs": [[68, "module-armi.cli.migrateInputs"]], "invoke() (armi.cli.migrateinputs.migrateinputs method)": [[68, "armi.cli.migrateInputs.MigrateInputs.invoke"]], "name (armi.cli.migrateinputs.migrateinputs attribute)": [[68, "armi.cli.migrateInputs.MigrateInputs.name"]], "settingsargument (armi.cli.migrateinputs.migrateinputs attribute)": [[68, "armi.cli.migrateInputs.MigrateInputs.settingsArgument"]], "modifycasesettingscommand (class in armi.cli.modify)": [[69, "armi.cli.modify.ModifyCaseSettingsCommand"]], "addoptions() (armi.cli.modify.modifycasesettingscommand method)": [[69, "armi.cli.modify.ModifyCaseSettingsCommand.addOptions"]], "armi.cli.modify": [[69, "module-armi.cli.modify"]], "invoke() (armi.cli.modify.modifycasesettingscommand method)": [[69, "armi.cli.modify.ModifyCaseSettingsCommand.invoke"]], "name (armi.cli.modify.modifycasesettingscommand attribute)": [[69, "armi.cli.modify.ModifyCaseSettingsCommand.name"]], "settingsargument (armi.cli.modify.modifycasesettingscommand attribute)": [[69, "armi.cli.modify.ModifyCaseSettingsCommand.settingsArgument"]], "reportsentrypoint (class in armi.cli.reportsentrypoint)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint"]], "addoptions() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.addOptions"]], "armi.cli.reportsentrypoint": [[70, "module-armi.cli.reportsEntryPoint"]], "createreportfromsettings() (in module armi.cli.reportsentrypoint)": [[70, "armi.cli.reportsEntryPoint.createReportFromSettings"]], "description (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.description"]], "invoke() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.invoke"]], "name (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.name"]], "report_out_dir (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.report_out_dir"]], "settingsargument (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.settingsArgument"]], "totwotuple() (armi.cli.reportsentrypoint.reportsentrypoint static method)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.toTwoTuple"]], "runentrypoint (class in armi.cli.run)": [[71, "armi.cli.run.RunEntryPoint"]], "addoptions() (armi.cli.run.runentrypoint method)": [[71, "armi.cli.run.RunEntryPoint.addOptions"]], "armi.cli.run": [[71, "module-armi.cli.run"]], "invoke() (armi.cli.run.runentrypoint method)": [[71, "armi.cli.run.RunEntryPoint.invoke"]], "name (armi.cli.run.runentrypoint attribute)": [[71, "armi.cli.run.RunEntryPoint.name"]], "settingsargument (armi.cli.run.runentrypoint attribute)": [[71, "armi.cli.run.RunEntryPoint.settingsArgument"]], "runsuitecommand (class in armi.cli.runsuite)": [[72, "armi.cli.runSuite.RunSuiteCommand"]], "addoptions() (armi.cli.runsuite.runsuitecommand method)": [[72, "armi.cli.runSuite.RunSuiteCommand.addOptions"]], "armi.cli.runsuite": [[72, "module-armi.cli.runSuite"]], "invoke() (armi.cli.runsuite.runsuitecommand method)": [[72, "armi.cli.runSuite.RunSuiteCommand.invoke"]], "name (armi.cli.runsuite.runsuitecommand attribute)": [[72, "armi.cli.runSuite.RunSuiteCommand.name"]], "settingsargument (armi.cli.runsuite.runsuitecommand attribute)": [[72, "armi.cli.runSuite.RunSuiteCommand.settingsArgument"]], "armi.cli.tests": [[73, "module-armi.cli.tests"]], "testcheckinputentrypoint (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint"]], "testclonearmiruncommandbatch (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch"]], "testclonesuitecommand (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand"]], "testcomparecases (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestCompareCases"]], "testcompareisotxslibsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint"]], "testcomparesuites (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestCompareSuites"]], "testexpandblueprints (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints"]], "testextractinputs (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestExtractInputs"]], "testinitializationentrypoints (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints"]], "testinjectinputs (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestInjectInputs"]], "testmigrateinputs (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs"]], "testmodifycasesettingscommand (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand"]], "testreportsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint"]], "testrunentrypoint (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint"]], "testrunsuitecommand (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand"]], "testvisfileentrypointcommand (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand"]], "armi.cli.tests.test_runentrypoint": [[74, "module-armi.cli.tests.test_runEntryPoint"]], "buildtestdb() (in module armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.buildTestDB"]], "test_checkinputentrypointbasics() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointBasics"]], "test_checkinputentrypointinvoke() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointInvoke"]], "test_cleanargs() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_cleanArgs"]], "test_clonearmiruncommandbatchbasics() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchBasics"]], "test_clonearmiruncommandbatchinvokemedium() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeMedium"]], "test_clonearmiruncommandbatchinvokeshort() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeShort"]], "test_clonesuitecommandbasics() (armi.cli.tests.test_runentrypoint.testclonesuitecommand method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand.test_cloneSuiteCommandBasics"]], "test_comparecasesbasics() (armi.cli.tests.test_runentrypoint.testcomparecases method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCompareCases.test_compareCasesBasics"]], "test_compareisotxslibsbasics() (armi.cli.tests.test_runentrypoint.testcompareisotxslibsentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint.test_compareIsotxsLibsBasics"]], "test_comparesuitesbasics() (armi.cli.tests.test_runentrypoint.testcomparesuites method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCompareSuites.test_compareSuitesBasics"]], "test_entrypointinitialization() (armi.cli.tests.test_runentrypoint.testinitializationentrypoints method)": [[74, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints.test_entryPointInitialization"]], "test_executecommand() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_executeCommand"]], "test_expandblueprintsbasics() (armi.cli.tests.test_runentrypoint.testexpandblueprints method)": [[74, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints.test_expandBlueprintsBasics"]], "test_extractinputsbasics() (armi.cli.tests.test_runentrypoint.testextractinputs method)": [[74, "armi.cli.tests.test_runEntryPoint.TestExtractInputs.test_extractInputsBasics"]], "test_injectinputsbasics() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[74, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsBasics"]], "test_injectinputsinvokeignore() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[74, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeIgnore"]], "test_injectinputsinvokenodata() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[74, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeNoData"]], "test_migrateinputsbasics() (armi.cli.tests.test_runentrypoint.testmigrateinputs method)": [[74, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs.test_migrateInputsBasics"]], "test_modifycasesettingscommandbasics() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[74, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandBasics"]], "test_modifycasesettingscommandinvoke() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[74, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandInvoke"]], "test_reportsentrypointbasics() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_reportsEntryPointBasics"]], "test_runcommandhelp() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runCommandHelp"]], "test_runentrypointbasics() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runEntryPointBasics"]], "test_runsuitecommandbasics() (armi.cli.tests.test_runentrypoint.testrunsuitecommand method)": [[74, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand.test_runSuiteCommandBasics"]], "test_totwotuple() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_toTwoTuple"]], "test_visfileentrypointbasics() (armi.cli.tests.test_runentrypoint.testvisfileentrypointcommand method)": [[74, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand.test_visFileEntryPointBasics"]], "testrunsuitesuite (class in armi.cli.tests.test_runsuite)": [[75, "armi.cli.tests.test_runSuite.TestRunSuiteSuite"]], "armi.cli.tests.test_runsuite": [[75, "module-armi.cli.tests.test_runSuite"]], "test_listcommand() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[75, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_listCommand"]], "test_run() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[75, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_run"]], "test_showversion() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[75, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_showVersion"]], "armi.conftest": [[76, "module-armi.conftest"]], "bootstraparmitestenv() (in module armi.conftest)": [[76, "armi.conftest.bootstrapArmiTestEnv"]], "pytest_sessionstart() (in module armi.conftest)": [[76, "armi.conftest.pytest_sessionstart"]], "batch (armi.context.mode attribute)": [[77, "armi.context.Mode.BATCH"]], "gui (armi.context.mode attribute)": [[77, "armi.context.Mode.GUI"]], "interactive (armi.context.mode attribute)": [[77, "armi.context.Mode.INTERACTIVE"]], "mode (class in armi.context)": [[77, "armi.context.Mode"]], "activatelocalfastpath() (in module armi.context)": [[77, "armi.context.activateLocalFastPath"]], "armi.context": [[77, "module-armi.context"]], "cleanallarmitempdirs() (in module armi.context)": [[77, "armi.context.cleanAllArmiTempDirs"]], "cleantempdirs() (in module armi.context)": [[77, "armi.context.cleanTempDirs"]], "disconnectallhdfdbs() (in module armi.context)": [[77, "armi.context.disconnectAllHdfDBs"]], "getfastpath() (in module armi.context)": [[77, "armi.context.getFastPath"]], "setmode() (armi.context.mode class method)": [[77, "armi.context.Mode.setMode"]], "after (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.AFTER"]], "before (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.BEFORE"]], "bookkeeping (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.BOOKKEEPING"]], "critical_control (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.CRITICAL_CONTROL"]], "cross_sections (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.CROSS_SECTIONS"]], "depletion (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.DEPLETION"]], "duplicate (armi.interfaces.interface.distribute attribute)": [[78, "armi.interfaces.Interface.Distribute.DUPLICATE"]], "flux (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.FLUX"]], "fuel_management (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.FUEL_MANAGEMENT"]], "fuel_performance (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.FUEL_PERFORMANCE"]], "inputwriter (class in armi.interfaces)": [[78, "armi.interfaces.InputWriter"]], "interface (class in armi.interfaces)": [[78, "armi.interfaces.Interface"]], "interface.distribute (class in armi.interfaces)": [[78, "armi.interfaces.Interface.Distribute"]], "interfaceinfo (class in armi.interfaces)": [[78, "armi.interfaces.InterfaceInfo"]], "new (armi.interfaces.interface.distribute attribute)": [[78, "armi.interfaces.Interface.Distribute.NEW"]], "outputreader (class in armi.interfaces)": [[78, "armi.interfaces.OutputReader"]], "postprocessing (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.POSTPROCESSING"]], "preprocessing (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.PREPROCESSING"]], "reactivity_coeffs (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.REACTIVITY_COEFFS"]], "skip (armi.interfaces.interface.distribute attribute)": [[78, "armi.interfaces.Interface.Distribute.SKIP"]], "stack_order (class in armi.interfaces)": [[78, "armi.interfaces.STACK_ORDER"]], "thermal_hydraulics (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.THERMAL_HYDRAULICS"]], "transient (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.TRANSIENT"]], "tightcoupler (class in armi.interfaces)": [[78, "armi.interfaces.TightCoupler"]], "apply() (armi.interfaces.outputreader method)": [[78, "armi.interfaces.OutputReader.apply"]], "armi.interfaces": [[78, "module-armi.interfaces"]], "attachreactor() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.attachReactor"]], "bolforce() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.bolForce"]], "detachreactor() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.detachReactor"]], "distributable() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.distributable"]], "duplicate() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.duplicate"]], "enabled() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.enabled"]], "function (armi.interfaces.interface attribute)": [[78, "armi.interfaces.Interface.function"]], "getactiveinterfaceinfo() (in module armi.interfaces)": [[78, "armi.interfaces.getActiveInterfaceInfo"]], "getdependencies() (armi.interfaces.interface class method)": [[78, "armi.interfaces.Interface.getDependencies"]], "gethistoryparams() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.getHistoryParams"]], "getinputfiles() (armi.interfaces.interface class method)": [[78, "armi.interfaces.Interface.getInputFiles"]], "getinterface() (armi.interfaces.inputwriter method)": [[78, "armi.interfaces.InputWriter.getInterface"]], "getinterface() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.getInterface"]], "getinterface() (armi.interfaces.outputreader method)": [[78, "armi.interfaces.OutputReader.getInterface"]], "getlistdimension() (armi.interfaces.tightcoupler static method)": [[78, "armi.interfaces.TightCoupler.getListDimension"]], "gettightcouplingvalue() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.getTightCouplingValue"]], "interactboc() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactBOC"]], "interactbol() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactBOL"]], "interactcoupled() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactCoupled"]], "interactdistributestate() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactDistributeState"]], "interacteoc() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactEOC"]], "interacteol() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactEOL"]], "interacterror() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactError"]], "interacteverynode() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactEveryNode"]], "interactinit() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactInit"]], "interfacecls (armi.interfaces.interfaceinfo attribute)": [[78, "armi.interfaces.InterfaceInfo.interfaceCls"]], "isconverged() (armi.interfaces.tightcoupler method)": [[78, "armi.interfaces.TightCoupler.isConverged"]], "isinterfaceactive() (in module armi.interfaces)": [[78, "armi.interfaces.isInterfaceActive"]], "isrequesteddetailpoint() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.isRequestedDetailPoint"]], "kwargs (armi.interfaces.interfaceinfo attribute)": [[78, "armi.interfaces.InterfaceInfo.kwargs"]], "name (armi.interfaces.interface attribute)": [[78, "armi.interfaces.Interface.name"]], "namecontains() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.nameContains"]], "order (armi.interfaces.interfaceinfo attribute)": [[78, "armi.interfaces.InterfaceInfo.order"]], "postdistributestate() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.postDistributeState"]], "predistributestate() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.preDistributeState"]], "read() (armi.interfaces.outputreader method)": [[78, "armi.interfaces.OutputReader.read"]], "readoutput() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.readOutput"]], "specifyinputs() (armi.interfaces.interface static method)": [[78, "armi.interfaces.Interface.specifyInputs"]], "storepreviousiterationvalue() (armi.interfaces.tightcoupler method)": [[78, "armi.interfaces.TightCoupler.storePreviousIterationValue"]], "updatephysicscouplingcontrol() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.updatePhysicsCouplingControl"]], "workeroperate() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.workerOperate"]], "write() (armi.interfaces.inputwriter method)": [[78, "armi.interfaces.InputWriter.write"]], "writeinput() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.writeInput"]], "armi.materials": [[79, "module-armi.materials"]], "importmaterialsintomodulenamespace() (in module armi.materials)": [[79, "armi.materials.importMaterialsIntoModuleNamespace"]], "iterallmaterialclassesinnamespace() (in module armi.materials)": [[79, "armi.materials.iterAllMaterialClassesInNamespace"]], "resolvematerialclassbyname() (in module armi.materials)": [[79, "armi.materials.resolveMaterialClassByName"]], "setmaterialnamespaceorder() (in module armi.materials)": [[79, "armi.materials.setMaterialNamespaceOrder"]], "air (class in armi.materials.air)": [[80, "armi.materials.air.Air"]], "armi.materials.air": [[80, "module-armi.materials.air"]], "heatcapacity() (armi.materials.air.air method)": [[80, "armi.materials.air.Air.heatCapacity"]], "propertyvalidtemperature (armi.materials.air.air attribute)": [[80, "armi.materials.air.Air.propertyValidTemperature"]], "pseudodensity() (armi.materials.air.air method)": [[80, "armi.materials.air.Air.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.air.air method)": [[80, "armi.materials.air.Air.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.air.air method)": [[80, "armi.materials.air.Air.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.air.air method)": [[80, "armi.materials.air.Air.thermalConductivity"]], "alloy200 (class in armi.materials.alloy200)": [[81, "armi.materials.alloy200.Alloy200"]], "armi.materials.alloy200": [[81, "module-armi.materials.alloy200"]], "density() (armi.materials.alloy200.alloy200 method)": [[81, "armi.materials.alloy200.Alloy200.density"]], "linearexpansion() (armi.materials.alloy200.alloy200 method)": [[81, "armi.materials.alloy200.Alloy200.linearExpansion"]], "linearexpansiontable (armi.materials.alloy200.alloy200 attribute)": [[81, "armi.materials.alloy200.Alloy200.linearExpansionTable"]], "linearexpansiontablek (armi.materials.alloy200.alloy200 attribute)": [[81, "armi.materials.alloy200.Alloy200.linearExpansionTableK"]], "modelconst (armi.materials.alloy200.alloy200 attribute)": [[81, "armi.materials.alloy200.Alloy200.modelConst"]], "propertyvalidtemperature (armi.materials.alloy200.alloy200 attribute)": [[81, "armi.materials.alloy200.Alloy200.propertyValidTemperature"]], "referencemaxpercentimpurites (armi.materials.alloy200.alloy200 attribute)": [[81, "armi.materials.alloy200.Alloy200.referenceMaxPercentImpurites"]], "references (armi.materials.alloy200.alloy200 attribute)": [[81, "armi.materials.alloy200.Alloy200.references"]], "setdefaultmassfracs() (armi.materials.alloy200.alloy200 method)": [[81, "armi.materials.alloy200.Alloy200.setDefaultMassFracs"]], "b4c (class in armi.materials.b4c)": [[82, "armi.materials.b4c.B4C"]], "applyinputparams() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.applyInputParams"]], "armi.materials.b4c": [[82, "module-armi.materials.b4c"]], "density() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.density"]], "enrichednuclide (armi.materials.b4c.b4c attribute)": [[82, "armi.materials.b4c.B4C.enrichedNuclide"]], "getmassenrichmentfromnumenrich() (armi.materials.b4c.b4c static method)": [[82, "armi.materials.b4c.B4C.getMassEnrichmentFromNumEnrich"]], "linearexpansionpercent() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.b4c.b4c attribute)": [[82, "armi.materials.b4c.B4C.propertyValidTemperature"]], "pseudodensity() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.setDefaultMassFracs"]], "setnewmassfracsfrommassenrich() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.setNewMassFracsFromMassEnrich"]], "updatetd() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.updateTD"]], "be9 (class in armi.materials.be9)": [[83, "armi.materials.be9.Be9"]], "armi.materials.be9": [[83, "module-armi.materials.be9"]], "density() (armi.materials.be9.be9 method)": [[83, "armi.materials.be9.Be9.density"]], "linearexpansionpercent() (armi.materials.be9.be9 method)": [[83, "armi.materials.be9.Be9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.be9.be9 attribute)": [[83, "armi.materials.be9.Be9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.be9.be9 method)": [[83, "armi.materials.be9.Be9.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.be9.be9 attribute)": [[83, "armi.materials.be9.Be9.thermalScatteringLaws"]], "cah2 (class in armi.materials.cah2)": [[84, "armi.materials.caH2.CaH2"]], "armi.materials.cah2": [[84, "module-armi.materials.caH2"]], "density() (armi.materials.cah2.cah2 method)": [[84, "armi.materials.caH2.CaH2.density"]], "setdefaultmassfracs() (armi.materials.cah2.cah2 method)": [[84, "armi.materials.caH2.CaH2.setDefaultMassFracs"]], "californium (class in armi.materials.californium)": [[85, "armi.materials.californium.Californium"]], "armi.materials.californium": [[85, "module-armi.materials.californium"]], "density() (armi.materials.californium.californium method)": [[85, "armi.materials.californium.Californium.density"]], "setdefaultmassfracs() (armi.materials.californium.californium method)": [[85, "armi.materials.californium.Californium.setDefaultMassFracs"]], "concrete (class in armi.materials.concrete)": [[86, "armi.materials.concrete.Concrete"]], "armi.materials.concrete": [[86, "module-armi.materials.concrete"]], "density() (armi.materials.concrete.concrete method)": [[86, "armi.materials.concrete.Concrete.density"]], "setdefaultmassfracs() (armi.materials.concrete.concrete method)": [[86, "armi.materials.concrete.Concrete.setDefaultMassFracs"]], "cu (class in armi.materials.copper)": [[87, "armi.materials.copper.Cu"]], "armi.materials.copper": [[87, "module-armi.materials.copper"]], "density() (armi.materials.copper.cu method)": [[87, "armi.materials.copper.Cu.density"]], "linearexpansionpercent() (armi.materials.copper.cu method)": [[87, "armi.materials.copper.Cu.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.copper.cu attribute)": [[87, "armi.materials.copper.Cu.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.copper.cu method)": [[87, "armi.materials.copper.Cu.setDefaultMassFracs"]], "cs (class in armi.materials.cs)": [[88, "armi.materials.cs.Cs"]], "armi.materials.cs": [[88, "module-armi.materials.cs"]], "meltingpoint() (armi.materials.cs.cs method)": [[88, "armi.materials.cs.Cs.meltingPoint"]], "pseudodensity() (armi.materials.cs.cs method)": [[88, "armi.materials.cs.Cs.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.cs.cs method)": [[88, "armi.materials.cs.Cs.setDefaultMassFracs"]], "custom (class in armi.materials.custom)": [[89, "armi.materials.custom.Custom"]], "armi.materials.custom": [[89, "module-armi.materials.custom"]], "density() (armi.materials.custom.custom method)": [[89, "armi.materials.custom.Custom.density"]], "enrichednuclide (armi.materials.custom.custom attribute)": [[89, "armi.materials.custom.Custom.enrichedNuclide"]], "pseudodensity() (armi.materials.custom.custom method)": [[89, "armi.materials.custom.Custom.pseudoDensity"]], "setmassfrac() (armi.materials.custom.custom method)": [[89, "armi.materials.custom.Custom.setMassFrac"]], "graphite (class in armi.materials.graphite)": [[90, "armi.materials.graphite.Graphite"]], "armi.materials.graphite": [[90, "module-armi.materials.graphite"]], "density() (armi.materials.graphite.graphite method)": [[90, "armi.materials.graphite.Graphite.density"]], "linearexpansionpercent() (armi.materials.graphite.graphite method)": [[90, "armi.materials.graphite.Graphite.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.graphite.graphite method)": [[90, "armi.materials.graphite.Graphite.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.graphite.graphite attribute)": [[90, "armi.materials.graphite.Graphite.thermalScatteringLaws"]], "hafnium (class in armi.materials.hafnium)": [[91, "armi.materials.hafnium.Hafnium"]], "armi.materials.hafnium": [[91, "module-armi.materials.hafnium"]], "density() (armi.materials.hafnium.hafnium method)": [[91, "armi.materials.hafnium.Hafnium.density"]], "setdefaultmassfracs() (armi.materials.hafnium.hafnium method)": [[91, "armi.materials.hafnium.Hafnium.setDefaultMassFracs"]], "hastelloyn (class in armi.materials.hastelloyn)": [[92, "armi.materials.hastelloyN.HastelloyN"]], "armi.materials.hastelloyn": [[92, "module-armi.materials.hastelloyN"]], "density() (armi.materials.hastelloyn.hastelloyn method)": [[92, "armi.materials.hastelloyN.HastelloyN.density"]], "heatcapacity() (armi.materials.hastelloyn.hastelloyn method)": [[92, "armi.materials.hastelloyN.HastelloyN.heatCapacity"]], "linearexpansionpercent() (armi.materials.hastelloyn.hastelloyn method)": [[92, "armi.materials.hastelloyN.HastelloyN.linearExpansionPercent"]], "materialintro (armi.materials.hastelloyn.hastelloyn attribute)": [[92, "armi.materials.hastelloyN.HastelloyN.materialIntro"]], "meancoefficientthermalexpansion() (armi.materials.hastelloyn.hastelloyn method)": [[92, "armi.materials.hastelloyN.HastelloyN.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.hastelloyn.hastelloyn attribute)": [[92, "armi.materials.hastelloyN.HastelloyN.propertyValidTemperature"]], "reftempk (armi.materials.hastelloyn.hastelloyn attribute)": [[92, "armi.materials.hastelloyN.HastelloyN.refTempK"]], "setdefaultmassfracs() (armi.materials.hastelloyn.hastelloyn method)": [[92, "armi.materials.hastelloyN.HastelloyN.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.hastelloyn.hastelloyn method)": [[92, "armi.materials.hastelloyN.HastelloyN.thermalConductivity"]], "ht9 (class in armi.materials.ht9)": [[93, "armi.materials.ht9.HT9"]], "armi.materials.ht9": [[93, "module-armi.materials.ht9"]], "density() (armi.materials.ht9.ht9 method)": [[93, "armi.materials.ht9.HT9.density"]], "linearexpansionpercent() (armi.materials.ht9.ht9 method)": [[93, "armi.materials.ht9.HT9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.ht9.ht9 attribute)": [[93, "armi.materials.ht9.HT9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.ht9.ht9 method)": [[93, "armi.materials.ht9.HT9.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.ht9.ht9 method)": [[93, "armi.materials.ht9.HT9.thermalConductivity"]], "inconel (class in armi.materials.inconel)": [[94, "armi.materials.inconel.Inconel"]], "inconel617 (class in armi.materials.inconel)": [[94, "armi.materials.inconel.Inconel617"]], "armi.materials.inconel": [[94, "module-armi.materials.inconel"]], "density() (armi.materials.inconel.inconel method)": [[94, "armi.materials.inconel.Inconel.density"]], "references (armi.materials.inconel.inconel attribute)": [[94, "armi.materials.inconel.Inconel.references"]], "setdefaultmassfracs() (armi.materials.inconel.inconel method)": [[94, "armi.materials.inconel.Inconel.setDefaultMassFracs"]], "inconel600 (class in armi.materials.inconel600)": [[95, "armi.materials.inconel600.Inconel600"]], "armi.materials.inconel600": [[95, "module-armi.materials.inconel600"]], "density() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.density"]], "heatcapacity() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.heatCapacity"]], "linearexpansion() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel600.inconel600 attribute)": [[95, "armi.materials.inconel600.Inconel600.propertyValidTemperature"]], "reftempk (armi.materials.inconel600.inconel600 attribute)": [[95, "armi.materials.inconel600.Inconel600.refTempK"]], "references (armi.materials.inconel600.inconel600 attribute)": [[95, "armi.materials.inconel600.Inconel600.references"]], "setdefaultmassfracs() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.thermalConductivity"]], "inconel625 (class in armi.materials.inconel625)": [[96, "armi.materials.inconel625.Inconel625"]], "armi.materials.inconel625": [[96, "module-armi.materials.inconel625"]], "density() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.density"]], "heatcapacity() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.heatCapacity"]], "linearexpansion() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel625.inconel625 attribute)": [[96, "armi.materials.inconel625.Inconel625.propertyValidTemperature"]], "reftempk (armi.materials.inconel625.inconel625 attribute)": [[96, "armi.materials.inconel625.Inconel625.refTempK"]], "references (armi.materials.inconel625.inconel625 attribute)": [[96, "armi.materials.inconel625.Inconel625.references"]], "setdefaultmassfracs() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.thermalConductivity"]], "inconel800 (class in armi.materials.inconel800)": [[97, "armi.materials.inconel800.Inconel800"]], "armi.materials.inconel800": [[97, "module-armi.materials.inconel800"]], "density() (armi.materials.inconel800.inconel800 method)": [[97, "armi.materials.inconel800.Inconel800.density"]], "linearexpansionpercent() (armi.materials.inconel800.inconel800 method)": [[97, "armi.materials.inconel800.Inconel800.linearExpansionPercent"]], "meancoefficientthermalexpansion() (armi.materials.inconel800.inconel800 method)": [[97, "armi.materials.inconel800.Inconel800.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.inconel800.inconel800 attribute)": [[97, "armi.materials.inconel800.Inconel800.propertyValidTemperature"]], "reftempk (armi.materials.inconel800.inconel800 attribute)": [[97, "armi.materials.inconel800.Inconel800.refTempK"]], "setdefaultmassfracs() (armi.materials.inconel800.inconel800 method)": [[97, "armi.materials.inconel800.Inconel800.setDefaultMassFracs"]], "inconelpe16 (class in armi.materials.inconelpe16)": [[98, "armi.materials.inconelPE16.InconelPE16"]], "armi.materials.inconelpe16": [[98, "module-armi.materials.inconelPE16"]], "density() (armi.materials.inconelpe16.inconelpe16 method)": [[98, "armi.materials.inconelPE16.InconelPE16.density"]], "references (armi.materials.inconelpe16.inconelpe16 attribute)": [[98, "armi.materials.inconelPE16.InconelPE16.references"]], "setdefaultmassfracs() (armi.materials.inconelpe16.inconelpe16 method)": [[98, "armi.materials.inconelPE16.InconelPE16.setDefaultMassFracs"]], "inconelx750 (class in armi.materials.inconelx750)": [[99, "armi.materials.inconelX750.InconelX750"]], "armi.materials.inconelx750": [[99, "module-armi.materials.inconelX750"]], "density() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.density"]], "heatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.heatCapacity"]], "linearexpansion() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconelx750.inconelx750 attribute)": [[99, "armi.materials.inconelX750.InconelX750.propertyValidTemperature"]], "reftempk (armi.materials.inconelx750.inconelx750 attribute)": [[99, "armi.materials.inconelX750.InconelX750.refTempK"]], "references (armi.materials.inconelx750.inconelx750 attribute)": [[99, "armi.materials.inconelX750.InconelX750.references"]], "setdefaultmassfracs() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.thermalConductivity"]], "lead (class in armi.materials.lead)": [[100, "armi.materials.lead.Lead"]], "armi.materials.lead": [[100, "module-armi.materials.lead"]], "heatcapacity() (armi.materials.lead.lead method)": [[100, "armi.materials.lead.Lead.heatCapacity"]], "propertyvalidtemperature (armi.materials.lead.lead attribute)": [[100, "armi.materials.lead.Lead.propertyValidTemperature"]], "pseudodensity() (armi.materials.lead.lead method)": [[100, "armi.materials.lead.Lead.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.lead.lead method)": [[100, "armi.materials.lead.Lead.setDefaultMassFracs"]], "volumetricexpansion() (armi.materials.lead.lead method)": [[100, "armi.materials.lead.Lead.volumetricExpansion"]], "leadbismuth (class in armi.materials.leadbismuth)": [[101, "armi.materials.leadBismuth.LeadBismuth"]], "armi.materials.leadbismuth": [[101, "module-armi.materials.leadBismuth"]], "dynamicvisc() (armi.materials.leadbismuth.leadbismuth method)": [[101, "armi.materials.leadBismuth.LeadBismuth.dynamicVisc"]], "heatcapacity() (armi.materials.leadbismuth.leadbismuth method)": [[101, "armi.materials.leadBismuth.LeadBismuth.heatCapacity"]], "propertyvalidtemperature (armi.materials.leadbismuth.leadbismuth attribute)": [[101, "armi.materials.leadBismuth.LeadBismuth.propertyValidTemperature"]], "pseudodensity() (armi.materials.leadbismuth.leadbismuth method)": [[101, "armi.materials.leadBismuth.LeadBismuth.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.leadbismuth.leadbismuth method)": [[101, "armi.materials.leadBismuth.LeadBismuth.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.leadbismuth.leadbismuth method)": [[101, "armi.materials.leadBismuth.LeadBismuth.thermalConductivity"]], "volumetricexpansion() (armi.materials.leadbismuth.leadbismuth method)": [[101, "armi.materials.leadBismuth.LeadBismuth.volumetricExpansion"]], "lithium (class in armi.materials.lithium)": [[102, "armi.materials.lithium.Lithium"]], "applyinputparams() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.applyInputParams"]], "armi.materials.lithium": [[102, "module-armi.materials.lithium"]], "boilingpoint() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.boilingPoint"]], "enrichednuclide (armi.materials.lithium.lithium attribute)": [[102, "armi.materials.lithium.Lithium.enrichedNuclide"]], "heatcapacity() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.heatCapacity"]], "meltingpoint() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.meltingPoint"]], "pseudodensity() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.pseudoDensity"]], "references (armi.materials.lithium.lithium attribute)": [[102, "armi.materials.lithium.Lithium.references"]], "setdefaultmassfracs() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.thermalConductivity"]], "magnesium (class in armi.materials.magnesium)": [[103, "armi.materials.magnesium.Magnesium"]], "armi.materials.magnesium": [[103, "module-armi.materials.magnesium"]], "propertyvalidtemperature (armi.materials.magnesium.magnesium attribute)": [[103, "armi.materials.magnesium.Magnesium.propertyValidTemperature"]], "pseudodensity() (armi.materials.magnesium.magnesium method)": [[103, "armi.materials.magnesium.Magnesium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.magnesium.magnesium method)": [[103, "armi.materials.magnesium.Magnesium.setDefaultMassFracs"]], "data_source (armi.materials.material.material attribute)": [[104, "armi.materials.material.Material.DATA_SOURCE"]], "fluid (class in armi.materials.material)": [[104, "armi.materials.material.Fluid"]], "fuelmaterial (class in armi.materials.material)": [[104, "armi.materials.material.FuelMaterial"]], "material (class in armi.materials.material)": [[104, "armi.materials.material.Material"]], "simplesolid (class in armi.materials.material)": [[104, "armi.materials.material.SimpleSolid"]], "adjustmassenrichment() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.adjustMassEnrichment"]], "adjustmassfrac() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.adjustMassFrac"]], "adjusttd() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.adjustTD"]], "applyinputparams() (armi.materials.material.fuelmaterial method)": [[104, "armi.materials.material.FuelMaterial.applyInputParams"]], "applyinputparams() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.applyInputParams"]], "armi.materials.material": [[104, "module-armi.materials.material"]], "backup() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.backUp"]], "checkpropertytemprange() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.checkPropertyTempRange"]], "checktemprange() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.checkTempRange"]], "class1_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[104, "armi.materials.material.FuelMaterial.class1_custom_isotopics"]], "class1_wt_frac (armi.materials.material.fuelmaterial attribute)": [[104, "armi.materials.material.FuelMaterial.class1_wt_frac"]], "class2_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[104, "armi.materials.material.FuelMaterial.class2_custom_isotopics"]], "clearcache() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.clearCache"]], "clearmassfrac() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.clearMassFrac"]], "density() (armi.materials.material.fluid method)": [[104, "armi.materials.material.Fluid.density"]], "density() (armi.materials.material.fuelmaterial method)": [[104, "armi.materials.material.FuelMaterial.density"]], "density() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.density"]], "density() (armi.materials.material.simplesolid method)": [[104, "armi.materials.material.SimpleSolid.density"]], "densitykgm3() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.densityKgM3"]], "densitytimesheatcapacity() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.densityTimesHeatCapacity"]], "duplicate() (armi.materials.material.fuelmaterial method)": [[104, "armi.materials.material.FuelMaterial.duplicate"]], "duplicate() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.duplicate"]], "enrichednuclide (armi.materials.material.material attribute)": [[104, "armi.materials.material.Material.enrichedNuclide"]], "gasporosity (armi.materials.material.material property)": [[104, "armi.materials.material.Material.gasPorosity"]], "getchildren() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getChildren"]], "getchildrenwithflags() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getChildrenWithFlags"]], "getcorrosionrate() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getCorrosionRate"]], "getmassfrac() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getMassFrac"]], "getname() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getName"]], "getnuclides() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getNuclides"]], "getproperty() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getProperty"]], "gettd() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getTD"]], "gettempchangefordensitychange() (armi.materials.material.fluid method)": [[104, "armi.materials.material.Fluid.getTempChangeForDensityChange"]], "gettempchangefordensitychange() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getTempChangeForDensityChange"]], "gettemperatureatdensity() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getTemperatureAtDensity"]], "getthermalexpansiondensityreduction() (armi.materials.material.fluid method)": [[104, "armi.materials.material.Fluid.getThermalExpansionDensityReduction"]], "getthermalexpansiondensityreduction() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getThermalExpansionDensityReduction"]], "heatcapacity() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.heatCapacity"]], "linearexpansion() (armi.materials.material.fluid method)": [[104, "armi.materials.material.Fluid.linearExpansion"]], "linearexpansion() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.linearExpansion"]], "linearexpansionfactor() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.linearExpansionFactor"]], "linearexpansionpercent() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.linearExpansionPercent"]], "linearexpansionpercent() (armi.materials.material.simplesolid method)": [[104, "armi.materials.material.SimpleSolid.linearExpansionPercent"]], "liquidporosity (armi.materials.material.material property)": [[104, "armi.materials.material.Material.liquidPorosity"]], "modelconst (armi.materials.material.material attribute)": [[104, "armi.materials.material.Material.modelConst"]], "name (armi.materials.material.material property)": [[104, "armi.materials.material.Material.name"]], "parentawaredensityredirect() (in module armi.materials.material)": [[104, "armi.materials.material.parentAwareDensityRedirect"]], "propertyvalidtemperature (armi.materials.material.material attribute)": [[104, "armi.materials.material.Material.propertyValidTemperature"]], "pseudodensity() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.pseudoDensity"]], "pseudodensity() (armi.materials.material.simplesolid method)": [[104, "armi.materials.material.SimpleSolid.pseudoDensity"]], "pseudodensitykgm3() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.pseudoDensityKgM3"]], "pufrac (armi.materials.material.fuelmaterial attribute)": [[104, "armi.materials.material.FuelMaterial.puFrac"]], "reftempk (armi.materials.material.simplesolid attribute)": [[104, "armi.materials.material.SimpleSolid.refTempK"]], "references (armi.materials.material.material attribute)": [[104, "armi.materials.material.Material.references"]], "removenucmassfrac() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.removeNucMassFrac"]], "restorebackup() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.restoreBackup"]], "setdefaultmassfracs() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.setDefaultMassFracs"]], "setmassfrac() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.setMassFrac"]], "thermalconductivity() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.thermalConductivity"]], "thermalscatteringlaws (armi.materials.material.material attribute)": [[104, "armi.materials.material.Material.thermalScatteringLaws"]], "ufrac (armi.materials.material.fuelmaterial attribute)": [[104, "armi.materials.material.FuelMaterial.uFrac"]], "volumetricexpansion() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.volumetricExpansion"]], "yieldstrength() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.yieldStrength"]], "zrfrac (armi.materials.material.fuelmaterial attribute)": [[104, "armi.materials.material.FuelMaterial.zrFrac"]], "mgo (class in armi.materials.mgo)": [[105, "armi.materials.mgO.MgO"]], "armi.materials.mgo": [[105, "module-armi.materials.mgO"]], "density() (armi.materials.mgo.mgo method)": [[105, "armi.materials.mgO.MgO.density"]], "linearexpansionpercent() (armi.materials.mgo.mgo method)": [[105, "armi.materials.mgO.MgO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.mgo.mgo attribute)": [[105, "armi.materials.mgO.MgO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.mgo.mgo method)": [[105, "armi.materials.mgO.MgO.setDefaultMassFracs"]], "armi.materials.mixture": [[106, "module-armi.materials.mixture"]], "molybdenum (class in armi.materials.molybdenum)": [[107, "armi.materials.molybdenum.Molybdenum"]], "armi.materials.molybdenum": [[107, "module-armi.materials.molybdenum"]], "density() (armi.materials.molybdenum.molybdenum method)": [[107, "armi.materials.molybdenum.Molybdenum.density"]], "setdefaultmassfracs() (armi.materials.molybdenum.molybdenum method)": [[107, "armi.materials.molybdenum.Molybdenum.setDefaultMassFracs"]], "mox (class in armi.materials.mox)": [[108, "armi.materials.mox.MOX"]], "applyinputparams() (armi.materials.mox.mox method)": [[108, "armi.materials.mox.MOX.applyInputParams"]], "armi.materials.mox": [[108, "module-armi.materials.mox"]], "enrichednuclide (armi.materials.mox.mox attribute)": [[108, "armi.materials.mox.MOX.enrichedNuclide"]], "getmassfracpuo2() (armi.materials.mox.mox method)": [[108, "armi.materials.mox.MOX.getMassFracPuO2"]], "getmolfracpuo2() (armi.materials.mox.mox method)": [[108, "armi.materials.mox.MOX.getMolFracPuO2"]], "meltingpoint() (armi.materials.mox.mox method)": [[108, "armi.materials.mox.MOX.meltingPoint"]], "setdefaultmassfracs() (armi.materials.mox.mox method)": [[108, "armi.materials.mox.MOX.setDefaultMassFracs"]], "setmassfracpuo2() (armi.materials.mox.mox method)": [[108, "armi.materials.mox.MOX.setMassFracPuO2"]], "nz (class in armi.materials.nz)": [[109, "armi.materials.nZ.NZ"]], "armi.materials.nz": [[109, "module-armi.materials.nZ"]], "density() (armi.materials.nz.nz method)": [[109, "armi.materials.nZ.NZ.density"]], "setdefaultmassfracs() (armi.materials.nz.nz method)": [[109, "armi.materials.nZ.NZ.setDefaultMassFracs"]], "potassium (class in armi.materials.potassium)": [[110, "armi.materials.potassium.Potassium"]], "armi.materials.potassium": [[110, "module-armi.materials.potassium"]], "propertyvalidtemperature (armi.materials.potassium.potassium attribute)": [[110, "armi.materials.potassium.Potassium.propertyValidTemperature"]], "pseudodensity() (armi.materials.potassium.potassium method)": [[110, "armi.materials.potassium.Potassium.pseudoDensity"]], "sc2o3 (class in armi.materials.scandiumoxide)": [[111, "armi.materials.scandiumOxide.Sc2O3"]], "armi.materials.scandiumoxide": [[111, "module-armi.materials.scandiumOxide"]], "density() (armi.materials.scandiumoxide.sc2o3 method)": [[111, "armi.materials.scandiumOxide.Sc2O3.density"]], "linearexpansionpercent() (armi.materials.scandiumoxide.sc2o3 method)": [[111, "armi.materials.scandiumOxide.Sc2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.scandiumoxide.sc2o3 attribute)": [[111, "armi.materials.scandiumOxide.Sc2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.scandiumoxide.sc2o3 method)": [[111, "armi.materials.scandiumOxide.Sc2O3.setDefaultMassFracs"]], "sic (class in armi.materials.sic)": [[112, "armi.materials.siC.SiC"]], "armi.materials.sic": [[112, "module-armi.materials.siC"]], "cumulativelinearexpansion() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.cumulativeLinearExpansion"]], "density() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.density"]], "heatcapacity() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.heatCapacity"]], "meltingpoint() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.meltingPoint"]], "propertyequation (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.propertyEquation"]], "propertynotes (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.propertyNotes"]], "propertyunits (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.propertyUnits"]], "propertyvalidtemperature (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.propertyValidTemperature"]], "pseudodensity() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.pseudoDensity"]], "reftempk (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.refTempK"]], "references (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.references"]], "setdefaultmassfracs() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.thermalConductivity"]], "thermalscatteringlaws (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.thermalScatteringLaws"]], "sodium (class in armi.materials.sodium)": [[113, "armi.materials.sodium.Sodium"]], "armi.materials.sodium": [[113, "module-armi.materials.sodium"]], "enthalpy() (armi.materials.sodium.sodium method)": [[113, "armi.materials.sodium.Sodium.enthalpy"]], "propertyvalidtemperature (armi.materials.sodium.sodium attribute)": [[113, "armi.materials.sodium.Sodium.propertyValidTemperature"]], "pseudodensity() (armi.materials.sodium.sodium method)": [[113, "armi.materials.sodium.Sodium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sodium.sodium method)": [[113, "armi.materials.sodium.Sodium.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.sodium.sodium method)": [[113, "armi.materials.sodium.Sodium.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.sodium.sodium method)": [[113, "armi.materials.sodium.Sodium.thermalConductivity"]], "nacl (class in armi.materials.sodiumchloride)": [[114, "armi.materials.sodiumChloride.NaCl"]], "armi.materials.sodiumchloride": [[114, "module-armi.materials.sodiumChloride"]], "density() (armi.materials.sodiumchloride.nacl method)": [[114, "armi.materials.sodiumChloride.NaCl.density"]], "setdefaultmassfracs() (armi.materials.sodiumchloride.nacl method)": [[114, "armi.materials.sodiumChloride.NaCl.setDefaultMassFracs"]], "sulfur (class in armi.materials.sulfur)": [[115, "armi.materials.sulfur.Sulfur"]], "applyinputparams() (armi.materials.sulfur.sulfur method)": [[115, "armi.materials.sulfur.Sulfur.applyInputParams"]], "armi.materials.sulfur": [[115, "module-armi.materials.sulfur"]], "propertyvalidtemperature (armi.materials.sulfur.sulfur attribute)": [[115, "armi.materials.sulfur.Sulfur.propertyValidTemperature"]], "pseudodensity() (armi.materials.sulfur.sulfur method)": [[115, "armi.materials.sulfur.Sulfur.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sulfur.sulfur method)": [[115, "armi.materials.sulfur.Sulfur.setDefaultMassFracs"]], "updatetd() (armi.materials.sulfur.sulfur method)": [[115, "armi.materials.sulfur.Sulfur.updateTD"]], "volumetricexpansion() (armi.materials.sulfur.sulfur method)": [[115, "armi.materials.sulfur.Sulfur.volumetricExpansion"]], "tzm (class in armi.materials.tzm)": [[116, "armi.materials.tZM.TZM"]], "armi.materials.tzm": [[116, "module-armi.materials.tZM"]], "density() (armi.materials.tzm.tzm method)": [[116, "armi.materials.tZM.TZM.density"]], "linearexpansionpercent() (armi.materials.tzm.tzm method)": [[116, "armi.materials.tZM.TZM.linearExpansionPercent"]], "percentthermalexpansion (armi.materials.tzm.tzm attribute)": [[116, "armi.materials.tZM.TZM.percentThermalExpansion"]], "propertyvalidtemperature (armi.materials.tzm.tzm attribute)": [[116, "armi.materials.tZM.TZM.propertyValidTemperature"]], "references (armi.materials.tzm.tzm attribute)": [[116, "armi.materials.tZM.TZM.references"]], "setdefaultmassfracs() (armi.materials.tzm.tzm method)": [[116, "armi.materials.tZM.TZM.setDefaultMassFracs"]], "temperaturec (armi.materials.tzm.tzm attribute)": [[116, "armi.materials.tZM.TZM.temperatureC"]], "tantalum (class in armi.materials.tantalum)": [[117, "armi.materials.tantalum.Tantalum"]], "armi.materials.tantalum": [[117, "module-armi.materials.tantalum"]], "density() (armi.materials.tantalum.tantalum method)": [[117, "armi.materials.tantalum.Tantalum.density"]], "setdefaultmassfracs() (armi.materials.tantalum.tantalum method)": [[117, "armi.materials.tantalum.Tantalum.setDefaultMassFracs"]], "armi.materials.tests": [[118, "module-armi.materials.tests"]], "materials__init__tests (class in armi.materials.tests.test__init__)": [[119, "armi.materials.tests.test__init__.Materials__init__Tests"]], "armi.materials.tests.test__init__": [[119, "module-armi.materials.tests.test__init__"]], "bettersubclasscheck() (in module armi.materials.tests.test__init__)": [[119, "armi.materials.tests.test__init__.betterSubClassCheck"]], "test_canaccessclassesfrompackage() (armi.materials.tests.test__init__.materials__init__tests method)": [[119, "armi.materials.tests.test__init__.Materials__init__Tests.test_canAccessClassesFromPackage"]], "test_packageclassesequalmoduleclasses() (armi.materials.tests.test__init__.materials__init__tests method)": [[119, "armi.materials.tests.test__init__.Materials__init__Tests.test_packageClassesEqualModuleClasses"]], "test_air (class in armi.materials.tests.test_air)": [[120, "armi.materials.tests.test_air.Test_Air"]], "armi.materials.tests.test_air": [[120, "module-armi.materials.tests.test_air"]], "test_heatcapacity() (armi.materials.tests.test_air.test_air method)": [[120, "armi.materials.tests.test_air.Test_Air.test_heatCapacity"]], "test_massfrac() (armi.materials.tests.test_air.test_air method)": [[120, "armi.materials.tests.test_air.Test_Air.test_massFrac"]], "test_pseudodensity() (armi.materials.tests.test_air.test_air method)": [[120, "armi.materials.tests.test_air.Test_Air.test_pseudoDensity"]], "test_thermalconductivity() (armi.materials.tests.test_air.test_air method)": [[120, "armi.materials.tests.test_air.Test_Air.test_thermalConductivity"]], "test_validranges() (armi.materials.tests.test_air.test_air method)": [[120, "armi.materials.tests.test_air.Test_Air.test_validRanges"]], "b4c_testcase (class in armi.materials.tests.test_b4c)": [[121, "armi.materials.tests.test_b4c.B4C_TestCase"]], "mat_class (armi.materials.tests.test_b4c.b4c_testcase attribute)": [[121, "armi.materials.tests.test_b4c.B4C_TestCase.MAT_CLASS"]], "armi.materials.tests.test_b4c": [[121, "module-armi.materials.tests.test_b4c"]], "test_propertyvalidtemperature() (armi.materials.tests.test_b4c.b4c_testcase method)": [[121, "armi.materials.tests.test_b4c.B4C_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_b4c.b4c_testcase method)": [[121, "armi.materials.tests.test_b4c.B4C_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_be9.test_be9 attribute)": [[122, "armi.materials.tests.test_be9.Test_Be9.MAT_CLASS"]], "test_be9 (class in armi.materials.tests.test_be9)": [[122, "armi.materials.tests.test_be9.Test_Be9"]], "armi.materials.tests.test_be9": [[122, "module-armi.materials.tests.test_be9"]], "test_propertyvalidtemperature() (armi.materials.tests.test_be9.test_be9 method)": [[122, "armi.materials.tests.test_be9.Test_Be9.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_be9.test_be9 method)": [[122, "armi.materials.tests.test_be9.Test_Be9.test_pseudoDensity"]], "graphite_testcase (class in armi.materials.tests.test_graphite)": [[123, "armi.materials.tests.test_graphite.Graphite_TestCase"]], "mat_class (armi.materials.tests.test_graphite.graphite_testcase attribute)": [[123, "armi.materials.tests.test_graphite.Graphite_TestCase.MAT_CLASS"]], "armi.materials.tests.test_graphite": [[123, "module-armi.materials.tests.test_graphite"]], "test_density() (armi.materials.tests.test_graphite.graphite_testcase method)": [[123, "armi.materials.tests.test_graphite.Graphite_TestCase.test_density"]], "test_linearexpansionpercent() (armi.materials.tests.test_graphite.graphite_testcase method)": [[123, "armi.materials.tests.test_graphite.Graphite_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_graphite.graphite_testcase method)": [[123, "armi.materials.tests.test_graphite.Graphite_TestCase.test_propertyValidTemperature"]], "lithium_testcase (class in armi.materials.tests.test_lithium)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase"]], "mat_class (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.MAT_CLASS"]], "armi.materials.tests.test_lithium": [[124, "module-armi.materials.tests.test_lithium"]], "defaultmassfrac (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.defaultMassFrac"]], "test_lithium_material_modifications() (armi.materials.tests.test_lithium.lithium_testcase method)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.test_Lithium_material_modifications"]], "test_boilingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.test_boilingPoint"]], "test_heatcapacity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_lithium.lithium_testcase method)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.test_pseudoDensity"]], "alloy200_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Alloy200_TestCase"]], "cah2_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.CaH2_TestCase"]], "californium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Californium_TestCase"]], "cesium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Cesium_TestCase"]], "copper_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Copper_TestCase"]], "fuelmaterial_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.FuelMaterial_TestCase"]], "hafnium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Hafnium_TestCase"]], "hastelloyn_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase"]], "inconel600_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase"]], "inconel625_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase"]], "inconelx750_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase"]], "inconel_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Inconel_TestCase"]], "leadbismuth_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase"]], "lead_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Lead_TestCase"]], "mat_class (armi.materials.tests.test_materials.alloy200_testcase attribute)": [[125, "armi.materials.tests.test_materials.Alloy200_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cah2_testcase attribute)": [[125, "armi.materials.tests.test_materials.CaH2_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.californium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Californium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cesium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Cesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.copper_testcase attribute)": [[125, "armi.materials.tests.test_materials.Copper_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hafnium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Hafnium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hastelloyn_testcase attribute)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel600_testcase attribute)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel625_testcase attribute)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconelx750_testcase attribute)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.leadbismuth_testcase attribute)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.lead_testcase attribute)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mox_testcase attribute)": [[125, "armi.materials.tests.test_materials.MOX_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesiumoxide_testcase attribute)": [[125, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Magnesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mixture_testcase attribute)": [[125, "armi.materials.tests.test_materials.Mixture_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.molybdenum_testcase attribute)": [[125, "armi.materials.tests.test_materials.Molybdenum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.nacl_testcase attribute)": [[125, "armi.materials.tests.test_materials.NaCl_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.niobiumzirconium_testcase attribute)": [[125, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.potassium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Potassium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.scandiumoxide_testcase attribute)": [[125, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sodium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sulfur_testcase attribute)": [[125, "armi.materials.tests.test_materials.Sulfur_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tzm_testcase attribute)": [[125, "armi.materials.tests.test_materials.TZM_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tantalum_testcase attribute)": [[125, "armi.materials.tests.test_materials.Tantalum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumoxide_testcase attribute)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumuraniummetal_testcase attribute)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thorium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uraniumoxide_testcase attribute)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uranium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Uranium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.void_testcase attribute)": [[125, "armi.materials.tests.test_materials.Void_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.yttriumoxide_testcase attribute)": [[125, "armi.materials.tests.test_materials.YttriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zincoxide_testcase attribute)": [[125, "armi.materials.tests.test_materials.ZincOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zr_testcase attribute)": [[125, "armi.materials.tests.test_materials.Zr_TestCase.MAT_CLASS"]], "mox_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.MOX_TestCase"]], "magnesiumoxide_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase"]], "magnesium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Magnesium_TestCase"]], "materialconstructiontests (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.MaterialConstructionTests"]], "materialfindingtests (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.MaterialFindingTests"]], "mixture_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Mixture_TestCase"]], "molybdenum_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Molybdenum_TestCase"]], "nacl_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.NaCl_TestCase"]], "niobiumzirconium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase"]], "potassium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Potassium_TestCase"]], "scandiumoxide_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.ScandiumOxide_TestCase"]], "sodium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase"]], "sulfur_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Sulfur_TestCase"]], "tzm_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.TZM_TestCase"]], "tantalum_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Tantalum_TestCase"]], "thoriumoxide_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase"]], "thoriumuraniummetal_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase"]], "thorium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase"]], "uraniumoxide_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase"]], "uranium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Uranium_TestCase"]], "void_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Void_TestCase"]], "yttriumoxide_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.YttriumOxide_TestCase"]], "zincoxide_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.ZincOxide_TestCase"]], "zr_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Zr_TestCase"]], "armi.materials.tests.test_materials": [[125, "module-armi.materials.tests.test_materials"]], "baseinput (armi.materials.tests.test_materials.fuelmaterial_testcase attribute)": [[125, "armi.materials.tests.test_materials.FuelMaterial_TestCase.baseInput"]], "loadassembly() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[125, "armi.materials.tests.test_materials.FuelMaterial_TestCase.loadAssembly"]], "test_00_applyinputparams() (armi.materials.tests.test_materials.tzm_testcase method)": [[125, "armi.materials.tests.test_materials.TZM_TestCase.test_00_applyInputParams"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_00_setDefaultMassFracs"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_01_linearExpansionPercent"]], "test_01_pseudodensity() (armi.materials.tests.test_materials.tzm_testcase method)": [[125, "armi.materials.tests.test_materials.TZM_TestCase.test_01_pseudoDensity"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_02_linearExpansion"]], "test_02_linearexpansionpercent() (armi.materials.tests.test_materials.tzm_testcase method)": [[125, "armi.materials.tests.test_materials.TZM_TestCase.test_02_linearExpansionPercent"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_03_pseudoDensity"]], "test_iconel800_linearexpansion() (armi.materials.tests.test_materials.inconel_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel_TestCase.test_Iconel800_linearExpansion"]], "test_adjustmassenrichment() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_adjustMassEnrichment"]], "test_applyinputparams() (armi.materials.tests.test_materials.mox_testcase method)": [[125, "armi.materials.tests.test_materials.MOX_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uranium_testcase method)": [[125, "armi.materials.tests.test_materials.Uranium_TestCase.test_applyInputParams"]], "test_class1class2_class1_wt_frac() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[125, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_class1_wt_frac"]], "test_class1class2_classx_custom_isotopics() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[125, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_classX_custom_isotopics"]], "test_density() (armi.materials.tests.test_materials.mox_testcase method)": [[125, "armi.materials.tests.test_materials.MOX_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.mixture_testcase method)": [[125, "armi.materials.tests.test_materials.Mixture_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.nacl_testcase method)": [[125, "armi.materials.tests.test_materials.NaCl_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.void_testcase method)": [[125, "armi.materials.tests.test_materials.Void_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_density"]], "test_densityneverchanges() (armi.materials.tests.test_materials.copper_testcase method)": [[125, "armi.materials.tests.test_materials.Copper_TestCase.test_densityNeverChanges"]], "test_densitytimesheatcapactiy() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_densityTimesHeatCapactiy"]], "test_duplicate() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_duplicate"]], "test_dynamicvisc() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_dynamicVisc"]], "test_enthalpy() (armi.materials.tests.test_materials.sodium_testcase method)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase.test_enthalpy"]], "test_findmaterial() (armi.materials.tests.test_materials.materialfindingtests method)": [[125, "armi.materials.tests.test_materials.MaterialFindingTests.test_findMaterial"]], "test_getchildren() (armi.materials.tests.test_materials.copper_testcase method)": [[125, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildren"]], "test_getchildrenwithflags() (armi.materials.tests.test_materials.copper_testcase method)": [[125, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildrenWithFlags"]], "test_getcorrosionrate() (armi.materials.tests.test_materials.californium_testcase method)": [[125, "armi.materials.tests.test_materials.Californium_TestCase.test_getCorrosionRate"]], "test_getdensityexpansion3d() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getDensityExpansion3D"]], "test_getmassfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[125, "armi.materials.tests.test_materials.MOX_TestCase.test_getMassFracPuO2"]], "test_getmeltingpoint() (armi.materials.tests.test_materials.mox_testcase method)": [[125, "armi.materials.tests.test_materials.MOX_TestCase.test_getMeltingPoint"]], "test_getmolfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[125, "armi.materials.tests.test_materials.MOX_TestCase.test_getMolFracPuO2"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_getTempChangeForDensityChange"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTempChangeForDensityChange"]], "test_gettemperatureatdensity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTemperatureAtDensity"]], "test_heatcapacity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.lead_testcase method)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_heatCapacity"]], "test_linearexpansion() (armi.materials.tests.test_materials.alloy200_testcase method)": [[125, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.mixture_testcase method)": [[125, "armi.materials.tests.test_materials.Mixture_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thorium_testcase method)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.void_testcase method)": [[125, "armi.materials.tests.test_materials.Void_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.zr_testcase method)": [[125, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansion"]], "test_linearexpansionhotter() (armi.materials.tests.test_materials.alloy200_testcase method)": [[125, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansionHotter"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.copper_testcase method)": [[125, "armi.materials.tests.test_materials.Copper_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zr_testcase method)": [[125, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansionPercent"]], "test_material_initialization() (armi.materials.tests.test_materials.materialconstructiontests method)": [[125, "armi.materials.tests.test_materials.MaterialConstructionTests.test_material_initialization"]], "test_meancoefficientthermalexpansion() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_meanCoefficientThermalExpansion"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thorium_testcase method)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_meltingPoint"]], "test_namespacing() (armi.materials.tests.test_materials.materialfindingtests method)": [[125, "armi.materials.tests.test_materials.MaterialFindingTests.test_namespacing"]], "test_nicklecontent() (armi.materials.tests.test_materials.alloy200_testcase method)": [[125, "armi.materials.tests.test_materials.Alloy200_TestCase.test_nickleContent"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitHeatCapacity"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitThermalConductivity"]], "test_porosities() (armi.materials.tests.test_materials.californium_testcase method)": [[125, "armi.materials.tests.test_materials.Californium_TestCase.test_porosities"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.alloy200_testcase method)": [[125, "armi.materials.tests.test_materials.Alloy200_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cah2_testcase method)": [[125, "armi.materials.tests.test_materials.CaH2_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.californium_testcase method)": [[125, "armi.materials.tests.test_materials.Californium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cesium_testcase method)": [[125, "armi.materials.tests.test_materials.Cesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hafnium_testcase method)": [[125, "armi.materials.tests.test_materials.Hafnium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.lead_testcase method)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesium_testcase method)": [[125, "armi.materials.tests.test_materials.Magnesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.mixture_testcase method)": [[125, "armi.materials.tests.test_materials.Mixture_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[125, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.nacl_testcase method)": [[125, "armi.materials.tests.test_materials.NaCl_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[125, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.potassium_testcase method)": [[125, "armi.materials.tests.test_materials.Potassium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sodium_testcase method)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sulfur_testcase method)": [[125, "armi.materials.tests.test_materials.Sulfur_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tzm_testcase method)": [[125, "armi.materials.tests.test_materials.TZM_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tantalum_testcase method)": [[125, "armi.materials.tests.test_materials.Tantalum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thorium_testcase method)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uranium_testcase method)": [[125, "armi.materials.tests.test_materials.Uranium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.void_testcase method)": [[125, "armi.materials.tests.test_materials.Void_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zr_testcase method)": [[125, "armi.materials.tests.test_materials.Zr_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_materials.cah2_testcase method)": [[125, "armi.materials.tests.test_materials.CaH2_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.californium_testcase method)": [[125, "armi.materials.tests.test_materials.Californium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.cesium_testcase method)": [[125, "armi.materials.tests.test_materials.Cesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.hafnium_testcase method)": [[125, "armi.materials.tests.test_materials.Hafnium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.inconel_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.lead_testcase method)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesium_testcase method)": [[125, "armi.materials.tests.test_materials.Magnesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[125, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[125, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.potassium_testcase method)": [[125, "armi.materials.tests.test_materials.Potassium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sodium_testcase method)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sulfur_testcase method)": [[125, "armi.materials.tests.test_materials.Sulfur_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.tantalum_testcase method)": [[125, "armi.materials.tests.test_materials.Tantalum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thorium_testcase method)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.void_testcase method)": [[125, "armi.materials.tests.test_materials.Void_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.zr_testcase method)": [[125, "armi.materials.tests.test_materials.Zr_TestCase.test_pseudoDensity"]], "test_removenucmassfrac() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_removeNucMassFrac"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.copper_testcase method)": [[125, "armi.materials.tests.test_materials.Copper_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.lead_testcase method)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.mixture_testcase method)": [[125, "armi.materials.tests.test_materials.Mixture_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.sulfur_testcase method)": [[125, "armi.materials.tests.test_materials.Sulfur_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.thorium_testcase method)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.test_setDefaultMassFracs"]], "test_specificvolumeliquid() (armi.materials.tests.test_materials.sodium_testcase method)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase.test_specificVolumeLiquid"]], "test_thermalconductivity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.sodium_testcase method)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thorium_testcase method)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uranium_testcase method)": [[125, "armi.materials.tests.test_materials.Uranium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.zr_testcase method)": [[125, "armi.materials.tests.test_materials.Zr_TestCase.test_thermalConductivity"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.sulfur_testcase method)": [[125, "armi.materials.tests.test_materials.Sulfur_TestCase.test_volumetricExpansion"]], "mat_class (armi.materials.tests.test_sic.test_sic attribute)": [[126, "armi.materials.tests.test_sic.Test_SiC.MAT_CLASS"]], "test_sic (class in armi.materials.tests.test_sic)": [[126, "armi.materials.tests.test_sic.Test_SiC"]], "armi.materials.tests.test_sic": [[126, "module-armi.materials.tests.test_sic"]], "test_heatcapacity() (armi.materials.tests.test_sic.test_sic method)": [[126, "armi.materials.tests.test_sic.Test_SiC.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_sic.test_sic method)": [[126, "armi.materials.tests.test_sic.Test_SiC.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sic.test_sic method)": [[126, "armi.materials.tests.test_sic.Test_SiC.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_sic.test_sic method)": [[126, "armi.materials.tests.test_sic.Test_SiC.test_pseudoDensity"]], "mat_class (armi.materials.tests.test_sulfur.sulfur_testcase attribute)": [[127, "armi.materials.tests.test_sulfur.Sulfur_TestCase.MAT_CLASS"]], "sulfur_testcase (class in armi.materials.tests.test_sulfur)": [[127, "armi.materials.tests.test_sulfur.Sulfur_TestCase"]], "armi.materials.tests.test_sulfur": [[127, "module-armi.materials.tests.test_sulfur"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[127, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_propertyValidTemperature"]], "test_sulfur_density_frac() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[127, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_sulfur_density_frac"]], "mat_class (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase attribute)": [[128, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.MAT_CLASS"]], "thoriumoxide_testcase (class in armi.materials.tests.test_thoriumoxide)": [[128, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumoxide": [[128, "module-armi.materials.tests.test_thoriumOxide"]], "test_linearexpansionpercent() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[128, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[128, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[128, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_uzr.uzr_testcase attribute)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.MAT_CLASS"]], "uzr_testcase (class in armi.materials.tests.test_uzr)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase"]], "armi.materials.tests.test_uzr": [[129, "module-armi.materials.tests.test_uZr"]], "test_td() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_TD"]], "test_cache() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_cache"]], "test_density() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_density"]], "test_densitykgm3() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_densityKgM3"]], "test_duplicate() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_duplicate"]], "test_ispicklable() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_isPicklable"]], "test_propertyvalidtemperature() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_propertyValidTemperature"]], "test_pseudodensitykgm3() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_pseudoDensityKgM3"]], "test_water (class in armi.materials.tests.test_water)": [[130, "armi.materials.tests.test_water.Test_Water"]], "armi.materials.tests.test_water": [[130, "module-armi.materials.tests.test_water"]], "test_massfrac() (armi.materials.tests.test_water.test_water method)": [[130, "armi.materials.tests.test_water.Test_Water.test_massFrac"]], "test_propertyvalidtemperature() (armi.materials.tests.test_water.test_water method)": [[130, "armi.materials.tests.test_water.Test_Water.test_propertyValidTemperature"]], "test_validatenames() (armi.materials.tests.test_water.test_water method)": [[130, "armi.materials.tests.test_water.Test_Water.test_validateNames"]], "test_water_at_boiling() (armi.materials.tests.test_water.test_water method)": [[130, "armi.materials.tests.test_water.Test_Water.test_water_at_boiling"]], "test_water_at_critcalpoint() (armi.materials.tests.test_water.test_water method)": [[130, "armi.materials.tests.test_water.Test_Water.test_water_at_critcalPoint"]], "test_water_at_freezing() (armi.materials.tests.test_water.test_water method)": [[130, "armi.materials.tests.test_water.Test_Water.test_water_at_freezing"]], "thu (class in armi.materials.thu)": [[131, "armi.materials.thU.ThU"]], "applyinputparams() (armi.materials.thu.thu method)": [[131, "armi.materials.thU.ThU.applyInputParams"]], "armi.materials.thu": [[131, "module-armi.materials.thU"]], "enrichednuclide (armi.materials.thu.thu attribute)": [[131, "armi.materials.thU.ThU.enrichedNuclide"]], "getenrichment() (armi.materials.thu.thu method)": [[131, "armi.materials.thU.ThU.getEnrichment"]], "linearexpansion() (armi.materials.thu.thu method)": [[131, "armi.materials.thU.ThU.linearExpansion"]], "meltingpoint() (armi.materials.thu.thu method)": [[131, "armi.materials.thU.ThU.meltingPoint"]], "propertyvalidtemperature (armi.materials.thu.thu attribute)": [[131, "armi.materials.thU.ThU.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thu.thu method)": [[131, "armi.materials.thU.ThU.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thu.thu method)": [[131, "armi.materials.thU.ThU.thermalConductivity"]], "thorium (class in armi.materials.thorium)": [[132, "armi.materials.thorium.Thorium"]], "armi.materials.thorium": [[132, "module-armi.materials.thorium"]], "linearexpansion() (armi.materials.thorium.thorium method)": [[132, "armi.materials.thorium.Thorium.linearExpansion"]], "meltingpoint() (armi.materials.thorium.thorium method)": [[132, "armi.materials.thorium.Thorium.meltingPoint"]], "propertyvalidtemperature (armi.materials.thorium.thorium attribute)": [[132, "armi.materials.thorium.Thorium.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thorium.thorium method)": [[132, "armi.materials.thorium.Thorium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thorium.thorium method)": [[132, "armi.materials.thorium.Thorium.thermalConductivity"]], "tho2 (class in armi.materials.thoriumoxide)": [[133, "armi.materials.thoriumOxide.ThO2"]], "thoriumoxide (class in armi.materials.thoriumoxide)": [[133, "armi.materials.thoriumOxide.ThoriumOxide"]], "applyinputparams() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.applyInputParams"]], "armi.materials.thoriumoxide": [[133, "module-armi.materials.thoriumOxide"]], "density() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.density"]], "linearexpansion() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.meltingPoint"]], "propertyvalidtemperature (armi.materials.thoriumoxide.thoriumoxide attribute)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.thermalConductivity"]], "uthzr (class in armi.materials.uthzr)": [[134, "armi.materials.uThZr.UThZr"]], "applyinputparams() (armi.materials.uthzr.uthzr method)": [[134, "armi.materials.uThZr.UThZr.applyInputParams"]], "armi.materials.uthzr": [[134, "module-armi.materials.uThZr"]], "enrichednuclide (armi.materials.uthzr.uthzr attribute)": [[134, "armi.materials.uThZr.UThZr.enrichedNuclide"]], "pseudodensity() (armi.materials.uthzr.uthzr method)": [[134, "armi.materials.uThZr.UThZr.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.uthzr.uthzr method)": [[134, "armi.materials.uThZr.UThZr.setDefaultMassFracs"]], "uzr (class in armi.materials.uzr)": [[135, "armi.materials.uZr.UZr"]], "applyinputparams() (armi.materials.uzr.uzr method)": [[135, "armi.materials.uZr.UZr.applyInputParams"]], "armi.materials.uzr": [[135, "module-armi.materials.uZr"]], "enrichednuclide (armi.materials.uzr.uzr attribute)": [[135, "armi.materials.uZr.UZr.enrichedNuclide"]], "linearexpansionpercent() (armi.materials.uzr.uzr method)": [[135, "armi.materials.uZr.UZr.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.uzr.uzr method)": [[135, "armi.materials.uZr.UZr.setDefaultMassFracs"]], "ufracdefault (armi.materials.uzr.uzr attribute)": [[135, "armi.materials.uZr.UZr.uFracDefault"]], "zrfracdefault (armi.materials.uzr.uzr attribute)": [[135, "armi.materials.uZr.UZr.zrFracDefault"]], "uranium (class in armi.materials.uranium)": [[136, "armi.materials.uranium.Uranium"]], "applyinputparams() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.applyInputParams"]], "armi.materials.uranium": [[136, "module-armi.materials.uranium"]], "density() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.density"]], "enrichednuclide (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.enrichedNuclide"]], "heatcapacity() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.heatCapacity"]], "linearexpansion() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.linearExpansion"]], "linearexpansionpercent() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.linearExpansionPercent"]], "materialintro (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.materialIntro"]], "meltingpoint() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.meltingPoint"]], "propertyequation (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.propertyEquation"]], "propertynotes (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.propertyNotes"]], "propertyrawdata (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.propertyRawData"]], "propertyunits (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.propertyUnits"]], "propertyvalidtemperature (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.propertyValidTemperature"]], "pseudodensity() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.pseudoDensity"]], "refdens (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.refDens"]], "references (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.references"]], "setdefaultmassfracs() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.thermalConductivity"]], "ea (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[137, "armi.materials.uraniumOxide.HeatCapacityConstants.Ea"]], "heatcapacityconstants (class in armi.materials.uraniumoxide)": [[137, "armi.materials.uraniumOxide.HeatCapacityConstants"]], "reference_temperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.REFERENCE_TEMPERATURE"]], "uo2 (class in armi.materials.uraniumoxide)": [[137, "armi.materials.uraniumOxide.UO2"]], "uraniumoxide (class in armi.materials.uraniumoxide)": [[137, "armi.materials.uraniumOxide.UraniumOxide"]], "applyinputparams() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.applyInputParams"]], "armi.materials.uraniumoxide": [[137, "module-armi.materials.uraniumOxide"]], "c1 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[137, "armi.materials.uraniumOxide.HeatCapacityConstants.c1"]], "c2 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[137, "armi.materials.uraniumOxide.HeatCapacityConstants.c2"]], "c3 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[137, "armi.materials.uraniumOxide.HeatCapacityConstants.c3"]], "density() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.density"]], "enrichednuclide (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.enrichedNuclide"]], "heatcapacity() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.heatCapacity"]], "heatcapacityconstants (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.heatCapacityConstants"]], "linearexpansion() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.meltingPoint"]], "propertyunits (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.propertyUnits"]], "propertyvalidtemperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.propertyValidTemperature"]], "references (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.references"]], "setdefaultmassfracs() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivity"]], "thermalconductivitytable (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTable"]], "thermalconductivitytablek (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTableK"]], "thermalscatteringlaws (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.thermalScatteringLaws"]], "theta (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[137, "armi.materials.uraniumOxide.HeatCapacityConstants.theta"]], "void (class in armi.materials.void)": [[138, "armi.materials.void.Void"]], "armi.materials.void": [[138, "module-armi.materials.void"]], "density() (armi.materials.void.void method)": [[138, "armi.materials.void.Void.density"]], "pseudodensity() (armi.materials.void.void method)": [[138, "armi.materials.void.Void.pseudoDensity"]], "alpha_0 (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.ALPHA_0"]], "density_critical_gpercubiccentimeter (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.DENSITY_CRITICAL_GPERCUBICCENTIMETER"]], "density_critical_kgpercubicmeter (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.DENSITY_CRITICAL_KGPERCUBICMETER"]], "phi_0 (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.PHI_0"]], "saturatedsteam (class in armi.materials.water)": [[139, "armi.materials.water.SaturatedSteam"]], "saturatedwater (class in armi.materials.water)": [[139, "armi.materials.water.SaturatedWater"]], "temperature_critical_k (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.TEMPERATURE_CRITICAL_K"]], "vapor_pressure_critical_mpa (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_MPA"]], "vapor_pressure_critical_pa (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_PA"]], "water (class in armi.materials.water)": [[139, "armi.materials.water.Water"]], "armi.materials.water": [[139, "module-armi.materials.water"]], "auxiliaryquantityspecificenthalpy() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.auxiliaryQuantitySpecificEnthalpy"]], "auxiliaryquantityspecificentropy() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.auxiliaryQuantitySpecificEntropy"]], "d (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.d"]], "enthalpy() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.enthalpy"]], "entropy() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.entropy"]], "pseudodensity() (armi.materials.water.saturatedsteam method)": [[139, "armi.materials.water.SaturatedSteam.pseudoDensity"]], "pseudodensity() (armi.materials.water.saturatedwater method)": [[139, "armi.materials.water.SaturatedWater.pseudoDensity"]], "pseudodensity() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.pseudoDensity"]], "references (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.references"]], "setdefaultmassfracs() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.setDefaultMassFracs"]], "tau() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.tau"]], "thermalscatteringlaws (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.thermalScatteringLaws"]], "theta() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.theta"]], "vaporpressure() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.vaporPressure"]], "vaporpressureprime() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.vaporPressurePrime"]], "y2o3 (class in armi.materials.yttriumoxide)": [[140, "armi.materials.yttriumOxide.Y2O3"]], "armi.materials.yttriumoxide": [[140, "module-armi.materials.yttriumOxide"]], "density() (armi.materials.yttriumoxide.y2o3 method)": [[140, "armi.materials.yttriumOxide.Y2O3.density"]], "linearexpansionpercent() (armi.materials.yttriumoxide.y2o3 method)": [[140, "armi.materials.yttriumOxide.Y2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.yttriumoxide.y2o3 attribute)": [[140, "armi.materials.yttriumOxide.Y2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.yttriumoxide.y2o3 method)": [[140, "armi.materials.yttriumOxide.Y2O3.setDefaultMassFracs"]], "zno (class in armi.materials.zincoxide)": [[141, "armi.materials.zincOxide.ZnO"]], "armi.materials.zincoxide": [[141, "module-armi.materials.zincOxide"]], "density() (armi.materials.zincoxide.zno method)": [[141, "armi.materials.zincOxide.ZnO.density"]], "linearexpansionpercent() (armi.materials.zincoxide.zno method)": [[141, "armi.materials.zincOxide.ZnO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.zincoxide.zno attribute)": [[141, "armi.materials.zincOxide.ZnO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.zincoxide.zno method)": [[141, "armi.materials.zincOxide.ZnO.setDefaultMassFracs"]], "zr (class in armi.materials.zr)": [[142, "armi.materials.zr.Zr"]], "armi.materials.zr": [[142, "module-armi.materials.zr"]], "density() (armi.materials.zr.zr method)": [[142, "armi.materials.zr.Zr.density"]], "linearexpansion() (armi.materials.zr.zr method)": [[142, "armi.materials.zr.Zr.linearExpansion"]], "linearexpansionpercent() (armi.materials.zr.zr method)": [[142, "armi.materials.zr.Zr.linearExpansionPercent"]], "linearexpansiontable (armi.materials.zr.zr attribute)": [[142, "armi.materials.zr.Zr.linearExpansionTable"]], "linearexpansiontablek (armi.materials.zr.zr attribute)": [[142, "armi.materials.zr.Zr.linearExpansionTableK"]], "propertyvalidtemperature (armi.materials.zr.zr attribute)": [[142, "armi.materials.zr.Zr.propertyValidTemperature"]], "reftempk (armi.materials.zr.zr attribute)": [[142, "armi.materials.zr.Zr.refTempK"]], "references (armi.materials.zr.zr attribute)": [[142, "armi.materials.zr.Zr.references"]], "setdefaultmassfracs() (armi.materials.zr.zr method)": [[142, "armi.materials.zr.Zr.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.zr.zr method)": [[142, "armi.materials.zr.Zr.thermalConductivity"]], "armi.meta": [[143, "module-armi.meta"]], "armi.migration": [[144, "module-armi.migration"]], "blueprintsmigration (class in armi.migration.base)": [[145, "armi.migration.base.BlueprintsMigration"]], "databasemigration (class in armi.migration.base)": [[145, "armi.migration.base.DatabaseMigration"]], "migration (class in armi.migration.base)": [[145, "armi.migration.base.Migration"]], "settingsmigration (class in armi.migration.base)": [[145, "armi.migration.base.SettingsMigration"]], "apply() (armi.migration.base.migration method)": [[145, "armi.migration.base.Migration.apply"]], "armi.migration.base": [[145, "module-armi.migration.base"]], "fromversion (armi.migration.base.migration attribute)": [[145, "armi.migration.base.Migration.fromVersion"]], "toversion (armi.migration.base.migration attribute)": [[145, "armi.migration.base.Migration.toVersion"]], "removecentersfromblueprints (class in armi.migration.m0_1_3)": [[146, "armi.migration.m0_1_3.RemoveCentersFromBlueprints"]], "updateelementalnuclides (class in armi.migration.m0_1_3)": [[146, "armi.migration.m0_1_3.UpdateElementalNuclides"]], "armi.migration.m0_1_3": [[146, "module-armi.migration.m0_1_3"]], "deletions (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[146, "armi.migration.m0_1_3.UpdateElementalNuclides.deletions"]], "fromversion (armi.migration.m0_1_3.removecentersfromblueprints attribute)": [[146, "armi.migration.m0_1_3.RemoveCentersFromBlueprints.fromVersion"]], "fromversion (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[146, "armi.migration.m0_1_3.UpdateElementalNuclides.fromVersion"]], "swaps (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[146, "armi.migration.m0_1_3.UpdateElementalNuclides.swaps"]], "toversion (armi.migration.m0_1_3.removecentersfromblueprints attribute)": [[146, "armi.migration.m0_1_3.RemoveCentersFromBlueprints.toVersion"]], "toversion (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[146, "armi.migration.m0_1_3.UpdateElementalNuclides.toVersion"]], "convertalphanumlocationsettingstonum (class in armi.migration.m0_1_6)": [[147, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum"]], "armi.migration.m0_1_6": [[147, "module-armi.migration.m0_1_6"]], "fromversion (armi.migration.m0_1_6.convertalphanumlocationsettingstonum attribute)": [[147, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum.fromVersion"]], "getindicesfromdif3dstylelocatorlabel() (in module armi.migration.m0_1_6)": [[147, "armi.migration.m0_1_6.getIndicesFromDIF3DStyleLocatorLabel"]], "toversion (armi.migration.m0_1_6.convertalphanumlocationsettingstonum attribute)": [[147, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum.toVersion"]], "armi.migration.tests": [[148, "module-armi.migration.tests"]], "testmigration (class in armi.migration.tests.test_m0_1_6)": [[149, "armi.migration.tests.test_m0_1_6.TestMigration"]], "armi.migration.tests.test_m0_1_6": [[149, "module-armi.migration.tests.test_m0_1_6"]], "test_locationlabelmigration() (armi.migration.tests.test_m0_1_6.testmigration method)": [[149, "armi.migration.tests.test_m0_1_6.TestMigration.test_locationLabelMigration"]], "testmigrationbases (class in armi.migration.tests.test_migration_base)": [[150, "armi.migration.tests.test_migration_base.TestMigrationBases"]], "testsettingsmigration (class in armi.migration.tests.test_migration_base)": [[150, "armi.migration.tests.test_migration_base.TestSettingsMigration"]], "armi.migration.tests.test_migration_base": [[150, "module-armi.migration.tests.test_migration_base"]], "test_basic_validation() (armi.migration.tests.test_migration_base.testmigrationbases method)": [[150, "armi.migration.tests.test_migration_base.TestMigrationBases.test_basic_validation"]], "test_loadstreamfrompath() (armi.migration.tests.test_migration_base.testsettingsmigration method)": [[150, "armi.migration.tests.test_migration_base.TestSettingsMigration.test_loadStreamFromPath"]], "distributestateaction (class in armi.mpiactions)": [[151, "armi.mpiActions.DistributeStateAction"]], "distributionaction (class in armi.mpiactions)": [[151, "armi.mpiActions.DistributionAction"]], "mpiaction (class in armi.mpiactions)": [[151, "armi.mpiActions.MpiAction"]], "mpiactionerror": [[151, "armi.mpiActions.MpiActionError"]], "armi.mpiactions": [[151, "module-armi.mpiActions"]], "broadcast() (armi.mpiactions.mpiaction method)": [[151, "armi.mpiActions.MpiAction.broadcast"]], "gather() (armi.mpiactions.mpiaction method)": [[151, "armi.mpiActions.MpiAction.gather"]], "invoke() (armi.mpiactions.mpiaction method)": [[151, "armi.mpiActions.MpiAction.invoke"]], "invokeasmaster() (armi.mpiactions.mpiaction class method)": [[151, "armi.mpiActions.MpiAction.invokeAsMaster"]], "invokehook() (armi.mpiactions.distributestateaction method)": [[151, "armi.mpiActions.DistributeStateAction.invokeHook"]], "invokehook() (armi.mpiactions.distributionaction method)": [[151, "armi.mpiActions.DistributionAction.invokeHook"]], "invokehook() (armi.mpiactions.mpiaction method)": [[151, "armi.mpiActions.MpiAction.invokeHook"]], "mpiflatten() (armi.mpiactions.mpiaction static method)": [[151, "armi.mpiActions.MpiAction.mpiFlatten"]], "mpiiter() (armi.mpiactions.mpiaction static method)": [[151, "armi.mpiActions.MpiAction.mpiIter"]], "parallel (armi.mpiactions.mpiaction property)": [[151, "armi.mpiActions.MpiAction.parallel"]], "runactions() (in module armi.mpiactions)": [[151, "armi.mpiActions.runActions"]], "runactionsinserial() (in module armi.mpiactions)": [[151, "armi.mpiActions.runActionsInSerial"]], "armi.nucdirectory": [[152, "module-armi.nucDirectory"]], "actinide (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.ACTINIDE"]], "alkaline_earth_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.ALKALINE_EARTH_METAL"]], "alkali_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.ALKALI_METAL"]], "chemicalgroup (class in armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.ChemicalGroup"]], "chemicalphase (class in armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.ChemicalPhase"]], "element (class in armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.Element"]], "gas (armi.nucdirectory.elements.chemicalphase attribute)": [[153, "armi.nucDirectory.elements.ChemicalPhase.GAS"]], "halogen (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.HALOGEN"]], "lanthanide (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.LANTHANIDE"]], "liquid (armi.nucdirectory.elements.chemicalphase attribute)": [[153, "armi.nucDirectory.elements.ChemicalPhase.LIQUID"]], "metalloid (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.METALLOID"]], "noble_gas (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.NOBLE_GAS"]], "nonmetal (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.NONMETAL"]], "post_transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.POST_TRANSITION_METAL"]], "solid (armi.nucdirectory.elements.chemicalphase attribute)": [[153, "armi.nucDirectory.elements.ChemicalPhase.SOLID"]], "transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.TRANSITION_METAL"]], "unknown (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.UNKNOWN"]], "unknown (armi.nucdirectory.elements.chemicalphase attribute)": [[153, "armi.nucDirectory.elements.ChemicalPhase.UNKNOWN"]], "addglobalelement() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.addGlobalElement"]], "append() (armi.nucdirectory.elements.element method)": [[153, "armi.nucDirectory.elements.Element.append"]], "armi.nucdirectory.elements": [[153, "module-armi.nucDirectory.elements"]], "destroyglobalelements() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.destroyGlobalElements"]], "factory() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.factory"]], "getelementz() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.getElementZ"]], "getelementsbychemicalgroup() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.getElementsByChemicalGroup"]], "getelementsbychemicalphase() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.getElementsByChemicalPhase"]], "getname() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.getName"]], "getnaturalisotopics() (armi.nucdirectory.elements.element method)": [[153, "armi.nucDirectory.elements.Element.getNaturalIsotopics"]], "getsymbol() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.getSymbol"]], "isheavymetal() (armi.nucdirectory.elements.element method)": [[153, "armi.nucDirectory.elements.Element.isHeavyMetal"]], "isnaturallyoccurring() (armi.nucdirectory.elements.element method)": [[153, "armi.nucDirectory.elements.Element.isNaturallyOccurring"]], "armi.nucdirectory.nucdir": [[154, "module-armi.nucDirectory.nucDir"]], "getatomicweight() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getAtomicWeight"]], "getelementname() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getElementName"]], "getelementsymbol() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getElementSymbol"]], "getmc2label() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getMc2Label"]], "getnaturalisotopics() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getNaturalIsotopics"]], "getnaturalmassisotopics() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getNaturalMassIsotopics"]], "getnuclide() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getNuclide"]], "getnuclidefromname() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getNuclideFromName"]], "getnuclidenames() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getNuclideNames"]], "getnuclides() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getNuclides"]], "getthresholddisplacementenergy() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getThresholdDisplacementEnergy"]], "isfissile() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.isFissile"]], "isheavymetal() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.isHeavyMetal"]], "decay (armi.nucdirectory.nuclidebases.inuclide attribute)": [[155, "armi.nucDirectory.nuclideBases.INuclide.DECAY"]], "dummynuclidebase (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.DummyNuclideBase"]], "imcnpnuclide (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.IMcnpNuclide"]], "inuclide (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.INuclide"]], "lumpnuclidebase (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.LumpNuclideBase"]], "naturalnuclidebase (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase"]], "nuclidebase (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase"]], "nuclideinterface (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface"]], "nuclidewrapper (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper"]], "spontaneous_fission (armi.nucdirectory.nuclidebases.inuclide attribute)": [[155, "armi.nucDirectory.nuclideBases.INuclide.SPONTANEOUS_FISSION"]], "transmutation (armi.nucdirectory.nuclidebases.inuclide attribute)": [[155, "armi.nucDirectory.nuclideBases.INuclide.TRANSMUTATION"]], "addglobalnuclide() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.addGlobalNuclide"]], "addnuclidebases() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.addNuclideBases"]], "armi.nucdirectory.nuclidebases": [[155, "module-armi.nucDirectory.nuclideBases"]], "changelabel() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.changeLabel"]], "destroyglobalnuclides() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.destroyGlobalNuclides"]], "factory() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.factory"]], "fissile (armi.nucdirectory.nuclidebases.inuclide attribute)": [[155, "armi.nucDirectory.nuclideBases.INuclide.fissile"]], "fromname() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.fromName"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[155, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getAAAZZZSId"]], "getdatabasename() (armi.nucdirectory.nuclidebases.inuclide method)": [[155, "armi.nucDirectory.nuclideBases.INuclide.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDatabaseName"]], "getdecay() (armi.nucdirectory.nuclidebases.inuclide method)": [[155, "armi.nucDirectory.nuclideBases.INuclide.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDecay"]], "getdepletablenuclides() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.getDepletableNuclides"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getEndfMatNum"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getEndfMatNum"]], "getisotopics() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.getIsotopics"]], "getmcc2id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc2Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc3Id"]], "getmcc3idendfbvii0() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc3IdEndfbVII0"]], "getmcc3idendfbvii0() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc3IdEndfbVII0"]], "getmcc3idendfbvii0() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc3IdEndfbVII0"]], "getmcc3idendfbvii0() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc3IdEndfbVII0"]], "getmcc3idendfbvii0() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc3IdEndfbVII0"]], "getmcc3idendfbvii0() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc3IdEndfbVII0"]], "getmcc3idendfbvii1() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc3IdEndfbVII1"]], "getmcc3idendfbvii1() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc3IdEndfbVII1"]], "getmcc3idendfbvii1() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc3IdEndfbVII1"]], "getmcc3idendfbvii1() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc3IdEndfbVII1"]], "getmcc3idendfbvii1() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc3IdEndfbVII1"]], "getmcc3idendfbvii1() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc3IdEndfbVII1"]], "getmcnpid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[155, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getMcnpId"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.inuclide method)": [[155, "armi.nucDirectory.nuclideBases.INuclide.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.getNaturalIsotopics"]], "getserpentid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getSerpentId"]], "imposeburnchain() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.imposeBurnChain"]], "initreachableactivenuclidesthroughburnchain() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.initReachableActiveNuclidesThroughBurnChain"]], "isfissile() (armi.nucdirectory.nuclidebases.inuclide method)": [[155, "armi.nucDirectory.nuclideBases.INuclide.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.isFissile"]], "isheavymetal() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.DummyNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.inuclide method)": [[155, "armi.nucDirectory.nuclideBases.INuclide.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.LumpNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.isHeavyMetal"]], "ismonoisotopicelement() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.isMonoIsotopicElement"]], "isotopes() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.isotopes"]], "name (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.name"]], "readmccnuclidedata() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.readMCCNuclideData"]], "single() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.single"]], "updatenuclidebasesforspecialcases() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.updateNuclideBasesForSpecialCases"]], "weight (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.weight"]], "where() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.where"]], "armi.nucdirectory.tests": [[156, "module-armi.nucDirectory.tests"]], "testelement (class in armi.nucdirectory.tests.test_elements)": [[157, "armi.nucDirectory.tests.test_elements.TestElement"]], "armi.nucdirectory.tests.test_elements": [[157, "module-armi.nucDirectory.tests.test_elements"]], "test_abundancesaddtoone() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_abundancesAddToOne"]], "test_element_addexistingelementfails() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addExistingElementFails"]], "test_element_addedelementappearsinelementlist() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addedElementAppearsInElementList"]], "test_element_elementbynamereturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByNameReturnsElement"]], "test_element_elementbysymbolreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementBySymbolReturnsElement"]], "test_element_elementbyzreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByZReturnsElement"]], "test_element_getnatrualisotpicsonlyretrievesabundacegt0() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"]], "test_element_isnaturallyoccurring() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_isNaturallyOccurring"]], "test_elements_elementbulkproperties() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_elements_elementBulkProperties"]], "test_isheavymetal() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_isHeavyMetal"]], "testnucdirectory (class in armi.nucdirectory.tests.test_nucdirectory)": [[158, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory"]], "armi.nucdirectory.tests.test_nucdirectory": [[158, "module-armi.nucDirectory.tests.test_nucDirectory"]], "test_getdisplacementenergy() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[158, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_getDisplacementEnergy"]], "test_nucdir_getnameforolddashednames() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[158, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNameForOldDashedNames"]], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclide() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[158, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"]], "test_nucdir_getnuclidesfromforbadname() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[158, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclidesFromForBadName"]], "testaaazzzsid (class in armi.nucdirectory.tests.test_nuclidebases)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId"]], "testnuclide (class in armi.nucdirectory.tests.test_nuclidebases)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide"]], "armi.nucdirectory.tests.test_nuclidebases": [[159, "module-armi.nucDirectory.tests.test_nuclideBases"]], "test_aaazzzsnamegenerator() (armi.nucdirectory.tests.test_nuclidebases.testaaazzzsid method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId.test_AAAZZZSNameGenerator"]], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"]], "test_naturalnuclidebase_getnatrualisotpics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclideBase_getNatrualIsotpics"]], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotopes() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"]], "test_nonmc2nuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NonMc2Nuclide"]], "test_curiedefinitionwithra226() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_curieDefinitionWithRa226"]], "test_getdecay() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getDecay"]], "test_getendfmatnum() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getEndfMatNum"]], "test_kryptondecayconstants() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_kryptonDecayConstants"]], "test_loadmcc2data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc2Data"]], "test_loadmcc3endfvii0data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc3EndfVII0Data"]], "test_loadmcc3endfvii1data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc3EndfVII1Data"]], "test_nucbase_allabundancesaddtoone() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBase_AllAbundancesAddToOne"]], "test_nucbases_alldatabasenamesareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllDatabaseNamesAreUnique"]], "test_nucbases_alllabelsareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllLabelsAreUnique"]], "test_nucbases_am242m() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Am242m"]], "test_nucbases_mc2elementals() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Mc2Elementals"]], "test_nucbases_negativezraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_NegativeZRaisesException"]], "test_nucbases_z295raisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Z295RaisesException"]], "test_nucbases_databasenamesstartwith_n() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_databaseNamesStartWith_n"]], "test_nucbases_fromnamebadnameraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_fromNameBadNameRaisesException"]], "test_nucbases_imposeburnchaindecaybulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainDecayBulkStatistics"]], "test_nucbases_imposeburnchaintransmutationbulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainTransmutationBulkStatistics"]], "test_nucbases_imposeburn_nusf() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurn_nuSF"]], "test_nucbases_isheavymetal() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_isHeavyMetal"]], "test_nucbases_labelandnamecollsionsareforsamenuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_labelAndNameCollsionsAreForSameNuclide"]], "test_nucbases_singlefailswithmultiplematches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithMultipleMatches"]], "test_nucbases_singlefailswithnomatches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithNoMatches"]], "test_nucbases_singleisprettyspecific() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleIsPrettySpecific"]], "testthermalscattering (class in armi.nucdirectory.tests.test_thermalscattering)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering"]], "armi.nucdirectory.tests.test_thermalscattering": [[160, "module-armi.nucDirectory.tests.test_thermalScattering"]], "buildblockwithtsl() (in module armi.nucdirectory.tests.test_thermalscattering)": [[160, "armi.nucDirectory.tests.test_thermalScattering.buildBlockWithTSL"]], "getnuclidethermalscatteringdata() (in module armi.nucdirectory.tests.test_thermalscattering)": [[160, "armi.nucDirectory.tests.test_thermalScattering.getNuclideThermalScatteringData"]], "test_acecompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACECompound"]], "test_aceelementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEElementInCompound"]], "test_aceisotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEIsotope"]], "test_endf8compound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Compound"]], "test_endf8elementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8ElementInCompound"]], "test_endf8isotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Isotope"]], "test_failonmultiple() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_failOnMultiple"]], "test_graphiteonreactor() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_graphiteOnReactor"]], "decaymodetests (class in armi.nucdirectory.tests.test_transmutations)": [[161, "armi.nucDirectory.tests.test_transmutations.DecayModeTests"]], "transmutationtests (class in armi.nucdirectory.tests.test_transmutations)": [[161, "armi.nucDirectory.tests.test_transmutations.TransmutationTests"]], "armi.nucdirectory.tests.test_transmutations": [[161, "module-armi.nucDirectory.tests.test_transmutations"]], "randomstring() (in module armi.nucdirectory.tests.test_transmutations)": [[161, "armi.nucDirectory.tests.test_transmutations.randomString"]], "test_decaymode_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[161, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_invalidReactionTypes"]], "test_decaymode_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[161, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_validReactionTypes"]], "test_transmutation_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[161, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_invalidReactionTypes"]], "test_transmutation_productparticle() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[161, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_productParticle"]], "test_transmutation_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[161, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_validReactionTypes"]], "thermalscattering (class in armi.nucdirectory.thermalscattering)": [[162, "armi.nucDirectory.thermalScattering.ThermalScattering"]], "armi.nucdirectory.thermalscattering": [[162, "module-armi.nucDirectory.thermalScattering"]], "factory() (in module armi.nucdirectory.thermalscattering)": [[162, "armi.nucDirectory.thermalScattering.factory"]], "getsubjectnuclidebases() (armi.nucdirectory.thermalscattering.thermalscattering method)": [[162, "armi.nucDirectory.thermalScattering.ThermalScattering.getSubjectNuclideBases"]], "decaymode (class in armi.nucdirectory.transmutations)": [[163, "armi.nucDirectory.transmutations.DecayMode"]], "transmutable (class in armi.nucdirectory.transmutations)": [[163, "armi.nucDirectory.transmutations.Transmutable"]], "transmutation (class in armi.nucdirectory.transmutations)": [[163, "armi.nucDirectory.transmutations.Transmutation"]], "armi.nucdirectory.transmutations": [[163, "module-armi.nucDirectory.transmutations"]], "getpreferredproduct() (armi.nucdirectory.transmutations.transmutable method)": [[163, "armi.nucDirectory.transmutations.Transmutable.getPreferredProduct"]], "armi.nucleardataio": [[164, "module-armi.nuclearDataIO"]], "getexpectedcompxsfilename() (in module armi.nucleardataio)": [[164, "armi.nuclearDataIO.getExpectedCOMPXSFileName"]], "getexpectedgamisofilename() (in module armi.nucleardataio)": [[164, "armi.nuclearDataIO.getExpectedGAMISOFileName"]], "getexpectedisotxsfilename() (in module armi.nucleardataio)": [[164, "armi.nuclearDataIO.getExpectedISOTXSFileName"]], "getexpectedpmatrxfilename() (in module armi.nucleardataio)": [[164, "armi.nuclearDataIO.getExpectedPMATRXFileName"]], "armi.nucleardataio.cccc": [[165, "module-armi.nuclearDataIO.cccc"]], "asciirecordreader (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader"]], "asciirecordwriter (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter"]], "binaryrecordreader (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader"]], "binaryrecordwriter (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter"]], "datacontainer (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.DataContainer"]], "implicit_int (in module armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.IMPLICIT_INT"]], "iorecord (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord"]], "stream (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream"]], "streamwithdatacontainer (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.StreamWithDataContainer"]], "armi.nucleardataio.cccc.cccc": [[166, "module-armi.nuclearDataIO.cccc.cccc"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.close"]], "count (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.count"]], "createrecord() (armi.nucleardataio.cccc.cccc.stream method)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream.createRecord"]], "getblockbandwidth() (in module armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.getBlockBandwidth"]], "maxsize (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.maxsize"]], "open() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.open"]], "readascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream.readAscii"]], "readbinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream.readBinary"]], "readwrite() (armi.nucleardataio.cccc.cccc.stream method)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream.readWrite"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwBool"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDouble"]], "rwdoublematrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDoubleMatrix"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwFloat"]], "rwimplicitlytypedmap() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwImplicitlyTypedMap"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwInt"]], "rwintmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwIntMatrix"]], "rwlist() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwList"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwLong"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwLong"]], "rwmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwMatrix"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwString"]], "writeascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream.writeAscii"]], "writebinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream.writeBinary"]], "compxsregion (class in armi.nucleardataio.cccc.compxs)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion"]], "allocatexs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.allocateXS"]], "armi.nucleardataio.cccc.compxs": [[167, "module-armi.nuclearDataIO.cccc.compxs"]], "compare() (in module armi.nucleardataio.cccc.compxs)": [[167, "armi.nuclearDataIO.cccc.compxs.compare"]], "getxs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.getXS"]], "initmetadata() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.initMetadata"]], "isfissile (armi.nucleardataio.cccc.compxs.compxsregion property)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.isFissile"]], "makescatteringmatrices() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.makeScatteringMatrices"]], "merge() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.merge"]], "dif3ddata (class in armi.nucleardataio.cccc.dif3d)": [[168, "armi.nuclearDataIO.cccc.dif3d.Dif3dData"]], "dif3dstream (class in armi.nucleardataio.cccc.dif3d)": [[168, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream"]], "armi.nucleardataio.cccc.dif3d": [[168, "module-armi.nuclearDataIO.cccc.dif3d"]], "readwrite() (armi.nucleardataio.cccc.dif3d.dif3dstream method)": [[168, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream.readWrite"]], "delayedneutrondata (class in armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.DelayedNeutronData"]], "dlayxs (class in armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs"]], "dlayxsio (class in armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO"]], "g (armi.nucleardataio.cccc.dlayxs.dlayxs property)": [[169, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.G"]], "armi.nucleardataio.cccc.dlayxs": [[169, "module-armi.nuclearDataIO.cccc.dlayxs"]], "compare() (in module armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.compare"]], "generateaveragedelayedneutronconstants() (armi.nucleardataio.cccc.dlayxs.dlayxs method)": [[169, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.generateAverageDelayedNeutronConstants"]], "readascii() (in module armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.readBinary"]], "readwrite() (armi.nucleardataio.cccc.dlayxs.dlayxsio method)": [[169, "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO.readWrite"]], "writeascii() (in module armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.writeBinary"]], "fixsrc (class in armi.nucleardataio.cccc.fixsrc)": [[170, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC"]], "armi.nucleardataio.cccc.fixsrc": [[170, "module-armi.nuclearDataIO.cccc.fixsrc"]], "readbinary() (in module armi.nucleardataio.cccc.fixsrc)": [[170, "armi.nuclearDataIO.cccc.fixsrc.readBinary"]], "readwrite() (armi.nucleardataio.cccc.fixsrc.fixsrc method)": [[170, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC.readWrite"]], "writebinary() (in module armi.nucleardataio.cccc.fixsrc)": [[170, "armi.nuclearDataIO.cccc.fixsrc.writeBinary"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.gamiso)": [[171, "armi.nuclearDataIO.cccc.gamiso.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.gamiso": [[171, "module-armi.nuclearDataIO.cccc.gamiso"]], "compare() (in module armi.nucleardataio.cccc.gamiso)": [[171, "armi.nuclearDataIO.cccc.gamiso.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.gamiso)": [[171, "armi.nuclearDataIO.cccc.gamiso.compareNuclideXS"]], "geodstdata (class in armi.nucleardataio.cccc.geodst)": [[172, "armi.nuclearDataIO.cccc.geodst.GeodstData"]], "geodststream (class in armi.nucleardataio.cccc.geodst)": [[172, "armi.nuclearDataIO.cccc.geodst.GeodstStream"]], "armi.nucleardataio.cccc.geodst": [[172, "module-armi.nuclearDataIO.cccc.geodst"]], "readwrite() (armi.nucleardataio.cccc.geodst.geodststream method)": [[172, "armi.nuclearDataIO.cccc.geodst.GeodstStream.readWrite"]], "isotxsio (class in armi.nucleardataio.cccc.isotxs)": [[173, "armi.nuclearDataIO.cccc.isotxs.IsotxsIO"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.isotxs)": [[173, "armi.nuclearDataIO.cccc.isotxs.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.isotxs": [[173, "module-armi.nuclearDataIO.cccc.isotxs"]], "compare() (in module armi.nucleardataio.cccc.isotxs)": [[173, "armi.nuclearDataIO.cccc.isotxs.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.isotxs)": [[173, "armi.nuclearDataIO.cccc.isotxs.compareNuclideXS"]], "compareset() (in module armi.nucleardataio.cccc.isotxs)": [[173, "armi.nuclearDataIO.cccc.isotxs.compareSet"]], "readwrite() (armi.nucleardataio.cccc.isotxs.isotxsio method)": [[173, "armi.nuclearDataIO.cccc.isotxs.IsotxsIO.readWrite"]], "labelsdata (class in armi.nucleardataio.cccc.labels)": [[174, "armi.nuclearDataIO.cccc.labels.LabelsData"]], "labelsstream (class in armi.nucleardataio.cccc.labels)": [[174, "armi.nuclearDataIO.cccc.labels.LabelsStream"]], "armi.nucleardataio.cccc.labels": [[174, "module-armi.nuclearDataIO.cccc.labels"]], "readwrite() (armi.nucleardataio.cccc.labels.labelsstream method)": [[174, "armi.nuclearDataIO.cccc.labels.LabelsStream.readWrite"]], "nhflux (class in armi.nucleardataio.cccc.nhflux)": [[175, "armi.nuclearDataIO.cccc.nhflux.NHFLUX"]], "nafluxstream (class in armi.nucleardataio.cccc.nhflux)": [[175, "armi.nuclearDataIO.cccc.nhflux.NafluxStream"]], "nafluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[175, "armi.nuclearDataIO.cccc.nhflux.NafluxStreamVariant"]], "nhfluxstream (class in armi.nucleardataio.cccc.nhflux)": [[175, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream"]], "nhfluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[175, "armi.nuclearDataIO.cccc.nhflux.NhfluxStreamVariant"]], "armi.nucleardataio.cccc.nhflux": [[175, "module-armi.nuclearDataIO.cccc.nhflux"]], "fluxmoments (armi.nucleardataio.cccc.nhflux.nhflux property)": [[175, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.fluxMoments"]], "getnhfluxreader() (in module armi.nucleardataio.cccc.nhflux)": [[175, "armi.nuclearDataIO.cccc.nhflux.getNhfluxReader"]], "partialcurrentshex (armi.nucleardataio.cccc.nhflux.nhflux property)": [[175, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex"]], "partialcurrentshex_ext (armi.nucleardataio.cccc.nhflux.nhflux property)": [[175, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex_ext"]], "partialcurrentsz (armi.nucleardataio.cccc.nhflux.nhflux property)": [[175, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsZ"]], "readwrite() (armi.nucleardataio.cccc.nhflux.nhfluxstream method)": [[175, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream.readWrite"]], "pmatrxio (class in armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.pmatrx": [[176, "module-armi.nuclearDataIO.cccc.pmatrx"]], "compare() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.compareNuclideXS"]], "readascii() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.readBinary"]], "readwrite() (armi.nucleardataio.cccc.pmatrx.pmatrxio method)": [[176, "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO.readWrite"]], "writeascii() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.writeBinary"]], "pwdintdata (class in armi.nucleardataio.cccc.pwdint)": [[177, "armi.nuclearDataIO.cccc.pwdint.PwdintData"]], "pwdintstream (class in armi.nucleardataio.cccc.pwdint)": [[177, "armi.nuclearDataIO.cccc.pwdint.PwdintStream"]], "armi.nucleardataio.cccc.pwdint": [[177, "module-armi.nuclearDataIO.cccc.pwdint"]], "readwrite() (armi.nucleardataio.cccc.pwdint.pwdintstream method)": [[177, "armi.nuclearDataIO.cccc.pwdint.PwdintStream.readWrite"]], "atfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[178, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream"]], "rtfluxdata (class in armi.nucleardataio.cccc.rtflux)": [[178, "armi.nuclearDataIO.cccc.rtflux.RtfluxData"]], "rtfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[178, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream"]], "armi.nucleardataio.cccc.rtflux": [[178, "module-armi.nuclearDataIO.cccc.rtflux"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.atfluxstream method)": [[178, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream.getEnergyGroupIndex"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[178, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.getEnergyGroupIndex"]], "getfdfluxreader() (in module armi.nucleardataio.cccc.rtflux)": [[178, "armi.nuclearDataIO.cccc.rtflux.getFDFluxReader"]], "groupfluxes (armi.nucleardataio.cccc.rtflux.rtfluxdata attribute)": [[178, "armi.nuclearDataIO.cccc.rtflux.RtfluxData.groupFluxes"]], "readwrite() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[178, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.readWrite"]], "converged (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[179, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGED"]], "converging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[179, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGING"]], "convergence (class in armi.nucleardataio.cccc.rzflux)": [[179, "armi.nuclearDataIO.cccc.rzflux.Convergence"]], "diverging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[179, "armi.nuclearDataIO.cccc.rzflux.Convergence.DIVERGING"]], "no_iterations (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[179, "armi.nuclearDataIO.cccc.rzflux.Convergence.NO_ITERATIONS"]], "rzfluxdata (class in armi.nucleardataio.cccc.rzflux)": [[179, "armi.nuclearDataIO.cccc.rzflux.RzfluxData"]], "rzfluxstream (class in armi.nucleardataio.cccc.rzflux)": [[179, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream"]], "armi.nucleardataio.cccc.rzflux": [[179, "module-armi.nuclearDataIO.cccc.rzflux"]], "readwrite() (armi.nucleardataio.cccc.rzflux.rzfluxstream method)": [[179, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream.readWrite"]], "armi.nucleardataio.cccc.tests": [[180, "module-armi.nuclearDataIO.cccc.tests"]], "ccccasciirecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccAsciiRecordTests"]], "ccccbinaryrecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests"]], "cccciostreamtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests"]], "armi.nucleardataio.cccc.tests.test_cccc": [[181, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "test_initwithfilemode() (armi.nucleardataio.cccc.tests.test_cccc.cccciostreamtests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests.test_initWithFileMode"]], "test_notreadinganentirerecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_notReadingAnEntireRecordRaisesException"]], "test_readingbeyondrecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_readingBeyondRecordRaisesException"]], "test_writeandreadsimplefloatrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleFloatRecord"]], "test_writeandreadsimpleintegerrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleIntegerRecord"]], "test_writeandreadsimplestringrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleStringRecord"]], "testcompxs (class in armi.nucleardataio.cccc.tests.test_compxs)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs"]], "armi.nucleardataio.cccc.tests.test_compxs": [[182, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "asciiwritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.asciiWritePath"]], "binarywritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.binaryWritePath"]], "test_asciirw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_asciiRW"]], "test_binaryrw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_binaryRW"]], "test_getcompxsfilename() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_getCOMPXSFileName"]], "test_librarydata() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_libraryData"]], "test_mergecompxslibraries() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_mergeCompxsLibraries"]], "test_regionprimaryxs() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_regionPrimaryXS"]], "test_totalscattermatrix() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_totalScatterMatrix"]], "testdif3demptyrecords (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords"]], "testdif3dsimplehexz (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz"]], "armi.nucleardataio.cccc.tests.test_dif3d": [[183, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "test__rw2drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw2DRecord"]], "test__rw3drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw3DRecord"]], "test__rw4drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw4DRecord"]], "test__rw5drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw5DRecord"]], "test__rwfile1drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFile1DRecord"]], "test__rwfileid() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFileID"]], "test_empty4and5records() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3demptyrecords method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords.test_empty4and5Records"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test_writeBinary"]], "dlayxstests (class in armi.nucleardataio.cccc.tests.test_dlayxs)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests"]], "armi.nucleardataio.cccc.tests.test_dlayxs": [[184, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "test_endfvii1decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1DecayConstants"]], "test_endfvii1neutronsperfission() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1NeutronsPerFission"]], "test_nudelay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_NuDelay"]], "test_avg() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_avg"]], "test_chi_delay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delay"]], "test_chi_delaysumsto1() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delaySumsTo1"]], "test_compare() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_compare"]], "test_decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_decayConstants"]], "test_nuclides() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_nuclides"]], "test_writebinary_mcc3() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_writeBinary_mcc3"]], "testfixsrc (class in armi.nucleardataio.cccc.tests.test_fixsrc)": [[185, "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc"]], "armi.nucleardataio.cccc.tests.test_fixsrc": [[185, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"]], "test_writereadbinaryloop() (armi.nucleardataio.cccc.tests.test_fixsrc.testfixsrc method)": [[185, "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc.test_writeReadBinaryLoop"]], "testgamiso (class in armi.nucleardataio.cccc.tests.test_gamiso)": [[186, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso"]], "armi.nucleardataio.cccc.tests.test_gamiso": [[186, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "test_adddummynuclidestolibrary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[186, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_addDummyNuclidesToLibrary"]], "test_compare() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[186, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_compare"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[186, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_writeBinary"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_geodst)": [[187, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_geodst": [[187, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[187, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[187, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_writeGeodst"]], "isotxs_merge_tests (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests"]], "testisotxs (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs"]], "armi.nucleardataio.cccc.tests.test_isotxs": [[188, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "test_getgamisofilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getGAMISOFileName"]], "test_getisotxsfilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getISOTXSFileName"]], "test_getnuclide() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getNuclide"]], "test_getscatterweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatterWeights"]], "test_getscatteringweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatteringWeights"]], "test_isotxsdetaileddata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsDetailedData"]], "test_isotxsgeneraldata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsGeneralData"]], "test_mergemccv2filesremovesthefilewidechi() (armi.nucleardataio.cccc.tests.test_isotxs.isotxs_merge_tests method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests.test_mergeMccV2FilesRemovesTheFileWideChi"]], "test_n2nisreactionbased() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_n2nIsReactionBased"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_writeBinary"]], "testlabels (class in armi.nucleardataio.cccc.tests.test_labels)": [[189, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels"]], "armi.nucleardataio.cccc.tests.test_labels": [[189, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "test_readlabelsbinary() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[189, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_readLabelsBinary"]], "test_writelabelsascii() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[189, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_writeLabelsAscii"]], "testnhflux (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux"]], "testnhfluxvariant (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant"]], "armi.nucleardataio.cccc.tests.test_nhflux": [[190, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fc"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fc"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fluxMoments"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fluxMoments"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_write"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_write"]], "test_xypartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_xyPartialCurrents"]], "test_zpartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_zPartialCurrents"]], "testpmatrx (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx"]], "testpmatrxnuclides (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides"]], "testproductionmatrix_fromwritten (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten"]], "testproductionmatrix_fromwrittenascii (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWrittenAscii"]], "armi.nucleardataio.cccc.tests.test_pmatrx": [[191, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "test_getpmatrxfilename() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_getPMATRXFileName"]], "test_nuclidedataisdifferent() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_nuclideDataIsDifferent"]], "test_pmatrxdoesnthavedoseconversionfactors() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxDoesntHaveDoseConversionFactors"]], "test_pmatrxgammaenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxGammaEnergies"]], "test_pmatrxneutronenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNeutronEnergies"]], "test_pmatrxnuclidedataaa() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAA"]], "test_pmatrxnuclidedataab() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAB"]], "test_pmatrxnuclidenames() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNuclideNames"]], "test_writtenisidenticaltooriginal() (armi.nucleardataio.cccc.tests.test_pmatrx.testproductionmatrix_fromwritten method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten.test_writtenIsIdenticalToOriginal"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_pwdint)": [[192, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_pwdint": [[192, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_writeGeodst"]], "testrtflux (class in armi.nucleardataio.cccc.tests.test_rtflux)": [[193, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux"]], "armi.nucleardataio.cccc.tests.test_rtflux": [[193, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "test_adjoint() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[193, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_adjoint"]], "test_readrtflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[193, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_readrtflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[193, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_rwAscii"]], "test_writertflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[193, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_writertflux"]], "testrzflux (class in armi.nucleardataio.cccc.tests.test_rzflux)": [[194, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux"]], "armi.nucleardataio.cccc.tests.test_rzflux": [[194, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "binaryfilesequal() (in module armi.nucleardataio.cccc.tests.test_rzflux)": [[194, "armi.nuclearDataIO.cccc.tests.test_rzflux.binaryFilesEqual"]], "test_readrzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_readRzflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_rwAscii"]], "test_writerzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_writeRzflux"]], "filemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[195, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata"]], "nuclidemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[195, "armi.nuclearDataIO.nuclearFileMetadata.NuclideMetadata"]], "nuclidexsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[195, "armi.nuclearDataIO.nuclearFileMetadata.NuclideXSMetadata"]], "regionxsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[195, "armi.nuclearDataIO.nuclearFileMetadata.RegionXSMetadata"]], "armi.nucleardataio.nuclearfilemetadata": [[195, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "update() (armi.nucleardataio.nuclearfilemetadata.filemetadata method)": [[195, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata.update"]], "armi.nucleardataio.tests": [[196, "module-armi.nuclearDataIO.tests"]], "mockblock (class in armi.nucleardataio.tests.test_xscollections)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock"]], "mockblueprints (class in armi.nucleardataio.tests.test_xscollections)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlueprints"]], "mockreactor (class in armi.nucleardataio.tests.test_xscollections)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockReactor"]], "testxscollections (class in armi.nucleardataio.tests.test_xscollections)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections"]], "armi.nucleardataio.tests.test_xscollections": [[197, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "getnuclidenumberdensities() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclideNumberDensities"]], "getnuclides() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclides"]], "getvolume() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getVolume"]], "paramcollectiontype (armi.nucleardataio.tests.test_xscollections.mockblock attribute)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.paramCollectionType"]], "r (armi.nucleardataio.tests.test_xscollections.mockblock property)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.r"]], "setnumberdensity() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.setNumberDensity"]], "test_collapsecrosssection() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_collapseCrossSection"]], "test_createmacrosfrommicros() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_createMacrosFromMicros"]], "test_generatetotalscatteringmatrix() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrix"]], "test_generatetotalscatteringmatrixwithmissingdata() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrixWithMissingData"]], "test_plotnucxs() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_plotNucXs"]], "abstracttestxslibrarymerging (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging"]], "combined_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests"]], "gamiso_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests"]], "isotxs_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests"]], "pmatrx_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests"]], "tempfilemixin (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin"]], "testgetisotxsfilesinworkingdirectory (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory"]], "testxslibrary (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary"]], "armi.nucleardataio.tests.test_xslibraries": [[198, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "assert_contains_only() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.assert_contains_only"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getErrorType"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibAAPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibAA_ABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibABPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibLumpedPath"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getReadFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getWriteFunc"]], "testfilename (armi.nucleardataio.tests.test_xslibraries.tempfilemixin property)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin.testFileName"]], "test_canpickleandunpicklegamiso() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleGAMISO"]], "test_canpickleandunpickleisotxs() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleISOTXS"]], "test_canpickleandunpicklepmatrx() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpicklePMATRX"]], "test_canremoveisotopes() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_canRemoveIsotopes"]], "test_canremoveisotopes() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.test_canRemoveIsotopes"]], "test_canwritegamisofromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteGamisoFromCombinedXSLibrary"]], "test_canwriteisotxsfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteIsotxsFromCombinedXSLibrary"]], "test_canwritepmatrxfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWritePmatrxFromCombinedXSLibrary"]], "test_cannotmergexslibwithsamenuclidenames() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_cannotMergeXSLibWithSameNuclideNames"]], "test_cannotmergexslibswithdifferentgammagroupstructures() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "test_cannotmergexslibxwithdifferentgroupstructure() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_cannotMergeXSLibxWithDifferentGroupStructure"]], "test_comparedifferentcomponentsofanxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareDifferentComponentsOfAnXSLibrary"]], "test_compareworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareWorks"]], "test_gamisolibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_gamisoLibraryAttributes"]], "test_getisotxsfileswithlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithLibrarySuffix"]], "test_getisotxsfileswithoutlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithoutLibrarySuffix"]], "test_isotxslibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_isotxsLibraryAttributes"]], "test_mergeallxslibfiles() (armi.nucleardataio.tests.test_xslibraries.combined_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests.test_mergeAllXSLibFiles"]], "test_mergeemptyxslibwithotheressentiallyclonestheother() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_mergeEmptyXSLibWithOtherEssentiallyClonesTheOther"]], "test_mergefailswithnonisotxsfiles() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeFailsWithNonIsotxsFiles"]], "test_mergetwoxslibfiles() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_mergeTwoXSLibFiles"]], "test_mergexslibrarieswithdifferentdataworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeXSLibrariesWithDifferentDataWorks"]], "test_pmatrxlibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_pmatrxLibraryAttributes"]], "nuclidetests (class in armi.nucleardataio.tests.test_xsnuclides)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests"]], "armi.nucleardataio.tests.test_xsnuclides": [[199, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "test_getmicroxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getMicroXS"]], "test_getxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getXS"]], "test_nuclide_2dxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_2dXsArrangementIsCorrect"]], "test_nuclide_createfromlabelfailsonbadname() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_createFromLabelFailsOnBadName"]], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"]], "test_nuclide_isoaadetails() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_isoaaDetails"]], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclide() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"]], "test_nuclide_newlabelsdontcausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_newLabelsDontCauseWarnings"]], "test_nuclide_nuclidebasemethodsshouldnotfail() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_nuclideBaseMethodsShouldNotFail"]], "test_nuclide_oldlabelscausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_oldLabelsCauseWarnings"]], "test_nuclide_scatterxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_scatterXsArrangementIsCorrect"]], "macroscopiccrosssectioncreator (class in armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator"]], "xscollection (class in armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection"]], "armi.nucleardataio.xscollections": [[200, "module-armi.nuclearDataIO.xsCollections"]], "clear() (armi.nucleardataio.xscollections.xscollection method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.clear"]], "collapsecrosssection() (armi.nucleardataio.xscollections.xscollection static method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.collapseCrossSection"]], "compare() (armi.nucleardataio.xscollections.xscollection method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.compare"]], "computeblockaveragechi() (in module armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.computeBlockAverageChi"]], "computecaptureenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.computeCaptureEnergyGenerationConstants"]], "computefissionenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.computeFissionEnergyGenerationConstants"]], "computegammaenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.computeGammaEnergyDepositionConstants"]], "computemacroscopicgroupconstants() (in module armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.computeMacroscopicGroupConstants"]], "computeneutronenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.computeNeutronEnergyDepositionConstants"]], "createmacrosfrommicros() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[200, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosFromMicros"]], "createmacrosonblocklist() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[200, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosOnBlocklist"]], "get() (armi.nucleardataio.xscollections.xscollection method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.get"]], "getabsorptionxs() (armi.nucleardataio.xscollections.xscollection method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.getAbsorptionXS"]], "getdefaultxs() (armi.nucleardataio.xscollections.xscollection class method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.getDefaultXs"]], "gettotalscattermatrix() (armi.nucleardataio.xscollections.xscollection method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.getTotalScatterMatrix"]], "merge() (armi.nucleardataio.xscollections.xscollection method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.merge"]], "compxslibrary (class in armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.CompxsLibrary"]], "isotxslibrary (class in armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary"]], "armi.nucleardataio.xslibraries": [[201, "module-armi.nuclearDataIO.xsLibraries"]], "compare() (in module armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.compare"]], "comparelibraryneutronenergies() (in module armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.compareLibraryNeutronEnergies"]], "comparexslibraryattribute() (in module armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.compareXSLibraryAttribute"]], "gammadoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaDoseConversionFactors"]], "gammaenergyupperbounds (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaEnergyUpperBounds"]], "get() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.get"]], "getisotxslibrariestomerge() (in module armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.getISOTXSLibrariesToMerge"]], "getnuclide() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclide"]], "getnuclides() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclides"]], "getscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getScatterWeights"]], "getsuffixfromnuclidelabel() (in module armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.getSuffixFromNuclideLabel"]], "merge() (armi.nucleardataio.xslibraries.compxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.merge"]], "merge() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.merge"]], "mergexslibrariesinworkingdirectory() (in module armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.mergeXSLibrariesInWorkingDirectory"]], "neutrondoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.neutronDoseConversionFactors"]], "nuclidelabels (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclideLabels"]], "nuclides (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclides"]], "numgroups (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroups"]], "numgroupsgamma (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroupsGamma"]], "purgefissionproducts() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.purgeFissionProducts"]], "regionlabels (armi.nucleardataio.xslibraries.compxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regionLabels"]], "regions (armi.nucleardataio.xslibraries.compxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regions"]], "resetscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.resetScatterWeights"]], "xsids (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.xsIDs"]], "xsnuclide (class in armi.nucleardataio.xsnuclides)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide"]], "armi.nucleardataio.xsnuclides": [[202, "module-armi.nuclearDataIO.xsNuclides"]], "buildnormalizedscattercolumns() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.buildNormalizedScatterColumns"]], "decays (armi.nucleardataio.xsnuclides.xsnuclide property)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.decays"]], "getmicroxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.getMicroXS"]], "getxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.getXS"]], "merge() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.merge"]], "plotcomparescattermatrix() (in module armi.nucleardataio.xsnuclides)": [[202, "armi.nuclearDataIO.xsNuclides.plotCompareScatterMatrix"]], "plotscattermatrix() (in module armi.nucleardataio.xsnuclides)": [[202, "armi.nuclearDataIO.xsNuclides.plotScatterMatrix"]], "trans (armi.nucleardataio.xsnuclides.xsnuclide property)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.trans"]], "updatebasenuclide() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.updateBaseNuclide"]], "armi.operators": [[203, "module-armi.operators"]], "factory() (in module armi.operators)": [[203, "armi.operators.factory"]], "getoperatorclassfromsettings() (in module armi.operators)": [[203, "armi.operators.getOperatorClassFromSettings"]], "operator (class in armi.operators.operator)": [[204, "armi.operators.operator.Operator"]], "addinterface() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.addInterface"]], "armi.operators.operator": [[204, "module-armi.operators.operator"]], "ateol (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.atEOL"]], "availabilityfactors (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.availabilityFactors"]], "burnsteps (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.burnSteps"]], "couplingisactive() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.couplingIsActive"]], "createinterfaces() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.createInterfaces"]], "cyclelengths (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.cycleLengths"]], "cyclenames (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.cycleNames"]], "detach() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.detach"]], "getactiveinterfaces() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.getActiveInterfaces"]], "getinterface() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.getInterface"]], "getinterfaces() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.getInterfaces"]], "initializeinterfaces() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.initializeInterfaces"]], "inspector (armi.operators.operator.operator attribute)": [[204, "armi.operators.operator.Operator.inspector"]], "interactallboc() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllBOC"]], "interactallbol() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllBOL"]], "interactallcoupled() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllCoupled"]], "interactalleoc() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllEOC"]], "interactalleol() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllEOL"]], "interactallerror() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllError"]], "interactalleverynode() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllEveryNode"]], "interactallinit() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllInit"]], "interfaceisactive() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interfaceIsActive"]], "loadstate() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.loadState"]], "maxburnsteps (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.maxBurnSteps"]], "operate() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.operate"]], "powerfractions (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.powerFractions"]], "printinterfacesummary() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.printInterfaceSummary"]], "reattach() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.reattach"]], "removeallinterfaces() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.removeAllInterfaces"]], "removeinterface() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.removeInterface"]], "setstatetodefault() (armi.operators.operator.operator static method)": [[204, "armi.operators.operator.Operator.setStateToDefault"]], "snapshotrequest() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.snapshotRequest"]], "steplengths (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.stepLengths"]], "operatormpi (class in armi.operators.operatormpi)": [[205, "armi.operators.operatorMPI.OperatorMPI"]], "armi.operators.operatormpi": [[205, "module-armi.operators.operatorMPI"]], "collapseallstderrs() (armi.operators.operatormpi.operatormpi method)": [[205, "armi.operators.operatorMPI.OperatorMPI.collapseAllStderrs"]], "operate() (armi.operators.operatormpi.operatormpi method)": [[205, "armi.operators.operatorMPI.OperatorMPI.operate"]], "workeroperate() (armi.operators.operatormpi.operatormpi method)": [[205, "armi.operators.operatorMPI.OperatorMPI.workerOperate"]], "workerquit() (armi.operators.operatormpi.operatormpi static method)": [[205, "armi.operators.operatorMPI.OperatorMPI.workerQuit"]], "equilibrium (armi.operators.runtypes.runtypes attribute)": [[206, "armi.operators.runTypes.RunTypes.EQUILIBRIUM"]], "runtypes (class in armi.operators.runtypes)": [[206, "armi.operators.runTypes.RunTypes"]], "snapshots (armi.operators.runtypes.runtypes attribute)": [[206, "armi.operators.runTypes.RunTypes.SNAPSHOTS"]], "standard (armi.operators.runtypes.runtypes attribute)": [[206, "armi.operators.runTypes.RunTypes.STANDARD"]], "armi.operators.runtypes": [[206, "module-armi.operators.runTypes"]], "armi.operators.settingsvalidation": [[207, "module-armi.operators.settingsValidation"]], "operatorsnapshots (class in armi.operators.snapshots)": [[208, "armi.operators.snapshots.OperatorSnapshots"]], "armi.operators.snapshots": [[208, "module-armi.operators.snapshots"]], "ateol (armi.operators.snapshots.operatorsnapshots property)": [[208, "armi.operators.snapshots.OperatorSnapshots.atEOL"]], "createinterfaces() (armi.operators.snapshots.operatorsnapshots method)": [[208, "armi.operators.snapshots.OperatorSnapshots.createInterfaces"]], "setstatetodefault() (armi.operators.snapshots.operatorsnapshots static method)": [[208, "armi.operators.snapshots.OperatorSnapshots.setStateToDefault"]], "armi.operators.tests": [[209, "module-armi.operators.tests"]], "testoperatorsnapshots (class in armi.operators.tests.test_operatorsnapshots)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots"]], "testoperatorsnapshotssettings (class in armi.operators.tests.test_operatorsnapshots)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorsnapshots": [[210, "module-armi.operators.tests.test_operatorSnapshots"]], "test_ateol() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_atEOL"]], "test_createinterfaces() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfaces"]], "test_createinterfacesdisabled() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfacesDisabled"]], "test_getoperatorclassfromsettings() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshotssettings method)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings.test_getOperatorClassFromSettings"]], "test_mainoperate() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_mainOperate"]], "test_setstatetodefault() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_setStateToDefault"]], "cyclessettingstests (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests"]], "interfacea (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.InterfaceA"]], "interfaceb (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.InterfaceB"]], "interfacec (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.InterfaceC"]], "operatortests (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.OperatorTests"]], "testcreateoperator (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.TestCreateOperator"]], "testinterfaceandeventheaders (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders"]], "testtightcoupling (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.TestTightCoupling"]], "armi.operators.tests.test_operators": [[211, "module-armi.operators.tests.test_operators"]], "availabilityfactorssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.availabilityFactorsSolution"]], "burnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.burnStepsSolution"]], "cyclelengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleLengthsSolution"]], "cyclenamessolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleNamesSolution"]], "dbwriteforcoupling() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.dbWriteForCoupling"]], "detailedcyclessettings (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.detailedCyclesSettings"]], "function (armi.operators.tests.test_operators.interfacea attribute)": [[211, "armi.operators.tests.test_operators.InterfaceA.function"]], "function (armi.operators.tests.test_operators.interfaceb attribute)": [[211, "armi.operators.tests.test_operators.InterfaceB.function"]], "function (armi.operators.tests.test_operators.interfacec attribute)": [[211, "armi.operators.tests.test_operators.InterfaceC.function"]], "maxburnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.maxBurnStepsSolution"]], "name (armi.operators.tests.test_operators.interfacea attribute)": [[211, "armi.operators.tests.test_operators.InterfaceA.name"]], "name (armi.operators.tests.test_operators.interfaceb attribute)": [[211, "armi.operators.tests.test_operators.InterfaceB.name"]], "name (armi.operators.tests.test_operators.interfacec attribute)": [[211, "armi.operators.tests.test_operators.InterfaceC.name"]], "powerfractionssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.powerFractionsSolution"]], "steplengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.stepLengthsSolution"]], "test_addinterfacesubclasscollision() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_addInterfaceSubclassCollision"]], "test_computetightcouplingconvergence() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_computeTightCouplingConvergence"]], "test_couplingisactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_couplingIsActive"]], "test_createoperator() (armi.operators.tests.test_operators.testcreateoperator method)": [[211, "armi.operators.tests.test_operators.TestCreateOperator.test_createOperator"]], "test_expandcycleandtimenodeargs_coupled() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[211, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Coupled"]], "test_expandcycleandtimenodeargs_cycle() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[211, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Cycle"]], "test_expandcycleandtimenodeargs_empty() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[211, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Empty"]], "test_expandcycleandtimenodeargs_everynode() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[211, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_EveryNode"]], "test_getactiveinterfaces() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_getActiveInterfaces"]], "test_getavailabilityfactors() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getBurnSteps"]], "test_getcyclelengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleNames"]], "test_getmaxburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getpowerfractions() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getPowerFractions"]], "test_getsteplengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getStepLengths"]], "test_getsteplengths() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_getStepLengths"]], "test_interfaceisactive() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_interfaceIsActive"]], "test_loadstateerror() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_loadStateError"]], "test_operatordata() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_operatorData"]], "test_orderedinterfaces() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_orderedInterfaces"]], "test_performtightcoupling_inactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_Inactive"]], "test_performtightcoupling_nowritedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_NoWriteDB"]], "test_performtightcoupling_writedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_WriteDB"]], "test_performtightcoupling_notconverged() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_notConverged"]], "test_performtightcoupling_skip() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_skip"]], "test_setstatetodefault() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_setStateToDefault"]], "test_snapshotrequest() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_snapshotRequest"]], "armi.physics": [[212, "module-armi.physics"]], "dpa_cross_sections (in module armi.physics.constants)": [[213, "armi.physics.constants.DPA_CROSS_SECTIONS"]], "armi.physics.constants": [[213, "module-armi.physics.constants"]], "defaultexecuter (class in armi.physics.executers)": [[214, "armi.physics.executers.DefaultExecuter"]], "executer (class in armi.physics.executers)": [[214, "armi.physics.executers.Executer"]], "executionoptions (class in armi.physics.executers)": [[214, "armi.physics.executers.ExecutionOptions"]], "armi.physics.executers": [[214, "module-armi.physics.executers"]], "describe() (armi.physics.executers.executionoptions method)": [[214, "armi.physics.executers.ExecutionOptions.describe"]], "fromreactor() (armi.physics.executers.executionoptions method)": [[214, "armi.physics.executers.ExecutionOptions.fromReactor"]], "fromusersettings() (armi.physics.executers.executionoptions method)": [[214, "armi.physics.executers.ExecutionOptions.fromUserSettings"]], "resolvederivedoptions() (armi.physics.executers.executionoptions method)": [[214, "armi.physics.executers.ExecutionOptions.resolveDerivedOptions"]], "run() (armi.physics.executers.defaultexecuter method)": [[214, "armi.physics.executers.DefaultExecuter.run"]], "run() (armi.physics.executers.executer method)": [[214, "armi.physics.executers.Executer.run"]], "setrundirfromcasetitle() (armi.physics.executers.executionoptions method)": [[214, "armi.physics.executers.ExecutionOptions.setRunDirFromCaseTitle"]], "writeinput() (armi.physics.executers.defaultexecuter method)": [[214, "armi.physics.executers.DefaultExecuter.writeInput"]], "fuelhandlerplugin (class in armi.physics.fuelcycle)": [[215, "armi.physics.fuelCycle.FuelHandlerPlugin"]], "armi.physics.fuelcycle": [[215, "module-armi.physics.fuelCycle"]], "definesettings() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[215, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[215, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[215, "armi.physics.fuelCycle.FuelHandlerPlugin.exposeInterfaces"]], "armi.physics.fuelcycle.assemblyrotationalgorithms": [[216, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "bureducingassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[216, "armi.physics.fuelCycle.assemblyRotationAlgorithms.buReducingAssemblyRotation"]], "simpleassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[216, "armi.physics.fuelCycle.assemblyRotationAlgorithms.simpleAssemblyRotation"]], "armi.physics.fuelcycle.fuelhandlerfactory": [[217, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "fuelhandlerfactory() (in module armi.physics.fuelcycle.fuelhandlerfactory)": [[217, "armi.physics.fuelCycle.fuelHandlerFactory.fuelHandlerFactory"]], "fuelhandlerinterface (class in armi.physics.fuelcycle.fuelhandlerinterface)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface"]], "armi.physics.fuelcycle.fuelhandlerinterface": [[218, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "interactboc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactBOC"]], "interacteoc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOC"]], "interacteol() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOL"]], "makeshufflereport() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.makeShuffleReport"]], "managefuel() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.manageFuel"]], "name (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface attribute)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.name"]], "specifyinputs() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface static method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.specifyInputs"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.workerOperate"]], "fuelhandler (class in armi.physics.fuelcycle.fuelhandlers)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler"]], "armi.physics.fuelcycle.fuelhandlers": [[219, "module-armi.physics.fuelCycle.fuelHandlers"]], "chooseswaps() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.chooseSwaps"]], "cs (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cs"]], "cycle (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cycle"]], "dischargeswap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.dischargeSwap"]], "dorepeatshuffle() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.doRepeatShuffle"]], "findassembly() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.findAssembly"]], "getfactorlist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.getFactorList"]], "isassemblyinazone() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.isAssemblyInAZone"]], "makeshufflearrows() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.makeShuffleArrows"]], "outage() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.outage"]], "prepcore() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepCore"]], "prepshufflemap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepShuffleMap"]], "processmovelist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.processMoveList"]], "r (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.r"]], "readmoves() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.readMoves"]], "repeatshufflepattern() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.repeatShufflePattern"]], "swapassemblies() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapAssemblies"]], "swapcascade() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapCascade"]], "trackchain() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.trackChain"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.workerOperate"]], "armi.physics.fuelcycle.hexassemblyfuelmgmtutils": [[220, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "buildconvergentringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[220, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildConvergentRingSchedule"]], "buildringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[220, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildRingSchedule"]], "getoptimalassemblyorientation() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[220, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.getOptimalAssemblyOrientation"]], "armi.physics.fuelcycle.settings": [[221, "module-armi.physics.fuelCycle.settings"]], "getfuelcyclesettingvalidators() (in module armi.physics.fuelcycle.settings)": [[221, "armi.physics.fuelCycle.settings.getFuelCycleSettingValidators"]], "getfuelcyclesettings() (in module armi.physics.fuelcycle.settings)": [[221, "armi.physics.fuelCycle.settings.getFuelCycleSettings"]], "armi.physics.fuelcycle.tests": [[222, "module-armi.physics.fuelCycle.tests"]], "mockfuelhandler (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.MockFuelHandler"]], "n_pins (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper attribute)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.N_PINS"]], "shuffleandrotatetesthelper (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper"]], "simplerotationtests (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.SimpleRotationTests"]], "testfuelhandlermgmttools (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools"]], "testoptimalassemblyrotation (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation"]], "armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms": [[223, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "burnupwithmaxvalue() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.burnupWithMaxValue"]], "chooseswaps() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.mockfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.MockFuelHandler.chooseSwaps"]], "comparemockedtoexpectedrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.compareMockedToExpectedRotation"]], "ensureblockhasspatialgrid() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper static method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.ensureBlockHasSpatialGrid"]], "powerwithminvalue() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.powerWithMinValue"]], "setassemblypinburnups() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.setAssemblyPinBurnups"]], "setassemblypinpowers() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.setAssemblyPinPowers"]], "test_burotationwithfreshfeed() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_buRotationWithFreshFeed"]], "test_burotationwithstationaryrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_buRotationWithStationaryRotation"]], "test_flatpowernorotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testoptimalassemblyrotation method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation.test_flatPowerNoRotation"]], "test_maxburnupatcenternorotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testoptimalassemblyrotation method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation.test_maxBurnupAtCenterNoRotation"]], "test_mismatchpinpowersandlocations() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testoptimalassemblyrotation method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation.test_mismatchPinPowersAndLocations"]], "test_noblockswithburnup() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testoptimalassemblyrotation method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation.test_noBlocksWithBurnup"]], "test_oppositerotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testoptimalassemblyrotation method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation.test_oppositeRotation"]], "test_rotateinshufflequeue() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_rotateInShuffleQueue"]], "test_simpleassemblyrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.simplerotationtests method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.SimpleRotationTests.test_simpleAssemblyRotation"]], "fuelhandlertesthelper (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.FuelHandlerTestHelper"]], "mocklatticephysicsinterface (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface"]], "mockxsgm (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM"]], "testfuelhandler (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler"]], "testfuelplugin (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin"]], "addsomedetailassemblies() (in module armi.physics.fuelcycle.tests.test_fuelhandlers)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.addSomeDetailAssemblies"]], "armi.physics.fuelcycle.tests.test_fuelhandlers": [[224, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.interactBOC"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mockxsgm method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM.interactBOC"]], "name (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface attribute)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.name"]], "runshuffling() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.runShuffling"]], "test_dischargeswap() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwap"]], "test_dischargeswapincompatiblestationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwapIncompatibleStationaryBlocks"]], "test_findbycoords() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findByCoords"]], "test_findhighbu() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findHighBu"]], "test_findinsfp() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findInSFP"]], "test_findmany() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findMany"]], "test_findwithminmax() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findWithMinMax"]], "test_getassembliesinrings() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getAssembliesInRings"]], "test_getfactorlist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getFactorList"]], "test_getparammax() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getParamMax"]], "test_interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_interactBOC"]], "test_isassemblyinazone() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_isAssemblyInAZone"]], "test_linpowbypin() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPin"]], "test_linpowbypingamma() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinGamma"]], "test_linpowbypinneutron() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinNeutron"]], "test_outage() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_outage"]], "test_outageedgecase() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_outageEdgeCase"]], "test_processmovelist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_processMoveList"]], "test_readmoves() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_readMoves"]], "test_repeatshuffles() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_repeatShuffles"]], "test_settingsarediscovered() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelplugin method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin.test_settingsAreDiscovered"]], "test_transferdifferentnumberstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferDifferentNumberStationaryBlocks"]], "test_transferincompatibleheightstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferIncompatibleHeightStationaryBlocks"]], "test_transferstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferStationaryBlocks"]], "test_transferunalignedlocationstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferUnalignedLocationStationaryBlocks"]], "test_width() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_width"]], "testhexassemmgmttools (class in armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils)": [[225, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools"]], "armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils": [[225, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "test_buildconvergentringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[225, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildConvergentRingSchedule"]], "test_buildringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[225, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildRingSchedule"]], "fuelcycleutilstests (class in armi.physics.fuelcycle.tests.test_utils)": [[226, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests"]], "n_pins (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests attribute)": [[226, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.N_PINS"]], "armi.physics.fuelcycle.tests.test_utils": [[226, "module-armi.physics.fuelCycle.tests.test_utils"]], "test_assemblyhaspinburnups() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[226, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_assemblyHasPinBurnups"]], "test_assemblyhaspinpower() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[226, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_assemblyHasPinPower"]], "test_maxburnupblock() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[226, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_maxBurnupBlock"]], "test_maxburnupblocknoblocks() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[226, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_maxBurnupBlockNoBlocks"]], "test_maxburnupblocknoburnup() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[226, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_maxBurnupBlockNoBurnup"]], "test_maxburnuplocationfromcomponents() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[226, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_maxBurnupLocationFromComponents"]], "test_maxburnuplocatormismatcheddata() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[226, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_maxBurnupLocatorMismatchedData"]], "test_maxburnuplocatorwithnoburnup() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[226, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_maxBurnupLocatorWithNoBurnup"]], "test_singlelocatorwithburnup() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[226, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_singleLocatorWithBurnup"]], "armi.physics.fuelcycle.utils": [[227, "module-armi.physics.fuelCycle.utils"]], "assemblyhasfuelpinburnup() (in module armi.physics.fuelcycle.utils)": [[227, "armi.physics.fuelCycle.utils.assemblyHasFuelPinBurnup"]], "assemblyhasfuelpinpowers() (in module armi.physics.fuelcycle.utils)": [[227, "armi.physics.fuelCycle.utils.assemblyHasFuelPinPowers"]], "maxburnupblock() (in module armi.physics.fuelcycle.utils)": [[227, "armi.physics.fuelCycle.utils.maxBurnupBlock"]], "maxburnuplocator() (in module armi.physics.fuelcycle.utils)": [[227, "armi.physics.fuelCycle.utils.maxBurnupLocator"]], "armi.physics.fuelperformance": [[228, "module-armi.physics.fuelPerformance"]], "fuelperformanceexecuter (class in armi.physics.fuelperformance.executers)": [[229, "armi.physics.fuelPerformance.executers.FuelPerformanceExecuter"]], "fuelperformanceoptions (class in armi.physics.fuelperformance.executers)": [[229, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions"]], "armi.physics.fuelperformance.executers": [[229, "module-armi.physics.fuelPerformance.executers"]], "fromreactor() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[229, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromReactor"]], "fromusersettings() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[229, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromUserSettings"]], "armi.physics.fuelperformance.parameters": [[230, "module-armi.physics.fuelPerformance.parameters"]], "getfuelperformanceparameterdefinitions() (in module armi.physics.fuelperformance.parameters)": [[230, "armi.physics.fuelPerformance.parameters.getFuelPerformanceParameterDefinitions"]], "fuelperformanceplugin (class in armi.physics.fuelperformance.plugin)": [[231, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin"]], "armi.physics.fuelperformance.plugin": [[231, "module-armi.physics.fuelPerformance.plugin"]], "defineparameters() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[231, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineParameters"]], "definesettings() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[231, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[231, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[231, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.exposeInterfaces"]], "armi.physics.fuelperformance.settings": [[232, "module-armi.physics.fuelPerformance.settings"]], "definesettings() (in module armi.physics.fuelperformance.settings)": [[232, "armi.physics.fuelPerformance.settings.defineSettings"]], "definevalidators() (in module armi.physics.fuelperformance.settings)": [[232, "armi.physics.fuelPerformance.settings.defineValidators"]], "armi.physics.fuelperformance.tests": [[233, "module-armi.physics.fuelPerformance.tests"]], "testfuelperformanceoptions (class in armi.physics.fuelperformance.tests.test_executers)": [[234, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions"]], "armi.physics.fuelperformance.tests.test_executers": [[234, "module-armi.physics.fuelPerformance.tests.test_executers"]], "test_fuelperformanceoptions() (armi.physics.fuelperformance.tests.test_executers.testfuelperformanceoptions method)": [[234, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions.test_fuelPerformanceOptions"]], "testfuelperformanceplugin (class in armi.physics.fuelperformance.tests.test_fuelperformanceplugin)": [[235, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin"]], "armi.physics.fuelperformance.tests.test_fuelperformanceplugin": [[235, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "plugin (armi.physics.fuelperformance.tests.test_fuelperformanceplugin.testfuelperformanceplugin attribute)": [[235, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin.plugin"]], "testfuelperformanceutils (class in armi.physics.fuelperformance.tests.test_fuelperformanceutils)": [[236, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils"]], "armi.physics.fuelperformance.tests.test_fuelperformanceutils": [[236, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "test_applyfueldisplacement() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[236, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_applyFuelDisplacement"]], "test_gasconductivitycorrection_morph0() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[236, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph0"]], "test_gasconductivitycorrection_morph1() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[236, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph1"]], "test_gasconductivitycorrection_morph2() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[236, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph2"]], "test_gasconductivitycorrection_morph3() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[236, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph3"]], "test_gasconductivitycorrection_morph4() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[236, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph4"]], "applyfueldisplacement() (in module armi.physics.fuelperformance.utils)": [[237, "armi.physics.fuelPerformance.utils.applyFuelDisplacement"]], "armi.physics.fuelperformance.utils": [[237, "module-armi.physics.fuelPerformance.utils"]], "gasconductivitycorrection() (in module armi.physics.fuelperformance.utils)": [[237, "armi.physics.fuelPerformance.utils.gasConductivityCorrection"]], "boc (armi.physics.neutronics.latticephysicsfrequency attribute)": [[238, "armi.physics.neutronics.LatticePhysicsFrequency.BOC"]], "bol (armi.physics.neutronics.latticephysicsfrequency attribute)": [[238, "armi.physics.neutronics.LatticePhysicsFrequency.BOL"]], "latticephysicsfrequency (class in armi.physics.neutronics)": [[238, "armi.physics.neutronics.LatticePhysicsFrequency"]], "neutronicsplugin (class in armi.physics.neutronics)": [[238, "armi.physics.neutronics.NeutronicsPlugin"]], "adjointcalculationrequested() (in module armi.physics.neutronics)": [[238, "armi.physics.neutronics.adjointCalculationRequested"]], "all (armi.physics.neutronics.latticephysicsfrequency attribute)": [[238, "armi.physics.neutronics.LatticePhysicsFrequency.all"]], "applyeffectivedelayedneutronfractiontocore() (in module armi.physics.neutronics)": [[238, "armi.physics.neutronics.applyEffectiveDelayedNeutronFractionToCore"]], "armi.physics.neutronics": [[238, "module-armi.physics.neutronics"]], "defineentrypoints() (armi.physics.neutronics.neutronicsplugin static method)": [[238, "armi.physics.neutronics.NeutronicsPlugin.defineEntryPoints"]], "defineparameterrenames() (armi.physics.neutronics.neutronicsplugin static method)": [[238, "armi.physics.neutronics.NeutronicsPlugin.defineParameterRenames"]], "defineparameters() (armi.physics.neutronics.neutronicsplugin static method)": [[238, "armi.physics.neutronics.NeutronicsPlugin.defineParameters"]], "definesettings() (armi.physics.neutronics.neutronicsplugin static method)": [[238, "armi.physics.neutronics.NeutronicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.neutronics.neutronicsplugin static method)": [[238, "armi.physics.neutronics.NeutronicsPlugin.defineSettingsValidators"]], "everynode (armi.physics.neutronics.latticephysicsfrequency attribute)": [[238, "armi.physics.neutronics.LatticePhysicsFrequency.everyNode"]], "exposeinterfaces() (armi.physics.neutronics.neutronicsplugin static method)": [[238, "armi.physics.neutronics.NeutronicsPlugin.exposeInterfaces"]], "firstcouplediteration (armi.physics.neutronics.latticephysicsfrequency attribute)": [[238, "armi.physics.neutronics.LatticePhysicsFrequency.firstCoupledIteration"]], "gammatransportisrequested() (in module armi.physics.neutronics)": [[238, "armi.physics.neutronics.gammaTransportIsRequested"]], "gammaxsarerequested() (in module armi.physics.neutronics)": [[238, "armi.physics.neutronics.gammaXsAreRequested"]], "getreportcontents() (armi.physics.neutronics.neutronicsplugin static method)": [[238, "armi.physics.neutronics.NeutronicsPlugin.getReportContents"]], "never (armi.physics.neutronics.latticephysicsfrequency attribute)": [[238, "armi.physics.neutronics.LatticePhysicsFrequency.never"]], "onprocesscoreloading() (armi.physics.neutronics.neutronicsplugin static method)": [[238, "armi.physics.neutronics.NeutronicsPlugin.onProcessCoreLoading"]], "realcalculationrequested() (in module armi.physics.neutronics)": [[238, "armi.physics.neutronics.realCalculationRequested"]], "armi.physics.neutronics.const": [[239, "module-armi.physics.neutronics.const"]], "averageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.AverageBlockCollection"]], "blockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection"]], "crosssectiongroupmanager (class in armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager"]], "cylindricalcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CylindricalComponentsAverageBlockCollection"]], "cylindricalcomponentsducthetaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CylindricalComponentsDuctHetAverageBlockCollection"]], "fluxweightedaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.FluxWeightedAverageBlockCollection"]], "medianblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.MedianBlockCollection"]], "slabcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.SlabComponentsAverageBlockCollection"]], "armi.physics.neutronics.crosssectiongroupmanager": [[240, "module-armi.physics.neutronics.crossSectionGroupManager"]], "blockcollectionfactory() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.blockCollectionFactory"]], "calcavgnuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.calcAvgNuclideTemperatures"]], "clearrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.clearRepresentativeBlocks"]], "createrepresentativeblock() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.createRepresentativeBlock"]], "createrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocks"]], "createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocksUsingExistingBlocks"]], "describeinterfaces() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.describeInterfaces"]], "disableenvgroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.disableEnvGroupUpdates"]], "enableenvgroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.enableEnvGroupUpdates"]], "fluxsolutionispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.fluxSolutionIsPregenerated"]], "getblocknuclidetemperature() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.getBlockNuclideTemperature"]], "getblocknuclidetemperatureavgterms() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.getBlockNuclideTemperatureAvgTerms"]], "getcandidateblocks() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getCandidateBlocks"]], "getnextavailablexstypes() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNextAvailableXsTypes"]], "getnuctemperature() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNucTemperature"]], "getweight() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getWeight"]], "getxstypelabelfromnumber() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeLabelFromNumber"]], "getxstypenumberfromlabel() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[240, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeNumberFromLabel"]], "interactboc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOC"]], "interactbol() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOL"]], "interactcoupled() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactCoupled"]], "interacteoc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEOC"]], "interacteverynode() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEveryNode"]], "makecrosssectiongroups() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.makeCrossSectionGroups"]], "name (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager attribute)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.name"]], "updatenuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.updateNuclideTemperatures"]], "xstypeispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[240, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.xsTypeIsPregenerated"]], "one_dimensional_cylinder (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[241, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_CYLINDER"]], "one_dimensional_slab (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[241, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_SLAB"]], "two_dimensional_hex (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[241, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.TWO_DIMENSIONAL_HEX"]], "xsgeometrytypes (class in armi.physics.neutronics.crosssectionsettings)": [[241, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes"]], "xsmodelingoptions (class in armi.physics.neutronics.crosssectionsettings)": [[241, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions"]], "xssettingdef (class in armi.physics.neutronics.crosssectionsettings)": [[241, "armi.physics.neutronics.crossSectionSettings.XSSettingDef"]], "xssettings (class in armi.physics.neutronics.crosssectionsettings)": [[241, "armi.physics.neutronics.crossSectionSettings.XSSettings"]], "zero_dimensional (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[241, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ZERO_DIMENSIONAL"]], "armi.physics.neutronics.crosssectionsettings": [[241, "module-armi.physics.neutronics.crossSectionSettings"]], "dump() (armi.physics.neutronics.crosssectionsettings.xssettingdef method)": [[241, "armi.physics.neutronics.crossSectionSettings.XSSettingDef.dump"]], "envgroup (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[241, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.envGroup"]], "fluxispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[241, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.fluxIsPregenerated"]], "getstr() (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes class method)": [[241, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.getStr"]], "serialize() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[241, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.serialize"]], "serializexssettings() (in module armi.physics.neutronics.crosssectionsettings)": [[241, "armi.physics.neutronics.crossSectionSettings.serializeXSSettings"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[241, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.setDefaults"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xssettings method)": [[241, "armi.physics.neutronics.crossSectionSettings.XSSettings.setDefaults"]], "validate() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[241, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.validate"]], "xsispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[241, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsIsPregenerated"]], "xssettingsvalidator() (in module armi.physics.neutronics.crosssectionsettings)": [[241, "armi.physics.neutronics.crossSectionSettings.xsSettingsValidator"]], "xstype (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[241, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsType"]], "compareisotxslibraries (class in armi.physics.neutronics.diffisotxs)": [[242, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries"]], "addoptions() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[242, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.addOptions"]], "armi.physics.neutronics.diffisotxs": [[242, "module-armi.physics.neutronics.diffIsotxs"]], "invoke() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[242, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.invoke"]], "name (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[242, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.name"]], "settingsargument (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[242, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.settingsArgument"]], "group_structure (in module armi.physics.neutronics.energygroups)": [[243, "armi.physics.neutronics.energyGroups.GROUP_STRUCTURE"]], "armi.physics.neutronics.energygroups": [[243, "module-armi.physics.neutronics.energyGroups"]], "getfastfluxgroupcutoff() (in module armi.physics.neutronics.energygroups)": [[243, "armi.physics.neutronics.energyGroups.getFastFluxGroupCutoff"]], "getgroupstructure() (in module armi.physics.neutronics.energygroups)": [[243, "armi.physics.neutronics.energyGroups.getGroupStructure"]], "getgroupstructuretype() (in module armi.physics.neutronics.energygroups)": [[243, "armi.physics.neutronics.energyGroups.getGroupStructureType"]], "armi.physics.neutronics.fissionproductmodel": [[244, "module-armi.physics.neutronics.fissionProductModel"]], "fissionproductmodel (class in armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodel": [[245, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "describeinterfaces() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModel.describeInterfaces"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getAllFissionProductNames"]], "getgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getGlobalLumpedFissionProducts"]], "interactboc() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOC"]], "interactbol() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOL"]], "interactdistributestate() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactDistributeState"]], "name (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel attribute)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.name"]], "removefissiongasesfromblocks() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.removeFissionGasesFromBlocks"]], "setallblocklfps() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllBlockLFPs"]], "setallcomponentfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllComponentFissionProducts"]], "setgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings": [[246, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "definesettings() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.defineSettings"]], "getfissionproductmodelsettingvalidators() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.getFissionProductModelSettingValidators"]], "fissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile"]], "lumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct"]], "lumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection"]], "armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct": [[247, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "createlfpsfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createLFPsFromFile"]], "createsinglelfpfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createSingleLFPFromFile"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.duplicate"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.duplicate"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNames"]], "getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNuclideBases"]], "getgaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getGaseousYieldFraction"]], "getlumpedfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getLumpedFissionProductNames"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFrac"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getMassFrac"]], "getmassfracdenom() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracDenom"]], "getmassfracs() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracs"]], "getnumberdensities() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getNumberDensities"]], "gettotalyield() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getTotalYield"]], "isgas() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.isGas"]], "items() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.items"]], "keys() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.keys"]], "lumpedfissionproductfactory() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.lumpedFissionProductFactory"]], "values() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[247, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.values"]], "armi.physics.neutronics.fissionproductmodel.tests": [[248, "module-armi.physics.neutronics.fissionProductModel.tests"]], "testfissionproductmodelexplicitmc2library (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library"]], "testfissionproductmodelexplicitmc2libraryslower (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower"]], "testfissionproductmodellumpedfissionproducts (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel": [[249, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "test_fpapplication() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_fpApplication"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_getAllFissionProductNames"]], "test_loadgloballfpsfromfile() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_loadGlobalLFPsFromFile"]], "test_nuclideflags() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclideFlags"]], "test_nuclidesinmodelalldepletableblocks() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2libraryslower method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower.test_nuclidesInModelAllDepletableBlocks"]], "test_nuclidesinmodelfuel() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclidesInModelFuel"]], "testfissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile"]], "testlumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct"]], "testlumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection"]], "testlumpedfissionproductsexplicit (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit"]], "testlumpedfissionproductsfromreferencefile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile"]], "testmo99lfp (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP"]], "armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct": [[250, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "getdummylfpfile() (in module armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.getDummyLFPFile"]], "test_createlfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createLFPs"]], "test_createreferencelfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createReferenceLFPs"]], "test_duplicate() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_duplicate"]], "test_explicitfissionproducts() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsexplicit method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit.test_explicitFissionProducts"]], "test_fissionproductyields() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsfromreferencefile method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile.test_fissionProductYields"]], "test_gaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_gaseousYieldFraction"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNames"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testmo99lfp method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP.test_getAllFissionProductNames"]], "test_getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNuclideBases"]], "test_getmassfrac() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getMassFrac"]], "test_getnumberdensities() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getNumberDensities"]], "test_getyield() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_getYield"]], "test_isgas() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_isGas"]], "armi.physics.neutronics.globalflux": [[251, "module-armi.physics.neutronics.globalFlux"]], "globalfluxexecuter (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter"]], "globalfluxinterface (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface"]], "globalfluxinterfaceusingexecuters (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters"]], "globalfluxoptions (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions"]], "globalfluxresultmapper (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper"]], "armi.physics.neutronics.globalflux.globalfluxinterface": [[252, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "calcreactionrates() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.calcReactionRates"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.calculateKeff"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.calculateKeff"]], "checkenergybalance() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.checkEnergyBalance"]], "clearflux() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.clearFlux"]], "computedparate() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.computeDpaRate"]], "edgeassembliesareneeded() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxexecuter method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter.edgeAssembliesAreNeeded"]], "fromreactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromReactor"]], "fromusersettings() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromUserSettings"]], "function (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.function"]], "getburnuppeakingfactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getBurnupPeakingFactor"]], "getdpaxs() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getDpaXs"]], "getexecuter() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuter"]], "getexecutercls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterOptions"]], "gethistoryparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface static method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getHistoryParams"]], "getiofilenames() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getIOFileNames"]], "getkeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getKeff"]], "getlabel() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getLabel"]], "getoptionscls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getOptionsCls"]], "gettightcouplingvalue() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getTightCouplingValue"]], "interactboc() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactBOC"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactCoupled"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactCoupled"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactEveryNode"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactEveryNode"]], "name (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.name"]], "updatedparate() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateDpaRate"]], "updatemaxdpaparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[252, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateMaxDpaParams"]], "armi.physics.neutronics.globalflux.tests": [[253, "module-armi.physics.neutronics.globalFlux.tests"]], "mockcore (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCore"]], "mockcoreparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCoreParams"]], "mockglobalfluxexecuter (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxExecuter"]], "mockglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface"]], "mockglobalfluxwithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters"]], "mockglobalfluxwithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform"]], "mockreactor (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactor"]], "mockreactorparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactorParams"]], "testglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface"]], "testglobalfluxinterfacewithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters"]], "testglobalfluxinterfacewithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform"]], "testglobalfluxoptions (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions"]], "testglobalfluxresultmapper (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper"]], "testglobalfluxutils (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils"]], "applydummyflux() (in module armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.applyDummyFlux"]], "armi.physics.neutronics.globalflux.tests.test_globalfluxinterface": [[254, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecuters method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecutersnonuniform method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform.getExecuterOptions"]], "interactboc() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactBOC"]], "interacteverynode() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactEveryNode"]], "test_calcreactionrates() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxutils method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils.test_calcReactionRates"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_calculateKeff"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_calculateKeff"]], "test_checkenergybalance() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_checkEnergyBalance"]], "test_computedparate() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_computeDpaRate"]], "test_executerinteraction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_executerInteraction"]], "test_executerinteractionnonuniformassems() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_executerInteractionNonUniformAssems"]], "test_getburnuppeakingfactor() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactor"]], "test_getburnuppeakingfactorzero() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactorZero"]], "test_getdpaxs() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getDpaXs"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getExecuterCls"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_getExecuterCls"]], "test_gethistoryparams() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getHistoryParams"]], "test_getiofilenames() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getIOFileNames"]], "test_gettightcouplingvalue() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getTightCouplingValue"]], "test_interaction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_interaction"]], "test_mapper() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_mapper"]], "test_readfromreactors() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromReactors"]], "test_readfromsettings() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromSettings"]], "test_savephysicsfiles() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_savePhysicsFiles"]], "test_settightcouplingdefaults() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[254, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_setTightCouplingDefaults"]], "armi.physics.neutronics.latticephysics": [[255, "module-armi.physics.neutronics.latticePhysics"]], "latticephysicsinterface (class in armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface"]], "armi.physics.neutronics.latticephysics.latticephysicsinterface": [[256, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "clearxs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.clearXS"]], "computecrosssections() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.computeCrossSections"]], "function (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface attribute)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.function"]], "generatelatticephysicsinputs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.generateLatticePhysicsInputs"]], "getreader() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getReader"]], "getrepresentativeblocks() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getRepresentativeBlocks"]], "getwriters() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getWriters"]], "interactboc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOC"]], "interactbol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOL"]], "interactcoupled() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactCoupled"]], "interacteoc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEOC"]], "interacteverynode() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEveryNode"]], "makecyclexsfilesasbasefiles() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.makeCycleXSFilesAsBaseFiles"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.readExistingXSLibraries"]], "setblockneutronvelocities() (in module armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.setBlockNeutronVelocities"]], "updatephysicscouplingcontrol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updatePhysicsCouplingControl"]], "updatexslibrary() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updateXSLibrary"]], "coolant_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.COOLANT_CATEGORY"]], "depletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.DEPLETABLE"]], "fission_product_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FISSION_PRODUCT_CATEGORY"]], "fuel_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FUEL_CATEGORY"]], "inf_dilute (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.INF_DILUTE"]], "latticephysicswriter (class in armi.physics.neutronics.latticephysics.latticephysicswriter)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter"]], "represented (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.REPRESENTED"]], "structure_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.STRUCTURE_CATEGORY"]], "undepletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNDEPLETABLE"]], "unused_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNUSED_CATEGORY"]], "armi.physics.neutronics.latticephysics.latticephysicswriter": [[257, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "write() (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.write"]], "armi.physics.neutronics.latticephysics.tests": [[258, "module-armi.physics.neutronics.latticePhysics.tests"]], "latticeinterfacetester (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester"]], "latticeinterfacetesterlibfalse (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTesterLibFalse"]], "testlatticephysicsinterface (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface"]], "testlatticephysicsinterfacebase (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterfaceBase"]], "testlatticephysicslibrarycreation (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticephysics.tests.test_latticeinterface": [[259, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.latticeinterfacetester method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester.readExistingXSLibraries"]], "test_getsuffix() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_getSuffix"]], "test_includegammaxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_includeGammaXS"]], "test_interactall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactAll"]], "test_interactboc() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNode"]], "test_interacteverynodeall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeAll"]], "test_interacteverynodefirstcoupled() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeFirstCoupled"]], "test_interacteverynodewhencoupled() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeWhenCoupled"]], "test_interacteverynodewhencoupledbutnot() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeWhenCoupledButNot"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactFirstCoupledIteration"]], "test_latticephysicsinterface() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_latticePhysicsInterface"]], "test_libcreation_genxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS"]], "test_libcreation_genxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_2"]], "test_libcreation_genxs_3() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_3"]], "test_libcreation_nogenxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS"]], "test_libcreation_nogenxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS_2"]], "fakelatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter"]], "testlatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticephysics.tests.test_latticewriter": [[260, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "test_getallnuclidesbytemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInC"]], "test_getallnuclidesbytemperatureincexplicitfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCExplicitFissionProducts"]], "test_getallnuclidesbytemperatureincnone() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCNone"]], "test_getavgnuclidetemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAvgNuclideTemperatureInC"]], "test_getdetailedfpdensities() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFPDensities"]], "test_getdetailedfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProducts"]], "test_getdetailedfissionproductspass() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProductsPass"]], "test_getdriverblock() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDriverBlock"]], "test_getfueltemperature() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getFuelTemperature"]], "test_iscriticalbucklingsearchactive() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isCriticalBucklingSearchActive"]], "test_isgammaxsgenerationenabled() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isGammaXSGenerationEnabled"]], "test_issourcedriven() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isSourceDriven"]], "test_latticephysicswriter() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_latticePhysicsWriter"]], "test_setblockneutronvelocities() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_setBlockNeutronVelocities"]], "test_writetitle() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_writeTitle"]], "write() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.fakelatticephysicswriter method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter.write"]], "macroxsgenerationinterface (class in armi.physics.neutronics.macroxsgenerationinterface)": [[261, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface"]], "macroxsgenerator (class in armi.physics.neutronics.macroxsgenerationinterface)": [[261, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator"]], "armi.physics.neutronics.macroxsgenerationinterface": [[261, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "buildmacros() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface method)": [[261, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.buildMacros"]], "invokehook() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerator method)": [[261, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator.invokeHook"]], "name (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface attribute)": [[261, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.name"]], "armi.physics.neutronics.parameters": [[262, "module-armi.physics.neutronics.parameters"]], "getneutronicsparameterdefinitions() (in module armi.physics.neutronics.parameters)": [[262, "armi.physics.neutronics.parameters.getNeutronicsParameterDefinitions"]], "pd_plot (in module armi.physics.neutronics.reports)": [[263, "armi.physics.neutronics.reports.PD_PLOT"]], "armi.physics.neutronics.reports": [[263, "module-armi.physics.neutronics.reports"]], "generatelineplot() (in module armi.physics.neutronics.reports)": [[263, "armi.physics.neutronics.reports.generateLinePlot"]], "insertinitialcorefuelassem() (in module armi.physics.neutronics.reports)": [[263, "armi.physics.neutronics.reports.insertInitialCoreFuelAssem"]], "insertneutronicsbolcontent() (in module armi.physics.neutronics.reports)": [[263, "armi.physics.neutronics.reports.insertNeutronicsBOLContent"]], "insertneutronicsreport() (in module armi.physics.neutronics.reports)": [[263, "armi.physics.neutronics.reports.insertNeutronicsReport"]], "neutronicsplotting() (in module armi.physics.neutronics.reports)": [[263, "armi.physics.neutronics.reports.neutronicsPlotting"]], "armi.physics.neutronics.settings": [[264, "module-armi.physics.neutronics.settings"]], "definesettings() (in module armi.physics.neutronics.settings)": [[264, "armi.physics.neutronics.settings.defineSettings"]], "getneutronicssettingvalidators() (in module armi.physics.neutronics.settings)": [[264, "armi.physics.neutronics.settings.getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[265, "module-armi.physics.neutronics.tests"]], "testblockcollection (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection"]], "testblockcollectionaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage"]], "testblockcollectioncomponentaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage"]], "testblockcollectioncomponentaverage1dcylinder (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder"]], "testblockcollectionfluxweightedaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage"]], "testblockcollectionmedian (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian"]], "testcomponentaveraging (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging"]], "testcrosssectiongroupmanager (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager"]], "testcrosssectiongroupmanagerwithtempgrouping (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManagerWithTempGrouping"]], "testxsnumberconverters (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters"]], "armi.physics.neutronics.tests.test_crosssectionmanager": [[266, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "makeblocks() (in module armi.physics.neutronics.tests.test_crosssectionmanager)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.makeBlocks"]], "test_componentaverage1dcylinder() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_ComponentAverage1DCylinder"]], "test_componentaverageducthet1dcylinder() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_ComponentAverageDuctHet1DCylinder"]], "test_componentaveragerepblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage.test_ComponentAverageRepBlock"]], "test_add() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_add"]], "test_addxsgroupsfromblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_addXsGroupsFromBlocks"]], "test_calcweightedburnup() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_calcWeightedBurnup"]], "test_checkblocksimilarity() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_checkBlockSimilarity"]], "test_checkcomponentconsistency() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_checkComponentConsistency"]], "test_conversion() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion"]], "test_conversion_2digit() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion_2digit"]], "test_copypregeneratedfiles() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_copyPregeneratedFiles"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionmedian method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian.test_createRepresentativeBlock"]], "test_createrepresentativeblockdissimilar() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlockDissimilar"]], "test_createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_createRepresentativeBlocksUsingExistingBlocks"]], "test_createrepresentativeblocksusingexistingblocksdisablevalidblocktypes() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_createRepresentativeBlocksUsingExistingBlocksDisableValidBlockTypes"]], "test_disableenvgroupupdates() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_disableEnvGroupUpdates"]], "test_enableenvgroupupdates() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_enableEnvGroupUpdates"]], "test_getaveragecomponentnumberdensities() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentNumberDensities"]], "test_getaveragecomponenttemperature() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperature"]], "test_getaveragecomponenttemperaturenomass() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperatureNoMass"]], "test_getaveragecomponenttemperaturevariedweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperatureVariedWeights"]], "test_getblocknuclidetemperature() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionmedian method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian.test_getBlockNuclideTemperature"]], "test_getblocksingroup() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_getBlocksInGroup"]], "test_getnextavailablexstype() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_getNextAvailableXsType"]], "test_getrepresentativeblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_getRepresentativeBlocks"]], "test_interactallcoupled() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactAllCoupled"]], "test_interactboc() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactEveryNode"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactFirstCoupledIteration"]], "test_invalidweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_invalidWeights"]], "test_is_pickleable() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_is_pickleable"]], "test_performaveragebycomponent() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_performAverageByComponent"]], "test_setbugroupbounds() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_setBuGroupBounds"]], "test_settempgroupbounds() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_setTempGroupBounds"]], "test_updateburnupgroups() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_updateBurnupGroups"]], "test_updateenvironmentgroups() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanagerwithtempgrouping method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManagerWithTempGrouping.test_updateEnvironmentGroups"]], "test_xsgmisrunbeforexs() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[266, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_xsgmIsRunBeforeXS"]], "testcrosssectionsettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings"]], "testxssettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings"]], "armi.physics.neutronics.tests.test_crosssectionsettings": [[267, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "test_badcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_badCrossSections"]], "test_casesettings() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_caseSettings"]], "test_crosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_crossSections"]], "test_csblockrepresentation() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_csBlockRepresentation"]], "test_csblockrepresentationfilelocation() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_csBlockRepresentationFileLocation"]], "test_homogeneousxsdefaultsettingassignment() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_homogeneousXsDefaultSettingAssignment"]], "test_optionalkey() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_optionalKey"]], "test_pregeneratedcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedCrossSections"]], "test_pregeneratedfluxinputs() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedFluxInputs"]], "test_prioritization() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_prioritization"]], "test_setdefaultsettingsbylowestenvgrouphomogeneous() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestEnvGroupHomogeneous"]], "test_setdefaultsettingsbylowestenvgrouponedimensional() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestEnvGroupOneDimensional"]], "test_xssettingssetdefault() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_xsSettingsSetDefault"]], "test_yamlio() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[267, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_yamlIO"]], "testcrosssectiontable (class in armi.physics.neutronics.tests.test_crosssectiontable)": [[268, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crosssectiontable": [[268, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "test_isotopicdepletioninterface() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[268, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_isotopicDepletionInterface"]], "test_maketable() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[268, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_makeTable"]], "testenergygroups (class in armi.physics.neutronics.tests.test_energygroups)": [[269, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energygroups": [[269, "module-armi.physics.neutronics.tests.test_energyGroups"]], "test_consistenciesbetweengroupstructureandgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[269, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_consistenciesBetweenGroupStructureAndGroupStructureType"]], "test_getfastfluxgroupcutoff() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[269, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_getFastFluxGroupCutoff"]], "test_invalidgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[269, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_invalidGroupStructureType"]], "testmacroxsgenerationinterface (class in armi.physics.neutronics.tests.test_macroxsgenerationinterface)": [[270, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroxsgenerationinterface": [[270, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "test_macroxsgenerationinterfacebasics() (armi.physics.neutronics.tests.test_macroxsgenerationinterface.testmacroxsgenerationinterface method)": [[270, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface.test_macroXSGenerationInterfaceBasics"]], "neutronicsreactortests (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[271, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests"]], "testneutronicsplugin (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[271, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsplugin": [[271, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "plugin (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin attribute)": [[271, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.plugin"]], "test_customsettingobjectio() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[271, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_customSettingObjectIO"]], "test_customsettingroundtrip() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[271, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_customSettingRoundTrip"]], "test_kineticsparameterassignment() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[271, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_kineticsParameterAssignment"]], "test_neutronicssettingsloaded() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[271, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_neutronicsSettingsLoaded"]], "test_neutronicssettingsvalidators() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[271, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_neutronicsSettingsValidators"]], "safetyplugin (class in armi.physics.safety)": [[272, "armi.physics.safety.SafetyPlugin"]], "armi.physics.safety": [[272, "module-armi.physics.safety"]], "definesettings() (armi.physics.safety.safetyplugin static method)": [[272, "armi.physics.safety.SafetyPlugin.defineSettings"]], "armi.physics.tests": [[273, "module-armi.physics.tests"]], "mockcore (class in armi.physics.tests.test_executers)": [[274, "armi.physics.tests.test_executers.MockCore"]], "mockparams (class in armi.physics.tests.test_executers)": [[274, "armi.physics.tests.test_executers.MockParams"]], "mockreactor (class in armi.physics.tests.test_executers)": [[274, "armi.physics.tests.test_executers.MockReactor"]], "testexecuters (class in armi.physics.tests.test_executers)": [[274, "armi.physics.tests.test_executers.TestExecuters"]], "testexecutionoptions (class in armi.physics.tests.test_executers)": [[274, "armi.physics.tests.test_executers.TestExecutionOptions"]], "armi.physics.tests.test_executers": [[274, "module-armi.physics.tests.test_executers"]], "test_collectinputsandoutputs() (armi.physics.tests.test_executers.testexecuters method)": [[274, "armi.physics.tests.test_executers.TestExecuters.test_collectInputsAndOutputs"]], "test_runexternalexecutable() (armi.physics.tests.test_executers.testexecuters method)": [[274, "armi.physics.tests.test_executers.TestExecuters.test_runExternalExecutable"]], "test_runningdirectorypath() (armi.physics.tests.test_executers.testexecutionoptions method)": [[274, "armi.physics.tests.test_executers.TestExecutionOptions.test_runningDirectoryPath"]], "test_updaterundir() (armi.physics.tests.test_executers.testexecuters method)": [[274, "armi.physics.tests.test_executers.TestExecuters.test_updateRunDir"]], "armi.physics.thermalhydraulics": [[275, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalhydraulics.const": [[276, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalhydraulics.parameters": [[277, "module-armi.physics.thermalHydraulics.parameters"]], "getparameterdefinitions() (in module armi.physics.thermalhydraulics.parameters)": [[277, "armi.physics.thermalHydraulics.parameters.getParameterDefinitions"]], "thermalhydraulicsplugin (class in armi.physics.thermalhydraulics.plugin)": [[278, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin"]], "afterconstructionofassemblies() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[278, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.afterConstructionOfAssemblies"]], "armi.physics.thermalhydraulics.plugin": [[278, "module-armi.physics.thermalHydraulics.plugin"]], "defineparameters() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[278, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineParameters"]], "definesettings() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[278, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[278, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[278, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.exposeInterfaces"]], "armi.physics.thermalhydraulics.settings": [[279, "module-armi.physics.thermalHydraulics.settings"]], "definesettings() (in module armi.physics.thermalhydraulics.settings)": [[279, "armi.physics.thermalHydraulics.settings.defineSettings"]], "definevalidators() (in module armi.physics.thermalhydraulics.settings)": [[279, "armi.physics.thermalHydraulics.settings.defineValidators"]], "armi.physics.thermalhydraulics.tests": [[280, "module-armi.physics.thermalHydraulics.tests"]], "testthermalhydraulicsplugin (class in armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin)": [[281, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin"]], "armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin": [[281, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"]], "plugin (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin attribute)": [[281, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.plugin"]], "test_thermalhydraulicssettingsloaded() (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin method)": [[281, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.test_thermalHydraulicsSettingsLoaded"]], "test_thermalhydraulicssettingsset() (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin method)": [[281, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.test_thermalHydraulicsSettingsSet"]], "armipluginmanager (class in armi.pluginmanager)": [[282, "armi.pluginManager.ArmiPluginManager"]], "armi.pluginmanager": [[282, "module-armi.pluginManager"]], "counter (armi.pluginmanager.armipluginmanager property)": [[282, "armi.pluginManager.ArmiPluginManager.counter"]], "register() (armi.pluginmanager.armipluginmanager method)": [[282, "armi.pluginManager.ArmiPluginManager.register"]], "unregister() (armi.pluginmanager.armipluginmanager method)": [[282, "armi.pluginManager.ArmiPluginManager.unregister"]], "armiplugin (class in armi.plugins)": [[283, "armi.plugins.ArmiPlugin"]], "pluginerror": [[283, "armi.plugins.PluginError"]], "userplugin (class in armi.plugins)": [[283, "armi.plugins.UserPlugin"]], "afterconstructionofassemblies() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.afterConstructionOfAssemblies"]], "armi.plugins": [[283, "module-armi.plugins"]], "beforereactorconstruction() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.beforeReactorConstruction"]], "collectinterfacedescriptions() (in module armi.plugins)": [[283, "armi.plugins.collectInterfaceDescriptions"]], "defineassemblytypes() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.defineBlockTypes"]], "defineblueprintssections() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.defineBlueprintsSections"]], "definecasedependencies() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.defineEntryPoints"]], "defineflags() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.defineFlags"]], "defineguiwidgets() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.defineGuiWidgets"]], "defineparameterrenames() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.defineParameterRenames"]], "defineparameterrenames() (armi.plugins.userplugin static method)": [[283, "armi.plugins.UserPlugin.defineParameterRenames"]], "defineparameters() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.defineParameters"]], "defineparameters() (armi.plugins.userplugin static method)": [[283, "armi.plugins.UserPlugin.defineParameters"]], "definesettings() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.defineSettings"]], "definesettings() (armi.plugins.userplugin static method)": [[283, "armi.plugins.UserPlugin.defineSettings"]], "definesettingsvalidators() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.defineSettingsValidators"]], "definesettingsvalidators() (armi.plugins.userplugin static method)": [[283, "armi.plugins.UserPlugin.defineSettingsValidators"]], "definesystembuilders() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.defineSystemBuilders"]], "exposeinterfaces() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.exposeInterfaces"]], "getaxialexpansionchanger() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.getAxialExpansionChanger"]], "getnewpluginmanager() (in module armi.plugins)": [[283, "armi.plugins.getNewPluginManager"]], "getoperatorclassfromruntype() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.getOperatorClassFromRunType"]], "getreportcontents() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.mpiActionRequiresReset"]], "onprocesscoreloading() (armi.plugins.armiplugin static method)": [[283, "armi.plugins.ArmiPlugin.onProcessCoreLoading"]], "reactorplugin (class in armi.reactor)": [[284, "armi.reactor.ReactorPlugin"]], "armi.reactor": [[284, "module-armi.reactor"]], "beforereactorconstruction() (armi.reactor.reactorplugin static method)": [[284, "armi.reactor.ReactorPlugin.beforeReactorConstruction"]], "defineassemblytypes() (armi.reactor.reactorplugin static method)": [[284, "armi.reactor.ReactorPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.reactor.reactorplugin static method)": [[284, "armi.reactor.ReactorPlugin.defineBlockTypes"]], "definesystembuilders() (armi.reactor.reactorplugin static method)": [[284, "armi.reactor.ReactorPlugin.defineSystemBuilders"]], "getaxialexpansionchanger() (armi.reactor.reactorplugin static method)": [[284, "armi.reactor.ReactorPlugin.getAxialExpansionChanger"]], "assembly (class in armi.reactor.assemblies)": [[285, "armi.reactor.assemblies.Assembly"]], "cartesianassembly (class in armi.reactor.assemblies)": [[285, "armi.reactor.assemblies.CartesianAssembly"]], "database (armi.reactor.assemblies.assembly attribute)": [[285, "armi.reactor.assemblies.Assembly.DATABASE"]], "hexassembly (class in armi.reactor.assemblies)": [[285, "armi.reactor.assemblies.HexAssembly"]], "load_queue (armi.reactor.assemblies.assembly attribute)": [[285, "armi.reactor.assemblies.Assembly.LOAD_QUEUE"]], "not_in_core (armi.reactor.assemblies.assembly attribute)": [[285, "armi.reactor.assemblies.Assembly.NOT_IN_CORE"]], "rzassembly (class in armi.reactor.assemblies)": [[285, "armi.reactor.assemblies.RZAssembly"]], "spent_fuel_pool (armi.reactor.assemblies.assembly attribute)": [[285, "armi.reactor.assemblies.Assembly.SPENT_FUEL_POOL"]], "thrzassembly (class in armi.reactor.assemblies)": [[285, "armi.reactor.assemblies.ThRZAssembly"]], "add() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.add"]], "adjustresolution() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.adjustResolution"]], "armi.reactor.assemblies": [[285, "module-armi.reactor.assemblies"]], "calculatezcoords() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.calculateZCoords"]], "coords() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.coords"]], "countblockswithflags() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.countBlocksWithFlags"]], "dump() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.dump"]], "getage() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getAge"]], "getarea() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getArea"]], "getaverageplenumtemperature() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getAveragePlenumTemperature"]], "getaxialmesh() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getAxialMesh"]], "getbindexfromzindex() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getBIndexFromZIndex"]], "getblockatelevation() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getBlockAtElevation"]], "getblocks() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getBlocks"]], "getblocksandz() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getBlocksAndZ"]], "getblocksbetweenelevations() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getBlocksBetweenElevations"]], "getdim() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getDim"]], "getelevationboundariesbyblocktype() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getElevationBoundariesByBlockType"]], "getelevationsmatchingparamvalue() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getElevationsMatchingParamValue"]], "getfirstblock() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getFirstBlock"]], "getfirstblockbytype() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getFirstBlockByType"]], "getheight() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getHeight"]], "getlocation() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getLocation"]], "getnum() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getNum"]], "getparamofzfunction() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getParamOfZFunction"]], "getparamvaluesatz() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getParamValuesAtZ"]], "getpinplenumvolumeincubicmeters() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getPinPlenumVolumeInCubicMeters"]], "getreactiveheight() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getReactiveHeight"]], "getsymmetryfactor() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getSymmetryFactor"]], "gettotalheight() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getTotalHeight"]], "getvolume() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.getVolume"]], "hascontinuouscoolantchannel() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.hasContinuousCoolantChannel"]], "insert() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.insert"]], "isonwhichsymmetryline() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.isOnWhichSymmetryLine"]], "makeaxialsnaplist() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.makeAxialSnapList"]], "makenamefromassemnum() (armi.reactor.assemblies.assembly static method)": [[285, "armi.reactor.assemblies.Assembly.makeNameFromAssemNum"]], "makeunique() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.makeUnique"]], "moveto() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.moveTo"]], "orientblocks() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.orientBlocks"]], "pdefs (armi.reactor.assemblies.assembly attribute)": [[285, "armi.reactor.assemblies.Assembly.pDefs"]], "paramcollectiontype (armi.reactor.assemblies.assembly attribute)": [[285, "armi.reactor.assemblies.Assembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.cartesianassembly attribute)": [[285, "armi.reactor.assemblies.CartesianAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.hexassembly attribute)": [[285, "armi.reactor.assemblies.HexAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.rzassembly attribute)": [[285, "armi.reactor.assemblies.RZAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.thrzassembly attribute)": [[285, "armi.reactor.assemblies.ThRZAssembly.paramCollectionType"]], "radialinner() (armi.reactor.assemblies.rzassembly method)": [[285, "armi.reactor.assemblies.RZAssembly.radialInner"]], "radialouter() (armi.reactor.assemblies.rzassembly method)": [[285, "armi.reactor.assemblies.RZAssembly.radialOuter"]], "reestablishblockorder() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.reestablishBlockOrder"]], "renameblocksaccordingtoassemblynum() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.renameBlocksAccordingToAssemblyNum"]], "renumber() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.renumber"]], "rotate() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.rotate"]], "rotate() (armi.reactor.assemblies.hexassembly method)": [[285, "armi.reactor.assemblies.HexAssembly.rotate"]], "scaleparamstonewsymmetryfactor() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.scaleParamsToNewSymmetryFactor"]], "setblockheights() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.setBlockHeights"]], "setblockmesh() (armi.reactor.assemblies.assembly method)": [[285, "armi.reactor.assemblies.Assembly.setBlockMesh"]], "thetainner() (armi.reactor.assemblies.rzassembly method)": [[285, "armi.reactor.assemblies.RZAssembly.thetaInner"]], "thetaouter() (armi.reactor.assemblies.rzassembly method)": [[285, "armi.reactor.assemblies.RZAssembly.thetaOuter"]], "armi.reactor.assemblyparameters": [[286, "module-armi.reactor.assemblyParameters"]], "getassemblyparameterdefinitions() (in module armi.reactor.assemblyparameters)": [[286, "armi.reactor.assemblyParameters.getAssemblyParameterDefinitions"]], "armi.reactor.blockparameters": [[287, "module-armi.reactor.blockParameters"]], "getblockparameterdefinitions() (in module armi.reactor.blockparameters)": [[287, "armi.reactor.blockParameters.getBlockParameterDefinitions"]], "block (class in armi.reactor.blocks)": [[288, "armi.reactor.blocks.Block"]], "cartesianblock (class in armi.reactor.blocks)": [[288, "armi.reactor.blocks.CartesianBlock"]], "hexblock (class in armi.reactor.blocks)": [[288, "armi.reactor.blocks.HexBlock"]], "pitch_component_type (armi.reactor.blocks.block attribute)": [[288, "armi.reactor.blocks.Block.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.cartesianblock attribute)": [[288, "armi.reactor.blocks.CartesianBlock.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.hexblock attribute)": [[288, "armi.reactor.blocks.HexBlock.PITCH_COMPONENT_TYPE"]], "pitch_dimension (armi.reactor.blocks.block attribute)": [[288, "armi.reactor.blocks.Block.PITCH_DIMENSION"]], "pitch_dimension (armi.reactor.blocks.cartesianblock attribute)": [[288, "armi.reactor.blocks.CartesianBlock.PITCH_DIMENSION"]], "thrzblock (class in armi.reactor.blocks)": [[288, "armi.reactor.blocks.ThRZBlock"]], "add() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.add"]], "adjustdensity() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.adjustDensity"]], "adjustuenrich() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.adjustUEnrich"]], "armi.reactor.blocks": [[288, "module-armi.reactor.blocks"]], "autocreatespatialgrids() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.autoCreateSpatialGrids"]], "autocreatespatialgrids() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.autoCreateSpatialGrids"]], "axialinner() (armi.reactor.blocks.thrzblock method)": [[288, "armi.reactor.blocks.ThRZBlock.axialInner"]], "axialouter() (armi.reactor.blocks.thrzblock method)": [[288, "armi.reactor.blocks.ThRZBlock.axialOuter"]], "completeinitialloading() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.completeInitialLoading"]], "coords() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.coords"]], "coords() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.coords"]], "core (armi.reactor.blocks.block property)": [[288, "armi.reactor.blocks.Block.core"]], "createhomogenizedcopy() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.createHomogenizedCopy"]], "createhomogenizedcopy() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.createHomogenizedCopy"]], "getarea() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getArea"]], "getblocks() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getBlocks"]], "getboronmassenrich() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getBoronMassEnrich"]], "getcaptureenergygenerationconstants() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getCaptureEnergyGenerationConstants"]], "getcomponentareafrac() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getComponentAreaFrac"]], "getcomponentsinlinkedorder() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getComponentsInLinkedOrder"]], "getcomponentsthatarelinkedto() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getComponentsThatAreLinkedTo"]], "getdim() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getDim"]], "getdimensions() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getDimensions"]], "getductip() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.getDuctIP"]], "getductop() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.getDuctOP"]], "getfissionenergygenerationconstants() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getFissionEnergyGenerationConstants"]], "getflowarea() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.getFlowArea"]], "getflowareaperpin() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getFlowAreaPerPin"]], "getgammaenergydepositionconstants() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getGammaEnergyDepositionConstants"]], "getheight() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getHeight"]], "gethydraulicdiameter() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getHydraulicDiameter"]], "gethydraulicdiameter() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.getHydraulicDiameter"]], "getinputheight() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getInputHeight"]], "getintegratedmgflux() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getIntegratedMgFlux"]], "getlargestcomponent() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getLargestComponent"]], "getlocation() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getLocation"]], "getlumpedfissionproductcollection() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getLumpedFissionProductCollection"]], "getmaxarea() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.cartesianblock method)": [[288, "armi.reactor.blocks.CartesianBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.thrzblock method)": [[288, "armi.reactor.blocks.ThRZBlock.getMaxArea"]], "getmfp() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getMfp"]], "getmgflux() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getMgFlux"]], "getmicrosuffix() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getMicroSuffix"]], "getneutronenergydepositionconstants() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getNeutronEnergyDepositionConstants"]], "getnumpins() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getNumPins"]], "getpincenterflattoflat() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.cartesianblock method)": [[288, "armi.reactor.blocks.CartesianBlock.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.getPinCenterFlatToFlat"]], "getpincoordinates() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getPinCoordinates"]], "getpinlocations() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getPinLocations"]], "getpinpitch() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getPinPitch"]], "getpinpitch() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.getPinPitch"]], "getpintoductgap() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.getPinToDuctGap"]], "getpitch() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getPitch"]], "getplenumpin() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getPlenumPin"]], "getrotationnum() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.getRotationNum"]], "getsmeardensity() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getSmearDensity"]], "getsortedcomponentsinsideofcomponent() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getSortedComponentsInsideOfComponent"]], "getsymmetryfactor() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.cartesianblock method)": [[288, "armi.reactor.blocks.CartesianBlock.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.getSymmetryFactor"]], "gettotalenergygenerationconstants() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getTotalEnergyGenerationConstants"]], "geturaniummassenrich() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getUraniumMassEnrich"]], "getvolume() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getVolume"]], "getwettedperimeter() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getWettedPerimeter"]], "getwettedperimeter() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.getWettedPerimeter"]], "getwirewrapcladgap() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.getWireWrapCladGap"]], "haspinpitch() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.hasPinPitch"]], "haspinpitch() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.hasPinPitch"]], "initializepinlocations() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.initializePinLocations"]], "isplenumpin() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.isPlenumPin"]], "makename() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.makeName"]], "mergewithblock() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.mergeWithBlock"]], "pdefs (armi.reactor.blocks.block attribute)": [[288, "armi.reactor.blocks.Block.pDefs"]], "paramcollectiontype (armi.reactor.blocks.block attribute)": [[288, "armi.reactor.blocks.Block.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.cartesianblock attribute)": [[288, "armi.reactor.blocks.CartesianBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.hexblock attribute)": [[288, "armi.reactor.blocks.HexBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.thrzblock attribute)": [[288, "armi.reactor.blocks.ThRZBlock.paramCollectionType"]], "plotflux() (armi.reactor.blocks.block static method)": [[288, "armi.reactor.blocks.Block.plotFlux"]], "radialinner() (armi.reactor.blocks.thrzblock method)": [[288, "armi.reactor.blocks.ThRZBlock.radialInner"]], "radialouter() (armi.reactor.blocks.thrzblock method)": [[288, "armi.reactor.blocks.ThRZBlock.radialOuter"]], "remove() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.remove"]], "removeall() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.removeAll"]], "replaceblockwithblock() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.replaceBlockWithBlock"]], "rotate() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.rotate"]], "rotate() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.rotate"]], "setareafractionsreport() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.setAreaFractionsReport"]], "setaxialexptargetcomp() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.setAxialExpTargetComp"]], "setb10volparam() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.setB10VolParam"]], "setbulimitinfo() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.setBuLimitInfo"]], "setheight() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.setHeight"]], "setpinmgfluxes() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.setPinMgFluxes"]], "setpinpowers() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.setPinPowers"]], "setpitch() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.setPitch"]], "setpitch() (armi.reactor.blocks.cartesianblock method)": [[288, "armi.reactor.blocks.CartesianBlock.setPitch"]], "setrotationnum() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.setRotationNum"]], "thetainner() (armi.reactor.blocks.thrzblock method)": [[288, "armi.reactor.blocks.ThRZBlock.thetaInner"]], "thetaouter() (armi.reactor.blocks.thrzblock method)": [[288, "armi.reactor.blocks.ThRZBlock.thetaOuter"]], "uniqid (armi.reactor.blocks.block attribute)": [[288, "armi.reactor.blocks.Block.uniqID"]], "updatecomponentdims() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.updateComponentDims"]], "verifyblockdims() (armi.reactor.blocks.block method)": [[288, "armi.reactor.blocks.Block.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.hexblock method)": [[288, "armi.reactor.blocks.HexBlock.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.thrzblock method)": [[288, "armi.reactor.blocks.ThRZBlock.verifyBlockDims"]], "blueprints (class in armi.reactor.blueprints)": [[289, "armi.reactor.blueprints.Blueprints"]], "adddefaultsfp() (armi.reactor.blueprints.blueprints method)": [[289, "armi.reactor.blueprints.Blueprints.addDefaultSFP"]], "armi.reactor.blueprints": [[289, "module-armi.reactor.blueprints"]], "attributes (armi.reactor.blueprints.blueprints attribute)": [[289, "armi.reactor.blueprints.Blueprints.attributes"]], "constructassem() (armi.reactor.blueprints.blueprints method)": [[289, "armi.reactor.blueprints.Blueprints.constructAssem"]], "load() (armi.reactor.blueprints.blueprints class method)": [[289, "armi.reactor.blueprints.Blueprints.load"]], "loadfromcs() (in module armi.reactor.blueprints)": [[289, "armi.reactor.blueprints.loadFromCs"]], "migrate() (armi.reactor.blueprints.blueprints class method)": [[289, "armi.reactor.blueprints.Blueprints.migrate"]], "migrate() (in module armi.reactor.blueprints)": [[289, "armi.reactor.blueprints.migrate"]], "assemblyblueprint (class in armi.reactor.blueprints.assemblyblueprint)": [[290, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint"]], "assemblykeyedlist (class in armi.reactor.blueprints.assemblyblueprint)": [[290, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList"]], "bycomponentmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[290, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications"]], "materialmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[290, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications"]], "modifications (class in armi.reactor.blueprints.assemblyblueprint)": [[290, "armi.reactor.blueprints.assemblyBlueprint.Modifications"]], "armi.reactor.blueprints.assemblyblueprint": [[290, "module-armi.reactor.blueprints.assemblyBlueprint"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint attribute)": [[290, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[290, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[290, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[290, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[290, "armi.reactor.blueprints.assemblyBlueprint.Modifications.attributes"]], "byspecifier (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist property)": [[290, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.bySpecifier"]], "construct() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint method)": [[290, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.construct"]], "getassemclass() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint class method)": [[290, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.getAssemClass"]], "item_type (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[290, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.item_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[290, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[290, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[290, "armi.reactor.blueprints.assemblyBlueprint.Modifications.key_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[290, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[290, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[290, "armi.reactor.blueprints.assemblyBlueprint.Modifications.value_type"]], "blockblueprint (class in armi.reactor.blueprints.blockblueprint)": [[291, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint"]], "blockkeyedlist (class in armi.reactor.blueprints.blockblueprint)": [[291, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList"]], "blocklist (class in armi.reactor.blueprints.blockblueprint)": [[291, "armi.reactor.blueprints.blockBlueprint.BlockList"]], "armi.reactor.blueprints.blockblueprint": [[291, "module-armi.reactor.blueprints.blockBlueprint"]], "attributes (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[291, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.attributes"]], "attributes (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[291, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.attributes"]], "construct() (armi.reactor.blueprints.blockblueprint.blockblueprint method)": [[291, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.construct"]], "item_type (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[291, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[291, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blocklist attribute)": [[291, "armi.reactor.blueprints.blockBlueprint.BlockList.item_type"]], "componentblueprint (class in armi.reactor.blueprints.componentblueprint)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint"]], "componentdimension (class in armi.reactor.blueprints.componentblueprint)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentDimension"]], "componentgroup (class in armi.reactor.blueprints.componentblueprint)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentGroup"]], "componentgroups (class in armi.reactor.blueprints.componentblueprint)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentGroups"]], "componentkeyedlist (class in armi.reactor.blueprints.componentblueprint)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList"]], "groupedcomponent (class in armi.reactor.blueprints.componentblueprint)": [[292, "armi.reactor.blueprints.componentBlueprint.GroupedComponent"]], "armi.reactor.blueprints.componentblueprint": [[292, "module-armi.reactor.blueprints.componentBlueprint"]], "attributes (armi.reactor.blueprints.componentblueprint.componentblueprint attribute)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentdimension attribute)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.groupedcomponent attribute)": [[292, "armi.reactor.blueprints.componentBlueprint.GroupedComponent.attributes"]], "construct() (armi.reactor.blueprints.componentblueprint.componentblueprint method)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.construct"]], "expandelementals() (in module armi.reactor.blueprints.componentblueprint)": [[292, "armi.reactor.blueprints.componentBlueprint.expandElementals"]], "from_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.from_yaml"]], "insertdepletablenuclidekeys() (in module armi.reactor.blueprints.componentblueprint)": [[292, "armi.reactor.blueprints.componentBlueprint.insertDepletableNuclideKeys"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.item_type"]], "to_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[292, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.to_yaml"]], "gridblueprint (class in armi.reactor.blueprints.gridblueprint)": [[293, "armi.reactor.blueprints.gridBlueprint.GridBlueprint"]], "grids (class in armi.reactor.blueprints.gridblueprint)": [[293, "armi.reactor.blueprints.gridBlueprint.Grids"]], "triplet (class in armi.reactor.blueprints.gridblueprint)": [[293, "armi.reactor.blueprints.gridBlueprint.Triplet"]], "armi.reactor.blueprints.gridblueprint": [[293, "module-armi.reactor.blueprints.gridBlueprint"]], "attributes (armi.reactor.blueprints.gridblueprint.gridblueprint attribute)": [[293, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.grids attribute)": [[293, "armi.reactor.blueprints.gridBlueprint.Grids.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.triplet attribute)": [[293, "armi.reactor.blueprints.gridBlueprint.Triplet.attributes"]], "construct() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[293, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.construct"]], "expandtofull() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[293, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.expandToFull"]], "getlocators() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[293, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getLocators"]], "getmultilocator() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[293, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getMultiLocator"]], "item_type (armi.reactor.blueprints.gridblueprint.grids attribute)": [[293, "armi.reactor.blueprints.gridBlueprint.Grids.item_type"]], "readfromlatticemap (armi.reactor.blueprints.gridblueprint.gridblueprint property)": [[293, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.readFromLatticeMap"]], "savetostream() (in module armi.reactor.blueprints.gridblueprint)": [[293, "armi.reactor.blueprints.gridBlueprint.saveToStream"]], "customisotopic (class in armi.reactor.blueprints.isotopicoptions)": [[294, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic"]], "customisotopics (class in armi.reactor.blueprints.isotopicoptions)": [[294, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics"]], "nuclideflag (class in armi.reactor.blueprints.isotopicoptions)": [[294, "armi.reactor.blueprints.isotopicOptions.NuclideFlag"]], "nuclideflags (class in armi.reactor.blueprints.isotopicoptions)": [[294, "armi.reactor.blueprints.isotopicOptions.NuclideFlags"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopic method)": [[294, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.apply"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopics method)": [[294, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.apply"]], "armi.reactor.blueprints.isotopicoptions": [[294, "module-armi.reactor.blueprints.isotopicOptions"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[294, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[294, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflag attribute)": [[294, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[294, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.attributes"]], "autoupdatenuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[294, "armi.reactor.blueprints.isotopicOptions.autoUpdateNuclideFlags"]], "density (armi.reactor.blueprints.isotopicoptions.customisotopic property)": [[294, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.density"]], "eleexpandinfobasedoncodeendf() (in module armi.reactor.blueprints.isotopicoptions)": [[294, "armi.reactor.blueprints.isotopicOptions.eleExpandInfoBasedOnCodeENDF"]], "fileasactiveorinert() (armi.reactor.blueprints.isotopicoptions.nuclideflag method)": [[294, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.fileAsActiveOrInert"]], "from_yaml() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[294, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml"]], "from_yaml_key_val() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[294, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml_key_val"]], "gendefaultnucflags() (in module armi.reactor.blueprints.isotopicoptions)": [[294, "armi.reactor.blueprints.isotopicOptions.genDefaultNucFlags"]], "getallnuclidebasesbylibrary() (in module armi.reactor.blueprints.isotopicoptions)": [[294, "armi.reactor.blueprints.isotopicOptions.getAllNuclideBasesByLibrary"]], "getdefaultnuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[294, "armi.reactor.blueprints.isotopicOptions.getDefaultNuclideFlags"]], "item_type (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[294, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.item_type"]], "item_type (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[294, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.item_type"]], "key_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[294, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.key_type"]], "value_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[294, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.value_type"]], "systemblueprint (class in armi.reactor.blueprints.reactorblueprint)": [[295, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint"]], "systems (class in armi.reactor.blueprints.reactorblueprint)": [[295, "armi.reactor.blueprints.reactorBlueprint.Systems"]], "armi.reactor.blueprints.reactorblueprint": [[295, "module-armi.reactor.blueprints.reactorBlueprint"]], "attributes (armi.reactor.blueprints.reactorblueprint.systemblueprint attribute)": [[295, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.attributes"]], "attributes (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[295, "armi.reactor.blueprints.reactorBlueprint.Systems.attributes"]], "construct() (armi.reactor.blueprints.reactorblueprint.systemblueprint method)": [[295, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.construct"]], "item_type (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[295, "armi.reactor.blueprints.reactorBlueprint.Systems.item_type"]], "summarizematerialdata() (in module armi.reactor.blueprints.reactorblueprint)": [[295, "armi.reactor.blueprints.reactorBlueprint.summarizeMaterialData"]], "armi.reactor.blueprints.tests": [[296, "module-armi.reactor.blueprints.tests"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_assemblyblueprints)": [[297, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyblueprints": [[297, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "loadcustomassembly() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[297, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.loadCustomAssembly"]], "test_checkparamconsistency() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[297, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.test_checkParamConsistency"]], "twoblockinput_correct (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[297, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_correct"]], "twoblockinput_wrongheights (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[297, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongHeights"]], "twoblockinput_wrongmatmods (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[297, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMatMods"]], "twoblockinput_wrongmeshpoints (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[297, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMeshPoints"]], "twoblockinput_wrongxstypes (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[297, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongXSTypes"]], "testgriddedblock (class in armi.reactor.blueprints.tests.test_blockblueprints)": [[298, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockblueprints": [[298, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "test_blocklattice() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[298, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_blockLattice"]], "test_constructspatialgrid() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[298, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_constructSpatialGrid"]], "test_densityconsistentwithcomponentconstructor() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[298, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_densityConsistentWithComponentConstructor"]], "test_explicitflags() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[298, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_explicitFlags"]], "test_getlocatorsatlatticepositions() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[298, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_getLocatorsAtLatticePositions"]], "test_nonlatticecomponenthasrightmult() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[298, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_nonLatticeComponentHasRightMult"]], "testblueprints (class in armi.reactor.blueprints.tests.test_blueprints)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints"]], "testblueprintsschema (class in armi.reactor.blueprints.tests.test_blueprints)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints": [[299, "module-armi.reactor.blueprints.tests.test_blueprints"]], "test_assemblyparameters() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_assemblyParameters"]], "test_cladding_invalid() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_cladding_invalid"]], "test_componentdimensions() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_componentDimensions"]], "test_componentgroupinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_componentGroupInput"]], "test_components() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_components"]], "test_customisotopics() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_customIsotopics"]], "test_getassemblytypebyspecifier() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_getAssemblyTypeBySpecifier"]], "test_merge() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_merge"]], "test_noduplicatekeysinyamlblueprints() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_noDuplicateKeysInYamlBlueprints"]], "test_nuclideflags() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclideFlags"]], "test_nuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_nuclides"]], "test_nuclidesmc2v2() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v2"]], "test_nuclidesmc2v3() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v3"]], "test_roundtripcompletebp() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_roundTripCompleteBP"]], "test_specialisotopicvectors() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_specialIsotopicVectors"]], "test_toplevelcomponentinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_topLevelComponentInput"]], "test_tracenuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_traceNuclides"]], "test_withoutblocks() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[299, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_withoutBlocks"]], "testcomponentblueprint (class in armi.reactor.blueprints.tests.test_componentblueprint)": [[300, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentblueprint": [[300, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "componentstring (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint attribute)": [[300, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.componentString"]], "test_autodepletable() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[300, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_autoDepletable"]], "test_componentinitializationamericiumcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[300, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationAmericiumCustomIsotopics"]], "test_componentinitializationcontrolcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[300, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationControlCustomIsotopics"]], "test_componentinitializationincompleteburnchain() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[300, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationIncompleteBurnChain"]], "test_componentinitializationthoriumburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[300, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumBurnCustomIsotopics"]], "test_componentinitializationthoriumnoburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[300, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumNoBurnCustomIsotopics"]], "testcustomisotopics (class in armi.reactor.blueprints.tests.test_customisotopics)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics"]], "testcustomisotopics_errorconditions (class in armi.reactor.blueprints.tests.test_customisotopics)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions"]], "testnuclideflagsexpansion (class in armi.reactor.blueprints.tests.test_customisotopics)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customisotopics": [[301, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "test_customdensitylogsanderrors() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_customDensityLogsAndErrors"]], "test_densitiesappliedtononcustommaterials() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_densitiesAppliedToNonCustomMaterials"]], "test_densitymustbepositive() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_densityMustBePositive"]], "test_eleexpandinfobasedoncodeendf() (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.test_eleExpandInfoBasedOnCodeENDF"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_expandedNatural"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.test_expandedNatural"]], "test_infdiluteareonlynatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_infDiluteAreOnlyNatural"]], "test_massfractionsareapplied() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_massFractionsAreApplied"]], "test_nonconformantelementname() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_nonConformantElementName"]], "test_numberdensities() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensities"]], "test_numberdensitiesanchor() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensitiesAnchor"]], "test_numberdensitiescannotspecifydensity() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_numberDensitiesCannotSpecifyDensity"]], "test_numberfractions() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberFractions"]], "test_unmodified() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_unmodified"]], "yamlbadblocks (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlBadBlocks"]], "yamlgoodblocks (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlGoodBlocks"]], "yamlpreamble (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlPreamble"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlString"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion attribute)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.yamlString"]], "yamlstringwitherror (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[301, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlStringWithError"]], "testgridbproundtrip (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[302, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip"]], "testgridblueprintssection (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[302, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection"]], "testrztgridblueprint (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[302, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint"]], "armi.reactor.blueprints.tests.test_gridblueprints": [[302, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[302, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_construct"]], "test_contents() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[302, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_contents"]], "test_geomfile() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[302, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_geomFile"]], "test_roundtrip() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[302, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_roundTrip"]], "test_simpleread() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[302, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleRead"]], "test_simplereadlatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[302, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadLatticeMap"]], "test_simplereadnolatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[302, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadNoLatticeMap"]], "test_tinymap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[302, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_tinyMap"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_materialmodifications)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialmodifications": [[303, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "b4cinput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.b4cInput"]], "loadb4cassembly() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.loadB4CAssembly"]], "loaduzrassembly() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.loadUZrAssembly"]], "test_bothu235zrwtfracmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_bothU235ZrWtFracModification"]], "test_checkbycomponentmaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_checkByComponentMaterialInput"]], "test_filtermaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_filterMaterialInput"]], "test_invalidcomponentmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalidComponentModification"]], "test_invalidmatmodname() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalidMatModName"]], "test_matmodsupthemro() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_matModsUpTheMRO"]], "test_materialmodificationlength() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_materialModificationLength"]], "test_nomaterialmodifications() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_noMaterialModifications"]], "test_theoreticaldensity() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_theoreticalDensity"]], "test_u235_wt_frac_bycomponent_modification1() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification1"]], "test_u235_wt_frac_bycomponent_modification2() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification2"]], "test_u235_wt_frac_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_modification"]], "test_zrwtfracmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_zrWtFracModification"]], "uzrinput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[303, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.uZrInput"]], "testreactorblueprints (class in armi.reactor.blueprints.tests.test_reactorblueprints)": [[304, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorblueprints": [[304, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[304, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_construct"]], "test_excorestructure() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[304, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_excoreStructure"]], "test_materialdatasummary() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[304, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_materialDataSummary"]], "test_simpleread() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[304, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_simpleRead"]], "test_spentfuelpool() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[304, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_spentFuelPool"]], "dimension_names (armi.reactor.components.derivedshape attribute)": [[305, "armi.reactor.components.DerivedShape.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.nullcomponent attribute)": [[305, "armi.reactor.components.NullComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[305, "armi.reactor.components.PositiveOrNegativeVolumeComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedcomponent attribute)": [[305, "armi.reactor.components.UnshapedComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[305, "armi.reactor.components.UnshapedVolumetricComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.zeromasscomponent attribute)": [[305, "armi.reactor.components.ZeroMassComponent.DIMENSION_NAMES"]], "derivedshape (class in armi.reactor.components)": [[305, "armi.reactor.components.DerivedShape"]], "init_signature (armi.reactor.components.derivedshape attribute)": [[305, "armi.reactor.components.DerivedShape.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.nullcomponent attribute)": [[305, "armi.reactor.components.NullComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[305, "armi.reactor.components.PositiveOrNegativeVolumeComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedcomponent attribute)": [[305, "armi.reactor.components.UnshapedComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[305, "armi.reactor.components.UnshapedVolumetricComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.zeromasscomponent attribute)": [[305, "armi.reactor.components.ZeroMassComponent.INIT_SIGNATURE"]], "nullcomponent (class in armi.reactor.components)": [[305, "armi.reactor.components.NullComponent"]], "positiveornegativevolumecomponent (class in armi.reactor.components)": [[305, "armi.reactor.components.PositiveOrNegativeVolumeComponent"]], "unshapedcomponent (class in armi.reactor.components)": [[305, "armi.reactor.components.UnshapedComponent"]], "unshapedvolumetriccomponent (class in armi.reactor.components)": [[305, "armi.reactor.components.UnshapedVolumetricComponent"]], "zeromasscomponent (class in armi.reactor.components)": [[305, "armi.reactor.components.ZeroMassComponent"]], "armi.reactor.components": [[305, "module-armi.reactor.components"]], "computevolume() (armi.reactor.components.derivedshape method)": [[305, "armi.reactor.components.DerivedShape.computeVolume"]], "factory() (in module armi.reactor.components)": [[305, "armi.reactor.components.factory"]], "fromcomponent() (armi.reactor.components.unshapedcomponent static method)": [[305, "armi.reactor.components.UnshapedComponent.fromComponent"]], "getboundingcircleouterdiameter() (armi.reactor.components.derivedshape method)": [[305, "armi.reactor.components.DerivedShape.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.nullcomponent method)": [[305, "armi.reactor.components.NullComponent.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.unshapedcomponent method)": [[305, "armi.reactor.components.UnshapedComponent.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.derivedshape method)": [[305, "armi.reactor.components.DerivedShape.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedcomponent method)": [[305, "armi.reactor.components.UnshapedComponent.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedvolumetriccomponent method)": [[305, "armi.reactor.components.UnshapedVolumetricComponent.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[305, "armi.reactor.components.UnshapedVolumetricComponent.getComponentVolume"]], "getdimension() (armi.reactor.components.nullcomponent method)": [[305, "armi.reactor.components.NullComponent.getDimension"]], "getmaxvolume() (armi.reactor.components.derivedshape method)": [[305, "armi.reactor.components.DerivedShape.getMaxVolume"]], "getnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[305, "armi.reactor.components.ZeroMassComponent.getNumberDensity"]], "getvolume() (armi.reactor.components.derivedshape method)": [[305, "armi.reactor.components.DerivedShape.getVolume"]], "is3d (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[305, "armi.reactor.components.UnshapedVolumetricComponent.is3D"]], "material (armi.reactor.components.derivedshape attribute)": [[305, "armi.reactor.components.DerivedShape.material"]], "material (armi.reactor.components.nullcomponent attribute)": [[305, "armi.reactor.components.NullComponent.material"]], "material (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[305, "armi.reactor.components.PositiveOrNegativeVolumeComponent.material"]], "material (armi.reactor.components.unshapedcomponent attribute)": [[305, "armi.reactor.components.UnshapedComponent.material"]], "material (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[305, "armi.reactor.components.UnshapedVolumetricComponent.material"]], "material (armi.reactor.components.zeromasscomponent attribute)": [[305, "armi.reactor.components.ZeroMassComponent.material"]], "pdefs (armi.reactor.components.unshapedcomponent attribute)": [[305, "armi.reactor.components.UnshapedComponent.pDefs"]], "paramcollectiontype (armi.reactor.components.derivedshape attribute)": [[305, "armi.reactor.components.DerivedShape.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.nullcomponent attribute)": [[305, "armi.reactor.components.NullComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[305, "armi.reactor.components.PositiveOrNegativeVolumeComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedcomponent attribute)": [[305, "armi.reactor.components.UnshapedComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[305, "armi.reactor.components.UnshapedVolumetricComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.zeromasscomponent attribute)": [[305, "armi.reactor.components.ZeroMassComponent.paramCollectionType"]], "setnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[305, "armi.reactor.components.ZeroMassComponent.setNumberDensity"]], "setvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[305, "armi.reactor.components.UnshapedVolumetricComponent.setVolume"]], "circle (class in armi.reactor.components.basicshapes)": [[306, "armi.reactor.components.basicShapes.Circle"]], "dimension_names (armi.reactor.components.basicshapes.circle attribute)": [[306, "armi.reactor.components.basicShapes.Circle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.hexagon attribute)": [[306, "armi.reactor.components.basicShapes.Hexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.rectangle attribute)": [[306, "armi.reactor.components.basicShapes.Rectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.solidrectangle attribute)": [[306, "armi.reactor.components.basicShapes.SolidRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.square attribute)": [[306, "armi.reactor.components.basicShapes.Square.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.triangle attribute)": [[306, "armi.reactor.components.basicShapes.Triangle.DIMENSION_NAMES"]], "hexagon (class in armi.reactor.components.basicshapes)": [[306, "armi.reactor.components.basicShapes.Hexagon"]], "init_signature (armi.reactor.components.basicshapes.circle attribute)": [[306, "armi.reactor.components.basicShapes.Circle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.hexagon attribute)": [[306, "armi.reactor.components.basicShapes.Hexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.rectangle attribute)": [[306, "armi.reactor.components.basicShapes.Rectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.solidrectangle attribute)": [[306, "armi.reactor.components.basicShapes.SolidRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.square attribute)": [[306, "armi.reactor.components.basicShapes.Square.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.triangle attribute)": [[306, "armi.reactor.components.basicShapes.Triangle.INIT_SIGNATURE"]], "rectangle (class in armi.reactor.components.basicshapes)": [[306, "armi.reactor.components.basicShapes.Rectangle"]], "solidrectangle (class in armi.reactor.components.basicshapes)": [[306, "armi.reactor.components.basicShapes.SolidRectangle"]], "square (class in armi.reactor.components.basicshapes)": [[306, "armi.reactor.components.basicShapes.Square"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.circle attribute)": [[306, "armi.reactor.components.basicShapes.Circle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.hexagon attribute)": [[306, "armi.reactor.components.basicShapes.Hexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.rectangle attribute)": [[306, "armi.reactor.components.basicShapes.Rectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.solidrectangle attribute)": [[306, "armi.reactor.components.basicShapes.SolidRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.triangle attribute)": [[306, "armi.reactor.components.basicShapes.Triangle.THERMAL_EXPANSION_DIMS"]], "triangle (class in armi.reactor.components.basicshapes)": [[306, "armi.reactor.components.basicShapes.Triangle"]], "armi.reactor.components.basicshapes": [[306, "module-armi.reactor.components.basicShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.circle method)": [[306, "armi.reactor.components.basicShapes.Circle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[306, "armi.reactor.components.basicShapes.Hexagon.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[306, "armi.reactor.components.basicShapes.Rectangle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.square method)": [[306, "armi.reactor.components.basicShapes.Square.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.circle method)": [[306, "armi.reactor.components.basicShapes.Circle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[306, "armi.reactor.components.basicShapes.Hexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[306, "armi.reactor.components.basicShapes.Rectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.square method)": [[306, "armi.reactor.components.basicShapes.Square.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.basicshapes.circle method)": [[306, "armi.reactor.components.basicShapes.Circle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.hexagon method)": [[306, "armi.reactor.components.basicShapes.Hexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.rectangle method)": [[306, "armi.reactor.components.basicShapes.Rectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.solidrectangle method)": [[306, "armi.reactor.components.basicShapes.SolidRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.square method)": [[306, "armi.reactor.components.basicShapes.Square.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.triangle method)": [[306, "armi.reactor.components.basicShapes.Triangle.getComponentArea"]], "getperimeter() (armi.reactor.components.basicshapes.hexagon method)": [[306, "armi.reactor.components.basicShapes.Hexagon.getPerimeter"]], "getpitchdata() (armi.reactor.components.basicshapes.hexagon method)": [[306, "armi.reactor.components.basicShapes.Hexagon.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.rectangle method)": [[306, "armi.reactor.components.basicShapes.Rectangle.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.square method)": [[306, "armi.reactor.components.basicShapes.Square.getPitchData"]], "is3d (armi.reactor.components.basicshapes.circle attribute)": [[306, "armi.reactor.components.basicShapes.Circle.is3D"]], "is3d (armi.reactor.components.basicshapes.hexagon attribute)": [[306, "armi.reactor.components.basicShapes.Hexagon.is3D"]], "is3d (armi.reactor.components.basicshapes.rectangle attribute)": [[306, "armi.reactor.components.basicShapes.Rectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.solidrectangle attribute)": [[306, "armi.reactor.components.basicShapes.SolidRectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.square attribute)": [[306, "armi.reactor.components.basicShapes.Square.is3D"]], "is3d (armi.reactor.components.basicshapes.triangle attribute)": [[306, "armi.reactor.components.basicShapes.Triangle.is3D"]], "isencapsulatedby() (armi.reactor.components.basicshapes.circle method)": [[306, "armi.reactor.components.basicShapes.Circle.isEncapsulatedBy"]], "islatticecomponent() (armi.reactor.components.basicshapes.rectangle method)": [[306, "armi.reactor.components.basicShapes.Rectangle.isLatticeComponent"]], "material (armi.reactor.components.basicshapes.circle attribute)": [[306, "armi.reactor.components.basicShapes.Circle.material"]], "material (armi.reactor.components.basicshapes.hexagon attribute)": [[306, "armi.reactor.components.basicShapes.Hexagon.material"]], "material (armi.reactor.components.basicshapes.rectangle attribute)": [[306, "armi.reactor.components.basicShapes.Rectangle.material"]], "material (armi.reactor.components.basicshapes.solidrectangle attribute)": [[306, "armi.reactor.components.basicShapes.SolidRectangle.material"]], "material (armi.reactor.components.basicshapes.square attribute)": [[306, "armi.reactor.components.basicShapes.Square.material"]], "material (armi.reactor.components.basicshapes.triangle attribute)": [[306, "armi.reactor.components.basicShapes.Triangle.material"]], "pdefs (armi.reactor.components.basicshapes.circle attribute)": [[306, "armi.reactor.components.basicShapes.Circle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.hexagon attribute)": [[306, "armi.reactor.components.basicShapes.Hexagon.pDefs"]], "pdefs (armi.reactor.components.basicshapes.rectangle attribute)": [[306, "armi.reactor.components.basicShapes.Rectangle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.triangle attribute)": [[306, "armi.reactor.components.basicShapes.Triangle.pDefs"]], "paramcollectiontype (armi.reactor.components.basicshapes.circle attribute)": [[306, "armi.reactor.components.basicShapes.Circle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.hexagon attribute)": [[306, "armi.reactor.components.basicShapes.Hexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.rectangle attribute)": [[306, "armi.reactor.components.basicShapes.Rectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.solidrectangle attribute)": [[306, "armi.reactor.components.basicShapes.SolidRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.square attribute)": [[306, "armi.reactor.components.basicShapes.Square.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.triangle attribute)": [[306, "armi.reactor.components.basicShapes.Triangle.paramCollectionType"]], "dimension_names (armi.reactor.components.complexshapes.helix attribute)": [[307, "armi.reactor.components.complexShapes.Helix.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[307, "armi.reactor.components.complexShapes.HexHoledCircle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedhexagon attribute)": [[307, "armi.reactor.components.complexShapes.HoledHexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedrectangle attribute)": [[307, "armi.reactor.components.complexShapes.HoledRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedsquare attribute)": [[307, "armi.reactor.components.complexShapes.HoledSquare.DIMENSION_NAMES"]], "helix (class in armi.reactor.components.complexshapes)": [[307, "armi.reactor.components.complexShapes.Helix"]], "hexholedcircle (class in armi.reactor.components.complexshapes)": [[307, "armi.reactor.components.complexShapes.HexHoledCircle"]], "holedhexagon (class in armi.reactor.components.complexshapes)": [[307, "armi.reactor.components.complexShapes.HoledHexagon"]], "holedrectangle (class in armi.reactor.components.complexshapes)": [[307, "armi.reactor.components.complexShapes.HoledRectangle"]], "holedsquare (class in armi.reactor.components.complexshapes)": [[307, "armi.reactor.components.complexShapes.HoledSquare"]], "init_signature (armi.reactor.components.complexshapes.helix attribute)": [[307, "armi.reactor.components.complexShapes.Helix.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[307, "armi.reactor.components.complexShapes.HexHoledCircle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedhexagon attribute)": [[307, "armi.reactor.components.complexShapes.HoledHexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedrectangle attribute)": [[307, "armi.reactor.components.complexShapes.HoledRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedsquare attribute)": [[307, "armi.reactor.components.complexShapes.HoledSquare.INIT_SIGNATURE"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.helix attribute)": [[307, "armi.reactor.components.complexShapes.Helix.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[307, "armi.reactor.components.complexShapes.HexHoledCircle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedhexagon attribute)": [[307, "armi.reactor.components.complexShapes.HoledHexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedrectangle attribute)": [[307, "armi.reactor.components.complexShapes.HoledRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedsquare attribute)": [[307, "armi.reactor.components.complexShapes.HoledSquare.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.complexshapes": [[307, "module-armi.reactor.components.complexShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.complexshapes.helix method)": [[307, "armi.reactor.components.complexShapes.Helix.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.helix method)": [[307, "armi.reactor.components.complexShapes.Helix.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.hexholedcircle method)": [[307, "armi.reactor.components.complexShapes.HexHoledCircle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedhexagon method)": [[307, "armi.reactor.components.complexShapes.HoledHexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedrectangle method)": [[307, "armi.reactor.components.complexShapes.HoledRectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedsquare method)": [[307, "armi.reactor.components.complexShapes.HoledSquare.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.complexshapes.helix method)": [[307, "armi.reactor.components.complexShapes.Helix.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.hexholedcircle method)": [[307, "armi.reactor.components.complexShapes.HexHoledCircle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedhexagon method)": [[307, "armi.reactor.components.complexShapes.HoledHexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedrectangle method)": [[307, "armi.reactor.components.complexShapes.HoledRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedsquare method)": [[307, "armi.reactor.components.complexShapes.HoledSquare.getComponentArea"]], "is3d (armi.reactor.components.complexshapes.helix attribute)": [[307, "armi.reactor.components.complexShapes.Helix.is3D"]], "material (armi.reactor.components.complexshapes.helix attribute)": [[307, "armi.reactor.components.complexShapes.Helix.material"]], "material (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[307, "armi.reactor.components.complexShapes.HexHoledCircle.material"]], "material (armi.reactor.components.complexshapes.holedhexagon attribute)": [[307, "armi.reactor.components.complexShapes.HoledHexagon.material"]], "material (armi.reactor.components.complexshapes.holedrectangle attribute)": [[307, "armi.reactor.components.complexShapes.HoledRectangle.material"]], "material (armi.reactor.components.complexshapes.holedsquare attribute)": [[307, "armi.reactor.components.complexShapes.HoledSquare.material"]], "pdefs (armi.reactor.components.complexshapes.helix attribute)": [[307, "armi.reactor.components.complexShapes.Helix.pDefs"]], "pdefs (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[307, "armi.reactor.components.complexShapes.HexHoledCircle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedhexagon attribute)": [[307, "armi.reactor.components.complexShapes.HoledHexagon.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedrectangle attribute)": [[307, "armi.reactor.components.complexShapes.HoledRectangle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedsquare attribute)": [[307, "armi.reactor.components.complexShapes.HoledSquare.pDefs"]], "paramcollectiontype (armi.reactor.components.complexshapes.helix attribute)": [[307, "armi.reactor.components.complexShapes.Helix.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[307, "armi.reactor.components.complexShapes.HexHoledCircle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedhexagon attribute)": [[307, "armi.reactor.components.complexShapes.HoledHexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedrectangle attribute)": [[307, "armi.reactor.components.complexShapes.HoledRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedsquare attribute)": [[307, "armi.reactor.components.complexShapes.HoledSquare.paramCollectionType"]], "component (class in armi.reactor.components.component)": [[308, "armi.reactor.components.component.Component"]], "componenttype (class in armi.reactor.components.component)": [[308, "armi.reactor.components.component.ComponentType"]], "dimension_names (armi.reactor.components.component.component attribute)": [[308, "armi.reactor.components.component.Component.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.component.shapedcomponent attribute)": [[308, "armi.reactor.components.component.ShapedComponent.DIMENSION_NAMES"]], "init_signature (armi.reactor.components.component.component attribute)": [[308, "armi.reactor.components.component.Component.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.component.shapedcomponent attribute)": [[308, "armi.reactor.components.component.ShapedComponent.INIT_SIGNATURE"]], "non_dimension_names (armi.reactor.components.component.componenttype attribute)": [[308, "armi.reactor.components.component.ComponentType.NON_DIMENSION_NAMES"]], "shapedcomponent (class in armi.reactor.components.component)": [[308, "armi.reactor.components.component.ShapedComponent"]], "thermal_expansion_dims (armi.reactor.components.component.component attribute)": [[308, "armi.reactor.components.component.Component.THERMAL_EXPANSION_DIMS"]], "types (armi.reactor.components.component.componenttype attribute)": [[308, "armi.reactor.components.component.ComponentType.TYPES"]], "adjustdensityforheightexpansion() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.adjustDensityForHeightExpansion"]], "adjustmassenrichment() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.adjustMassEnrichment"]], "applymaterialmassfracstonumberdensities() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.applyMaterialMassFracsToNumberDensities"]], "armi.reactor.components.component": [[308, "module-armi.reactor.components.component"]], "backup() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.backUp"]], "clearcache() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.clearCache"]], "clearlinkedcache() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.clearLinkedCache"]], "componenttypeisvalid() (in module armi.reactor.components.component)": [[308, "armi.reactor.components.component.componentTypeIsValid"]], "computevolume() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.computeVolume"]], "containssolidmaterial() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.containsSolidMaterial"]], "containsvoidmaterial() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.containsVoidMaterial"]], "density() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.density"]], "dimensionislinked() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.dimensionIsLinked"]], "finalizeloadingfromdb() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.finalizeLoadingFromDB"]], "gasporosity (armi.reactor.components.component.component property)": [[308, "armi.reactor.components.component.Component.gasPorosity"]], "getarea() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getArea"]], "getboundingcircleouterdiameter() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getComponentVolume"]], "getdimension() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getDimension"]], "getdimensionnameslinkedto() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getDimensionNamesLinkedTo"]], "getenrichment() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getEnrichment"]], "getfuelmass() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getFuelMass"]], "getheightfactor() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getHeightFactor"]], "getintegratedmgflux() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getIntegratedMgFlux"]], "getlinkedcomponents() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getLinkedComponents"]], "getlumpedfissionproductcollection() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getLumpedFissionProductCollection"]], "getmass() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getMass"]], "getmassenrichment() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getMassEnrichment"]], "getmicrosuffix() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getMicroSuffix"]], "getnuclidenumberdensities() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getNuclides"]], "getnumberdensity() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getNumberDensity"]], "getpinmgfluxes() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getPinMgFluxes"]], "getpitchdata() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getPitchData"]], "getproperties() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getProperties"]], "getthermalexpansionfactor() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getThermalExpansionFactor"]], "getvolume() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.getVolume"]], "is3d (armi.reactor.components.component.component attribute)": [[308, "armi.reactor.components.component.Component.is3D"]], "itercomponents() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.iterComponents"]], "liquidporosity (armi.reactor.components.component.component property)": [[308, "armi.reactor.components.component.Component.liquidPorosity"]], "material (armi.reactor.components.component.component attribute)": [[308, "armi.reactor.components.component.Component.material"]], "material (armi.reactor.components.component.shapedcomponent attribute)": [[308, "armi.reactor.components.component.ShapedComponent.material"]], "mergenuclidesinto() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.mergeNuclidesInto"]], "pdefs (armi.reactor.components.component.component attribute)": [[308, "armi.reactor.components.component.Component.pDefs"]], "paramcollectiontype (armi.reactor.components.component.component attribute)": [[308, "armi.reactor.components.component.Component.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.component.shapedcomponent attribute)": [[308, "armi.reactor.components.component.ShapedComponent.paramCollectionType"]], "printcontents() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.printContents"]], "resolvelinkeddims() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.resolveLinkedDims"]], "restorebackup() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.restoreBackup"]], "setarea() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.setArea"]], "setdimension() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.setDimension"]], "setdimensionreport() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.setDimensionReport"]], "setlink() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.setLink"]], "setlumpedfissionproducts() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.setLumpedFissionProducts"]], "setname() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.setName"]], "setnumberdensities() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.setNumberDensities"]], "setnumberdensity() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.setNumberDensity"]], "setproperties() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.setProperties"]], "settemperature() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.setTemperature"]], "setvolume() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.setVolume"]], "temperatureinc (armi.reactor.components.component.component property)": [[308, "armi.reactor.components.component.Component.temperatureInC"]], "temperatureink (armi.reactor.components.component.component property)": [[308, "armi.reactor.components.component.Component.temperatureInK"]], "updatedims() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.updateDims"]], "updatenumberdensities() (armi.reactor.components.component.component method)": [[308, "armi.reactor.components.component.Component.updateNumberDensities"]], "armi.reactor.components.componentparameters": [[309, "module-armi.reactor.components.componentParameters"]], "getcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[309, "armi.reactor.components.componentParameters.getCircleParameterDefinitions"]], "getcomponentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[309, "armi.reactor.components.componentParameters.getComponentParameterDefinitions"]], "getcubeparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[309, "armi.reactor.components.componentParameters.getCubeParameterDefinitions"]], "gethelixparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[309, "armi.reactor.components.componentParameters.getHelixParameterDefinitions"]], "gethexholedcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[309, "armi.reactor.components.componentParameters.getHexHoledCircleParameterDefinitions"]], "gethexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[309, "armi.reactor.components.componentParameters.getHexagonParameterDefinitions"]], "getholedhexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[309, "armi.reactor.components.componentParameters.getHoledHexagonParameterDefinitions"]], "getholedrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[309, "armi.reactor.components.componentParameters.getHoledRectangleParameterDefinitions"]], "getradialsegmentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[309, "armi.reactor.components.componentParameters.getRadialSegmentParameterDefinitions"]], "getrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[309, "armi.reactor.components.componentParameters.getRectangleParameterDefinitions"]], "gettriangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[309, "armi.reactor.components.componentParameters.getTriangleParameterDefinitions"]], "getunshapedparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[309, "armi.reactor.components.componentParameters.getUnshapedParameterDefinitions"]], "cube (class in armi.reactor.components.volumetricshapes)": [[310, "armi.reactor.components.volumetricShapes.Cube"]], "dimension_names (armi.reactor.components.volumetricshapes.cube attribute)": [[310, "armi.reactor.components.volumetricShapes.Cube.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.RadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.sphere attribute)": [[310, "armi.reactor.components.volumetricShapes.Sphere.DIMENSION_NAMES"]], "differentialradialsegment (class in armi.reactor.components.volumetricshapes)": [[310, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment"]], "init_signature (armi.reactor.components.volumetricshapes.cube attribute)": [[310, "armi.reactor.components.volumetricShapes.Cube.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.RadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.sphere attribute)": [[310, "armi.reactor.components.volumetricShapes.Sphere.INIT_SIGNATURE"]], "radialsegment (class in armi.reactor.components.volumetricshapes)": [[310, "armi.reactor.components.volumetricShapes.RadialSegment"]], "sphere (class in armi.reactor.components.volumetricshapes)": [[310, "armi.reactor.components.volumetricShapes.Sphere"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.cube attribute)": [[310, "armi.reactor.components.volumetricShapes.Cube.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.RadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.sphere attribute)": [[310, "armi.reactor.components.volumetricShapes.Sphere.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.volumetricshapes": [[310, "module-armi.reactor.components.volumetricShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.radialsegment method)": [[310, "armi.reactor.components.volumetricShapes.RadialSegment.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.sphere method)": [[310, "armi.reactor.components.volumetricShapes.Sphere.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.cube method)": [[310, "armi.reactor.components.volumetricShapes.Cube.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[310, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.radialsegment method)": [[310, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.sphere method)": [[310, "armi.reactor.components.volumetricShapes.Sphere.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.cube method)": [[310, "armi.reactor.components.volumetricShapes.Cube.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[310, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.radialsegment method)": [[310, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.sphere method)": [[310, "armi.reactor.components.volumetricShapes.Sphere.getComponentVolume"]], "is3d (armi.reactor.components.volumetricshapes.cube attribute)": [[310, "armi.reactor.components.volumetricShapes.Cube.is3D"]], "is3d (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.RadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.sphere attribute)": [[310, "armi.reactor.components.volumetricShapes.Sphere.is3D"]], "material (armi.reactor.components.volumetricshapes.cube attribute)": [[310, "armi.reactor.components.volumetricShapes.Cube.material"]], "material (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.material"]], "material (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.RadialSegment.material"]], "material (armi.reactor.components.volumetricshapes.sphere attribute)": [[310, "armi.reactor.components.volumetricShapes.Sphere.material"]], "pdefs (armi.reactor.components.volumetricshapes.cube attribute)": [[310, "armi.reactor.components.volumetricShapes.Cube.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.RadialSegment.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.sphere attribute)": [[310, "armi.reactor.components.volumetricShapes.Sphere.pDefs"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.cube attribute)": [[310, "armi.reactor.components.volumetricShapes.Cube.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[310, "armi.reactor.components.volumetricShapes.RadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.sphere attribute)": [[310, "armi.reactor.components.volumetricShapes.Sphere.paramCollectionType"]], "updatedims() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[310, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.updateDims"]], "armiobject (class in armi.reactor.composites)": [[311, "armi.reactor.composites.ArmiObject"]], "composite (class in armi.reactor.composites)": [[311, "armi.reactor.composites.Composite"]], "compositemodeltype (class in armi.reactor.composites)": [[311, "armi.reactor.composites.CompositeModelType"]], "flagserializer (class in armi.reactor.composites)": [[311, "armi.reactor.composites.FlagSerializer"]], "stateretainer (class in armi.reactor.composites)": [[311, "armi.reactor.composites.StateRetainer"]], "types (armi.reactor.composites.compositemodeltype attribute)": [[311, "armi.reactor.composites.CompositeModelType.TYPES"]], "add() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.add"]], "addmass() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.addMass"]], "addmasses() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.addMasses"]], "adjustmassenrichment() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.adjustMassEnrichment"]], "adjustmassfrac() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.adjustMassFrac"]], "append() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.append"]], "armi.reactor.composites": [[311, "module-armi.reactor.composites"]], "backup() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.backUp"]], "calcavgparam() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.calcAvgParam"]], "calctotalparam() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.calcTotalParam"]], "changendensbyfactor() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.changeNDensByFactor"]], "clearcache() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.clearCache"]], "clearnumberdensities() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.clearNumberDensities"]], "constituentreport() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.constituentReport"]], "containsatleastonechildwithflags() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.containsAtLeastOneChildWithFlags"]], "containsheavymetal() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.containsHeavyMetal"]], "containsonlychildrenwithflags() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.containsOnlyChildrenWithFlags"]], "copyparamsfrom() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.copyParamsFrom"]], "copyparamstochildren() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.copyParamsToChildren"]], "density() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.density"]], "dochildrenhaveflags() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.doChildrenHaveFlags"]], "duplicate() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.duplicate"]], "expandallelementalstoisotopics() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.expandAllElementalsToIsotopics"]], "expandelementaltoisotopics() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.expandElementalToIsotopics"]], "extend() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.extend"]], "gathermaterialsbyvolume() (in module armi.reactor.composites)": [[311, "armi.reactor.composites.gatherMaterialsByVolume"]], "getancestor() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getAncestor"]], "getancestoranddistance() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getAncestorAndDistance"]], "getancestorwithflags() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getAncestorWithFlags"]], "getarea() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getArea"]], "getatomicweight() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getAtomicWeight"]], "getaveragetempinc() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getAverageTempInC"]], "getboundingcircleouterdiameter() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.getBoundingCircleOuterDiameter"]], "getboundingindices() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getBoundingIndices"]], "getchildparamvalues() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getChildParamValues"]], "getchildren() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getChildren"]], "getchildren() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.getChildren"]], "getchildrenoftype() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.getChildrenOfType"]], "getchildrenwithflags() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getChildrenWithFlags"]], "getchildrenwithflags() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.getChildrenWithFlags"]], "getchildrenwithnuclides() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getChildrenWithNuclides"]], "getcomponent() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getComponent"]], "getcomponentbyname() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getComponentByName"]], "getcomponentnames() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getComponentNames"]], "getcomponents() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getComponents"]], "getcomponents() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.getComponents"]], "getcomponentsofmaterial() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getComponentsOfMaterial"]], "getcomponentsofshape() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getComponentsOfShape"]], "getdominantmaterial() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getDominantMaterial"]], "getdominantmaterial() (in module armi.reactor.composites)": [[311, "armi.reactor.composites.getDominantMaterial"]], "getfpmass() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getFPMass"]], "getfissilemass() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getFissileMass"]], "getfissilemassenrich() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getFissileMassEnrich"]], "getfuelmass() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getFuelMass"]], "gethmdens() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getHMDens"]], "gethmmass() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getHMMass"]], "gethmmoles() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getHMMoles"]], "getintegratedmgflux() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getIntegratedMgFlux"]], "getintegratedmgflux() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.getIntegratedMgFlux"]], "getlumpedfissionproductcollection() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getLumpedFissionProductCollection"]], "getlumpedfissionproductcollection() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.getLumpedFissionProductCollection"]], "getlumpedfissionproductsifnecessary() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.getLumpedFissionProductsIfNecessary"]], "getmass() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getMass"]], "getmassfrac() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getMassFrac"]], "getmassfracs() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getMassFracs"]], "getmasses() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getMasses"]], "getmaxarea() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getMaxArea"]], "getmaxparam() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getMaxParam"]], "getmgflux() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getMgFlux"]], "getmicrosuffix() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getMicroSuffix"]], "getminparam() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getMinParam"]], "getname() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getName"]], "getnuclidenumberdensities() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getNuclides"]], "getnumcomponents() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getNumComponents"]], "getnumberdensities() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getNumberDensities"]], "getnumberdensity() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getNumberDensity"]], "getnumberofatoms() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getNumberOfAtoms"]], "getparamnames() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getParamNames"]], "getparametercollection() (armi.reactor.composites.armiobject class method)": [[311, "armi.reactor.composites.ArmiObject.getParameterCollection"]], "getpumoles() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.getPuMoles"]], "getreactionratedict() (in module armi.reactor.composites)": [[311, "armi.reactor.composites.getReactionRateDict"]], "getreactionrates() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.getReactionRates"]], "getsymmetryfactor() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getSymmetryFactor"]], "gettotalndens() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getTotalNDens"]], "gettype() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getType"]], "geturaniumnumenrich() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getUraniumNumEnrich"]], "getvolume() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getVolume"]], "getvolumefraction() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getVolumeFraction"]], "getvolumefractions() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.getVolumeFractions"]], "hascomponents() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.hasComponents"]], "hasflags() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.hasFlags"]], "index() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.index"]], "insert() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.insert"]], "isfuel() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.isFuel"]], "itercomponents() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.iterComponents"]], "itercomponents() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.iterComponents"]], "moveto() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.moveTo"]], "namecontains() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.nameContains"]], "pdefs (armi.reactor.composites.armiobject attribute)": [[311, "armi.reactor.composites.ArmiObject.pDefs"]], "pack() (armi.reactor.composites.flagserializer static method)": [[311, "armi.reactor.composites.FlagSerializer.pack"]], "paramcollectiontype (armi.reactor.composites.armiobject attribute)": [[311, "armi.reactor.composites.ArmiObject.paramCollectionType"]], "paramcollectiontype (armi.reactor.composites.composite attribute)": [[311, "armi.reactor.composites.Composite.paramCollectionType"]], "printcontents() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.printContents"]], "remove() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.remove"]], "removeall() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.removeAll"]], "removemass() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.removeMass"]], "requireslumpedfissionproducts() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.requiresLumpedFissionProducts"]], "resolvelinkeddims() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.resolveLinkedDims"]], "restorebackup() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.restoreBackup"]], "retainstate() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.retainState"]], "setchildren() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.setChildren"]], "setchildrenlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.setChildrenLumpedFissionProducts"]], "setcomponentdimensionsreport() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.setComponentDimensionsReport"]], "setlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.setLumpedFissionProducts"]], "setmass() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.setMass"]], "setmassfrac() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.setMassFrac"]], "setmassfracs() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.setMassFracs"]], "setmasses() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.setMasses"]], "setname() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.setName"]], "setnumberdensities() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.setNumberDensities"]], "setnumberdensity() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.setNumberDensity"]], "settype() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.setType"]], "sort() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.sort"]], "syncmpistate() (armi.reactor.composites.composite method)": [[311, "armi.reactor.composites.Composite.syncMpiState"]], "unpack() (armi.reactor.composites.flagserializer class method)": [[311, "armi.reactor.composites.FlagSerializer.unpack"]], "updatenumberdensities() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.updateNumberDensities"]], "updateparamsfrom() (armi.reactor.composites.armiobject method)": [[311, "armi.reactor.composites.ArmiObject.updateParamsFrom"]], "version (armi.reactor.composites.flagserializer attribute)": [[311, "armi.reactor.composites.FlagSerializer.version"]], "armi.reactor.converters": [[312, "module-armi.reactor.converters"]], "armi.reactor.converters.axialexpansionchanger": [[313, "module-armi.reactor.converters.axialExpansionChanger"]], "assemblyaxiallinkage (class in armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage)": [[314, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage"]], "axiallink (class in armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage)": [[314, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AxialLink"]], "areaxiallylinked() (armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage.assemblyaxiallinkage static method)": [[314, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage.areAxiallyLinked"]], "areaxiallylinked() (in module armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage)": [[314, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.areAxiallyLinked"]], "armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage": [[314, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"]], "getlinkedblocks() (armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage.assemblyaxiallinkage class method)": [[314, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage.getLinkedBlocks"]], "linkedblocks (armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage.assemblyaxiallinkage attribute)": [[314, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage.linkedBlocks"]], "linkedcomponents (armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage.assemblyaxiallinkage attribute)": [[314, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage.linkedComponents"]], "lower (armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage.axiallink attribute)": [[314, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AxialLink.lower"]], "upper (armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage.axiallink attribute)": [[314, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AxialLink.upper"]], "axialexpansionchanger (class in armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger"]], "applycoldheightmassincrease() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.applyColdHeightMassIncrease"]], "armi.reactor.converters.axialexpansionchanger.axialexpansionchanger": [[315, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"]], "axiallyexpandassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.axiallyExpandAssembly"]], "expandcolddimstohot() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger class method)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.expandColdDimsToHot"]], "expansiondata (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger attribute)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.expansionData"]], "getdefaultreferenceassem() (in module armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.getDefaultReferenceAssem"]], "linked (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger attribute)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.linked"]], "makeassemsabletosnaptouniformmesh() (in module armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.makeAssemsAbleToSnapToUniformMesh"]], "managecoremesh() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.manageCoreMesh"]], "performprescribedaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.performPrescribedAxialExpansion"]], "performthermalaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.performThermalAxialExpansion"]], "reset() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.reset"]], "setassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[315, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.setAssembly"]], "expansiondata (class in armi.reactor.converters.axialexpansionchanger.expansiondata)": [[316, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData"]], "armi.reactor.converters.axialexpansionchanger.expansiondata": [[316, "module-armi.reactor.converters.axialExpansionChanger.expansionData"]], "componentreferencetemperature (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata attribute)": [[316, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.componentReferenceTemperature"]], "computethermalexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[316, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.computeThermalExpansionFactors"]], "determinetargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[316, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.determineTargetComponent"]], "getexpansionfactor() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[316, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.getExpansionFactor"]], "getsolidcomponents() (in module armi.reactor.converters.axialexpansionchanger.expansiondata)": [[316, "armi.reactor.converters.axialExpansionChanger.expansionData.getSolidComponents"]], "istargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[316, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.isTargetComponent"]], "itersolidcomponents() (in module armi.reactor.converters.axialexpansionchanger.expansiondata)": [[316, "armi.reactor.converters.axialExpansionChanger.expansionData.iterSolidComponents"]], "setexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[316, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.setExpansionFactors"]], "updatecomponenttemp() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[316, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.updateComponentTemp"]], "updatecomponenttempsby1dtempfield() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[316, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.updateComponentTempsBy1DTempField"]], "blockavgtocylconverter (class in armi.reactor.converters.blockconverters)": [[317, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter"]], "blockconverter (class in armi.reactor.converters.blockconverters)": [[317, "armi.reactor.converters.blockConverters.BlockConverter"]], "componentmerger (class in armi.reactor.converters.blockconverters)": [[317, "armi.reactor.converters.blockConverters.ComponentMerger"]], "hexcomponentstocylconverter (class in armi.reactor.converters.blockconverters)": [[317, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter"]], "multiplecomponentmerger (class in armi.reactor.converters.blockconverters)": [[317, "armi.reactor.converters.blockConverters.MultipleComponentMerger"]], "armi.reactor.converters.blockconverters": [[317, "module-armi.reactor.converters.blockConverters"]], "convert() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[317, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.blockconverter method)": [[317, "armi.reactor.converters.blockConverters.BlockConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.componentmerger method)": [[317, "armi.reactor.converters.blockConverters.ComponentMerger.convert"]], "convert() (armi.reactor.converters.blockconverters.hexcomponentstocylconverter method)": [[317, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.multiplecomponentmerger method)": [[317, "armi.reactor.converters.blockConverters.MultipleComponentMerger.convert"]], "dissolvecomponentintocomponent() (armi.reactor.converters.blockconverters.blockconverter method)": [[317, "armi.reactor.converters.blockConverters.BlockConverter.dissolveComponentIntoComponent"]], "getouterdiamfromidandarea() (in module armi.reactor.converters.blockconverters)": [[317, "armi.reactor.converters.blockConverters.getOuterDiamFromIDAndArea"]], "plotconvertedblock() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[317, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.plotConvertedBlock"]], "radiifromhexpitches() (in module armi.reactor.converters.blockconverters)": [[317, "armi.reactor.converters.blockConverters.radiiFromHexPitches"]], "radiifromhexsides() (in module armi.reactor.converters.blockconverters)": [[317, "armi.reactor.converters.blockConverters.radiiFromHexSides"]], "radiifromringofrods() (in module armi.reactor.converters.blockconverters)": [[317, "armi.reactor.converters.blockConverters.radiiFromRingOfRods"]], "restablishlinks() (armi.reactor.converters.blockconverters.blockconverter method)": [[317, "armi.reactor.converters.blockConverters.BlockConverter.restablishLinks"]], "stripcomponents() (in module armi.reactor.converters.blockconverters)": [[317, "armi.reactor.converters.blockConverters.stripComponents"]], "expected_input_symmetry (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger attribute)": [[318, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.EXPECTED_INPUT_SYMMETRY"]], "edgeassemblychanger (class in armi.reactor.converters.geometryconverters)": [[318, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger"]], "fuelassemnummodifier (class in armi.reactor.converters.geometryconverters)": [[318, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier"]], "geometrychanger (class in armi.reactor.converters.geometryconverters)": [[318, "armi.reactor.converters.geometryConverters.GeometryChanger"]], "geometryconverter (class in armi.reactor.converters.geometryconverters)": [[318, "armi.reactor.converters.geometryConverters.GeometryConverter"]], "hextorzconverter (class in armi.reactor.converters.geometryconverters)": [[318, "armi.reactor.converters.geometryConverters.HexToRZConverter"]], "hextorzthetaconverter (class in armi.reactor.converters.geometryconverters)": [[318, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter"]], "thirdcorehextofullcorechanger (class in armi.reactor.converters.geometryconverters)": [[318, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger"]], "addedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[318, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.addEdgeAssemblies"]], "addring() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[318, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.addRing"]], "armi.reactor.converters.geometryconverters": [[318, "module-armi.reactor.converters.geometryConverters"]], "convert() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[318, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.convert"]], "convert() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[318, "armi.reactor.converters.geometryConverters.GeometryChanger.convert"]], "convert() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[318, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.convert"]], "convert() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[318, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.convert"]], "createhomogenizedrztblock() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[318, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.createHomogenizedRZTBlock"]], "plotconvertedreactor() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[318, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.plotConvertedReactor"]], "removeedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[318, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.removeEdgeAssemblies"]], "reset() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[318, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.reset"]], "reset() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[318, "armi.reactor.converters.geometryConverters.GeometryChanger.reset"]], "reset() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[318, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.reset"]], "restorepreviousgeometry() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[318, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.restorePreviousGeometry"]], "scaleparamsrelatedtosymmetry() (armi.reactor.converters.geometryconverters.edgeassemblychanger static method)": [[318, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.scaleParamsRelatedToSymmetry"]], "meshconverter (class in armi.reactor.converters.meshconverters)": [[319, "armi.reactor.converters.meshConverters.MeshConverter"]], "rzthetareactormeshconverter (class in armi.reactor.converters.meshconverters)": [[319, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter"]], "rzthetareactormeshconverterbyringcompositionaxialbins (class in armi.reactor.converters.meshconverters)": [[319, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialBins"]], "rzthetareactormeshconverterbyringcompositionaxialcoordinates (class in armi.reactor.converters.meshconverters)": [[319, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"]], "rzthetareactormeshconverterbyringcompositionaxialflags (class in armi.reactor.converters.meshconverters)": [[319, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialFlags"]], "armi.reactor.converters.meshconverters": [[319, "module-armi.reactor.converters.meshConverters"]], "checklastvalueinlist() (in module armi.reactor.converters.meshconverters)": [[319, "armi.reactor.converters.meshConverters.checkLastValueInList"]], "checklistbounds() (in module armi.reactor.converters.meshconverters)": [[319, "armi.reactor.converters.meshConverters.checkListBounds"]], "generatebins() (in module armi.reactor.converters.meshconverters)": [[319, "armi.reactor.converters.meshConverters.generateBins"]], "generatemesh() (armi.reactor.converters.meshconverters.meshconverter method)": [[319, "armi.reactor.converters.meshConverters.MeshConverter.generateMesh"]], "generatemesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[319, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.generateMesh"]], "setaxialmesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[319, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setAxialMesh"]], "setringstoconvert() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[319, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setRingsToConvert"]], "setthetamesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[319, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setThetaMesh"]], "writemeshdata() (armi.reactor.converters.meshconverters.meshconverter method)": [[319, "armi.reactor.converters.meshConverters.MeshConverter.writeMeshData"]], "writemeshdata() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[319, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.writeMeshData"]], "armi.reactor.converters.parametersweeps": [[320, "module-armi.reactor.converters.parameterSweeps"]], "neutronicconvergencemodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[321, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier"]], "priority (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter attribute)": [[321, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.PRIORITY"]], "parametersweepconverter (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[321, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter"]], "settingsmodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[321, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier"]], "armi.reactor.converters.parametersweeps.generalparametersweepconverters": [[321, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.neutronicconvergencemodifier method)": [[321, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter method)": [[321, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.settingsmodifier method)": [[321, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier.convert"]], "adjustcladthicknessbyid() (in module armi.reactor.converters.pintypeblockconverters)": [[322, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByID"]], "adjustcladthicknessbyod() (in module armi.reactor.converters.pintypeblockconverters)": [[322, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByOD"]], "adjustsmeardensity() (in module armi.reactor.converters.pintypeblockconverters)": [[322, "armi.reactor.converters.pinTypeBlockConverters.adjustSmearDensity"]], "armi.reactor.converters.pintypeblockconverters": [[322, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests": [[323, "module-armi.reactor.converters.tests"]], "axialexpansiontestbase (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase"]], "fakemat (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat"]], "fakematexception (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException"]], "steel_component_lst (armi.reactor.converters.tests.test_axialexpansionchanger.axialexpansiontestbase attribute)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase.Steel_Component_Lst"]], "temperature (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.Temperature"]], "testaxialexpansionheight (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight"]], "testaxiallinkhelper (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialLinkHelper"]], "testblocklink (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestBlockLink"]], "testcomponentlinks (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks"]], "testconservation (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation"]], "testdeterminetargetcomponent (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent"]], "testexceptions (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions"]], "testgetsolidcomponents (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents"]], "testinputheightsconsideredhot (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot"]], "testmanagecoremesh (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh"]], "armi.reactor.converters.tests.test_axialexpansionchanger": [[324, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "buildtestassemblywithfakematerial() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.buildTestAssemblyWithFakeMaterial"]], "checkcoldblockheight() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.checkColdBlockHeight"]], "checkcoldheightblockmass() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.checkColdHeightBlockMass"]], "complexconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.complexConservationTest"]], "expandassemformassconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.expandAssemForMassConservationTest"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.linearExpansionPercent"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.linearExpansionPercent"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat attribute)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.name"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception attribute)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.name"]], "runtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.runTest"]], "test_annularhexoverlappingthickannularhex() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_AnnularHexOverlappingThickAnnularHex"]], "test_assemblyaxialexpansionexception() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_AssemblyAxialExpansionException"]], "test_assemblyaxialexpansionheight() (armi.reactor.converters.tests.test_axialexpansionchanger.testaxialexpansionheight method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight.test_AssemblyAxialExpansionHeight"]], "test_annularpinnotoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_annularPinNotOverlappingWithAnnulus"]], "test_annularpinoverlappingwithannuls() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_annularPinOverlappingWithAnnuls"]], "test_coldassemblyexpansion() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.test_coldAssemblyExpansion"]], "test_componentconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testmanagecoremesh method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh.test_componentConservation"]], "test_computethermalexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_computeThermalExpansionFactors"]], "test_construct() (armi.reactor.converters.tests.test_axialexpansionchanger.testaxiallinkhelper method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialLinkHelper.test_construct"]], "test_determinelinked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_determineLinked"]], "test_determinetargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponent"]], "test_determinetargetcomponentblockwithmultipleflags() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponentBlockWithMultipleFlags"]], "test_differentmultnotoverlapping() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_differentMultNotOverlapping"]], "test_emptyblocks() (armi.reactor.converters.tests.test_axialexpansionchanger.testblocklink method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestBlockLink.test_emptyBlocks"]], "test_getlinkedcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_getLinkedComponents"]], "test_getsolidcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testgetsolidcomponents method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents.test_getSolidComponents"]], "test_isfuellocked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isFuelLocked"]], "test_istopdummyblockpresent() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isTopDummyBlockPresent"]], "test_liquids() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_liquids"]], "test_managecoremesh() (armi.reactor.converters.tests.test_axialexpansionchanger.testmanagecoremesh method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh.test_manageCoreMesh"]], "test_manuallysettargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_manuallySetTargetComponent"]], "test_multiblock() (armi.reactor.converters.tests.test_axialexpansionchanger.testblocklink method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestBlockLink.test_multiBlock"]], "test_nomovementaclp() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_noMovementACLP"]], "test_onassembly() (armi.reactor.converters.tests.test_axialexpansionchanger.testblocklink method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestBlockLink.test_onAssembly"]], "test_overlappingsolidpins() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_overlappingSolidPins"]], "test_override() (armi.reactor.converters.tests.test_axialexpansionchanger.testaxiallinkhelper method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialLinkHelper.test_override"]], "test_prescribedexpansioncontractionconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_prescribedExpansionContractionConservation"]], "test_reset() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_reset"]], "test_setexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_setExpansionFactors"]], "test_singleblock() (armi.reactor.converters.tests.test_axialexpansionchanger.testblocklink method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestBlockLink.test_singleBlock"]], "test_solidpinnotoverlappingannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_solidPinNotOverlappingAnnulus"]], "test_solidpinoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_solidPinOverlappingWithAnnulus"]], "test_specifytargetcomponent_notfound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_NotFound"]], "test_specifytargetcomponent_singlesolid() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_singleSolid"]], "test_specifytargetcomponet_multiplefound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponet_MultipleFound"]], "test_targetcomponentmassconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_targetComponentMassConservation"]], "test_thermalexpansioncontractionconservation_complex() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_thermalExpansionContractionConservation_complex"]], "test_thermalexpansioncontractionconservation_simple() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_thermalExpansionContractionConservation_simple"]], "test_thinannularpinoverlappingwiththickannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_thinAnnularPinOverlappingWithThickAnnulus"]], "test_unshapedcomponentandcircle() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_unshapedComponentAndCircle"]], "test_updatecomponenttempsby1dtempfieldruntimeerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldRuntimeError"]], "test_updatecomponenttempsby1dtempfieldvalueerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[324, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldValueError"]], "testblockconverter (class in armi.reactor.converters.tests.test_blockconverter)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter"]], "testtocircles (class in armi.reactor.converters.tests.test_blockconverter)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestToCircles"]], "armi.reactor.converters.tests.test_blockconverter": [[325, "module-armi.reactor.converters.tests.test_blockConverter"]], "buildcontrolblockwithlinkednegativeareacomponent() (in module armi.reactor.converters.tests.test_blockconverter)": [[325, "armi.reactor.converters.tests.test_blockConverter.buildControlBlockWithLinkedNegativeAreaComponent"]], "buildsimplefuelblocknegativearea() (in module armi.reactor.converters.tests.test_blockconverter)": [[325, "armi.reactor.converters.tests.test_blockConverter.buildSimpleFuelBlockNegativeArea"]], "test_buildinsideduct() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_buildInsideDuct"]], "test_build_nthring() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_build_NthRing"]], "test_convert() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convert"]], "test_convertcartesianlatticewithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertCartesianLatticeWithFuelDriver"]], "test_converthexwithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriver"]], "test_converthexwithfueldriveronnegativecomponentareablock() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"]], "test_dissolveintonegativearea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveIntoNegativeArea"]], "test_dissolveintozeroarea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveIntoZeroArea"]], "test_dissolvelinerintoclad() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveLinerIntoClad"]], "test_dissolvemultiple() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveMultiple"]], "test_dissolvenegativearea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveNegativeArea"]], "test_dissolvewireintocoolant() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveWireIntoCoolant"]], "test_dissolvezeroarea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveZeroArea"]], "test_fromhex() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromHex"]], "test_fromringofrods() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[325, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromRingOfRods"]], "testedgeassemblychanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger"]], "testgeometryconverters (class in armi.reactor.converters.tests.test_geometryconverters)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters"]], "testhextorzconverter (class in armi.reactor.converters.tests.test_geometryconverters)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter"]], "testthirdcorehextofullcorechanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryconverters": [[326, "module-armi.reactor.converters.tests.test_geometryConverters"]], "test_addring() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_addRing"]], "test_convert() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_convert"]], "test_createhomogenizedrztblock() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_createHomogenizedRZTBlock"]], "test_edgeassemblies() (armi.reactor.converters.tests.test_geometryconverters.testedgeassemblychanger method)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger.test_edgeAssemblies"]], "test_getassembliesinsector() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_getAssembliesInSector"]], "test_growtofullcorefromthirdcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_growToFullCoreFromThirdCore"]], "test_initnewfullreactor() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_initNewFullReactor"]], "test_setnumberoffuelassems() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_setNumberOfFuelAssems"]], "test_skipgrowtofullcorewhenalreadyfullcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[326, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_skipGrowToFullCoreWhenAlreadyFullCore"]], "testrzreactormeshconverter (class in armi.reactor.converters.tests.test_meshconverters)": [[327, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshconverters": [[327, "module-armi.reactor.converters.tests.test_meshConverters"]], "test_meshbyringcompositionaxialbinslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[327, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsLargeCore"]], "test_meshbyringcompositionaxialbinssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[327, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsSmallCore"]], "test_meshbyringcompositionaxialcoordinateslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[327, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesLargeCore"]], "test_meshbyringcompositionaxialcoordinatessmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[327, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesSmallCore"]], "test_meshbyringcompositionaxialflagslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[327, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsLargeCore"]], "test_meshbyringcompositionaxialflagssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[327, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsSmallCore"]], "massconservationtests (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[328, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests"]], "testpintypeconverters (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[328, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pintypeblockconverters": [[328, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "test_adjustcladthicknessbyid() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[328, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByID"]], "test_adjustcladthicknessbyod() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[328, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByOD"]], "test_adjustsmeardensity() (armi.reactor.converters.tests.test_pintypeblockconverters.massconservationtests method)": [[328, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests.test_adjustSmearDensity"]], "dummyfluxoptions (class in armi.reactor.converters.tests.test_uniformmesh)": [[329, "armi.reactor.converters.tests.test_uniformMesh.DummyFluxOptions"]], "testassemblyuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh"]], "testcalcreationrates (class in armi.reactor.converters.tests.test_uniformmesh)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestCalcReationRates"]], "testconverterfactory (class in armi.reactor.converters.tests.test_uniformmesh)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory"]], "testgammauniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh"]], "testparamconversion (class in armi.reactor.converters.tests.test_uniformmesh)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion"]], "testuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh"]], "testuniformmeshcomponents (class in armi.reactor.converters.tests.test_uniformmesh)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents"]], "testuniformmeshgenerator (class in armi.reactor.converters.tests.test_uniformmesh)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator"]], "testuniformmeshnonuniformassemflags (class in armi.reactor.converters.tests.test_uniformmesh)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags"]], "applynonuniformheightdistribution() (in module armi.reactor.converters.tests.test_uniformmesh)": [[329, "armi.reactor.converters.tests.test_uniformMesh.applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformmesh": [[329, "module-armi.reactor.converters.tests.test_uniformMesh"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_applyStateToOriginal"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_applyStateToOriginal"]], "test_blueprintcopy() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshcomponents method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents.test_blueprintCopy"]], "test_calcreactionratesblocklist() (armi.reactor.converters.tests.test_uniformmesh.testcalcreationrates method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestCalcReationRates.test_calcReactionRatesBlockList"]], "test_clearassemblystate() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_clearAssemblyState"]], "test_computeaverageaxialmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_computeAverageAxialMesh"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_convertNumberDensities"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_convertNumberDensities"]], "test_converterfactory() (armi.reactor.converters.tests.test_uniformmesh.testconverterfactory method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory.test_converterFactory"]], "test_filtermesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filterMesh"]], "test_filteredtopandbottom() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filteredTopAndBottom"]], "test_generatecommonmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_generateCommonMesh"]], "test_makeassemuniformmeshparammappingsamemesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemUniformMeshParamMappingSameMesh"]], "test_makeassemwithuniformmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMesh"]], "test_makeassemwithuniformmeshsubmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMeshSubmesh"]], "test_reactorconversion() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshnonuniformassemflags method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags.test_reactorConversion"]], "test_setstatefromoverlaps() (armi.reactor.converters.tests.test_uniformmesh.testparamconversion method)": [[329, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion.test_setStateFromOverlaps"]], "gammauniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[330, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter"]], "neutronicsuniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[330, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter"]], "parammapper (class in armi.reactor.converters.uniformmesh)": [[330, "armi.reactor.converters.uniformMesh.ParamMapper"]], "uniformmeshgenerator (class in armi.reactor.converters.uniformmesh)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGenerator"]], "uniformmeshgeometryconverter (class in armi.reactor.converters.uniformmesh)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter"]], "applystatetooriginal() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.applyStateToOriginal"]], "armi.reactor.converters.uniformmesh": [[330, "module-armi.reactor.converters.uniformMesh"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[330, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[330, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.blockParamMappingCategories"]], "clearstateonassemblies() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.clearStateOnAssemblies"]], "convert() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.convert"]], "converterfactory() (in module armi.reactor.converters.uniformmesh)": [[330, "armi.reactor.converters.uniformMesh.converterFactory"]], "generatecommonmesh() (armi.reactor.converters.uniformmesh.uniformmeshgenerator method)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGenerator.generateCommonMesh"]], "initnewreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.initNewReactor"]], "makeassemwithuniformmesh() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.makeAssemWithUniformMesh"]], "paramgetter() (armi.reactor.converters.uniformmesh.parammapper method)": [[330, "armi.reactor.converters.uniformMesh.ParamMapper.paramGetter"]], "paramsetter() (armi.reactor.converters.uniformmesh.parammapper static method)": [[330, "armi.reactor.converters.uniformMesh.ParamMapper.paramSetter"]], "plotconvertedreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.plotConvertedReactor"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[330, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[330, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reactorParamMappingCategories"]], "reset() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reset"]], "setassemblystatefromoverlaps() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.setAssemblyStateFromOverlaps"]], "setnumberdensitiesfromoverlaps() (in module armi.reactor.converters.uniformmesh)": [[330, "armi.reactor.converters.uniformMesh.setNumberDensitiesFromOverlaps"]], "updatereactionrates() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[330, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.updateReactionRates"]], "core (class in armi.reactor.cores)": [[331, "armi.reactor.cores.Core"]], "add() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.add"]], "addmorenodes() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.addMoreNodes"]], "armi.reactor.cores": [[331, "module-armi.reactor.cores"]], "buildcircularringdictionary() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.buildCircularRingDictionary"]], "buildmanualzones() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.buildManualZones"]], "calcblockmaxes() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.calcBlockMaxes"]], "countblockswithflags() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.countBlocksWithFlags"]], "countfuelaxialblocks() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.countFuelAxialBlocks"]], "createassemblyoftype() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.createAssemblyOfType"]], "createfreshfeed() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.createFreshFeed"]], "findallaxialmeshpoints() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.findAllAxialMeshPoints"]], "findallazimeshpoints() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.findAllAziMeshPoints"]], "findallmeshpoints() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.findAllMeshPoints"]], "findallradmeshpoints() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.findAllRadMeshPoints"]], "findaxialmeshindexof() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.findAxialMeshIndexOf"]], "findneighbors() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.findNeighbors"]], "genassembliesaddedthiscycle() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.genAssembliesAddedThisCycle"]], "genblocksbylocname() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.genBlocksByLocName"]], "geomtype (armi.reactor.cores.core property)": [[331, "armi.reactor.cores.Core.geomType"]], "getallxssuffixes() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAllXsSuffixes"]], "getassemblies() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAssemblies"]], "getassembliesincircularring() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAssembliesInCircularRing"]], "getassembliesinring() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAssembliesInRing"]], "getassembliesinsquareorhexring() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAssembliesInSquareOrHexRing"]], "getassembliesoftype() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAssembliesOfType"]], "getassembliesonsymmetryline() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAssembliesOnSymmetryLine"]], "getassembly() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAssembly"]], "getassemblybyname() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAssemblyByName"]], "getassemblypitch() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAssemblyPitch"]], "getassemblywithassemnum() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAssemblyWithAssemNum"]], "getassemblywithstringlocation() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAssemblyWithStringLocation"]], "getavgtemp() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getAvgTemp"]], "getblockbyname() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getBlockByName"]], "getblocks() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getBlocks"]], "getblocksbyindices() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getBlocksByIndices"]], "getcoreradius() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getCoreRadius"]], "getfirstassembly() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getFirstAssembly"]], "getfirstblock() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getFirstBlock"]], "getfirstfuelblockaxialnode() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getFirstFuelBlockAxialNode"]], "getfluxvector() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getFluxVector"]], "getfuelbottomheight() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getFuelBottomHeight"]], "getlocationcontents() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getLocationContents"]], "getmaxassembliesinhexring() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getMaxAssembliesInHexRing"]], "getmaxblockparam() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getMaxBlockParam"]], "getmaxnumpins() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getMaxNumPins"]], "getminimumpercentfluxinfuel() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getMinimumPercentFluxInFuel"]], "getnozzletypes() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getNozzleTypes"]], "getnuclidecategories() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getNuclideCategories"]], "getnumassemblieswithallringsfilledout() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getNumAssembliesWithAllRingsFilledOut"]], "getnumenergygroups() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getNumEnergyGroups"]], "getnumhexrings() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getNumHexRings"]], "getnumrings() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getNumRings"]], "getscalarevolution() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getScalarEvolution"]], "gettotalblockparam() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.getTotalBlockParam"]], "growtofullcore() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.growToFullCore"]], "isfullcore (armi.reactor.cores.core property)": [[331, "armi.reactor.cores.Core.isFullCore"]], "lib (armi.reactor.cores.core property)": [[331, "armi.reactor.cores.Core.lib"]], "locateallassemblies() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.locateAllAssemblies"]], "makelocationlookup() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.makeLocationLookup"]], "normalizeinternalbookeeping() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.normalizeInternalBookeeping"]], "normalizenames() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.normalizeNames"]], "pdefs (armi.reactor.cores.core attribute)": [[331, "armi.reactor.cores.Core.pDefs"]], "paramcollectiontype (armi.reactor.cores.core attribute)": [[331, "armi.reactor.cores.Core.paramCollectionType"]], "powermultiplier (armi.reactor.cores.core property)": [[331, "armi.reactor.cores.Core.powerMultiplier"]], "processloading() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.processLoading"]], "r (armi.reactor.cores.core property)": [[331, "armi.reactor.cores.Core.r"]], "refassem (armi.reactor.cores.core property)": [[331, "armi.reactor.cores.Core.refAssem"]], "regenassemblylists() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.regenAssemblyLists"]], "removeassembliesinring() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.removeAssembliesInRing"]], "removeassembly() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.removeAssembly"]], "saveallflux() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.saveAllFlux"]], "setblockmassparams() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.setBlockMassParams"]], "setmovelist() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.setMoveList"]], "setoptionsfromcs() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.setOptionsFromCs"]], "setpitchuniform() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.setPitchUniform"]], "setpowerfromdensity() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.setPowerFromDensity"]], "setpowerifnecessary() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.setPowerIfNecessary"]], "sortassemsbyring() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.sortAssemsByRing"]], "summarizenuclidecategories() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.summarizeNuclideCategories"]], "summarizereactorstats() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.summarizeReactorStats"]], "symmetry (armi.reactor.cores.core property)": [[331, "armi.reactor.cores.Core.symmetry"]], "updateaxialmesh() (armi.reactor.cores.core method)": [[331, "armi.reactor.cores.Core.updateAxialMesh"]], "excorecollection (class in armi.reactor.excorestructure)": [[332, "armi.reactor.excoreStructure.ExcoreCollection"]], "excorestructure (class in armi.reactor.excorestructure)": [[332, "armi.reactor.excoreStructure.ExcoreStructure"]], "add() (armi.reactor.excorestructure.excorestructure method)": [[332, "armi.reactor.excoreStructure.ExcoreStructure.add"]], "armi.reactor.excorestructure": [[332, "module-armi.reactor.excoreStructure"]], "paramcollectiontype (armi.reactor.excorestructure.excorestructure attribute)": [[332, "armi.reactor.excoreStructure.ExcoreStructure.paramCollectionType"]], "r (armi.reactor.excorestructure.excorestructure property)": [[332, "armi.reactor.excoreStructure.ExcoreStructure.r"]], "a (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.A"]], "aclp (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.ACLP"]], "annular (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.ANNULAR"]], "axial (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.AXIAL"]], "b (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.B"]], "batchmassaddition (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.BATCHMASSADDITION"]], "blanket (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.BLANKET"]], "bond (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.BOND"]], "booster (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.BOOSTER"]], "c (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.C"]], "clad (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.CLAD"]], "control (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.CONTROL"]], "coolant (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.COOLANT"]], "core_barrel (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.CORE_BARREL"]], "d (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.D"]], "depletable (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.DEPLETABLE"]], "driver (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.DRIVER"]], "dspacerinside (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.DSPACERINSIDE"]], "duct (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.DUCT"]], "dummy (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.DUMMY"]], "e (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.E"]], "feed (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.FEED"]], "fission_chamber (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.FISSION_CHAMBER"]], "fuel (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.FUEL"]], "flags (class in armi.reactor.flags)": [[333, "armi.reactor.flags.Flags"]], "gap (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.GAP"]], "grid_plate (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.GRID_PLATE"]], "guide_tube (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.GUIDE_TUBE"]], "handling_socket (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.HANDLING_SOCKET"]], "high (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.HIGH"]], "igniter (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.IGNITER"]], "inlet_nozzle (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.INLET_NOZZLE"]], "inner (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.INNER"]], "intercoolant (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.INTERCOOLANT"]], "interductcoolant (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.INTERDUCTCOOLANT"]], "invalidflagserror": [[333, "armi.reactor.flags.InvalidFlagsError"]], "liner (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.LINER"]], "load_pad (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.LOAD_PAD"]], "low (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.LOW"]], "lower (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.LOWER"]], "material (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.MATERIAL"]], "medium (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.MEDIUM"]], "middle (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.MIDDLE"]], "moderator (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.MODERATOR"]], "moveable (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.MOVEABLE"]], "mox (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.MOX"]], "outer (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.OUTER"]], "pin (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.PIN"]], "plenum (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.PLENUM"]], "poison (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.POISON"]], "primary (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.PRIMARY"]], "radial (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.RADIAL"]], "reflector (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.REFLECTOR"]], "secondary (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.SECONDARY"]], "shield (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.SHIELD"]], "shield_block (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.SHIELD_BLOCK"]], "shutdown (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.SHUTDOWN"]], "skid (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.SKID"]], "slug (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.SLUG"]], "starter (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.STARTER"]], "structure (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.STRUCTURE"]], "target (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.TARGET"]], "tertiary (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.TERTIARY"]], "test (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.TEST"]], "ultimate (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.ULTIMATE"]], "upper (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.UPPER"]], "void (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.VOID"]], "wire (armi.reactor.flags.flags attribute)": [[333, "armi.reactor.flags.Flags.WIRE"]], "armi.reactor.flags": [[333, "module-armi.reactor.flags"]], "fromstring() (armi.reactor.flags.flags class method)": [[333, "armi.reactor.flags.Flags.fromString"]], "fromstringignoreerrors() (armi.reactor.flags.flags class method)": [[333, "armi.reactor.flags.Flags.fromStringIgnoreErrors"]], "tostring() (armi.reactor.flags.flags class method)": [[333, "armi.reactor.flags.Flags.toString"]], "boundarytype (class in armi.reactor.geometry)": [[334, "armi.reactor.geometry.BoundaryType"]], "cartesian (armi.reactor.geometry.geomtype attribute)": [[334, "armi.reactor.geometry.GeomType.CARTESIAN"]], "domaintype (class in armi.reactor.geometry)": [[334, "armi.reactor.geometry.DomainType"]], "eighth_core (armi.reactor.geometry.domaintype attribute)": [[334, "armi.reactor.geometry.DomainType.EIGHTH_CORE"]], "full_core (armi.reactor.geometry.domaintype attribute)": [[334, "armi.reactor.geometry.DomainType.FULL_CORE"]], "geomtype (class in armi.reactor.geometry)": [[334, "armi.reactor.geometry.GeomType"]], "hex (armi.reactor.geometry.geomtype attribute)": [[334, "armi.reactor.geometry.GeomType.HEX"]], "no_symmetry (armi.reactor.geometry.boundarytype attribute)": [[334, "armi.reactor.geometry.BoundaryType.NO_SYMMETRY"]], "null (armi.reactor.geometry.domaintype attribute)": [[334, "armi.reactor.geometry.DomainType.NULL"]], "periodic (armi.reactor.geometry.boundarytype attribute)": [[334, "armi.reactor.geometry.BoundaryType.PERIODIC"]], "quarter_core (armi.reactor.geometry.domaintype attribute)": [[334, "armi.reactor.geometry.DomainType.QUARTER_CORE"]], "reflective (armi.reactor.geometry.boundarytype attribute)": [[334, "armi.reactor.geometry.BoundaryType.REFLECTIVE"]], "rz (armi.reactor.geometry.geomtype attribute)": [[334, "armi.reactor.geometry.GeomType.RZ"]], "rzt (armi.reactor.geometry.geomtype attribute)": [[334, "armi.reactor.geometry.GeomType.RZT"]], "sixteenth_core (armi.reactor.geometry.domaintype attribute)": [[334, "armi.reactor.geometry.DomainType.SIXTEENTH_CORE"]], "symmetrytype (class in armi.reactor.geometry)": [[334, "armi.reactor.geometry.SymmetryType"]], "third_core (armi.reactor.geometry.domaintype attribute)": [[334, "armi.reactor.geometry.DomainType.THIRD_CORE"]], "valid_symmetry (armi.reactor.geometry.symmetrytype attribute)": [[334, "armi.reactor.geometry.SymmetryType.VALID_SYMMETRY"]], "armi.reactor.geometry": [[334, "module-armi.reactor.geometry"]], "checkvalidgeomsymmetrycombo() (in module armi.reactor.geometry)": [[334, "armi.reactor.geometry.checkValidGeomSymmetryCombo"]], "checkvalidsymmetry() (armi.reactor.geometry.symmetrytype method)": [[334, "armi.reactor.geometry.SymmetryType.checkValidSymmetry"]], "createvalidsymmetrystrings() (armi.reactor.geometry.symmetrytype class method)": [[334, "armi.reactor.geometry.SymmetryType.createValidSymmetryStrings"]], "fromany() (armi.reactor.geometry.boundarytype class method)": [[334, "armi.reactor.geometry.BoundaryType.fromAny"]], "fromany() (armi.reactor.geometry.domaintype class method)": [[334, "armi.reactor.geometry.DomainType.fromAny"]], "fromany() (armi.reactor.geometry.geomtype class method)": [[334, "armi.reactor.geometry.GeomType.fromAny"]], "fromany() (armi.reactor.geometry.symmetrytype class method)": [[334, "armi.reactor.geometry.SymmetryType.fromAny"]], "fromstr() (armi.reactor.geometry.boundarytype class method)": [[334, "armi.reactor.geometry.BoundaryType.fromStr"]], "fromstr() (armi.reactor.geometry.domaintype class method)": [[334, "armi.reactor.geometry.DomainType.fromStr"]], "fromstr() (armi.reactor.geometry.geomtype class method)": [[334, "armi.reactor.geometry.GeomType.fromStr"]], "fromstr() (armi.reactor.geometry.symmetrytype class method)": [[334, "armi.reactor.geometry.SymmetryType.fromStr"]], "hassymmetry() (armi.reactor.geometry.boundarytype method)": [[334, "armi.reactor.geometry.BoundaryType.hasSymmetry"]], "label (armi.reactor.geometry.boundarytype property)": [[334, "armi.reactor.geometry.BoundaryType.label"]], "label (armi.reactor.geometry.domaintype property)": [[334, "armi.reactor.geometry.DomainType.label"]], "label (armi.reactor.geometry.geomtype property)": [[334, "armi.reactor.geometry.GeomType.label"]], "symmetryfactor() (armi.reactor.geometry.domaintype method)": [[334, "armi.reactor.geometry.DomainType.symmetryFactor"]], "symmetryfactor() (armi.reactor.geometry.symmetrytype method)": [[334, "armi.reactor.geometry.SymmetryType.symmetryFactor"]], "armi.reactor.grids": [[335, "module-armi.reactor.grids"]], "locatorlabeltoindices() (in module armi.reactor.grids)": [[335, "armi.reactor.grids.locatorLabelToIndices"]], "axialgrid (class in armi.reactor.grids.axial)": [[336, "armi.reactor.grids.axial.AxialGrid"]], "armi.reactor.grids.axial": [[336, "module-armi.reactor.grids.axial"]], "armiobject (armi.reactor.grids.axial.axialgrid attribute)": [[336, "armi.reactor.grids.axial.AxialGrid.armiObject"]], "fromncells() (armi.reactor.grids.axial.axialgrid class method)": [[336, "armi.reactor.grids.axial.AxialGrid.fromNCells"]], "getindicesfromringandpos() (armi.reactor.grids.axial.axialgrid static method)": [[336, "armi.reactor.grids.axial.AxialGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.axial.axialgrid static method)": [[336, "armi.reactor.grids.axial.AxialGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.axial.axialgrid static method)": [[336, "armi.reactor.grids.axial.AxialGrid.getPositionsInRing"]], "getsymmetricequivalents() (armi.reactor.grids.axial.axialgrid static method)": [[336, "armi.reactor.grids.axial.AxialGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.axial.axialgrid static method)": [[336, "armi.reactor.grids.axial.AxialGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.axial.axialgrid static method)": [[336, "armi.reactor.grids.axial.AxialGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.axial.axialgrid property)": [[336, "armi.reactor.grids.axial.AxialGrid.pitch"]], "cartesiangrid (class in armi.reactor.grids.cartesian)": [[337, "armi.reactor.grids.cartesian.CartesianGrid"]], "armi.reactor.grids.cartesian": [[337, "module-armi.reactor.grids.cartesian"]], "armiobject (armi.reactor.grids.cartesian.cartesiangrid attribute)": [[337, "armi.reactor.grids.cartesian.CartesianGrid.armiObject"]], "changepitch() (armi.reactor.grids.cartesian.cartesiangrid method)": [[337, "armi.reactor.grids.cartesian.CartesianGrid.changePitch"]], "fromrectangle() (armi.reactor.grids.cartesian.cartesiangrid class method)": [[337, "armi.reactor.grids.cartesian.CartesianGrid.fromRectangle"]], "getindicesfromringandpos() (armi.reactor.grids.cartesian.cartesiangrid static method)": [[337, "armi.reactor.grids.cartesian.CartesianGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.cartesian.cartesiangrid method)": [[337, "armi.reactor.grids.cartesian.CartesianGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.cartesian.cartesiangrid method)": [[337, "armi.reactor.grids.cartesian.CartesianGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.cartesian.cartesiangrid method)": [[337, "armi.reactor.grids.cartesian.CartesianGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.cartesian.cartesiangrid method)": [[337, "armi.reactor.grids.cartesian.CartesianGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.cartesian.cartesiangrid method)": [[337, "armi.reactor.grids.cartesian.CartesianGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.cartesian.cartesiangrid method)": [[337, "armi.reactor.grids.cartesian.CartesianGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.cartesian.cartesiangrid property)": [[337, "armi.reactor.grids.cartesian.CartesianGrid.pitch"]], "armi.reactor.grids.constants": [[338, "module-armi.reactor.grids.constants"]], "grid (class in armi.reactor.grids.grid)": [[339, "armi.reactor.grids.grid.Grid"]], "armi.reactor.grids.grid": [[339, "module-armi.reactor.grids.grid"]], "armiobject (armi.reactor.grids.grid.grid attribute)": [[339, "armi.reactor.grids.grid.Grid.armiObject"]], "backup() (armi.reactor.grids.grid.grid method)": [[339, "armi.reactor.grids.grid.Grid.backUp"]], "geomtype (armi.reactor.grids.grid.grid property)": [[339, "armi.reactor.grids.grid.Grid.geomType"]], "getcellbase() (armi.reactor.grids.grid.grid method)": [[339, "armi.reactor.grids.grid.Grid.getCellBase"]], "getcelltop() (armi.reactor.grids.grid.grid method)": [[339, "armi.reactor.grids.grid.Grid.getCellTop"]], "getcoordinates() (armi.reactor.grids.grid.grid method)": [[339, "armi.reactor.grids.grid.Grid.getCoordinates"]], "getlabel() (armi.reactor.grids.grid.grid static method)": [[339, "armi.reactor.grids.grid.Grid.getLabel"]], "getsymmetricequivalents() (armi.reactor.grids.grid.grid method)": [[339, "armi.reactor.grids.grid.Grid.getSymmetricEquivalents"]], "isaxialonly (armi.reactor.grids.grid.grid property)": [[339, "armi.reactor.grids.grid.Grid.isAxialOnly"]], "items() (armi.reactor.grids.grid.grid method)": [[339, "armi.reactor.grids.grid.Grid.items"]], "locatorindomain() (armi.reactor.grids.grid.grid method)": [[339, "armi.reactor.grids.grid.Grid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.grid.grid method)": [[339, "armi.reactor.grids.grid.Grid.overlapsWhichSymmetryLine"]], "reduce() (armi.reactor.grids.grid.grid method)": [[339, "armi.reactor.grids.grid.Grid.reduce"]], "restorebackup() (armi.reactor.grids.grid.grid method)": [[339, "armi.reactor.grids.grid.Grid.restoreBackup"]], "symmetry (armi.reactor.grids.grid.grid property)": [[339, "armi.reactor.grids.grid.Grid.symmetry"]], "hexgrid (class in armi.reactor.grids.hexagonal)": [[340, "armi.reactor.grids.hexagonal.HexGrid"]], "armi.reactor.grids.hexagonal": [[340, "module-armi.reactor.grids.hexagonal"]], "armiobject (armi.reactor.grids.hexagonal.hexgrid attribute)": [[340, "armi.reactor.grids.hexagonal.HexGrid.armiObject"]], "changepitch() (armi.reactor.grids.hexagonal.hexgrid method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.changePitch"]], "cornersup (armi.reactor.grids.hexagonal.hexgrid property)": [[340, "armi.reactor.grids.hexagonal.HexGrid.cornersUp"]], "frompitch() (armi.reactor.grids.hexagonal.hexgrid static method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.fromPitch"]], "generatesortedhexlocationlist() (armi.reactor.grids.hexagonal.hexgrid method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.generateSortedHexLocationList"]], "getindicesfromringandpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.getIndicesFromRingAndPos"]], "getlabel() (armi.reactor.grids.hexagonal.hexgrid method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.getLabel"]], "getminimumrings() (armi.reactor.grids.hexagonal.hexgrid static method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.hexagonal.hexgrid method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.hexagonal.hexgrid static method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.hexagonal.hexgrid method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.hexagonal.hexgrid method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.getSymmetricEquivalents"]], "indicestoringpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.indicesToRingPos"]], "isinfirstthird() (armi.reactor.grids.hexagonal.hexgrid method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.isInFirstThird"]], "locatorindomain() (armi.reactor.grids.hexagonal.hexgrid method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.hexagonal.hexgrid method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.hexagonal.hexgrid property)": [[340, "armi.reactor.grids.hexagonal.HexGrid.pitch"]], "rotateindex() (armi.reactor.grids.hexagonal.hexgrid method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.rotateIndex"]], "trianglecoords() (armi.reactor.grids.hexagonal.hexgrid method)": [[340, "armi.reactor.grids.hexagonal.HexGrid.triangleCoords"]], "coordinatelocation (class in armi.reactor.grids.locations)": [[341, "armi.reactor.grids.locations.CoordinateLocation"]], "indexlocation (class in armi.reactor.grids.locations)": [[341, "armi.reactor.grids.locations.IndexLocation"]], "locationbase (class in armi.reactor.grids.locations)": [[341, "armi.reactor.grids.locations.LocationBase"]], "multiindexlocation (class in armi.reactor.grids.locations)": [[341, "armi.reactor.grids.locations.MultiIndexLocation"]], "addingisvalid() (in module armi.reactor.grids.locations)": [[341, "armi.reactor.grids.locations.addingIsValid"]], "append() (armi.reactor.grids.locations.multiindexlocation method)": [[341, "armi.reactor.grids.locations.MultiIndexLocation.append"]], "armi.reactor.grids.locations": [[341, "module-armi.reactor.grids.locations"]], "associate() (armi.reactor.grids.locations.locationbase method)": [[341, "armi.reactor.grids.locations.LocationBase.associate"]], "associate() (armi.reactor.grids.locations.multiindexlocation method)": [[341, "armi.reactor.grids.locations.MultiIndexLocation.associate"]], "detachedcopy() (armi.reactor.grids.locations.indexlocation method)": [[341, "armi.reactor.grids.locations.IndexLocation.detachedCopy"]], "detachedcopy() (armi.reactor.grids.locations.multiindexlocation method)": [[341, "armi.reactor.grids.locations.MultiIndexLocation.detachedCopy"]], "distanceto() (armi.reactor.grids.locations.indexlocation method)": [[341, "armi.reactor.grids.locations.IndexLocation.distanceTo"]], "extend() (armi.reactor.grids.locations.multiindexlocation method)": [[341, "armi.reactor.grids.locations.MultiIndexLocation.extend"]], "getcompleteindices() (armi.reactor.grids.locations.coordinatelocation method)": [[341, "armi.reactor.grids.locations.CoordinateLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.indexlocation method)": [[341, "armi.reactor.grids.locations.IndexLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.multiindexlocation method)": [[341, "armi.reactor.grids.locations.MultiIndexLocation.getCompleteIndices"]], "getglobalcellbase() (armi.reactor.grids.locations.coordinatelocation method)": [[341, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellBase"]], "getglobalcellbase() (armi.reactor.grids.locations.indexlocation method)": [[341, "armi.reactor.grids.locations.IndexLocation.getGlobalCellBase"]], "getglobalcelltop() (armi.reactor.grids.locations.coordinatelocation method)": [[341, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellTop"]], "getglobalcelltop() (armi.reactor.grids.locations.indexlocation method)": [[341, "armi.reactor.grids.locations.IndexLocation.getGlobalCellTop"]], "getglobalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[341, "armi.reactor.grids.locations.IndexLocation.getGlobalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.coordinatelocation method)": [[341, "armi.reactor.grids.locations.CoordinateLocation.getLocalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[341, "armi.reactor.grids.locations.IndexLocation.getLocalCoordinates"]], "getringpos() (armi.reactor.grids.locations.indexlocation method)": [[341, "armi.reactor.grids.locations.IndexLocation.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.locations.indexlocation method)": [[341, "armi.reactor.grids.locations.IndexLocation.getSymmetricEquivalents"]], "grid (armi.reactor.grids.locations.locationbase property)": [[341, "armi.reactor.grids.locations.LocationBase.grid"]], "i (armi.reactor.grids.locations.locationbase property)": [[341, "armi.reactor.grids.locations.LocationBase.i"]], "indices (armi.reactor.grids.locations.indexlocation property)": [[341, "armi.reactor.grids.locations.IndexLocation.indices"]], "indices (armi.reactor.grids.locations.locationbase property)": [[341, "armi.reactor.grids.locations.LocationBase.indices"]], "indices (armi.reactor.grids.locations.multiindexlocation property)": [[341, "armi.reactor.grids.locations.MultiIndexLocation.indices"]], "j (armi.reactor.grids.locations.locationbase property)": [[341, "armi.reactor.grids.locations.LocationBase.j"]], "k (armi.reactor.grids.locations.locationbase property)": [[341, "armi.reactor.grids.locations.LocationBase.k"]], "parentlocation (armi.reactor.grids.locations.indexlocation property)": [[341, "armi.reactor.grids.locations.IndexLocation.parentLocation"]], "pop() (armi.reactor.grids.locations.multiindexlocation method)": [[341, "armi.reactor.grids.locations.MultiIndexLocation.pop"]], "gridparameters (class in armi.reactor.grids.structuredgrid)": [[342, "armi.reactor.grids.structuredGrid.GridParameters"]], "structuredgrid (class in armi.reactor.grids.structuredgrid)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid"]], "armi.reactor.grids.structuredgrid": [[342, "module-armi.reactor.grids.structuredGrid"]], "armiobject (armi.reactor.grids.structuredgrid.structuredgrid attribute)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.armiObject"]], "backup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.backUp"]], "bounds (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[342, "armi.reactor.grids.structuredGrid.GridParameters.bounds"]], "geomtype (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[342, "armi.reactor.grids.structuredGrid.GridParameters.geomType"]], "getaboveandbelowcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getAboveAndBelowCellIndices"]], "getallindices() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getAllIndices"]], "getbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getBounds"]], "getcellbase() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getCellBase"]], "getcelltop() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getCellTop"]], "getcoordinates() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getCoordinates"]], "getindexbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getIndexBounds"]], "getindicesfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getIndicesFromRingAndPos"]], "getlocatorfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getLocatorFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.getRingPos"]], "isaxialonly (armi.reactor.grids.structuredgrid.structuredgrid property)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.isAxialOnly"]], "items() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.items"]], "offset (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[342, "armi.reactor.grids.structuredGrid.GridParameters.offset"]], "offset (armi.reactor.grids.structuredgrid.structuredgrid property)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.offset"]], "pitch (armi.reactor.grids.structuredgrid.structuredgrid property)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.pitch"]], "reduce() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.reduce"]], "restorebackup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[342, "armi.reactor.grids.structuredGrid.StructuredGrid.restoreBackup"]], "symmetry (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[342, "armi.reactor.grids.structuredGrid.GridParameters.symmetry"]], "unitsteplimits (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[342, "armi.reactor.grids.structuredGrid.GridParameters.unitStepLimits"]], "unitsteps (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[342, "armi.reactor.grids.structuredGrid.GridParameters.unitSteps"]], "thetarzgrid (class in armi.reactor.grids.thetarz)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid"]], "armi.reactor.grids.thetarz": [[343, "module-armi.reactor.grids.thetarz"]], "armiobject (armi.reactor.grids.thetarz.thetarzgrid attribute)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid.armiObject"]], "fromgeom() (armi.reactor.grids.thetarz.thetarzgrid class method)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid.fromGeom"]], "getcoordinates() (armi.reactor.grids.thetarz.thetarzgrid method)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid.getCoordinates"]], "getindicesfromringandpos() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.thetarz.thetarzgrid method)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.thetarz.thetarzgrid method)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid.getSymmetricEquivalents"]], "indicesofbounds() (armi.reactor.grids.thetarz.thetarzgrid method)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid.indicesOfBounds"]], "locatorindomain() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid.overlapsWhichSymmetryLine"]], "pitch() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[343, "armi.reactor.grids.thetarz.ThetaRZGrid.pitch"]], "armi.reactor.parameters": [[344, "module-armi.reactor.parameters"]], "reset() (in module armi.reactor.parameters)": [[344, "armi.reactor.parameters.reset"]], "parameterdefinitionerror": [[345, "armi.reactor.parameters.exceptions.ParameterDefinitionError"]], "parametererror": [[345, "armi.reactor.parameters.exceptions.ParameterError"]], "unknownparametererror": [[345, "armi.reactor.parameters.exceptions.UnknownParameterError"]], "armi.reactor.parameters.exceptions": [[345, "module-armi.reactor.parameters.exceptions"]], "global_serial_num (in module armi.reactor.parameters.parametercollections)": [[346, "armi.reactor.parameters.parameterCollections.GLOBAL_SERIAL_NUM"]], "parametercollection (class in armi.reactor.parameters.parametercollections)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection"]], "applyallparameters() (in module armi.reactor.parameters.parametercollections)": [[346, "armi.reactor.parameters.parameterCollections.applyAllParameters"]], "applyparameters() (armi.reactor.parameters.parametercollections.parametercollection class method)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.applyParameters"]], "armi.reactor.parameters.parametercollections": [[346, "module-armi.reactor.parameters.parameterCollections"]], "backup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.backUp"]], "collectpluginparameters() (in module armi.reactor.parameters.parametercollections)": [[346, "armi.reactor.parameters.parameterCollections.collectPluginParameters"]], "get() (armi.reactor.parameters.parametercollections.parametercollection method)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.get"]], "getsyncdata() (armi.reactor.parameters.parametercollections.parametercollection method)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.getSyncData"]], "items() (armi.reactor.parameters.parametercollections.parametercollection method)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.items"]], "keys() (armi.reactor.parameters.parametercollections.parametercollection method)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.keys"]], "pdefs (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.pDefs"]], "paramdefs (armi.reactor.parameters.parametercollections.parametercollection property)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.paramDefs"]], "restorebackup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.restoreBackup"]], "serialnum (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.serialNum"]], "update() (armi.reactor.parameters.parametercollections.parametercollection method)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.update"]], "values() (armi.reactor.parameters.parametercollections.parametercollection method)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.values"]], "where() (armi.reactor.parameters.parametercollections.parametercollection method)": [[346, "armi.reactor.parameters.parameterCollections.ParameterCollection.where"]], "average (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.ParamLocation.AVERAGE"]], "bottom (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.ParamLocation.BOTTOM"]], "centroid (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CENTROID"]], "children (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CHILDREN"]], "corners (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CORNERS"]], "category (class in armi.reactor.parameters.parameterdefinitions)": [[347, "armi.reactor.parameters.parameterDefinitions.Category"]], "edges (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.ParamLocation.EDGES"]], "max (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.ParamLocation.MAX"]], "nodefault (class in armi.reactor.parameters.parameterdefinitions)": [[347, "armi.reactor.parameters.parameterDefinitions.NoDefault"]], "paramlocation (class in armi.reactor.parameters.parameterdefinitions)": [[347, "armi.reactor.parameters.parameterDefinitions.ParamLocation"]], "parameter (class in armi.reactor.parameters.parameterdefinitions)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter"]], "parameterbuilder (class in armi.reactor.parameters.parameterdefinitions)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder"]], "parameterdefinitioncollection (class in armi.reactor.parameters.parameterdefinitions)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection"]], "serializer (class in armi.reactor.parameters.parameterdefinitions)": [[347, "armi.reactor.parameters.parameterDefinitions.Serializer"]], "top (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.ParamLocation.TOP"]], "volume_integrated (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.ParamLocation.VOLUME_INTEGRATED"]], "add() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.add"]], "armi.reactor.parameters.parameterdefinitions": [[347, "module-armi.reactor.parameters.parameterDefinitions"]], "assigninblueprints (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.assignInBlueprints"]], "assigned (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.assigned"]], "associateparameterdefinitioncollection() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.associateParameterDefinitionCollection"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.atLocation"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.atLocation"]], "backup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.backUp"]], "bynameandcollectiontype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndCollectionType"]], "bynameandtype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndType"]], "categories (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.categories"]], "categories (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.categories"]], "collectiontype (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.collectionType"]], "createbuilder() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.createBuilder"]], "cumulative (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.cumulative"]], "cumulativeovercycle (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.cumulativeOverCycle"]], "defparam() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.defParam"]], "default (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.default"]], "depletion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.depletion"]], "description (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.description"]], "detailedaxialexpansion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.detailedAxialExpansion"]], "extend() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.extend"]], "fieldname (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.fieldName"]], "fluxquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.fluxQuantities"]], "fortype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.forType"]], "gamma (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.gamma"]], "hascategory() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.hasCategory"]], "incategory() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.inCategory"]], "isnumpyarray() (in module armi.reactor.parameters.parameterdefinitions)": [[347, "armi.reactor.parameters.parameterDefinitions.isNumpyArray"]], "isnumpyf32array() (in module armi.reactor.parameters.parameterdefinitions)": [[347, "armi.reactor.parameters.parameterDefinitions.isNumpyF32Array"]], "items() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.items"]], "location (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.location"]], "lock() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.lock"]], "locked (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.locked"]], "multigroupquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.multiGroupQuantities"]], "name (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.name"]], "names (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.names"]], "neutronics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.neutronics"]], "pack() (armi.reactor.parameters.parameterdefinitions.serializer static method)": [[347, "armi.reactor.parameters.parameterDefinitions.Serializer.pack"]], "pinquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.pinQuantities"]], "reactivitycoefficients (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.reactivityCoefficients"]], "resetassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.resetAssignmentFlag"]], "restorebackup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.restoreBackup"]], "retainonreplacement (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.retainOnReplacement"]], "savetodb (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.saveToDB"]], "serializer (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.serializer"]], "setassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.setAssignmentFlag"]], "setter() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.setter"]], "since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.since"]], "thermalhydraulics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Category.thermalHydraulics"]], "towritetodb() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.toWriteToDB"]], "unchanged_since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[347, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.unchanged_since"]], "units (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Parameter.units"]], "unpack() (armi.reactor.parameters.parameterdefinitions.serializer class method)": [[347, "armi.reactor.parameters.parameterDefinitions.Serializer.unpack"]], "version (armi.reactor.parameters.parameterdefinitions.serializer attribute)": [[347, "armi.reactor.parameters.parameterDefinitions.Serializer.version"]], "resolveparametersmeta (class in armi.reactor.parameters.resolvecollections)": [[348, "armi.reactor.parameters.resolveCollections.ResolveParametersMeta"]], "armi.reactor.parameters.resolvecollections": [[348, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorparameters": [[349, "module-armi.reactor.reactorParameters"]], "definecoreparameters() (in module armi.reactor.reactorparameters)": [[349, "armi.reactor.reactorParameters.defineCoreParameters"]], "definereactorparameters() (in module armi.reactor.reactorparameters)": [[349, "armi.reactor.reactorParameters.defineReactorParameters"]], "makeparametersreadonly() (in module armi.reactor.reactorparameters)": [[349, "armi.reactor.reactorParameters.makeParametersReadOnly"]], "reactor (class in armi.reactor.reactors)": [[350, "armi.reactor.reactors.Reactor"]], "add() (armi.reactor.reactors.reactor method)": [[350, "armi.reactor.reactors.Reactor.add"]], "armi.reactor.reactors": [[350, "module-armi.reactor.reactors"]], "factory() (in module armi.reactor.reactors)": [[350, "armi.reactor.reactors.factory"]], "incrementassemnum() (armi.reactor.reactors.reactor method)": [[350, "armi.reactor.reactors.Reactor.incrementAssemNum"]], "loadfromcs() (in module armi.reactor.reactors)": [[350, "armi.reactor.reactors.loadFromCs"]], "normalizenames() (armi.reactor.reactors.reactor method)": [[350, "armi.reactor.reactors.Reactor.normalizeNames"]], "pdefs (armi.reactor.reactors.reactor attribute)": [[350, "armi.reactor.reactors.Reactor.pDefs"]], "paramcollectiontype (armi.reactor.reactors.reactor attribute)": [[350, "armi.reactor.reactors.Reactor.paramCollectionType"]], "spentfuelpool (class in armi.reactor.spentfuelpool)": [[351, "armi.reactor.spentFuelPool.SpentFuelPool"]], "add() (armi.reactor.spentfuelpool.spentfuelpool method)": [[351, "armi.reactor.spentFuelPool.SpentFuelPool.add"]], "armi.reactor.spentfuelpool": [[351, "module-armi.reactor.spentFuelPool"]], "getassembly() (armi.reactor.spentfuelpool.spentfuelpool method)": [[351, "armi.reactor.spentFuelPool.SpentFuelPool.getAssembly"]], "normalizenames() (armi.reactor.spentfuelpool.spentfuelpool method)": [[351, "armi.reactor.spentFuelPool.SpentFuelPool.normalizeNames"]], "paramcollectiontype (armi.reactor.spentfuelpool.spentfuelpool attribute)": [[351, "armi.reactor.spentFuelPool.SpentFuelPool.paramCollectionType"]], "root_tag (armi.reactor.systemlayoutinput.systemlayoutinput attribute)": [[352, "armi.reactor.systemLayoutInput.SystemLayoutInput.ROOT_TAG"]], "systemlayoutinput (class in armi.reactor.systemlayoutinput)": [[352, "armi.reactor.systemLayoutInput.SystemLayoutInput"]], "armi.reactor.systemlayoutinput": [[352, "module-armi.reactor.systemLayoutInput"]], "fromreactor() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[352, "armi.reactor.systemLayoutInput.SystemLayoutInput.fromReactor"]], "growtofullcore() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[352, "armi.reactor.systemLayoutInput.SystemLayoutInput.growToFullCore"]], "loadfromcs() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[352, "armi.reactor.systemLayoutInput.SystemLayoutInput.loadFromCs"]], "modifyeqpaths() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[352, "armi.reactor.systemLayoutInput.SystemLayoutInput.modifyEqPaths"]], "readgeomfromfile() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[352, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromFile"]], "readgeomfromstream() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[352, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromStream"]], "togridblueprints() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[352, "armi.reactor.systemLayoutInput.SystemLayoutInput.toGridBlueprints"]], "writegeom() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[352, "armi.reactor.systemLayoutInput.SystemLayoutInput.writeGeom"]], "armi.reactor.tests": [[353, "module-armi.reactor.tests"]], "annularfueltestcase (class in armi.reactor.tests.test_assemblies)": [[354, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase"]], "assemblyinreactor_testcase (class in armi.reactor.tests.test_assemblies)": [[354, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase"]], "assembly_testcase (class in armi.reactor.tests.test_assemblies)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase"]], "materialinassembly_testcase (class in armi.reactor.tests.test_assemblies)": [[354, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase"]], "armi.reactor.tests.test_assemblies": [[354, "module-armi.reactor.tests.test_assemblies"]], "buildtestassemblies() (in module armi.reactor.tests.test_assemblies)": [[354, "armi.reactor.tests.test_assemblies.buildTestAssemblies"]], "maketestassembly() (in module armi.reactor.tests.test_assemblies)": [[354, "armi.reactor.tests.test_assemblies.makeTestAssembly"]], "test_uthzrmaterial() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_UThZrMaterial"]], "test_add() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_add"]], "test_adjustresolution() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_adjustResolution"]], "test_append() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_append"]], "test_areacheck() (armi.reactor.tests.test_assemblies.annularfueltestcase method)": [[354, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase.test_areaCheck"]], "test_assem_block_types() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_assem_block_types"]], "test_assem_hex_type() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_assem_hex_type"]], "test_averageplenumtemperature() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_averagePlenumTemperature"]], "test_calcavgparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcAvgParam"]], "test_calctotalparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcTotalParam"]], "test_calculatezcoords() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calculateZCoords"]], "test_carestiancoordinates() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_carestianCoordinates"]], "test_countblocksoftype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_countBlocksOfType"]], "test_duplicate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_duplicate"]], "test_extend() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_extend"]], "test_getage() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAge"]], "test_getarea() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getArea"]], "test_getaxialmesh() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAxialMesh"]], "test_getbindexfromzindex() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBIndexFromZIndex"]], "test_getblockdata() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlockData"]], "test_getblocks() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocks"]], "test_getblocksandz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksAndZ"]], "test_getblocksbetweenelevations() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksBetweenElevations"]], "test_getdim() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDim"]], "test_getdominantmaterial() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDominantMaterial"]], "test_getelevationboundariesbyblocktype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getElevationBoundariesByBlockType"]], "test_getelevationsmatchingparamvalue() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getElevationsMatchingParamValue"]], "test_getfirstblock() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlock"]], "test_getfirstblockbytype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlockByType"]], "test_getfissilemass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFissileMass"]], "test_getheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getHeight"]], "test_getlocation() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getLocation"]], "test_getmass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMass"]], "test_getmaxparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMaxParam"]], "test_getname() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getName"]], "test_getnum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getNum"]], "test_getparamvaluesatz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getParamValuesAtZ"]], "test_getreactiveheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getReactiveHeight"]], "test_gettotalheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getTotalHeight"]], "test_getvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getVolume"]], "test_hascontinuouscoolantchannel() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasContinuousCoolantChannel"]], "test_hasflags() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasFlags"]], "test_isonwhichsymmetryline() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_isOnWhichSymmetryLine"]], "test_iter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iter"]], "test_iteration() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iteration"]], "test_len() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_len"]], "test_makeaxialsnaplist() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_makeAxialSnapList"]], "test_moveto() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_moveTo"]], "test_notesparameter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_notesParameter"]], "test_pinplenumvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_pinPlenumVolume"]], "test_reattach() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reattach"]], "test_reestablishblockorder() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reestablishBlockOrder"]], "test_renameblocksaccordingtoassemblynum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_renameBlocksAccordingToAssemblyNum"]], "test_rotate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_rotate"]], "test_scaleparamswhenmoved() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_scaleParamsWhenMoved"]], "test_snapaxialmeshtoreference() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_snapAxialMeshToReference"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockigniter() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[354, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[354, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "test_sortnolocator() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_sortNoLocator"]], "test_updatefromassembly() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[354, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_updateFromAssembly"]], "blockenergydepositionconstants (class in armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants"]], "blockinputheightstests (class in armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.BlockInputHeightsTests"]], "block_testcase (class in armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase"]], "cartesianblock_testcase (class in armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase"]], "hexblock_testcase (class in armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase"]], "massconservationtests (class in armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.MassConservationTests"]], "pitch (armi.reactor.tests.test_blocks.cartesianblock_testcase attribute)": [[355, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.PITCH"]], "testdetailedndensupdate (class in armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate"]], "testhexblockorientation (class in armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.TestHexBlockOrientation"]], "testnegativevolume (class in armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.TestNegativeVolume"]], "thrzblock_testcase (class in armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase"]], "applydummydata() (in module armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.applyDummyData"]], "armi.reactor.tests.test_blocks": [[355, "module-armi.reactor.tests.test_blocks"]], "buildsimplefuelblock() (in module armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.buildSimpleFuelBlock"]], "getcomponentdata() (in module armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.getComponentData"]], "getlocalcoordinatesblockbounds() (armi.reactor.tests.test_blocks.testhexblockorientation static method)": [[355, "armi.reactor.tests.test_blocks.TestHexBlockOrientation.getLocalCoordinatesBlockBounds"]], "loadtestblock() (in module armi.reactor.tests.test_blocks)": [[355, "armi.reactor.tests.test_blocks.loadTestBlock"]], "test_100_getpinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_100_getPinPitch"]], "test_101_getpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_101_getPitch"]], "test_102_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_102_setPitch"]], "test_106_getareafractions() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_106_getAreaFractions"]], "test_27b_setenvgroup() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_27b_setEnvGroup"]], "test_add() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_add"]], "test_adjustdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustDensity"]], "test_adjustuenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustUEnrich"]], "test_axial() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_axial"]], "test_block_dims() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_block_dims"]], "test_cleardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_clearDensity"]], "test_coldmass() (armi.reactor.tests.test_blocks.massconservationtests method)": [[355, "armi.reactor.tests.test_blocks.MassConservationTests.test_coldMass"]], "test_completeinitialloading() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_completeInitialLoading"]], "test_component_type() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_component_type"]], "test_consistentareawithoverlappingcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentAreaWithOverlappingComponents"]], "test_consistentmassdensityvolumebetweencoldblockandcoldcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"]], "test_consistentmassdensityvolumebetweenhotblockandhotcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"]], "test_coords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_coords"]], "test_dimensionductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[355, "armi.reactor.tests.test_blocks.MassConservationTests.test_dimensionDuctHeatup"]], "test_duplicate() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_duplicate"]], "test_expandallelementalstoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandAllElementalsToIsotopics"]], "test_expandelementaltoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandElementalToIsotopics"]], "test_foundreactor() (armi.reactor.tests.test_blocks.blockinputheightstests method)": [[355, "armi.reactor.tests.test_blocks.BlockInputHeightsTests.test_foundReactor"]], "test_getarea() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getArea"]], "test_getcaptureenergygenerationconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[355, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getCaptureEnergyGenerationConstants"]], "test_getcartesiangrid() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getCartesianGrid"]], "test_getcomponent() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponent"]], "test_getcomponentareafrac() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentAreaFrac"]], "test_getcomponentbyname() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentByName"]], "test_getcomponentnames() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentNames"]], "test_getcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponents"]], "test_getcomponentsinlinkedorder() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsInLinkedOrder"]], "test_getcomponentsofmaterial() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfMaterial"]], "test_getcomponentsofshape() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfShape"]], "test_getdimensions() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getDimensions"]], "test_getductpitch() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getDuctPitch"]], "test_getfissilemassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFissileMassEnrich"]], "test_getfissionenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[355, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getFissionEnergyDepositionConstants"]], "test_getflowarea() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowArea"]], "test_getflowareaperpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowAreaPerPin"]], "test_getgammaenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[355, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getGammaEnergyDepositionConstants"]], "test_gethmdens() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHMDens"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getHydraulicDiameter"]], "test_getmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMass"]], "test_getmasses() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMasses"]], "test_getmfp() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMfp"]], "test_getmicrosuffix() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMicroSuffix"]], "test_getneutronenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[355, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getNeutronEnergyDepositionConstants"]], "test_getnumcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumComponents"]], "test_getnumpins() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumPins"]], "test_getnumpins() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getNumPins"]], "test_getnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberDensity"]], "test_getnumberofatoms() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberOfAtoms"]], "test_getpincenterflattoflat() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCenterFlatToFlat"]], "test_getpincoords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCoords"]], "test_getpincoordsandlocsagree() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCoordsAndLocsAgree"]], "test_getpinlocations() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinLocations"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchsquare() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchSquare"]], "test_getplenumpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPlenumPin"]], "test_getpu() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPu"]], "test_getreactionrates() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getReactionRates"]], "test_getsmeardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensity"]], "test_getsmeardensityedgecases() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensityEdgeCases"]], "test_getsmeardensitymultipleliner() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensityMultipleLiner"]], "test_getsortedcomponentsinsideofcomponentclad() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentClad"]], "test_getsortedcomponentsinsideofcomponentduct() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentDuct"]], "test_getthetarzgrid() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getThetaRZGrid"]], "test_gettotalenergygenerationconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[355, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getTotalEnergyGenerationConstants"]], "test_gettotalmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalMass"]], "test_gettotalndens() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalNDens"]], "test_gettype() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getType"]], "test_geturaniummassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumMassEnrich"]], "test_geturaniumnumenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumNumEnrich"]], "test_getvolumefractionwithoutparent() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionWithoutParent"]], "test_getvolumefractionswithzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionsWithZeroHeight"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getWettedPerimeter"]], "test_getwettedperimetercircularinnerduct() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getWettedPerimeterCircularInnerDuct"]], "test_getwettedperimeterhexinnerduct() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getWettedPerimeterHexInnerDuct"]], "test_getxstype() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_getXsType"]], "test_gridcreation() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridCreation"]], "test_gridnotcreatedmultiplemultiplicities() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNotCreatedMultipleMultiplicities"]], "test_gridnumpinsandlocations() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNumPinsAndLocations"]], "test_hascomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasComponents"]], "test_hasflags() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasFlags"]], "test_haspinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasPinPitch"]], "test_heightexpansiondifferences() (armi.reactor.tests.test_blocks.massconservationtests method)": [[355, "armi.reactor.tests.test_blocks.MassConservationTests.test_heightExpansionDifferences"]], "test_homogenizedmixture() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_homogenizedMixture"]], "test_masscladheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[355, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCladHeatup"]], "test_massconsistency() (armi.reactor.tests.test_blocks.massconservationtests method)": [[355, "armi.reactor.tests.test_blocks.MassConservationTests.test_massConsistency"]], "test_masscoolheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[355, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCoolHeatup"]], "test_massductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[355, "armi.reactor.tests.test_blocks.MassConservationTests.test_massDuctHeatup"]], "test_massfuelheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[355, "armi.reactor.tests.test_blocks.MassConservationTests.test_massFuelHeatup"]], "test_mergewithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_mergeWithBlock"]], "test_negativevolume() (armi.reactor.tests.test_blocks.testnegativevolume method)": [[355, "armi.reactor.tests.test_blocks.TestNegativeVolume.test_negativeVolume"]], "test_noblueprints() (armi.reactor.tests.test_blocks.blockinputheightstests method)": [[355, "armi.reactor.tests.test_blocks.BlockInputHeightsTests.test_noBlueprints"]], "test_pinmgfluxes() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_pinMgFluxes"]], "test_radii() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_radii"]], "test_removemass() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_removeMass"]], "test_replaceblockwithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_replaceBlockWithBlock"]], "test_retainstate() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_retainState"]], "test_setbulimitinfo() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_setBuLimitInfo"]], "test_setimportantparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_setImportantParams"]], "test_setlinpowbypin() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLinPowByPin"]], "test_setlocation() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLocation"]], "test_setmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_setMass"]], "test_setnumberdensities() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensity"]], "test_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_setPitch"]], "test_settype() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_setType"]], "test_setzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_setZeroHeight"]], "test_symmetryfactor() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_symmetryFactor"]], "test_theta() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_theta"]], "test_timenodeparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[355, "armi.reactor.tests.test_blocks.Block_TestCase.test_timeNodeParams"]], "test_updatedetailedndens() (armi.reactor.tests.test_blocks.testdetailedndensupdate method)": [[355, "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate.test_updateDetailedNdens"]], "test_validatereactorcornersup() (armi.reactor.tests.test_blocks.testhexblockorientation method)": [[355, "armi.reactor.tests.test_blocks.TestHexBlockOrientation.test_validateReactorCornersUp"]], "test_validatereactorflatsup() (armi.reactor.tests.test_blocks.testhexblockorientation method)": [[355, "armi.reactor.tests.test_blocks.TestHexBlockOrientation.test_validateReactorFlatsUp"]], "test_verifyblockdims() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[355, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_verifyBlockDims"]], "testcircle (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestCircle"]], "testcomponent (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestComponent"]], "testcomponentexpansion (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestComponentExpansion"]], "testcomponentfactory (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestComponentFactory"]], "testcube (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestCube"]], "testderivedshape (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestDerivedShape"]], "testderivedshapegetarea (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestDerivedShapeGetArea"]], "testdifferentialradialsegment (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestDifferentialRadialSegment"]], "testgeneralcomponents (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestGeneralComponents"]], "testhelix (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestHelix"]], "testhexholedcircle (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestHexHoledCircle"]], "testhexagon (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestHexagon"]], "testholedhexagon (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestHoledHexagon"]], "testholedrectangle (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestHoledRectangle"]], "testholedsquare (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestHoledSquare"]], "testmaterialadjustments (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestMaterialAdjustments"]], "testnullcomponent (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestNullComponent"]], "testpinquantities (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestPinQuantities"]], "testradialsegment (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestRadialSegment"]], "testrectangle (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestRectangle"]], "testshapedcomponent (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestShapedComponent"]], "testsolidrectangle (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestSolidRectangle"]], "testsphere (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestSphere"]], "testsquare (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestSquare"]], "testtriangle (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestTriangle"]], "testunshapedcomponent (class in armi.reactor.tests.test_components)": [[356, "armi.reactor.tests.test_components.TestUnshapedComponent"]], "armi.reactor.tests.test_components": [[356, "module-armi.reactor.tests.test_components"]], "coldouterdiameter (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[356, "armi.reactor.tests.test_components.TestComponentExpansion.coldOuterDiameter"]], "componentcls (armi.reactor.tests.test_components.testcircle attribute)": [[356, "armi.reactor.tests.test_components.TestCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcomponent attribute)": [[356, "armi.reactor.tests.test_components.TestComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcube attribute)": [[356, "armi.reactor.tests.test_components.TestCube.componentCls"]], "componentcls (armi.reactor.tests.test_components.testderivedshape attribute)": [[356, "armi.reactor.tests.test_components.TestDerivedShape.componentCls"]], "componentcls (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[356, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[356, "armi.reactor.tests.test_components.TestGeneralComponents.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhelix attribute)": [[356, "armi.reactor.tests.test_components.TestHelix.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[356, "armi.reactor.tests.test_components.TestHexHoledCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexagon attribute)": [[356, "armi.reactor.tests.test_components.TestHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedhexagon attribute)": [[356, "armi.reactor.tests.test_components.TestHoledHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedrectangle attribute)": [[356, "armi.reactor.tests.test_components.TestHoledRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedsquare attribute)": [[356, "armi.reactor.tests.test_components.TestHoledSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testnullcomponent attribute)": [[356, "armi.reactor.tests.test_components.TestNullComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testradialsegment attribute)": [[356, "armi.reactor.tests.test_components.TestRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testrectangle attribute)": [[356, "armi.reactor.tests.test_components.TestRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[356, "armi.reactor.tests.test_components.TestSolidRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsphere attribute)": [[356, "armi.reactor.tests.test_components.TestSphere.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsquare attribute)": [[356, "armi.reactor.tests.test_components.TestSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testtriangle attribute)": [[356, "armi.reactor.tests.test_components.TestTriangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[356, "armi.reactor.tests.test_components.TestUnshapedComponent.componentCls"]], "componentdims (armi.reactor.tests.test_components.testcircle attribute)": [[356, "armi.reactor.tests.test_components.TestCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testcube attribute)": [[356, "armi.reactor.tests.test_components.TestCube.componentDims"]], "componentdims (armi.reactor.tests.test_components.testderivedshape attribute)": [[356, "armi.reactor.tests.test_components.TestDerivedShape.componentDims"]], "componentdims (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[356, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[356, "armi.reactor.tests.test_components.TestGeneralComponents.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhelix attribute)": [[356, "armi.reactor.tests.test_components.TestHelix.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[356, "armi.reactor.tests.test_components.TestHexHoledCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexagon attribute)": [[356, "armi.reactor.tests.test_components.TestHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedhexagon attribute)": [[356, "armi.reactor.tests.test_components.TestHoledHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedrectangle attribute)": [[356, "armi.reactor.tests.test_components.TestHoledRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedsquare attribute)": [[356, "armi.reactor.tests.test_components.TestHoledSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testradialsegment attribute)": [[356, "armi.reactor.tests.test_components.TestRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testrectangle attribute)": [[356, "armi.reactor.tests.test_components.TestRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[356, "armi.reactor.tests.test_components.TestSolidRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsphere attribute)": [[356, "armi.reactor.tests.test_components.TestSphere.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsquare attribute)": [[356, "armi.reactor.tests.test_components.TestSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testtriangle attribute)": [[356, "armi.reactor.tests.test_components.TestTriangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[356, "armi.reactor.tests.test_components.TestUnshapedComponent.componentDims"]], "componentmassindependentofinputtemp() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[356, "armi.reactor.tests.test_components.TestComponentExpansion.componentMassIndependentOfInputTemp"]], "componentmaterial (armi.reactor.tests.test_components.testderivedshape attribute)": [[356, "armi.reactor.tests.test_components.TestDerivedShape.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[356, "armi.reactor.tests.test_components.TestGeneralComponents.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[356, "armi.reactor.tests.test_components.TestUnshapedComponent.componentMaterial"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedrectangle attribute)": [[356, "armi.reactor.tests.test_components.TestHoledRectangle.dimsToTestExpansion"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedsquare attribute)": [[356, "armi.reactor.tests.test_components.TestHoledSquare.dimsToTestExpansion"]], "expansionconservationcoldheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[356, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationColdHeightDefined"]], "expansionconservationhotheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[356, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationHotHeightDefined"]], "getcirclefueldict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[356, "armi.reactor.tests.test_components.TestComponentFactory.getCircleFuelDict"]], "getcirclevoiddict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[356, "armi.reactor.tests.test_components.TestComponentFactory.getCircleVoidDict"]], "runexpansiontests() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[356, "armi.reactor.tests.test_components.TestComponentExpansion.runExpansionTests"]], "setclassdims() (armi.reactor.tests.test_components.testholedrectangle method)": [[356, "armi.reactor.tests.test_components.TestHoledRectangle.setClassDims"]], "setclassdims() (armi.reactor.tests.test_components.testholedsquare method)": [[356, "armi.reactor.tests.test_components.TestHoledSquare.setClassDims"]], "tcold (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[356, "armi.reactor.tests.test_components.TestComponentExpansion.tCold"]], "thot (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[356, "armi.reactor.tests.test_components.TestComponentExpansion.tHot"]], "twarm (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[356, "armi.reactor.tests.test_components.TestComponentExpansion.tWarm"]], "test_b4cexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[356, "armi.reactor.tests.test_components.TestComponentExpansion.test_B4CExpansion"]], "test_ht9expansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[356, "armi.reactor.tests.test_components.TestComponentExpansion.test_HT9Expansion"]], "test_uzrexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[356, "armi.reactor.tests.test_components.TestComponentExpansion.test_UZrExpansion"]], "test_adjustmassenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[356, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassEnrichment"]], "test_adjustmassfrac_u() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[356, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U"]], "test_adjustmassfrac_u235() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[356, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U235"]], "test_adjustmassfrac_clear_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[356, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_clear_ZR"]], "test_adjustmassfrac_invalid() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[356, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_invalid"]], "test_adjustmassfrac_leave_same() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[356, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_leave_same"]], "test_adjustmassfrac_set_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[356, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_set_ZR"]], "test_badcomponentname() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_badComponentName"]], "test_changenumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_changeNumberDensities"]], "test_cmp() (armi.reactor.tests.test_components.testnullcomponent method)": [[356, "armi.reactor.tests.test_components.TestNullComponent.test_cmp"]], "test_componentinitializationandduplication() (armi.reactor.tests.test_components.testcomponentfactory method)": [[356, "armi.reactor.tests.test_components.TestComponentFactory.test_componentInitializationAndDuplication"]], "test_componentinteractionslinkingbydimensions() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingByDimensions"]], "test_componentinteractionslinkingbysubtraction() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingBySubtraction"]], "test_component_less_than() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[356, "armi.reactor.tests.test_components.TestUnshapedComponent.test_component_less_than"]], "test_computevolume() (armi.reactor.tests.test_components.testderivedshape method)": [[356, "armi.reactor.tests.test_components.TestDerivedShape.test_computeVolume"]], "test_density() (armi.reactor.tests.test_components.testshapedcomponent method)": [[356, "armi.reactor.tests.test_components.TestShapedComponent.test_density"]], "test_densityconsistent() (armi.reactor.tests.test_components.testshapedcomponent method)": [[356, "armi.reactor.tests.test_components.TestShapedComponent.test_densityConsistent"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[356, "armi.reactor.tests.test_components.TestHelix.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[356, "armi.reactor.tests.test_components.TestHexHoledCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[356, "armi.reactor.tests.test_components.TestHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[356, "armi.reactor.tests.test_components.TestHoledHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[356, "armi.reactor.tests.test_components.TestHoledRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[356, "armi.reactor.tests.test_components.TestRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[356, "armi.reactor.tests.test_components.TestSolidRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[356, "armi.reactor.tests.test_components.TestSquare.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[356, "armi.reactor.tests.test_components.TestTriangle.test_dimensionThermallyExpands"]], "test_factory() (armi.reactor.tests.test_components.testcomponentfactory method)": [[356, "armi.reactor.tests.test_components.TestComponentFactory.test_factory"]], "test_factorybadshapename() (armi.reactor.tests.test_components.testcomponentfactory method)": [[356, "armi.reactor.tests.test_components.TestComponentFactory.test_factoryBadShapeName"]], "test_finalizeloaddbadjuststd() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[356, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_finalizeLoadDBAdjustsTD"]], "test_fromcomponent() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[356, "armi.reactor.tests.test_components.TestUnshapedComponent.test_fromComponent"]], "test_fuelmass() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_fuelMass"]], "test_getarea() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhelix method)": [[356, "armi.reactor.tests.test_components.TestHelix.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexholedcircle method)": [[356, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexagon method)": [[356, "armi.reactor.tests.test_components.TestHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedhexagon method)": [[356, "armi.reactor.tests.test_components.TestHoledHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedrectangle method)": [[356, "armi.reactor.tests.test_components.TestHoledRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testrectangle method)": [[356, "armi.reactor.tests.test_components.TestRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsolidrectangle method)": [[356, "armi.reactor.tests.test_components.TestSolidRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsquare method)": [[356, "armi.reactor.tests.test_components.TestSquare.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testtriangle method)": [[356, "armi.reactor.tests.test_components.TestTriangle.test_getArea"]], "test_getareacoldtrue() (armi.reactor.tests.test_components.testderivedshapegetarea method)": [[356, "armi.reactor.tests.test_components.TestDerivedShapeGetArea.test_getAreaColdTrue"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testderivedshape method)": [[356, "armi.reactor.tests.test_components.TestDerivedShape.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[356, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhelix method)": [[356, "armi.reactor.tests.test_components.TestHelix.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[356, "armi.reactor.tests.test_components.TestHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[356, "armi.reactor.tests.test_components.TestHoledHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[356, "armi.reactor.tests.test_components.TestHoledRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testradialsegment method)": [[356, "armi.reactor.tests.test_components.TestRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[356, "armi.reactor.tests.test_components.TestRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsolidrectangle method)": [[356, "armi.reactor.tests.test_components.TestSolidRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsquare method)": [[356, "armi.reactor.tests.test_components.TestSquare.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[356, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getBoundingCircleOuterDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhelix method)": [[356, "armi.reactor.tests.test_components.TestHelix.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexholedcircle method)": [[356, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[356, "armi.reactor.tests.test_components.TestHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[356, "armi.reactor.tests.test_components.TestHoledHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[356, "armi.reactor.tests.test_components.TestHoledRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedsquare method)": [[356, "armi.reactor.tests.test_components.TestHoledSquare.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[356, "armi.reactor.tests.test_components.TestRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testsquare method)": [[356, "armi.reactor.tests.test_components.TestSquare.test_getCircleInnerDiameter"]], "test_getcomponentarea() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[356, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getComponentArea"]], "test_getdimension() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_getDimension"]], "test_getdimension() (armi.reactor.tests.test_components.testnullcomponent method)": [[356, "armi.reactor.tests.test_components.TestNullComponent.test_getDimension"]], "test_getenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[356, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_getEnrichment"]], "test_getnumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_getNumberDensities"]], "test_getperimeter() (armi.reactor.tests.test_components.testhexagon method)": [[356, "armi.reactor.tests.test_components.TestHexagon.test_getPerimeter"]], "test_getpinmgfluxes() (armi.reactor.tests.test_components.testpinquantities method)": [[356, "armi.reactor.tests.test_components.TestPinQuantities.test_getPinMgFluxes"]], "test_getthermalexpansionfactorconservedmassbylinearexpansionpercent() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"]], "test_getvolume() (armi.reactor.tests.test_components.testcube method)": [[356, "armi.reactor.tests.test_components.TestCube.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[356, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testradialsegment method)": [[356, "armi.reactor.tests.test_components.TestRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testsphere method)": [[356, "armi.reactor.tests.test_components.TestSphere.test_getVolume"]], "test_initializecomponentmaterial() (armi.reactor.tests.test_components.testcomponent method)": [[356, "armi.reactor.tests.test_components.TestComponent.test_initializeComponentMaterial"]], "test_invalidcoolantcomponentassignment() (armi.reactor.tests.test_components.testcomponentfactory method)": [[356, "armi.reactor.tests.test_components.TestComponentFactory.test_invalidCoolantComponentAssignment"]], "test_negativearea() (armi.reactor.tests.test_components.testrectangle method)": [[356, "armi.reactor.tests.test_components.TestRectangle.test_negativeArea"]], "test_negativearea() (armi.reactor.tests.test_components.testsquare method)": [[356, "armi.reactor.tests.test_components.TestSquare.test_negativeArea"]], "test_negativevolume() (armi.reactor.tests.test_components.testcube method)": [[356, "armi.reactor.tests.test_components.TestCube.test_negativeVolume"]], "test_nonzero() (armi.reactor.tests.test_components.testnullcomponent method)": [[356, "armi.reactor.tests.test_components.TestNullComponent.test_nonzero"]], "test_preservemassduringthermalexpansion() (armi.reactor.tests.test_components.testshapedcomponent method)": [[356, "armi.reactor.tests.test_components.TestShapedComponent.test_preserveMassDuringThermalExpansion"]], "test_setmassfrac() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[356, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFrac"]], "test_setmassfraconcomponentmaterial() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[356, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFracOnComponentMaterial"]], "test_setnumberdensities() (armi.reactor.tests.test_components.testcomponent method)": [[356, "armi.reactor.tests.test_components.TestComponent.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_components.testcomponent method)": [[356, "armi.reactor.tests.test_components.TestComponent.test_setNumberDensity"]], "test_solid_material() (armi.reactor.tests.test_components.testcomponent method)": [[356, "armi.reactor.tests.test_components.TestComponent.test_solid_material"]], "test_theoreticaldensitysetter() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_theoreticalDensitySetter"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[356, "armi.reactor.tests.test_components.TestCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcube method)": [[356, "armi.reactor.tests.test_components.TestCube.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[356, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[356, "armi.reactor.tests.test_components.TestHelix.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[356, "armi.reactor.tests.test_components.TestHexHoledCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[356, "armi.reactor.tests.test_components.TestHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[356, "armi.reactor.tests.test_components.TestHoledHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[356, "armi.reactor.tests.test_components.TestHoledRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedsquare method)": [[356, "armi.reactor.tests.test_components.TestHoledSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testradialsegment method)": [[356, "armi.reactor.tests.test_components.TestRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[356, "armi.reactor.tests.test_components.TestRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[356, "armi.reactor.tests.test_components.TestSolidRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsphere method)": [[356, "armi.reactor.tests.test_components.TestSphere.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[356, "armi.reactor.tests.test_components.TestSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[356, "armi.reactor.tests.test_components.TestTriangle.test_thermallyExpands"]], "test_updatedims() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[356, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_updateDims"]], "test_validparameters() (armi.reactor.tests.test_components.testhelix method)": [[356, "armi.reactor.tests.test_components.TestHelix.test_validParameters"]], "test_volumeafterclearcache() (armi.reactor.tests.test_components.testshapedcomponent method)": [[356, "armi.reactor.tests.test_components.TestShapedComponent.test_volumeAfterClearCache"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.A"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.A"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.B"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.B"]], "bprime (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.BPRIME"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.C"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.C"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.D"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.D"]], "dummycomposite (class in armi.reactor.tests.test_composites)": [[357, "armi.reactor.tests.test_composites.DummyComposite"]], "dummyleaf (class in armi.reactor.tests.test_composites)": [[357, "armi.reactor.tests.test_composites.DummyLeaf"]], "mockbp (class in armi.reactor.tests.test_composites)": [[357, "armi.reactor.tests.test_composites.MockBP"]], "testcompositepattern (class in armi.reactor.tests.test_composites)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern"]], "testcompositetree (class in armi.reactor.tests.test_composites)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree"]], "testflagserializer (class in armi.reactor.tests.test_composites)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer"]], "testflagserializer.testflagsa (class in armi.reactor.tests.test_composites)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA"]], "testflagserializer.testflagsb (class in armi.reactor.tests.test_composites)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB"]], "testgetreactionratedict (class in armi.reactor.tests.test_composites)": [[357, "armi.reactor.tests.test_composites.TestGetReactionRateDict"]], "testmiscmethods (class in armi.reactor.tests.test_composites)": [[357, "armi.reactor.tests.test_composites.TestMiscMethods"]], "activenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[357, "armi.reactor.tests.test_composites.MockBP.activeNuclides"]], "allnuclidesinproblem (armi.reactor.tests.test_composites.mockbp attribute)": [[357, "armi.reactor.tests.test_composites.MockBP.allNuclidesInProblem"]], "armi.reactor.tests.test_composites": [[357, "module-armi.reactor.tests.test_composites"]], "blueprintyaml (armi.reactor.tests.test_composites.testcompositetree attribute)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree.blueprintYaml"]], "customisotopics (armi.reactor.tests.test_composites.mockbp attribute)": [[357, "armi.reactor.tests.test_composites.MockBP.customIsotopics"]], "elementstoexpand (armi.reactor.tests.test_composites.mockbp attribute)": [[357, "armi.reactor.tests.test_composites.MockBP.elementsToExpand"]], "getboundingcircleouterdiameter() (armi.reactor.tests.test_composites.dummyleaf method)": [[357, "armi.reactor.tests.test_composites.DummyLeaf.getBoundingCircleOuterDiameter"]], "getchildren() (armi.reactor.tests.test_composites.dummyleaf method)": [[357, "armi.reactor.tests.test_composites.DummyLeaf.getChildren"]], "getchildrenwithflags() (armi.reactor.tests.test_composites.dummyleaf method)": [[357, "armi.reactor.tests.test_composites.DummyLeaf.getChildrenWithFlags"]], "getdummyparamdefs() (in module armi.reactor.tests.test_composites)": [[357, "armi.reactor.tests.test_composites.getDummyParamDefs"]], "inactivenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[357, "armi.reactor.tests.test_composites.MockBP.inactiveNuclides"]], "itercomponents() (armi.reactor.tests.test_composites.dummyleaf method)": [[357, "armi.reactor.tests.test_composites.DummyLeaf.iterComponents"]], "pdefs (armi.reactor.tests.test_composites.dummycomposite attribute)": [[357, "armi.reactor.tests.test_composites.DummyComposite.pDefs"]], "pdefs (armi.reactor.tests.test_composites.dummyleaf attribute)": [[357, "armi.reactor.tests.test_composites.DummyLeaf.pDefs"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummycomposite attribute)": [[357, "armi.reactor.tests.test_composites.DummyComposite.paramCollectionType"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummyleaf attribute)": [[357, "armi.reactor.tests.test_composites.DummyLeaf.paramCollectionType"]], "test_arechildernoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_areChildernOfType"]], "test_composite() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_composite"]], "test_constituentreport() (armi.reactor.tests.test_composites.testcompositetree method)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree.test_constituentReport"]], "test_containsatleastonechildoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsAtLeastOneChildOfType"]], "test_containsheavymetal() (armi.reactor.tests.test_composites.testmiscmethods method)": [[357, "armi.reactor.tests.test_composites.TestMiscMethods.test_containsHeavyMetal"]], "test_containsonlychildrenoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsOnlyChildrenOfType"]], "test_copyparamsfrom() (armi.reactor.tests.test_composites.testmiscmethods method)": [[357, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsFrom"]], "test_copyparamstochildren() (armi.reactor.tests.test_composites.testmiscmethods method)": [[357, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsToChildren"]], "test_dimensionreport() (armi.reactor.tests.test_composites.testmiscmethods method)": [[357, "armi.reactor.tests.test_composites.TestMiscMethods.test_dimensionReport"]], "test_expandlfps() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_expandLFPs"]], "test_flagconversion() (armi.reactor.tests.test_composites.testflagserializer method)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagConversion"]], "test_flagserialization() (armi.reactor.tests.test_composites.testflagserializer method)": [[357, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagSerialization"]], "test_getatomicweight() (armi.reactor.tests.test_composites.testmiscmethods method)": [[357, "armi.reactor.tests.test_composites.TestMiscMethods.test_getAtomicWeight"]], "test_getboundingcirlceouterdiameter() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_getBoundingCirlceOuterDiameter"]], "test_getchildren() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_getChildren"]], "test_getchildrenincludematerials() (armi.reactor.tests.test_composites.testcompositetree method)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree.test_getChildrenIncludeMaterials"]], "test_getfpmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFPMass"]], "test_getfissilemass() (armi.reactor.tests.test_composites.testcompositetree method)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFissileMass"]], "test_getfuelmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFuelMass"]], "test_gethmmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree.test_getHMMass"]], "test_getintegratedmgflux() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_getIntegratedMgFlux"]], "test_getlumpedfissionproductsifnecessarynullcase() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_getLumpedFissionProductsIfNecessaryNullCase"]], "test_getmaxparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMaxParam"]], "test_getminparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMinParam"]], "test_getname() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_getName"]], "test_getnuclides() (armi.reactor.tests.test_composites.testcompositetree method)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree.test_getNuclides"]], "test_getnumberdensities() (armi.reactor.tests.test_composites.testmiscmethods method)": [[357, "armi.reactor.tests.test_composites.TestMiscMethods.test_getNumberDensities"]], "test_getnumberdensitieswithexpandedfissionproducts() (armi.reactor.tests.test_composites.testmiscmethods method)": [[357, "armi.reactor.tests.test_composites.TestMiscMethods.test_getNumberDensitiesWithExpandedFissionProducts"]], "test_getparamnames() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_getParamNames"]], "test_getreactionratedict() (armi.reactor.tests.test_composites.testgetreactionratedict method)": [[357, "armi.reactor.tests.test_composites.TestGetReactionRateDict.test_getReactionRateDict"]], "test_getreactionrates() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_getReactionRates"]], "test_hasflags() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlags"]], "test_hasflagsnotypespecified() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsNoTypeSpecified"]], "test_hasflagssubstring() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsSubstring"]], "test_itercomponents() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_iterComponents"]], "test_namecontains() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_nameContains"]], "test_nucspec() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_nucSpec"]], "test_ordering() (armi.reactor.tests.test_composites.testcompositetree method)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree.test_ordering"]], "test_requireslumpedfissionproducts() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_requiresLumpedFissionProducts"]], "test_setchildrenlumpedfissionproducts() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_setChildrenLumpedFissionProducts"]], "test_setmass() (armi.reactor.tests.test_composites.testmiscmethods method)": [[357, "armi.reactor.tests.test_composites.TestMiscMethods.test_setMass"]], "test_sort() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_sort"]], "test_summing() (armi.reactor.tests.test_composites.testcompositetree method)": [[357, "armi.reactor.tests.test_composites.TestCompositeTree.test_summing"]], "test_syncparameters() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_syncParameters"]], "test_updatevolume() (armi.reactor.tests.test_composites.testcompositepattern method)": [[357, "armi.reactor.tests.test_composites.TestCompositePattern.test_updateVolume"]], "testexcorecollection (class in armi.reactor.tests.test_excorestructures)": [[358, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection"]], "testexcorestructure (class in armi.reactor.tests.test_excorestructures)": [[358, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure"]], "testspentfuelpool (class in armi.reactor.tests.test_excorestructures)": [[358, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool"]], "armi.reactor.tests.test_excorestructures": [[358, "module-armi.reactor.tests.test_excoreStructures"]], "test_add() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[358, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_add"]], "test_add() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[358, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_add"]], "test_addlikeattribute() (armi.reactor.tests.test_excorestructures.testexcorecollection method)": [[358, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection.test_addLikeAttribute"]], "test_addlikedict() (armi.reactor.tests.test_excorestructures.testexcorecollection method)": [[358, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection.test_addLikeDict"]], "test_constructor() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[358, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_constructor"]], "test_constructor() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[358, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_constructor"]], "test_getassembly() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[358, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_getAssembly"]], "test_getnextlocation() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[358, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_getNextLocation"]], "test_normalizenames() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[358, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_normalizeNames"]], "test_parentreactor() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[358, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_parentReactor"]], "test_representation() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[358, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_representation"]], "test_representation() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[358, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_representation"]], "test_updatenumberofcolumns() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[358, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_updateNumberOfColumns"]], "testflags (class in armi.reactor.tests.test_flags)": [[359, "armi.reactor.tests.test_flags.TestFlags"]], "armi.reactor.tests.test_flags": [[359, "module-armi.reactor.tests.test_flags"]], "test_convertsstringswithnonflags() (armi.reactor.tests.test_flags.testflags method)": [[359, "armi.reactor.tests.test_flags.TestFlags.test_convertsStringsWithNonFlags"]], "test_defaultisfalse() (armi.reactor.tests.test_flags.testflags method)": [[359, "armi.reactor.tests.test_flags.TestFlags.test_defaultIsFalse"]], "test_flagsdefinedwithnumbers() (armi.reactor.tests.test_flags.testflags method)": [[359, "armi.reactor.tests.test_flags.TestFlags.test_flagsDefinedWithNumbers"]], "test_flagstoandfromstring() (armi.reactor.tests.test_flags.testflags method)": [[359, "armi.reactor.tests.test_flags.TestFlags.test_flagsToAndFromString"]], "test_fromstring() (armi.reactor.tests.test_flags.testflags method)": [[359, "armi.reactor.tests.test_flags.TestFlags.test_fromString"]], "test_fromstringstrict() (armi.reactor.tests.test_flags.testflags method)": [[359, "armi.reactor.tests.test_flags.TestFlags.test_fromStringStrict"]], "test_fromstringwithnumbers() (armi.reactor.tests.test_flags.testflags method)": [[359, "armi.reactor.tests.test_flags.TestFlags.test_fromStringWithNumbers"]], "test_ispickleable() (armi.reactor.tests.test_flags.testflags method)": [[359, "armi.reactor.tests.test_flags.TestFlags.test_isPickleable"]], "test_lookup() (armi.reactor.tests.test_flags.testflags method)": [[359, "armi.reactor.tests.test_flags.TestFlags.test_lookup"]], "test_tostringalphabetical() (armi.reactor.tests.test_flags.testflags method)": [[359, "armi.reactor.tests.test_flags.TestFlags.test_toStringAlphabetical"]], "testgeomtype (class in armi.reactor.tests.test_geometry)": [[360, "armi.reactor.tests.test_geometry.TestGeomType"]], "testsymmetrytype (class in armi.reactor.tests.test_geometry)": [[360, "armi.reactor.tests.test_geometry.TestSymmetryType"]], "testsystemlayoutinput (class in armi.reactor.tests.test_geometry)": [[360, "armi.reactor.tests.test_geometry.TestSystemLayoutInput"]], "testsystemlayoutinputtrz (class in armi.reactor.tests.test_geometry)": [[360, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry": [[360, "module-armi.reactor.tests.test_geometry"]], "test_symmetryfactor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[360, "armi.reactor.tests.test_geometry.TestSymmetryType.test_SymmetryFactor"]], "test_trzyamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[360, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_TRZyamlIO"]], "test_asciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[360, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_asciimap"]], "test_baseconstructor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[360, "armi.reactor.tests.test_geometry.TestSymmetryType.test_baseConstructor"]], "test_checkvalidgeomsymmetrycombo() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[360, "armi.reactor.tests.test_geometry.TestSymmetryType.test_checkValidGeomSymmetryCombo"]], "test_domaintypenulls() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[360, "armi.reactor.tests.test_geometry.TestSymmetryType.test_domainTypeNulls"]], "test_fromany() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[360, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromAny"]], "test_fromstr() (armi.reactor.tests.test_geometry.testgeomtype method)": [[360, "armi.reactor.tests.test_geometry.TestGeomType.test_fromStr"]], "test_fromstr() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[360, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromStr"]], "test_growtofullcore() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[360, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_growToFullCore"]], "test_label() (armi.reactor.tests.test_geometry.testgeomtype method)": [[360, "armi.reactor.tests.test_geometry.TestGeomType.test_label"]], "test_label() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[360, "armi.reactor.tests.test_geometry.TestSymmetryType.test_label"]], "test_readasciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[360, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readAsciimap"]], "test_readhexgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[360, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readHexGeomXML"]], "test_readreactor() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[360, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readReactor"]], "test_readtrzgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[360, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_readTRZGeomXML"]], "test_str() (armi.reactor.tests.test_geometry.testgeomtype method)": [[360, "armi.reactor.tests.test_geometry.TestGeomType.test_str"]], "test_yamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[360, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_yamlIO"]], "boundary_data (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests attribute)": [[361, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.BOUNDARY_DATA"]], "boundary_params (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests attribute)": [[361, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.BOUNDARY_PARAMS"]], "emptyblockrotatetest (class in armi.reactor.tests.test_hexblockrotate)": [[361, "armi.reactor.tests.test_hexBlockRotate.EmptyBlockRotateTest"]], "hexblockrotatetests (class in armi.reactor.tests.test_hexblockrotate)": [[361, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests"]], "pin_data (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests attribute)": [[361, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.PIN_DATA"]], "pin_params (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests attribute)": [[361, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.PIN_PARAMS"]], "armi.reactor.tests.test_hexblockrotate": [[361, "module-armi.reactor.tests.test_hexBlockRotate"]], "assertindexlocationequivalent() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[361, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.assertIndexLocationEquivalent"]], "test_orientation() (armi.reactor.tests.test_hexblockrotate.emptyblockrotatetest method)": [[361, "armi.reactor.tests.test_hexBlockRotate.EmptyBlockRotateTest.test_orientation"]], "test_orientationvector() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[361, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.test_orientationVector"]], "test_pinparametersunmodified() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[361, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.test_pinParametersUnmodified"]], "test_pinrotationcoordinates() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[361, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.test_pinRotationCoordinates"]], "test_pinrotationlocations() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[361, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.test_pinRotationLocations"]], "test_rotateboundaryparameters() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[361, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.test_rotateBoundaryParameters"]], "test_updatechildlocations() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[361, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.test_updateChildLocations"]], "mockcomposite (class in armi.reactor.tests.test_parameters)": [[362, "armi.reactor.tests.test_parameters.MockComposite"]], "mockcompositechild (class in armi.reactor.tests.test_parameters)": [[362, "armi.reactor.tests.test_parameters.MockCompositeChild"]], "mockcompositegrandparent (class in armi.reactor.tests.test_parameters)": [[362, "armi.reactor.tests.test_parameters.MockCompositeGrandParent"]], "mockcompositeparent (class in armi.reactor.tests.test_parameters)": [[362, "armi.reactor.tests.test_parameters.MockCompositeParent"]], "paramcollectionwhere (class in armi.reactor.tests.test_parameters)": [[362, "armi.reactor.tests.test_parameters.ParamCollectionWhere"]], "paramcollectionwhere.scopeparamcollection (class in armi.reactor.tests.test_parameters)": [[362, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection"]], "parametertests (class in armi.reactor.tests.test_parameters)": [[362, "armi.reactor.tests.test_parameters.ParameterTests"]], "testmakeparametersreadonly (class in armi.reactor.tests.test_parameters)": [[362, "armi.reactor.tests.test_parameters.TestMakeParametersReadOnly"]], "armi.reactor.tests.test_parameters": [[362, "module-armi.reactor.tests.test_parameters"]], "pdefs (armi.reactor.tests.test_parameters.paramcollectionwhere.scopeparamcollection attribute)": [[362, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection.pDefs"]], "pb (armi.reactor.tests.test_parameters.paramcollectionwhere.scopeparamcollection attribute)": [[362, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection.pb"]], "test_attemptingtosetparamwithoutsetterfails() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_attemptingToSetParamWithoutSetterFails"]], "test_cannotcreateattrbuteonparametercollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateAttrbuteOnParameterCollectionSubclass"]], "test_cannotcreateinstanceof_nodefault() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_NoDefault"]], "test_cannotcreateinstanceof_undefined() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_Undefined"]], "test_cannotdefineparameterwithsamename() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameName"]], "test_cannotdefineparameterwithsamenameforcollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameNameForCollectionSubclass"]], "test_categories() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_categories"]], "test_complicated() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[362, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_complicated"]], "test_defaultlocation() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_defaultLocation"]], "test_getwithoutdefaultraisesparametererror() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_getWithoutDefaultRaisesParameterError"]], "test_makeparametersreadonly() (armi.reactor.tests.test_parameters.testmakeparametersreadonly method)": [[362, "armi.reactor.tests.test_parameters.TestMakeParametersReadOnly.test_makeParametersReadOnly"]], "test_mutabledefaultsnotsupported() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_mutableDefaultsNotSupported"]], "test_oncategory() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[362, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_onCategory"]], "test_onlocation() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[362, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_onLocation"]], "test_paramdefinitionscompose() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_paramDefinitionsCompose"]], "test_parampropertydoesnotconflict() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflict"]], "test_parampropertydoesnotconflictwithnonedefault() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflictWithNoneDefault"]], "test_parametercollectionshave__slots__() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_parameterCollectionsHave__slots__"]], "test_serializer_pack_unpack() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_serializer_pack_unpack"]], "test_setter() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_setter"]], "test_settergetterbasics() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_setterGetterBasics"]], "test_writesomeparamstodb() (armi.reactor.tests.test_parameters.parametertests method)": [[362, "armi.reactor.tests.test_parameters.ParameterTests.test_writeSomeParamsToDB"]], "cartesianreactorneighbortests (class in armi.reactor.tests.test_reactors)": [[363, "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests"]], "cartesianreactortests (class in armi.reactor.tests.test_reactors)": [[363, "armi.reactor.tests.test_reactors.CartesianReactorTests"]], "hexreactortests (class in armi.reactor.tests.test_reactors)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests"]], "reactortests (class in armi.reactor.tests.test_reactors)": [[363, "armi.reactor.tests.test_reactors.ReactorTests"]], "armi.reactor.tests.test_reactors": [[363, "module-armi.reactor.tests.test_reactors"]], "buildoperatorofemptycartesianblocks() (in module armi.reactor.tests.test_reactors)": [[363, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyCartesianBlocks"]], "buildoperatorofemptyhexblocks() (in module armi.reactor.tests.test_reactors)": [[363, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyHexBlocks"]], "test_add() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[363, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_add"]], "test_addmorenodes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_addMoreNodes"]], "test_addmultiplecores() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_addMultipleCores"]], "test_applythermalexpansion_coreconstruct() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_applyThermalExpansion_CoreConstruct"]], "test_buildmanualzones() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZones"]], "test_buildmanualzonesempty() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZonesEmpty"]], "test_coresfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_coreSfp"]], "test_countblocksoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_countBlocksOfType"]], "test_countfuelaxialblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_countFuelAxialBlocks"]], "test_createassemblyoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfType"]], "test_createassemblyoftypeexpandedcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfTypeExpandedCore"]], "test_createfreshfeed() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_createFreshFeed"]], "test_differentnuclidemodels() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_differentNuclideModels"]], "test_factorysortsetting() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_factorySortSetting"]], "test_findallaxialmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints"]], "test_findallaxialmeshpoints_wsubmesh() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints_wSubmesh"]], "test_findallazimeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAziMeshPoints"]], "test_findallmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllMeshPoints"]], "test_findallradmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllRadMeshPoints"]], "test_findaxialmeshindexof() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAxialMeshIndexOf"]], "test_findneighbors() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_findNeighbors"]], "test_findneighborscartesian() (armi.reactor.tests.test_reactors.cartesianreactorneighbortests method)": [[363, "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests.test_findNeighborsCartesian"]], "test_genassembliesaddedthiscycle() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_genAssembliesAddedThisCycle"]], "test_genblocksbylocname() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_genBlocksByLocName"]], "test_geomtype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_geomType"]], "test_getallxssuffixes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAllXsSuffixes"]], "test_getassembliesincircularring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInCircularRing"]], "test_getassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInHexRing"]], "test_getassembliesinsquarering() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[363, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssembliesInSquareRing"]], "test_getassembliesonsymmetryline() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesOnSymmetryLine"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[363, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssemblyPitch"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyPitch"]], "test_getassemblywithloc() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyWithLoc"]], "test_getassemblywithname() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyWithName"]], "test_getavgtemp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAvgTemp"]], "test_getblocksbyindices() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getBlocksByIndices"]], "test_getdominantmaterial() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getDominantMaterial"]], "test_getfirstfuelblockaxialnode() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFirstFuelBlockAxialNode"]], "test_getfluxvector() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFluxVector"]], "test_getfuelbottomheight() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFuelBottomHeight"]], "test_getgridbounds() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getGridBounds"]], "test_getmass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMass"]], "test_getmaxassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxAssembliesInHexRing"]], "test_getmaxnumpins() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxNumPins"]], "test_getminimumpercentfluxinfuel() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMinimumPercentFluxInFuel"]], "test_getnozzletypes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNozzleTypes"]], "test_getnuclidecategories() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNuclideCategories"]], "test_getnuclidecategorieslogging() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[363, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getNuclideCategoriesLogging"]], "test_getnumassemblieswithallringsfilledout() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOut"]], "test_getnumassemblieswithallringsfilledoutbipass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOutBipass"]], "test_getnumenergygroups() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumEnergyGroups"]], "test_getnumrings() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumRings"]], "test_getreactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getReactor"]], "test_getscalarevolution() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getScalarEvolution"]], "test_getsetparameters() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSetParameters"]], "test_getsymmetryfactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSymmetryFactor"]], "test_gettotalparam() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_getTotalParam"]], "test_growtofullcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_growToFullCore"]], "test_ifmissingspatialgrid() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_ifMissingSpatialGrid"]], "test_ispickleable() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_isPickleable"]], "test_locations() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_locations"]], "test_nonuniformassems() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_nonUniformAssems"]], "test_normalizenames() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_normalizeNames"]], "test_pincoordsallblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_pinCoordsAllBlocks"]], "test_removeassembliesinring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRing"]], "test_removeassembliesinringbycount() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingByCount"]], "test_removeassembliesinringhex() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingHex"]], "test_removeassembly() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembly"]], "test_removeassemblynosfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssemblyNoSfp"]], "test_restorereactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_restoreReactor"]], "test_saveallflux() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_saveAllFlux"]], "test_setb10voloncreation() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_setB10VolOnCreation"]], "test_setpitchuniform() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_setPitchUniform"]], "test_setpowerifnecessary() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_setPowerIfNecessary"]], "test_sortassembyring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortAssemByRing"]], "test_sortchildren() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortChildren"]], "test_updateblockbolheights_dbload() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_updateBlockBOLHeights_DBLoad"]], "test_whennoassemblies() (armi.reactor.tests.test_reactors.hexreactortests method)": [[363, "armi.reactor.tests.test_reactors.HexReactorTests.test_whenNoAssemblies"]], "testrztreactor (class in armi.reactor.tests.test_rz_reactors)": [[364, "armi.reactor.tests.test_rz_reactors.TestRZTReactor"]], "testrztreactormodern (class in armi.reactor.tests.test_rz_reactors)": [[364, "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern"]], "armi.reactor.tests.test_rz_reactors": [[364, "module-armi.reactor.tests.test_rz_reactors"]], "test_findallmeshpoints() (armi.reactor.tests.test_rz_reactors.testrztreactor method)": [[364, "armi.reactor.tests.test_rz_reactors.TestRZTReactor.test_findAllMeshPoints"]], "test_loadrzt() (armi.reactor.tests.test_rz_reactors.testrztreactor method)": [[364, "armi.reactor.tests.test_rz_reactors.TestRZTReactor.test_loadRZT"]], "test_loadrzt_reactor() (armi.reactor.tests.test_rz_reactors.testrztreactormodern method)": [[364, "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern.test_loadRZT_reactor"]], "testzone (class in armi.reactor.tests.test_zones)": [[365, "armi.reactor.tests.test_zones.TestZone"]], "testzones (class in armi.reactor.tests.test_zones)": [[365, "armi.reactor.tests.test_zones.TestZones"]], "armi.reactor.tests.test_zones": [[365, "module-armi.reactor.tests.test_zones"]], "test_additem() (armi.reactor.tests.test_zones.testzone method)": [[365, "armi.reactor.tests.test_zones.TestZone.test_addItem"]], "test_additems() (armi.reactor.tests.test_zones.testzone method)": [[365, "armi.reactor.tests.test_zones.TestZone.test_addItems"]], "test_addloc() (armi.reactor.tests.test_zones.testzone method)": [[365, "armi.reactor.tests.test_zones.TestZone.test_addLoc"]], "test_addlocs() (armi.reactor.tests.test_zones.testzone method)": [[365, "armi.reactor.tests.test_zones.TestZone.test_addLocs"]], "test_blocks() (armi.reactor.tests.test_zones.testzone method)": [[365, "armi.reactor.tests.test_zones.TestZone.test_blocks"]], "test_dictionaryinterface() (armi.reactor.tests.test_zones.testzones method)": [[365, "armi.reactor.tests.test_zones.TestZones.test_dictionaryInterface"]], "test_findzoneitisin() (armi.reactor.tests.test_zones.testzones method)": [[365, "armi.reactor.tests.test_zones.TestZones.test_findZoneItIsIn"]], "test_getalllocations() (armi.reactor.tests.test_zones.testzones method)": [[365, "armi.reactor.tests.test_zones.TestZones.test_getAllLocations"]], "test_getzonelocations() (armi.reactor.tests.test_zones.testzones method)": [[365, "armi.reactor.tests.test_zones.TestZones.test_getZoneLocations"]], "test_iteration() (armi.reactor.tests.test_zones.testzone method)": [[365, "armi.reactor.tests.test_zones.TestZone.test_iteration"]], "test_removeitem() (armi.reactor.tests.test_zones.testzone method)": [[365, "armi.reactor.tests.test_zones.TestZone.test_removeItem"]], "test_removeitems() (armi.reactor.tests.test_zones.testzone method)": [[365, "armi.reactor.tests.test_zones.TestZone.test_removeItems"]], "test_removeloc() (armi.reactor.tests.test_zones.testzone method)": [[365, "armi.reactor.tests.test_zones.TestZone.test_removeLoc"]], "test_removelocs() (armi.reactor.tests.test_zones.testzone method)": [[365, "armi.reactor.tests.test_zones.TestZone.test_removeLocs"]], "test_repr() (armi.reactor.tests.test_zones.testzone method)": [[365, "armi.reactor.tests.test_zones.TestZone.test_repr"]], "test_sortzones() (armi.reactor.tests.test_zones.testzones method)": [[365, "armi.reactor.tests.test_zones.TestZones.test_sortZones"]], "test_summary() (armi.reactor.tests.test_zones.testzones method)": [[365, "armi.reactor.tests.test_zones.TestZones.test_summary"]], "valid_types (armi.reactor.zones.zone attribute)": [[366, "armi.reactor.zones.Zone.VALID_TYPES"]], "zone (class in armi.reactor.zones)": [[366, "armi.reactor.zones.Zone"]], "zones (class in armi.reactor.zones)": [[366, "armi.reactor.zones.Zones"]], "additem() (armi.reactor.zones.zone method)": [[366, "armi.reactor.zones.Zone.addItem"]], "additems() (armi.reactor.zones.zone method)": [[366, "armi.reactor.zones.Zone.addItems"]], "addloc() (armi.reactor.zones.zone method)": [[366, "armi.reactor.zones.Zone.addLoc"]], "addlocs() (armi.reactor.zones.zone method)": [[366, "armi.reactor.zones.Zone.addLocs"]], "addzone() (armi.reactor.zones.zones method)": [[366, "armi.reactor.zones.Zones.addZone"]], "addzones() (armi.reactor.zones.zones method)": [[366, "armi.reactor.zones.Zones.addZones"]], "armi.reactor.zones": [[366, "module-armi.reactor.zones"]], "checkduplicates() (armi.reactor.zones.zones method)": [[366, "armi.reactor.zones.Zones.checkDuplicates"]], "findzoneitisin() (armi.reactor.zones.zones method)": [[366, "armi.reactor.zones.Zones.findZoneItIsIn"]], "getalllocations() (armi.reactor.zones.zones method)": [[366, "armi.reactor.zones.Zones.getAllLocations"]], "getzonelocations() (armi.reactor.zones.zones method)": [[366, "armi.reactor.zones.Zones.getZoneLocations"]], "names (armi.reactor.zones.zones property)": [[366, "armi.reactor.zones.Zones.names"]], "removeitem() (armi.reactor.zones.zone method)": [[366, "armi.reactor.zones.Zone.removeItem"]], "removeitems() (armi.reactor.zones.zone method)": [[366, "armi.reactor.zones.Zone.removeItems"]], "removeloc() (armi.reactor.zones.zone method)": [[366, "armi.reactor.zones.Zone.removeLoc"]], "removelocs() (armi.reactor.zones.zone method)": [[366, "armi.reactor.zones.Zone.removeLocs"]], "removezone() (armi.reactor.zones.zones method)": [[366, "armi.reactor.zones.Zones.removeZone"]], "removezones() (armi.reactor.zones.zones method)": [[366, "armi.reactor.zones.Zones.removeZones"]], "sortzones() (armi.reactor.zones.zones method)": [[366, "armi.reactor.zones.Zones.sortZones"]], "summary() (armi.reactor.zones.zones method)": [[366, "armi.reactor.zones.Zones.summary"]], "deduplicationfilter (class in armi.runlog)": [[367, "armi.runLog.DeduplicationFilter"]], "fmt (armi.runlog.runlogger attribute)": [[367, "armi.runLog.RunLogger.FMT"]], "nulllogger (class in armi.runlog)": [[367, "armi.runLog.NullLogger"]], "runlogger (class in armi.runlog)": [[367, "armi.runLog.RunLogger"]], "addhandler() (armi.runlog.nulllogger method)": [[367, "armi.runLog.NullLogger.addHandler"]], "allowstopduplicates() (armi.runlog.runlogger method)": [[367, "armi.runLog.RunLogger.allowStopDuplicates"]], "armi.runlog": [[367, "module-armi.runLog"]], "close() (armi.runlog.runlogger method)": [[367, "armi.runLog.RunLogger.close"]], "close() (in module armi.runlog)": [[367, "armi.runLog.close"]], "concatenatelogs() (in module armi.runlog)": [[367, "armi.runLog.concatenateLogs"]], "createlogdir() (in module armi.runlog)": [[367, "armi.runLog.createLogDir"]], "debug() (in module armi.runlog)": [[367, "armi.runLog.debug"]], "error() (in module armi.runlog)": [[367, "armi.runLog.error"]], "extra() (in module armi.runlog)": [[367, "armi.runLog.extra"]], "filter() (armi.runlog.deduplicationfilter method)": [[367, "armi.runLog.DeduplicationFilter.filter"]], "flush() (armi.runlog.runlogger method)": [[367, "armi.runLog.RunLogger.flush"]], "getduplicatesfilter() (armi.runlog.runlogger method)": [[367, "armi.runLog.RunLogger.getDuplicatesFilter"]], "getverbosity() (in module armi.runlog)": [[367, "armi.runLog.getVerbosity"]], "header() (in module armi.runlog)": [[367, "armi.runLog.header"]], "important() (in module armi.runlog)": [[367, "armi.runLog.important"]], "info() (in module armi.runlog)": [[367, "armi.runLog.info"]], "log() (armi.runlog.runlogger method)": [[367, "armi.runLog.RunLogger.log"]], "logfactory() (in module armi.runlog)": [[367, "armi.runLog.logFactory"]], "raw() (in module armi.runlog)": [[367, "armi.runLog.raw"]], "setverbosity() (armi.runlog.runlogger method)": [[367, "armi.runLog.RunLogger.setVerbosity"]], "setverbosity() (in module armi.runlog)": [[367, "armi.runLog.setVerbosity"]], "warning() (in module armi.runlog)": [[367, "armi.runLog.warning"]], "warningreport() (armi.runlog.runlogger method)": [[367, "armi.runLog.RunLogger.warningReport"]], "warningreport() (in module armi.runlog)": [[367, "armi.runLog.warningReport"]], "write() (armi.runlog.runlogger method)": [[367, "armi.runLog.RunLogger.write"]], "armi.settings": [[368, "module-armi.settings"]], "isboolsetting() (in module armi.settings)": [[368, "armi.settings.isBoolSetting"]], "promptforsettingsfile() (in module armi.settings)": [[368, "armi.settings.promptForSettingsFile"]], "recursivelyloadsettingsfiles() (in module armi.settings)": [[368, "armi.settings.recursivelyLoadSettingsFiles"]], "settings (class in armi.settings.casesettings)": [[369, "armi.settings.caseSettings.Settings"]], "armi.settings.casesettings": [[369, "module-armi.settings.caseSettings"]], "casetitle (armi.settings.casesettings.settings property)": [[369, "armi.settings.caseSettings.Settings.caseTitle"]], "defaultcasetitle (armi.settings.casesettings.settings attribute)": [[369, "armi.settings.caseSettings.Settings.defaultCaseTitle"]], "duplicate() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.duplicate"]], "environmentsettings (armi.settings.casesettings.settings property)": [[369, "armi.settings.caseSettings.Settings.environmentSettings"]], "failonload() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.failOnLoad"]], "getsetting() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.getSetting"]], "getsettingssetbyuser() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.getSettingsSetByUser"]], "initlogverbosity() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.initLogVerbosity"]], "inputdirectory (armi.settings.casesettings.settings property)": [[369, "armi.settings.caseSettings.Settings.inputDirectory"]], "items() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.items"]], "keys() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.keys"]], "loadfrominputfile() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.loadFromInputFile"]], "loadfromstring() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.loadFromString"]], "modified() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.modified"]], "registeruserplugins() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.registerUserPlugins"]], "reverttodefaults() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.revertToDefaults"]], "setmoduleverbosities() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.setModuleVerbosities"]], "updateenvironmentsettingsfrom() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.updateEnvironmentSettingsFrom"]], "values() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.values"]], "writetoyamlfile() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.writeToYamlFile"]], "writetoyamlstream() (armi.settings.casesettings.settings method)": [[369, "armi.settings.caseSettings.Settings.writeToYamlStream"]], "armi.settings.fwsettings": [[370, "module-armi.settings.fwSettings"]], "getframeworksettings() (in module armi.settings.fwsettings)": [[370, "armi.settings.fwSettings.getFrameworkSettings"]], "armi.settings.fwsettings.databasesettings": [[371, "module-armi.settings.fwSettings.databaseSettings"]], "definesettings() (in module armi.settings.fwsettings.databasesettings)": [[371, "armi.settings.fwSettings.databaseSettings.defineSettings"]], "armi.settings.fwsettings.globalsettings": [[372, "module-armi.settings.fwSettings.globalSettings"]], "definesettings() (in module armi.settings.fwsettings.globalsettings)": [[372, "armi.settings.fwSettings.globalSettings.defineSettings"]], "armi.settings.fwsettings.reportsettings": [[373, "module-armi.settings.fwSettings.reportSettings"]], "definesettings() (in module armi.settings.fwsettings.reportsettings)": [[373, "armi.settings.fwSettings.reportSettings.defineSettings"]], "tightcouplingsettingdef (class in armi.settings.fwsettings.tightcouplingsettings)": [[374, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef"]], "tightcouplingsettings (class in armi.settings.fwsettings.tightcouplingsettings)": [[374, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettings"]], "armi.settings.fwsettings.tightcouplingsettings": [[374, "module-armi.settings.fwSettings.tightCouplingSettings"]], "dump() (armi.settings.fwsettings.tightcouplingsettings.tightcouplingsettingdef method)": [[374, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef.dump"]], "serializetightcouplingsettings() (in module armi.settings.fwsettings.tightcouplingsettings)": [[374, "armi.settings.fwSettings.tightCouplingSettings.serializeTightCouplingSettings"]], "tightcouplingsettingsvalidator() (in module armi.settings.fwsettings.tightcouplingsettings)": [[374, "armi.settings.fwSettings.tightCouplingSettings.tightCouplingSettingsValidator"]], "default (class in armi.settings.setting)": [[375, "armi.settings.setting.Default"]], "flaglistsetting (class in armi.settings.setting)": [[375, "armi.settings.setting.FlagListSetting"]], "option (class in armi.settings.setting)": [[375, "armi.settings.setting.Option"]], "setting (class in armi.settings.setting)": [[375, "armi.settings.setting.Setting"]], "addoption() (armi.settings.setting.setting method)": [[375, "armi.settings.setting.Setting.addOption"]], "addoptions() (armi.settings.setting.setting method)": [[375, "armi.settings.setting.Setting.addOptions"]], "armi.settings.setting": [[375, "module-armi.settings.setting"]], "changedefault() (armi.settings.setting.setting method)": [[375, "armi.settings.setting.Setting.changeDefault"]], "containedtype (armi.settings.setting.setting property)": [[375, "armi.settings.setting.Setting.containedType"]], "default (armi.settings.setting.setting property)": [[375, "armi.settings.setting.Setting.default"]], "dump() (armi.settings.setting.flaglistsetting method)": [[375, "armi.settings.setting.FlagListSetting.dump"]], "dump() (armi.settings.setting.setting method)": [[375, "armi.settings.setting.Setting.dump"]], "getcustomattributes() (armi.settings.setting.setting method)": [[375, "armi.settings.setting.Setting.getCustomAttributes"]], "getdefaultattributes() (armi.settings.setting.setting method)": [[375, "armi.settings.setting.Setting.getDefaultAttributes"]], "isdefault() (armi.settings.setting.setting method)": [[375, "armi.settings.setting.Setting.isDefault"]], "offdefault (armi.settings.setting.setting property)": [[375, "armi.settings.setting.Setting.offDefault"]], "option (armi.settings.setting.option attribute)": [[375, "armi.settings.setting.Option.option"]], "reverttodefault() (armi.settings.setting.setting method)": [[375, "armi.settings.setting.Setting.revertToDefault"]], "schema() (armi.settings.setting.flaglistsetting static method)": [[375, "armi.settings.setting.FlagListSetting.schema"]], "setvalue() (armi.settings.setting.setting method)": [[375, "armi.settings.setting.Setting.setValue"]], "settingname (armi.settings.setting.default attribute)": [[375, "armi.settings.setting.Default.settingName"]], "settingname (armi.settings.setting.option attribute)": [[375, "armi.settings.setting.Option.settingName"]], "underlyingtype (armi.settings.setting.setting property)": [[375, "armi.settings.setting.Setting.underlyingType"]], "value (armi.settings.setting.default attribute)": [[375, "armi.settings.setting.Default.value"]], "value (armi.settings.setting.setting property)": [[375, "armi.settings.setting.Setting.value"]], "custom (armi.settings.settingsio.roots attribute)": [[376, "armi.settings.settingsIO.Roots.CUSTOM"]], "roots (class in armi.settings.settingsio)": [[376, "armi.settings.settingsIO.Roots"]], "runlogpromptcancel": [[376, "armi.settings.settingsIO.RunLogPromptCancel"]], "runlogpromptunresolvable": [[376, "armi.settings.settingsIO.RunLogPromptUnresolvable"]], "settingrenamer (class in armi.settings.settingsio)": [[376, "armi.settings.settingsIO.SettingRenamer"]], "settingsreader (class in armi.settings.settingsio)": [[376, "armi.settings.settingsIO.SettingsReader"]], "settingsreader.settingsinputformat (class in armi.settings.settingsio)": [[376, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat"]], "settingswriter (class in armi.settings.settingsio)": [[376, "armi.settings.settingsIO.SettingsWriter"]], "version (armi.settings.settingsio.roots attribute)": [[376, "armi.settings.settingsIO.Roots.VERSION"]], "yaml (armi.settings.settingsio.settingsreader.settingsinputformat attribute)": [[376, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.YAML"]], "armi.settings.settingsio": [[376, "module-armi.settings.settingsIO"]], "fromext() (armi.settings.settingsio.settingsreader.settingsinputformat class method)": [[376, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.fromExt"]], "prompt() (in module armi.settings.settingsio)": [[376, "armi.settings.settingsIO.prompt"]], "readfromfile() (armi.settings.settingsio.settingsreader method)": [[376, "armi.settings.settingsIO.SettingsReader.readFromFile"]], "readfromstream() (armi.settings.settingsio.settingsreader method)": [[376, "armi.settings.settingsIO.SettingsReader.readFromStream"]], "renamesetting() (armi.settings.settingsio.settingrenamer method)": [[376, "armi.settings.settingsIO.SettingRenamer.renameSetting"]], "writeyaml() (armi.settings.settingsio.settingswriter method)": [[376, "armi.settings.settingsIO.SettingsWriter.writeYaml"]], "inspector (class in armi.settings.settingsvalidation)": [[377, "armi.settings.settingsValidation.Inspector"]], "no_action() (armi.settings.settingsvalidation.inspector static method)": [[377, "armi.settings.settingsValidation.Inspector.NO_ACTION"]], "query (class in armi.settings.settingsvalidation)": [[377, "armi.settings.settingsValidation.Query"]], "addquery() (armi.settings.settingsvalidation.inspector method)": [[377, "armi.settings.settingsValidation.Inspector.addQuery"]], "addquerybadlocationwilllikelyfail() (armi.settings.settingsvalidation.inspector method)": [[377, "armi.settings.settingsValidation.Inspector.addQueryBadLocationWillLikelyFail"]], "addquerycurrentsettingmaynotsupportfeatures() (armi.settings.settingsvalidation.inspector method)": [[377, "armi.settings.settingsValidation.Inspector.addQueryCurrentSettingMayNotSupportFeatures"]], "armi.settings.settingsvalidation": [[377, "module-armi.settings.settingsValidation"]], "createqueryrevertbadpathtodefault() (in module armi.settings.settingsvalidation)": [[377, "armi.settings.settingsValidation.createQueryRevertBadPathToDefault"]], "iscorrective() (armi.settings.settingsvalidation.query method)": [[377, "armi.settings.settingsValidation.Query.isCorrective"]], "resolve() (armi.settings.settingsvalidation.query method)": [[377, "armi.settings.settingsValidation.Query.resolve"]], "run() (armi.settings.settingsvalidation.inspector method)": [[377, "armi.settings.settingsValidation.Inspector.run"]], "validateversion() (in module armi.settings.settingsvalidation)": [[377, "armi.settings.settingsValidation.validateVersion"]], "armi.settings.tests": [[378, "module-armi.settings.tests"]], "testinspector (class in armi.settings.tests.test_inspectors)": [[379, "armi.settings.tests.test_inspectors.TestInspector"]], "armi.settings.tests.test_inspectors": [[379, "module-armi.settings.tests.test_inspectors"]], "test_assigncs() (armi.settings.tests.test_inspectors.testinspector method)": [[379, "armi.settings.tests.test_inspectors.TestInspector.test_assignCS"]], "test_callablecorrectioncheck() (armi.settings.tests.test_inspectors.testinspector method)": [[379, "armi.settings.tests.test_inspectors.TestInspector.test_callableCorrectionCheck"]], "test_changeofcs() (armi.settings.tests.test_inspectors.testinspector method)": [[379, "armi.settings.tests.test_inspectors.TestInspector.test_changeOfCS"]], "test_checkforbothsimpleanddetailedcyclesinputs() (armi.settings.tests.test_inspectors.testinspector method)": [[379, "armi.settings.tests.test_inspectors.TestInspector.test_checkForBothSimpleAndDetailedCyclesInputs"]], "test_correctcyclestozeroburnup() (armi.settings.tests.test_inspectors.testinspector method)": [[379, "armi.settings.tests.test_inspectors.TestInspector.test_correctCyclesToZeroBurnup"]], "test_createqueryrevertbadpathtodefault() (armi.settings.tests.test_inspectors.testinspector method)": [[379, "armi.settings.tests.test_inspectors.TestInspector.test_createQueryRevertBadPathToDefault"]], "test_noncorrectivequery() (armi.settings.tests.test_inspectors.testinspector method)": [[379, "armi.settings.tests.test_inspectors.TestInspector.test_nonCorrectiveQuery"]], "test_overwritesettingscorrectivequery() (armi.settings.tests.test_inspectors.testinspector method)": [[379, "armi.settings.tests.test_inspectors.TestInspector.test_overwriteSettingsCorrectiveQuery"]], "test_query() (armi.settings.tests.test_inspectors.testinspector method)": [[379, "armi.settings.tests.test_inspectors.TestInspector.test_query"]], "dummysettingplugin1 (class in armi.settings.tests.test_settings)": [[380, "armi.settings.tests.test_settings.DummySettingPlugin1"]], "dummysettingplugin2 (class in armi.settings.tests.test_settings)": [[380, "armi.settings.tests.test_settings.DummySettingPlugin2"]], "pluginaddsoptions (class in armi.settings.tests.test_settings)": [[380, "armi.settings.tests.test_settings.PluginAddsOptions"]], "testaddingoptions (class in armi.settings.tests.test_settings)": [[380, "armi.settings.tests.test_settings.TestAddingOptions"]], "testflaglistsetting (class in armi.settings.tests.test_settings)": [[380, "armi.settings.tests.test_settings.TestFlagListSetting"]], "testsettings (class in armi.settings.tests.test_settings)": [[380, "armi.settings.tests.test_settings.TestSettings"]], "testsettings2 (class in armi.settings.tests.test_settings)": [[380, "armi.settings.tests.test_settings.TestSettings2"]], "testsettingsutils (class in armi.settings.tests.test_settings)": [[380, "armi.settings.tests.test_settings.TestSettingsUtils"]], "testsettingsvalidationutils (class in armi.settings.tests.test_settings)": [[380, "armi.settings.tests.test_settings.TestSettingsValidationUtils"]], "armi.settings.tests.test_settings": [[380, "module-armi.settings.tests.test_settings"]], "definesettings() (armi.settings.tests.test_settings.dummysettingplugin1 static method)": [[380, "armi.settings.tests.test_settings.DummySettingPlugin1.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.dummysettingplugin2 static method)": [[380, "armi.settings.tests.test_settings.DummySettingPlugin2.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.pluginaddsoptions static method)": [[380, "armi.settings.tests.test_settings.PluginAddsOptions.defineSettings"]], "test_addingoptions() (armi.settings.tests.test_settings.testaddingoptions method)": [[380, "armi.settings.tests.test_settings.TestAddingOptions.test_addingOptions"]], "test_copysetting() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_copySetting"]], "test_copysettingnotdefault() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_copySettingNotDefault"]], "test_csworks() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_csWorks"]], "test_default() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_default"]], "test_empty() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_empty"]], "test_flaglistsetting() (armi.settings.tests.test_settings.testflaglistsetting method)": [[380, "armi.settings.tests.test_settings.TestFlagListSetting.test_flagListSetting"]], "test_getfailures() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_getFailures"]], "test_getsettingssetbyuser() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_getSettingsSetByUser"]], "test_invalidflaglisttypeerror() (armi.settings.tests.test_settings.testflaglistsetting method)": [[380, "armi.settings.tests.test_settings.TestFlagListSetting.test_invalidFlagListTypeError"]], "test_listcoercion() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_listCoercion"]], "test_listsmutable() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_listsMutable"]], "test_metadata() (armi.settings.tests.test_settings.testsettings method)": [[380, "armi.settings.tests.test_settings.TestSettings.test_metaData"]], "test_modified() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_modified"]], "test_pluginsettings() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_pluginSettings"]], "test_pluginvalidatorsarediscovered() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_pluginValidatorsAreDiscovered"]], "test_prompt() (armi.settings.tests.test_settings.testsettingsutils method)": [[380, "armi.settings.tests.test_settings.TestSettingsUtils.test_prompt"]], "test_recursivescan() (armi.settings.tests.test_settings.testsettingsutils method)": [[380, "armi.settings.tests.test_settings.TestSettingsUtils.test_recursiveScan"]], "test_schemacheckstype() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_schemaChecksType"]], "test_setmoduleverbosities() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_setModuleVerbosities"]], "test_settingisokaytograb() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_settingIsOkayToGrab"]], "test_typedetection() (armi.settings.tests.test_settings.testsettings2 method)": [[380, "armi.settings.tests.test_settings.TestSettings2.test_typeDetection"]], "test_updateenvironmentsettingsfrom() (armi.settings.tests.test_settings.testsettings method)": [[380, "armi.settings.tests.test_settings.TestSettings.test_updateEnvironmentSettingsFrom"]], "test_validateversion() (armi.settings.tests.test_settings.testsettingsvalidationutils method)": [[380, "armi.settings.tests.test_settings.TestSettingsValidationUtils.test_validateVersion"]], "mockentrypoint (class in armi.settings.tests.test_settingsio)": [[381, "armi.settings.tests.test_settingsIO.MockEntryPoint"]], "settingargstests (class in armi.settings.tests.test_settingsio)": [[381, "armi.settings.tests.test_settingsIO.SettingArgsTests"]], "settingsfailuretests (class in armi.settings.tests.test_settingsio)": [[381, "armi.settings.tests.test_settingsIO.SettingsFailureTests"]], "settingsreadertests (class in armi.settings.tests.test_settingsio)": [[381, "armi.settings.tests.test_settingsIO.SettingsReaderTests"]], "settingsrenametests (class in armi.settings.tests.test_settingsio)": [[381, "armi.settings.tests.test_settingsIO.SettingsRenameTests"]], "settingswritertests (class in armi.settings.tests.test_settingsio)": [[381, "armi.settings.tests.test_settingsIO.SettingsWriterTests"]], "armi.settings.tests.test_settingsio": [[381, "module-armi.settings.tests.test_settingsIO"]], "name (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[381, "armi.settings.tests.test_settingsIO.MockEntryPoint.name"]], "settingsargument (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[381, "armi.settings.tests.test_settingsIO.MockEntryPoint.settingsArgument"]], "testsettings (armi.settings.tests.test_settingsio.settingsrenametests attribute)": [[381, "armi.settings.tests.test_settingsIO.SettingsRenameTests.testSettings"]], "test_basicsettingsreader() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[381, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_basicSettingsReader"]], "test_cannotloadsettingsafterparsingcommandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[381, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_cannotLoadSettingsAfterParsingCommandLineSetting"]], "test_collidingrenames() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[381, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_collidingRenames"]], "test_commandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[381, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_commandLineSetting"]], "test_errorsettingswriter() (armi.settings.tests.test_settingsio.settingswritertests method)": [[381, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_errorSettingsWriter"]], "test_invalidfile() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[381, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_invalidFile"]], "test_loadfromyamlfailsonbadnames() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[381, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_loadFromYamlFailsOnBadNames"]], "test_readfromfile() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[381, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_readFromFile"]], "test_rename() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[381, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_rename"]], "test_settingsobjsetting() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[381, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_settingsObjSetting"]], "test_writefull() (armi.settings.tests.test_settingsio.settingswritertests method)": [[381, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeFull"]], "test_writemedium() (armi.settings.tests.test_settingsio.settingswritertests method)": [[381, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeMedium"]], "test_writeshort() (armi.settings.tests.test_settingsio.settingswritertests method)": [[381, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeShort"]], "test_writeyaml() (armi.settings.tests.test_settingsio.settingswritertests method)": [[381, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeYaml"]], "armi.testing": [[382, "module-armi.testing"]], "loadtestreactor() (in module armi.testing)": [[382, "armi.testing.loadTestReactor"]], "reducetestreactorrings() (in module armi.testing)": [[382, "armi.testing.reduceTestReactorRings"]], "armitesthelper (class in armi.tests)": [[383, "armi.tests.ArmiTestHelper"]], "fixture (class in armi.tests)": [[383, "armi.tests.Fixture"]], "armi.tests": [[383, "module-armi.tests"]], "comparefileslinebyline() (armi.tests.armitesthelper method)": [[383, "armi.tests.ArmiTestHelper.compareFilesLineByLine"]], "comparelines() (armi.tests.armitesthelper static method)": [[383, "armi.tests.ArmiTestHelper.compareLines"]], "fixture() (in module armi.tests)": [[383, "armi.tests.fixture"]], "getemptycartesianreactor() (in module armi.tests)": [[383, "armi.tests.getEmptyCartesianReactor"]], "getemptyhexreactor() (in module armi.tests)": [[383, "armi.tests.getEmptyHexReactor"]], "rebaselinetextcomparisons() (in module armi.tests)": [[383, "armi.tests.rebaselineTextComparisons"]], "requires_fixture() (in module armi.tests)": [[383, "armi.tests.requires_fixture"]], "bufferlog (class in armi.tests.mockrunlogs)": [[384, "armi.tests.mockRunLogs.BufferLog"]], "logcounter (class in armi.tests.mockrunlogs)": [[384, "armi.tests.mockRunLogs.LogCounter"]], "armi.tests.mockrunlogs": [[384, "module-armi.tests.mockRunLogs"]], "clearsinglewarnings() (armi.tests.mockrunlogs.bufferlog method)": [[384, "armi.tests.mockRunLogs.BufferLog.clearSingleWarnings"]], "emptystdout() (armi.tests.mockrunlogs.bufferlog method)": [[384, "armi.tests.mockRunLogs.BufferLog.emptyStdout"]], "getstderrvalue() (armi.tests.mockrunlogs.bufferlog method)": [[384, "armi.tests.mockRunLogs.BufferLog.getStderrValue"]], "getstdout() (armi.tests.mockrunlogs.bufferlog method)": [[384, "armi.tests.mockRunLogs.BufferLog.getStdout"]], "log() (armi.tests.mockrunlogs.bufferlog method)": [[384, "armi.tests.mockRunLogs.BufferLog.log"]], "log() (armi.tests.mockrunlogs.logcounter method)": [[384, "armi.tests.mockRunLogs.LogCounter.log"]], "equilibriumshuffler (class in armi.tests.refsmallreactorshufflelogic)": [[385, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler"]], "armi.tests.refsmallreactorshufflelogic": [[385, "module-armi.tests.refSmallReactorShuffleLogic"]], "chooseswaps() (armi.tests.refsmallreactorshufflelogic.equilibriumshuffler method)": [[385, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler.chooseSwaps"]], "getfactorlist() (in module armi.tests.refsmallreactorshufflelogic)": [[385, "armi.tests.refSmallReactorShuffleLogic.getFactorList"]], "testapps (class in armi.tests.test_apps)": [[386, "armi.tests.test_apps.TestApps"]], "testarmihighlevel (class in armi.tests.test_apps)": [[386, "armi.tests.test_apps.TestArmiHighLevel"]], "testplugin1 (class in armi.tests.test_apps)": [[386, "armi.tests.test_apps.TestPlugin1"]], "testplugin2 (class in armi.tests.test_apps)": [[386, "armi.tests.test_apps.TestPlugin2"]], "testplugin3 (class in armi.tests.test_apps)": [[386, "armi.tests.test_apps.TestPlugin3"]], "testplugin4 (class in armi.tests.test_apps)": [[386, "armi.tests.test_apps.TestPlugin4"]], "armi.tests.test_apps": [[386, "module-armi.tests.test_apps"]], "defineparameterrenames() (armi.tests.test_apps.testplugin1 static method)": [[386, "armi.tests.test_apps.TestPlugin1.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin2 static method)": [[386, "armi.tests.test_apps.TestPlugin2.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin3 static method)": [[386, "armi.tests.test_apps.TestPlugin3.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin4 static method)": [[386, "armi.tests.test_apps.TestPlugin4.defineParameterRenames"]], "test_disablefutureconfigures() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_disableFutureConfigures"]], "test_getdefaultpluginmanager() (armi.tests.test_apps.testarmihighlevel method)": [[386, "armi.tests.test_apps.TestArmiHighLevel.test_getDefaultPluginManager"]], "test_getparamrenames() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_getParamRenames"]], "test_getparamrenamesinvalids() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_getParamRenamesInvalids"]], "test_getsettings() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_getSettings"]], "test_isstablereleaseversion() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_isStableReleaseVersion"]], "test_main() (armi.tests.test_apps.testarmihighlevel method)": [[386, "armi.tests.test_apps.TestArmiHighLevel.test_main"]], "test_overconfigured() (armi.tests.test_apps.testarmihighlevel method)": [[386, "armi.tests.test_apps.TestArmiHighLevel.test_overConfigured"]], "test_registerpluginflags() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_registerPluginFlags"]], "test_splashtext() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_splashText"]], "test_splashtextdifferentapp() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_splashTextDifferentApp"]], "test_version() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_version"]], "testarmitesthelper (class in armi.tests.test_armitesthelper)": [[387, "armi.tests.test_armiTestHelper.TestArmiTestHelper"]], "armi.tests.test_armitesthelper": [[387, "module-armi.tests.test_armiTestHelper"]], "test_comparefilesfail() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[387, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesFail"]], "test_comparefilessucceedfalsenegative() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[387, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucceedFalseNegative"]], "test_comparefilessucess() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[387, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucess"]], "cartesianreactortests (class in armi.tests.test_cartesian)": [[388, "armi.tests.test_cartesian.CartesianReactorTests"]], "armi.tests.test_cartesian": [[388, "module-armi.tests.test_cartesian"]], "test_custom() (armi.tests.test_cartesian.cartesianreactortests method)": [[388, "armi.tests.test_cartesian.CartesianReactorTests.test_custom"]], "testcontextserial (class in armi.tests.test_context)": [[389, "armi.tests.test_context.TestContextSerial"]], "armi.tests.test_context": [[389, "module-armi.tests.test_context"]], "test_nonnonedata() (armi.tests.test_context.testcontextserial method)": [[389, "armi.tests.test_context.TestContextSerial.test_nonNoneData"]], "test_rank() (armi.tests.test_context.testcontextserial method)": [[389, "armi.tests.test_context.TestContextSerial.test_rank"]], "dummyinterface (class in armi.tests.test_interfaces)": [[390, "armi.tests.test_interfaces.DummyInterface"]], "testcodeinterface (class in armi.tests.test_interfaces)": [[390, "armi.tests.test_interfaces.TestCodeInterface"]], "testtightcoupler (class in armi.tests.test_interfaces)": [[390, "armi.tests.test_interfaces.TestTightCoupler"]], "armi.tests.test_interfaces": [[390, "module-armi.tests.test_interfaces"]], "function (armi.tests.test_interfaces.dummyinterface attribute)": [[390, "armi.tests.test_interfaces.DummyInterface.function"]], "name (armi.tests.test_interfaces.dummyinterface attribute)": [[390, "armi.tests.test_interfaces.DummyInterface.name"]], "test_coupleractive() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_couplerActive"]], "test_distributable() (armi.tests.test_interfaces.testcodeinterface method)": [[390, "armi.tests.test_interfaces.TestCodeInterface.test_distributable"]], "test_duplicate() (armi.tests.test_interfaces.testcodeinterface method)": [[390, "armi.tests.test_interfaces.TestCodeInterface.test_duplicate"]], "test_enabled() (armi.tests.test_interfaces.testcodeinterface method)": [[390, "armi.tests.test_interfaces.TestCodeInterface.test_enabled"]], "test_getlistdimension() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_getListDimension"]], "test_isconverged() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_isConverged"]], "test_isconvergedruntimeerror() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedRuntimeError"]], "test_isconvergedvalueerror() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedValueError"]], "test_isrequesteddetailpoint() (armi.tests.test_interfaces.testcodeinterface method)": [[390, "armi.tests.test_interfaces.TestCodeInterface.test_isRequestedDetailPoint"]], "test_namecontains() (armi.tests.test_interfaces.testcodeinterface method)": [[390, "armi.tests.test_interfaces.TestCodeInterface.test_nameContains"]], "test_predistributestate() (armi.tests.test_interfaces.testcodeinterface method)": [[390, "armi.tests.test_interfaces.TestCodeInterface.test_preDistributeState"]], "test_storepreviousiterationvalue() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValue"]], "test_storepreviousiterationvalueexception() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValueException"]], "c5g7reactortests (class in armi.tests.test_lwrinputs)": [[391, "armi.tests.test_lwrInputs.C5G7ReactorTests"]], "armi.tests.test_lwrinputs": [[391, "module-armi.tests.test_lwrInputs"]], "test_loadc5g7() (armi.tests.test_lwrinputs.c5g7reactortests method)": [[391, "armi.tests.test_lwrInputs.C5G7ReactorTests.test_loadC5G7"]], "mpiitertests (class in armi.tests.test_mpiactions)": [[392, "armi.tests.test_mpiActions.MpiIterTests"]], "queueactionstests (class in armi.tests.test_mpiactions)": [[392, "armi.tests.test_mpiActions.QueueActionsTests"]], "armi.tests.test_mpiactions": [[392, "module-armi.tests.test_mpiActions"]], "passer() (in module armi.tests.test_mpiactions)": [[392, "armi.tests.test_mpiActions.passer"]], "test_diagnosepickleerrortestreactor() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_diagnosePickleErrorTestReactor"]], "test_disableforexclusivetasks() (armi.tests.test_mpiactions.queueactionstests method)": [[392, "armi.tests.test_mpiActions.QueueActionsTests.test_disableForExclusiveTasks"]], "test_excessprocesses() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_excessProcesses"]], "test_makequeue() (armi.tests.test_mpiactions.queueactionstests method)": [[392, "armi.tests.test_mpiActions.QueueActionsTests.test_makeQueue"]], "test_mpiiter() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_mpiIter"]], "test_parallel() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_parallel"]], "test_perfectbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_perfectBalancing"]], "test_runactionsdistributestateaction() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributeStateAction"]], "test_runactionsdistributionaction() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributionAction"]], "test_serialgather() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_serialGather"]], "test_typicalbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_typicalBalancing"]], "bcastaction1 (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.BcastAction1"]], "bcastaction2 (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.BcastAction2"]], "failinginterface1 (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.FailingInterface1"]], "failinginterface2 (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.FailingInterface2"]], "failinginterface3 (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.FailingInterface3"]], "mockinterface (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.MockInterface"]], "mpidistributestatetests (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.MpiDistributeStateTests"]], "mpioperatortests (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.MpiOperatorTests"]], "mpipathtoolstests (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.MpiPathToolsTests"]], "testcontextmpi (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.TestContextMpi"]], "armi.tests.test_mpifeatures": [[393, "module-armi.tests.test_mpiFeatures"]], "fail() (armi.tests.test_mpifeatures.failinginterface3 method)": [[393, "armi.tests.test_mpiFeatures.FailingInterface3.fail"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface1 method)": [[393, "armi.tests.test_mpiFeatures.FailingInterface1.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface2 method)": [[393, "armi.tests.test_mpiFeatures.FailingInterface2.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface3 method)": [[393, "armi.tests.test_mpiFeatures.FailingInterface3.interactEveryNode"]], "interactinit() (armi.tests.test_mpifeatures.mockinterface method)": [[393, "armi.tests.test_mpiFeatures.MockInterface.interactInit"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction1 method)": [[393, "armi.tests.test_mpiFeatures.BcastAction1.invokeHook"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction2 method)": [[393, "armi.tests.test_mpiFeatures.BcastAction2.invokeHook"]], "name (armi.tests.test_mpifeatures.failinginterface1 attribute)": [[393, "armi.tests.test_mpiFeatures.FailingInterface1.name"]], "name (armi.tests.test_mpifeatures.failinginterface2 attribute)": [[393, "armi.tests.test_mpiFeatures.FailingInterface2.name"]], "name (armi.tests.test_mpifeatures.failinginterface3 attribute)": [[393, "armi.tests.test_mpiFeatures.FailingInterface3.name"]], "name (armi.tests.test_mpifeatures.mockinterface attribute)": [[393, "armi.tests.test_mpiFeatures.MockInterface.name"]], "test_basicoperatormpi() (armi.tests.test_mpifeatures.mpioperatortests method)": [[393, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_basicOperatorMPI"]], "test_cleanpathmpi() (armi.tests.test_mpifeatures.mpipathtoolstests method)": [[393, "armi.tests.test_mpiFeatures.MpiPathToolsTests.test_cleanPathMpi"]], "test_compileresults() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[393, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_compileResults"]], "test_distributeinterfaces() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[393, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeInterfaces"]], "test_distributereactor() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[393, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeReactor"]], "test_distributesettings() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[393, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeSettings"]], "test_distributestate() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[393, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeState"]], "test_finalizeinteract() (armi.tests.test_mpifeatures.mpioperatortests method)": [[393, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_finalizeInteract"]], "test_nonnonedata() (armi.tests.test_mpifeatures.testcontextmpi method)": [[393, "armi.tests.test_mpiFeatures.TestContextMpi.test_nonNoneData"]], "test_primarycritical() (armi.tests.test_mpifeatures.mpioperatortests method)": [[393, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryCritical"]], "test_primaryexception() (armi.tests.test_mpifeatures.mpioperatortests method)": [[393, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryException"]], "test_rank() (armi.tests.test_mpifeatures.testcontextmpi method)": [[393, "armi.tests.test_mpiFeatures.TestContextMpi.test_rank"]], "workeroperate() (armi.tests.test_mpifeatures.failinginterface3 method)": [[393, "armi.tests.test_mpiFeatures.FailingInterface3.workerOperate"]], "mocksyncpc (class in armi.tests.test_mpiparameters)": [[394, "armi.tests.test_mpiParameters.MockSyncPC"]], "synchronizationtests (class in armi.tests.test_mpiparameters)": [[394, "armi.tests.test_mpiParameters.SynchronizationTests"]], "armi.tests.test_mpiparameters": [[394, "module-armi.tests.test_mpiParameters"]], "makecomp() (in module armi.tests.test_mpiparameters)": [[394, "armi.tests.test_mpiParameters.makeComp"]], "pdefs (armi.tests.test_mpiparameters.mocksyncpc attribute)": [[394, "armi.tests.test_mpiParameters.MockSyncPC.pDefs"]], "pb (armi.tests.test_mpiparameters.mocksyncpc attribute)": [[394, "armi.tests.test_mpiParameters.MockSyncPC.pb"]], "test_conflictsmaintainwithstateretainer() (armi.tests.test_mpiparameters.synchronizationtests method)": [[394, "armi.tests.test_mpiParameters.SynchronizationTests.test_conflictsMaintainWithStateRetainer"]], "test_noconflicts() (armi.tests.test_mpiparameters.synchronizationtests method)": [[394, "armi.tests.test_mpiParameters.SynchronizationTests.test_noConflicts"]], "test_withconflicts() (armi.tests.test_mpiparameters.synchronizationtests method)": [[394, "armi.tests.test_mpiParameters.SynchronizationTests.test_withConflicts"]], "test_withconflictsbutsamevalue() (armi.tests.test_mpiparameters.synchronizationtests method)": [[394, "armi.tests.test_mpiParameters.SynchronizationTests.test_withConflictsButSameValue"]], "notebooktests (class in armi.tests.test_notebooks)": [[395, "armi.tests.test_notebooks.NotebookTests"]], "armi.tests.test_notebooks": [[395, "module-armi.tests.test_notebooks"]], "runnotebook() (in module armi.tests.test_notebooks)": [[395, "armi.tests.test_notebooks.runNotebook"]], "test_rundatamodel() (armi.tests.test_notebooks.notebooktests method)": [[395, "armi.tests.test_notebooks.NotebookTests.test_runDataModel"]], "test_runparamsweep() (armi.tests.test_notebooks.notebooktests method)": [[395, "armi.tests.test_notebooks.NotebookTests.test_runParamSweep"]], "beforereactorplugin (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.BeforeReactorPlugin"]], "pluginflags1 (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.PluginFlags1"]], "sillyaxialexpansionchanger (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.SillyAxialExpansionChanger"]], "sillyaxialplugin (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.SillyAxialPlugin"]], "testplugin (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.TestPlugin"]], "testpluginbasics (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.TestPluginBasics"]], "testpluginregistration (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.TestPluginRegistration"]], "armi.tests.test_plugins": [[396, "module-armi.tests.test_plugins"]], "beforereactorconstruction() (armi.tests.test_plugins.beforereactorplugin static method)": [[396, "armi.tests.test_plugins.BeforeReactorPlugin.beforeReactorConstruction"]], "defineflags() (armi.tests.test_plugins.pluginflags1 static method)": [[396, "armi.tests.test_plugins.PluginFlags1.defineFlags"]], "expansiondata (armi.tests.test_plugins.sillyaxialexpansionchanger attribute)": [[396, "armi.tests.test_plugins.SillyAxialExpansionChanger.expansionData"]], "getaxialexpansionchanger() (armi.tests.test_plugins.sillyaxialplugin static method)": [[396, "armi.tests.test_plugins.SillyAxialPlugin.getAxialExpansionChanger"]], "linked (armi.tests.test_plugins.sillyaxialexpansionchanger attribute)": [[396, "armi.tests.test_plugins.SillyAxialExpansionChanger.linked"]], "plugin (armi.tests.test_plugins.testplugin attribute)": [[396, "armi.tests.test_plugins.TestPlugin.plugin"]], "test_axialexpansionhook() (armi.tests.test_plugins.testpluginregistration method)": [[396, "armi.tests.test_plugins.TestPluginRegistration.test_axialExpansionHook"]], "test_beforereactorconstructionhook() (armi.tests.test_plugins.testpluginregistration method)": [[396, "armi.tests.test_plugins.TestPluginRegistration.test_beforeReactorConstructionHook"]], "test_defineblueprintssections() (armi.tests.test_plugins.testplugin method)": [[396, "armi.tests.test_plugins.TestPlugin.test_defineBlueprintsSections"]], "test_defineflags() (armi.tests.test_plugins.testpluginregistration method)": [[396, "armi.tests.test_plugins.TestPluginRegistration.test_defineFlags"]], "test_defineparameters() (armi.tests.test_plugins.testpluginbasics method)": [[396, "armi.tests.test_plugins.TestPluginBasics.test_defineParameters"]], "test_exposeinterfaces() (armi.tests.test_plugins.testplugin method)": [[396, "armi.tests.test_plugins.TestPlugin.test_exposeInterfaces"]], "test_exposeinterfaces() (armi.tests.test_plugins.testpluginbasics method)": [[396, "armi.tests.test_plugins.TestPluginBasics.test_exposeInterfaces"]], "test_passivedbloadplugin() (armi.tests.test_plugins.testpluginregistration method)": [[396, "armi.tests.test_plugins.TestPluginRegistration.test_passiveDBLoadPlugin"]], "test_pluginsexposeinterfaces() (armi.tests.test_plugins.testpluginbasics method)": [[396, "armi.tests.test_plugins.TestPluginBasics.test_pluginsExposeInterfaces"]], "testrunlog (class in armi.tests.test_runlog)": [[397, "armi.tests.test_runLog.TestRunLog"]], "testrunlogger (class in armi.tests.test_runlog)": [[397, "armi.tests.test_runLog.TestRunLogger"]], "armi.tests.test_runlog": [[397, "module-armi.tests.test_runLog"]], "test_allowstopduplicates() (armi.tests.test_runlog.testrunlogger method)": [[397, "armi.tests.test_runLog.TestRunLogger.test_allowStopDuplicates"]], "test_callingstartlogmultipletimes() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_callingStartLogMultipleTimes"]], "test_closelogging() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_closeLogging"]], "test_concatenatelogs() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_concatenateLogs"]], "test_createlogdir() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_createLogDir"]], "test_getduplicatesfilter() (armi.tests.test_runlog.testrunlogger method)": [[397, "armi.tests.test_runLog.TestRunLogger.test_getDuplicatesFilter"]], "test_getwhitespace() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_getWhiteSpace"]], "test_invalidsetverbositybystring() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_invalidSetVerbosityByString"]], "test_parentrunlogging() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_parentRunLogging"]], "test_setverbosity() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_setVerbosity"]], "test_setverbositybeforestartlog() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_setVerbosityBeforeStartLog"]], "test_setverbosityfrominteger() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromInteger"]], "test_setverbosityfromstring() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromString"]], "test_verbosityoutofrange() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_verbosityOutOfRange"]], "test_warningreport() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_warningReport"]], "test_warningreportinvalid() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_warningReportInvalid"]], "test_write() (armi.tests.test_runlog.testrunlogger method)": [[397, "armi.tests.test_runLog.TestRunLogger.test_write"]], "testcomparefiles (class in armi.tests.test_tests)": [[398, "armi.tests.test_tests.TestCompareFiles"]], "armi.tests.test_tests": [[398, "module-armi.tests.test_tests"]], "test_comparefileline() (armi.tests.test_tests.testcomparefiles method)": [[398, "armi.tests.test_tests.TestCompareFiles.test_compareFileLine"]], "testuserplugins (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.TestUserPlugins"]], "upinterface (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UpInterface"]], "userpluginbaddefineparameterrenames (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames"]], "userpluginbaddefinessettings (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings"]], "userpluginflags (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginFlags"]], "userpluginflags2 (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginFlags2"]], "userpluginflags3 (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginFlags3"]], "userpluginonprocesscoreloading (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading"]], "userpluginwithinterface (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginWithInterface"]], "armi.tests.test_user_plugins": [[399, "module-armi.tests.test_user_plugins"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags static method)": [[399, "armi.tests.test_user_plugins.UserPluginFlags.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags2 static method)": [[399, "armi.tests.test_user_plugins.UserPluginFlags2.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags3 static method)": [[399, "armi.tests.test_user_plugins.UserPluginFlags3.defineFlags"]], "defineparameterrenames() (armi.tests.test_user_plugins.userpluginbaddefineparameterrenames static method)": [[399, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames.defineParameterRenames"]], "definesettings() (armi.tests.test_user_plugins.userpluginbaddefinessettings static method)": [[399, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings.defineSettings"]], "exposeinterfaces() (armi.tests.test_user_plugins.userpluginwithinterface static method)": [[399, "armi.tests.test_user_plugins.UserPluginWithInterface.exposeInterfaces"]], "interacteverynode() (armi.tests.test_user_plugins.upinterface method)": [[399, "armi.tests.test_user_plugins.UpInterface.interactEveryNode"]], "name (armi.tests.test_user_plugins.upinterface attribute)": [[399, "armi.tests.test_user_plugins.UpInterface.name"]], "onprocesscoreloading() (armi.tests.test_user_plugins.userpluginonprocesscoreloading static method)": [[399, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading.onProcessCoreLoading"]], "test_registerrepeateduserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_registerRepeatedUserPlugins"]], "test_registeruserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPlugins"]], "test_registeruserpluginsabspath() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsAbsPath"]], "test_registeruserpluginsfromsettings() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsFromSettings"]], "test_userpluginonprocesscoreloading() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginOnProcessCoreLoading"]], "test_userpluginwithinterfaces() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginWithInterfaces"]], "test_userpluginsflags() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginsFlags"]], "test_validateuserpluginlimitations() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_validateUserPluginLimitations"]], "mergeabledict (class in armi.utils)": [[400, "armi.utils.MergeableDict"]], "mypickler (class in armi.utils)": [[400, "armi.utils.MyPickler"]], "armi.utils": [[400, "module-armi.utils"]], "capstrlen() (in module armi.utils)": [[400, "armi.utils.capStrLen"]], "classesinhierarchy() (in module armi.utils)": [[400, "armi.utils.classesInHierarchy"]], "createformattedstrwithdelimiter() (in module armi.utils)": [[400, "armi.utils.createFormattedStrWithDelimiter"]], "dotestpickleonallcontents2() (in module armi.utils)": [[400, "armi.utils.doTestPickleOnAllContents2"]], "getavailabilityfactors() (in module armi.utils)": [[400, "armi.utils.getAvailabilityFactors"]], "getburnsteps() (in module armi.utils)": [[400, "armi.utils.getBurnSteps"]], "getcumulativenodenum() (in module armi.utils)": [[400, "armi.utils.getCumulativeNodeNum"]], "getcyclelengths() (in module armi.utils)": [[400, "armi.utils.getCycleLengths"]], "getcyclenames() (in module armi.utils)": [[400, "armi.utils.getCycleNames"]], "getcyclenodefromcumulativenode() (in module armi.utils)": [[400, "armi.utils.getCycleNodeFromCumulativeNode"]], "getcyclenodefromcumulativestep() (in module armi.utils)": [[400, "armi.utils.getCycleNodeFromCumulativeStep"]], "getfilesha1hash() (in module armi.utils)": [[400, "armi.utils.getFileSHA1Hash"]], "getmaxburnsteps() (in module armi.utils)": [[400, "armi.utils.getMaxBurnSteps"]], "getnodespercycle() (in module armi.utils)": [[400, "armi.utils.getNodesPerCycle"]], "getpowerfractions() (in module armi.utils)": [[400, "armi.utils.getPowerFractions"]], "getprevioustimenode() (in module armi.utils)": [[400, "armi.utils.getPreviousTimeNode"]], "getsteplengths() (in module armi.utils)": [[400, "armi.utils.getStepLengths"]], "hasburnup() (in module armi.utils)": [[400, "armi.utils.hasBurnup"]], "list2str() (in module armi.utils)": [[400, "armi.utils.list2str"]], "merge() (armi.utils.mergeabledict method)": [[400, "armi.utils.MergeableDict.merge"]], "plotmatrix() (in module armi.utils)": [[400, "armi.utils.plotMatrix"]], "prependtolist() (in module armi.utils)": [[400, "armi.utils.prependToList"]], "safecopy() (in module armi.utils)": [[400, "armi.utils.safeCopy"]], "safemove() (in module armi.utils)": [[400, "armi.utils.safeMove"]], "save() (armi.utils.mypickler method)": [[400, "armi.utils.MyPickler.save"]], "slantsplit() (in module armi.utils)": [[400, "armi.utils.slantSplit"]], "trypickleonallcontents() (in module armi.utils)": [[400, "armi.utils.tryPickleOnAllContents"]], "trypickleonallcontents3() (in module armi.utils)": [[400, "armi.utils.tryPickleOnAllContents3"]], "username() (in module armi.utils)": [[400, "armi.utils.userName"]], "asciimap (class in armi.utils.asciimaps)": [[401, "armi.utils.asciimaps.AsciiMap"]], "asciimapcartesian (class in armi.utils.asciimaps)": [[401, "armi.utils.asciimaps.AsciiMapCartesian"]], "asciimaphexfullflatsup (class in armi.utils.asciimaps)": [[401, "armi.utils.asciimaps.AsciiMapHexFullFlatsUp"]], "asciimaphexfulltipsup (class in armi.utils.asciimaps)": [[401, "armi.utils.asciimaps.AsciiMapHexFullTipsUp"]], "asciimaphexthirdflatsup (class in armi.utils.asciimaps)": [[401, "armi.utils.asciimaps.AsciiMapHexThirdFlatsUp"]], "armi.utils.asciimaps": [[401, "module-armi.utils.asciimaps"]], "asciilabelbyindices (armi.utils.asciimaps.asciimap attribute)": [[401, "armi.utils.asciimaps.AsciiMap.asciiLabelByIndices"]], "asciilines (armi.utils.asciimaps.asciimap attribute)": [[401, "armi.utils.asciimaps.AsciiMap.asciiLines"]], "asciimapfromgeomanddomain() (in module armi.utils.asciimaps)": [[401, "armi.utils.asciimaps.asciiMapFromGeomAndDomain"]], "asciioffsets (armi.utils.asciimaps.asciimap attribute)": [[401, "armi.utils.asciimaps.AsciiMap.asciiOffsets"]], "fromreactor() (armi.utils.asciimaps.asciimap static method)": [[401, "armi.utils.asciimaps.AsciiMap.fromReactor"]], "gridcontentstoascii() (armi.utils.asciimaps.asciimap method)": [[401, "armi.utils.asciimaps.AsciiMap.gridContentsToAscii"]], "items() (armi.utils.asciimaps.asciimap method)": [[401, "armi.utils.asciimaps.AsciiMap.items"]], "keys() (armi.utils.asciimaps.asciimap method)": [[401, "armi.utils.asciimaps.AsciiMap.keys"]], "readascii() (armi.utils.asciimaps.asciimap method)": [[401, "armi.utils.asciimaps.AsciiMap.readAscii"]], "writeascii() (armi.utils.asciimaps.asciimap method)": [[401, "armi.utils.asciimaps.AsciiMap.writeAscii"]], "mastertimer (class in armi.utils.codetiming)": [[402, "armi.utils.codeTiming.MasterTimer"]], "armi.utils.codetiming": [[402, "module-armi.utils.codeTiming"]], "endtimer() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.endTimer"]], "getactivetimers() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.getActiveTimers"]], "getmastertimer() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.getMasterTimer"]], "getmastertimer() (in module armi.utils.codetiming)": [[402, "armi.utils.codeTiming.getMasterTimer"]], "gettimer() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.getTimer"]], "report() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.report"]], "startall() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.startAll"]], "starttimer() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.startTimer"]], "stopall() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.stopAll"]], "time() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.time"]], "timed() (in module armi.utils.codetiming)": [[402, "armi.utils.codeTiming.timed"]], "timeline() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.timeline"]], "inputerror": [[403, "armi.utils.customExceptions.InputError"]], "invalidsettingsfileerror": [[403, "armi.utils.customExceptions.InvalidSettingsFileError"]], "invalidsettingsstopprocess": [[403, "armi.utils.customExceptions.InvalidSettingsStopProcess"]], "nonexistentsetting": [[403, "armi.utils.customExceptions.NonexistentSetting"]], "nonexistentsettingsfileerror": [[403, "armi.utils.customExceptions.NonexistentSettingsFileError"]], "settingexception": [[403, "armi.utils.customExceptions.SettingException"]], "armi.utils.customexceptions": [[403, "module-armi.utils.customExceptions"]], "important() (in module armi.utils.customexceptions)": [[403, "armi.utils.customExceptions.important"]], "info() (in module armi.utils.customexceptions)": [[403, "armi.utils.customExceptions.info"]], "warn() (in module armi.utils.customexceptions)": [[403, "armi.utils.customExceptions.warn"]], "warn_when_root() (in module armi.utils.customexceptions)": [[403, "armi.utils.customExceptions.warn_when_root"]], "applyisotopicsmix() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.applyIsotopicsMix"]], "armi.utils.densitytools": [[404, "module-armi.utils.densityTools"]], "calculatemassdensity() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.calculateMassDensity"]], "calculatenumberdensity() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.calculateNumberDensity"]], "expandelementalmassfracstonuclides() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.expandElementalMassFracsToNuclides"]], "expandelementalnuclidemassfracs() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.expandElementalNuclideMassFracs"]], "filternuclidelist() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.filterNuclideList"]], "formatmaterialcard() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.formatMaterialCard"]], "getchemicals() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.getChemicals"]], "getmassfractions() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.getMassFractions"]], "getmassingrams() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.getMassInGrams"]], "getndensfrommasses() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.getNDensFromMasses"]], "normalizenuclidelist() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.normalizeNuclideList"]], "directorychanger (class in armi.utils.directorychangers)": [[405, "armi.utils.directoryChangers.DirectoryChanger"]], "forcedcreationdirectorychanger (class in armi.utils.directorychangers)": [[405, "armi.utils.directoryChangers.ForcedCreationDirectoryChanger"]], "getrandomdirectory() (armi.utils.directorychangers.temporarydirectorychanger class method)": [[405, "armi.utils.directoryChangers.TemporaryDirectoryChanger.GetRandomDirectory"]], "temporarydirectorychanger (class in armi.utils.directorychangers)": [[405, "armi.utils.directoryChangers.TemporaryDirectoryChanger"]], "armi.utils.directorychangers": [[405, "module-armi.utils.directoryChangers"]], "close() (armi.utils.directorychangers.directorychanger method)": [[405, "armi.utils.directoryChangers.DirectoryChanger.close"]], "directorychangerfactory() (in module armi.utils.directorychangers)": [[405, "armi.utils.directoryChangers.directoryChangerFactory"]], "movefiles() (armi.utils.directorychangers.directorychanger method)": [[405, "armi.utils.directoryChangers.DirectoryChanger.moveFiles"]], "open() (armi.utils.directorychangers.directorychanger method)": [[405, "armi.utils.directoryChangers.DirectoryChanger.open"]], "retrievefiles() (armi.utils.directorychangers.directorychanger method)": [[405, "armi.utils.directoryChangers.DirectoryChanger.retrieveFiles"]], "mpidirectorychanger (class in armi.utils.directorychangersmpi)": [[406, "armi.utils.directoryChangersMpi.MpiDirectoryChanger"]], "armi.utils.directorychangersmpi": [[406, "module-armi.utils.directoryChangersMpi"]], "close() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[406, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.close"]], "open() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[406, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.open"]], "armi.utils.dynamicimporter": [[407, "module-armi.utils.dynamicImporter"]], "getentirefamilytree() (in module armi.utils.dynamicimporter)": [[407, "armi.utils.dynamicImporter.getEntireFamilyTree"]], "flag (class in armi.utils.flags)": [[408, "armi.utils.flags.Flag"]], "armi.utils.flags": [[408, "module-armi.utils.flags"]], "auto (class in armi.utils.flags)": [[408, "armi.utils.flags.auto"]], "extend() (armi.utils.flags.flag class method)": [[408, "armi.utils.flags.Flag.extend"]], "fields() (armi.utils.flags.flag class method)": [[408, "armi.utils.flags.Flag.fields"]], "from_bytes() (armi.utils.flags.flag class method)": [[408, "armi.utils.flags.Flag.from_bytes"]], "sortedfields() (armi.utils.flags.flag class method)": [[408, "armi.utils.flags.Flag.sortedFields"]], "to_bytes() (armi.utils.flags.flag method)": [[408, "armi.utils.flags.Flag.to_bytes"]], "width() (armi.utils.flags.flag class method)": [[408, "armi.utils.flags.Flag.width"]], "area() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.area"]], "armi.utils.hexagon": [[410, "module-armi.utils.hexagon"]], "corners() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.corners"]], "getindexofrotatedcell() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.getIndexOfRotatedCell"]], "numpositionsinring() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.numPositionsInRing"]], "numringstoholdnumcells() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.numRingsToHoldNumCells"]], "pitch() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.pitch"]], "side() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.side"]], "totalpositionsuptoring() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.totalPositionsUpToRing"]], "sequence (class in armi.utils.iterables)": [[411, "armi.utils.iterables.Sequence"]], "append() (armi.utils.iterables.sequence method)": [[411, "armi.utils.iterables.Sequence.append"]], "armi.utils.iterables": [[411, "module-armi.utils.iterables"]], "chunk() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.chunk"]], "copy() (armi.utils.iterables.sequence method)": [[411, "armi.utils.iterables.Sequence.copy"]], "drop() (armi.utils.iterables.sequence method)": [[411, "armi.utils.iterables.Sequence.drop"]], "extend() (armi.utils.iterables.sequence method)": [[411, "armi.utils.iterables.Sequence.extend"]], "flatten() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.flatten"]], "packbinarystrings() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.packBinaryStrings"]], "packhexstrings() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.packHexStrings"]], "pivot() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.pivot"]], "select() (armi.utils.iterables.sequence method)": [[411, "armi.utils.iterables.Sequence.select"]], "split() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.split"]], "transform() (armi.utils.iterables.sequence method)": [[411, "armi.utils.iterables.Sequence.transform"]], "unpackbinarystrings() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.unpackBinaryStrings"]], "unpackhexstrings() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.unpackHexStrings"]], "armi.utils.mathematics": [[412, "module-armi.utils.mathematics"]], "average1dwithintolerance() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.average1DWithinTolerance"]], "converttoslice() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.convertToSlice"]], "efmt() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.efmt"]], "expandrepeatedfloats() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.expandRepeatedFloats"]], "findclosest() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.findClosest"]], "findnearestvalue() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.findNearestValue"]], "findnearestvalueandindex() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.findNearestValueAndIndex"]], "fixthreedigitexp() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.fixThreeDigitExp"]], "getfloat() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.getFloat"]], "getstepsfromvalues() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.getStepsFromValues"]], "ismonotonic() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.isMonotonic"]], "linearinterpolation() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.linearInterpolation"]], "minimizescalarfunc() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.minimizeScalarFunc"]], "newtonsmethod() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.newtonsMethod"]], "parabolafrompoints() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.parabolaFromPoints"]], "parabolicinterpolation() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.parabolicInterpolation"]], "relerr() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.relErr"]], "resamplestepwise() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.resampleStepwise"]], "rotatexy() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.rotateXY"]], "armi.utils.outputcache": [[413, "module-armi.utils.outputCache"]], "cachecall() (in module armi.utils.outputcache)": [[413, "armi.utils.outputCache.cacheCall"]], "deletecache() (in module armi.utils.outputcache)": [[413, "armi.utils.outputCache.deleteCache"]], "retrieveoutput() (in module armi.utils.outputcache)": [[413, "armi.utils.outputCache.retrieveOutput"]], "store() (in module armi.utils.outputcache)": [[413, "armi.utils.outputCache.store"]], "armi.utils.parsing": [[414, "module-armi.utils.parsing"]], "datetimefromstr() (in module armi.utils.parsing)": [[414, "armi.utils.parsing.datetimeFromStr"]], "parsevalue() (in module armi.utils.parsing)": [[414, "armi.utils.parsing.parseValue"]], "tryliteraleval() (in module armi.utils.parsing)": [[414, "armi.utils.parsing.tryLiteralEval"]], "armi.utils.pathtools": [[415, "module-armi.utils.pathTools"]], "armiabspath() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.armiAbsPath"]], "cleanpath() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.cleanPath"]], "copyorwarn() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.copyOrWarn"]], "importcustompymodule() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.importCustomPyModule"]], "isaccessible() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.isAccessible"]], "isfilepathnewer() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.isFilePathNewer"]], "moduleandattributeexist() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.moduleAndAttributeExist"]], "separatemoduleandattribute() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.separateModuleAndAttribute"]], "depthslider (class in armi.utils.plotting)": [[416, "armi.utils.plotting.DepthSlider"]], "armi.utils.plotting": [[416, "module-armi.utils.plotting"]], "close() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.close"]], "colorgenerator() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.colorGenerator"]], "makehistogram() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.makeHistogram"]], "next() (armi.utils.plotting.depthslider method)": [[416, "armi.utils.plotting.DepthSlider.next"]], "plotassemblytypes() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.plotAssemblyTypes"]], "plotblockdepthmap() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.plotBlockDepthMap"]], "plotblockdiagram() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.plotBlockDiagram"]], "plotblockflux() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.plotBlockFlux"]], "plotfacemap() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.plotFaceMap"]], "plotnucxs() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.plotNucXs"]], "previous() (armi.utils.plotting.depthslider method)": [[416, "armi.utils.plotting.DepthSlider.previous"]], "set_val() (armi.utils.plotting.depthslider method)": [[416, "armi.utils.plotting.DepthSlider.set_val"]], "updatepagedepthcolor() (armi.utils.plotting.depthslider method)": [[416, "armi.utils.plotting.DepthSlider.updatePageDepthColor"]], "immutablepropertyerror": [[417, "armi.utils.properties.ImmutablePropertyError"]], "areequal() (in module armi.utils.properties)": [[417, "armi.utils.properties.areEqual"]], "armi.utils.properties": [[417, "module-armi.utils.properties"]], "createimmutableproperty() (in module armi.utils.properties)": [[417, "armi.utils.properties.createImmutableProperty"]], "lockimmutableproperties() (in module armi.utils.properties)": [[417, "armi.utils.properties.lockImmutableProperties"]], "numpyhackforequal() (in module armi.utils.properties)": [[417, "armi.utils.properties.numpyHackForEqual"]], "unlockimmutableproperties() (in module armi.utils.properties)": [[417, "armi.utils.properties.unlockImmutableProperties"]], "armi.utils.reportplotting": [[418, "module-armi.utils.reportPlotting"]], "createplotmetadata() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.createPlotMetaData"]], "keffvstime() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.keffVsTime"]], "movesvscycle() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.movesVsCycle"]], "plotaxialprofile() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.plotAxialProfile"]], "plotcoreoverviewradar() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.plotCoreOverviewRadar"]], "plotreactorperformance() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.plotReactorPerformance"]], "valuevstime() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.valueVsTime"]], "xshistoryvstime() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.xsHistoryVsTime"]], "datarow (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.DataRow"]], "iterable (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.Iterable"]], "line (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.Line"]], "sized (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.Sized"]], "tableformat (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.TableFormat"]], "textwrapper (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.TextWrapper"]], "args (armi.utils.tabulate.partial attribute)": [[419, "armi.utils.tabulate.partial.args"]], "armi.utils.tabulate": [[419, "module-armi.utils.tabulate"]], "begin (armi.utils.tabulate.datarow attribute)": [[419, "armi.utils.tabulate.DataRow.begin"]], "begin (armi.utils.tabulate.line attribute)": [[419, "armi.utils.tabulate.Line.begin"]], "chain (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.chain"]], "datarow (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.datarow"]], "end (armi.utils.tabulate.datarow attribute)": [[419, "armi.utils.tabulate.DataRow.end"]], "end (armi.utils.tabulate.line attribute)": [[419, "armi.utils.tabulate.Line.end"]], "fill() (armi.utils.tabulate.textwrapper method)": [[419, "armi.utils.tabulate.TextWrapper.fill"]], "from_iterable() (armi.utils.tabulate.chain method)": [[419, "armi.utils.tabulate.chain.from_iterable"]], "func (armi.utils.tabulate.partial attribute)": [[419, "armi.utils.tabulate.partial.func"]], "headerrow (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.headerrow"]], "hline (armi.utils.tabulate.line attribute)": [[419, "armi.utils.tabulate.Line.hline"]], "keywords (armi.utils.tabulate.partial attribute)": [[419, "armi.utils.tabulate.partial.keywords"]], "lineabove (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.lineabove"]], "linebelow (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.linebelow"]], "linebelowheader (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.linebelowheader"]], "linebetweenrows (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.linebetweenrows"]], "namedtuple() (in module armi.utils.tabulate)": [[419, "armi.utils.tabulate.namedtuple"]], "padding (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.padding"]], "partial (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.partial"]], "reduce() (in module armi.utils.tabulate)": [[419, "armi.utils.tabulate.reduce"]], "sentence_end_re (armi.utils.tabulate.textwrapper attribute)": [[419, "armi.utils.tabulate.TextWrapper.sentence_end_re"]], "sep (armi.utils.tabulate.datarow attribute)": [[419, "armi.utils.tabulate.DataRow.sep"]], "sep (armi.utils.tabulate.line attribute)": [[419, "armi.utils.tabulate.Line.sep"]], "tabulate() (in module armi.utils.tabulate)": [[419, "armi.utils.tabulate.tabulate"]], "unicode_whitespace_trans (armi.utils.tabulate.textwrapper attribute)": [[419, "armi.utils.tabulate.TextWrapper.unicode_whitespace_trans"]], "uspace (armi.utils.tabulate.textwrapper attribute)": [[419, "armi.utils.tabulate.TextWrapper.uspace"]], "withheaderhide (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.withHeaderHide"]], "wordsep_re (armi.utils.tabulate.textwrapper attribute)": [[419, "armi.utils.tabulate.TextWrapper.wordsep_re"]], "wordsep_simple_re (armi.utils.tabulate.textwrapper attribute)": [[419, "armi.utils.tabulate.TextWrapper.wordsep_simple_re"]], "wrap() (armi.utils.tabulate.textwrapper method)": [[419, "armi.utils.tabulate.TextWrapper.wrap"]], "x (armi.utils.tabulate.textwrapper attribute)": [[419, "armi.utils.tabulate.TextWrapper.x"]], "zip_longest (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.zip_longest"]], "armi.utils.tests": [[420, "module-armi.utils.tests"]], "testasciimaps (class in armi.utils.tests.test_asciimaps)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps"]], "armi.utils.tests.test_asciimaps": [[421, "module-armi.utils.tests.test_asciimaps"]], "test_cartesian() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_cartesian"]], "test_flathexbases() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_flatHexBases"]], "test_hexfullcornersup() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullCornersUp"]], "test_hexfullcornersupspotcheck() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullCornersUpSpotCheck"]], "test_hexfullflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullFlat"]], "test_hexfullflatsup() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullFlatsUp"]], "test_hexsmallflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexSmallFlat"]], "test_hexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexThird"]], "test_hexwithemptyrow() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithEmptyRow"]], "test_hexwithholes() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithHoles"]], "test_troublesomehexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_troublesomeHexThird"]], "codetimingtest (class in armi.utils.tests.test_codetiming)": [[422, "armi.utils.tests.test_codeTiming.CodeTimingTest"]], "armi.utils.tests.test_codetiming": [[422, "module-armi.utils.tests.test_codeTiming"]], "test_alternate_usages() (armi.utils.tests.test_codetiming.codetimingtest method)": [[422, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_alternate_usages"]], "test_master() (armi.utils.tests.test_codetiming.codetimingtest method)": [[422, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_master"]], "test_messy_starts_and_stops() (armi.utils.tests.test_codetiming.codetimingtest method)": [[422, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_messy_starts_and_stops"]], "test_method_definitions() (armi.utils.tests.test_codetiming.codetimingtest method)": [[422, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_method_definitions"]], "test_property_access() (armi.utils.tests.test_codetiming.codetimingtest method)": [[422, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_property_access"]], "customexceptiontests (class in armi.utils.tests.test_custom_exceptions)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions": [[423, "module-armi.utils.tests.test_custom_exceptions"]], "exampleimportantmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleImportantMessage"]], "exampleinfomessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleInfoMessage"]], "examplewarnmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnMessage"]], "examplewarnwhenrootmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnWhenRootMessage"]], "test_important_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_important_decorator"]], "test_info_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_info_decorator"]], "test_warn_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_decorator"]], "test_warn_when_root_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_when_root_decorator"]], "testdensitytools (class in armi.utils.tests.test_densitytools)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools"]], "uraniumoxide (class in armi.utils.tests.test_densitytools)": [[424, "armi.utils.tests.test_densityTools.UraniumOxide"]], "armi.utils.tests.test_densitytools": [[424, "module-armi.utils.tests.test_densityTools"]], "density() (armi.utils.tests.test_densitytools.uraniumoxide method)": [[424, "armi.utils.tests.test_densityTools.UraniumOxide.density"]], "pseudodensity() (armi.utils.tests.test_densitytools.uraniumoxide method)": [[424, "armi.utils.tests.test_densityTools.UraniumOxide.pseudoDensity"]], "test_applyisotopicsmix() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_applyIsotopicsMix"]], "test_calculatenumberdensity() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_calculateNumberDensity"]], "test_expandelement() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElement"]], "test_expandelementalmassfracstonuclides() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElementalMassFracsToNuclides"]], "test_expandelementalzeromassfrac() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElementalZeroMassFrac"]], "test_formatmaterialcard() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_formatMaterialCard"]], "test_getchemicals() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_getChemicals"]], "test_getmassfractions() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_getMassFractions"]], "test_getmassingrams() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_getMassInGrams"]], "test_getndensfrommasses() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_getNDensFromMasses"]], "test_normalizenuclidelist() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_normalizeNuclideList"]], "expectedexception": [[425, "armi.utils.tests.test_directoryChangers.ExpectedException"]], "testdirectorychangers (class in armi.utils.tests.test_directorychangers)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers"]], "armi.utils.tests.test_directorychangers": [[425, "module-armi.utils.tests.test_directoryChangers"]], "test_change_to_nonexisting_fails() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_fails"]], "test_change_to_nonexisting_works_forced() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_works_forced"]], "test_exception() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception"]], "test_exception_disabled() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception_disabled"]], "test_file_retrieval() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval"]], "test_file_retrieval_missing_file() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval_missing_file"]], "test_mpiaction() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiAction"]], "test_mpiactionfailsonnonexistentpath() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiActionFailsOnNonexistentPath"]], "test_temporary_cleans() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_temporary_cleans"]], "revealyourdirectory (class in armi.utils.tests.test_directorychangersmpi)": [[426, "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory"]], "testmpi (class in armi.utils.tests.test_directorychangersmpi)": [[426, "armi.utils.tests.test_directoryChangersMpi.TestMPI"]], "armi.utils.tests.test_directorychangersmpi": [[426, "module-armi.utils.tests.test_directoryChangersMpi"]], "invokehook() (armi.utils.tests.test_directorychangersmpi.revealyourdirectory method)": [[426, "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory.invokeHook"]], "test_mpidirectorychanger() (armi.utils.tests.test_directorychangersmpi.testmpi method)": [[426, "armi.utils.tests.test_directoryChangersMpi.TestMPI.test_MpiDirectoryChanger"]], "bar (armi.utils.tests.test_flags.exampleflag attribute)": [[427, "armi.utils.tests.test_flags.ExampleFlag.BAR"]], "baz (armi.utils.tests.test_flags.exampleflag attribute)": [[427, "armi.utils.tests.test_flags.ExampleFlag.BAZ"]], "exampleflag (class in armi.utils.tests.test_flags)": [[427, "armi.utils.tests.test_flags.ExampleFlag"]], "foo (armi.utils.tests.test_flags.exampleflag attribute)": [[427, "armi.utils.tests.test_flags.ExampleFlag.FOO"]], "testflag (class in armi.utils.tests.test_flags)": [[427, "armi.utils.tests.test_flags.TestFlag"]], "armi.utils.tests.test_flags": [[427, "module-armi.utils.tests.test_flags"]], "test_auto() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_auto"]], "test_bitwise() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_bitwise"]], "test_bool() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_bool"]], "test_collision_creation() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_collision_creation"]], "test_collision_extension() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_collision_extension"]], "test_extend() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_extend"]], "test_getitem() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_getitem"]], "test_hashable() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_hashable"]], "test_inclusion() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_inclusion"]], "test_iteration() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_iteration"]], "n_fuzzy_draws (armi.utils.tests.test_hexagon.testhexagon attribute)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.N_FUZZY_DRAWS"]], "testhexagon (class in armi.utils.tests.test_hexagon)": [[428, "armi.utils.tests.test_hexagon.TestHexagon"]], "armi.utils.tests.test_hexagon": [[428, "module-armi.utils.tests.test_hexagon"]], "test_hexagon_area() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_hexagon_area"]], "test_indexwithnorotation() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_indexWithNoRotation"]], "test_numpositionsinring() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_numPositionsInRing"]], "test_positionsuptoring() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_positionsUpToRing"]], "test_rotatefuzzy() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_rotateFuzzy"]], "test_rotatedcellcenter() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellCenter"]], "test_rotatedcellindexerrors() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellIndexErrors"]], "test_rotatedcellorientationerrors() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellOrientationErrors"]], "test_rotatedfirstring() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedFirstRing"]], "testiterables (class in armi.utils.tests.test_iterables)": [[429, "armi.utils.tests.test_iterables.TestIterables"]], "armi.utils.tests.test_iterables": [[429, "module-armi.utils.tests.test_iterables"]], "test_addingsequences() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_addingSequences"]], "test_appendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_appendSequence"]], "test_arraypivot() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_arrayPivot"]], "test_chunk() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_chunk"]], "test_copysequence() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_copySequence"]], "test_extendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_extendSequence"]], "test_flatten() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_flatten"]], "test_listpivot() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_listPivot"]], "test_packingandunpackingbinarystrings() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingBinaryStrings"]], "test_packingandunpackinghexstrings() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingHexStrings"]], "test_sequence() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_sequence"]], "test_sequenceinit() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_sequenceInit"]], "test_split() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_split"]], "testmath (class in armi.utils.tests.test_mathematics)": [[430, "armi.utils.tests.test_mathematics.TestMath"]], "armi.utils.tests.test_mathematics": [[430, "module-armi.utils.tests.test_mathematics"]], "test_average1dwithintolerance() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinTolerance"]], "test_average1dwithintoleranceinvalid() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinToleranceInvalid"]], "test_converttoslice() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_convertToSlice"]], "test_efmt() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_efmt"]], "test_expandrepeatedfloats() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_expandRepeatedFloats"]], "test_findclosest() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_findClosest"]], "test_findnearestvalue() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_findNearestValue"]], "test_fixthreedigitexp() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_fixThreeDigitExp"]], "test_getfloat() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_getFloat"]], "test_getstepsfromvalues() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_getStepsFromValues"]], "test_ismonotonic() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_isMonotonic"]], "test_linearinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_linearInterpolation"]], "test_minimizescalarfunc() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_minimizeScalarFunc"]], "test_newtonsmethod() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_newtonsMethod"]], "test_parabola() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_parabola"]], "test_parabolicinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_parabolicInterpolation"]], "test_relerr() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_relErr"]], "test_resamplestepwiseavg0() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg0"]], "test_resamplestepwiseavg1() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg1"]], "test_resamplestepwiseavg2() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg2"]], "test_resamplestepwiseavg3() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg3"]], "test_resamplestepwiseavg4() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg4"]], "test_resamplestepwiseavg5() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg5"]], "test_resamplestepwiseavg6() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg6"]], "test_resamplestepwiseavg7() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg7"]], "test_resamplestepwiseavgallnones() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgAllNones"]], "test_resamplestepwiseavgcomplicatednone() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgComplicatedNone"]], "test_resamplestepwiseavgnparray() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArray"]], "test_resamplestepwiseavgnparrayaverage() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArrayAverage"]], "test_resamplestepwiseavgonenone() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgOneNone"]], "test_resamplestepwisesum0() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum0"]], "test_resamplestepwisesum1() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum1"]], "test_resamplestepwisesum2() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum2"]], "test_resamplestepwisesum3() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum3"]], "test_resamplestepwisesum4() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum4"]], "test_resamplestepwisesum5() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum5"]], "test_resamplestepwisesum6() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum6"]], "test_resamplestepwisesum7() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum7"]], "test_resamplestepwisesumallnones() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumAllNones"]], "test_resamplestepwisesumonenone() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumOneNone"]], "test_rotatexy() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_rotateXY"]], "testoutputcache (class in armi.utils.tests.test_outputcache)": [[431, "armi.utils.tests.test_outputCache.TestOutputCache"]], "armi.utils.tests.test_outputcache": [[431, "module-armi.utils.tests.test_outputCache"]], "test_deletecache() (armi.utils.tests.test_outputcache.testoutputcache method)": [[431, "armi.utils.tests.test_outputCache.TestOutputCache.test_deleteCache"]], "test_getcachedfolder() (armi.utils.tests.test_outputcache.testoutputcache method)": [[431, "armi.utils.tests.test_outputCache.TestOutputCache.test_getCachedFolder"]], "test_hashfiles() (armi.utils.tests.test_outputcache.testoutputcache method)": [[431, "armi.utils.tests.test_outputCache.TestOutputCache.test_hashFiles"]], "test_makeoutputmanifest() (armi.utils.tests.test_outputcache.testoutputcache method)": [[431, "armi.utils.tests.test_outputCache.TestOutputCache.test_makeOutputManifest"]], "test_retrieveoutput() (armi.utils.tests.test_outputcache.testoutputcache method)": [[431, "armi.utils.tests.test_outputCache.TestOutputCache.test_retrieveOutput"]], "literalevaltest (class in armi.utils.tests.test_parsing)": [[432, "armi.utils.tests.test_parsing.LiteralEvalTest"]], "armi.utils.tests.test_parsing": [[432, "module-armi.utils.tests.test_parsing"]], "test_parsevalue() (armi.utils.tests.test_parsing.literalevaltest method)": [[432, "armi.utils.tests.test_parsing.LiteralEvalTest.test_parseValue"]], "test_tryliteraleval() (armi.utils.tests.test_parsing.literalevaltest method)": [[432, "armi.utils.tests.test_parsing.LiteralEvalTest.test_tryLiteralEval"]], "pathtoolstests (class in armi.utils.tests.test_pathtools)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests"]], "armi.utils.tests.test_pathtools": [[433, "module-armi.utils.tests.test_pathTools"]], "test_cleanpathnompi() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_cleanPathNoMpi"]], "test_copyorwarndir() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_copyOrWarnDir"]], "test_copyorwarnfile() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_copyOrWarnFile"]], "test_importcustommodule() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_importCustomModule"]], "test_isaccessible() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_isAccessible"]], "test_isfilepathnewer() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_isFilePathNewer"]], "test_moduleandattributeexist() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_moduleAndAttributeExist"]], "test_separatemoduleandattribute() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_separateModuleAndAttribute"]], "testpatches (class in armi.utils.tests.test_plotting)": [[434, "armi.utils.tests.test_plotting.TestPatches"]], "testplotting (class in armi.utils.tests.test_plotting)": [[434, "armi.utils.tests.test_plotting.TestPlotting"]], "armi.utils.tests.test_plotting": [[434, "module-armi.utils.tests.test_plotting"]], "test_makeassempatches() (armi.utils.tests.test_plotting.testpatches method)": [[434, "armi.utils.tests.test_plotting.TestPatches.test_makeAssemPatches"]], "test_plotassemblytypes() (armi.utils.tests.test_plotting.testplotting method)": [[434, "armi.utils.tests.test_plotting.TestPlotting.test_plotAssemblyTypes"]], "test_plotblockflux() (armi.utils.tests.test_plotting.testplotting method)": [[434, "armi.utils.tests.test_plotting.TestPlotting.test_plotBlockFlux"]], "test_plotcartesianblock() (armi.utils.tests.test_plotting.testplotting method)": [[434, "armi.utils.tests.test_plotting.TestPlotting.test_plotCartesianBlock"]], "test_plotdepthmap() (armi.utils.tests.test_plotting.testplotting method)": [[434, "armi.utils.tests.test_plotting.TestPlotting.test_plotDepthMap"]], "test_plothexblock() (armi.utils.tests.test_plotting.testplotting method)": [[434, "armi.utils.tests.test_plotting.TestPlotting.test_plotHexBlock"]], "immutableclass (class in armi.utils.tests.test_properties)": [[435, "armi.utils.tests.test_properties.ImmutableClass"]], "immutablepropertytests (class in armi.utils.tests.test_properties)": [[435, "armi.utils.tests.test_properties.ImmutablePropertyTests"]], "armi.utils.tests.test_properties": [[435, "module-armi.utils.tests.test_properties"]], "initialize() (armi.utils.tests.test_properties.immutableclass method)": [[435, "armi.utils.tests.test_properties.ImmutableClass.initialize"]], "mynum (armi.utils.tests.test_properties.immutableclass property)": [[435, "armi.utils.tests.test_properties.ImmutableClass.myNum"]], "test_cannotassignvaluetoimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[435, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_cannotAssignValueToImmutableProperty"]], "test_retreivingunassignedvalueraiseserror() (armi.utils.tests.test_properties.immutablepropertytests method)": [[435, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_retreivingUnassignedValueRaisesError"]], "test_unlockdoesnotpermitsreassignmentofanimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[435, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "testradar (class in armi.utils.tests.test_reportplotting)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar"]], "armi.utils.tests.test_reportplotting": [[436, "module-armi.utils.tests.test_reportPlotting"]], "test_createplotmetadata() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_createPlotMetaData"]], "test_keffvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_keffVsTime"]], "test_movesvscycle() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_movesVsCycle"]], "test_plotaxialprofile() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_plotAxialProfile"]], "test_radar() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_radar"]], "test_valuevstime() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_valueVsTime"]], "test_xshistoryvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_xsHistoryVsTime"]], "testtabulateapi (class in armi.utils.tests.test_tabulate)": [[437, "armi.utils.tests.test_tabulate.TestTabulateAPI"]], "testtabulateinputs (class in armi.utils.tests.test_tabulate)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs"]], "testtabulateinternal (class in armi.utils.tests.test_tabulate)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal"]], "testtabulateoutput (class in armi.utils.tests.test_tabulate)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput"]], "armi.utils.tests.test_tabulate": [[437, "module-armi.utils.tests.test_tabulate"]], "test_aligncellveriticallybottommultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyBottomMultiTextMultiplePad"]], "test_aligncellveriticallybottomsingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyBottomSingleTextMultiplePad"]], "test_aligncellveriticallycentermultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyCenterMultiTextMultiplePad"]], "test_aligncellveriticallycentersingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyCenterSingleTextMultiplePad"]], "test_aligncellveriticallyonelineonly() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyOneLineOnly"]], "test_aligncellveriticallytopmultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyTopMultiTextMultiplePad"]], "test_aligncellveriticallytopsingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyTopSingleTextMultiplePad"]], "test_aligncolumndecimal() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimal"]], "test_aligncolumndecimalwithincorrectthousandseparators() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimalWithIncorrectThousandSeparators"]], "test_aligncolumndecimalwiththousandseparators() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimalWithThousandSeparators"]], "test_aligncolumnmultiline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnMultiline"]], "test_aligncolumnnone() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnNone"]], "test_assortedrareedgecases() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_assortedRareEdgeCases"]], "test_bool() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_bool"]], "test_buildline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_buildLine"]], "test_buildrow() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_buildRow"]], "test_colalignmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignMulti"]], "test_colalignmultiwithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignMultiWithSepLine"]], "test_colalignorheadersaligntoolong() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignOrheadersAlignTooLong"]], "test_columnalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_columnAlignment"]], "test_columnglobalandspecificalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_columnGlobalAndSpecificAlignment"]], "test_dictlike() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_dictLike"]], "test_dictlikewithindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_dictLikeWithIndex"]], "test_disablenumparsedefault() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseDefault"]], "test_disablenumparselist() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseList"]], "test_disablenumparsetrue() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseTrue"]], "test_emptydata() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyData"]], "test_emptydatawithheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyDataWithHeaders"]], "test_emptydatawithoutheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyDataWithoutHeaders"]], "test_floatconversions() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatConversions"]], "test_floatfmt() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatFmt"]], "test_floatfmtmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatFmtMulti"]], "test_format() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_format"]], "test_github() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_github"]], "test_grid() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_grid"]], "test_gridheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridHeaderless"]], "test_gridmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultiline"]], "test_gridmultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineHeaderless"]], "test_gridmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineWithEmptyCells"]], "test_gridmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineWithEmptyCellsHeaderless"]], "test_headersglobalandspecificalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_headersGlobalAndSpecificAlignment"]], "test_intfmt() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_intFmt"]], "test_ismultiline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_isMultiline"]], "test_iterableofempties() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfEmpties"]], "test_iterableofiterables() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterables"]], "test_iterableofiterablesfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterablesFirstrow"]], "test_iterableofiterablesheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterablesHeaders"]], "test_listbytes() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listBytes"]], "test_listofdicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDicts"]], "test_listofdictsfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsFirstrow"]], "test_listofdictskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsKeys"]], "test_listofdictswithdictofheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithDictOfHeaders"]], "test_listofdictswithlistofheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithListOfHeaders"]], "test_listofdictswithmissingkeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithMissingKeys"]], "test_listoflists() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfLists"]], "test_listoflistsfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfListsFirstrow"]], "test_listoflistskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfListsKeys"]], "test_listoflistswithindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndex"]], "test_listoflistswithindexfirstrow() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndexFirstrow"]], "test_listoflistswithindexwithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndexWithSepLine"]], "test_listoflistswithsuppliedindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithSuppliedIndex"]], "test_listofnamedtuples() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfNamedtuples"]], "test_listofnamedtupleskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfNamedtuplesKeys"]], "test_listofordereddicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfOrdereddicts"]], "test_listofuserdicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfUserdicts"]], "test_listofuserdictskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfUserdictsKeys"]], "test_maxcolwidthsinglevalue() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxColWidthsingleValue"]], "test_maxcolwidthhonordisableparsenum() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxcolwidthHonorDisableParsenum"]], "test_maxcolwidthpadtailingwidths() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxcolwidthPadTailingWidths"]], "test_missingval() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_missingVal"]], "test_missingvalmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_missingValMulti"]], "test_multilinewidth() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_multilineWidth"]], "test_nodata() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_noData"]], "test_nodatawithoutheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_noDataWithoutHeaders"]], "test_normalizetabulardata() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_normalizeTabularData"]], "test_numpy2d() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2d"]], "test_numpy2dfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2dFirstrow"]], "test_numpy2dkeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2dKeys"]], "test_numpyrecordarray() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArray"]], "test_numpyrecordarrayheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArrayHeaders"]], "test_numpyrecordarraykeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArrayKeys"]], "test_plain() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plain"]], "test_plainheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainHeaderless"]], "test_plainmaxcolwidthautowraps() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMaxcolwidthAutowraps"]], "test_plainmaxcolwidthautowrapswithsep() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMaxcolwidthAutowrapsWithSep"]], "test_plainmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultiline"]], "test_plainmultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineHeaderless"]], "test_plainmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithEmptyCells"]], "test_plainmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithEmptyCellsHeaderless"]], "test_plainmultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithLinks"]], "test_plainmaxheadercolwidthsautowraps() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainmaxHeaderColWidthsAutowraps"]], "test_pretty() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_pretty"]], "test_prettyheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyHeaderless"]], "test_prettymultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultiline"]], "test_prettymultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineHeaderless"]], "test_prettymultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithEmptyCells"]], "test_prettymultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithEmptyCellsHeaderless"]], "test_prettymultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithLinks"]], "test_readmeexamplewithsep() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_readmeExampleWithSep"]], "test_rst() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rst"]], "test_rstheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstHeaderless"]], "test_rstmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultiline"]], "test_rstmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithEmptyCells"]], "test_rstmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithEmptyCellsHeaderless"]], "test_rstmultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithLinks"]], "test_rstwithemptyvaluesinfirstcolumn() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstWithEmptyValuesInFirstColumn"]], "test_simple() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simple"]], "test_simpleheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleHeaderless"]], "test_simpleheaderlesswithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleHeaderlessWithSepLine"]], "test_simplemultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline"]], "test_simplemultiline2() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline2"]], "test_simplemultiline2withsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline2WithSepLine"]], "test_simplemultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineHeaderless"]], "test_simplemultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithEmptyCells"]], "test_simplemultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithEmptyCellsHeaderless"]], "test_simplemultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithLinks"]], "test_simplewithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleWithSepLine"]], "test_tabulateformats() (armi.utils.tests.test_tabulate.testtabulateapi method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateAPI.test_tabulateFormats"]], "test_tightcouplingexample() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_tightCouplingExample"]], "test_type() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_type"]], "test_visiblewidth() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_visibleWidth"]], "test_wraptexttocolwidths() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_wrapTextToColWidths"]], "sequentialreadertests (class in armi.utils.tests.test_textprocessors)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests"]], "testtextprocessor (class in armi.utils.tests.test_textprocessors)": [[438, "armi.utils.tests.test_textProcessors.TestTextProcessor"]], "yamlincludetest (class in armi.utils.tests.test_textprocessors)": [[438, "armi.utils.tests.test_textProcessors.YamlIncludeTest"]], "armi.utils.tests.test_textprocessors": [[438, "module-armi.utils.tests.test_textProcessors"]], "test_consumeline() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_consumeLine"]], "test_findincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[438, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_findIncludes"]], "test_fsearch() (armi.utils.tests.test_textprocessors.testtextprocessor method)": [[438, "armi.utils.tests.test_textProcessors.TestTextProcessor.test_fsearch"]], "test_fsearchtext() (armi.utils.tests.test_textprocessors.testtextprocessor method)": [[438, "armi.utils.tests.test_textProcessors.TestTextProcessor.test_fsearchText"]], "test_issuewarningonfindingtext() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_issueWarningOnFindingText"]], "test_raiseerroronfindingtext() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_raiseErrorOnFindingText"]], "test_readfile() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFile"]], "test_readfilewithpattern() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFileWithPattern"]], "test_resolveincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[438, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes"]], "test_resolveincludes_stringio() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[438, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes_StringIO"]], "textstream (armi.utils.tests.test_textprocessors.sequentialreadertests attribute)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests.textStream"]], "testtriangle (class in armi.utils.tests.test_triangle)": [[439, "armi.utils.tests.test_triangle.TestTriangle"]], "armi.utils.tests.test_triangle": [[439, "module-armi.utils.tests.test_triangle"]], "test_checkifpointisintriangle() (armi.utils.tests.test_triangle.testtriangle method)": [[439, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle"]], "test_checkifpointisintriangle2() (armi.utils.tests.test_triangle.testtriangle method)": [[439, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle2"]], "test_gettrianglearea() (armi.utils.tests.test_triangle.testtriangle method)": [[439, "armi.utils.tests.test_triangle.TestTriangle.test_getTriangleArea"]], "testunits (class in armi.utils.tests.test_units)": [[440, "armi.utils.tests.test_units.TestUnits"]], "armi.utils.tests.test_units": [[440, "module-armi.utils.tests.test_units"]], "test_convertxtopascal() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_convertXtoPascal"]], "test_gettc() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_getTc"]], "test_gettemperature() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_getTemperature"]], "test_gettf() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_getTf"]], "test_gettk() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_getTk"]], "test_gettmev() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_getTmev"]], "test_getxylineparameters() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_getXYLineParameters"]], "test_pressure_converter() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_pressure_converter"]], "test_sanitizeangle() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_sanitizeAngle"]], "cyclessettingstests (class in armi.utils.tests.test_utils)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests"]], "testgeneralutils (class in armi.utils.tests.test_utils)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils"]], "armi.utils.tests.test_utils": [[441, "module-armi.utils.tests.test_utils"]], "availabilityfactorsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsDetailedSolution"]], "availabilityfactorssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsSimpleSolution"]], "burnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsDetailedSolution"]], "burnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsSimpleSolution"]], "cyclelengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsDetailedSolution"]], "cyclelengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsSimpleSolution"]], "cyclenamesdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesDetailedSolution"]], "cyclenamessimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesSimpleSolution"]], "detailedcyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.detailedCyclesSettings"]], "maxburnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsDetailedSolution"]], "maxburnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsSimpleSolution"]], "nodespercycledetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleDetailedSolution"]], "nodespercyclesimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleSimpleSolution"]], "powerfractionsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsDetailedSolution"]], "powerfractionssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsSimpleSolution"]], "simplecyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.simpleCyclesSettings"]], "steplengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsDetailedSolution"]], "steplengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsSimpleSolution"]], "test_capstrlen() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_capStrLen"]], "test_classesinhierarchy() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_classesInHierarchy"]], "test_codetiming() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_codeTiming"]], "test_createformattedstrwithdelimiter() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_createFormattedStrWithDelimiter"]], "test_getavailabilityfactors() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getBurnSteps"]], "test_getcumulativenodenum() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCumulativeNodeNum"]], "test_getcyclelengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNames"]], "test_getcyclenodefromcumulativenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeNode"]], "test_getcyclenodefromcumulativestep() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeStep"]], "test_getfilesha1hash() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_getFileSHA1Hash"]], "test_getfilesha1hashdir() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_getFileSHA1HashDir"]], "test_getmaxburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getnodespercycle() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getNodesPerCycle"]], "test_getpowerfractions() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPowerFractions"]], "test_getprevioustimenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPreviousTimeNode"]], "test_getsteplengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getStepLengths"]], "test_hasburnup() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_hasBurnup"]], "test_list2str() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_list2str"]], "test_mergeabledictionary() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_mergeableDictionary"]], "test_plotmatrix() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_plotMatrix"]], "test_prependtolist() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_prependToList"]], "test_safecopy() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_safeCopy"]], "test_safemove() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_safeMove"]], "test_safemovedir() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_safeMoveDir"]], "test_slantsplit() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_slantSplit"]], "decimal_pattern (in module armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.DECIMAL_PATTERN"]], "floating_pattern (in module armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.FLOATING_PATTERN"]], "filemark (class in armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.FileMark"]], "scientific_pattern (in module armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.SCIENTIFIC_PATTERN"]], "sequentialreader (class in armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.SequentialReader"]], "sequentialstringioreader (class in armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.SequentialStringIOReader"]], "textprocessor (class in armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.TextProcessor"]], "armi.utils.textprocessors": [[442, "module-armi.utils.textProcessors"]], "checkerrors() (armi.utils.textprocessors.textprocessor method)": [[442, "armi.utils.textProcessors.TextProcessor.checkErrors"]], "consumeline() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.consumeLine"]], "decimal (armi.utils.textprocessors.textprocessor attribute)": [[442, "armi.utils.textProcessors.TextProcessor.decimal"]], "errorchecking() (armi.utils.textprocessors.textprocessor method)": [[442, "armi.utils.textProcessors.TextProcessor.errorChecking"]], "findyamlinclusions() (in module armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.findYamlInclusions"]], "fsearch() (armi.utils.textprocessors.textprocessor method)": [[442, "armi.utils.textProcessors.TextProcessor.fsearch"]], "issuewarningonfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.issueWarningOnFindingText"]], "number (armi.utils.textprocessors.textprocessor attribute)": [[442, "armi.utils.textProcessors.TextProcessor.number"]], "raiseerroronfindingpattern() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingPattern"]], "raiseerroronfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingText"]], "reset() (armi.utils.textprocessors.textprocessor method)": [[442, "armi.utils.textProcessors.TextProcessor.reset"]], "resolvemarkupinclusions() (in module armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.resolveMarkupInclusions"]], "scipat (armi.utils.textprocessors.textprocessor attribute)": [[442, "armi.utils.textProcessors.TextProcessor.scipat"]], "searchforpattern() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.searchForPattern"]], "searchforpatternonnextline() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.searchForPatternOnNextLine"]], "searchfortext() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.searchForText"]], "armi.utils.triangle": [[443, "module-armi.utils.triangle"]], "checkifpointisintriangle() (in module armi.utils.triangle)": [[443, "armi.utils.triangle.checkIfPointIsInTriangle"]], "gettrianglearea() (in module armi.utils.triangle)": [[443, "armi.utils.triangle.getTriangleArea"]], "gettrianglecentroid() (in module armi.utils.triangle)": [[443, "armi.utils.triangle.getTriangleCentroid"]], "armi.utils.units": [[444, "module-armi.utils.units"]], "convertatmtopascal() (in module armi.utils.units)": [[444, "armi.utils.units.convertAtmToPascal"]], "convertbartopascal() (in module armi.utils.units)": [[444, "armi.utils.units.convertBarToPascal"]], "convertmmhgtopascal() (in module armi.utils.units)": [[444, "armi.utils.units.convertMmhgToPascal"]], "gettc() (in module armi.utils.units)": [[444, "armi.utils.units.getTc"]], "gettemperature() (in module armi.utils.units)": [[444, "armi.utils.units.getTemperature"]], "gettf() (in module armi.utils.units)": [[444, "armi.utils.units.getTf"]], "gettk() (in module armi.utils.units)": [[444, "armi.utils.units.getTk"]], "gettmev() (in module armi.utils.units)": [[444, "armi.utils.units.getTmev"]], "getxylineparameters() (in module armi.utils.units)": [[444, "armi.utils.units.getXYLineParameters"]], "sanitizeangle() (in module armi.utils.units)": [[444, "armi.utils.units.sanitizeAngle"]], "anl": [[483, "term-ANL"]], "boc": [[483, "term-BOC"]], "bol": [[483, "term-BOL"]], "cli": [[483, "term-CLI"]], "fima": [[483, "term-FIMA"]], "gui": [[483, "term-GUI"]], "in-use tests": [[483, "term-In-Use-Tests"]], "lwr": [[483, "term-LWR"]], "liner": [[483, "term-Liner"]], "mpi": [[483, "term-MPI"]], "twr": [[483, "term-TWR"]], "unit tests": [[483, "term-Unit-Tests"]], "v&v": [[483, "term-V-V"]], "xtview": [[483, "term-XTVIEW"]], "assembly": [[483, "term-assembly"]], "block": [[483, "term-block"]], "burnup": [[483, "term-burnup"]], "cladding": [[483, "term-cladding"]], "component": [[483, "term-component"]], "grid plate": [[483, "term-grid-plate"]], "interface": [[483, "term-interface"]], "material": [[483, "term-material"]], "node": [[483, "term-node"]], "operator": [[483, "term-operator"]], "parameter": [[483, "term-parameter"]], "plenum": [[483, "term-plenum"]], "reactor": [[483, "term-reactor"]], "reactor state": [[483, "term-reactor-state"]], "smear density": [[483, "term-smear-density"]]}})