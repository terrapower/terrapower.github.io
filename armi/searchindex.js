Search.setIndex({"docnames": [".apidocs/armi", ".apidocs/armi.apps", ".apidocs/armi.bookkeeping", ".apidocs/armi.bookkeeping.db", ".apidocs/armi.bookkeeping.db.compareDB3", ".apidocs/armi.bookkeeping.db.database", ".apidocs/armi.bookkeeping.db.database3", ".apidocs/armi.bookkeeping.db.databaseInterface", ".apidocs/armi.bookkeeping.db.factory", ".apidocs/armi.bookkeeping.db.jaggedArray", ".apidocs/armi.bookkeeping.db.layout", ".apidocs/armi.bookkeeping.db.passiveDBLoadPlugin", ".apidocs/armi.bookkeeping.db.permissions", ".apidocs/armi.bookkeeping.db.tests", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3", ".apidocs/armi.bookkeeping.db.tests.test_database3", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface", ".apidocs/armi.bookkeeping.db.tests.test_jaggedArray", ".apidocs/armi.bookkeeping.db.tests.test_layout", ".apidocs/armi.bookkeeping.db.typedefs", ".apidocs/armi.bookkeeping.historyTracker", ".apidocs/armi.bookkeeping.mainInterface", ".apidocs/armi.bookkeeping.memoryProfiler", ".apidocs/armi.bookkeeping.report", ".apidocs/armi.bookkeeping.report.data", ".apidocs/armi.bookkeeping.report.html", ".apidocs/armi.bookkeeping.report.newReportUtils", ".apidocs/armi.bookkeeping.report.newReports", ".apidocs/armi.bookkeeping.report.reportInterface", ".apidocs/armi.bookkeeping.report.reportingUtils", ".apidocs/armi.bookkeeping.report.tests", ".apidocs/armi.bookkeeping.report.tests.test_newReport", ".apidocs/armi.bookkeeping.report.tests.test_report", ".apidocs/armi.bookkeeping.snapshotInterface", ".apidocs/armi.bookkeeping.tests", ".apidocs/armi.bookkeeping.tests.test_historyTracker", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler", ".apidocs/armi.bookkeeping.tests.test_snapshot", ".apidocs/armi.bookkeeping.visualization", ".apidocs/armi.bookkeeping.visualization.dumper", ".apidocs/armi.bookkeeping.visualization.entryPoint", ".apidocs/armi.bookkeeping.visualization.tests", ".apidocs/armi.bookkeeping.visualization.tests.test_vis", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf", ".apidocs/armi.bookkeeping.visualization.utils", ".apidocs/armi.bookkeeping.visualization.vtk", ".apidocs/armi.bookkeeping.visualization.xdmf", ".apidocs/armi.cases", ".apidocs/armi.cases.case", ".apidocs/armi.cases.inputModifiers", ".apidocs/armi.cases.inputModifiers.inputModifiers", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers", ".apidocs/armi.cases.inputModifiers.tests", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers", ".apidocs/armi.cases.suite", ".apidocs/armi.cases.suiteBuilder", ".apidocs/armi.cases.tests", ".apidocs/armi.cases.tests.test_cases", ".apidocs/armi.cases.tests.test_suiteBuilder", ".apidocs/armi.cli", ".apidocs/armi.cli.checkInputs", ".apidocs/armi.cli.cleanTemps", ".apidocs/armi.cli.clone", ".apidocs/armi.cli.compareCases", ".apidocs/armi.cli.database", ".apidocs/armi.cli.entryPoint", ".apidocs/armi.cli.gridGui", ".apidocs/armi.cli.migrateInputs", ".apidocs/armi.cli.modify", ".apidocs/armi.cli.reportsEntryPoint", ".apidocs/armi.cli.run", ".apidocs/armi.cli.runSuite", ".apidocs/armi.cli.tests", ".apidocs/armi.cli.tests.test_runEntryPoint", ".apidocs/armi.cli.tests.test_runSuite", ".apidocs/armi.conftest", ".apidocs/armi.context", ".apidocs/armi.interfaces", ".apidocs/armi.materials", ".apidocs/armi.materials.air", ".apidocs/armi.materials.alloy200", ".apidocs/armi.materials.b4c", ".apidocs/armi.materials.be9", ".apidocs/armi.materials.caH2", ".apidocs/armi.materials.californium", ".apidocs/armi.materials.concrete", ".apidocs/armi.materials.copper", ".apidocs/armi.materials.cs", ".apidocs/armi.materials.custom", ".apidocs/armi.materials.graphite", ".apidocs/armi.materials.hafnium", ".apidocs/armi.materials.hastelloyN", ".apidocs/armi.materials.ht9", ".apidocs/armi.materials.inconel", ".apidocs/armi.materials.inconel600", ".apidocs/armi.materials.inconel625", ".apidocs/armi.materials.inconel800", ".apidocs/armi.materials.inconelPE16", ".apidocs/armi.materials.inconelX750", ".apidocs/armi.materials.lead", ".apidocs/armi.materials.leadBismuth", ".apidocs/armi.materials.lithium", ".apidocs/armi.materials.magnesium", ".apidocs/armi.materials.material", ".apidocs/armi.materials.mgO", ".apidocs/armi.materials.mixture", ".apidocs/armi.materials.molybdenum", ".apidocs/armi.materials.mox", ".apidocs/armi.materials.nZ", ".apidocs/armi.materials.potassium", ".apidocs/armi.materials.scandiumOxide", ".apidocs/armi.materials.siC", ".apidocs/armi.materials.sodium", ".apidocs/armi.materials.sodiumChloride", ".apidocs/armi.materials.sulfur", ".apidocs/armi.materials.tZM", ".apidocs/armi.materials.tantalum", ".apidocs/armi.materials.tests", ".apidocs/armi.materials.tests.test__init__", ".apidocs/armi.materials.tests.test_air", ".apidocs/armi.materials.tests.test_b4c", ".apidocs/armi.materials.tests.test_be9", ".apidocs/armi.materials.tests.test_graphite", ".apidocs/armi.materials.tests.test_lithium", ".apidocs/armi.materials.tests.test_materials", ".apidocs/armi.materials.tests.test_sic", ".apidocs/armi.materials.tests.test_sulfur", ".apidocs/armi.materials.tests.test_thoriumOxide", ".apidocs/armi.materials.tests.test_uZr", ".apidocs/armi.materials.tests.test_water", ".apidocs/armi.materials.thU", ".apidocs/armi.materials.thorium", ".apidocs/armi.materials.thoriumOxide", ".apidocs/armi.materials.uThZr", ".apidocs/armi.materials.uZr", ".apidocs/armi.materials.uranium", ".apidocs/armi.materials.uraniumOxide", ".apidocs/armi.materials.void", ".apidocs/armi.materials.water", ".apidocs/armi.materials.yttriumOxide", ".apidocs/armi.materials.zincOxide", ".apidocs/armi.materials.zr", ".apidocs/armi.meta", ".apidocs/armi.migration", ".apidocs/armi.migration.base", ".apidocs/armi.migration.m0_1_3", ".apidocs/armi.migration.m0_1_6", ".apidocs/armi.migration.tests", ".apidocs/armi.migration.tests.test_m0_1_6", ".apidocs/armi.migration.tests.test_migration_base", ".apidocs/armi.mpiActions", ".apidocs/armi.nucDirectory", ".apidocs/armi.nucDirectory.elements", ".apidocs/armi.nucDirectory.nucDir", ".apidocs/armi.nucDirectory.nuclideBases", ".apidocs/armi.nucDirectory.tests", ".apidocs/armi.nucDirectory.tests.test_elements", ".apidocs/armi.nucDirectory.tests.test_nucDirectory", ".apidocs/armi.nucDirectory.tests.test_nuclideBases", ".apidocs/armi.nucDirectory.tests.test_thermalScattering", ".apidocs/armi.nucDirectory.tests.test_transmutations", ".apidocs/armi.nucDirectory.thermalScattering", ".apidocs/armi.nucDirectory.transmutations", ".apidocs/armi.nuclearDataIO", ".apidocs/armi.nuclearDataIO.cccc", ".apidocs/armi.nuclearDataIO.cccc.cccc", ".apidocs/armi.nuclearDataIO.cccc.compxs", ".apidocs/armi.nuclearDataIO.cccc.dif3d", ".apidocs/armi.nuclearDataIO.cccc.dlayxs", ".apidocs/armi.nuclearDataIO.cccc.fixsrc", ".apidocs/armi.nuclearDataIO.cccc.gamiso", ".apidocs/armi.nuclearDataIO.cccc.geodst", ".apidocs/armi.nuclearDataIO.cccc.isotxs", ".apidocs/armi.nuclearDataIO.cccc.labels", ".apidocs/armi.nuclearDataIO.cccc.nhflux", ".apidocs/armi.nuclearDataIO.cccc.pmatrx", ".apidocs/armi.nuclearDataIO.cccc.pwdint", ".apidocs/armi.nuclearDataIO.cccc.rtflux", ".apidocs/armi.nuclearDataIO.cccc.rzflux", ".apidocs/armi.nuclearDataIO.cccc.tests", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_fixsrc", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata", ".apidocs/armi.nuclearDataIO.tests", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides", ".apidocs/armi.nuclearDataIO.xsCollections", ".apidocs/armi.nuclearDataIO.xsLibraries", ".apidocs/armi.nuclearDataIO.xsNuclides", ".apidocs/armi.operators", ".apidocs/armi.operators.operator", ".apidocs/armi.operators.operatorMPI", ".apidocs/armi.operators.runTypes", ".apidocs/armi.operators.settingsValidation", ".apidocs/armi.operators.snapshots", ".apidocs/armi.operators.tests", ".apidocs/armi.operators.tests.test_operatorSnapshots", ".apidocs/armi.operators.tests.test_operators", ".apidocs/armi.physics", ".apidocs/armi.physics.constants", ".apidocs/armi.physics.executers", ".apidocs/armi.physics.fuelCycle", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface", ".apidocs/armi.physics.fuelCycle.fuelHandlers", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelCycle.settings", ".apidocs/armi.physics.fuelCycle.tests", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelCycle.tests.test_utils", ".apidocs/armi.physics.fuelCycle.utils", ".apidocs/armi.physics.fuelPerformance", ".apidocs/armi.physics.fuelPerformance.executers", ".apidocs/armi.physics.fuelPerformance.parameters", ".apidocs/armi.physics.fuelPerformance.plugin", ".apidocs/armi.physics.fuelPerformance.settings", ".apidocs/armi.physics.fuelPerformance.tests", ".apidocs/armi.physics.fuelPerformance.tests.test_executers", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils", ".apidocs/armi.physics.fuelPerformance.utils", ".apidocs/armi.physics.neutronics", ".apidocs/armi.physics.neutronics.const", ".apidocs/armi.physics.neutronics.crossSectionGroupManager", ".apidocs/armi.physics.neutronics.crossSectionSettings", ".apidocs/armi.physics.neutronics.diffIsotxs", ".apidocs/armi.physics.neutronics.energyGroups", ".apidocs/armi.physics.neutronics.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct", ".apidocs/armi.physics.neutronics.fissionProductModel.tests", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct", ".apidocs/armi.physics.neutronics.globalFlux", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface", ".apidocs/armi.physics.neutronics.globalFlux.tests", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface", ".apidocs/armi.physics.neutronics.latticePhysics", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter", ".apidocs/armi.physics.neutronics.latticePhysics.tests", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.parameters", ".apidocs/armi.physics.neutronics.reports", ".apidocs/armi.physics.neutronics.settings", ".apidocs/armi.physics.neutronics.tests", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable", ".apidocs/armi.physics.neutronics.tests.test_energyGroups", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin", ".apidocs/armi.physics.safety", ".apidocs/armi.physics.tests", ".apidocs/armi.physics.tests.test_executers", ".apidocs/armi.physics.thermalHydraulics", ".apidocs/armi.physics.thermalHydraulics.const", ".apidocs/armi.physics.thermalHydraulics.parameters", ".apidocs/armi.physics.thermalHydraulics.plugin", ".apidocs/armi.physics.thermalHydraulics.settings", ".apidocs/armi.physics.thermalHydraulics.tests", ".apidocs/armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin", ".apidocs/armi.pluginManager", ".apidocs/armi.plugins", ".apidocs/armi.reactor", ".apidocs/armi.reactor.assemblies", ".apidocs/armi.reactor.assemblyParameters", ".apidocs/armi.reactor.blockParameters", ".apidocs/armi.reactor.blocks", ".apidocs/armi.reactor.blueprints", ".apidocs/armi.reactor.blueprints.assemblyBlueprint", ".apidocs/armi.reactor.blueprints.blockBlueprint", ".apidocs/armi.reactor.blueprints.componentBlueprint", ".apidocs/armi.reactor.blueprints.gridBlueprint", ".apidocs/armi.reactor.blueprints.isotopicOptions", ".apidocs/armi.reactor.blueprints.reactorBlueprint", ".apidocs/armi.reactor.blueprints.tests", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blueprints", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints", ".apidocs/armi.reactor.components", ".apidocs/armi.reactor.components.basicShapes", ".apidocs/armi.reactor.components.complexShapes", ".apidocs/armi.reactor.components.component", ".apidocs/armi.reactor.components.componentParameters", ".apidocs/armi.reactor.components.volumetricShapes", ".apidocs/armi.reactor.composites", ".apidocs/armi.reactor.converters", ".apidocs/armi.reactor.converters.axialExpansionChanger", ".apidocs/armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage", ".apidocs/armi.reactor.converters.axialExpansionChanger.axialExpansionChanger", ".apidocs/armi.reactor.converters.axialExpansionChanger.expansionData", ".apidocs/armi.reactor.converters.blockConverters", ".apidocs/armi.reactor.converters.geometryConverters", ".apidocs/armi.reactor.converters.meshConverters", ".apidocs/armi.reactor.converters.parameterSweeps", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters", ".apidocs/armi.reactor.converters.pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger", ".apidocs/armi.reactor.converters.tests.test_blockConverter", ".apidocs/armi.reactor.converters.tests.test_geometryConverters", ".apidocs/armi.reactor.converters.tests.test_meshConverters", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests.test_uniformMesh", ".apidocs/armi.reactor.converters.uniformMesh", ".apidocs/armi.reactor.cores", ".apidocs/armi.reactor.excoreStructure", ".apidocs/armi.reactor.flags", ".apidocs/armi.reactor.geometry", ".apidocs/armi.reactor.grids", ".apidocs/armi.reactor.grids.axial", ".apidocs/armi.reactor.grids.cartesian", ".apidocs/armi.reactor.grids.constants", ".apidocs/armi.reactor.grids.grid", ".apidocs/armi.reactor.grids.hexagonal", ".apidocs/armi.reactor.grids.locations", ".apidocs/armi.reactor.grids.structuredGrid", ".apidocs/armi.reactor.grids.thetarz", ".apidocs/armi.reactor.parameters", ".apidocs/armi.reactor.parameters.exceptions", ".apidocs/armi.reactor.parameters.parameterCollections", ".apidocs/armi.reactor.parameters.parameterDefinitions", ".apidocs/armi.reactor.parameters.resolveCollections", ".apidocs/armi.reactor.reactorParameters", ".apidocs/armi.reactor.reactors", ".apidocs/armi.reactor.spentFuelPool", ".apidocs/armi.reactor.systemLayoutInput", ".apidocs/armi.reactor.tests", ".apidocs/armi.reactor.tests.test_assemblies", ".apidocs/armi.reactor.tests.test_blocks", ".apidocs/armi.reactor.tests.test_components", ".apidocs/armi.reactor.tests.test_composites", ".apidocs/armi.reactor.tests.test_excoreStructures", ".apidocs/armi.reactor.tests.test_flags", ".apidocs/armi.reactor.tests.test_geometry", ".apidocs/armi.reactor.tests.test_hexBlockRotate", ".apidocs/armi.reactor.tests.test_parameters", ".apidocs/armi.reactor.tests.test_reactors", ".apidocs/armi.reactor.tests.test_rz_reactors", ".apidocs/armi.reactor.tests.test_zones", ".apidocs/armi.reactor.zones", ".apidocs/armi.runLog", ".apidocs/armi.settings", ".apidocs/armi.settings.caseSettings", ".apidocs/armi.settings.fwSettings", ".apidocs/armi.settings.fwSettings.databaseSettings", ".apidocs/armi.settings.fwSettings.globalSettings", ".apidocs/armi.settings.fwSettings.reportSettings", ".apidocs/armi.settings.fwSettings.tightCouplingSettings", ".apidocs/armi.settings.setting", ".apidocs/armi.settings.settingsIO", ".apidocs/armi.settings.settingsValidation", ".apidocs/armi.settings.tests", ".apidocs/armi.settings.tests.test_inspectors", ".apidocs/armi.settings.tests.test_settings", ".apidocs/armi.settings.tests.test_settingsIO", ".apidocs/armi.tests", ".apidocs/armi.tests.mockRunLogs", ".apidocs/armi.tests.refSmallReactorShuffleLogic", ".apidocs/armi.tests.test_apps", ".apidocs/armi.tests.test_armiTestHelper", ".apidocs/armi.tests.test_cartesian", ".apidocs/armi.tests.test_context", ".apidocs/armi.tests.test_interfaces", ".apidocs/armi.tests.test_lwrInputs", ".apidocs/armi.tests.test_mpiActions", ".apidocs/armi.tests.test_mpiFeatures", ".apidocs/armi.tests.test_mpiParameters", ".apidocs/armi.tests.test_notebooks", ".apidocs/armi.tests.test_plugins", ".apidocs/armi.tests.test_runLog", ".apidocs/armi.tests.test_tests", ".apidocs/armi.tests.test_user_plugins", ".apidocs/armi.utils", ".apidocs/armi.utils.asciimaps", ".apidocs/armi.utils.codeTiming", ".apidocs/armi.utils.customExceptions", ".apidocs/armi.utils.densityTools", ".apidocs/armi.utils.directoryChangers", ".apidocs/armi.utils.directoryChangersMpi", ".apidocs/armi.utils.dynamicImporter", ".apidocs/armi.utils.flags", ".apidocs/armi.utils.gridEditor", ".apidocs/armi.utils.hexagon", ".apidocs/armi.utils.iterables", ".apidocs/armi.utils.mathematics", ".apidocs/armi.utils.outputCache", ".apidocs/armi.utils.parsing", ".apidocs/armi.utils.pathTools", ".apidocs/armi.utils.plotting", ".apidocs/armi.utils.properties", ".apidocs/armi.utils.reportPlotting", ".apidocs/armi.utils.tabulate", ".apidocs/armi.utils.tests", ".apidocs/armi.utils.tests.test_asciimaps", ".apidocs/armi.utils.tests.test_codeTiming", ".apidocs/armi.utils.tests.test_custom_exceptions", ".apidocs/armi.utils.tests.test_densityTools", ".apidocs/armi.utils.tests.test_directoryChangers", ".apidocs/armi.utils.tests.test_directoryChangersMpi", ".apidocs/armi.utils.tests.test_flags", ".apidocs/armi.utils.tests.test_hexagon", ".apidocs/armi.utils.tests.test_iterables", ".apidocs/armi.utils.tests.test_mathematics", ".apidocs/armi.utils.tests.test_outputCache", ".apidocs/armi.utils.tests.test_parsing", ".apidocs/armi.utils.tests.test_pathTools", ".apidocs/armi.utils.tests.test_plotting", ".apidocs/armi.utils.tests.test_properties", ".apidocs/armi.utils.tests.test_reportPlotting", ".apidocs/armi.utils.tests.test_tabulate", ".apidocs/armi.utils.tests.test_textProcessors", ".apidocs/armi.utils.tests.test_triangle", ".apidocs/armi.utils.tests.test_units", ".apidocs/armi.utils.tests.test_utils", ".apidocs/armi.utils.textProcessors", ".apidocs/armi.utils.triangle", ".apidocs/armi.utils.units", ".apidocs/modules", "developer/documenting", "developer/entrypoints", "developer/first_time_contributors", "developer/guide", "developer/index", "developer/making_armi_based_apps", "developer/parallel_coding", "developer/profiling", "developer/reports", "developer/standards_and_practices", "developer/tooling", "gallery-src/README", "gallery-src/analysis/README", "gallery-src/applications/README", "gallery-src/framework/README", "gallery/analysis/index", "gallery/analysis/run_blockMcnpMaterialCard", "gallery/analysis/run_hexBlockToRZConversion", "gallery/analysis/run_hexReactorToRZ", "gallery/analysis/sg_execution_times", "gallery/applications/index", "gallery/framework/index", "gallery/framework/run_blockVolumeFractions", "gallery/framework/run_chartOfNuclides", "gallery/framework/run_computeReactionRates", "gallery/framework/run_fuelManagement", "gallery/framework/run_grids1_hex", "gallery/framework/run_grids2_cartesian", "gallery/framework/run_grids3_rzt", "gallery/framework/run_isotxs", "gallery/framework/run_isotxs2_matrix", "gallery/framework/run_materials", "gallery/framework/run_programmaticReactorDefinition", "gallery/framework/run_reactorFacemap", "gallery/framework/run_transmutationMatrix", "gallery/framework/sg_execution_times", "gallery/index", "glossary", "index", "installation", "release/0.1", "release/0.2", "release/0.3", "release/0.4", "release/0.5", "release/index", "tutorials/data_model", "tutorials/index", "tutorials/making_your_first_app", "tutorials/materials_demo", "tutorials/nuclide_demo", "tutorials/param_sweep", "tutorials/walkthrough_inputs", "tutorials/walkthrough_lwr_inputs", "user/_gallery/index", "user/accessingEntryPoints", "user/assembly_parameters_report", "user/block_parameters_report", "user/component_parameters_report", "user/core_parameters_report", "user/index", "user/inputs", "user/manual_data_access", "user/outputs", "user/physics_coupling", "user/radial_and_axial_expansion", "user/reactor_parameters_report", "user/spatial_block_parameters", "user/user_install"], "filenames": [".apidocs/armi.rst", ".apidocs/armi.apps.rst", ".apidocs/armi.bookkeeping.rst", ".apidocs/armi.bookkeeping.db.rst", ".apidocs/armi.bookkeeping.db.compareDB3.rst", ".apidocs/armi.bookkeeping.db.database.rst", ".apidocs/armi.bookkeeping.db.database3.rst", ".apidocs/armi.bookkeeping.db.databaseInterface.rst", ".apidocs/armi.bookkeeping.db.factory.rst", ".apidocs/armi.bookkeeping.db.jaggedArray.rst", ".apidocs/armi.bookkeeping.db.layout.rst", ".apidocs/armi.bookkeeping.db.passiveDBLoadPlugin.rst", ".apidocs/armi.bookkeeping.db.permissions.rst", ".apidocs/armi.bookkeeping.db.tests.rst", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3.rst", ".apidocs/armi.bookkeeping.db.tests.test_database3.rst", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface.rst", ".apidocs/armi.bookkeeping.db.tests.test_jaggedArray.rst", ".apidocs/armi.bookkeeping.db.tests.test_layout.rst", ".apidocs/armi.bookkeeping.db.typedefs.rst", ".apidocs/armi.bookkeeping.historyTracker.rst", ".apidocs/armi.bookkeeping.mainInterface.rst", ".apidocs/armi.bookkeeping.memoryProfiler.rst", ".apidocs/armi.bookkeeping.report.rst", ".apidocs/armi.bookkeeping.report.data.rst", ".apidocs/armi.bookkeeping.report.html.rst", ".apidocs/armi.bookkeeping.report.newReportUtils.rst", ".apidocs/armi.bookkeeping.report.newReports.rst", ".apidocs/armi.bookkeeping.report.reportInterface.rst", ".apidocs/armi.bookkeeping.report.reportingUtils.rst", ".apidocs/armi.bookkeeping.report.tests.rst", ".apidocs/armi.bookkeeping.report.tests.test_newReport.rst", ".apidocs/armi.bookkeeping.report.tests.test_report.rst", ".apidocs/armi.bookkeeping.snapshotInterface.rst", ".apidocs/armi.bookkeeping.tests.rst", ".apidocs/armi.bookkeeping.tests.test_historyTracker.rst", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler.rst", ".apidocs/armi.bookkeeping.tests.test_snapshot.rst", ".apidocs/armi.bookkeeping.visualization.rst", ".apidocs/armi.bookkeeping.visualization.dumper.rst", ".apidocs/armi.bookkeeping.visualization.entryPoint.rst", ".apidocs/armi.bookkeeping.visualization.tests.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_vis.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf.rst", ".apidocs/armi.bookkeeping.visualization.utils.rst", ".apidocs/armi.bookkeeping.visualization.vtk.rst", ".apidocs/armi.bookkeeping.visualization.xdmf.rst", ".apidocs/armi.cases.rst", ".apidocs/armi.cases.case.rst", ".apidocs/armi.cases.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers.rst", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.rst", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.rst", ".apidocs/armi.cases.suite.rst", ".apidocs/armi.cases.suiteBuilder.rst", ".apidocs/armi.cases.tests.rst", ".apidocs/armi.cases.tests.test_cases.rst", ".apidocs/armi.cases.tests.test_suiteBuilder.rst", ".apidocs/armi.cli.rst", ".apidocs/armi.cli.checkInputs.rst", ".apidocs/armi.cli.cleanTemps.rst", ".apidocs/armi.cli.clone.rst", ".apidocs/armi.cli.compareCases.rst", ".apidocs/armi.cli.database.rst", ".apidocs/armi.cli.entryPoint.rst", ".apidocs/armi.cli.gridGui.rst", ".apidocs/armi.cli.migrateInputs.rst", ".apidocs/armi.cli.modify.rst", ".apidocs/armi.cli.reportsEntryPoint.rst", ".apidocs/armi.cli.run.rst", ".apidocs/armi.cli.runSuite.rst", ".apidocs/armi.cli.tests.rst", ".apidocs/armi.cli.tests.test_runEntryPoint.rst", ".apidocs/armi.cli.tests.test_runSuite.rst", ".apidocs/armi.conftest.rst", ".apidocs/armi.context.rst", ".apidocs/armi.interfaces.rst", ".apidocs/armi.materials.rst", ".apidocs/armi.materials.air.rst", ".apidocs/armi.materials.alloy200.rst", ".apidocs/armi.materials.b4c.rst", ".apidocs/armi.materials.be9.rst", ".apidocs/armi.materials.caH2.rst", ".apidocs/armi.materials.californium.rst", ".apidocs/armi.materials.concrete.rst", ".apidocs/armi.materials.copper.rst", ".apidocs/armi.materials.cs.rst", ".apidocs/armi.materials.custom.rst", ".apidocs/armi.materials.graphite.rst", ".apidocs/armi.materials.hafnium.rst", ".apidocs/armi.materials.hastelloyN.rst", ".apidocs/armi.materials.ht9.rst", ".apidocs/armi.materials.inconel.rst", ".apidocs/armi.materials.inconel600.rst", ".apidocs/armi.materials.inconel625.rst", ".apidocs/armi.materials.inconel800.rst", ".apidocs/armi.materials.inconelPE16.rst", ".apidocs/armi.materials.inconelX750.rst", ".apidocs/armi.materials.lead.rst", ".apidocs/armi.materials.leadBismuth.rst", ".apidocs/armi.materials.lithium.rst", ".apidocs/armi.materials.magnesium.rst", ".apidocs/armi.materials.material.rst", ".apidocs/armi.materials.mgO.rst", ".apidocs/armi.materials.mixture.rst", ".apidocs/armi.materials.molybdenum.rst", ".apidocs/armi.materials.mox.rst", ".apidocs/armi.materials.nZ.rst", ".apidocs/armi.materials.potassium.rst", ".apidocs/armi.materials.scandiumOxide.rst", ".apidocs/armi.materials.siC.rst", ".apidocs/armi.materials.sodium.rst", ".apidocs/armi.materials.sodiumChloride.rst", ".apidocs/armi.materials.sulfur.rst", ".apidocs/armi.materials.tZM.rst", ".apidocs/armi.materials.tantalum.rst", ".apidocs/armi.materials.tests.rst", ".apidocs/armi.materials.tests.test__init__.rst", ".apidocs/armi.materials.tests.test_air.rst", ".apidocs/armi.materials.tests.test_b4c.rst", ".apidocs/armi.materials.tests.test_be9.rst", ".apidocs/armi.materials.tests.test_graphite.rst", ".apidocs/armi.materials.tests.test_lithium.rst", ".apidocs/armi.materials.tests.test_materials.rst", ".apidocs/armi.materials.tests.test_sic.rst", ".apidocs/armi.materials.tests.test_sulfur.rst", ".apidocs/armi.materials.tests.test_thoriumOxide.rst", ".apidocs/armi.materials.tests.test_uZr.rst", ".apidocs/armi.materials.tests.test_water.rst", ".apidocs/armi.materials.thU.rst", ".apidocs/armi.materials.thorium.rst", ".apidocs/armi.materials.thoriumOxide.rst", ".apidocs/armi.materials.uThZr.rst", ".apidocs/armi.materials.uZr.rst", ".apidocs/armi.materials.uranium.rst", ".apidocs/armi.materials.uraniumOxide.rst", ".apidocs/armi.materials.void.rst", ".apidocs/armi.materials.water.rst", ".apidocs/armi.materials.yttriumOxide.rst", ".apidocs/armi.materials.zincOxide.rst", ".apidocs/armi.materials.zr.rst", ".apidocs/armi.meta.rst", ".apidocs/armi.migration.rst", ".apidocs/armi.migration.base.rst", ".apidocs/armi.migration.m0_1_3.rst", ".apidocs/armi.migration.m0_1_6.rst", ".apidocs/armi.migration.tests.rst", ".apidocs/armi.migration.tests.test_m0_1_6.rst", ".apidocs/armi.migration.tests.test_migration_base.rst", ".apidocs/armi.mpiActions.rst", ".apidocs/armi.nucDirectory.rst", ".apidocs/armi.nucDirectory.elements.rst", ".apidocs/armi.nucDirectory.nucDir.rst", ".apidocs/armi.nucDirectory.nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.rst", ".apidocs/armi.nucDirectory.tests.test_elements.rst", ".apidocs/armi.nucDirectory.tests.test_nucDirectory.rst", ".apidocs/armi.nucDirectory.tests.test_nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.test_thermalScattering.rst", ".apidocs/armi.nucDirectory.tests.test_transmutations.rst", ".apidocs/armi.nucDirectory.thermalScattering.rst", ".apidocs/armi.nucDirectory.transmutations.rst", ".apidocs/armi.nuclearDataIO.rst", ".apidocs/armi.nuclearDataIO.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.fixsrc.rst", ".apidocs/armi.nuclearDataIO.cccc.gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.labels.rst", ".apidocs/armi.nuclearDataIO.cccc.nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.rzflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_fixsrc.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux.rst", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata.rst", ".apidocs/armi.nuclearDataIO.tests.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides.rst", ".apidocs/armi.nuclearDataIO.xsCollections.rst", ".apidocs/armi.nuclearDataIO.xsLibraries.rst", ".apidocs/armi.nuclearDataIO.xsNuclides.rst", ".apidocs/armi.operators.rst", ".apidocs/armi.operators.operator.rst", ".apidocs/armi.operators.operatorMPI.rst", ".apidocs/armi.operators.runTypes.rst", ".apidocs/armi.operators.settingsValidation.rst", ".apidocs/armi.operators.snapshots.rst", ".apidocs/armi.operators.tests.rst", ".apidocs/armi.operators.tests.test_operatorSnapshots.rst", ".apidocs/armi.operators.tests.test_operators.rst", ".apidocs/armi.physics.rst", ".apidocs/armi.physics.constants.rst", ".apidocs/armi.physics.executers.rst", ".apidocs/armi.physics.fuelCycle.rst", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelCycle.settings.rst", ".apidocs/armi.physics.fuelCycle.tests.rst", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelCycle.tests.test_utils.rst", ".apidocs/armi.physics.fuelCycle.utils.rst", ".apidocs/armi.physics.fuelPerformance.rst", ".apidocs/armi.physics.fuelPerformance.executers.rst", ".apidocs/armi.physics.fuelPerformance.parameters.rst", ".apidocs/armi.physics.fuelPerformance.plugin.rst", ".apidocs/armi.physics.fuelPerformance.settings.rst", ".apidocs/armi.physics.fuelPerformance.tests.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_executers.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.rst", ".apidocs/armi.physics.fuelPerformance.utils.rst", ".apidocs/armi.physics.neutronics.rst", ".apidocs/armi.physics.neutronics.const.rst", ".apidocs/armi.physics.neutronics.crossSectionGroupManager.rst", ".apidocs/armi.physics.neutronics.crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.diffIsotxs.rst", ".apidocs/armi.physics.neutronics.energyGroups.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.globalFlux.rst", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.rst", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.parameters.rst", ".apidocs/armi.physics.neutronics.reports.rst", ".apidocs/armi.physics.neutronics.settings.rst", ".apidocs/armi.physics.neutronics.tests.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable.rst", ".apidocs/armi.physics.neutronics.tests.test_energyGroups.rst", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin.rst", ".apidocs/armi.physics.safety.rst", ".apidocs/armi.physics.tests.rst", ".apidocs/armi.physics.tests.test_executers.rst", ".apidocs/armi.physics.thermalHydraulics.rst", ".apidocs/armi.physics.thermalHydraulics.const.rst", ".apidocs/armi.physics.thermalHydraulics.parameters.rst", ".apidocs/armi.physics.thermalHydraulics.plugin.rst", ".apidocs/armi.physics.thermalHydraulics.settings.rst", ".apidocs/armi.physics.thermalHydraulics.tests.rst", ".apidocs/armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.rst", ".apidocs/armi.pluginManager.rst", ".apidocs/armi.plugins.rst", ".apidocs/armi.reactor.rst", ".apidocs/armi.reactor.assemblies.rst", ".apidocs/armi.reactor.assemblyParameters.rst", ".apidocs/armi.reactor.blockParameters.rst", ".apidocs/armi.reactor.blocks.rst", ".apidocs/armi.reactor.blueprints.rst", ".apidocs/armi.reactor.blueprints.assemblyBlueprint.rst", ".apidocs/armi.reactor.blueprints.blockBlueprint.rst", ".apidocs/armi.reactor.blueprints.componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.gridBlueprint.rst", ".apidocs/armi.reactor.blueprints.isotopicOptions.rst", ".apidocs/armi.reactor.blueprints.reactorBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.rst", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics.rst", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications.rst", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints.rst", ".apidocs/armi.reactor.components.rst", ".apidocs/armi.reactor.components.basicShapes.rst", ".apidocs/armi.reactor.components.complexShapes.rst", ".apidocs/armi.reactor.components.component.rst", ".apidocs/armi.reactor.components.componentParameters.rst", ".apidocs/armi.reactor.components.volumetricShapes.rst", ".apidocs/armi.reactor.composites.rst", ".apidocs/armi.reactor.converters.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.expansionData.rst", ".apidocs/armi.reactor.converters.blockConverters.rst", ".apidocs/armi.reactor.converters.geometryConverters.rst", ".apidocs/armi.reactor.converters.meshConverters.rst", ".apidocs/armi.reactor.converters.parameterSweeps.rst", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.rst", ".apidocs/armi.reactor.converters.pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.rst", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.tests.test_blockConverter.rst", ".apidocs/armi.reactor.converters.tests.test_geometryConverters.rst", ".apidocs/armi.reactor.converters.tests.test_meshConverters.rst", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.test_uniformMesh.rst", ".apidocs/armi.reactor.converters.uniformMesh.rst", ".apidocs/armi.reactor.cores.rst", ".apidocs/armi.reactor.excoreStructure.rst", ".apidocs/armi.reactor.flags.rst", ".apidocs/armi.reactor.geometry.rst", ".apidocs/armi.reactor.grids.rst", ".apidocs/armi.reactor.grids.axial.rst", ".apidocs/armi.reactor.grids.cartesian.rst", ".apidocs/armi.reactor.grids.constants.rst", ".apidocs/armi.reactor.grids.grid.rst", ".apidocs/armi.reactor.grids.hexagonal.rst", ".apidocs/armi.reactor.grids.locations.rst", ".apidocs/armi.reactor.grids.structuredGrid.rst", ".apidocs/armi.reactor.grids.thetarz.rst", ".apidocs/armi.reactor.parameters.rst", ".apidocs/armi.reactor.parameters.exceptions.rst", ".apidocs/armi.reactor.parameters.parameterCollections.rst", ".apidocs/armi.reactor.parameters.parameterDefinitions.rst", ".apidocs/armi.reactor.parameters.resolveCollections.rst", ".apidocs/armi.reactor.reactorParameters.rst", ".apidocs/armi.reactor.reactors.rst", ".apidocs/armi.reactor.spentFuelPool.rst", ".apidocs/armi.reactor.systemLayoutInput.rst", ".apidocs/armi.reactor.tests.rst", ".apidocs/armi.reactor.tests.test_assemblies.rst", ".apidocs/armi.reactor.tests.test_blocks.rst", ".apidocs/armi.reactor.tests.test_components.rst", ".apidocs/armi.reactor.tests.test_composites.rst", ".apidocs/armi.reactor.tests.test_excoreStructures.rst", ".apidocs/armi.reactor.tests.test_flags.rst", ".apidocs/armi.reactor.tests.test_geometry.rst", ".apidocs/armi.reactor.tests.test_hexBlockRotate.rst", ".apidocs/armi.reactor.tests.test_parameters.rst", ".apidocs/armi.reactor.tests.test_reactors.rst", ".apidocs/armi.reactor.tests.test_rz_reactors.rst", ".apidocs/armi.reactor.tests.test_zones.rst", ".apidocs/armi.reactor.zones.rst", ".apidocs/armi.runLog.rst", ".apidocs/armi.settings.rst", ".apidocs/armi.settings.caseSettings.rst", ".apidocs/armi.settings.fwSettings.rst", ".apidocs/armi.settings.fwSettings.databaseSettings.rst", ".apidocs/armi.settings.fwSettings.globalSettings.rst", ".apidocs/armi.settings.fwSettings.reportSettings.rst", ".apidocs/armi.settings.fwSettings.tightCouplingSettings.rst", ".apidocs/armi.settings.setting.rst", ".apidocs/armi.settings.settingsIO.rst", ".apidocs/armi.settings.settingsValidation.rst", ".apidocs/armi.settings.tests.rst", ".apidocs/armi.settings.tests.test_inspectors.rst", ".apidocs/armi.settings.tests.test_settings.rst", ".apidocs/armi.settings.tests.test_settingsIO.rst", ".apidocs/armi.tests.rst", ".apidocs/armi.tests.mockRunLogs.rst", ".apidocs/armi.tests.refSmallReactorShuffleLogic.rst", ".apidocs/armi.tests.test_apps.rst", ".apidocs/armi.tests.test_armiTestHelper.rst", ".apidocs/armi.tests.test_cartesian.rst", ".apidocs/armi.tests.test_context.rst", ".apidocs/armi.tests.test_interfaces.rst", ".apidocs/armi.tests.test_lwrInputs.rst", ".apidocs/armi.tests.test_mpiActions.rst", ".apidocs/armi.tests.test_mpiFeatures.rst", ".apidocs/armi.tests.test_mpiParameters.rst", ".apidocs/armi.tests.test_notebooks.rst", ".apidocs/armi.tests.test_plugins.rst", ".apidocs/armi.tests.test_runLog.rst", ".apidocs/armi.tests.test_tests.rst", ".apidocs/armi.tests.test_user_plugins.rst", ".apidocs/armi.utils.rst", ".apidocs/armi.utils.asciimaps.rst", ".apidocs/armi.utils.codeTiming.rst", ".apidocs/armi.utils.customExceptions.rst", ".apidocs/armi.utils.densityTools.rst", ".apidocs/armi.utils.directoryChangers.rst", ".apidocs/armi.utils.directoryChangersMpi.rst", ".apidocs/armi.utils.dynamicImporter.rst", ".apidocs/armi.utils.flags.rst", ".apidocs/armi.utils.gridEditor.rst", ".apidocs/armi.utils.hexagon.rst", ".apidocs/armi.utils.iterables.rst", ".apidocs/armi.utils.mathematics.rst", ".apidocs/armi.utils.outputCache.rst", ".apidocs/armi.utils.parsing.rst", ".apidocs/armi.utils.pathTools.rst", ".apidocs/armi.utils.plotting.rst", ".apidocs/armi.utils.properties.rst", ".apidocs/armi.utils.reportPlotting.rst", ".apidocs/armi.utils.tabulate.rst", ".apidocs/armi.utils.tests.rst", ".apidocs/armi.utils.tests.test_asciimaps.rst", ".apidocs/armi.utils.tests.test_codeTiming.rst", ".apidocs/armi.utils.tests.test_custom_exceptions.rst", ".apidocs/armi.utils.tests.test_densityTools.rst", ".apidocs/armi.utils.tests.test_directoryChangers.rst", ".apidocs/armi.utils.tests.test_directoryChangersMpi.rst", ".apidocs/armi.utils.tests.test_flags.rst", ".apidocs/armi.utils.tests.test_hexagon.rst", ".apidocs/armi.utils.tests.test_iterables.rst", ".apidocs/armi.utils.tests.test_mathematics.rst", ".apidocs/armi.utils.tests.test_outputCache.rst", ".apidocs/armi.utils.tests.test_parsing.rst", ".apidocs/armi.utils.tests.test_pathTools.rst", ".apidocs/armi.utils.tests.test_plotting.rst", ".apidocs/armi.utils.tests.test_properties.rst", ".apidocs/armi.utils.tests.test_reportPlotting.rst", ".apidocs/armi.utils.tests.test_tabulate.rst", ".apidocs/armi.utils.tests.test_textProcessors.rst", ".apidocs/armi.utils.tests.test_triangle.rst", ".apidocs/armi.utils.tests.test_units.rst", ".apidocs/armi.utils.tests.test_utils.rst", ".apidocs/armi.utils.textProcessors.rst", ".apidocs/armi.utils.triangle.rst", ".apidocs/armi.utils.units.rst", ".apidocs/modules.rst", "developer/documenting.rst", "developer/entrypoints.rst", "developer/first_time_contributors.rst", "developer/guide.rst", "developer/index.rst", "developer/making_armi_based_apps.rst", "developer/parallel_coding.rst", "developer/profiling.rst", "developer/reports.rst", "developer/standards_and_practices.rst", "developer/tooling.rst", "gallery-src/README.rst", "gallery-src/analysis/README.rst", "gallery-src/applications/README.rst", "gallery-src/framework/README.rst", "gallery/analysis/index.rst", "gallery/analysis/run_blockMcnpMaterialCard.rst", "gallery/analysis/run_hexBlockToRZConversion.rst", "gallery/analysis/run_hexReactorToRZ.rst", "gallery/analysis/sg_execution_times.rst", "gallery/applications/index.rst", "gallery/framework/index.rst", "gallery/framework/run_blockVolumeFractions.rst", "gallery/framework/run_chartOfNuclides.rst", "gallery/framework/run_computeReactionRates.rst", "gallery/framework/run_fuelManagement.rst", "gallery/framework/run_grids1_hex.rst", "gallery/framework/run_grids2_cartesian.rst", "gallery/framework/run_grids3_rzt.rst", "gallery/framework/run_isotxs.rst", "gallery/framework/run_isotxs2_matrix.rst", "gallery/framework/run_materials.rst", "gallery/framework/run_programmaticReactorDefinition.rst", "gallery/framework/run_reactorFacemap.rst", "gallery/framework/run_transmutationMatrix.rst", "gallery/framework/sg_execution_times.rst", "gallery/index.rst", "glossary.rst", "index.rst", "installation.rst", "release/0.1.rst", "release/0.2.rst", "release/0.3.rst", "release/0.4.rst", "release/0.5.rst", "release/index.rst", "tutorials/data_model.nblink", "tutorials/index.rst", "tutorials/making_your_first_app.rst", "tutorials/materials_demo.ipynb", "tutorials/nuclide_demo.ipynb", "tutorials/param_sweep.nblink", "tutorials/walkthrough_inputs.rst", "tutorials/walkthrough_lwr_inputs.rst", "user/_gallery/index.rst", "user/accessingEntryPoints.rst", "user/assembly_parameters_report.rst", "user/block_parameters_report.rst", "user/component_parameters_report.rst", "user/core_parameters_report.rst", "user/index.rst", "user/inputs.rst", "user/manual_data_access.rst", "user/outputs.rst", "user/physics_coupling.rst", "user/radial_and_axial_expansion.rst", "user/reactor_parameters_report.rst", "user/spatial_block_parameters.rst", "user/user_install.rst"], "titles": ["armi package", "armi.apps module", "armi.bookkeeping package", "armi.bookkeeping.db package", "armi.bookkeeping.db.compareDB3 module", "armi.bookkeeping.db.database module", "armi.bookkeeping.db.database3 module", "armi.bookkeeping.db.databaseInterface module", "armi.bookkeeping.db.factory module", "armi.bookkeeping.db.jaggedArray module", "armi.bookkeeping.db.layout module", "armi.bookkeeping.db.passiveDBLoadPlugin module", "armi.bookkeeping.db.permissions module", "armi.bookkeeping.db.tests package", "armi.bookkeeping.db.tests.test_comparedb3 module", "armi.bookkeeping.db.tests.test_database3 module", "armi.bookkeeping.db.tests.test_databaseInterface module", "armi.bookkeeping.db.tests.test_jaggedArray module", "armi.bookkeeping.db.tests.test_layout module", "armi.bookkeeping.db.typedefs module", "armi.bookkeeping.historyTracker module", "armi.bookkeeping.mainInterface module", "armi.bookkeeping.memoryProfiler module", "armi.bookkeeping.report package", "armi.bookkeeping.report.data module", "armi.bookkeeping.report.html module", "armi.bookkeeping.report.newReportUtils module", "armi.bookkeeping.report.newReports module", "armi.bookkeeping.report.reportInterface module", "armi.bookkeeping.report.reportingUtils module", "armi.bookkeeping.report.tests package", "armi.bookkeeping.report.tests.test_newReport module", "armi.bookkeeping.report.tests.test_report module", "armi.bookkeeping.snapshotInterface module", "armi.bookkeeping.tests package", "armi.bookkeeping.tests.test_historyTracker module", "armi.bookkeeping.tests.test_memoryProfiler module", "armi.bookkeeping.tests.test_snapshot module", "armi.bookkeeping.visualization package", "armi.bookkeeping.visualization.dumper module", "armi.bookkeeping.visualization.entryPoint module", "armi.bookkeeping.visualization.tests package", "armi.bookkeeping.visualization.tests.test_vis module", "armi.bookkeeping.visualization.tests.test_xdmf module", "armi.bookkeeping.visualization.utils module", "armi.bookkeeping.visualization.vtk module", "armi.bookkeeping.visualization.xdmf module", "armi.cases package", "armi.cases.case module", "armi.cases.inputModifiers package", "armi.cases.inputModifiers.inputModifiers module", "armi.cases.inputModifiers.neutronicsModifiers module", "armi.cases.inputModifiers.pinTypeInputModifiers module", "armi.cases.inputModifiers.tests package", "armi.cases.inputModifiers.tests.test_inputModifiers module", "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module", "armi.cases.suite module", "armi.cases.suiteBuilder module", "armi.cases.tests package", "armi.cases.tests.test_cases module", "armi.cases.tests.test_suiteBuilder module", "armi.cli package", "armi.cli.checkInputs module", "armi.cli.cleanTemps module", "armi.cli.clone module", "armi.cli.compareCases module", "armi.cli.database module", "armi.cli.entryPoint module", "armi.cli.gridGui module", "armi.cli.migrateInputs module", "armi.cli.modify module", "armi.cli.reportsEntryPoint module", "armi.cli.run module", "armi.cli.runSuite module", "armi.cli.tests package", "armi.cli.tests.test_runEntryPoint module", "armi.cli.tests.test_runSuite module", "armi.conftest module", "armi.context module", "armi.interfaces module", "armi.materials package", "armi.materials.air module", "armi.materials.alloy200 module", "armi.materials.b4c module", "armi.materials.be9 module", "armi.materials.caH2 module", "armi.materials.californium module", "armi.materials.concrete module", "armi.materials.copper module", "armi.materials.cs module", "armi.materials.custom module", "armi.materials.graphite module", "armi.materials.hafnium module", "armi.materials.hastelloyN module", "armi.materials.ht9 module", "armi.materials.inconel module", "armi.materials.inconel600 module", "armi.materials.inconel625 module", "armi.materials.inconel800 module", "armi.materials.inconelPE16 module", "armi.materials.inconelX750 module", "armi.materials.lead module", "armi.materials.leadBismuth module", "armi.materials.lithium module", "armi.materials.magnesium module", "armi.materials.material module", "armi.materials.mgO module", "armi.materials.mixture module", "armi.materials.molybdenum module", "armi.materials.mox module", "armi.materials.nZ module", "armi.materials.potassium module", "armi.materials.scandiumOxide module", "armi.materials.siC module", "armi.materials.sodium module", "armi.materials.sodiumChloride module", "armi.materials.sulfur module", "armi.materials.tZM module", "armi.materials.tantalum module", "armi.materials.tests package", "armi.materials.tests.test__init__ module", "armi.materials.tests.test_air module", "armi.materials.tests.test_b4c module", "armi.materials.tests.test_be9 module", "armi.materials.tests.test_graphite module", "armi.materials.tests.test_lithium module", "armi.materials.tests.test_materials module", "armi.materials.tests.test_sic module", "armi.materials.tests.test_sulfur module", "armi.materials.tests.test_thoriumOxide module", "armi.materials.tests.test_uZr module", "armi.materials.tests.test_water module", "armi.materials.thU module", "armi.materials.thorium module", "armi.materials.thoriumOxide module", "armi.materials.uThZr module", "armi.materials.uZr module", "armi.materials.uranium module", "armi.materials.uraniumOxide module", "armi.materials.void module", "armi.materials.water module", "armi.materials.yttriumOxide module", "armi.materials.zincOxide module", "armi.materials.zr module", "armi.meta module", "armi.migration package", "armi.migration.base module", "armi.migration.m0_1_3 module", "armi.migration.m0_1_6 module", "armi.migration.tests package", "armi.migration.tests.test_m0_1_6 module", "armi.migration.tests.test_migration_base module", "armi.mpiActions module", "armi.nucDirectory package", "armi.nucDirectory.elements module", "armi.nucDirectory.nucDir module", "armi.nucDirectory.nuclideBases module", "armi.nucDirectory.tests package", "armi.nucDirectory.tests.test_elements module", "armi.nucDirectory.tests.test_nucDirectory module", "armi.nucDirectory.tests.test_nuclideBases module", "armi.nucDirectory.tests.test_thermalScattering module", "armi.nucDirectory.tests.test_transmutations module", "armi.nucDirectory.thermalScattering module", "armi.nucDirectory.transmutations module", "armi.nuclearDataIO package", "armi.nuclearDataIO.cccc package", "armi.nuclearDataIO.cccc.cccc module", "armi.nuclearDataIO.cccc.compxs module", "armi.nuclearDataIO.cccc.dif3d module", "armi.nuclearDataIO.cccc.dlayxs module", "armi.nuclearDataIO.cccc.fixsrc module", "armi.nuclearDataIO.cccc.gamiso module", "armi.nuclearDataIO.cccc.geodst module", "armi.nuclearDataIO.cccc.isotxs module", "armi.nuclearDataIO.cccc.labels module", "armi.nuclearDataIO.cccc.nhflux module", "armi.nuclearDataIO.cccc.pmatrx module", "armi.nuclearDataIO.cccc.pwdint module", "armi.nuclearDataIO.cccc.rtflux module", "armi.nuclearDataIO.cccc.rzflux module", "armi.nuclearDataIO.cccc.tests package", "armi.nuclearDataIO.cccc.tests.test_cccc module", "armi.nuclearDataIO.cccc.tests.test_compxs module", "armi.nuclearDataIO.cccc.tests.test_dif3d module", "armi.nuclearDataIO.cccc.tests.test_dlayxs module", "armi.nuclearDataIO.cccc.tests.test_fixsrc module", "armi.nuclearDataIO.cccc.tests.test_gamiso module", "armi.nuclearDataIO.cccc.tests.test_geodst module", "armi.nuclearDataIO.cccc.tests.test_isotxs module", "armi.nuclearDataIO.cccc.tests.test_labels module", "armi.nuclearDataIO.cccc.tests.test_nhflux module", "armi.nuclearDataIO.cccc.tests.test_pmatrx module", "armi.nuclearDataIO.cccc.tests.test_pwdint module", "armi.nuclearDataIO.cccc.tests.test_rtflux module", "armi.nuclearDataIO.cccc.tests.test_rzflux module", "armi.nuclearDataIO.nuclearFileMetadata module", "armi.nuclearDataIO.tests package", "armi.nuclearDataIO.tests.test_xsCollections module", "armi.nuclearDataIO.tests.test_xsLibraries module", "armi.nuclearDataIO.tests.test_xsNuclides module", "armi.nuclearDataIO.xsCollections module", "armi.nuclearDataIO.xsLibraries module", "armi.nuclearDataIO.xsNuclides module", "armi.operators package", "armi.operators.operator module", "armi.operators.operatorMPI module", "armi.operators.runTypes module", "armi.operators.settingsValidation module", "armi.operators.snapshots module", "armi.operators.tests package", "armi.operators.tests.test_operatorSnapshots module", "armi.operators.tests.test_operators module", "armi.physics package", "armi.physics.constants module", "armi.physics.executers module", "armi.physics.fuelCycle package", "armi.physics.fuelCycle.assemblyRotationAlgorithms module", "armi.physics.fuelCycle.fuelHandlerFactory module", "armi.physics.fuelCycle.fuelHandlerInterface module", "armi.physics.fuelCycle.fuelHandlers module", "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module", "armi.physics.fuelCycle.settings module", "armi.physics.fuelCycle.tests package", "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module", "armi.physics.fuelCycle.tests.test_fuelHandlers module", "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module", "armi.physics.fuelCycle.tests.test_utils module", "armi.physics.fuelCycle.utils module", "armi.physics.fuelPerformance package", "armi.physics.fuelPerformance.executers module", "armi.physics.fuelPerformance.parameters module", "armi.physics.fuelPerformance.plugin module", "armi.physics.fuelPerformance.settings module", "armi.physics.fuelPerformance.tests package", "armi.physics.fuelPerformance.tests.test_executers module", "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module", "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module", "armi.physics.fuelPerformance.utils module", "armi.physics.neutronics package", "armi.physics.neutronics.const module", "armi.physics.neutronics.crossSectionGroupManager module", "armi.physics.neutronics.crossSectionSettings module", "armi.physics.neutronics.diffIsotxs module", "armi.physics.neutronics.energyGroups module", "armi.physics.neutronics.fissionProductModel package", "armi.physics.neutronics.fissionProductModel.fissionProductModel module", "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module", "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module", "armi.physics.neutronics.fissionProductModel.tests package", "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module", "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module", "armi.physics.neutronics.globalFlux package", "armi.physics.neutronics.globalFlux.globalFluxInterface module", "armi.physics.neutronics.globalFlux.tests package", "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module", "armi.physics.neutronics.latticePhysics package", "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module", "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module", "armi.physics.neutronics.latticePhysics.tests package", "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module", "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module", "armi.physics.neutronics.macroXSGenerationInterface module", "armi.physics.neutronics.parameters module", "armi.physics.neutronics.reports module", "armi.physics.neutronics.settings module", "armi.physics.neutronics.tests package", "armi.physics.neutronics.tests.test_crossSectionManager module", "armi.physics.neutronics.tests.test_crossSectionSettings module", "armi.physics.neutronics.tests.test_crossSectionTable module", "armi.physics.neutronics.tests.test_energyGroups module", "armi.physics.neutronics.tests.test_macroXSGenerationInterface module", "armi.physics.neutronics.tests.test_neutronicsPlugin module", "armi.physics.safety package", "armi.physics.tests package", "armi.physics.tests.test_executers module", "armi.physics.thermalHydraulics package", "armi.physics.thermalHydraulics.const module", "armi.physics.thermalHydraulics.parameters module", "armi.physics.thermalHydraulics.plugin module", "armi.physics.thermalHydraulics.settings module", "armi.physics.thermalHydraulics.tests package", "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin module", "armi.pluginManager module", "armi.plugins module", "armi.reactor package", "armi.reactor.assemblies module", "armi.reactor.assemblyParameters module", "armi.reactor.blockParameters module", "armi.reactor.blocks module", "armi.reactor.blueprints package", "armi.reactor.blueprints.assemblyBlueprint module", "armi.reactor.blueprints.blockBlueprint module", "armi.reactor.blueprints.componentBlueprint module", "armi.reactor.blueprints.gridBlueprint module", "armi.reactor.blueprints.isotopicOptions module", "armi.reactor.blueprints.reactorBlueprint module", "armi.reactor.blueprints.tests package", "armi.reactor.blueprints.tests.test_assemblyBlueprints module", "armi.reactor.blueprints.tests.test_blockBlueprints module", "armi.reactor.blueprints.tests.test_blueprints module", "armi.reactor.blueprints.tests.test_componentBlueprint module", "armi.reactor.blueprints.tests.test_customIsotopics module", "armi.reactor.blueprints.tests.test_gridBlueprints module", "armi.reactor.blueprints.tests.test_materialModifications module", "armi.reactor.blueprints.tests.test_reactorBlueprints module", "armi.reactor.components package", "armi.reactor.components.basicShapes module", "armi.reactor.components.complexShapes module", "armi.reactor.components.component module", "armi.reactor.components.componentParameters module", "armi.reactor.components.volumetricShapes module", "armi.reactor.composites module", "armi.reactor.converters package", "armi.reactor.converters.axialExpansionChanger package", "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage module", "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger module", "armi.reactor.converters.axialExpansionChanger.expansionData module", "armi.reactor.converters.blockConverters module", "armi.reactor.converters.geometryConverters module", "armi.reactor.converters.meshConverters module", "armi.reactor.converters.parameterSweeps package", "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module", "armi.reactor.converters.pinTypeBlockConverters module", "armi.reactor.converters.tests package", "armi.reactor.converters.tests.test_axialExpansionChanger module", "armi.reactor.converters.tests.test_blockConverter module", "armi.reactor.converters.tests.test_geometryConverters module", "armi.reactor.converters.tests.test_meshConverters module", "armi.reactor.converters.tests.test_pinTypeBlockConverters module", "armi.reactor.converters.tests.test_uniformMesh module", "armi.reactor.converters.uniformMesh module", "armi.reactor.cores module", "armi.reactor.excoreStructure module", "armi.reactor.flags module", "armi.reactor.geometry module", "armi.reactor.grids package", "armi.reactor.grids.axial module", "armi.reactor.grids.cartesian module", "armi.reactor.grids.constants module", "armi.reactor.grids.grid module", "armi.reactor.grids.hexagonal module", "armi.reactor.grids.locations module", "armi.reactor.grids.structuredGrid module", "armi.reactor.grids.thetarz module", "armi.reactor.parameters package", "armi.reactor.parameters.exceptions module", "armi.reactor.parameters.parameterCollections module", "armi.reactor.parameters.parameterDefinitions module", "armi.reactor.parameters.resolveCollections module", "armi.reactor.reactorParameters module", "armi.reactor.reactors module", "armi.reactor.spentFuelPool module", "armi.reactor.systemLayoutInput module", "armi.reactor.tests package", "armi.reactor.tests.test_assemblies module", "armi.reactor.tests.test_blocks module", "armi.reactor.tests.test_components module", "armi.reactor.tests.test_composites module", "armi.reactor.tests.test_excoreStructures module", "armi.reactor.tests.test_flags module", "armi.reactor.tests.test_geometry module", "armi.reactor.tests.test_hexBlockRotate module", "armi.reactor.tests.test_parameters module", "armi.reactor.tests.test_reactors module", "armi.reactor.tests.test_rz_reactors module", "armi.reactor.tests.test_zones module", "armi.reactor.zones module", "armi.runLog module", "armi.settings package", "armi.settings.caseSettings module", "armi.settings.fwSettings package", "armi.settings.fwSettings.databaseSettings module", "armi.settings.fwSettings.globalSettings module", "armi.settings.fwSettings.reportSettings module", "armi.settings.fwSettings.tightCouplingSettings module", "armi.settings.setting module", "armi.settings.settingsIO module", "armi.settings.settingsValidation module", "armi.settings.tests package", "armi.settings.tests.test_inspectors module", "armi.settings.tests.test_settings module", "armi.settings.tests.test_settingsIO module", "armi.tests package", "armi.tests.mockRunLogs module", "armi.tests.refSmallReactorShuffleLogic module", "armi.tests.test_apps module", "armi.tests.test_armiTestHelper module", "armi.tests.test_cartesian module", "armi.tests.test_context module", "armi.tests.test_interfaces module", "armi.tests.test_lwrInputs module", "armi.tests.test_mpiActions module", "armi.tests.test_mpiFeatures module", "armi.tests.test_mpiParameters module", "armi.tests.test_notebooks module", "armi.tests.test_plugins module", "armi.tests.test_runLog module", "armi.tests.test_tests module", "armi.tests.test_user_plugins module", "armi.utils package", "armi.utils.asciimaps module", "armi.utils.codeTiming module", "armi.utils.customExceptions module", "armi.utils.densityTools module", "armi.utils.directoryChangers module", "armi.utils.directoryChangersMpi module", "armi.utils.dynamicImporter module", "armi.utils.flags module", "armi.utils.gridEditor module", "armi.utils.hexagon module", "armi.utils.iterables module", "armi.utils.mathematics module", "armi.utils.outputCache module", "armi.utils.parsing module", "armi.utils.pathTools module", "armi.utils.plotting module", "armi.utils.properties module", "armi.utils.reportPlotting module", "armi.utils.tabulate module", "armi.utils.tests package", "armi.utils.tests.test_asciimaps module", "armi.utils.tests.test_codeTiming module", "armi.utils.tests.test_custom_exceptions module", "armi.utils.tests.test_densityTools module", "armi.utils.tests.test_directoryChangers module", "armi.utils.tests.test_directoryChangersMpi module", "armi.utils.tests.test_flags module", "armi.utils.tests.test_hexagon module", "armi.utils.tests.test_iterables module", "armi.utils.tests.test_mathematics module", "armi.utils.tests.test_outputCache module", "armi.utils.tests.test_parsing module", "armi.utils.tests.test_pathTools module", "armi.utils.tests.test_plotting module", "armi.utils.tests.test_properties module", "armi.utils.tests.test_reportPlotting module", "armi.utils.tests.test_tabulate module", "armi.utils.tests.test_textProcessors module", "armi.utils.tests.test_triangle module", "armi.utils.tests.test_units module", "armi.utils.tests.test_utils module", "armi.utils.textProcessors module", "armi.utils.triangle module", "armi.utils.units module", "armi", "<span class=\"section-number\">4. </span>Documenting ARMI", "<span class=\"section-number\">3. </span>Entry Points", "<span class=\"section-number\">8. </span>First Time Contributors Guide", "<span class=\"section-number\">1. </span>Framework Architecture", "Developer Docs", "<span class=\"section-number\">2. </span>Making ARMI-based Apps", "<span class=\"section-number\">5. </span>Parallel Code in ARMI", "<span class=\"section-number\">6. </span>Profiling ARMI", "<span class=\"section-number\">7. </span>Reports in ARMI", "<span class=\"section-number\">9. </span>Standards and Practices for Coding", "<span class=\"section-number\">10. </span>Tooling and Infrastructure", "Gallery", "Analysis", "Applications", "Framework", "Analysis", "Write MCNP Material Cards", "Hex block to RZ geometry conversion", "Hex reactor to RZ geometry conversion", "Computation times", "Applications", "Framework", "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion", "Plot a chart of the nuclides.", "Computing Reaction Rates on a Block.", "&lt;no title&gt;", "Make a hex grid.", "Make a Cartesian grid.", "Make a Theta-R-Z grid.", "Plotting Multi-group XS from ISOTXS.", "Plotting a multi-group scatter matrix.", "Listing of Material Library.", "Build Reactor Inputs Programmatically.", "Plot a reactor facemap.", "Transmutation and decay reactions.", "Computation times", "Gallery", "Glossary", "ARMI", "Installation", "ARMI v0.1 Release Notes", "ARMI v0.2 Release Notes", "ARMI v0.3 Release Notes", "ARMI v0.4 Release Notes", "ARMI v0.5 Release Notes", "Release Notes", "<span class=\"section-number\">5. </span>Hands-on at the ARMI Terminal", "Tutorials", "<span class=\"section-number\">6. </span>Making your first ARMI-based App", "<span class=\"section-number\">2. </span>The ARMI Material Library", "<span class=\"section-number\">1. </span>The ARMI Nuclide and Element Packages", "<span class=\"section-number\">7. </span>Parameter sweeps", "<span class=\"section-number\">3. </span>Building input files for a fast reactor", "<span class=\"section-number\">4. </span>Building input files for a thermal reactor", "Gallery", "<span class=\"section-number\">12. </span>Accessing Entry Points", "<span class=\"section-number\">7. </span>Assembly Parameters", "<span class=\"section-number\">8. </span>Block Parameters", "<span class=\"section-number\">6. </span>Component Parameters", "<span class=\"section-number\">5. </span>Core Parameters", "User Docs", "<span class=\"section-number\">1. </span>Inputs", "<span class=\"section-number\">3. </span>Accessing Data in ARMI", "<span class=\"section-number\">2. </span>Outputs", "<span class=\"section-number\">10. </span>Physics Coupling", "<span class=\"section-number\">11. </span>Radial and Axial Expansion and Contraction", "<span class=\"section-number\">4. </span>Reactor Parameters", "<span class=\"section-number\">9. </span>Spatial block parameters", "Installation"], "terms": {"welcom": [0, 29, 313, 487], "advanc": [0, 3, 8, 93, 241, 242, 312, 313, 375, 410, 483, 484, 485, 492, 497, 514], "reactor": [0, 2, 3, 5, 7, 10, 11, 15, 16, 20, 21, 22, 26, 27, 29, 32, 33, 35, 39, 42, 44, 45, 46, 47, 48, 49, 59, 61, 62, 71, 79, 80, 83, 86, 90, 91, 93, 102, 105, 152, 156, 161, 165, 166, 167, 170, 176, 177, 188, 193, 202, 204, 205, 212, 213, 215, 216, 217, 219, 220, 221, 224, 225, 226, 228, 229, 230, 241, 242, 246, 248, 250, 253, 255, 257, 264, 267, 279, 284, 376, 383, 388, 390, 392, 393, 394, 396, 399, 400, 401, 404, 406, 408, 410, 418, 445, 448, 450, 451, 452, 454, 455, 457, 460, 461, 462, 463, 465, 467, 468, 470, 471, 472, 473, 474, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 493, 494, 495, 500, 502, 503, 504, 505, 506, 507, 508, 513, 514], "model": [0, 3, 5, 7, 10, 11, 22, 35, 47, 48, 57, 61, 79, 81, 82, 83, 84, 88, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143, 160, 161, 164, 175, 204, 212, 213, 215, 229, 238, 239, 241, 242, 245, 246, 247, 250, 251, 268, 279, 284, 285, 289, 290, 291, 292, 293, 294, 295, 300, 306, 308, 309, 312, 313, 318, 319, 323, 332, 334, 338, 345, 347, 348, 349, 351, 363, 365, 369, 378, 394, 400, 450, 451, 458, 460, 461, 463, 467, 470, 480, 482, 483, 484, 485, 486, 487, 489, 490, 493, 494, 495, 497, 498, 499, 500, 503, 505, 507, 509, 513, 514], "interfac": [0, 1, 3, 4, 5, 7, 8, 10, 16, 20, 21, 22, 28, 33, 35, 48, 59, 152, 156, 166, 167, 175, 176, 179, 180, 190, 204, 205, 206, 212, 215, 216, 219, 220, 224, 225, 232, 239, 241, 246, 250, 253, 255, 256, 257, 260, 262, 269, 271, 279, 284, 286, 312, 315, 332, 335, 340, 345, 372, 374, 375, 386, 390, 393, 396, 399, 408, 411, 418, 419, 445, 446, 447, 451, 452, 455, 456, 471, 478, 479, 483, 484, 485, 486, 487, 489, 490, 492, 497, 507, 509, 514], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 20, 21, 22, 24, 26, 27, 28, 29, 32, 33, 34, 35, 38, 40, 43, 44, 45, 46, 48, 50, 51, 52, 56, 57, 59, 61, 62, 63, 66, 67, 70, 71, 75, 77, 78, 79, 80, 81, 83, 90, 91, 94, 95, 102, 104, 105, 106, 109, 114, 115, 116, 117, 120, 126, 134, 135, 136, 138, 139, 140, 146, 152, 153, 154, 155, 156, 161, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 188, 189, 191, 192, 193, 196, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 225, 230, 238, 239, 241, 242, 243, 244, 246, 248, 250, 253, 255, 257, 260, 262, 264, 267, 268, 275, 283, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 300, 301, 304, 306, 307, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 323, 325, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 377, 378, 383, 384, 386, 390, 392, 393, 394, 396, 397, 399, 400, 401, 402, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 424, 436, 437, 438, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 470, 471, 472, 473, 474, 475, 477, 478, 480, 482, 483, 484, 485, 486, 487, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514], "modul": [0, 2, 3, 13, 23, 30, 34, 38, 41, 47, 49, 53, 58, 61, 74, 80, 119, 145, 149, 153, 157, 165, 166, 181, 197, 204, 210, 213, 216, 223, 229, 234, 239, 245, 249, 252, 254, 256, 259, 266, 274, 276, 281, 285, 290, 297, 306, 313, 314, 321, 324, 336, 345, 354, 369, 371, 379, 383, 400, 420, 445, 447, 449, 451, 452, 455, 483, 484, 486, 487, 494, 496, 497, 498, 507, 509], "initi": [0, 1, 3, 7, 48, 60, 62, 75, 79, 152, 154, 163, 167, 168, 171, 176, 202, 205, 217, 246, 256, 264, 284, 289, 291, 292, 293, 294, 295, 296, 304, 309, 312, 316, 317, 325, 331, 332, 345, 348, 357, 376, 378, 396, 402, 404, 405, 417, 419, 420, 428, 435, 449, 468, 471, 478, 479, 483, 484, 486, 487, 489, 493, 503, 504, 507], "platform": [0, 56, 484, 485, 487, 514], "The": [0, 1, 2, 3, 4, 5, 7, 9, 10, 15, 16, 17, 20, 21, 22, 26, 27, 28, 29, 33, 38, 40, 43, 45, 46, 48, 51, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 82, 83, 89, 90, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 109, 113, 117, 137, 138, 140, 143, 146, 152, 153, 154, 155, 156, 160, 163, 164, 166, 167, 168, 170, 171, 173, 174, 175, 176, 179, 180, 189, 191, 198, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 215, 216, 218, 219, 220, 221, 225, 229, 238, 239, 241, 242, 243, 245, 246, 247, 248, 253, 257, 262, 265, 268, 283, 284, 285, 286, 289, 290, 291, 292, 294, 295, 296, 306, 307, 308, 309, 311, 312, 315, 316, 317, 318, 319, 326, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 356, 357, 358, 364, 365, 367, 368, 369, 370, 375, 376, 377, 378, 382, 383, 390, 393, 397, 399, 400, 401, 404, 410, 411, 412, 415, 416, 417, 418, 419, 442, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 463, 478, 480, 483, 486, 487, 488, 492, 493, 494, 497, 498, 501, 502, 503, 504, 505, 506, 508, 511, 512, 513], "bootstrap": 0, "process": [0, 3, 4, 5, 22, 24, 36, 40, 46, 48, 78, 105, 152, 176, 205, 215, 216, 219, 220, 225, 229, 230, 239, 242, 253, 257, 284, 312, 325, 331, 332, 347, 370, 377, 392, 393, 394, 403, 419, 442, 447, 448, 449, 452, 455, 456, 483, 484, 486, 487, 490, 491, 492, 493, 494, 505, 507, 509, 510, 513], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 20, 21, 22, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 109, 112, 113, 114, 115, 116, 117, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 146, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 189, 191, 196, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 238, 239, 241, 242, 243, 244, 246, 248, 251, 253, 255, 257, 260, 261, 262, 264, 267, 268, 275, 279, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 300, 301, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 323, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 362, 363, 364, 365, 367, 368, 370, 375, 376, 377, 378, 380, 381, 382, 383, 384, 387, 390, 393, 395, 396, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 424, 425, 428, 430, 433, 434, 436, 437, 438, 439, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 462, 463, 468, 470, 471, 472, 473, 474, 477, 478, 480, 483, 484, 485, 486, 487, 489, 490, 492, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 507, 509, 510, 511, 512, 513, 514], "broken": [0, 152, 341, 411, 419, 455, 486, 490, 494, 507], "sever": [0, 78, 166, 220, 257, 284, 331, 345, 419, 446, 449, 455, 475, 484, 487, 489, 494, 496, 507], "phase": [0, 112, 141, 154, 163, 251, 507], "import": [0, 1, 3, 5, 7, 34, 45, 77, 78, 80, 153, 155, 156, 166, 168, 174, 176, 213, 216, 220, 240, 241, 246, 257, 284, 309, 319, 331, 332, 334, 343, 345, 356, 368, 381, 400, 403, 406, 407, 415, 416, 419, 442, 445, 447, 450, 451, 452, 453, 454, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 485, 486, 487, 492, 494, 495, 496, 497, 498, 499, 507, 509, 513, 514], "fundament": [0, 47, 61, 80, 81, 121, 142, 153, 154, 156, 312, 348, 410, 498], "depend": [0, 20, 27, 32, 33, 38, 47, 48, 56, 57, 59, 79, 80, 105, 152, 153, 166, 169, 170, 175, 205, 206, 207, 224, 225, 238, 241, 242, 246, 284, 286, 289, 294, 295, 309, 311, 312, 319, 331, 332, 338, 340, 341, 348, 357, 364, 381, 383, 419, 442, 446, 448, 449, 450, 454, 477, 480, 484, 485, 486, 487, 489, 490, 494, 495, 497, 505, 507, 508, 513, 514], "python": [0, 1, 22, 38, 40, 67, 70, 71, 79, 80, 166, 167, 213, 220, 284, 289, 342, 345, 348, 376, 393, 400, 408, 411, 414, 415, 419, 426, 437, 442, 446, 447, 448, 449, 451, 452, 453, 455, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 486, 487, 490, 492, 497, 498, 499, 507, 509], "librari": [0, 22, 38, 155, 156, 163, 164, 168, 170, 172, 174, 176, 177, 183, 189, 192, 196, 198, 201, 202, 203, 246, 253, 257, 262, 289, 295, 302, 309, 312, 332, 368, 408, 416, 447, 448, 451, 452, 455, 456, 467, 470, 475, 476, 481, 482, 484, 486, 487, 490, 493, 494, 499, 500, 507], "some": [0, 2, 3, 4, 5, 8, 10, 15, 20, 21, 22, 29, 32, 33, 40, 42, 45, 47, 50, 56, 57, 78, 79, 90, 105, 109, 146, 152, 153, 155, 156, 161, 166, 167, 168, 170, 173, 176, 180, 196, 200, 201, 205, 213, 214, 215, 220, 225, 226, 229, 239, 241, 242, 246, 253, 265, 279, 284, 289, 290, 293, 294, 295, 305, 309, 312, 313, 316, 317, 330, 331, 332, 333, 334, 339, 340, 341, 343, 345, 347, 348, 349, 352, 355, 356, 364, 367, 368, 369, 370, 376, 377, 381, 383, 392, 394, 396, 401, 408, 411, 412, 415, 416, 418, 419, 421, 428, 430, 434, 437, 441, 442, 446, 448, 449, 450, 452, 454, 455, 456, 457, 463, 477, 480, 482, 484, 485, 486, 487, 490, 492, 494, 497, 498, 499, 500, 502, 504, 506, 509, 513, 514], "third": [0, 33, 98, 168, 179, 212, 224, 253, 284, 286, 294, 312, 319, 327, 332, 340, 364, 412, 419, 443, 448, 455, 478, 484, 498, 507, 513], "parti": [0, 33, 205, 448, 455, 484], "lib": [0, 84, 168, 172, 174, 177, 201, 202, 215, 253, 257, 260, 262, 285, 312, 332, 400, 417, 455, 470, 475, 476], "investig": [0, 495], "environ": [0, 77, 78, 241, 370, 376, 393, 426, 446, 455, 484, 486, 489, 498, 503], "check": [0, 1, 3, 4, 5, 32, 37, 43, 48, 56, 62, 75, 79, 105, 126, 166, 191, 199, 200, 212, 215, 220, 224, 225, 227, 228, 239, 241, 242, 253, 255, 267, 272, 284, 289, 300, 309, 312, 315, 317, 318, 320, 325, 327, 330, 332, 334, 335, 341, 344, 347, 355, 356, 357, 362, 376, 378, 380, 383, 384, 391, 396, 400, 411, 412, 413, 415, 417, 421, 425, 428, 434, 441, 448, 449, 451, 454, 455, 483, 485, 486, 487, 489, 490, 492, 493, 497, 498, 507, 514], "version": [0, 1, 2, 4, 5, 7, 8, 10, 15, 29, 45, 50, 61, 66, 69, 105, 145, 163, 166, 176, 212, 242, 283, 284, 285, 295, 312, 332, 345, 348, 369, 375, 376, 377, 378, 408, 411, 412, 416, 441, 449, 450, 484, 485, 486, 487, 489, 492, 494, 497, 498, 499, 507, 509, 514], "code": [0, 1, 3, 4, 5, 7, 8, 20, 21, 22, 28, 33, 49, 61, 67, 69, 79, 80, 145, 152, 153, 155, 156, 161, 163, 166, 167, 168, 169, 170, 174, 177, 201, 204, 205, 213, 215, 216, 219, 220, 222, 239, 241, 246, 255, 257, 258, 273, 284, 290, 292, 293, 295, 313, 323, 330, 331, 334, 335, 340, 341, 343, 348, 353, 368, 370, 390, 396, 399, 401, 402, 405, 408, 412, 422, 434, 442, 446, 447, 448, 449, 450, 451, 453, 454, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 486, 487, 490, 494, 496, 498, 503, 507, 509, 513], "mpi": [0, 2, 3, 5, 22, 28, 79, 130, 205, 206, 219, 220, 242, 262, 284, 312, 347, 392, 393, 394, 400, 406, 415, 426, 433, 450, 483, 484, 485, 487, 507, 514], "situat": [0, 10, 293, 306, 312, 334, 335, 342, 368, 378, 397, 419, 484, 494, 507], "tty": 0, "gui": [0, 61, 66, 67, 68, 78, 284, 338, 370, 376, 378, 412, 447, 449, 483, 484, 486, 487, 494, 498, 508], "interact": [0, 3, 5, 7, 8, 10, 16, 20, 21, 64, 66, 67, 78, 79, 156, 168, 203, 204, 205, 212, 229, 239, 241, 255, 257, 260, 284, 347, 366, 393, 446, 483, 484, 485, 486, 487, 489, 492, 493, 494, 495, 503, 505, 506, 507, 509, 510, 514], "set": [0, 1, 3, 4, 5, 7, 10, 11, 15, 21, 22, 26, 29, 32, 33, 37, 40, 44, 45, 46, 47, 48, 50, 51, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 83, 90, 91, 96, 97, 100, 105, 146, 148, 150, 152, 155, 156, 164, 165, 168, 172, 174, 175, 176, 177, 198, 201, 202, 204, 205, 206, 207, 208, 212, 213, 215, 216, 217, 218, 220, 228, 229, 230, 232, 239, 241, 242, 243, 244, 246, 247, 248, 250, 253, 255, 257, 260, 264, 267, 268, 272, 273, 275, 276, 279, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 300, 302, 309, 312, 316, 317, 318, 319, 320, 322, 325, 329, 330, 331, 332, 333, 334, 335, 340, 342, 343, 345, 346, 347, 348, 351, 353, 356, 357, 358, 364, 367, 390, 393, 397, 399, 400, 403, 404, 411, 412, 413, 415, 416, 417, 418, 419, 427, 438, 441, 442, 445, 447, 449, 451, 452, 454, 455, 456, 463, 464, 468, 470, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 501, 502, 503, 505, 506, 510, 511, 513, 514], "up": [0, 3, 4, 5, 10, 20, 22, 27, 32, 46, 48, 68, 78, 79, 80, 94, 105, 145, 147, 152, 153, 154, 155, 156, 163, 164, 166, 201, 203, 205, 213, 215, 220, 238, 241, 253, 268, 275, 286, 289, 293, 295, 304, 309, 312, 316, 319, 331, 332, 334, 338, 341, 342, 343, 347, 348, 356, 367, 378, 390, 394, 400, 401, 404, 410, 412, 416, 418, 421, 425, 430, 446, 447, 449, 452, 454, 455, 456, 480, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 497, 502, 503, 504, 505, 507, 509, 513, 514], "temp": [0, 26, 63, 75, 78, 109, 289, 309, 316, 317, 325, 416, 487, 494, 507], "dir": [0, 63, 215, 405, 487, 507], "printout": [0, 22, 56, 253, 305, 332, 486], "tabl": [0, 2, 4, 23, 24, 25, 26, 27, 56, 62, 81, 91, 93, 98, 106, 112, 114, 117, 124, 137, 141, 154, 155, 163, 185, 220, 264, 269, 286, 320, 332, 360, 400, 410, 437, 450, 452, 497, 498, 499, 507, 508, 509], "format": [0, 1, 3, 4, 5, 15, 17, 24, 25, 29, 38, 44, 46, 47, 81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 126, 132, 133, 134, 137, 138, 141, 142, 143, 156, 166, 167, 168, 173, 174, 175, 176, 178, 179, 180, 186, 194, 195, 220, 248, 286, 291, 294, 295, 301, 302, 309, 332, 353, 361, 368, 370, 384, 400, 404, 416, 418, 424, 437, 450, 452, 454, 475, 476, 484, 486, 489, 492, 497, 499, 507], "prepar": [0, 79, 172, 212, 220, 224, 246, 257, 312, 319, 331, 332, 400, 401, 495], "log": [0, 3, 5, 56, 205, 364, 368, 370, 383, 384, 393, 397, 403, 418, 450, 470, 475, 487, 489, 494, 497, 509], "info": [0, 20, 22, 79, 114, 137, 170, 176, 184, 191, 284, 312, 343, 345, 353, 368, 384, 400, 403, 445, 449, 456, 477, 492, 494, 497, 498, 503, 506, 507, 509], "all": [0, 1, 3, 4, 5, 7, 9, 10, 12, 20, 21, 22, 38, 45, 46, 48, 51, 52, 56, 61, 63, 67, 70, 73, 75, 78, 79, 80, 90, 105, 126, 130, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 166, 167, 168, 170, 172, 174, 175, 176, 177, 185, 189, 192, 196, 199, 201, 203, 205, 206, 207, 213, 215, 217, 219, 220, 221, 224, 228, 230, 239, 241, 242, 246, 248, 250, 253, 257, 258, 260, 262, 267, 284, 286, 289, 290, 293, 295, 306, 309, 312, 317, 318, 319, 325, 327, 331, 332, 333, 334, 335, 336, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 362, 364, 367, 368, 377, 382, 383, 384, 392, 399, 400, 401, 402, 404, 406, 407, 408, 411, 412, 413, 416, 418, 419, 425, 430, 442, 446, 448, 449, 451, 452, 454, 455, 456, 468, 477, 480, 483, 484, 485, 487, 488, 492, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 509, 512, 513, 514], "possibl": [0, 3, 5, 7, 20, 21, 78, 79, 152, 166, 167, 205, 221, 253, 283, 284, 286, 289, 290, 291, 295, 309, 319, 332, 334, 343, 345, 347, 348, 364, 376, 378, 383, 408, 412, 413, 415, 416, 419, 442, 454, 455, 456, 480, 484, 488, 494, 498, 501, 507], "nuclid": [0, 5, 80, 83, 84, 90, 91, 103, 105, 109, 113, 132, 135, 136, 137, 138, 140, 147, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 170, 172, 174, 175, 177, 196, 198, 200, 201, 202, 203, 241, 242, 246, 248, 250, 251, 258, 267, 289, 290, 292, 293, 295, 300, 302, 304, 309, 312, 318, 325, 327, 331, 332, 356, 364, 404, 416, 424, 445, 467, 470, 471, 478, 479, 480, 481, 482, 483, 486, 487, 492, 493, 495, 500, 502, 503, 504, 505], "object": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26, 27, 31, 33, 37, 44, 46, 47, 48, 49, 50, 54, 55, 56, 57, 59, 61, 67, 71, 78, 79, 80, 105, 146, 152, 153, 154, 155, 156, 163, 164, 166, 167, 168, 170, 172, 174, 176, 177, 198, 199, 201, 202, 203, 204, 205, 206, 207, 212, 215, 217, 218, 219, 220, 221, 230, 239, 242, 246, 248, 253, 255, 257, 262, 268, 272, 275, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 300, 306, 307, 308, 309, 311, 312, 315, 316, 317, 318, 319, 320, 322, 323, 325, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 353, 355, 358, 363, 364, 366, 367, 368, 369, 370, 375, 376, 377, 378, 381, 383, 390, 392, 393, 394, 399, 400, 401, 402, 404, 405, 408, 411, 412, 414, 416, 417, 418, 419, 435, 442, 447, 451, 452, 454, 455, 457, 478, 482, 483, 484, 486, 487, 490, 492, 495, 497, 500, 502, 503, 504, 507, 509, 513], "directori": [0, 3, 5, 16, 47, 48, 56, 57, 59, 63, 64, 70, 75, 77, 78, 79, 155, 159, 163, 202, 205, 215, 253, 275, 332, 364, 368, 369, 383, 400, 405, 406, 415, 425, 442, 447, 455, 469, 484, 485, 486, 487, 490, 492, 494, 499, 507, 509, 514], "discov": [0, 47, 48, 56, 57, 205, 225, 284, 449, 485, 497, 498, 514], "regist": [0, 1, 48, 76, 79, 283, 284, 369, 381, 396, 451, 484, 493, 507, 510], "avail": [0, 1, 3, 5, 7, 20, 22, 61, 67, 152, 153, 155, 163, 176, 201, 203, 205, 207, 212, 215, 241, 242, 246, 250, 289, 295, 300, 312, 331, 348, 369, 381, 400, 408, 441, 446, 448, 449, 451, 452, 454, 457, 482, 484, 492, 495, 496, 498, 499, 500, 505, 507, 508, 509, 510, 512], "built": [0, 10, 61, 202, 210, 220, 230, 239, 262, 267, 279, 284, 285, 286, 289, 290, 296, 312, 318, 325, 336, 399, 446, 447, 449, 451, 455, 470, 483, 484, 492, 494, 507, 509], "plugin": [0, 1, 2, 11, 26, 33, 48, 51, 56, 59, 61, 77, 79, 80, 94, 105, 114, 136, 153, 204, 207, 213, 214, 216, 220, 225, 229, 230, 231, 234, 236, 239, 246, 247, 253, 263, 266, 272, 273, 276, 278, 281, 282, 283, 285, 289, 293, 295, 309, 313, 331, 345, 347, 348, 369, 370, 373, 378, 381, 383, 386, 395, 396, 399, 408, 445, 450, 454, 462, 471, 477, 480, 484, 486, 488, 490, 492, 493, 495, 499, 509], "custom": [0, 1, 61, 67, 80, 94, 105, 109, 152, 204, 216, 219, 220, 225, 239, 242, 248, 253, 257, 268, 283, 284, 290, 293, 295, 302, 331, 368, 369, 375, 376, 377, 388, 393, 401, 404, 415, 416, 417, 419, 423, 429, 437, 442, 449, 451, 456, 478, 484, 486, 489, 490, 492, 493, 498, 509], "ones": [0, 61, 90, 156, 164, 167, 201, 225, 241, 289, 312, 332, 401, 471, 492, 494, 507], "after": [0, 2, 9, 16, 27, 56, 73, 78, 79, 90, 105, 153, 168, 170, 176, 203, 205, 215, 220, 253, 257, 279, 284, 286, 289, 302, 309, 312, 316, 319, 325, 330, 331, 332, 341, 342, 343, 345, 347, 349, 356, 357, 364, 368, 370, 393, 399, 402, 408, 410, 411, 412, 416, 417, 418, 419, 449, 451, 452, 455, 456, 483, 487, 488, 489, 490, 492, 494, 497, 503, 505, 507, 509, 513], "input": [0, 1, 3, 5, 7, 9, 15, 20, 21, 26, 29, 33, 40, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 59, 61, 62, 64, 66, 67, 69, 70, 75, 79, 80, 90, 105, 126, 136, 145, 146, 147, 156, 160, 169, 170, 171, 174, 184, 187, 189, 200, 201, 205, 212, 215, 216, 219, 220, 225, 241, 242, 246, 253, 257, 258, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 300, 302, 303, 306, 307, 309, 312, 313, 315, 319, 323, 325, 331, 334, 335, 343, 344, 351, 353, 356, 357, 361, 364, 367, 369, 370, 375, 376, 383, 391, 400, 401, 403, 404, 407, 412, 413, 414, 419, 424, 430, 437, 438, 441, 444, 447, 449, 450, 457, 467, 470, 471, 479, 480, 481, 482, 484, 486, 487, 492, 493, 494, 497, 500, 502, 503, 504, 506, 508, 509], "defin": [0, 1, 3, 5, 8, 9, 11, 20, 21, 27, 33, 50, 59, 71, 79, 80, 81, 89, 103, 104, 105, 109, 111, 116, 140, 146, 154, 156, 160, 163, 164, 166, 167, 173, 174, 176, 179, 180, 198, 199, 201, 202, 205, 206, 207, 212, 216, 217, 220, 222, 224, 232, 233, 239, 241, 247, 253, 257, 265, 268, 273, 279, 280, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 300, 303, 304, 306, 307, 309, 311, 312, 315, 317, 318, 330, 331, 332, 334, 336, 340, 342, 343, 345, 346, 347, 348, 349, 357, 360, 361, 362, 370, 372, 374, 376, 378, 381, 390, 393, 396, 399, 401, 408, 412, 416, 418, 419, 443, 444, 449, 451, 454, 455, 456, 457, 463, 468, 470, 478, 480, 482, 483, 486, 487, 490, 492, 493, 495, 497, 500, 503, 505, 509, 513], "potenti": [0, 22, 50, 79, 105, 134, 163, 164, 205, 215, 284, 315, 340, 351, 377, 378, 406, 413, 448, 451, 454, 456, 484, 494, 497, 502, 505, 507, 512], "configur": [0, 1, 4, 77, 78, 242, 268, 284, 319, 376, 445, 449, 451, 455, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 492, 494, 497, 499, 502, 507, 513, 514], "from": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 20, 21, 22, 26, 27, 29, 33, 34, 35, 38, 40, 44, 45, 47, 48, 50, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 105, 109, 111, 112, 114, 115, 117, 121, 124, 126, 130, 131, 132, 133, 134, 136, 137, 138, 141, 142, 145, 146, 147, 152, 153, 154, 155, 156, 160, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 188, 191, 192, 193, 196, 198, 201, 202, 203, 204, 205, 206, 209, 212, 215, 216, 220, 221, 224, 225, 230, 239, 241, 242, 243, 244, 246, 248, 250, 251, 253, 255, 257, 262, 267, 268, 272, 283, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 302, 303, 304, 306, 308, 309, 312, 313, 315, 316, 317, 318, 319, 323, 325, 327, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 345, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 360, 363, 364, 367, 368, 369, 370, 376, 377, 378, 382, 383, 384, 390, 391, 393, 394, 399, 400, 401, 404, 405, 408, 410, 411, 412, 413, 416, 418, 419, 424, 426, 437, 442, 444, 447, 448, 449, 451, 452, 454, 455, 456, 457, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 507, 509, 511, 513, 514], "read": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 17, 20, 35, 48, 79, 146, 156, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 219, 220, 225, 242, 248, 255, 268, 284, 290, 291, 296, 300, 303, 309, 312, 331, 332, 342, 347, 348, 350, 353, 361, 363, 370, 377, 382, 391, 401, 412, 417, 421, 441, 442, 446, 447, 451, 452, 455, 484, 486, 487, 490, 497, 498, 507], "file": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 20, 21, 24, 26, 27, 29, 33, 34, 35, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 82, 90, 120, 145, 146, 152, 153, 156, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 205, 206, 208, 215, 217, 219, 220, 225, 240, 241, 242, 243, 246, 248, 250, 251, 253, 257, 264, 267, 284, 286, 290, 291, 293, 294, 295, 296, 298, 299, 300, 303, 312, 313, 331, 332, 334, 345, 348, 351, 352, 353, 361, 362, 364, 367, 368, 369, 370, 376, 377, 378, 380, 382, 383, 391, 397, 400, 401, 402, 403, 405, 406, 408, 413, 414, 415, 416, 418, 419, 425, 437, 442, 446, 447, 448, 449, 450, 453, 454, 456, 465, 470, 471, 475, 478, 479, 481, 484, 485, 486, 487, 489, 490, 492, 493, 497, 501, 506, 513, 514], "updat": [0, 2, 7, 48, 50, 59, 79, 105, 145, 147, 156, 160, 165, 166, 176, 196, 201, 203, 205, 209, 214, 215, 219, 239, 241, 246, 253, 255, 257, 260, 267, 275, 285, 286, 289, 293, 295, 306, 309, 311, 312, 316, 317, 319, 320, 325, 331, 332, 343, 345, 347, 348, 353, 357, 362, 363, 364, 370, 376, 378, 381, 383, 401, 404, 416, 450, 452, 455, 468, 484, 486, 487, 489, 490, 491, 492, 494, 507, 510, 513], "deplet": [0, 79, 156, 164, 213, 241, 242, 246, 250, 253, 256, 258, 269, 285, 286, 289, 293, 295, 334, 345, 348, 400, 412, 449, 471, 483, 486, 487, 492, 498, 502, 503, 504, 507], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 230, 232, 235, 236, 237, 239, 241, 242, 243, 246, 248, 250, 251, 253, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 275, 279, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 449, 450, 454, 455, 456, 459, 463, 464, 466, 469, 480, 482, 484, 486, 487, 490, 492, 493, 495, 496, 497, 498, 499, 500, 503, 505, 507, 510, 513], "config": [0, 77, 446], "state": [0, 1, 2, 3, 5, 7, 20, 21, 39, 45, 78, 79, 81, 91, 94, 105, 114, 130, 137, 152, 156, 163, 170, 172, 176, 177, 201, 205, 209, 212, 213, 215, 219, 239, 241, 253, 255, 257, 279, 284, 289, 309, 312, 317, 319, 325, 330, 331, 332, 340, 345, 347, 348, 353, 370, 378, 394, 399, 449, 451, 452, 454, 455, 460, 467, 480, 482, 483, 484, 489, 493, 494, 498, 500, 505, 506, 507, 511, 513], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 21, 23, 26, 27, 29, 33, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 59, 61, 67, 71, 75, 78, 79, 80, 81, 82, 83, 93, 96, 97, 98, 100, 105, 109, 114, 117, 140, 152, 154, 155, 156, 163, 167, 168, 171, 172, 173, 174, 176, 177, 178, 179, 180, 184, 201, 202, 203, 204, 205, 212, 213, 217, 220, 221, 227, 228, 229, 232, 238, 239, 241, 242, 248, 253, 257, 262, 264, 276, 279, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 330, 331, 332, 333, 334, 338, 340, 341, 343, 344, 350, 351, 352, 353, 355, 356, 357, 358, 362, 363, 364, 367, 369, 370, 375, 376, 377, 378, 383, 390, 393, 394, 396, 399, 400, 401, 402, 404, 405, 406, 408, 410, 411, 412, 415, 416, 417, 418, 419, 437, 442, 443, 444, 450, 451, 452, 478, 479, 483, 484, 486, 487, 488, 489, 490, 492, 493, 498, 506, 507, 508, 509, 510], "data": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 15, 17, 20, 23, 25, 27, 28, 44, 45, 46, 57, 78, 79, 81, 82, 93, 96, 97, 100, 106, 113, 117, 132, 133, 134, 138, 146, 153, 154, 155, 156, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 196, 200, 202, 203, 212, 214, 215, 219, 220, 228, 242, 246, 248, 253, 257, 262, 279, 283, 284, 285, 286, 289, 291, 295, 296, 300, 303, 305, 307, 309, 312, 316, 317, 319, 320, 331, 332, 333, 340, 343, 345, 347, 348, 353, 356, 362, 375, 376, 378, 383, 400, 401, 408, 416, 418, 419, 437, 438, 442, 447, 450, 452, 454, 458, 460, 461, 464, 467, 468, 471, 478, 479, 482, 483, 484, 487, 489, 490, 492, 493, 494, 497, 498, 499, 500, 502, 506, 507, 509], "possibli": [0, 3, 5, 56, 204, 306, 318, 416, 419, 483, 492, 494, 507], "entri": [0, 1, 5, 38, 40, 47, 48, 56, 61, 62, 66, 67, 68, 69, 70, 75, 76, 78, 79, 164, 220, 239, 284, 289, 292, 293, 294, 309, 312, 325, 353, 405, 411, 412, 450, 486, 493, 498, 506, 507, 509, 513], "point": [0, 1, 3, 5, 27, 33, 38, 40, 46, 47, 48, 50, 51, 56, 57, 61, 62, 66, 67, 68, 69, 70, 75, 76, 78, 79, 109, 113, 116, 126, 132, 133, 134, 137, 138, 156, 164, 167, 170, 174, 184, 185, 203, 204, 205, 220, 239, 242, 246, 253, 283, 284, 286, 290, 292, 294, 295, 298, 301, 302, 304, 313, 315, 317, 319, 320, 331, 332, 336, 338, 341, 342, 343, 348, 356, 358, 390, 412, 416, 419, 437, 439, 443, 450, 452, 454, 456, 463, 464, 483, 486, 492, 493, 497, 498, 499, 502, 503, 506, 507, 509, 513], "choos": [0, 80, 146, 163, 204, 215, 295, 419, 485, 494, 498, 514], "user": [0, 1, 3, 5, 8, 20, 24, 28, 33, 40, 48, 50, 56, 57, 61, 78, 80, 90, 94, 95, 105, 114, 136, 145, 153, 163, 164, 166, 168, 174, 202, 203, 204, 205, 216, 217, 218, 220, 239, 241, 242, 246, 248, 253, 257, 268, 284, 285, 289, 291, 293, 295, 296, 300, 309, 312, 317, 318, 332, 335, 343, 345, 364, 367, 368, 369, 370, 376, 377, 378, 382, 397, 400, 401, 403, 405, 412, 415, 437, 447, 448, 449, 451, 454, 455, 456, 480, 483, 484, 485, 487, 492, 494, 495, 499, 507, 508, 509, 510, 514], "command": [0, 20, 29, 40, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 168, 206, 219, 220, 243, 284, 370, 376, 378, 382, 402, 413, 426, 446, 447, 452, 453, 455, 483, 484, 490, 492, 494, 497, 507, 509], "If": [0, 1, 3, 5, 7, 20, 22, 28, 40, 44, 48, 50, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 105, 136, 152, 153, 155, 156, 164, 165, 167, 168, 170, 171, 201, 202, 204, 205, 206, 213, 215, 220, 221, 224, 228, 241, 242, 243, 246, 253, 257, 262, 283, 284, 286, 289, 290, 291, 295, 304, 306, 309, 312, 313, 316, 317, 318, 319, 325, 330, 331, 332, 333, 336, 338, 340, 341, 343, 345, 347, 348, 349, 352, 353, 356, 368, 370, 376, 377, 378, 382, 383, 400, 404, 405, 410, 411, 412, 415, 416, 418, 419, 442, 446, 449, 452, 454, 455, 456, 484, 485, 492, 494, 498, 499, 502, 503, 507, 509, 510, 513, 514], "us": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 16, 17, 18, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 97, 98, 100, 105, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 138, 139, 140, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 174, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 215, 217, 219, 220, 221, 224, 225, 226, 227, 228, 230, 235, 236, 237, 238, 241, 242, 243, 244, 246, 248, 250, 251, 253, 255, 257, 258, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 275, 282, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 411, 412, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 453, 454, 456, 457, 458, 461, 463, 464, 469, 471, 472, 478, 480, 482, 483, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514], "run": [0, 1, 3, 4, 5, 7, 16, 20, 21, 22, 26, 28, 32, 33, 34, 35, 38, 40, 47, 48, 49, 56, 57, 59, 61, 62, 63, 66, 67, 69, 70, 71, 73, 75, 76, 77, 78, 79, 105, 152, 156, 163, 166, 182, 192, 198, 199, 204, 205, 206, 207, 209, 213, 215, 219, 220, 230, 239, 241, 242, 253, 255, 256, 257, 262, 267, 275, 284, 286, 289, 300, 312, 313, 318, 319, 325, 332, 345, 348, 364, 368, 369, 370, 378, 383, 392, 393, 394, 395, 400, 402, 413, 426, 434, 437, 446, 447, 448, 449, 450, 452, 453, 454, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 492, 493, 495, 497, 498, 499, 502, 503, 504, 505, 506, 509, 514], "addit": [0, 1, 2, 48, 61, 67, 152, 156, 166, 168, 174, 204, 205, 220, 242, 279, 284, 289, 291, 306, 309, 312, 319, 332, 334, 342, 347, 349, 376, 448, 449, 454, 456, 484, 487, 507, 513], "work": [0, 3, 5, 15, 16, 22, 36, 44, 45, 46, 47, 48, 54, 56, 57, 78, 79, 90, 105, 126, 145, 152, 189, 192, 202, 215, 220, 221, 224, 248, 253, 255, 270, 289, 294, 295, 296, 299, 300, 304, 309, 312, 315, 316, 319, 323, 332, 334, 335, 340, 349, 353, 357, 360, 362, 364, 368, 376, 381, 383, 384, 390, 394, 397, 400, 401, 402, 405, 410, 411, 415, 417, 424, 427, 433, 437, 442, 446, 448, 449, 451, 452, 454, 456, 463, 464, 483, 484, 485, 487, 492, 494, 496, 498, 499, 501, 502, 507, 509, 512, 513, 514], "done": [0, 3, 22, 33, 48, 101, 102, 170, 220, 238, 246, 253, 255, 283, 309, 313, 325, 332, 334, 340, 347, 383, 411, 412, 413, 446, 447, 448, 449, 452, 456, 470, 484, 492, 494, 499, 507, 513], "build": [0, 3, 26, 29, 35, 47, 54, 57, 61, 75, 80, 153, 185, 202, 203, 204, 205, 215, 216, 220, 221, 241, 246, 248, 253, 262, 272, 284, 286, 289, 293, 294, 296, 306, 316, 318, 326, 331, 332, 333, 336, 338, 341, 344, 351, 353, 355, 356, 364, 367, 376, 396, 450, 451, 456, 457, 463, 464, 467, 470, 472, 473, 474, 481, 482, 483, 484, 492, 493, 494, 495, 497, 500, 507, 508, 509], "oper": [0, 1, 2, 3, 5, 7, 10, 16, 29, 32, 47, 48, 61, 78, 79, 152, 153, 203, 218, 219, 220, 224, 246, 284, 289, 295, 309, 312, 319, 323, 325, 330, 332, 334, 335, 341, 343, 347, 348, 364, 378, 381, 385, 393, 400, 401, 411, 415, 417, 427, 445, 450, 451, 452, 455, 479, 483, 485, 486, 487, 489, 490, 492, 493, 494, 498, 499, 504, 512, 514], "specif": [0, 1, 2, 3, 4, 5, 10, 20, 21, 26, 33, 42, 43, 44, 48, 50, 57, 59, 67, 79, 80, 81, 93, 96, 97, 100, 105, 109, 114, 140, 153, 154, 155, 156, 160, 167, 168, 170, 173, 175, 178, 201, 202, 203, 204, 205, 206, 212, 214, 215, 220, 226, 242, 246, 253, 257, 272, 283, 284, 286, 289, 291, 294, 295, 306, 309, 312, 313, 315, 318, 320, 323, 325, 331, 332, 334, 345, 347, 348, 349, 352, 356, 357, 362, 368, 384, 390, 393, 396, 399, 401, 408, 412, 413, 418, 419, 446, 447, 448, 449, 451, 454, 455, 456, 462, 483, 484, 487, 494, 496, 497, 498, 499, 502, 507, 508, 509, 510, 513], "calcul": [0, 3, 5, 22, 33, 79, 83, 93, 96, 97, 100, 105, 109, 111, 135, 140, 152, 155, 156, 164, 170, 176, 198, 203, 204, 205, 212, 215, 230, 238, 239, 241, 242, 244, 246, 253, 256, 257, 260, 267, 284, 286, 289, 307, 309, 312, 313, 316, 318, 319, 325, 331, 332, 343, 348, 355, 356, 357, 404, 410, 413, 419, 428, 439, 449, 463, 468, 483, 484, 486, 487, 490, 492, 494, 495, 497, 498, 499, 503, 504, 505, 507, 510], "loop": [0, 16, 20, 152, 204, 205, 206, 209, 212, 220, 230, 332, 355, 378, 400, 416, 418, 449, 455, 480, 484, 492, 494, 497, 505, 509], "order": [0, 3, 7, 10, 57, 79, 80, 93, 96, 97, 98, 100, 106, 152, 153, 156, 164, 166, 167, 168, 170, 174, 176, 179, 205, 209, 212, 220, 221, 241, 267, 284, 286, 289, 309, 315, 317, 318, 331, 332, 341, 347, 355, 356, 360, 363, 367, 394, 400, 411, 413, 416, 417, 419, 449, 452, 454, 463, 484, 485, 486, 487, 489, 492, 494, 498, 503, 507, 509, 514], "stack": [0, 3, 7, 10, 20, 21, 79, 205, 206, 284, 286, 325, 399, 471, 478, 479, 483, 487, 492, 494, 498, 499, 507], "begin": [0, 2, 3, 5, 7, 21, 23, 26, 27, 71, 79, 166, 167, 205, 219, 239, 241, 264, 284, 286, 318, 332, 341, 400, 401, 419, 449, 454, 483, 492, 494, 495, 496, 502, 503, 505, 507, 509, 511], "over": [0, 1, 20, 29, 34, 80, 81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143, 152, 163, 170, 176, 204, 205, 209, 212, 228, 246, 255, 257, 286, 289, 311, 312, 317, 318, 319, 325, 331, 332, 342, 345, 347, 348, 355, 411, 413, 416, 427, 449, 468, 470, 480, 484, 485, 490, 497, 503, 507, 510, 512, 513, 514], "upon": [0, 5, 27, 45, 62, 67, 79, 153, 156, 204, 205, 215, 218, 309, 312, 332, 334, 343, 347, 348, 356, 383, 408, 427, 447, 449, 470, 484, 507], "accord": [0, 23, 57, 64, 170, 176, 241, 289, 332, 401, 419, 449, 495, 507, 509, 513], "design": [0, 1, 2, 11, 20, 22, 23, 26, 29, 48, 50, 56, 57, 62, 79, 84, 105, 126, 154, 156, 214, 220, 242, 284, 285, 286, 289, 290, 293, 296, 312, 313, 316, 319, 323, 329, 332, 336, 343, 356, 370, 449, 450, 451, 454, 455, 463, 483, 484, 486, 493, 495, 498, 507, 508], "until": [0, 46, 220, 284, 296, 306, 309, 318, 347, 349, 376, 410, 412, 419, 442, 452, 454, 484, 507, 510], "complet": [0, 3, 16, 56, 67, 75, 79, 153, 215, 253, 295, 296, 307, 308, 312, 318, 331, 332, 342, 356, 383, 400, 419, 448, 451, 455, 456, 471, 478, 479, 492, 494, 497, 498, 507, 509, 513], "wrap": [0, 22, 24, 27, 105, 205, 289, 308, 309, 356, 383, 400, 441, 451, 454, 488, 492, 497, 498], "quit": [0, 1, 213, 318, 393, 484, 494, 495, 498, 507], "disablefutureconfigur": [0, 445], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 250, 251, 253, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 485, 491, 492, 494, 496, 503, 505, 507, 508, 514], "expos": [0, 7, 20, 21, 22, 28, 33, 232, 239, 241, 246, 279, 283, 284, 285, 396, 399, 451, 490, 492], "function": [0, 1, 3, 5, 7, 10, 20, 21, 22, 28, 29, 33, 38, 43, 44, 48, 54, 57, 59, 61, 62, 67, 75, 79, 82, 90, 105, 109, 117, 126, 156, 167, 179, 205, 210, 212, 220, 221, 224, 241, 242, 246, 248, 252, 253, 256, 257, 260, 262, 265, 284, 286, 289, 290, 295, 299, 300, 312, 329, 331, 332, 335, 341, 343, 345, 347, 348, 351, 353, 356, 357, 363, 368, 371, 375, 376, 378, 381, 383, 386, 387, 390, 392, 396, 397, 399, 400, 402, 408, 411, 412, 413, 415, 416, 418, 419, 437, 438, 441, 442, 444, 447, 449, 451, 452, 454, 455, 456, 470, 483, 484, 486, 487, 488, 492, 494, 495, 497, 507, 510, 511], "ensur": [0, 16, 54, 59, 75, 76, 154, 167, 188, 193, 194, 195, 200, 212, 215, 225, 227, 241, 246, 250, 251, 253, 255, 257, 268, 293, 299, 300, 302, 306, 315, 320, 325, 327, 330, 331, 332, 342, 356, 357, 358, 360, 361, 364, 368, 381, 384, 390, 419, 424, 427, 446, 452, 454, 455, 456, 486, 494, 499, 507, 509], "isn": [0, 10, 43, 79, 199, 203, 332, 334, 454, 455, 456, 494, 498], "t": [0, 2, 3, 4, 5, 7, 10, 20, 21, 35, 43, 45, 48, 56, 59, 79, 80, 82, 84, 90, 91, 93, 94, 95, 96, 97, 98, 100, 105, 106, 109, 112, 113, 117, 137, 140, 141, 143, 154, 156, 160, 163, 164, 168, 189, 199, 201, 202, 203, 205, 206, 209, 220, 238, 241, 242, 251, 253, 262, 268, 279, 284, 289, 290, 309, 312, 318, 332, 334, 335, 336, 341, 342, 345, 347, 349, 361, 364, 370, 375, 378, 383, 402, 404, 410, 411, 412, 415, 416, 417, 419, 425, 430, 434, 442, 444, 446, 447, 448, 450, 451, 452, 454, 477, 484, 485, 487, 492, 494, 495, 497, 498, 499, 502, 503, 507, 509, 511, 514], "call": [0, 3, 5, 7, 10, 16, 20, 21, 27, 32, 33, 40, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 105, 146, 152, 154, 156, 163, 205, 206, 213, 215, 217, 218, 220, 225, 239, 241, 242, 243, 246, 248, 253, 257, 283, 284, 286, 289, 294, 296, 304, 309, 312, 316, 319, 327, 331, 332, 335, 337, 338, 341, 343, 344, 347, 348, 349, 356, 363, 368, 370, 376, 378, 382, 383, 384, 394, 397, 399, 400, 402, 405, 408, 411, 413, 415, 419, 434, 451, 452, 454, 455, 456, 487, 492, 494, 498, 499, 501, 507, 509, 513], "more": [0, 1, 3, 4, 5, 7, 10, 11, 20, 33, 35, 38, 44, 45, 48, 51, 56, 57, 61, 80, 94, 105, 126, 145, 156, 161, 163, 164, 166, 167, 174, 176, 203, 205, 220, 221, 227, 230, 242, 246, 248, 253, 284, 289, 290, 294, 296, 300, 309, 311, 312, 313, 316, 318, 331, 332, 334, 335, 336, 338, 340, 342, 343, 345, 347, 362, 367, 370, 376, 378, 383, 401, 402, 408, 410, 416, 418, 419, 437, 442, 443, 448, 449, 451, 452, 454, 455, 456, 457, 471, 472, 473, 474, 477, 480, 482, 484, 487, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 507, 508, 509, 513], "than": [0, 3, 4, 5, 20, 35, 45, 49, 50, 57, 78, 105, 126, 136, 140, 155, 156, 161, 164, 167, 168, 176, 179, 202, 205, 209, 212, 215, 220, 239, 241, 242, 253, 284, 286, 289, 295, 306, 308, 309, 312, 315, 325, 332, 334, 337, 338, 340, 341, 343, 344, 367, 370, 376, 401, 402, 408, 410, 411, 415, 416, 418, 419, 455, 456, 470, 478, 480, 484, 486, 489, 490, 492, 494, 498, 499, 502, 503, 507, 509], "onc": [0, 5, 156, 166, 213, 268, 289, 290, 319, 323, 326, 330, 331, 350, 356, 370, 449, 451, 453, 454, 456, 492, 494, 497, 501, 502, 507], "isstablereleasevers": [0, 445], "none": [0, 3, 4, 5, 7, 8, 9, 10, 11, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 33, 40, 45, 46, 48, 50, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 152, 154, 155, 156, 163, 164, 165, 167, 184, 198, 201, 202, 203, 205, 212, 215, 219, 220, 221, 224, 225, 230, 241, 242, 243, 246, 248, 253, 255, 257, 258, 260, 262, 284, 285, 286, 289, 290, 293, 296, 306, 307, 308, 309, 311, 312, 315, 316, 317, 318, 319, 320, 322, 323, 325, 331, 332, 333, 336, 337, 338, 340, 341, 343, 344, 347, 348, 349, 351, 352, 355, 358, 363, 364, 367, 368, 369, 370, 375, 376, 378, 382, 383, 384, 385, 390, 393, 394, 396, 399, 400, 404, 405, 406, 411, 412, 413, 416, 418, 419, 424, 430, 437, 441, 442, 444, 446, 447, 452, 454, 473, 478, 479, 486, 492, 494, 497, 498, 507, 509, 513], "determin": [0, 3, 5, 10, 11, 27, 29, 48, 56, 57, 79, 152, 155, 156, 164, 166, 167, 168, 198, 202, 204, 205, 207, 220, 221, 228, 241, 242, 246, 253, 257, 284, 286, 289, 291, 295, 306, 307, 309, 312, 315, 316, 317, 318, 319, 325, 332, 345, 347, 356, 357, 369, 383, 384, 410, 412, 413, 416, 433, 442, 449, 455, 484, 487, 490, 492, 494, 503, 507, 513], "should": [0, 1, 3, 4, 5, 7, 20, 22, 32, 36, 44, 48, 56, 57, 59, 62, 67, 78, 79, 94, 105, 140, 145, 152, 153, 154, 156, 161, 163, 164, 166, 167, 168, 170, 176, 199, 201, 202, 203, 205, 207, 212, 215, 217, 221, 224, 238, 239, 242, 246, 248, 253, 257, 262, 284, 286, 289, 290, 291, 293, 295, 296, 307, 308, 309, 311, 312, 316, 317, 318, 319, 320, 325, 331, 332, 334, 335, 338, 340, 342, 343, 345, 347, 348, 349, 356, 358, 363, 368, 370, 373, 376, 383, 384, 386, 392, 394, 397, 401, 402, 408, 411, 412, 413, 416, 417, 418, 421, 440, 446, 448, 449, 450, 452, 456, 484, 485, 493, 494, 497, 498, 499, 502, 503, 505, 507, 513, 514], "consid": [0, 48, 79, 105, 155, 167, 242, 246, 248, 253, 257, 284, 286, 289, 312, 313, 315, 316, 325, 332, 340, 342, 348, 376, 408, 448, 455, 456, 463, 464, 468, 484, 499, 507, 513], "stabl": [0, 3, 5, 156, 340, 456, 487, 497], "releas": [0, 140, 156, 166, 170, 229, 450, 484, 507], "init": [0, 78, 163, 205, 316, 334, 358, 370, 408, 427, 445, 446, 471, 478, 479, 487, 490, 492, 499, 507, 513], "choic": [0, 284, 295, 369, 492, 497], "fname": [0, 3, 4, 7, 20, 27, 79, 176, 203, 220, 253, 286, 289, 318, 332, 353, 370, 400, 416, 418, 442, 492, 499, 513], "c": [0, 1, 2, 3, 4, 5, 7, 10, 11, 15, 16, 20, 21, 22, 26, 28, 29, 33, 37, 47, 48, 50, 56, 57, 59, 67, 71, 79, 80, 81, 82, 83, 84, 91, 93, 94, 96, 97, 98, 100, 105, 111, 113, 114, 117, 126, 152, 154, 156, 161, 163, 166, 172, 176, 198, 201, 202, 204, 205, 206, 209, 212, 215, 216, 219, 220, 221, 225, 230, 232, 239, 241, 242, 246, 248, 253, 255, 257, 260, 262, 264, 279, 284, 285, 289, 290, 291, 292, 293, 295, 296, 302, 304, 308, 309, 312, 316, 317, 319, 320, 322, 325, 330, 331, 332, 334, 351, 353, 354, 358, 364, 370, 375, 377, 378, 385, 390, 393, 396, 399, 400, 405, 412, 444, 447, 452, 454, 455, 464, 468, 469, 470, 478, 486, 492, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 507, 509, 513], "skipinspect": [0, 56], "fals": [0, 3, 5, 7, 16, 20, 26, 29, 48, 56, 62, 67, 79, 105, 126, 152, 154, 156, 167, 168, 170, 172, 174, 176, 177, 201, 202, 205, 212, 215, 220, 241, 242, 246, 257, 258, 260, 262, 286, 289, 290, 294, 296, 298, 302, 304, 306, 307, 308, 309, 311, 312, 316, 317, 318, 319, 320, 325, 331, 332, 335, 337, 338, 340, 341, 342, 343, 344, 357, 358, 367, 368, 370, 376, 378, 384, 385, 396, 400, 402, 404, 412, 414, 415, 416, 418, 419, 442, 447, 449, 487, 492, 496, 497, 499, 507], "scan": [0, 22, 369, 383, 442], "load": [0, 1, 2, 3, 5, 7, 11, 15, 16, 20, 21, 26, 29, 35, 48, 56, 66, 68, 90, 105, 126, 153, 154, 156, 166, 201, 205, 209, 212, 219, 220, 225, 230, 239, 242, 248, 250, 251, 253, 272, 282, 284, 285, 286, 289, 290, 296, 298, 300, 304, 325, 328, 330, 332, 351, 353, 357, 361, 364, 365, 369, 370, 377, 391, 392, 399, 401, 411, 449, 451, 452, 455, 462, 479, 480, 486, 487, 490, 493, 494, 497, 498, 499, 505, 507, 508, 513], "one": [0, 1, 3, 4, 5, 7, 9, 10, 16, 20, 21, 22, 27, 28, 33, 44, 45, 47, 48, 56, 57, 59, 61, 73, 77, 78, 79, 105, 145, 146, 152, 154, 161, 163, 164, 166, 170, 173, 176, 191, 201, 202, 205, 206, 212, 216, 219, 220, 221, 224, 225, 228, 241, 242, 246, 248, 253, 255, 257, 262, 284, 289, 304, 306, 307, 308, 309, 311, 312, 313, 315, 318, 319, 326, 331, 332, 336, 337, 338, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 356, 364, 367, 368, 369, 370, 376, 377, 378, 383, 384, 390, 393, 399, 400, 401, 408, 411, 412, 415, 416, 418, 419, 421, 430, 446, 449, 452, 454, 455, 456, 462, 480, 484, 485, 487, 492, 493, 494, 498, 499, 504, 507, 509, 510, 511, 513, 514], "int": [0, 3, 4, 5, 7, 10, 20, 27, 48, 51, 56, 57, 61, 66, 67, 75, 78, 79, 96, 97, 100, 154, 155, 156, 167, 170, 176, 205, 220, 221, 224, 238, 241, 242, 253, 257, 284, 286, 289, 292, 293, 312, 318, 332, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 351, 352, 369, 400, 404, 408, 410, 411, 412, 416, 418, 428, 444, 509], "option": [0, 3, 4, 5, 6, 7, 8, 10, 16, 20, 21, 22, 27, 28, 33, 38, 40, 45, 46, 48, 50, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 96, 97, 100, 105, 114, 137, 138, 139, 140, 152, 154, 155, 156, 163, 164, 167, 168, 171, 176, 201, 202, 205, 212, 215, 217, 219, 220, 221, 224, 225, 230, 238, 239, 241, 242, 243, 246, 248, 253, 255, 257, 262, 268, 284, 286, 289, 290, 291, 293, 295, 296, 306, 309, 311, 312, 315, 316, 317, 318, 319, 323, 325, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 347, 348, 351, 352, 358, 363, 364, 367, 368, 369, 370, 376, 377, 382, 383, 390, 393, 394, 396, 399, 400, 402, 404, 405, 406, 411, 412, 416, 418, 419, 441, 442, 447, 449, 451, 452, 454, 456, 484, 486, 487, 490, 492, 494, 496, 497, 498, 499, 507, 508, 509, 510], "automat": [0, 57, 79, 156, 163, 239, 242, 246, 289, 312, 332, 348, 349, 375, 376, 408, 419, 455, 463, 464, 467, 481, 482, 484, 485, 492, 495, 498, 500, 507, 513, 514], "item": [0, 22, 23, 27, 56, 57, 120, 153, 163, 164, 167, 220, 245, 248, 286, 291, 292, 312, 336, 340, 343, 345, 347, 348, 366, 367, 369, 370, 400, 401, 402, 410, 411, 412, 418, 419, 446, 454, 455, 462, 469, 473, 477, 478, 485, 492, 496, 513, 514], "out": [0, 3, 4, 5, 8, 10, 16, 20, 22, 24, 29, 33, 44, 46, 48, 49, 56, 57, 79, 105, 154, 156, 161, 166, 168, 189, 201, 202, 203, 205, 220, 224, 225, 229, 241, 246, 284, 289, 290, 308, 309, 311, 312, 315, 319, 331, 332, 334, 338, 345, 353, 370, 377, 397, 399, 401, 402, 404, 418, 419, 430, 437, 442, 448, 449, 450, 451, 452, 456, 462, 468, 484, 486, 487, 492, 494, 497, 498, 499, 502, 503, 507, 508, 509, 510], "menu": [0, 507], "would": [0, 1, 2, 3, 5, 10, 20, 32, 46, 57, 62, 67, 78, 79, 105, 152, 156, 163, 166, 170, 220, 242, 246, 248, 284, 286, 289, 309, 312, 318, 332, 334, 335, 337, 340, 341, 343, 345, 347, 348, 349, 364, 367, 376, 378, 393, 400, 401, 406, 408, 412, 418, 419, 442, 449, 452, 454, 455, 462, 471, 480, 483, 486, 487, 492, 494, 495, 497, 498, 499, 507, 510, 513], "produc": [0, 1, 4, 38, 40, 46, 48, 57, 62, 67, 83, 86, 105, 117, 130, 170, 175, 176, 192, 198, 199, 201, 205, 241, 242, 248, 284, 289, 294, 315, 318, 325, 332, 335, 337, 341, 343, 344, 347, 377, 402, 403, 413, 416, 419, 434, 453, 483, 484, 486, 494, 497, 503, 505, 507, 509, 512, 513], "exist": [0, 3, 5, 6, 7, 38, 45, 47, 48, 56, 61, 64, 66, 70, 78, 79, 80, 153, 154, 156, 158, 163, 164, 171, 201, 202, 203, 205, 208, 224, 246, 253, 257, 262, 267, 268, 270, 284, 286, 289, 292, 296, 309, 312, 319, 325, 327, 331, 332, 345, 347, 348, 353, 368, 370, 378, 403, 405, 408, 413, 415, 425, 433, 447, 449, 451, 452, 454, 455, 456, 475, 483, 484, 485, 486, 494, 496, 503, 505, 507, 509, 513, 514], "yaml": [0, 15, 47, 48, 70, 75, 160, 164, 225, 246, 268, 284, 290, 291, 292, 293, 294, 296, 300, 325, 335, 353, 361, 364, 369, 370, 376, 377, 382, 391, 442, 447, 455, 471, 480, 486, 487, 492, 494, 497, 498, 499, 501, 506, 513], "str": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 16, 20, 21, 22, 23, 28, 29, 33, 40, 44, 45, 46, 48, 50, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 105, 154, 155, 156, 163, 164, 167, 169, 171, 173, 175, 176, 178, 179, 180, 201, 202, 205, 212, 215, 219, 220, 224, 225, 241, 242, 243, 246, 248, 253, 257, 262, 284, 285, 286, 289, 290, 292, 294, 295, 304, 306, 309, 312, 318, 319, 320, 325, 331, 332, 335, 336, 338, 340, 345, 347, 348, 353, 357, 364, 367, 368, 369, 370, 375, 376, 377, 378, 382, 383, 390, 393, 399, 400, 401, 402, 404, 405, 406, 408, 412, 415, 416, 417, 418, 419, 442, 444, 454, 462, 490], "path": [0, 1, 3, 4, 5, 8, 16, 27, 44, 47, 48, 56, 57, 59, 75, 77, 78, 79, 80, 146, 147, 148, 173, 178, 179, 180, 202, 215, 220, 242, 248, 253, 275, 289, 294, 353, 356, 364, 369, 370, 377, 378, 383, 400, 402, 403, 405, 413, 415, 425, 442, 446, 447, 455, 478, 480, 485, 486, 487, 488, 492, 494, 507, 514], "my_cas": 0, "suppli": [0, 3, 20, 48, 51, 57, 64, 79, 105, 152, 203, 290, 312, 347, 353, 413, 416, 419, 437, 484, 507], "superced": [0, 456], "other": [0, 3, 4, 5, 7, 9, 20, 21, 22, 28, 32, 33, 38, 44, 48, 50, 56, 57, 61, 67, 73, 77, 78, 79, 105, 136, 152, 153, 163, 164, 166, 168, 170, 174, 184, 185, 196, 201, 202, 203, 205, 209, 215, 220, 229, 241, 242, 246, 251, 253, 260, 262, 284, 289, 290, 294, 296, 306, 307, 308, 309, 312, 313, 316, 317, 318, 319, 332, 336, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 356, 364, 370, 375, 383, 399, 400, 401, 408, 411, 412, 416, 419, 433, 447, 449, 451, 452, 454, 455, 456, 483, 484, 485, 486, 492, 494, 495, 496, 497, 498, 499, 504, 507, 508, 509, 510, 514], "case": [0, 2, 3, 5, 7, 8, 10, 15, 26, 29, 33, 46, 61, 62, 64, 65, 66, 72, 73, 78, 79, 80, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 145, 152, 153, 154, 156, 161, 163, 164, 166, 170, 174, 204, 205, 215, 219, 220, 225, 229, 239, 242, 253, 255, 257, 264, 267, 268, 275, 282, 284, 289, 291, 293, 295, 308, 309, 312, 313, 319, 323, 325, 331, 332, 334, 338, 340, 345, 348, 361, 364, 368, 370, 376, 380, 391, 392, 397, 400, 401, 412, 413, 415, 419, 430, 437, 445, 447, 449, 454, 455, 456, 457, 462, 463, 464, 471, 478, 479, 482, 483, 485, 486, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 505, 509, 511, 513, 514], "method": [0, 1, 3, 4, 5, 14, 15, 16, 17, 18, 20, 22, 24, 31, 32, 35, 36, 37, 42, 43, 48, 50, 54, 55, 56, 57, 59, 60, 67, 75, 76, 79, 83, 90, 103, 105, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 146, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 166, 167, 172, 174, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 205, 206, 209, 211, 212, 215, 217, 220, 224, 225, 226, 227, 235, 236, 237, 238, 241, 242, 247, 248, 250, 251, 253, 255, 258, 260, 261, 262, 265, 267, 268, 269, 270, 271, 272, 275, 282, 284, 286, 289, 290, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 311, 312, 316, 318, 319, 323, 325, 326, 327, 328, 329, 330, 331, 332, 336, 338, 343, 345, 347, 348, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 410, 411, 412, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 449, 450, 451, 452, 454, 456, 472, 483, 484, 485, 487, 489, 490, 492, 494, 507, 509, 510, 513, 514], "directli": [0, 3, 4, 5, 20, 46, 78, 80, 105, 156, 164, 173, 178, 199, 246, 284, 289, 291, 294, 306, 309, 312, 315, 317, 332, 337, 338, 341, 343, 344, 349, 376, 378, 383, 454, 470, 478, 480, 484, 487, 494, 497, 499, 507, 509], "bool": [0, 2, 3, 5, 7, 26, 29, 48, 56, 67, 79, 105, 156, 167, 168, 176, 202, 205, 212, 215, 220, 228, 239, 242, 253, 257, 284, 286, 289, 293, 294, 295, 296, 306, 309, 312, 315, 316, 317, 319, 325, 331, 332, 335, 337, 338, 340, 341, 343, 344, 347, 348, 367, 369, 370, 376, 377, 378, 396, 400, 402, 405, 412, 415, 416, 418, 419, 442, 443, 490], "whether": [0, 3, 5, 10, 27, 40, 48, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 105, 146, 156, 176, 200, 205, 239, 242, 243, 246, 253, 289, 295, 296, 309, 312, 316, 338, 340, 341, 345, 348, 367, 369, 376, 377, 378, 382, 384, 396, 400, 415, 442, 454, 455, 484, 485, 487, 498, 507, 509, 514], "valid": [0, 10, 35, 48, 61, 67, 70, 79, 81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 126, 132, 133, 134, 137, 138, 141, 142, 143, 154, 164, 189, 239, 241, 242, 247, 257, 265, 283, 284, 295, 304, 305, 309, 312, 318, 319, 331, 332, 334, 335, 342, 348, 356, 357, 367, 369, 370, 375, 376, 378, 380, 403, 412, 413, 446, 449, 483, 484, 487, 490, 492, 494, 497, 507, 510], "default": [0, 1, 3, 4, 5, 12, 20, 26, 27, 29, 33, 45, 47, 48, 50, 57, 61, 66, 67, 75, 79, 80, 83, 85, 90, 93, 105, 126, 154, 156, 164, 174, 201, 202, 205, 212, 215, 220, 221, 238, 239, 242, 253, 255, 257, 268, 284, 286, 289, 290, 294, 295, 296, 312, 316, 331, 332, 334, 343, 345, 346, 347, 348, 352, 357, 364, 367, 368, 369, 370, 376, 377, 378, 381, 382, 386, 396, 400, 405, 412, 416, 419, 437, 442, 446, 447, 451, 454, 456, 485, 486, 487, 490, 492, 494, 497, 499, 502, 507, 510, 514], "exampl": [0, 1, 3, 5, 9, 10, 20, 27, 36, 47, 50, 56, 57, 61, 77, 79, 80, 105, 146, 152, 153, 154, 155, 156, 161, 163, 164, 165, 166, 168, 173, 174, 175, 176, 178, 179, 180, 201, 202, 205, 217, 220, 221, 241, 242, 248, 253, 284, 286, 289, 290, 291, 293, 294, 295, 296, 309, 312, 313, 318, 319, 331, 332, 333, 334, 336, 338, 341, 342, 343, 344, 347, 348, 349, 356, 363, 367, 375, 376, 383, 396, 400, 402, 408, 411, 412, 413, 416, 417, 419, 437, 438, 442, 446, 447, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 505, 509, 510, 513], "o": [0, 3, 22, 29, 32, 79, 109, 111, 138, 147, 152, 154, 166, 215, 248, 253, 260, 289, 295, 302, 312, 319, 348, 364, 378, 383, 405, 415, 452, 453, 455, 464, 471, 478, 480, 487, 492, 495, 499, 503, 507, 508], "getdefaultplugin": [0, 445], "list": [0, 1, 3, 5, 9, 10, 11, 20, 22, 27, 33, 34, 35, 40, 45, 48, 50, 56, 57, 60, 61, 67, 71, 79, 80, 96, 97, 100, 105, 152, 153, 155, 156, 164, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 196, 198, 201, 202, 205, 212, 215, 219, 220, 221, 225, 241, 242, 246, 248, 253, 257, 284, 286, 289, 291, 292, 293, 294, 295, 306, 309, 312, 316, 317, 318, 320, 325, 331, 332, 334, 335, 337, 340, 341, 342, 344, 347, 348, 352, 353, 358, 363, 367, 369, 370, 371, 373, 376, 381, 383, 384, 390, 394, 400, 401, 404, 405, 407, 408, 411, 412, 413, 415, 416, 418, 419, 424, 437, 442, 446, 449, 452, 454, 456, 467, 468, 481, 482, 483, 486, 487, 490, 492, 496, 498, 499, 500, 502, 503, 504, 505, 507, 509, 512, 513], "type": [0, 3, 4, 5, 8, 9, 10, 15, 16, 20, 26, 27, 29, 42, 44, 48, 50, 56, 57, 67, 71, 75, 78, 79, 80, 81, 82, 83, 85, 93, 95, 96, 97, 98, 99, 100, 103, 105, 113, 114, 117, 126, 137, 138, 140, 143, 152, 154, 155, 156, 160, 161, 164, 167, 168, 175, 179, 196, 201, 202, 203, 204, 205, 207, 220, 221, 225, 228, 238, 239, 241, 242, 248, 253, 255, 257, 284, 285, 286, 289, 290, 291, 294, 295, 296, 298, 301, 302, 304, 306, 309, 312, 313, 315, 316, 317, 318, 319, 323, 325, 327, 329, 331, 332, 334, 335, 337, 340, 341, 343, 344, 345, 347, 348, 349, 351, 352, 358, 364, 367, 369, 370, 376, 378, 381, 386, 396, 400, 401, 404, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 442, 444, 447, 448, 449, 451, 452, 454, 455, 463, 470, 480, 484, 485, 486, 487, 490, 492, 494, 496, 498, 499, 502, 503, 504, 509, 511, 513, 514], "armiplugin": [0, 1, 2, 11, 59, 61, 216, 232, 239, 273, 279, 284, 285, 381, 386, 396, 445, 451, 494, 507], "return": [0, 1, 3, 4, 5, 7, 8, 9, 10, 16, 20, 25, 26, 27, 29, 32, 33, 44, 48, 56, 57, 61, 67, 71, 75, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 93, 94, 96, 97, 98, 100, 104, 105, 106, 109, 112, 113, 114, 115, 117, 138, 140, 141, 142, 143, 152, 154, 155, 156, 161, 163, 165, 167, 168, 170, 172, 174, 176, 177, 179, 183, 198, 200, 201, 202, 203, 204, 205, 212, 218, 220, 221, 227, 228, 231, 238, 239, 241, 242, 244, 246, 248, 253, 255, 257, 263, 278, 284, 286, 289, 294, 295, 296, 306, 307, 308, 309, 310, 312, 315, 316, 317, 318, 325, 326, 330, 331, 332, 335, 337, 338, 340, 341, 342, 343, 344, 347, 348, 351, 352, 353, 356, 358, 360, 363, 364, 367, 369, 370, 373, 375, 376, 377, 378, 383, 399, 400, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 418, 419, 425, 428, 442, 443, 444, 451, 452, 454, 455, 470, 478, 480, 487, 490, 492, 494, 497, 498, 507, 511, 513], "contain": [0, 1, 3, 5, 10, 17, 22, 27, 38, 44, 46, 48, 56, 57, 78, 79, 93, 96, 97, 100, 105, 152, 153, 156, 160, 161, 163, 164, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 196, 199, 201, 202, 203, 205, 209, 213, 220, 228, 239, 241, 242, 244, 246, 248, 250, 253, 258, 262, 270, 284, 285, 286, 289, 291, 292, 293, 294, 296, 306, 307, 309, 312, 313, 315, 316, 317, 319, 325, 326, 331, 332, 333, 334, 335, 336, 340, 345, 348, 349, 351, 353, 356, 367, 370, 371, 373, 375, 377, 378, 383, 384, 396, 400, 401, 403, 404, 408, 410, 411, 412, 414, 415, 417, 419, 438, 442, 444, 449, 451, 452, 453, 454, 456, 458, 459, 461, 466, 470, 482, 483, 484, 485, 492, 494, 497, 499, 500, 502, 503, 507, 508, 509, 513, 514], "framework": [0, 1, 77, 79, 80, 153, 154, 156, 161, 204, 205, 213, 220, 239, 242, 246, 284, 334, 341, 349, 369, 371, 373, 383, 386, 406, 448, 450, 451, 458, 461, 462, 471, 484, 485, 487, 492, 494, 495, 497, 507, 509, 513, 514], "an": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 40, 42, 43, 44, 46, 47, 48, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 84, 92, 94, 105, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 140, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 204, 205, 209, 211, 212, 213, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 235, 236, 237, 239, 240, 241, 242, 243, 246, 248, 250, 251, 253, 255, 257, 260, 261, 262, 264, 267, 268, 269, 270, 271, 272, 275, 282, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 315, 316, 318, 319, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 345, 347, 348, 349, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 376, 377, 378, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 468, 470, 472, 475, 476, 483, 484, 486, 487, 490, 491, 492, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 507, 509, 510, 511, 513], "applic": [0, 1, 11, 57, 59, 61, 67, 77, 79, 145, 154, 156, 239, 242, 246, 284, 285, 331, 348, 356, 384, 401, 419, 447, 448, 450, 455, 484, 485, 487, 494, 496, 498, 503, 507, 513, 514], "fold": 0, "": [0, 1, 3, 4, 5, 7, 10, 16, 20, 21, 22, 27, 28, 33, 35, 40, 46, 48, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 82, 86, 102, 105, 109, 114, 136, 137, 138, 140, 143, 145, 152, 153, 154, 156, 158, 161, 163, 166, 167, 168, 170, 179, 201, 202, 203, 204, 205, 209, 215, 219, 220, 221, 224, 238, 241, 243, 246, 253, 284, 286, 289, 290, 292, 294, 306, 309, 312, 313, 315, 317, 319, 332, 333, 334, 336, 338, 341, 342, 343, 345, 347, 348, 349, 352, 355, 356, 357, 367, 368, 370, 376, 378, 382, 397, 399, 400, 401, 404, 408, 410, 411, 412, 413, 415, 416, 418, 419, 442, 443, 446, 448, 449, 450, 451, 452, 453, 454, 456, 458, 461, 469, 470, 478, 482, 484, 485, 490, 492, 494, 495, 496, 498, 499, 500, 502, 503, 505, 507, 508, 509, 513, 514], "capabl": [0, 48, 56, 171, 205, 213, 220, 225, 239, 356, 434, 442, 451, 452, 457, 482, 486, 487, 492, 498, 499, 500, 507], "its": [0, 1, 3, 5, 7, 16, 48, 79, 105, 117, 126, 152, 153, 156, 170, 205, 238, 251, 285, 286, 289, 294, 300, 306, 309, 311, 312, 318, 328, 331, 332, 345, 347, 349, 356, 364, 369, 370, 376, 378, 384, 386, 404, 412, 416, 419, 446, 449, 451, 454, 455, 460, 467, 482, 483, 484, 485, 486, 492, 495, 500, 502, 503, 505, 506, 507, 509, 510, 514], "own": [0, 1, 16, 27, 57, 152, 163, 166, 170, 215, 220, 242, 246, 248, 253, 284, 300, 312, 313, 345, 349, 369, 376, 386, 408, 447, 455, 457, 463, 464, 477, 480, 482, 484, 486, 487, 494, 497, 500, 507, 510, 511], "getdefaultpluginmanag": [0, 445], "armipluginmanag": [0, 1, 283, 284, 445], "manag": [0, 1, 3, 7, 28, 45, 48, 50, 152, 153, 205, 209, 213, 216, 219, 220, 221, 225, 239, 241, 242, 246, 248, 267, 283, 284, 312, 316, 325, 332, 334, 348, 375, 378, 383, 386, 390, 405, 449, 450, 467, 471, 482, 483, 484, 485, 487, 489, 493, 494, 497, 500, 503, 506, 509, 514], "when": [0, 2, 4, 5, 10, 14, 15, 16, 17, 18, 20, 22, 24, 27, 31, 32, 33, 35, 36, 37, 40, 42, 43, 45, 46, 48, 51, 54, 55, 56, 57, 59, 60, 66, 67, 71, 75, 76, 77, 78, 79, 80, 82, 83, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 141, 143, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 173, 174, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 205, 206, 211, 212, 215, 220, 224, 225, 226, 227, 235, 236, 237, 239, 241, 242, 246, 250, 251, 253, 255, 257, 260, 261, 264, 267, 268, 269, 270, 271, 272, 275, 282, 283, 284, 286, 289, 290, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 312, 315, 316, 317, 318, 319, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 338, 340, 342, 343, 345, 347, 348, 349, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 376, 377, 378, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 408, 411, 412, 413, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 454, 455, 456, 478, 484, 485, 486, 487, 488, 489, 490, 494, 496, 497, 498, 499, 501, 502, 503, 504, 507, 509, 510, 513, 514], "standalon": [0, 24, 202, 484], "facil": 0, "without": [0, 3, 10, 11, 43, 46, 48, 56, 79, 90, 105, 126, 138, 145, 152, 155, 161, 202, 205, 220, 242, 253, 289, 293, 295, 300, 318, 331, 338, 343, 345, 362, 368, 378, 383, 384, 393, 411, 413, 415, 416, 419, 426, 437, 446, 454, 455, 456, 480, 483, 484, 485, 486, 487, 490, 498, 503, 507, 509, 514], "isconfigur": [0, 445, 492, 497], "ha": [0, 1, 3, 5, 10, 16, 20, 22, 27, 35, 38, 48, 56, 57, 62, 78, 79, 84, 86, 92, 93, 105, 120, 126, 152, 153, 155, 161, 166, 167, 176, 179, 198, 205, 206, 208, 212, 215, 220, 221, 227, 228, 246, 248, 253, 255, 260, 262, 268, 283, 284, 286, 289, 291, 295, 299, 300, 302, 306, 309, 311, 312, 316, 319, 325, 326, 327, 330, 331, 332, 334, 335, 338, 341, 342, 343, 345, 346, 347, 348, 349, 351, 352, 353, 356, 357, 358, 361, 363, 364, 369, 370, 376, 378, 381, 383, 400, 405, 408, 411, 412, 415, 417, 436, 438, 442, 449, 452, 454, 456, 472, 480, 483, 484, 485, 486, 487, 491, 492, 494, 495, 497, 498, 499, 502, 503, 505, 507, 509, 513, 514], "been": [0, 3, 4, 5, 7, 20, 45, 46, 48, 56, 79, 166, 168, 198, 201, 206, 208, 215, 219, 220, 268, 283, 284, 286, 289, 291, 302, 309, 312, 316, 332, 334, 342, 345, 346, 347, 348, 349, 352, 353, 357, 358, 363, 381, 383, 400, 405, 407, 408, 411, 412, 417, 449, 454, 455, 480, 483, 484, 486, 494, 497, 499, 503, 507, 510, 513], "app": [0, 11, 56, 61, 80, 213, 263, 284, 378, 386, 445, 447, 449, 450, 486, 490, 492, 493, 497, 499, 507, 509, 510], "getpluginmanag": [0, 445], "getpluginmanagerorfail": [0, 284, 445], "rais": [0, 3, 7, 14, 15, 16, 17, 18, 20, 21, 31, 32, 33, 35, 36, 37, 42, 43, 48, 54, 55, 56, 57, 59, 60, 75, 76, 78, 79, 80, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 152, 156, 158, 159, 160, 161, 162, 167, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 204, 205, 211, 212, 221, 224, 225, 226, 227, 228, 235, 236, 237, 239, 241, 242, 250, 251, 253, 255, 257, 260, 261, 267, 268, 269, 270, 271, 272, 275, 282, 284, 286, 289, 290, 296, 298, 299, 300, 301, 302, 303, 304, 305, 309, 317, 325, 326, 327, 328, 329, 330, 334, 341, 346, 347, 348, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 376, 378, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 405, 410, 415, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 456, 490], "error": [0, 1, 3, 5, 7, 59, 61, 62, 79, 105, 126, 152, 161, 163, 168, 199, 201, 205, 206, 215, 225, 227, 242, 253, 284, 296, 300, 302, 304, 312, 313, 334, 335, 341, 344, 345, 346, 349, 356, 368, 369, 376, 377, 378, 381, 386, 400, 403, 405, 411, 412, 417, 428, 442, 445, 449, 454, 455, 456, 484, 485, 487, 490, 494, 497, 498, 503, 505, 507, 509, 514], "getapp": [0, 445], "permiss": [0, 2, 3, 5, 6, 8, 415, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 484, 489, 498], "intern": [0, 3, 4, 7, 46, 57, 93, 140, 164, 176, 201, 221, 242, 309, 332, 335, 340, 343, 347, 363, 394, 437, 449, 451, 455, 483, 488, 491, 494, 507], "those": [0, 5, 43, 46, 57, 79, 156, 168, 220, 242, 284, 286, 289, 295, 309, 312, 313, 331, 332, 334, 335, 345, 348, 356, 360, 400, 411, 416, 419, 449, 451, 454, 455, 485, 492, 494, 498, 499, 507, 513, 514], "instanc": [0, 3, 4, 5, 9, 10, 14, 15, 16, 17, 18, 22, 31, 32, 35, 36, 37, 42, 43, 45, 54, 55, 57, 59, 60, 75, 76, 78, 79, 84, 91, 105, 113, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 140, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 167, 168, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 203, 211, 212, 220, 224, 225, 226, 227, 235, 236, 237, 242, 250, 251, 255, 257, 260, 261, 267, 268, 269, 270, 271, 272, 275, 282, 284, 290, 291, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 312, 318, 319, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 340, 343, 345, 347, 348, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 376, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 408, 411, 416, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 448, 449, 451, 452, 455, 456, 480, 484, 486, 492, 495, 496, 502, 507, 509], "which": [0, 1, 3, 4, 5, 9, 10, 20, 27, 43, 44, 46, 48, 56, 57, 66, 67, 77, 78, 79, 80, 81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 140, 141, 142, 143, 152, 153, 156, 160, 164, 166, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 198, 201, 202, 203, 204, 205, 206, 207, 218, 220, 221, 225, 229, 241, 242, 244, 246, 248, 253, 255, 257, 263, 264, 284, 286, 289, 291, 294, 295, 296, 306, 307, 308, 309, 312, 315, 316, 317, 318, 319, 325, 331, 332, 334, 335, 340, 341, 342, 345, 348, 349, 351, 353, 363, 364, 369, 370, 377, 378, 383, 384, 400, 402, 405, 408, 410, 411, 412, 418, 419, 442, 449, 451, 452, 453, 454, 455, 456, 463, 464, 480, 484, 485, 486, 492, 494, 495, 497, 498, 499, 502, 503, 507, 509, 510, 513, 514], "provid": [0, 1, 3, 5, 7, 11, 20, 22, 29, 34, 40, 44, 48, 50, 57, 61, 67, 71, 75, 78, 79, 80, 87, 94, 105, 114, 136, 152, 153, 154, 156, 163, 166, 172, 174, 177, 196, 202, 205, 208, 213, 220, 227, 241, 242, 247, 248, 253, 257, 258, 265, 275, 284, 286, 289, 294, 295, 296, 309, 312, 316, 317, 318, 325, 331, 332, 333, 334, 335, 343, 345, 348, 352, 356, 357, 368, 370, 376, 378, 381, 383, 396, 399, 402, 405, 408, 411, 416, 419, 442, 444, 446, 447, 449, 451, 454, 455, 456, 460, 467, 471, 473, 477, 480, 482, 484, 485, 487, 490, 494, 495, 498, 499, 500, 502, 503, 504, 505, 507, 509, 512, 513, 514], "onli": [0, 2, 3, 5, 7, 8, 9, 10, 16, 17, 20, 24, 33, 38, 45, 46, 57, 77, 79, 105, 136, 146, 152, 153, 156, 163, 164, 167, 176, 185, 201, 202, 203, 205, 208, 212, 215, 217, 218, 220, 221, 239, 241, 248, 253, 255, 257, 262, 268, 284, 286, 289, 290, 294, 296, 302, 306, 307, 308, 309, 312, 317, 319, 323, 325, 330, 331, 332, 334, 336, 338, 340, 341, 342, 345, 347, 348, 350, 351, 353, 356, 357, 363, 364, 368, 370, 373, 376, 377, 382, 383, 384, 393, 394, 400, 403, 407, 408, 411, 412, 413, 418, 419, 424, 437, 442, 448, 451, 452, 454, 455, 456, 463, 464, 484, 487, 492, 494, 497, 498, 499, 502, 503, 505, 507, 508, 510, 513], "true": [0, 3, 5, 16, 22, 26, 27, 29, 47, 48, 56, 61, 67, 79, 105, 126, 152, 153, 154, 156, 167, 168, 170, 172, 174, 177, 195, 199, 201, 202, 205, 220, 239, 241, 242, 246, 248, 253, 255, 257, 262, 267, 284, 286, 289, 290, 295, 296, 298, 302, 304, 306, 307, 309, 311, 312, 315, 316, 317, 318, 319, 325, 331, 332, 334, 335, 338, 342, 347, 348, 356, 357, 358, 369, 370, 376, 377, 378, 400, 405, 411, 412, 414, 415, 416, 419, 437, 442, 446, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 484, 490, 492, 496, 498, 499, 507, 508, 510, 513], "under": [0, 3, 5, 77, 109, 215, 220, 239, 284, 292, 306, 309, 312, 355, 367, 393, 448, 449, 455, 456, 484, 485, 494, 498, 507, 509, 510, 514], "test": [0, 2, 3, 23, 38, 47, 48, 49, 56, 61, 62, 77, 78, 80, 145, 153, 165, 166, 202, 204, 213, 216, 229, 239, 245, 252, 256, 276, 283, 285, 289, 290, 296, 312, 313, 334, 336, 340, 341, 345, 369, 370, 376, 400, 413, 443, 445, 446, 449, 450, 457, 462, 463, 464, 468, 470, 471, 475, 476, 479, 482, 483, 484, 485, 486, 487, 488, 489, 494, 497, 499, 500, 507, 514], "demonstr": [0, 267, 356, 357, 364, 387, 434, 454, 457, 470, 471, 482, 483, 486, 493, 499, 500], "purpos": [0, 3, 5, 80, 153, 167, 202, 204, 215, 239, 241, 268, 289, 312, 332, 335, 340, 373, 454, 455, 456, 471, 483, 486, 507], "where": [0, 2, 3, 5, 10, 20, 21, 27, 29, 33, 44, 55, 57, 59, 79, 80, 105, 109, 153, 154, 155, 156, 163, 167, 168, 176, 203, 205, 212, 213, 215, 220, 221, 224, 225, 241, 242, 246, 257, 268, 284, 286, 289, 304, 306, 309, 312, 315, 316, 317, 319, 325, 326, 331, 332, 334, 335, 336, 337, 338, 340, 342, 343, 345, 347, 348, 349, 363, 380, 390, 393, 399, 400, 412, 419, 451, 454, 455, 456, 484, 486, 487, 490, 494, 499, 502, 503, 504, 505, 507, 509, 510, 511, 513], "content": [0, 2, 3, 5, 10, 24, 26, 27, 48, 167, 176, 199, 239, 248, 264, 284, 294, 340, 383, 384, 401, 405, 442, 454, 456, 477, 492, 507], "otherwis": [0, 1, 3, 5, 7, 48, 79, 152, 156, 163, 164, 167, 220, 253, 284, 286, 289, 293, 309, 331, 332, 334, 338, 340, 341, 343, 345, 347, 356, 383, 401, 412, 413, 415, 419, 442, 452, 484, 495, 505, 507, 510], "independ": [0, 3, 5, 48, 50, 56, 57, 168, 170, 209, 239, 240, 246, 318, 331, 452, 456, 484, 494, 498, 507, 511], "script": [0, 2, 23, 25, 78, 239, 243, 452, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 485, 486, 494, 497, 498, 499, 507, 509, 514], "need": [0, 3, 5, 8, 10, 11, 20, 28, 32, 45, 48, 50, 56, 57, 59, 66, 75, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 145, 146, 152, 153, 156, 166, 170, 176, 198, 202, 205, 206, 207, 215, 220, 241, 242, 246, 253, 257, 262, 284, 286, 289, 290, 291, 294, 295, 296, 309, 312, 313, 315, 316, 317, 319, 331, 332, 333, 334, 335, 338, 341, 343, 345, 348, 349, 356, 364, 368, 370, 376, 378, 383, 393, 401, 408, 412, 413, 416, 417, 419, 424, 437, 442, 446, 447, 448, 449, 451, 452, 454, 455, 456, 462, 471, 484, 485, 486, 492, 494, 495, 496, 497, 498, 499, 502, 507, 508, 509, 513, 514], "same": [0, 3, 4, 5, 7, 20, 48, 50, 56, 67, 78, 81, 89, 103, 104, 105, 111, 116, 140, 152, 153, 156, 161, 167, 176, 179, 182, 183, 189, 201, 205, 206, 224, 241, 242, 246, 284, 286, 289, 293, 312, 315, 316, 318, 319, 325, 331, 332, 334, 335, 341, 344, 345, 346, 347, 348, 356, 358, 362, 368, 392, 394, 402, 412, 413, 415, 416, 417, 419, 437, 442, 446, 452, 454, 455, 456, 468, 484, 485, 487, 492, 494, 496, 498, 499, 503, 507, 513, 514], "sinc": [0, 1, 3, 7, 8, 20, 46, 48, 57, 79, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 120, 141, 143, 152, 156, 163, 166, 167, 168, 170, 172, 174, 177, 184, 203, 205, 206, 209, 221, 224, 241, 242, 253, 257, 262, 267, 284, 286, 289, 294, 306, 309, 312, 318, 332, 334, 337, 343, 345, 347, 348, 349, 356, 364, 386, 400, 402, 406, 408, 442, 454, 480, 484, 486, 492, 494, 496, 498, 499, 502, 505, 507], "affect": [0, 5, 77, 105, 229, 289, 312, 334, 350, 399, 400, 416, 455, 456, 487, 498, 507], "behavior": [0, 1, 3, 5, 35, 79, 120, 146, 180, 206, 221, 224, 229, 239, 242, 250, 284, 293, 294, 306, 312, 325, 331, 334, 345, 348, 369, 376, 403, 408, 417, 451, 486, 487, 513], "time": [0, 1, 2, 3, 4, 5, 7, 15, 16, 20, 27, 33, 45, 46, 48, 51, 78, 79, 105, 145, 152, 153, 156, 161, 164, 168, 176, 204, 205, 209, 212, 213, 220, 239, 241, 242, 246, 253, 255, 257, 262, 264, 283, 284, 286, 295, 309, 312, 318, 325, 331, 332, 342, 348, 368, 383, 384, 397, 399, 400, 402, 411, 412, 413, 415, 416, 418, 422, 449, 450, 452, 454, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 492, 494, 498, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514], "gener": [0, 2, 3, 4, 5, 20, 23, 24, 26, 28, 29, 35, 40, 44, 46, 47, 57, 62, 67, 71, 78, 79, 90, 145, 146, 147, 152, 153, 154, 156, 160, 161, 163, 166, 175, 177, 198, 201, 204, 205, 213, 215, 220, 221, 222, 229, 232, 233, 235, 236, 239, 241, 242, 246, 248, 253, 255, 257, 258, 260, 264, 265, 267, 271, 273, 275, 279, 280, 284, 286, 289, 290, 295, 296, 306, 309, 312, 313, 315, 316, 318, 319, 320, 322, 331, 332, 333, 334, 340, 341, 343, 345, 349, 369, 373, 374, 377, 378, 383, 393, 400, 401, 402, 405, 410, 411, 416, 418, 426, 442, 443, 446, 448, 449, 450, 452, 454, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 486, 487, 494, 495, 497, 498, 499, 500, 501, 503, 505, 507, 509, 510, 513], "safe": [0, 48, 221, 283, 284, 309, 335, 343, 347, 368, 376, 386, 505], "re": [0, 3, 5, 9, 21, 66, 85, 105, 114, 146, 154, 156, 163, 167, 220, 286, 306, 312, 313, 315, 319, 331, 342, 356, 367, 411, 413, 419, 438, 442, 449, 455, 471, 480, 485, 486, 494, 497, 498, 499, 502, 503, 507, 514], "therefor": [0, 3, 5, 152, 170, 205, 241, 246, 284, 300, 312, 325, 332, 334, 338, 348, 413, 416, 418, 436, 449, 455, 507, 509, 513], "runtimeerror": [0, 3, 7, 21, 33, 48, 57, 59, 79, 161, 205, 212, 253, 284, 289, 317, 325, 356, 378, 390, 393, 399], "attempt": [0, 3, 4, 5, 48, 50, 56, 59, 66, 241, 284, 291, 294, 296, 331, 334, 346, 347, 349, 370, 377, 400, 401, 411, 413, 417, 442, 484, 486, 488, 510, 513], "unless": [0, 21, 45, 154, 156, 163, 332, 340, 411, 419, 451, 452, 454, 455, 456, 484, 485, 498, 507, 509, 514], "we": [0, 1, 2, 3, 4, 5, 6, 7, 10, 15, 17, 20, 27, 32, 46, 56, 59, 75, 78, 81, 82, 84, 89, 90, 91, 93, 94, 96, 97, 98, 100, 103, 105, 106, 111, 112, 113, 116, 117, 130, 140, 141, 143, 155, 156, 160, 161, 163, 166, 167, 170, 176, 188, 189, 193, 194, 195, 198, 202, 205, 206, 212, 213, 220, 221, 224, 227, 230, 239, 241, 251, 253, 257, 260, 263, 264, 267, 268, 284, 286, 289, 290, 293, 294, 295, 296, 300, 304, 306, 309, 312, 313, 317, 330, 331, 332, 335, 340, 342, 343, 345, 347, 348, 349, 351, 356, 357, 360, 361, 363, 364, 367, 368, 376, 381, 384, 391, 392, 393, 394, 395, 397, 399, 401, 408, 412, 413, 415, 419, 421, 427, 437, 442, 446, 448, 451, 452, 453, 454, 455, 456, 462, 473, 476, 483, 484, 485, 489, 491, 492, 494, 495, 496, 497, 498, 499, 502, 507, 509, 510, 511, 513, 514], "ar": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 16, 20, 21, 22, 27, 33, 34, 38, 40, 43, 44, 45, 46, 47, 48, 51, 56, 57, 59, 61, 67, 78, 79, 80, 81, 82, 83, 84, 88, 90, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 109, 111, 112, 113, 114, 116, 117, 126, 130, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 145, 146, 152, 153, 154, 155, 156, 160, 163, 164, 166, 168, 169, 170, 174, 175, 176, 183, 185, 189, 191, 195, 198, 201, 202, 203, 204, 205, 206, 209, 212, 213, 214, 215, 217, 220, 221, 224, 225, 228, 229, 230, 241, 242, 244, 246, 248, 250, 251, 253, 255, 257, 260, 262, 264, 267, 272, 279, 282, 283, 284, 285, 286, 289, 290, 291, 293, 294, 295, 296, 299, 300, 302, 304, 306, 307, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 323, 325, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 360, 362, 364, 367, 369, 370, 373, 375, 376, 377, 378, 381, 382, 383, 390, 391, 393, 394, 396, 399, 400, 401, 407, 408, 410, 411, 412, 413, 416, 417, 418, 419, 421, 426, 428, 430, 434, 442, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 468, 470, 475, 477, 480, 482, 483, 484, 485, 486, 487, 490, 491, 492, 495, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514], "plan": [0, 168, 451, 485, 498, 507, 514], "encapsul": [0, 1, 201], "much": [0, 1, 3, 5, 20, 52, 94, 137, 153, 199, 205, 242, 284, 289, 290, 291, 332, 334, 338, 340, 357, 364, 401, 408, 449, 451, 452, 456, 483, 484, 492, 494, 498, 507, 509], "global": [0, 1, 78, 80, 154, 156, 170, 174, 176, 205, 215, 246, 248, 250, 252, 253, 255, 268, 284, 286, 289, 309, 312, 331, 332, 336, 342, 343, 345, 348, 368, 370, 373, 403, 419, 437, 450, 471, 484, 486, 487, 496, 499, 505, 507, 508], "get": [0, 2, 3, 4, 5, 7, 15, 22, 23, 27, 29, 34, 46, 48, 56, 57, 61, 78, 79, 80, 83, 90, 94, 103, 105, 136, 145, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 168, 174, 184, 201, 202, 203, 205, 215, 220, 221, 241, 248, 253, 270, 284, 286, 289, 291, 294, 295, 299, 306, 309, 312, 319, 325, 329, 331, 332, 340, 341, 342, 343, 345, 346, 347, 348, 352, 355, 356, 357, 358, 364, 367, 368, 376, 381, 384, 391, 392, 400, 401, 404, 406, 412, 413, 418, 421, 424, 425, 442, 443, 447, 448, 450, 451, 452, 453, 454, 456, 486, 490, 492, 494, 495, 497, 498, 506, 507, 508, 509, 513], "itself": [0, 3, 5, 46, 50, 66, 152, 153, 201, 289, 306, 332, 343, 345, 349, 356, 369, 400, 401, 442, 446, 447, 449, 451, 454, 478, 484, 486, 492, 494, 497, 498, 507, 510], "thing": [0, 1, 3, 5, 7, 11, 20, 24, 26, 29, 56, 61, 105, 152, 155, 164, 199, 216, 221, 246, 253, 284, 289, 294, 295, 304, 306, 312, 331, 332, 333, 334, 335, 336, 340, 342, 343, 345, 347, 358, 362, 368, 369, 370, 378, 384, 401, 412, 415, 447, 449, 451, 452, 454, 455, 456, 457, 482, 483, 484, 486, 492, 494, 497, 498, 499, 500, 507, 509, 513], "go": [0, 10, 20, 105, 156, 217, 220, 221, 272, 284, 286, 289, 290, 309, 319, 332, 334, 347, 412, 416, 446, 451, 452, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 485, 494, 507, 508, 514], "number": [0, 3, 4, 5, 10, 11, 20, 27, 32, 45, 48, 51, 56, 75, 79, 83, 90, 105, 121, 138, 152, 153, 154, 155, 156, 167, 168, 170, 173, 176, 183, 198, 201, 202, 205, 212, 220, 221, 225, 238, 241, 242, 246, 248, 253, 257, 262, 267, 286, 289, 292, 293, 302, 304, 308, 309, 312, 317, 318, 319, 320, 325, 327, 330, 331, 332, 334, 338, 341, 343, 345, 347, 351, 352, 356, 357, 358, 360, 364, 368, 370, 376, 384, 390, 392, 400, 401, 404, 408, 410, 411, 412, 416, 417, 418, 424, 428, 435, 437, 442, 449, 452, 456, 469, 477, 486, 487, 488, 490, 493, 494, 495, 496, 498, 499, 502, 503, 504, 505, 507, 508, 509, 512, 513], "benefit": [0, 3, 46, 57, 134, 341, 342, 345, 446, 449, 478, 484], "main": [0, 3, 5, 7, 21, 43, 46, 61, 75, 81, 152, 153, 168, 202, 205, 206, 215, 239, 283, 284, 289, 292, 293, 312, 347, 353, 393, 419, 448, 449, 456, 471, 478, 479, 485, 487, 492, 494, 507, 509, 514], "being": [0, 3, 4, 5, 20, 22, 38, 48, 50, 67, 79, 80, 105, 146, 152, 153, 156, 164, 167, 173, 178, 179, 180, 184, 205, 220, 221, 225, 229, 239, 242, 246, 257, 284, 286, 289, 294, 301, 309, 312, 318, 319, 325, 330, 331, 334, 336, 340, 349, 363, 378, 390, 400, 407, 412, 415, 417, 418, 443, 456, 480, 484, 487, 492, 494, 502, 507, 509, 510], "becom": [0, 20, 44, 164, 284, 289, 308, 309, 318, 332, 342, 344, 345, 381, 416, 419, 447, 448, 449, 484, 507], "trivial": [0, 50, 309, 312, 335, 348, 396, 408, 413, 452, 456], "current": [0, 2, 3, 5, 7, 20, 22, 27, 33, 48, 50, 56, 64, 78, 79, 105, 152, 163, 165, 166, 168, 171, 172, 174, 176, 177, 191, 201, 202, 205, 213, 215, 220, 221, 241, 242, 246, 253, 257, 264, 284, 289, 290, 294, 309, 312, 317, 319, 332, 334, 336, 343, 348, 351, 353, 356, 370, 376, 377, 378, 400, 401, 403, 412, 419, 442, 451, 452, 454, 455, 456, 463, 486, 489, 492, 502, 503, 504, 507, 510, 512, 513], "applyasynciowindowsworkaround": [0, 445], "appli": [0, 1, 3, 7, 57, 79, 80, 83, 90, 105, 106, 136, 145, 146, 156, 201, 215, 221, 241, 242, 253, 268, 272, 282, 284, 286, 289, 290, 291, 293, 294, 295, 296, 302, 309, 312, 316, 317, 331, 332, 334, 340, 343, 345, 347, 349, 369, 400, 411, 419, 446, 448, 452, 456, 470, 471, 478, 479, 486, 487, 492, 494, 498, 499, 502, 503, 504, 507, 509], "asyncio": 0, "workaround": 0, "window": [0, 1, 22, 29, 32, 78, 446, 484, 485, 489, 507, 514], "3": [0, 3, 5, 10, 20, 22, 27, 35, 36, 47, 57, 70, 71, 79, 81, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 109, 112, 113, 114, 117, 130, 136, 137, 138, 140, 141, 143, 147, 152, 153, 154, 156, 164, 168, 172, 174, 177, 178, 180, 188, 193, 201, 212, 220, 221, 238, 239, 246, 250, 286, 289, 293, 294, 302, 306, 309, 311, 312, 313, 319, 327, 330, 332, 334, 335, 338, 341, 342, 343, 356, 357, 362, 367, 378, 400, 401, 410, 411, 412, 419, 421, 438, 441, 446, 449, 452, 456, 462, 464, 470, 472, 474, 480, 484, 485, 490, 491, 492, 495, 496, 497, 498, 502, 503, 504, 505, 507, 509, 511, 513, 514], "8": [0, 10, 79, 82, 113, 138, 143, 154, 221, 242, 248, 294, 318, 319, 334, 335, 338, 342, 343, 358, 362, 365, 404, 408, 411, 416, 419, 454, 462, 469, 470, 471, 472, 473, 492, 496, 497, 498, 499, 507], "prevent": [0, 2, 34, 253, 284, 331, 345, 347, 363, 384, 395, 417, 485, 514], "notimplementederror": [0, 25, 494], "hi": [0, 502, 503, 504], "show": [0, 20, 22, 28, 29, 35, 46, 160, 168, 174, 189, 191, 192, 203, 268, 304, 315, 325, 331, 342, 356, 357, 384, 395, 399, 400, 402, 412, 416, 418, 419, 452, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 480, 483, 496, 499, 507, 509], "dure": [0, 1, 3, 5, 15, 16, 20, 22, 33, 77, 79, 80, 90, 105, 152, 156, 163, 164, 166, 170, 203, 205, 215, 229, 239, 241, 253, 257, 260, 284, 285, 289, 293, 309, 312, 315, 316, 317, 323, 325, 329, 331, 332, 347, 356, 357, 363, 368, 378, 395, 428, 446, 447, 449, 456, 483, 484, 485, 487, 489, 490, 492, 494, 503, 507, 509, 514], "jupyt": [0, 34, 35, 395, 450, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 492], "notebook": [0, 34, 35, 395, 450, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480], "document": [0, 24, 27, 28, 34, 35, 95, 96, 97, 98, 99, 100, 105, 166, 168, 175, 201, 286, 290, 296, 334, 341, 345, 442, 448, 449, 450, 451, 454, 455, 483, 484, 486, 487, 492, 494, 497, 498, 499, 502, 503, 504, 505, 507, 509, 510, 512], "see": [0, 1, 3, 5, 8, 20, 27, 67, 105, 117, 143, 156, 163, 166, 172, 177, 179, 201, 205, 206, 242, 284, 285, 286, 289, 290, 293, 296, 309, 312, 315, 317, 319, 323, 325, 331, 332, 334, 336, 338, 341, 344, 345, 348, 363, 378, 400, 401, 408, 413, 416, 418, 443, 446, 448, 451, 452, 455, 476, 484, 485, 487, 492, 494, 495, 497, 498, 499, 502, 503, 504, 505, 507, 509, 510, 512, 513, 514], "http": [0, 22, 81, 82, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 109, 114, 131, 134, 136, 138, 140, 153, 163, 166, 168, 174, 176, 185, 307, 308, 348, 416, 419, 437, 442, 443, 446, 484, 485, 487, 498, 514], "bug": [0, 145, 174, 284, 342, 448, 451, 455, 456, 484, 492], "org": [0, 22, 85, 86, 87, 89, 100, 102, 131, 134, 136, 140, 166, 416, 443, 446, 484, 498], "issue37373": 0, "bookkeep": [0, 79, 139, 289, 332, 348, 418, 445, 454, 487, 489, 492, 507, 509], "bookkeepingplugin": [0, 2, 445], "exposeinterfac": [0, 2, 58, 59, 213, 216, 229, 232, 239, 276, 279, 284, 383, 396, 399, 494], "defineentrypoint": [0, 2, 61, 213, 239, 284, 494], "definecasedepend": [0, 2, 284, 494], "mpiactionrequiresreset": [0, 2, 284, 486], "getreportcont": [0, 2, 213, 239, 284, 450], "db": [0, 2, 20, 21, 35, 75, 146, 154, 155, 205, 212, 332, 348, 364, 399, 418, 455, 486, 489, 490, 492, 497, 499, 507, 509], "databas": [0, 2, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 40, 46, 47, 48, 61, 65, 71, 75, 79, 145, 146, 156, 205, 209, 239, 257, 284, 285, 286, 309, 312, 335, 340, 342, 345, 347, 348, 363, 372, 400, 416, 449, 455, 471, 478, 479, 483, 484, 486, 487, 489, 490, 493, 494, 497, 499, 506, 507], "revis": [0, 2, 140, 446], "changelog": [0, 2], "database3": [0, 2, 3, 486, 487], "databaseinterfac": [0, 2, 3, 5, 16, 418, 487, 489, 507], "comparedatabas": [0, 2, 3, 4, 14], "databasefactori": [0, 2, 3, 8, 492, 509], "loadoper": [0, 2, 3, 205, 487, 490], "report": [0, 2, 4, 22, 35, 42, 62, 71, 79, 102, 117, 168, 213, 219, 239, 284, 289, 309, 312, 374, 376, 397, 400, 402, 416, 418, 449, 450, 471, 478, 484, 487, 492, 497, 499, 506, 508], "setdata": [0, 2, 23], "visual": [0, 2, 5, 241, 308, 416, 453, 483, 484, 486, 494, 503, 513], "historytrack": [0, 2, 418, 492], "histori": [0, 2, 3, 5, 7, 35, 79, 212, 220, 253, 257, 284, 332, 334, 347, 412, 418, 441, 449, 455, 471, 478, 479, 486, 490, 492], "inform": [0, 2, 3, 5, 7, 10, 11, 22, 24, 28, 29, 32, 46, 48, 56, 57, 78, 79, 84, 91, 105, 113, 138, 140, 152, 153, 154, 156, 163, 167, 168, 170, 172, 173, 174, 177, 180, 183, 196, 202, 203, 205, 206, 215, 220, 221, 241, 253, 260, 279, 284, 286, 289, 291, 292, 293, 294, 312, 316, 317, 318, 331, 332, 334, 342, 343, 345, 347, 356, 368, 377, 378, 404, 416, 418, 424, 442, 443, 448, 449, 452, 454, 455, 471, 478, 479, 484, 489, 492, 498, 499, 503, 507, 508, 509, 513], "describeinterfac": [0, 2, 3, 7, 20, 21, 22, 23, 28, 33, 79, 213, 239, 241, 245, 246, 284], "historytrackerinterfac": [0, 2, 20, 418], "maininterfac": [0, 2], "memoryprofil": [0, 2, 36, 471, 478, 479, 492], "gettotaljobmemori": [0, 2, 22], "getcurrentmemoryusag": [0, 2, 22], "klasscount": [0, 2, 22], "instancecount": [0, 2, 22], "profilememoryusageact": [0, 2, 22], "systemandprocessmemoryusag": [0, 2, 22], "printsystemmemoryusageact": [0, 2, 22], "snapshotinterfac": [0, 2, 487], "extractcyclenodefromstamp": [0, 2, 33], "getcyclenodestamp": [0, 2, 33], "inputmodifi": [0, 47, 57, 60, 313, 323, 497], "copyinterfaceinput": [0, 47, 48, 59, 487, 490], "suit": [0, 2, 47, 48, 54, 57, 59, 60, 61, 64, 65, 73, 76, 284, 313, 317, 330, 336, 447, 449, 479, 486, 487, 494, 497], "casesuit": [0, 47, 48, 56, 57, 59, 65, 79, 284, 497], "suitebuild": [0, 47, 48, 60, 486, 497], "getinputmodifi": [0, 47, 57], "fullfactorialsuitebuild": [0, 47, 57, 60, 497], "fullfactorialsuitebuildernoisi": [0, 47, 57], "separateeffectssuitebuild": [0, 47, 57, 497], "latinhypercubesuitebuild": [0, 47, 57, 60], "cli": [0, 47, 78, 284, 445, 447, 449, 456, 483, 487, 490, 494, 508], "entrypointsplugin": [0, 61, 445], "armipars": [0, 61, 445], "print_help": [0, 61], "armicli": [0, 61, 76, 445, 494], "showvers": [0, 61, 76], "listcommand": [0, 61], "executecommand": [0, 61, 75], "splash": [0, 1, 61, 62, 67, 445, 485, 494, 514], "checkinput": [0, 47, 48, 59, 61], "expandblueprint": [0, 61, 62], "checkinputentrypoint": [0, 61, 62], "cleantemp": [0, 61], "clone": [0, 47, 48, 56, 59, 61, 75, 79, 284, 370, 411, 446, 484, 485, 486, 487, 514], "clonearmiruncommandbatch": [0, 61, 64], "clonearmiruncommandinteract": [0, 61, 64], "clonesuitecommand": [0, 61, 64], "comparecas": [0, 61, 490], "comparesuit": [0, 61, 65], "extractinput": [0, 61, 66], "injectinput": [0, 61, 66], "entrypoint": [0, 2, 38, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 243, 284, 382, 447, 487], "storebool": [0, 61, 67], "setset": [0, 61, 67], "setcasetitl": [0, 61, 67], "loadset": [0, 61, 67], "gridgui": [0, 61], "gridguientrypoint": [0, 61, 68], "migrateinput": [0, 61], "modifi": [0, 3, 48, 50, 51, 54, 55, 57, 61, 64, 66, 105, 153, 156, 160, 174, 188, 193, 194, 195, 198, 241, 246, 248, 255, 257, 283, 286, 289, 309, 313, 315, 316, 318, 319, 322, 323, 327, 330, 331, 332, 340, 347, 348, 350, 353, 357, 358, 362, 364, 369, 370, 376, 381, 404, 411, 417, 456, 468, 484, 485, 487, 489, 493, 498, 507, 509, 514], "modifycasesettingscommand": [0, 61, 70], "reportsentrypoint": [0, 61, 490], "createreportfromset": [0, 61, 71], "runentrypoint": [0, 61, 72, 73, 449], "runsuit": [0, 61, 76], "runsuitecommand": [0, 61, 73], "materi": [0, 10, 155, 156, 163, 214, 229, 238, 241, 242, 253, 284, 285, 286, 289, 290, 291, 292, 293, 295, 296, 298, 301, 302, 304, 305, 306, 307, 308, 309, 311, 312, 315, 317, 319, 320, 325, 331, 334, 355, 356, 357, 358, 383, 388, 404, 416, 424, 445, 448, 449, 451, 461, 463, 465, 467, 468, 470, 471, 478, 479, 481, 482, 483, 484, 486, 487, 489, 490, 492, 493, 498, 499, 500, 502, 503, 504, 507, 508, 509, 512, 513], "setmaterialnamespaceord": [0, 80, 445, 494], "importmaterialsintomodulenamespac": [0, 80, 445], "iterallmaterialclassesinnamespac": [0, 80, 445, 477], "resolvematerialclassbynam": [0, 80, 126, 445], "air": [0, 80, 121], "alloy200": [0, 80, 126, 487], "b4c": [0, 80, 122, 304, 487, 492, 497, 498, 503, 507], "be9": [0, 80, 123], "cah2": [0, 80, 126], "californium": [0, 80, 126, 154, 477], "concret": [0, 3, 7, 16, 20, 21, 22, 28, 33, 59, 79, 80, 146, 156, 161, 167, 212, 219, 225, 241, 246, 253, 262, 294, 312, 331, 390, 393, 399, 487, 489], "copper": [0, 80, 154, 487], "cu": [0, 80, 82, 88, 126, 154, 507], "graphit": [0, 80, 124, 161, 163], "hafnium": [0, 80, 126, 154], "hastelloyn": [0, 80, 126], "ht9": [0, 80, 105, 161, 302, 325, 357, 358, 470, 478, 486, 492, 498, 507, 508], "inconel": [0, 80, 96, 97, 99, 100, 487], "inconel617": [0, 80, 95], "inconel600": [0, 80, 126], "inconel625": [0, 80, 126], "inconel800": [0, 80], "inconelpe16": [0, 80], "inconelx750": [0, 80, 126], "lead": [0, 3, 4, 5, 79, 80, 102, 126, 154, 166, 167, 201, 220, 250, 284, 289, 312, 334, 345, 386, 397, 402, 408, 419, 427, 451, 455, 486, 490, 507, 509], "leadbismuth": [0, 80, 126], "lithium": [0, 80, 125, 154, 487, 507], "magnesium": [0, 80, 106, 126, 154], "parentawaredensityredirect": [0, 80, 105], "fluid": [0, 80, 81, 89, 101, 102, 103, 104, 105, 111, 114, 116, 139, 140, 213, 220, 317, 334, 490, 507], "simplesolid": [0, 80, 85, 86, 92, 95, 99, 105, 108, 110, 115, 118, 134, 138], "fuelmateri": [0, 80, 105, 132, 133, 134, 135, 136, 137, 138, 404, 507], "mgo": [0, 80, 126], "mixtur": [0, 80, 109, 289, 325, 343, 404, 486, 507], "molybdenum": [0, 80, 126, 154], "mox": [0, 80, 126, 138, 285, 295, 334, 358, 487], "nz": [0, 80, 126], "potassium": [0, 80, 126, 154, 487], "scandiumoxid": [0, 80], "sc2o3": [0, 80, 112, 126], "sic": [0, 80, 127], "sodium": [0, 80, 111, 115, 126, 154, 229, 286, 295, 356, 357, 358, 451, 470, 478, 483, 484, 492, 494, 498, 499, 507], "sodiumchlorid": [0, 80], "nacl": [0, 80, 115, 126], "sulfur": [0, 80, 126, 128, 154, 507], "tzm": [0, 80, 126], "tantalum": [0, 80, 126, 154], "thu": [0, 35, 50, 80, 126, 163, 173, 213, 215, 242, 286, 289, 312, 319, 342, 343, 393, 401, 471, 484, 498, 499, 507], "thorium": [0, 80, 126, 132, 134, 135, 154, 507], "thoriumoxid": [0, 80, 126, 129, 487, 507], "tho2": [0, 80, 129, 134], "uthzr": [0, 80, 355, 507], "uzr": [0, 80, 105, 126, 130, 298, 302, 304, 312, 355, 358, 470, 492, 498, 507], "uranium": [0, 80, 105, 126, 132, 135, 138, 153, 154, 156, 302, 309, 312, 484, 492, 495, 496, 498, 507], "uraniumoxid": [0, 80, 109, 126, 302, 400, 420, 424, 487, 495, 507], "heatcapacityconst": [0, 80, 138], "uo2": [0, 80, 109, 138, 302, 312, 495, 513], "void": [0, 80, 94, 105, 126, 241, 257, 285, 289, 302, 307, 309, 312, 318, 334, 357, 365, 478, 492, 498, 499, 503, 505, 507, 513], "water": [0, 80, 131, 161, 246, 483, 499], "saturatedwat": [0, 80, 140, 499], "saturatedsteam": [0, 80, 140], "yttriumoxid": [0, 80], "y2o3": [0, 80, 126, 141], "zincoxid": [0, 80], "zno": [0, 80, 126, 142, 302], "zr": [0, 80, 105, 126, 135, 136, 154, 155, 156, 289, 295, 298, 300, 302, 304, 312, 492, 497, 499, 504], "migrat": [0, 3, 5, 48, 61, 66, 69, 284, 285, 290, 296, 313, 332, 334, 353, 376, 377, 445, 486, 492], "blueprintsmigr": [0, 145, 146, 147], "settingsmigr": [0, 145, 146, 148], "databasemigr": [0, 145, 146], "m0_1_3": [0, 145], "removecentersfromblueprint": [0, 145, 147], "updateelementalnuclid": [0, 145, 147], "m0_1_6": [0, 145], "convertalphanumlocationsettingstonum": [0, 145, 148], "getindicesfromdif3dstylelocatorlabel": [0, 145, 148], "nucdirectori": [0, 1, 168, 203, 312, 416, 445, 462, 469, 477, 480, 496], "element": [0, 4, 5, 9, 10, 27, 46, 81, 83, 86, 92, 105, 147, 155, 156, 158, 163, 216, 284, 293, 295, 309, 311, 312, 343, 353, 356, 383, 400, 404, 408, 411, 412, 419, 424, 445, 449, 450, 470, 477, 484, 486, 492, 493, 497, 499, 507], "name": [0, 1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 40, 42, 43, 45, 48, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 88, 90, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 111, 112, 113, 114, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 146, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 166, 167, 168, 171, 174, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 205, 210, 211, 212, 213, 215, 216, 219, 220, 223, 224, 225, 226, 227, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 255, 257, 260, 261, 262, 264, 267, 268, 269, 270, 271, 272, 275, 282, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 315, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 341, 342, 345, 346, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 408, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 447, 449, 450, 454, 456, 468, 469, 477, 478, 480, 483, 485, 486, 487, 492, 494, 496, 497, 498, 499, 502, 503, 504, 505, 509, 512, 513, 514], "label": [0, 3, 5, 27, 84, 91, 105, 113, 138, 140, 148, 155, 156, 160, 163, 165, 166, 190, 202, 203, 215, 220, 230, 241, 253, 255, 264, 275, 285, 286, 289, 312, 335, 336, 340, 341, 367, 368, 376, 384, 401, 416, 418, 454, 468, 470, 475, 480, 486, 487, 494, 496, 504, 507], "id": [0, 27, 44, 55, 156, 160, 202, 224, 241, 242, 257, 267, 286, 294, 302, 307, 308, 309, 311, 318, 323, 333, 357, 358, 419, 470, 471, 478, 479, 487, 490, 492, 498, 499, 503, 507, 508, 513], "indic": [0, 3, 9, 10, 20, 27, 44, 79, 105, 148, 156, 163, 166, 167, 168, 173, 176, 178, 179, 180, 183, 191, 202, 203, 205, 242, 246, 284, 286, 289, 294, 295, 309, 312, 316, 318, 332, 335, 336, 337, 338, 340, 341, 342, 343, 344, 347, 348, 353, 356, 378, 383, 396, 401, 412, 416, 418, 419, 428, 437, 449, 455, 472, 486, 498, 503, 507, 509, 513], "rapid": [0, 484], "access": [0, 1, 20, 21, 102, 152, 161, 167, 168, 205, 212, 248, 258, 284, 289, 290, 309, 312, 316, 331, 333, 345, 347, 348, 403, 415, 417, 419, 449, 454, 484, 486, 492, 493, 494, 506, 507, 513], "chemicalphas": [0, 153, 154, 496], "chemicalgroup": [0, 153, 154, 496], "getelementsbychemicalphas": [0, 153, 154], "getelementsbychemicalgroup": [0, 153, 154], "getnam": [0, 20, 80, 105, 153, 154, 285, 312, 358, 492], "getsymbol": [0, 153, 154], "getelementz": [0, 153, 154], "factori": [0, 2, 3, 57, 60, 80, 153, 154, 156, 163, 204, 205, 218, 285, 306, 309, 348, 351, 445, 449, 452, 472, 493], "addglobalel": [0, 153, 154], "destroyglobalel": [0, 153, 154], "nucdir": [0, 153], "getnuclidefromnam": [0, 153, 155], "getnaturalisotop": [0, 153, 154, 155, 156], "getnaturalmassisotop": [0, 153, 155], "getmc2label": [0, 153, 155], "getelementnam": [0, 153, 155], "getelementsymbol": [0, 153, 155], "getnuclid": [0, 80, 105, 153, 155, 165, 174, 197, 198, 202, 285, 306, 309, 312, 358, 475, 476], "getnuclidenam": [0, 153, 155], "getatomicweight": [0, 153, 155, 285, 312], "isheavymet": [0, 153, 154, 155, 156, 496], "isfissil": [0, 153, 155, 156, 166, 168], "getthresholddisplacementenergi": [0, 153, 155], "nuclidebas": [0, 1, 153, 155, 160, 161, 163, 164, 170, 248, 295, 312, 404, 462, 469, 470, 477, 480, 490, 496], "nuclideinterfac": [0, 153, 156], "nuclidewrapp": [0, 153, 156, 203], "inuclid": [0, 153, 155, 156, 163, 203], "imcnpnuclid": [0, 153, 156], "naturalnuclidebas": [0, 84, 91, 113, 138, 140, 153, 154, 155, 156, 163, 295, 496], "dummynuclidebas": [0, 153, 156, 496], "lumpnuclidebas": [0, 153, 156, 496], "initreachableactivenuclidesthroughburnchain": [0, 153, 156], "isotop": [0, 90, 92, 105, 109, 126, 153, 155, 156, 163, 166, 174, 201, 242, 246, 248, 269, 290, 293, 295, 300, 301, 302, 306, 307, 308, 309, 311, 312, 357, 404, 416, 424, 483, 486, 489, 490, 492, 496, 497, 498, 504], "getisotop": [0, 153, 156], "fromnam": [0, 153, 156, 480], "ismonoisotopicel": [0, 153, 156], "singl": [0, 3, 5, 7, 9, 20, 39, 46, 48, 57, 153, 156, 167, 168, 201, 203, 205, 220, 224, 227, 241, 242, 286, 289, 293, 295, 306, 308, 309, 312, 318, 319, 325, 327, 332, 334, 336, 338, 343, 355, 356, 357, 367, 368, 384, 392, 396, 399, 400, 408, 411, 416, 419, 437, 452, 454, 455, 456, 470, 480, 484, 487, 489, 494, 498, 503, 507, 509, 510, 513], "changelabel": [0, 153, 156], "getdepletablenuclid": [0, 153, 156], "imposeburnchain": [0, 153, 156, 480], "addnuclidebas": [0, 153, 156], "readmccnuclidedata": [0, 153, 156], "updatenuclidebasesforspecialcas": [0, 153, 156], "addglobalnuclid": [0, 153, 156], "destroyglobalnuclid": [0, 153, 156], "thermalscatt": [0, 84, 91, 105, 113, 138, 140, 153, 161], "transmut": [0, 153, 156, 160, 162, 203, 239, 295, 467, 481, 482, 500, 503, 507], "decaymod": [0, 153, 156, 164], "nucleardataio": [0, 262, 332, 445, 470, 475, 476], "getexpectedisotxsfilenam": [0, 165, 445], "getexpectedcompxsfilenam": [0, 165, 445], "getexpectedgamisofilenam": [0, 165, 445], "getexpectedpmatrxfilenam": [0, 165, 445], "cccc": [0, 153, 165, 202, 470, 475, 476, 486], "system": [0, 3, 5, 7, 20, 28, 29, 32, 34, 38, 78, 156, 165, 176, 204, 205, 206, 213, 215, 219, 220, 229, 242, 246, 253, 284, 285, 286, 289, 290, 294, 296, 305, 309, 334, 335, 336, 338, 341, 342, 345, 347, 348, 349, 350, 351, 352, 353, 360, 376, 378, 380, 381, 393, 394, 401, 402, 405, 408, 413, 446, 449, 451, 456, 463, 464, 471, 478, 479, 483, 485, 486, 489, 491, 492, 497, 498, 509, 514], "implement": [0, 1, 3, 5, 9, 21, 33, 45, 46, 50, 57, 59, 61, 67, 79, 80, 94, 105, 140, 146, 152, 153, 156, 165, 167, 170, 174, 212, 216, 220, 224, 239, 241, 242, 246, 253, 257, 283, 284, 289, 294, 312, 319, 320, 325, 331, 332, 338, 340, 343, 345, 347, 352, 356, 390, 393, 396, 399, 400, 401, 408, 411, 447, 449, 454, 456, 487, 488, 489, 494, 496, 499, 507, 509, 510, 513], "detail": [0, 3, 5, 7, 20, 33, 40, 62, 67, 71, 75, 79, 94, 105, 165, 204, 212, 217, 220, 238, 242, 246, 253, 257, 284, 289, 290, 292, 293, 294, 312, 313, 332, 334, 390, 441, 449, 456, 463, 464, 484, 486, 487, 489, 490, 492, 493, 495, 497, 498, 499, 503, 508, 509], "discuss": [0, 5, 153, 165, 213, 246, 284, 345, 449, 451, 452, 484, 494, 498, 507, 513], "nuclearfilemetadata": [0, 165], "filemetadata": [0, 165, 196], "nuclidexsmetadata": [0, 165, 196], "regionxsmetadata": [0, 165, 196], "nuclidemetadata": [0, 165, 196], "xscollect": [0, 165, 198, 203, 356, 416], "macroscopiccrosssectioncr": [0, 165, 201], "computeblockaveragechi": [0, 165, 201], "computeneutronenergydepositionconst": [0, 165, 201], "computegammaenergydepositionconst": [0, 165, 201], "computefissionenergygenerationconst": [0, 165, 201], "computecaptureenergygenerationconst": [0, 165, 201], "computemacroscopicgroupconst": [0, 165, 201], "xslibrari": [0, 165, 168, 170, 172, 174, 177, 199, 201, 203, 253], "compar": [0, 1, 3, 4, 33, 47, 48, 56, 57, 59, 65, 165, 166, 168, 170, 172, 173, 174, 177, 183, 187, 200, 201, 202, 203, 220, 224, 225, 243, 315, 325, 332, 335, 342, 343, 365, 378, 383, 416, 418, 507, 513], "comparexslibraryattribut": [0, 165, 202], "comparelibraryneutronenergi": [0, 165, 202], "getsuffixfromnuclidelabel": [0, 165, 202], "getisotxslibrariestomerg": [0, 165, 202], "mergexslibrariesinworkingdirectori": [0, 165, 202], "isotxslibrari": [0, 165, 173, 177, 180, 199, 202, 332, 416], "compxslibrari": [0, 165, 168, 202], "xsnuclid": [0, 165, 168, 201, 476], "plotscattermatrix": [0, 165, 203, 416, 476], "plotcomparescattermatrix": [0, 165, 203], "getoperatorclassfromset": [0, 204, 445], "operatormpi": [0, 2, 152, 204, 209, 284, 449], "runtyp": [0, 204, 212, 284, 441, 449, 507], "settingsvalid": [0, 204, 284, 369, 487, 490, 494], "snapshot": [0, 3, 5, 26, 33, 37, 48, 79, 204, 205, 207, 211, 239, 257, 286, 471, 478, 479, 486, 487, 492, 507], "operatorsnapshot": [0, 204, 205, 209, 449], "physic": [0, 33, 36, 51, 79, 80, 87, 88, 104, 106, 138, 153, 156, 163, 164, 165, 166, 167, 170, 174, 185, 204, 205, 209, 284, 286, 289, 293, 295, 309, 311, 312, 313, 316, 317, 318, 331, 332, 340, 345, 348, 356, 373, 445, 446, 449, 451, 463, 471, 475, 483, 486, 487, 489, 490, 492, 493, 495, 497, 498, 502, 506, 507, 509, 513], "fuelcycl": [0, 213, 257, 284, 471, 492, 498], "fuelhandlerplugin": [0, 213, 216], "fuelperform": [0, 213], "neutron": [0, 29, 51, 79, 86, 102, 155, 156, 160, 163, 164, 166, 168, 170, 171, 180, 201, 202, 203, 213, 229, 284, 286, 289, 292, 293, 306, 309, 312, 313, 322, 331, 345, 348, 416, 451, 454, 469, 475, 480, 484, 486, 487, 489, 494, 495, 496, 498, 499, 503, 505, 507], "neutronicsplugin": [0, 213, 239, 272, 284, 451], "gammatransportisrequest": [0, 213, 239], "gammaxsarerequest": [0, 213, 239], "adjointcalculationrequest": [0, 213, 239], "realcalculationrequest": [0, 213, 239], "applyeffectivedelayedneutronfractiontocor": [0, 213, 239], "latticephysicsfrequ": [0, 213, 239, 241, 260, 487, 507], "safeti": [0, 170, 213, 408, 415, 484], "safetyplugin": [0, 213, 273], "thermalhydraul": [0, 213, 345, 348, 510], "constant": [0, 22, 26, 78, 79, 82, 90, 104, 105, 160, 166, 170, 185, 201, 207, 213, 239, 240, 244, 257, 264, 272, 285, 289, 309, 312, 323, 335, 336, 340, 341, 343, 356, 373, 404, 444, 455, 470, 480, 487, 489, 494, 503, 505, 507], "dpa_cross_sect": [0, 213, 214], "execut": [0, 14, 15, 16, 17, 18, 31, 32, 35, 36, 37, 42, 43, 48, 54, 55, 56, 59, 60, 61, 62, 67, 75, 76, 78, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 152, 158, 159, 160, 161, 162, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 205, 211, 212, 213, 224, 225, 226, 227, 229, 235, 236, 237, 242, 250, 251, 253, 255, 257, 260, 261, 267, 268, 269, 270, 271, 272, 275, 282, 284, 289, 298, 299, 300, 301, 302, 303, 304, 305, 312, 325, 326, 327, 328, 329, 330, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 405, 413, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 446, 449, 452, 463, 465, 481, 484, 485, 486, 487, 494, 507, 509, 514], "executionopt": [0, 213, 215, 230, 253], "defaultexecut": [0, 213, 215, 230, 253], "reactorplugin": [0, 284, 285, 445, 507], "beforereactorconstruct": [0, 284, 285, 383, 396, 490], "defineblocktyp": [0, 284, 285], "defineassemblytyp": [0, 284, 285], "definesystembuild": [0, 284, 285, 507], "getaxialexpansionchang": [0, 284, 285, 383, 396, 490], "blueprint": [0, 2, 3, 5, 11, 26, 48, 50, 56, 57, 62, 90, 105, 109, 146, 147, 156, 196, 205, 239, 241, 246, 284, 285, 286, 289, 309, 312, 325, 330, 332, 334, 348, 351, 353, 356, 364, 401, 416, 454, 455, 470, 478, 486, 487, 489, 490, 492, 493, 494, 497, 502, 504, 506], "loadfromc": [0, 285, 290, 351, 353], "compon": [0, 3, 4, 5, 10, 26, 45, 50, 52, 79, 105, 147, 154, 168, 183, 224, 227, 228, 241, 242, 246, 267, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 304, 312, 314, 315, 316, 317, 318, 325, 326, 327, 332, 334, 342, 345, 351, 356, 357, 358, 415, 416, 449, 451, 454, 462, 467, 470, 478, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 495, 497, 498, 499, 500, 503, 506, 508, 509], "nullcompon": [0, 285, 306, 357, 507], "unshapedcompon": [0, 285, 306, 310, 357, 507], "unshapedvolumetriccompon": [0, 285, 306, 507], "zeromasscompon": [0, 285, 306, 507], "positiveornegativevolumecompon": [0, 285, 306, 507], "derivedshap": [0, 285, 289, 306, 309, 357, 358, 361, 468, 470, 478, 490, 492, 498, 499, 507], "convert": [0, 3, 4, 5, 10, 27, 40, 49, 71, 96, 97, 100, 105, 148, 155, 156, 167, 191, 201, 220, 241, 253, 262, 284, 285, 289, 309, 312, 332, 334, 335, 336, 341, 342, 348, 350, 353, 360, 376, 381, 396, 401, 404, 408, 411, 412, 414, 415, 419, 440, 444, 454, 462, 463, 464, 486, 487, 489, 492, 507], "grid": [0, 3, 5, 10, 15, 46, 50, 68, 224, 242, 253, 284, 285, 286, 289, 290, 294, 296, 299, 303, 312, 316, 317, 318, 325, 332, 333, 352, 353, 356, 362, 364, 401, 410, 416, 419, 421, 437, 449, 467, 468, 470, 475, 477, 478, 481, 482, 483, 484, 485, 486, 487, 489, 490, 492, 495, 498, 500, 505, 506, 514], "locatorlabeltoindic": [0, 285, 336], "basic": [0, 4, 15, 17, 21, 29, 32, 33, 47, 140, 152, 153, 156, 255, 260, 261, 262, 285, 290, 300, 307, 312, 322, 331, 336, 341, 356, 358, 376, 391, 397, 404, 423, 425, 434, 437, 439, 442, 447, 449, 452, 453, 456, 483, 484, 494, 497, 498, 499, 507, 508], "usag": [0, 4, 22, 36, 61, 152, 203, 285, 346, 400, 401, 416, 418, 452, 455, 487, 507], "consider": [0, 45, 239, 241, 284, 285, 343, 402], "reset": [0, 2, 79, 253, 284, 285, 306, 312, 313, 314, 316, 319, 331, 345, 370, 384, 393, 397, 400, 442, 489, 492, 503], "assembli": [0, 2, 3, 5, 15, 16, 26, 27, 28, 29, 44, 45, 48, 51, 79, 83, 90, 176, 217, 220, 221, 224, 225, 226, 227, 228, 253, 255, 264, 279, 284, 285, 287, 289, 290, 291, 292, 296, 298, 301, 304, 306, 309, 312, 313, 314, 315, 316, 317, 318, 319, 325, 327, 330, 331, 332, 334, 336, 338, 340, 341, 342, 343, 345, 351, 352, 353, 355, 356, 358, 364, 367, 376, 390, 396, 400, 401, 404, 412, 416, 418, 449, 452, 454, 455, 463, 470, 471, 478, 479, 483, 484, 486, 487, 488, 489, 490, 492, 494, 497, 503, 505, 506, 508, 509, 510, 512, 513], "hexassembli": [0, 221, 224, 284, 285, 286, 470], "cartesianassembli": [0, 284, 285, 286], "rzassembli": [0, 285, 286], "thrzassembli": [0, 284, 285, 286], "assemblyparamet": [0, 285], "getassemblyparameterdefinit": [0, 285, 287], "blockparamet": [0, 285], "getblockparameterdefinit": [0, 285, 288], "block": [0, 2, 3, 4, 5, 15, 16, 26, 29, 42, 44, 45, 50, 51, 80, 126, 152, 153, 161, 167, 176, 198, 201, 220, 221, 224, 225, 227, 228, 238, 241, 242, 246, 248, 250, 253, 257, 261, 262, 267, 268, 284, 285, 286, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 304, 306, 307, 309, 311, 312, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 329, 330, 331, 332, 334, 336, 337, 342, 345, 347, 348, 349, 351, 352, 355, 356, 357, 358, 362, 364, 367, 390, 399, 400, 404, 412, 416, 449, 452, 454, 455, 461, 462, 465, 467, 478, 479, 481, 482, 483, 486, 487, 488, 489, 490, 492, 494, 495, 497, 500, 502, 505, 506, 508, 509], "hexblock": [0, 10, 198, 221, 224, 284, 285, 289, 312, 318, 319, 325, 355, 356, 470, 487, 490, 513], "cartesianblock": [0, 284, 285, 289, 318, 513], "thrzblock": [0, 284, 285, 289], "composit": [0, 3, 5, 10, 80, 81, 82, 105, 153, 168, 170, 175, 183, 201, 229, 241, 242, 267, 284, 285, 286, 289, 290, 295, 296, 306, 309, 315, 318, 319, 320, 332, 333, 334, 338, 340, 342, 343, 345, 347, 348, 349, 351, 358, 394, 442, 449, 452, 464, 471, 478, 479, 483, 486, 487, 489, 490, 492, 495, 498, 499, 507, 509], "flagseri": [0, 285, 312, 348], "compositemodeltyp": [0, 284, 285, 309, 312], "armiobject": [0, 3, 5, 7, 231, 248, 253, 263, 278, 284, 285, 294, 312, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 349, 352, 449, 455, 470, 489], "stateretain": [0, 285, 312, 358], "gathermaterialsbyvolum": [0, 285, 312], "getdominantmateri": [0, 285, 312], "getreactionratedict": [0, 285, 312], "core": [0, 3, 5, 10, 11, 15, 20, 26, 27, 29, 32, 45, 50, 54, 90, 168, 171, 176, 205, 216, 217, 220, 221, 225, 239, 241, 242, 246, 250, 253, 260, 262, 264, 284, 285, 286, 289, 290, 294, 296, 305, 312, 316, 318, 319, 320, 322, 325, 327, 331, 333, 334, 336, 338, 340, 341, 342, 343, 344, 345, 347, 350, 351, 352, 353, 355, 364, 365, 367, 370, 399, 401, 416, 418, 421, 449, 454, 456, 462, 463, 464, 470, 471, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 497, 499, 502, 503, 504, 506, 507, 508, 509, 510, 513, 514], "excorestructur": [0, 284, 285, 352, 449, 507], "excorecollect": [0, 285, 333], "flag": [0, 1, 12, 20, 27, 79, 105, 126, 147, 180, 205, 220, 239, 246, 250, 253, 284, 285, 286, 289, 290, 293, 294, 295, 298, 299, 300, 301, 302, 304, 306, 312, 317, 318, 319, 320, 325, 332, 345, 347, 348, 356, 358, 360, 376, 381, 396, 399, 400, 405, 410, 415, 416, 418, 427, 444, 449, 452, 462, 463, 468, 470, 471, 486, 487, 490, 492, 494, 497, 508, 509, 513], "invalidflagserror": [0, 285, 334], "geometri": [0, 3, 5, 46, 48, 56, 57, 166, 173, 175, 176, 179, 188, 193, 205, 215, 227, 241, 242, 253, 284, 285, 286, 289, 291, 294, 296, 309, 311, 313, 318, 319, 320, 325, 327, 330, 331, 332, 336, 338, 340, 341, 343, 344, 351, 353, 361, 401, 449, 461, 465, 470, 471, 474, 478, 479, 482, 484, 486, 492, 498, 499, 500, 507, 509, 513], "geomtyp": [0, 53, 54, 55, 253, 285, 332, 335, 336, 337, 338, 340, 341, 343, 344, 401, 470, 486], "domaintyp": [0, 285, 335, 401, 470], "boundarytyp": [0, 285, 335, 470], "symmetrytyp": [0, 285, 319, 332, 335, 340, 470], "checkvalidgeomsymmetrycombo": [0, 285, 335], "reactorparamet": [0, 285], "definereactorparamet": [0, 285, 350], "definecoreparamet": [0, 285, 350], "makeparametersreadonli": [0, 285, 350], "spentfuelpool": [0, 284, 285, 449, 479, 507], "systemlayoutinput": [0, 48, 50, 57, 285, 296, 344, 351, 486], "zone": [0, 166, 173, 175, 179, 180, 220, 285, 319, 332, 366, 471, 478, 479, 487, 492, 498, 499, 502, 503, 507], "isboolset": [0, 369, 445], "recursivelyloadsettingsfil": [0, 369, 445], "promptforsettingsfil": [0, 369, 445], "fwset": [0, 369, 494], "getframeworkset": [0, 369, 371], "caseset": [0, 26, 29, 152, 369, 478, 507], "flaglistset": [0, 369, 376], "settingsio": [0, 369, 382], "root": [0, 3, 5, 10, 48, 56, 78, 152, 156, 213, 291, 349, 369, 377, 383, 403, 405, 412, 442, 452, 455, 494, 509], "settingrenam": [0, 369, 377], "settingsread": [0, 369, 377], "settingswrit": [0, 369, 370, 377, 487], "prompt": [0, 369, 377, 378, 456, 494, 505, 507], "runlogpromptcancel": [0, 369, 377], "runlogpromptunresolv": [0, 369, 377], "queri": [0, 220, 284, 312, 369, 378, 380, 494, 513], "inspector": [0, 204, 205, 216, 222, 232, 233, 239, 247, 265, 279, 280, 284, 369, 378, 494], "createqueryrevertbadpathtodefault": [0, 369, 378], "validatevers": [0, 369, 378], "getemptyhexreactor": [0, 383, 445], "getemptycartesianreactor": [0, 383, 445], "fixtur": [0, 35, 224, 383, 445], "requires_fixtur": [0, 383, 445], "armitesthelp": [0, 35, 225, 226, 383, 387, 445], "comparefileslinebylin": [0, 383], "comparelin": [0, 383], "rebaselinetextcomparison": [0, 383, 445], "mockrunlog": [0, 383], "bufferlog": [0, 383, 384], "logcount": [0, 383, 384], "refsmallreactorshufflelog": [0, 383], "equilibriumshuffl": [0, 383, 385], "getfactorlist": [0, 216, 220, 383, 385, 498, 507], "test_app": [0, 383], "testplugin1": [0, 383, 386], "testplugin2": [0, 383, 386], "testplugin3": [0, 383, 386], "testplugin4": [0, 383, 386], "testapp": [0, 383, 386], "testarmihighlevel": [0, 383, 386], "test_armitesthelp": [0, 383], "testarmitesthelp": [0, 383, 387], "test_cartesian": [0, 383, 420, 421], "cartesianreactortest": [0, 285, 354, 364, 383, 388], "test_context": [0, 383], "testcontextseri": [0, 383, 389], "test_interfac": [0, 383], "dummyinterfac": [0, 383, 390], "testcodeinterfac": [0, 383, 390], "testtightcoupl": [0, 204, 210, 212, 383, 390], "test_lwrinput": [0, 383], "c5g7reactortest": [0, 383, 391], "test_mpiact": [0, 383, 420, 425], "mpiitertest": [0, 383, 392], "queueactionstest": [0, 383, 392], "passer": [0, 368, 383, 384, 392], "test_mpifeatur": [0, 383], "failinginterface1": [0, 383, 393], "failinginterface2": [0, 383, 393], "failinginterface3": [0, 383, 393], "mockinterfac": [0, 3, 13, 16, 383, 393], "mpioperatortest": [0, 383, 393], "bcastaction1": [0, 383, 393], "bcastaction2": [0, 383, 393], "mpidistributestatetest": [0, 383, 393], "mpipathtoolstest": [0, 383, 393], "testcontextmpi": [0, 383, 393], "test_mpiparamet": [0, 383], "mocksyncpc": [0, 383, 394], "makecomp": [0, 383, 394], "synchronizationtest": [0, 383, 394], "test_notebook": [0, 383], "notebooktest": [0, 383, 395], "runnotebook": [0, 383, 395], "test_plugin": [0, 383], "pluginflags1": [0, 383, 396], "sillyaxialexpansionchang": [0, 383, 396], "sillyaxialplugin": [0, 383, 396], "beforereactorplugin": [0, 383, 396], "testpluginregistr": [0, 383, 396], "testpluginbas": [0, 383, 396], "testplugin": [0, 236, 272, 282, 383, 396], "test_runlog": [0, 383], "testrunlog": [0, 383, 397], "testrunlogg": [0, 383, 397], "test_test": [0, 383], "testcomparefil": [0, 383, 398], "test_user_plugin": [0, 383, 494], "userpluginflag": [0, 383, 399], "userpluginflags2": [0, 383, 399], "userpluginflags3": [0, 383, 399], "userpluginbaddefinesset": [0, 383, 399], "userpluginbaddefineparameterrenam": [0, 383, 399], "userpluginonprocesscoreload": [0, 383, 399], "upinterfac": [0, 383, 399], "userpluginwithinterfac": [0, 383, 399], "testuserplugin": [0, 383, 399], "util": [0, 2, 4, 32, 38, 42, 62, 67, 78, 199, 201, 213, 215, 216, 221, 229, 237, 284, 289, 291, 292, 294, 316, 323, 331, 334, 336, 377, 381, 393, 396, 445, 446, 449, 452, 460, 462, 464, 467, 468, 471, 478, 479, 482, 484, 486, 487, 489, 490, 492, 494, 498, 500, 507], "getfilesha1hash": [0, 400, 445, 490], "getpowerfract": [0, 400, 445], "getcyclenam": [0, 400, 445], "getavailabilityfactor": [0, 400, 445], "getsteplength": [0, 400, 445], "getcyclelength": [0, 400, 445], "getburnstep": [0, 400, 445], "hasburnup": [0, 400, 445], "getmaxburnstep": [0, 400, 445], "getcumulativenodenum": [0, 400, 445], "getcyclenodefromcumulativestep": [0, 400, 445], "getcyclenodefromcumulativenod": [0, 400, 445], "getnodespercycl": [0, 400, 445], "getprevioustimenod": [0, 400, 445], "trypickleonallcont": [0, 400, 445], "dotestpickleonallcontents2": [0, 400, 445], "mypickl": [0, 400, 445], "save": [0, 7, 40, 79, 205, 239, 262, 289, 294, 303, 312, 331, 332, 345, 370, 400, 416, 418, 419, 449, 454, 456, 484, 487, 493, 507], "trypickleonallcontents3": [0, 400, 445], "classesinhierarchi": [0, 400, 441, 445], "slantsplit": [0, 400, 445], "prependtolist": [0, 400, 445], "capstrlen": [0, 400, 445], "list2str": [0, 400, 445], "createformattedstrwithdelimit": [0, 400, 445], "plotmatrix": [0, 400, 445], "usernam": [0, 400, 445], "mergeabledict": [0, 79, 400, 445], "merg": [0, 1, 165, 166, 167, 168, 183, 189, 199, 201, 202, 203, 242, 289, 309, 318, 386, 400, 486, 490, 504], "safecopi": [0, 400, 445, 489], "safemov": [0, 400, 445], "asciimap": [0, 294, 400, 487], "asciimapcartesian": [0, 400, 401], "asciimaphexthirdflatsup": [0, 400, 401], "asciimaphexfullflatsup": [0, 400, 401], "asciimaphexfulltipsup": [0, 400, 401], "asciimapfromgeomanddomain": [0, 400, 401], "codetim": [0, 400, 441, 488], "getmastertim": [0, 400, 402], "mastertim": [0, 400, 402], "customexcept": [0, 400, 486], "warn": [0, 3, 5, 79, 90, 105, 201, 202, 212, 242, 302, 312, 335, 368, 377, 384, 391, 397, 400, 403, 405, 415, 442, 445, 450, 456, 492, 494, 497, 499, 507, 509], "warn_when_root": [0, 400, 403], "inputerror": [0, 400, 403], "settingexcept": [0, 400, 403], "invalidsettingsstopprocess": [0, 400, 403], "nonexistentset": [0, 400, 403], "invalidsettingsfileerror": [0, 400, 403], "nonexistentsettingsfileerror": [0, 400, 403], "densitytool": [0, 400, 424, 462], "getndensfrommass": [0, 400, 404], "getmassfract": [0, 400, 404], "calculatemassdens": [0, 400, 404], "calculatenumberdens": [0, 400, 404], "getmassingram": [0, 400, 404], "formatmaterialcard": [0, 400, 404, 462], "filternuclidelist": [0, 400, 404], "normalizenuclidelist": [0, 400, 404], "expandelementalmassfracstonuclid": [0, 400, 404], "expandelementalnuclidemassfrac": [0, 400, 404], "getchem": [0, 400, 404], "applyisotopicsmix": [0, 400, 404], "directorychang": [0, 215, 400, 406, 425, 487], "temporarydirectorychang": [0, 275, 400, 405, 487, 490], "forcedcreationdirectorychang": [0, 47, 275, 400, 405], "directorychangerfactori": [0, 400, 405], "directorychangersmpi": [0, 400], "mpidirectorychang": [0, 400, 406, 426, 490], "dynamicimport": [0, 400], "getentirefamilytre": [0, 400, 407], "auto": [0, 3, 5, 8, 78, 105, 147, 215, 224, 253, 284, 286, 293, 312, 358, 361, 378, 400, 408, 427, 446, 456, 486, 487, 507], "grideditor": [0, 68, 400, 507], "hexagon": [0, 46, 126, 176, 221, 224, 284, 285, 286, 289, 298, 301, 302, 304, 306, 307, 308, 309, 310, 312, 313, 318, 319, 332, 336, 340, 343, 355, 356, 357, 358, 362, 400, 401, 428, 449, 468, 470, 472, 478, 484, 490, 492, 498, 503, 507, 508, 513], "area": [0, 26, 55, 175, 221, 267, 284, 286, 289, 306, 307, 308, 309, 311, 312, 318, 326, 341, 355, 356, 357, 361, 400, 410, 428, 439, 443, 454, 483, 490, 494, 498, 502, 503, 504], "side": [0, 27, 220, 307, 308, 318, 340, 341, 383, 400, 410, 416, 463], "corner": [0, 191, 289, 309, 312, 338, 341, 345, 348, 356, 400, 401, 410, 421, 428, 489, 503], "pitch": [0, 15, 289, 294, 307, 308, 309, 318, 319, 332, 336, 337, 338, 341, 343, 344, 354, 356, 362, 383, 400, 410, 472, 492, 498, 499, 507, 508, 513], "numringstoholdnumcel": [0, 400, 410], "numpositionsinr": [0, 400, 410, 428], "totalpositionsuptor": [0, 400, 410, 428], "getindexofrotatedcel": [0, 400, 410, 490], "iter": [0, 3, 5, 9, 10, 33, 48, 79, 80, 156, 205, 212, 228, 239, 241, 253, 257, 260, 286, 289, 312, 317, 319, 332, 340, 343, 347, 351, 383, 400, 412, 416, 418, 419, 427, 429, 437, 452, 468, 470, 490, 494, 505, 507, 510], "flatten": [0, 3, 9, 17, 152, 400, 411, 452, 509], "chunk": [0, 10, 289, 400, 408, 411, 442, 452, 455], "split": [0, 46, 152, 286, 319, 330, 338, 340, 345, 383, 400, 411, 452, 484, 487, 492, 498, 502, 507], "unpackbinarystr": [0, 400, 411], "packbinarystr": [0, 400, 411], "unpackhexstr": [0, 400, 411], "packhexstr": [0, 400, 411], "sequenc": [0, 3, 4, 5, 7, 48, 56, 57, 61, 105, 212, 215, 227, 257, 284, 291, 292, 293, 294, 295, 296, 312, 315, 325, 343, 348, 358, 400, 408, 411, 416, 418, 419, 449, 483, 484, 507], "pivot": [0, 400, 411], "mathemat": [0, 105, 400, 430], "average1dwithintoler": [0, 331, 400, 412], "converttoslic": [0, 400, 412], "efmt": [0, 400, 412], "expandrepeatedfloat": [0, 400, 412], "findclosest": [0, 400, 412], "findnearestvalu": [0, 400, 412], "findnearestvalueandindex": [0, 400, 412], "fixthreedigitexp": [0, 400, 412], "getfloat": [0, 400, 412], "getstepsfromvalu": [0, 400, 412], "ismonoton": [0, 400, 412], "linearinterpol": [0, 400, 412], "minimizescalarfunc": [0, 400, 412], "newtonsmethod": [0, 400, 412], "parabolafrompoint": [0, 400, 412], "parabolicinterpol": [0, 400, 412], "relerr": [0, 400, 412], "resamplestepwis": [0, 400, 412, 430], "rotatexi": [0, 400, 412], "outputcach": [0, 400], "api": [0, 3, 6, 284, 312, 400, 437, 446, 449, 451, 455, 456, 471, 484, 487, 492, 497, 507, 513], "retrieveoutput": [0, 400, 413], "store": [0, 3, 4, 5, 9, 10, 20, 23, 27, 33, 44, 46, 48, 79, 105, 154, 156, 171, 173, 176, 179, 183, 196, 201, 205, 220, 242, 257, 286, 289, 296, 309, 312, 315, 316, 317, 318, 325, 331, 332, 334, 335, 340, 342, 343, 345, 347, 348, 349, 377, 400, 408, 411, 413, 418, 424, 449, 454, 455, 486, 487, 492, 494, 502, 503, 504, 507, 508, 509, 510, 513], "deletecach": [0, 400, 413], "cachecal": [0, 400, 413], "pars": [0, 38, 40, 48, 61, 65, 67, 219, 335, 383, 400, 432, 437, 442, 490, 507], "tryliteralev": [0, 400, 414], "parsevalu": [0, 400, 414], "datetimefromstr": [0, 400, 414], "pathtool": [0, 400, 433], "armiabspath": [0, 400, 415], "copyorwarn": [0, 400, 415, 490], "isfilepathnew": [0, 400, 415], "isaccess": [0, 400, 415], "separatemoduleandattribut": [0, 400, 415], "importcustompymodul": [0, 400, 415, 433], "moduleandattributeexist": [0, 400, 415], "cleanpath": [0, 400, 415, 433], "plot": [0, 23, 26, 27, 29, 46, 50, 168, 198, 203, 220, 264, 319, 343, 400, 418, 434, 436, 454, 463, 464, 467, 468, 470, 471, 473, 478, 480, 481, 482, 484, 486, 487, 490, 492, 493, 494, 495, 497, 499, 500, 507], "colorgener": [0, 400, 416], "plotblockdepthmap": [0, 400, 416, 492], "plotfacemap": [0, 400, 416, 464, 471, 479, 492], "close": [0, 2, 3, 5, 7, 78, 160, 166, 167, 220, 312, 368, 397, 400, 404, 405, 406, 416, 418, 445, 492, 507], "depthslid": [0, 400, 416], "plotassemblytyp": [0, 400, 416, 478], "plotblockflux": [0, 400, 416], "makehistogram": [0, 400, 416], "plotblockdiagram": [0, 400, 416, 490], "plotnucx": [0, 400, 416], "properti": [0, 1, 3, 4, 5, 7, 22, 44, 48, 80, 81, 82, 83, 84, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 111, 112, 113, 114, 115, 116, 117, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 152, 156, 168, 170, 176, 183, 198, 199, 202, 203, 205, 209, 220, 229, 241, 242, 283, 289, 290, 291, 294, 295, 309, 312, 318, 331, 332, 333, 335, 337, 338, 340, 341, 342, 343, 345, 347, 348, 356, 358, 367, 370, 376, 383, 400, 435, 451, 477, 483, 484, 486, 489, 490, 492, 494, 495, 499, 504, 507], "areequ": [0, 400, 417], "numpyhackforequ": [0, 400, 417], "createimmutableproperti": [0, 400, 417], "immutablepropertyerror": [0, 400, 417], "unlockimmutableproperti": [0, 400, 417], "lockimmutableproperti": [0, 400, 417], "reportplot": [0, 400], "plotreactorperform": [0, 400, 418], "valuevstim": [0, 400, 418], "keffvstim": [0, 400, 418], "xshistoryvstim": [0, 400, 418], "movesvscycl": [0, 400, 418], "plotcoreoverviewradar": [0, 400, 418], "createplotmetadata": [0, 400, 418], "plotaxialprofil": [0, 400, 418], "tabul": [0, 400, 437, 468, 490], "header": [0, 24, 27, 368, 400, 437, 445, 451, 454, 456, 468, 487, 510], "column": [0, 27, 167, 168, 183, 203, 400, 401, 437, 442, 490, 498], "align": [0, 309, 315, 318, 331, 400, 410, 416, 437, 484, 507, 511], "width": [0, 220, 221, 225, 338, 343, 400, 408, 470, 480, 505], "line": [0, 4, 27, 40, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 138, 147, 167, 205, 213, 243, 253, 284, 286, 289, 312, 313, 319, 332, 338, 340, 341, 356, 363, 370, 376, 378, 382, 383, 400, 401, 402, 412, 415, 421, 426, 430, 434, 437, 438, 442, 444, 447, 452, 454, 455, 456, 470, 483, 485, 489, 490, 492, 494, 498, 507, 509, 514], "datarow": [0, 400, 419], "size": [0, 22, 27, 57, 166, 167, 203, 220, 312, 331, 332, 343, 364, 400, 401, 408, 412, 416, 419, 492, 498, 499, 507], "tableformat": [0, 400, 419], "textwrapp": [0, 400, 419], "chain": [0, 156, 160, 164, 220, 239, 246, 295, 312, 336, 342, 400, 411, 418, 419, 480, 484, 507], "namedtupl": [0, 79, 325, 342, 400, 419], "partial": [0, 176, 191, 242, 253, 284, 289, 294, 318, 332, 341, 368, 400, 411, 419, 463, 507], "reduc": [0, 5, 242, 286, 312, 318, 331, 336, 340, 343, 347, 364, 400, 419, 486, 492, 507], "zip_longest": [0, 400, 419], "textprocessor": [0, 400, 438], "scientific_pattern": [0, 400, 442], "floating_pattern": [0, 400, 442], "decimal_pattern": [0, 400, 442], "filemark": [0, 400, 442], "resolvemarkupinclus": [0, 400, 438, 442], "findyamlinclus": [0, 400, 442], "sequentialread": [0, 400, 442], "sequentialstringioread": [0, 400, 442], "triangl": [0, 285, 306, 307, 310, 341, 357, 400, 439, 507], "gettrianglearea": [0, 400, 439, 443], "gettrianglecentroid": [0, 400, 443], "checkifpointisintriangl": [0, 400, 443], "unit": [0, 11, 16, 54, 55, 59, 60, 77, 78, 81, 91, 94, 105, 114, 121, 123, 126, 131, 137, 162, 172, 176, 177, 201, 272, 282, 289, 302, 325, 328, 329, 332, 336, 337, 338, 343, 345, 348, 356, 376, 383, 392, 395, 398, 400, 410, 422, 432, 433, 440, 448, 450, 456, 483, 487, 489, 494, 498, 502, 503, 504, 505, 507, 512], "gettk": [0, 400, 444], "gettc": [0, 400, 444, 494], "gettf": [0, 400, 444], "gettemperatur": [0, 400, 444], "gettmev": [0, 400, 444], "convertmmhgtopasc": [0, 400, 444], "convertbartopasc": [0, 400, 444], "convertatmtopasc": [0, 400, 444], "sanitizeangl": [0, 400, 444], "getxylineparamet": [0, 400, 444], "pluginmanag": [0, 1, 284, 445, 451], "getset": [0, 1, 369, 370], "getparamrenam": [0, 1], "registerpluginflag": [0, 1], "registeruserplugin": [0, 1, 369, 370], "splashtext": [0, 1, 451, 494], "conftest": [0, 445], "pytest_sessionstart": [0, 77, 445], "bootstraparmitestenv": [0, 77, 445], "context": [0, 29, 45, 48, 152, 262, 289, 296, 335, 389, 393, 400, 405, 445, 452, 456, 480, 484, 486, 499, 509], "mode": [0, 3, 5, 61, 66, 67, 78, 86, 148, 153, 156, 167, 253, 294, 332, 350, 377, 438, 445, 456, 489, 498, 505, 509], "batch": [0, 64, 66, 67, 75, 78, 257, 306, 489, 498], "setmod": [0, 78], "activatelocalfastpath": [0, 78, 445], "getfastpath": [0, 78, 445, 486], "cleantempdir": [0, 78, 445], "cleanallarmitempdir": [0, 78, 445], "disconnectallhdfdb": [0, 78, 445], "stack_ord": [0, 79, 205, 445, 494], "befor": [0, 3, 5, 11, 20, 48, 79, 152, 202, 205, 213, 215, 219, 220, 221, 238, 241, 242, 267, 284, 285, 289, 309, 312, 317, 318, 319, 330, 332, 335, 345, 347, 368, 396, 397, 400, 401, 407, 412, 419, 446, 448, 451, 452, 454, 455, 471, 484, 485, 486, 487, 490, 492, 494, 503, 505, 507, 513, 514], "preprocess": [0, 79], "fuel_manag": [0, 79], "fuel_perform": [0, 79], "cross_sect": [0, 79], "critical_control": [0, 79], "flux": [0, 20, 35, 79, 166, 168, 170, 172, 174, 176, 179, 180, 191, 201, 241, 242, 246, 252, 253, 255, 263, 267, 284, 286, 289, 306, 309, 312, 330, 331, 332, 334, 345, 348, 356, 357, 416, 449, 470, 471, 483, 484, 486, 487, 490, 492, 503, 505, 507, 513], "thermal_hydraul": [0, 79, 494], "reactivity_coeff": [0, 79], "transient": [0, 33, 79, 204, 209, 213, 454, 484, 507], "postprocess": [0, 79], "tightcoupl": [0, 16, 79, 255, 390, 445, 507, 510], "storepreviousiterationvalu": [0, 79], "isconverg": [0, 79, 390], "getlistdimens": [0, 79], "getdepend": [0, 79], "getinputfil": [0, 79], "distribut": [0, 2, 3, 5, 7, 23, 28, 79, 144, 152, 153, 166, 220, 221, 239, 255, 289, 312, 316, 317, 318, 343, 416, 452, 471, 479, 484, 487, 489, 492, 494, 498, 499, 503, 505, 507, 510], "duplic": [0, 22, 45, 57, 59, 79, 80, 105, 126, 130, 154, 245, 248, 251, 285, 286, 300, 312, 332, 343, 357, 368, 369, 370, 402, 413, 424, 427, 487, 498, 507, 509], "new": [0, 3, 4, 5, 6, 17, 20, 27, 31, 46, 48, 56, 57, 64, 66, 79, 81, 93, 105, 111, 121, 138, 143, 145, 148, 150, 152, 156, 183, 201, 203, 209, 213, 215, 218, 221, 224, 241, 242, 253, 257, 262, 267, 279, 284, 286, 289, 290, 293, 295, 306, 312, 317, 318, 319, 320, 323, 331, 332, 334, 341, 343, 347, 348, 349, 351, 352, 353, 363, 364, 367, 370, 376, 381, 394, 396, 399, 400, 405, 406, 408, 410, 411, 412, 419, 442, 446, 447, 448, 450, 451, 454, 455, 464, 485, 486, 492, 493, 497, 498, 499, 507, 509, 510, 511, 513, 514], "skip": [0, 56, 79, 163, 170, 176, 201, 205, 212, 242, 289, 331, 349, 356, 364, 375, 376, 405, 416, 451, 480, 487, 490, 499, 507], "namecontain": [0, 79, 285, 312], "predistributest": [0, 79], "postdistributest": [0, 79], "attachreactor": [0, 79], "detachreactor": [0, 79], "gethistoryparam": [0, 20, 79, 252, 253], "getinterfac": [0, 20, 79, 204, 205, 449, 492], "interactinit": [0, 79, 205, 383, 393, 449], "interactbol": [0, 2, 3, 7, 20, 21, 22, 23, 28, 33, 79, 205, 239, 241, 242, 245, 246, 256, 257, 260, 332, 449], "interacteol": [0, 2, 3, 7, 20, 21, 22, 23, 28, 79, 205, 216, 219, 449], "interactboc": [0, 2, 20, 21, 23, 28, 79, 216, 219, 223, 225, 239, 241, 245, 246, 252, 253, 254, 255, 256, 257, 260, 449], "interacteoc": [0, 2, 3, 7, 23, 28, 79, 216, 219, 239, 241, 256, 257, 449, 489], "interacteverynod": [0, 2, 3, 7, 13, 16, 21, 22, 23, 28, 33, 79, 205, 239, 241, 252, 253, 254, 255, 256, 257, 260, 383, 393, 399, 449, 452, 494], "interactcoupl": [0, 2, 33, 79, 239, 241, 252, 253, 256, 257, 260, 449, 487, 507], "gettightcouplingvalu": [0, 79, 252, 253, 255], "interacterror": [0, 2, 3, 7, 79, 449], "interactdistributest": [0, 2, 3, 7, 79, 245, 246], "isrequesteddetailpoint": [0, 33, 79], "workeroper": [0, 2, 79, 152, 204, 205, 206, 216, 219, 220, 284, 383, 393], "enabl": [0, 3, 7, 48, 79, 95, 105, 171, 205, 242, 246, 250, 251, 253, 263, 286, 290, 291, 293, 314, 316, 332, 342, 370, 446, 449, 451, 456, 484, 486, 487, 492, 497, 503, 507, 510, 511], "bolforc": [0, 79, 205], "writeinput": [0, 47, 48, 56, 79, 213, 215, 319, 478, 497], "readoutput": [0, 79], "specifyinput": [0, 58, 59, 79, 216, 219, 284], "updatephysicscouplingcontrol": [0, 79, 256, 257], "inputwrit": [0, 79, 258, 445], "write": [0, 3, 5, 6, 7, 8, 10, 12, 15, 17, 20, 23, 24, 25, 29, 32, 38, 44, 45, 48, 49, 56, 79, 146, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 215, 220, 224, 225, 256, 257, 258, 259, 261, 268, 272, 286, 290, 300, 313, 320, 332, 348, 353, 361, 368, 370, 376, 377, 383, 397, 401, 402, 403, 412, 416, 449, 451, 454, 455, 456, 461, 465, 468, 478, 482, 484, 485, 486, 487, 489, 492, 494, 497, 498, 500, 507, 509, 510, 514], "outputread": [0, 79, 253, 255, 445], "getactiveinterfaceinfo": [0, 79, 205, 445], "isinterfaceact": [0, 79, 445], "interfaceinfo": [0, 79, 445, 494], "interfacecl": [0, 79], "kwarg": [0, 11, 79, 83, 90, 103, 105, 109, 132, 134, 135, 136, 137, 138, 152, 170, 198, 224, 241, 242, 283, 284, 291, 292, 293, 294, 295, 296, 306, 332, 344, 348, 358, 368, 384, 399, 416, 423], "meta": [0, 156, 203, 214, 295, 302, 309, 345, 348, 358, 445], "mpiaction": [0, 22, 206, 215, 262, 284, 393, 426, 445, 449, 452, 487], "parallel": [0, 73, 78, 152, 205, 206, 257, 262, 312, 393, 449, 450, 456, 483, 484, 485, 507, 514], "invokeasmast": [0, 152, 452], "broadcast": [0, 28, 79, 152, 206, 312, 406, 452], "gather": [0, 2, 3, 5, 20, 56, 152, 343, 452, 508], "invok": [0, 1, 38, 40, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 152, 239, 243, 349, 417, 442, 446, 447, 449, 452, 485, 486, 514], "mpiflatten": [0, 152, 452], "mpiiter": [0, 152, 452], "invokehook": [0, 2, 22, 152, 239, 262, 383, 393, 420, 426, 452], "runact": [0, 152, 445, 452], "runactionsinseri": [0, 152, 445], "distributionact": [0, 152, 445], "mpiactionerror": [0, 152, 445], "distributestateact": [0, 152, 445, 452], "counter": [0, 79, 283, 286, 289, 338, 341, 347, 410, 411, 503, 513], "unregist": [0, 283], "defineparamet": [0, 3, 11, 213, 229, 232, 239, 276, 279, 284, 494], "afterconstructionofassembli": [0, 276, 279, 284], "onprocesscoreload": [0, 213, 239, 284, 383, 399, 494], "defineflag": [0, 1, 284, 383, 396, 399, 507], "defineblueprintssect": [0, 3, 11, 284, 396], "defineset": [0, 58, 59, 213, 216, 229, 232, 233, 239, 245, 247, 265, 273, 276, 279, 280, 284, 369, 371, 372, 373, 374, 379, 381, 383, 399, 494], "definesettingsvalid": [0, 213, 216, 229, 232, 239, 276, 279, 284, 494], "defineguiwidget": [0, 284], "getoperatorclassfromruntyp": [0, 284], "defineparameterrenam": [0, 213, 239, 284, 383, 386, 399, 494], "userplugin": [0, 284, 399, 445, 487, 493, 507], "getnewpluginmanag": [0, 284, 445], "collectinterfacedescript": [0, 284, 445], "pluginerror": [0, 284, 445], "runlog": [0, 4, 29, 61, 212, 318, 377, 384, 397, 445, 450, 455, 487, 494, 509], "concatenatelog": [0, 368, 445], "raw": [0, 368, 442, 445, 452], "extra": [0, 1, 4, 33, 59, 289, 290, 312, 342, 345, 368, 376, 445, 446, 449, 456, 507, 509], "debug": [0, 2, 22, 332, 368, 400, 445, 449, 456, 487, 493, 507, 509], "warningreport": [0, 368, 397, 445], "setverbos": [0, 368, 397, 445, 456], "getverbos": [0, 368, 445], "deduplicationfilt": [0, 368, 445], "filter": [0, 20, 22, 56, 154, 156, 312, 330, 334, 348, 363, 368, 404, 411, 416, 471, 509], "runlogg": [0, 368, 445], "fmt": [0, 368, 377, 400, 470], "allowstopdupl": [0, 368], "flush": [0, 368, 419, 487], "getduplicatesfilt": [0, 368], "nulllogg": [0, 368, 445], "addhandl": [0, 368], "createlogdir": [0, 368, 397, 445], "logfactori": [0, 368, 445], "k": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514], "class": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 215, 216, 219, 220, 224, 225, 226, 227, 230, 232, 235, 236, 237, 239, 241, 242, 243, 246, 248, 250, 251, 253, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 275, 279, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 411, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446, 447, 449, 451, 452, 454, 455, 456, 486, 487, 489, 490, 493, 495, 496, 497, 498, 507, 510], "simpl": [1, 3, 7, 16, 32, 38, 71, 75, 80, 81, 87, 94, 105, 114, 115, 152, 153, 161, 183, 196, 215, 224, 241, 242, 284, 286, 289, 295, 326, 331, 335, 343, 350, 352, 356, 375, 396, 397, 399, 401, 419, 428, 433, 437, 441, 449, 452, 456, 459, 466, 482, 484, 487, 493, 494, 498, 499, 500, 507, 513], "histor": [1, 3, 5, 7, 95, 309, 334, 335, 351, 368, 418, 499, 507], "fun": [1, 220], "fact": [1, 332, 452, 498], "pattern": [1, 48, 56, 79, 166, 167, 215, 253, 312, 343, 358, 369, 438, 442, 449, 497, 503, 507], "mani": [1, 10, 20, 22, 35, 45, 48, 56, 61, 67, 105, 145, 153, 156, 164, 166, 167, 170, 201, 215, 221, 229, 241, 246, 253, 257, 289, 307, 312, 318, 331, 332, 334, 342, 343, 345, 347, 348, 356, 369, 370, 383, 410, 411, 419, 437, 442, 448, 449, 454, 455, 457, 477, 480, 482, 483, 484, 485, 486, 487, 488, 492, 494, 495, 499, 500, 503, 504, 507, 509, 513, 514], "wai": [1, 3, 5, 7, 11, 22, 46, 48, 50, 56, 90, 105, 152, 153, 164, 166, 184, 205, 215, 241, 253, 284, 286, 289, 312, 319, 331, 332, 334, 343, 345, 348, 356, 364, 367, 368, 376, 392, 412, 413, 419, 446, 449, 453, 454, 456, 483, 484, 485, 487, 492, 495, 498, 501, 507, 510, 513, 514], "what": [1, 3, 4, 5, 10, 16, 20, 32, 33, 90, 105, 153, 154, 156, 163, 167, 199, 206, 215, 220, 221, 246, 257, 264, 284, 286, 289, 294, 313, 315, 332, 334, 340, 341, 345, 348, 349, 356, 369, 381, 401, 408, 411, 413, 421, 442, 447, 448, 449, 450, 451, 452, 456, 484, 492, 493, 495, 496, 498, 507, 509, 513], "made": [1, 3, 5, 7, 45, 47, 56, 86, 105, 153, 246, 286, 289, 290, 291, 312, 318, 319, 332, 349, 383, 402, 405, 419, 437, 449, 452, 454, 456, 462, 484, 486, 487, 492, 494, 498, 499, 507], "heavi": [1, 62, 102, 154, 156, 289, 312, 332, 356, 404, 416, 418, 483, 496, 503, 504, 505, 507], "e": [1, 3, 4, 5, 8, 9, 10, 22, 27, 33, 38, 48, 61, 78, 79, 80, 90, 94, 96, 97, 100, 143, 152, 153, 154, 155, 156, 161, 163, 164, 166, 167, 168, 176, 196, 201, 202, 203, 204, 205, 221, 229, 241, 242, 246, 253, 257, 284, 285, 286, 289, 290, 293, 294, 306, 309, 312, 315, 316, 317, 319, 325, 331, 332, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 347, 348, 368, 370, 375, 376, 384, 400, 404, 411, 412, 415, 416, 419, 446, 448, 451, 452, 455, 478, 483, 484, 485, 486, 487, 492, 494, 497, 498, 503, 504, 507, 510, 513, 514], "g": [1, 3, 5, 8, 10, 22, 33, 38, 48, 61, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 111, 112, 113, 114, 117, 134, 135, 136, 137, 138, 140, 141, 143, 152, 154, 155, 156, 161, 163, 164, 166, 168, 170, 176, 179, 185, 196, 201, 202, 203, 204, 205, 221, 229, 238, 241, 242, 253, 257, 262, 284, 286, 289, 290, 293, 294, 306, 309, 312, 315, 319, 325, 331, 332, 334, 335, 336, 340, 341, 343, 345, 347, 348, 368, 376, 384, 400, 404, 411, 415, 416, 419, 448, 451, 452, 455, 475, 478, 483, 484, 485, 486, 487, 492, 494, 495, 497, 498, 503, 504, 505, 507, 510, 513, 514], "take": [1, 9, 20, 29, 35, 49, 57, 109, 134, 146, 152, 174, 203, 205, 206, 215, 220, 241, 242, 253, 284, 286, 289, 312, 332, 343, 345, 378, 400, 402, 412, 416, 419, 442, 451, 452, 453, 454, 455, 456, 484, 486, 492, 494, 495, 505, 507, 511], "bit": [1, 21, 34, 57, 163, 167, 174, 246, 284, 286, 289, 309, 312, 338, 348, 408, 419, 452, 455, 480, 492, 494, 498, 502, 508, 509], "effort": [1, 45, 289, 323, 331, 343, 412, 456, 484, 507], "refactor": [1, 293, 335, 446, 455, 490], "through": [1, 15, 33, 48, 70, 78, 114, 152, 153, 155, 156, 164, 168, 173, 178, 179, 180, 202, 203, 205, 206, 241, 246, 284, 286, 289, 306, 309, 312, 325, 331, 332, 334, 338, 340, 341, 342, 343, 345, 346, 347, 350, 357, 362, 363, 364, 376, 378, 392, 399, 400, 404, 412, 416, 428, 440, 442, 449, 450, 451, 452, 454, 455, 456, 483, 484, 485, 487, 492, 494, 498, 501, 502, 503, 505, 507, 509, 510, 513, 514], "highest": [1, 217, 220, 221, 227, 228, 244, 286, 351, 400, 471, 492, 503, 505, 507], "level": [1, 3, 4, 5, 27, 28, 33, 79, 80, 81, 156, 163, 166, 172, 174, 177, 201, 206, 220, 225, 242, 246, 248, 255, 262, 284, 286, 289, 293, 294, 296, 300, 309, 312, 316, 318, 325, 331, 332, 336, 342, 348, 349, 350, 351, 356, 364, 368, 370, 371, 383, 411, 449, 452, 454, 455, 471, 484, 487, 490, 492, 494, 495, 496, 497, 498, 503, 505, 507, 509], "abstract": [1, 24, 27, 39, 44, 48, 50, 67, 79, 140, 152, 156, 166, 167, 174, 176, 253, 261, 309, 311, 312, 322, 340, 342, 343, 348, 357, 377, 494], "happen": [1, 2, 48, 59, 145, 146, 152, 156, 213, 220, 221, 253, 257, 284, 289, 304, 309, 312, 319, 331, 332, 345, 369, 449, 451, 452, 454, 456, 495, 507, 509, 513], "mostli": [1, 3, 5, 7, 59, 138, 221, 253, 284, 296, 312, 319, 370, 384, 397, 399, 480, 484, 499, 509, 513], "subclass": [1, 10, 50, 57, 61, 67, 75, 79, 80, 146, 163, 166, 179, 204, 220, 230, 242, 253, 257, 260, 261, 283, 284, 286, 306, 309, 311, 312, 319, 331, 334, 340, 345, 347, 348, 349, 376, 384, 407, 419, 442, 447, 449, 451, 452, 487, 494, 507, 513], "free": [1, 105, 163, 289, 356, 416, 418, 451, 489, 507], "adopt": [1, 349, 451], "throw": [1, 487], "awai": [1, 338], "start": [1, 3, 7, 10, 27, 79, 156, 166, 173, 205, 220, 241, 242, 246, 253, 257, 313, 331, 332, 341, 343, 352, 400, 401, 402, 410, 411, 412, 416, 418, 419, 437, 442, 448, 449, 450, 451, 453, 454, 455, 456, 462, 463, 464, 485, 487, 488, 493, 497, 498, 504, 505, 507, 509, 513, 514], "scratch": [1, 78, 289, 478, 492, 494, 498, 499, 507], "thei": [1, 4, 5, 35, 48, 57, 67, 78, 79, 80, 105, 126, 145, 152, 153, 156, 166, 173, 175, 176, 201, 203, 205, 206, 209, 215, 217, 221, 224, 239, 242, 246, 248, 253, 257, 268, 284, 286, 289, 290, 291, 296, 304, 306, 312, 313, 315, 316, 332, 334, 336, 340, 342, 343, 344, 345, 347, 348, 349, 352, 356, 358, 364, 367, 369, 377, 378, 382, 383, 400, 402, 412, 419, 421, 434, 447, 448, 449, 451, 452, 454, 455, 456, 478, 484, 486, 487, 492, 494, 497, 498, 499, 503, 507, 509, 513], "do": [1, 3, 4, 8, 16, 20, 21, 22, 28, 35, 45, 46, 47, 48, 50, 51, 59, 61, 65, 78, 79, 80, 105, 130, 152, 153, 154, 156, 163, 164, 166, 170, 201, 202, 215, 220, 221, 241, 246, 284, 286, 289, 312, 316, 319, 325, 331, 332, 334, 340, 342, 343, 344, 345, 347, 349, 367, 368, 377, 383, 390, 392, 393, 402, 405, 406, 411, 412, 413, 419, 425, 426, 434, 442, 446, 447, 449, 450, 451, 452, 454, 456, 471, 484, 485, 486, 492, 494, 495, 497, 498, 499, 505, 507, 509, 513, 514], "wish": [1, 3, 4, 5, 176, 246, 290, 291, 442, 451, 492, 494], "For": [1, 3, 4, 5, 8, 9, 10, 20, 27, 45, 50, 56, 57, 61, 78, 79, 104, 105, 140, 146, 152, 153, 154, 164, 165, 166, 170, 176, 183, 205, 208, 220, 221, 242, 253, 257, 284, 289, 291, 294, 295, 306, 307, 308, 309, 312, 313, 315, 318, 319, 325, 331, 332, 334, 335, 338, 340, 341, 342, 343, 345, 348, 349, 356, 364, 376, 400, 401, 408, 411, 412, 419, 421, 442, 446, 448, 449, 451, 452, 454, 455, 456, 463, 464, 480, 484, 492, 494, 495, 496, 497, 498, 499, 502, 503, 505, 507, 509, 510, 513], "descript": [1, 21, 22, 24, 38, 40, 46, 61, 67, 71, 105, 115, 166, 167, 196, 290, 294, 312, 332, 345, 348, 376, 415, 417, 419, 447, 454, 455, 456, 463, 484, 487, 492, 494, 498, 502, 503, 504, 505, 507, 509, 512], "can": [1, 3, 4, 5, 7, 9, 10, 11, 15, 17, 20, 22, 27, 33, 43, 45, 46, 47, 48, 49, 51, 56, 57, 59, 61, 62, 66, 67, 77, 78, 79, 80, 87, 90, 94, 105, 126, 130, 145, 152, 153, 156, 161, 163, 164, 166, 167, 168, 170, 173, 174, 176, 178, 180, 183, 188, 189, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 209, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 227, 229, 230, 241, 242, 246, 248, 250, 253, 257, 260, 262, 267, 268, 272, 275, 284, 286, 289, 290, 293, 294, 295, 300, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 316, 317, 319, 325, 327, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 345, 347, 348, 349, 352, 356, 357, 361, 364, 367, 368, 370, 376, 377, 378, 381, 383, 384, 390, 393, 395, 396, 397, 399, 400, 402, 404, 407, 408, 410, 411, 412, 415, 416, 419, 421, 427, 437, 439, 442, 446, 447, 448, 449, 451, 452, 454, 455, 456, 463, 464, 477, 478, 479, 480, 483, 484, 485, 486, 487, 489, 490, 492, 494, 495, 497, 498, 499, 502, 507, 508, 509, 510, 511, 513, 514], "program": [1, 117, 345, 346, 378, 453, 455, 456, 483, 484, 494, 497, 507], "actual": [1, 3, 5, 35, 46, 78, 79, 164, 166, 167, 205, 208, 213, 216, 220, 241, 242, 289, 302, 305, 309, 312, 319, 335, 340, 341, 342, 343, 345, 348, 362, 370, 377, 383, 401, 416, 442, 446, 447, 451, 456, 471, 480, 487, 494, 498, 499, 507], "appropri": [1, 3, 8, 21, 22, 27, 33, 48, 59, 77, 79, 155, 163, 166, 176, 179, 212, 231, 239, 263, 278, 284, 291, 292, 325, 331, 345, 357, 390, 393, 399, 442, 452, 463, 464, 484, 485, 494, 507, 514], "__main__": [1, 449, 451, 478, 480], "expect": [1, 3, 4, 7, 32, 36, 75, 80, 102, 150, 160, 163, 167, 170, 198, 218, 220, 221, 224, 241, 246, 257, 267, 284, 286, 290, 295, 300, 306, 312, 318, 320, 325, 327, 332, 333, 357, 362, 365, 368, 383, 392, 407, 413, 414, 419, 451, 452, 457, 482, 492, 494, 495, 497, 500, 507, 510], "m": [1, 40, 67, 70, 71, 78, 81, 84, 93, 94, 96, 97, 98, 100, 102, 105, 113, 114, 130, 132, 133, 134, 137, 143, 166, 167, 172, 176, 343, 393, 400, 412, 419, 426, 447, 449, 453, 455, 456, 477, 485, 486, 494, 497, 499, 502, 503, 505, 509, 514], "myapp": [1, 447, 451, 494], "grab": [1, 15, 20, 153, 286, 370, 492, 509, 513], "ridabl": 1, "develop": [1, 22, 48, 77, 145, 153, 220, 246, 284, 285, 289, 312, 318, 334, 349, 355, 378, 402, 412, 417, 446, 447, 448, 449, 451, 455, 456, 478, 483, 484, 494, 499, 507, 510], "dict": [1, 3, 5, 7, 22, 48, 50, 79, 80, 105, 156, 161, 167, 170, 201, 203, 220, 241, 242, 248, 257, 284, 285, 292, 293, 294, 295, 306, 309, 312, 315, 317, 319, 320, 325, 332, 333, 345, 347, 348, 353, 364, 375, 377, 400, 404, 408, 417, 418, 419, 437, 480, 497], "dictionari": [1, 3, 4, 5, 48, 79, 81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143, 153, 154, 156, 161, 170, 196, 220, 241, 242, 244, 246, 248, 257, 284, 293, 294, 306, 312, 315, 320, 325, 331, 332, 333, 345, 347, 348, 353, 364, 370, 375, 376, 400, 404, 408, 411, 418, 419, 437, 449, 454, 487, 496, 507, 509], "renam": [1, 48, 215, 284, 332, 346, 351, 352, 377, 419, 425, 455, 486, 489, 490, 494], "render": [1, 3, 5, 23, 24, 27, 28, 46, 318, 446, 451, 453, 454, 513], "It": [1, 3, 4, 5, 10, 16, 20, 21, 22, 32, 44, 48, 57, 78, 80, 82, 84, 86, 87, 90, 91, 93, 94, 96, 97, 98, 100, 102, 105, 106, 112, 113, 114, 117, 138, 141, 143, 152, 153, 154, 164, 167, 170, 176, 179, 180, 203, 205, 215, 219, 220, 241, 242, 246, 257, 262, 284, 285, 286, 289, 293, 295, 312, 316, 318, 331, 332, 337, 338, 341, 342, 343, 344, 347, 348, 349, 350, 356, 363, 368, 370, 376, 384, 410, 411, 412, 413, 415, 416, 418, 449, 450, 451, 454, 455, 473, 483, 484, 492, 494, 498, 501, 503, 506, 507, 509], "also": [1, 3, 4, 5, 9, 10, 34, 45, 48, 50, 62, 67, 78, 80, 87, 105, 152, 153, 156, 164, 166, 167, 173, 179, 180, 202, 203, 205, 213, 217, 219, 220, 239, 241, 246, 253, 255, 257, 267, 284, 286, 289, 295, 308, 309, 312, 317, 318, 323, 325, 332, 334, 335, 338, 342, 345, 347, 348, 350, 352, 376, 391, 401, 408, 411, 412, 416, 419, 442, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 469, 470, 473, 476, 478, 483, 484, 485, 486, 489, 492, 494, 497, 498, 499, 501, 502, 503, 504, 507, 509, 513, 514], "perform": [1, 3, 5, 10, 20, 21, 47, 48, 51, 56, 61, 62, 66, 77, 78, 79, 88, 105, 152, 153, 166, 170, 203, 204, 212, 215, 219, 220, 229, 230, 231, 232, 233, 235, 236, 237, 238, 242, 253, 257, 284, 289, 290, 295, 312, 316, 318, 319, 331, 332, 334, 343, 347, 348, 357, 376, 383, 390, 411, 412, 415, 417, 449, 452, 455, 458, 461, 463, 468, 482, 483, 484, 486, 490, 492, 494, 496, 497, 498, 500, 503, 507, 508, 509, 510], "result": [1, 3, 5, 10, 20, 22, 27, 38, 48, 57, 62, 79, 83, 105, 121, 124, 131, 145, 152, 164, 166, 168, 184, 198, 202, 215, 229, 241, 242, 248, 253, 255, 257, 283, 284, 289, 296, 299, 306, 312, 315, 316, 318, 325, 331, 332, 341, 347, 348, 376, 381, 402, 411, 413, 419, 437, 442, 449, 452, 454, 456, 471, 483, 484, 485, 490, 493, 494, 503, 507, 508, 509, 510, 513, 514], "cach": [1, 20, 48, 105, 130, 202, 283, 286, 309, 312, 330, 331, 332, 357, 377, 413, 431, 492, 497, 507], "somewhat": [1, 4, 44, 166, 253, 306, 312, 332, 342, 343, 456, 484, 494, 507], "expens": [1, 79, 283, 289, 312, 452], "detect": [1, 3, 5, 8, 10, 78, 283, 284, 304, 348, 419], "chang": [1, 3, 4, 5, 6, 20, 48, 49, 78, 80, 105, 109, 152, 156, 174, 176, 213, 229, 239, 257, 284, 286, 289, 290, 295, 306, 309, 312, 315, 316, 317, 318, 319, 323, 327, 331, 332, 338, 340, 341, 343, 347, 348, 368, 376, 381, 383, 405, 406, 412, 417, 419, 437, 446, 447, 449, 450, 452, 455, 456, 468, 484, 485, 492, 494, 495, 497, 502, 503, 507, 510, 511, 513, 514], "invalid": [1, 3, 5, 57, 59, 79, 146, 147, 225, 257, 289, 300, 304, 309, 312, 345, 357, 397, 399, 403, 428, 444, 456, 486, 487, 492, 507], "recomput": [1, 105, 241, 289, 306, 309, 312], "specifi": [1, 2, 3, 5, 7, 14, 15, 16, 17, 18, 23, 31, 32, 35, 36, 37, 40, 42, 43, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 143, 150, 151, 156, 158, 159, 160, 161, 162, 164, 167, 174, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 205, 211, 212, 224, 225, 226, 227, 235, 236, 237, 239, 241, 242, 243, 246, 248, 250, 251, 253, 255, 257, 260, 261, 262, 267, 268, 269, 270, 271, 272, 275, 282, 286, 289, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 309, 312, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 408, 415, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 454, 456, 464, 474, 478, 486, 487, 489, 492, 493, 499, 502, 503, 507, 509, 510, 513], "pass": [1, 3, 5, 7, 9, 10, 20, 26, 32, 44, 48, 57, 59, 78, 79, 80, 152, 156, 167, 199, 215, 221, 241, 284, 286, 289, 290, 294, 312, 317, 325, 332, 338, 340, 343, 347, 348, 363, 369, 370, 376, 377, 378, 383, 394, 404, 405, 412, 440, 442, 447, 448, 451, 452, 456, 477, 480, 483, 497, 507], "pluginpath": 1, "These": [1, 4, 5, 20, 27, 35, 47, 49, 50, 61, 79, 109, 153, 156, 163, 164, 176, 201, 205, 207, 209, 217, 220, 224, 228, 230, 242, 246, 248, 250, 253, 262, 284, 286, 294, 306, 307, 312, 319, 323, 331, 332, 334, 338, 345, 348, 373, 375, 376, 378, 384, 393, 401, 426, 434, 449, 452, 454, 455, 456, 483, 484, 485, 486, 494, 495, 498, 503, 507, 508, 509, 510, 511, 513, 514], "mai": [1, 3, 4, 5, 20, 21, 27, 33, 34, 38, 44, 45, 47, 48, 50, 51, 56, 59, 61, 67, 70, 79, 80, 82, 105, 109, 152, 153, 154, 155, 156, 164, 166, 167, 174, 201, 204, 205, 209, 212, 215, 216, 220, 228, 239, 242, 246, 248, 253, 257, 284, 286, 289, 290, 291, 294, 306, 309, 311, 312, 313, 315, 316, 318, 319, 331, 332, 334, 335, 336, 340, 343, 345, 347, 348, 352, 358, 362, 368, 369, 378, 390, 393, 397, 399, 408, 411, 416, 418, 442, 447, 449, 451, 454, 455, 456, 469, 484, 485, 486, 487, 492, 494, 497, 498, 499, 502, 503, 504, 507, 508, 509, 510, 513, 514], "startup": [1, 205, 212], "full": [1, 3, 5, 11, 15, 20, 29, 48, 50, 54, 56, 57, 60, 61, 80, 90, 164, 168, 201, 202, 205, 221, 242, 253, 289, 294, 295, 308, 312, 313, 318, 319, 327, 330, 332, 341, 342, 343, 350, 353, 361, 364, 365, 370, 377, 382, 401, 415, 416, 418, 421, 425, 449, 451, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 492, 493, 494, 498, 499, 502, 503, 505, 507, 509, 512, 513, 514], "namespac": [1, 10, 40, 80, 126, 213, 284, 348, 424, 451, 455, 487, 494, 507], "There": [1, 3, 5, 11, 22, 61, 79, 153, 166, 170, 185, 216, 225, 239, 246, 253, 289, 290, 295, 306, 318, 331, 332, 335, 345, 348, 353, 395, 411, 419, 448, 449, 452, 454, 455, 487, 494, 497, 498, 499, 501, 507, 509, 513], "comma": [1, 455], "between": [1, 3, 4, 5, 7, 15, 20, 51, 65, 78, 79, 105, 161, 163, 164, 166, 167, 173, 176, 201, 203, 204, 205, 220, 221, 225, 241, 246, 253, 267, 284, 286, 289, 290, 295, 308, 312, 313, 323, 325, 326, 331, 332, 334, 338, 340, 341, 342, 343, 345, 348, 357, 376, 383, 400, 406, 410, 412, 416, 419, 444, 452, 454, 455, 470, 483, 484, 486, 487, 492, 494, 495, 496, 497, 498, 502, 503, 504, 507, 509, 510, 511], "individu": [1, 3, 5, 20, 47, 56, 61, 73, 79, 156, 205, 206, 220, 239, 242, 246, 248, 289, 296, 312, 315, 319, 330, 334, 357, 378, 402, 452, 455, 492, 493, 498, 507, 513], "dot": [1, 343, 437, 453, 494], "repres": [1, 3, 5, 9, 47, 71, 78, 95, 105, 152, 154, 156, 163, 166, 170, 176, 201, 202, 203, 215, 220, 221, 241, 242, 246, 248, 253, 256, 257, 258, 267, 284, 285, 286, 289, 290, 292, 294, 307, 308, 309, 311, 312, 331, 332, 333, 336, 338, 340, 341, 342, 343, 345, 348, 351, 357, 358, 367, 369, 401, 408, 419, 449, 487, 488, 489, 492, 494, 498, 499, 502, 503, 505, 507, 509], "stuff": [1, 5, 48, 290, 402, 406, 452, 455, 456], "plugindir": 1, "pluginmod": 1, "plugincl": 1, "whatev": [1, 3, 4, 8, 56, 67, 215, 349, 402, 405, 412, 451, 452, 494, 507], "plugmod2": 1, "plugcls2": 1, "linux": [1, 29, 32, 484, 485, 487, 489, 494, 509, 514], "unix": [1, 494], "py": [1, 3, 7, 29, 120, 126, 156, 202, 207, 208, 213, 217, 220, 224, 312, 355, 356, 364, 393, 415, 426, 427, 429, 438, 440, 446, 449, 451, 452, 455, 456, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 486, 487, 489, 490, 492, 498, 500, 507, 509], "meant": [1, 156, 284, 309, 331, 333, 370, 434, 448, 454, 456, 484, 499, 502, 509], "taken": [1, 241, 242, 312, 341, 345, 349, 357, 442, 497, 499], "though": [1, 4, 102, 166, 201, 255, 289, 312, 344, 356, 401, 419, 437, 442, 449, 456, 486, 494, 507, 509, 513], "public": [1, 4, 57, 81, 134, 166, 176, 312, 419, 450, 456, 486], "idea": [1, 209, 300, 309, 333, 351, 362, 447, 451, 452, 455, 484, 494], "differ": [1, 3, 4, 5, 8, 15, 22, 29, 36, 48, 51, 56, 78, 79, 80, 83, 105, 126, 163, 166, 168, 174, 176, 194, 198, 204, 205, 207, 209, 215, 225, 228, 238, 239, 241, 242, 246, 253, 257, 260, 286, 289, 295, 296, 301, 309, 312, 313, 317, 319, 325, 331, 332, 334, 341, 342, 345, 352, 356, 364, 370, 383, 390, 401, 405, 408, 412, 413, 416, 419, 424, 437, 452, 454, 455, 456, 463, 484, 487, 492, 494, 495, 498, 499, 502, 503, 507, 509, 510, 511, 513], "regular": [1, 40, 48, 166, 179, 180, 341, 343, 419, 438, 442, 494, 499, 507], "becaus": [1, 2, 3, 5, 11, 15, 16, 20, 38, 57, 75, 78, 94, 105, 156, 161, 163, 164, 167, 174, 176, 198, 201, 203, 205, 217, 220, 224, 229, 242, 244, 253, 257, 284, 286, 289, 290, 306, 308, 309, 312, 316, 318, 331, 332, 338, 340, 341, 342, 343, 348, 361, 362, 367, 376, 392, 399, 400, 401, 406, 412, 413, 417, 418, 419, 442, 448, 451, 452, 454, 471, 484, 485, 492, 497, 507, 513, 514], "As": [1, 3, 5, 6, 48, 56, 59, 80, 136, 166, 230, 284, 289, 296, 309, 312, 319, 334, 345, 400, 401, 424, 449, 451, 456, 484, 491, 492, 495, 498, 499, 503, 507, 509], "restrict": [1, 56, 202, 284, 286, 312, 319, 332, 345, 507, 510, 513], "flexibl": [1, 3, 205, 215, 284, 331, 362, 471, 484, 486, 494, 507], "power": [1, 29, 57, 96, 97, 100, 140, 145, 166, 168, 178, 179, 201, 205, 212, 213, 217, 219, 220, 221, 224, 227, 228, 239, 241, 253, 255, 257, 289, 312, 319, 331, 332, 345, 369, 370, 400, 401, 441, 442, 449, 451, 454, 479, 484, 487, 492, 494, 497, 498, 499, 502, 503, 505, 507, 508, 509, 512, 513], "usual": [1, 3, 5, 35, 80, 104, 156, 160, 176, 201, 220, 253, 284, 289, 332, 334, 348, 400, 451, 455, 456, 486, 499, 507, 509], "textual": [1, 478, 499], "screen": [1, 416, 485, 494, 514], "want": [1, 2, 3, 5, 8, 11, 22, 33, 48, 56, 75, 79, 80, 105, 145, 163, 166, 167, 170, 174, 179, 213, 215, 220, 239, 241, 253, 257, 284, 286, 289, 294, 296, 306, 309, 312, 313, 318, 331, 332, 345, 348, 349, 352, 356, 367, 368, 370, 400, 401, 408, 412, 416, 419, 427, 446, 449, 450, 451, 452, 454, 455, 456, 478, 484, 485, 492, 494, 497, 499, 507, 509, 510, 513, 514], "handl": [2, 3, 5, 7, 15, 17, 27, 29, 44, 45, 48, 56, 61, 78, 79, 80, 93, 105, 152, 161, 163, 167, 206, 220, 225, 226, 239, 241, 284, 286, 289, 293, 294, 312, 315, 320, 332, 334, 340, 343, 348, 356, 368, 376, 384, 400, 403, 411, 425, 438, 442, 484, 486, 487, 489, 492, 495, 499, 502, 507], "persist": [2, 3, 7, 334, 345, 449, 454, 484, 487], "static": [2, 3, 5, 9, 10, 11, 15, 17, 22, 28, 44, 56, 59, 61, 71, 79, 83, 152, 201, 205, 206, 209, 216, 219, 220, 224, 232, 239, 253, 273, 279, 284, 285, 286, 289, 306, 312, 315, 319, 331, 337, 338, 340, 341, 343, 344, 348, 356, 376, 378, 381, 383, 386, 396, 399, 401, 402, 451, 462, 483, 484, 489], "cmd": [2, 219, 220, 284, 393, 452], "certain": [2, 61, 153, 205, 241, 253, 284, 286, 289, 295, 312, 313, 323, 334, 348, 378, 384, 400, 451, 452, 454, 463, 484, 486, 494, 497, 498, 507, 509], "action": [2, 16, 40, 67, 71, 212, 262, 309, 325, 348, 378, 392, 402, 406, 417, 447, 449, 452, 454, 487], "memori": [2, 3, 4, 5, 7, 20, 22, 36, 48, 78, 79, 153, 206, 215, 241, 242, 253, 284, 312, 318, 332, 343, 345, 411, 416, 418, 452, 487, 489, 499, 502, 505, 507], "profil": [2, 22, 48, 402, 418, 448, 450, 455, 485, 487, 497, 507, 514], "small": [2, 174, 188, 193, 315, 332, 334, 472, 483, 484, 487, 494, 495, 503, 507], "enough": [2, 38, 44, 57, 140, 161, 166, 170, 206, 221, 225, 260, 289, 312, 325, 410, 411, 455, 456, 484, 495, 498, 505, 509], "don": [2, 3, 10, 20, 79, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 154, 156, 163, 205, 209, 220, 251, 284, 289, 309, 312, 332, 364, 370, 410, 411, 412, 419, 430, 434, 447, 450, 452, 454, 477, 485, 492, 507, 509, 514], "undon": 2, "so": [2, 3, 4, 5, 7, 10, 20, 21, 22, 34, 38, 44, 45, 48, 50, 78, 79, 90, 105, 130, 145, 152, 153, 154, 156, 163, 167, 170, 176, 179, 203, 205, 215, 216, 220, 221, 241, 244, 246, 248, 250, 260, 261, 284, 286, 289, 290, 293, 294, 295, 300, 304, 306, 307, 309, 312, 313, 316, 318, 319, 331, 332, 334, 338, 340, 341, 342, 343, 345, 347, 348, 349, 351, 352, 356, 368, 370, 377, 383, 384, 400, 408, 410, 411, 412, 413, 416, 418, 419, 442, 446, 448, 449, 451, 452, 453, 454, 455, 456, 462, 473, 480, 483, 484, 485, 486, 487, 490, 492, 493, 494, 495, 496, 497, 498, 503, 505, 507, 509, 512, 513, 514], "r": [2, 3, 5, 6, 7, 8, 10, 12, 16, 20, 21, 22, 26, 27, 28, 29, 33, 39, 44, 45, 46, 48, 59, 79, 93, 94, 116, 143, 152, 166, 167, 172, 176, 197, 198, 202, 205, 212, 216, 219, 220, 221, 225, 239, 241, 246, 253, 255, 257, 258, 260, 261, 262, 264, 284, 285, 289, 303, 308, 312, 313, 316, 319, 320, 322, 327, 331, 332, 333, 336, 341, 344, 345, 347, 350, 355, 364, 390, 393, 399, 400, 412, 416, 419, 449, 452, 454, 455, 462, 463, 464, 467, 470, 475, 480, 481, 482, 484, 486, 487, 492, 494, 497, 498, 499, 500, 507, 508, 509, 513], "stage": [2, 26, 239, 264, 284, 454], "diagram": [2, 26, 156, 241, 306, 416, 446, 454, 487], "come": [2, 4, 45, 66, 78, 80, 105, 166, 173, 178, 201, 202, 204, 206, 213, 239, 253, 284, 289, 333, 345, 347, 348, 363, 394, 400, 408, 419, 442, 447, 449, 451, 456, 459, 466, 471, 480, 482, 484, 487, 492, 494, 495, 497, 498, 500, 507, 509], "togeth": [2, 10, 46, 152, 202, 241, 242, 246, 289, 294, 336, 342, 349, 367, 442, 451, 454, 483, 494, 509], "end": [2, 3, 5, 7, 14, 20, 21, 22, 23, 26, 27, 46, 78, 79, 105, 153, 164, 166, 167, 170, 205, 255, 257, 264, 284, 293, 318, 342, 368, 390, 400, 401, 419, 449, 454, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 495, 497, 498, 503, 507, 509, 511], "section": [2, 3, 5, 11, 23, 26, 27, 92, 137, 138, 153, 156, 164, 166, 168, 172, 174, 175, 177, 183, 196, 198, 200, 201, 202, 203, 213, 214, 225, 239, 241, 242, 246, 253, 255, 257, 262, 264, 267, 268, 269, 284, 286, 289, 294, 295, 300, 303, 312, 318, 332, 345, 353, 416, 418, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 463, 466, 467, 470, 475, 476, 482, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 502, 503, 504, 509, 510, 511, 513, 514], "creat": [2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 26, 27, 29, 31, 32, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 59, 60, 61, 62, 63, 67, 71, 75, 76, 78, 79, 105, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 172, 174, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 211, 212, 219, 220, 224, 225, 226, 227, 235, 236, 237, 241, 242, 248, 250, 251, 255, 257, 258, 260, 261, 264, 267, 268, 269, 270, 271, 272, 275, 282, 284, 286, 289, 290, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 312, 318, 319, 325, 326, 327, 328, 329, 330, 331, 332, 335, 340, 342, 343, 345, 346, 347, 348, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 370, 376, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 446, 448, 449, 450, 451, 452, 454, 459, 466, 470, 471, 472, 478, 479, 482, 484, 485, 487, 489, 490, 492, 493, 498, 499, 500, 507, 509, 511, 512, 513, 514], "graph": [2, 27, 418, 454, 470], "across": [2, 36, 48, 57, 92, 163, 166, 172, 174, 177, 227, 312, 315, 332, 345, 352, 367, 383, 394, 410, 416, 452, 484, 486, 496, 497, 498, 502, 507, 508, 509, 513], "timenodegrouppattern": [2, 3, 5], "versionmajor": [2, 3, 5], "versionminor": [2, 3, 5], "open": [2, 3, 5, 7, 11, 46, 61, 78, 166, 167, 238, 332, 400, 405, 406, 446, 447, 448, 455, 480, 484, 485, 490, 491, 492, 498, 507, 509, 514], "isopen": [2, 3, 5], "writesystemattribut": [2, 3, 5, 16], "grablocalcommithash": [2, 3, 5], "splitdatabas": [2, 3, 5], "filenam": [2, 3, 5, 6, 7, 75, 79, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 196, 205, 369, 395, 405, 415, 416, 454], "loadc": [2, 3, 5, 492], "loadblueprint": [2, 3, 5], "loadgeometri": [2, 3, 5], "writeinputstodb": [2, 3, 5], "readinputsfromdb": [2, 3, 5], "mergehistori": [2, 3, 5], "gentimestepgroup": [2, 3, 5], "getlayout": [2, 3, 5], "gentimestep": [2, 3, 5], "genauxiliarydata": [2, 3, 5], "getauxiliarydatapath": [2, 3, 5], "kei": [2, 3, 5, 20, 27, 48, 79, 105, 145, 156, 161, 167, 170, 198, 201, 203, 220, 241, 242, 245, 246, 248, 257, 268, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 306, 309, 311, 312, 315, 325, 332, 345, 347, 358, 364, 369, 370, 375, 400, 401, 404, 408, 416, 418, 419, 437, 454, 462, 470, 471, 485, 492, 496, 497, 502, 503, 504, 505, 507, 514], "geth5group": [2, 3, 5], "hastimestep": [2, 3, 5], "writetodb": [2, 3, 5, 10, 492], "synctosharedfold": [2, 3, 5], "loadreadonli": [2, 3, 5, 509], "gethistorybyloc": [2, 3, 5], "gethistoriesbyloc": [2, 3, 5], "gethistori": [2, 3, 5, 7, 509], "h5db": [2, 3, 5, 6, 501], "initdb": [2, 3, 7, 492], "writedbeverynod": [2, 3, 7], "closedb": [2, 3, 7], "preprestartrun": [2, 3, 7], "loadstat": [2, 3, 7, 204, 205], "comparedb3": [2, 3, 14], "outputwrit": [2, 3, 4], "diffresult": [2, 3, 4], "geth5groupnam": [2, 3, 5], "packspecialdata": [2, 3, 5, 348, 509], "unpackspecialdata": [2, 3, 5, 348, 509], "collectblocknumberdens": [2, 3, 5], "jaggedarrai": [2, 3, 5, 17, 489], "layout": [2, 3, 5, 18, 221, 284, 290, 296, 318, 331, 342, 353, 401, 454, 507, 509], "replacenoneswithnonsens": [2, 3, 10], "replacenonsensewithnon": [2, 3, 10], "passivedbloadplugin": [2, 3, 509], "passthroughyaml": [2, 3, 11], "typedef": [2, 3], "group": [2, 3, 4, 5, 10, 23, 24, 27, 35, 45, 48, 153, 154, 166, 168, 170, 174, 175, 176, 179, 180, 183, 185, 194, 198, 201, 202, 203, 205, 225, 239, 241, 242, 244, 246, 253, 255, 257, 267, 270, 284, 289, 292, 293, 300, 309, 312, 319, 331, 332, 343, 348, 367, 404, 418, 449, 452, 454, 455, 467, 470, 481, 482, 487, 489, 492, 499, 500, 503, 505, 507, 509, 513], "imag": [2, 23, 24, 25, 27, 311, 318, 331, 402, 416, 418, 434, 450, 453, 471, 487], "html": [2, 22, 23, 24, 27, 32, 48, 71, 84, 102, 166, 174, 308, 348, 416, 443, 446, 450, 484, 501, 507], "htmlfile": [2, 23, 25], "tag": [2, 23, 25, 27, 156, 253, 319, 442, 456, 507], "head": [2, 23, 25, 27, 264, 332, 454, 484, 507], "bodi": [2, 23, 25, 67, 152, 483], "img": [2, 23, 25, 27], "b": [2, 11, 23, 25, 44, 50, 56, 83, 94, 96, 97, 100, 117, 137, 138, 154, 156, 160, 163, 176, 185, 201, 202, 220, 221, 224, 238, 241, 246, 253, 285, 286, 289, 302, 304, 312, 317, 331, 332, 334, 345, 349, 354, 356, 358, 364, 412, 442, 444, 449, 452, 468, 470, 471, 475, 479, 486, 487, 489, 490, 492, 494, 497, 498, 499, 503, 505, 507, 508, 510], "p": [2, 3, 23, 25, 27, 81, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 104, 105, 106, 112, 113, 114, 116, 117, 121, 137, 141, 143, 154, 164, 170, 172, 176, 177, 221, 224, 227, 228, 289, 308, 309, 312, 317, 331, 345, 347, 364, 410, 419, 442, 447, 452, 454, 470, 471, 479, 487, 489, 492, 494, 498, 502, 503, 504, 505, 507, 509, 513], "A": [2, 3, 5, 9, 10, 11, 20, 21, 23, 24, 25, 27, 28, 29, 33, 40, 44, 45, 47, 48, 56, 57, 59, 67, 71, 79, 80, 81, 84, 91, 94, 105, 106, 109, 113, 126, 138, 139, 140, 146, 152, 153, 154, 155, 156, 161, 164, 166, 167, 168, 172, 174, 176, 199, 201, 202, 203, 205, 212, 215, 217, 219, 220, 221, 225, 238, 241, 242, 246, 248, 253, 257, 284, 285, 286, 289, 291, 292, 293, 294, 296, 298, 301, 302, 304, 306, 307, 308, 309, 311, 312, 315, 316, 319, 320, 325, 331, 332, 333, 334, 335, 341, 342, 343, 344, 347, 348, 349, 351, 352, 354, 358, 367, 368, 370, 376, 378, 383, 390, 393, 396, 397, 399, 400, 401, 408, 412, 416, 418, 419, 424, 442, 444, 446, 449, 451, 454, 455, 456, 470, 478, 480, 483, 484, 486, 492, 493, 494, 496, 498, 499, 502, 503, 504, 507, 508, 509, 513], "titl": [2, 23, 24, 25, 27, 47, 48, 56, 57, 215, 275, 370, 400, 416, 418, 447, 454, 469, 470, 492, 495, 496, 497, 507], "h1": [2, 23, 25, 27], "h2": [2, 23, 25, 27, 85], "h3": [2, 23, 25], "h4": [2, 23, 25, 27], "ul": [2, 23, 25], "li": [2, 23, 25, 154, 176, 257, 307, 312, 332, 442], "style": [2, 23, 25, 48, 56, 105, 148, 156, 167, 284, 332, 345, 347, 353, 370, 377, 455, 484, 487, 507], "div": [2, 23, 25, 27, 454], "caption": [2, 23, 25, 27, 264, 454], "tbodi": [2, 23, 25], "thead": [2, 23, 25], "tr": [2, 23, 25], "th": [2, 10, 23, 25, 27, 134, 154, 176, 205, 312, 343, 419, 449, 494, 503, 505, 507, 510], "td": [2, 23, 25, 83, 116], "span": [2, 23, 25, 338, 368], "footer": [2, 23, 25], "link": [2, 23, 25, 27, 105, 164, 205, 220, 289, 293, 296, 302, 306, 309, 312, 314, 315, 316, 319, 325, 326, 332, 342, 357, 383, 396, 437, 449, 454, 455, 456, 483, 486, 498, 503, 508, 513], "encode64": [2, 23, 25, 27], "writestandardreporttempl": [2, 23, 25], "newreportutil": [2, 23, 454], "insertblueprintcont": [2, 23, 26], "insertgeneralreportcont": [2, 23, 26], "comprehensivebolcont": [2, 23, 26], "insertdesigncont": [2, 23, 26], "insertblockdesignreport": [2, 23, 26], "insertcoredesignreport": [2, 23, 26], "insertendoflifecont": [2, 23, 26], "insertblockdiagram": [2, 23, 26], "insertmetat": [2, 23, 26], "insertsettingsdata": [2, 23, 26], "getpindesignt": [2, 23, 26], "insertareafractionsreport": [2, 23, 26], "createdimensionreport": [2, 23, 26], "insertcoreandassemblymap": [2, 23, 26], "newreport": [2, 23, 26, 454, 487], "reportcont": [2, 23, 26, 27, 264, 284, 450], "reportnod": [2, 23, 27], "timeseri": [2, 23, 27, 31, 264, 450], "reportstag": [2, 23, 27, 264, 284, 454], "reportinterfac": [2, 23, 29, 48, 449], "reportingutil": [2, 23], "writewelcomehead": [2, 23, 29], "getnodenam": [2, 23, 29, 32], "getsysteminfo": [2, 23, 29, 32], "getinterfacestacksummari": [2, 23, 29], "writetightcouplingconvergencesummari": [2, 23, 29], "writeassemblymasssummari": [2, 23, 29], "writecyclesummari": [2, 23, 29], "setneutronbalancesreport": [2, 23, 29], "summarizepindesign": [2, 23, 29], "summarizepowerpeak": [2, 23, 29], "summarizepow": [2, 23, 29], "makecoredesignreport": [2, 23, 29], "makeblockdesignreport": [2, 23, 29], "makecoreandassemblymap": [2, 23, 29], "test_historytrack": [2, 34], "runtutorialnotebook": [2, 34, 35], "testhistorytrack": [2, 34, 35], "testhistorytrackernomodel": [2, 34, 35], "test_memoryprofil": [2, 34], "testmemoryprofil": [2, 34, 36], "klasscountertest": [2, 34, 36], "test_snapshot": [2, 34], "mockreactorparam": [2, 34, 37, 252, 254, 255], "mockreactor": [2, 34, 37, 165, 197, 198, 213, 252, 254, 255, 274, 275], "testsnapshotinterfac": [2, 34, 37], "dumper": [2, 38, 45, 46, 293], "visfiledump": [2, 38, 39, 45, 46], "visfileentrypoint": [2, 38, 40], "vtkmesh": [2, 38, 42, 44], "createreactorblockmesh": [2, 38, 44], "createreactorassemmesh": [2, 38, 44], "createblockmesh": [2, 38, 44], "createassemmesh": [2, 38, 44], "vtk": [2, 38, 44, 485, 486, 494, 514], "limit": [2, 3, 5, 38, 105, 156, 220, 229, 253, 257, 284, 289, 290, 313, 343, 344, 356, 408, 442, 451, 455, 484, 486, 494, 498, 502, 503, 504, 507, 510], "vtkdumper": [2, 38, 45], "xdmf": [2, 38, 43, 485, 486, 514], "xdmfdumper": [2, 38, 46], "tracker": [2, 35, 79, 418, 484, 490], "add": [2, 4, 22, 23, 26, 27, 28, 44, 47, 48, 56, 57, 59, 67, 79, 105, 152, 154, 156, 172, 174, 177, 205, 209, 246, 253, 255, 264, 284, 285, 286, 289, 306, 312, 318, 319, 325, 327, 332, 333, 342, 345, 347, 348, 349, 351, 352, 356, 363, 367, 368, 370, 378, 384, 399, 400, 402, 415, 416, 418, 442, 446, 447, 448, 449, 452, 454, 455, 470, 480, 485, 486, 487, 489, 492, 494, 497, 499, 504, 507, 513, 514], "eol": [2, 3, 33, 79, 205, 209, 219, 284, 449, 454, 492, 507, 509], "track": [2, 3, 4, 7, 22, 45, 48, 154, 164, 168, 220, 246, 253, 264, 286, 289, 312, 319, 332, 347, 370, 397, 442, 446, 456, 486, 487, 507], "detailed_assembly_flag": [2, 20], "adddetailassembliesbol": [2, 20], "addalldetailedassem": [2, 20], "adddetailassemsbyassemnum": [2, 20], "gettrackedparam": [2, 20], "adddetailassembli": [2, 20], "getdetailassembli": [2, 20], "getdetailblock": [2, 20], "filtertimeindic": [2, 20], "writeassemhistori": [2, 20], "preloadblockhistoryv": [2, 20], "unloadblockhistoryv": [2, 20], "getblockhistoryv": [2, 20], "gettimestep": [2, 20], "cleanarmifil": [2, 21], "cleanlastcyclefil": [2, 21], "printcurrentmemoryst": [2, 22], "displaymemoryusag": [2, 22], "checkforduplicateobjectsonarmimodel": [2, 22], "getreferr": [2, 22], "countobject": [2, 22], "minprocessmemoryinmb": [2, 22, 505], "maxprocessmemoryinmb": [2, 22, 505], "printusag": [2, 22], "activatedefaultsnapshot": [2, 33], "respons": [3, 10, 48, 56, 152, 257, 284, 291, 295, 307, 309, 317, 332, 349, 456, 492, 494, 507], "disk": [3, 48, 166, 205, 215, 493], "progress": [3, 10, 215, 484, 509], "period": [3, 78, 92, 154, 205, 285, 294, 335, 357, 455, 470, 478, 498, 503, 505, 507, 513], "primari": [3, 7, 61, 79, 152, 183, 205, 206, 225, 284, 285, 316, 317, 332, 334, 449, 451, 452, 455, 492, 494, 497, 502, 505, 507, 509], "output": [3, 4, 5, 21, 22, 45, 47, 48, 62, 66, 67, 69, 79, 145, 146, 174, 176, 189, 205, 215, 220, 253, 275, 289, 294, 312, 318, 319, 331, 340, 343, 353, 370, 382, 384, 397, 405, 406, 411, 413, 419, 425, 431, 437, 442, 446, 449, 453, 454, 484, 486, 487, 493, 497, 499, 501, 506, 507, 513], "follow": [3, 4, 10, 20, 33, 145, 153, 164, 166, 202, 204, 205, 213, 220, 221, 229, 246, 248, 284, 309, 312, 315, 318, 325, 331, 332, 334, 338, 341, 349, 377, 383, 411, 412, 415, 417, 419, 442, 446, 447, 449, 451, 452, 454, 455, 456, 484, 485, 492, 493, 494, 496, 498, 499, 501, 507, 508, 509, 510, 511, 513, 514], "analysi": [3, 5, 20, 22, 33, 48, 56, 80, 166, 177, 204, 205, 213, 215, 228, 229, 238, 246, 284, 367, 401, 413, 418, 449, 451, 454, 463, 480, 483, 492, 494, 497, 498, 499, 507, 508, 509], "restart": [3, 5, 7, 16, 21, 209, 219, 220, 253, 295, 400, 402, 449, 487, 509], "select": [3, 5, 38, 79, 166, 221, 241, 242, 246, 275, 295, 348, 369, 400, 411, 412, 416, 428, 437, 471, 484, 492, 496, 507], "relat": [3, 5, 16, 34, 45, 47, 51, 56, 61, 78, 140, 154, 170, 192, 201, 213, 230, 233, 241, 247, 265, 273, 280, 289, 312, 331, 345, 347, 348, 349, 372, 373, 374, 402, 412, 415, 451, 486, 488, 490, 494, 497, 502, 503, 507, 511, 513], "associ": [3, 5, 18, 27, 45, 48, 50, 64, 140, 145, 152, 154, 165, 213, 239, 246, 291, 312, 332, 333, 336, 342, 343, 345, 347, 348, 349, 378, 400, 449, 451, 478, 494, 502, 507, 509], "repeat": [3, 168, 175, 219, 220, 225, 284, 318, 319, 332, 343, 403, 412, 416, 442, 450, 454, 484, 486, 507, 510], "yourself": [3, 90, 153, 416, 455], "dry": [3, 5, 81, 507], "practic": [3, 5, 90, 163, 284, 309, 325, 348, 349, 378, 408, 448, 450, 452, 456, 484, 494, 507, 509], "share": [3, 33, 170, 199, 205, 206, 215, 246, 286, 323, 345, 349, 383, 401, 452, 498, 499, 507], "major": [3, 205, 213, 290, 343, 345, 418, 454, 456, 484], "you": [3, 5, 7, 8, 11, 20, 21, 22, 33, 40, 48, 56, 57, 59, 67, 71, 79, 90, 103, 105, 136, 153, 154, 155, 156, 163, 164, 166, 170, 173, 174, 179, 192, 199, 201, 205, 213, 215, 220, 221, 241, 242, 248, 253, 284, 286, 289, 294, 296, 300, 306, 309, 312, 313, 332, 333, 341, 342, 349, 350, 352, 356, 368, 370, 378, 393, 400, 401, 410, 412, 415, 416, 417, 418, 419, 426, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 477, 478, 479, 482, 484, 485, 492, 493, 494, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 513, 514], "1": [3, 10, 15, 16, 22, 27, 35, 44, 50, 55, 57, 66, 71, 75, 78, 79, 81, 82, 83, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 109, 111, 112, 113, 114, 117, 121, 126, 134, 136, 137, 138, 140, 141, 142, 143, 147, 148, 152, 154, 156, 160, 164, 167, 168, 170, 173, 174, 175, 176, 180, 183, 185, 188, 193, 198, 201, 205, 212, 220, 221, 238, 239, 241, 242, 248, 253, 255, 257, 262, 284, 286, 289, 294, 298, 301, 302, 304, 307, 308, 309, 311, 312, 316, 318, 319, 323, 325, 327, 332, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 348, 353, 355, 356, 357, 358, 362, 367, 376, 377, 378, 392, 399, 400, 401, 402, 404, 408, 410, 411, 412, 417, 418, 419, 421, 427, 441, 442, 449, 454, 455, 456, 462, 463, 464, 470, 472, 473, 474, 477, 478, 480, 484, 489, 491, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 507, 510, 511, 513], "origin": [3, 4, 5, 9, 15, 40, 46, 48, 56, 152, 153, 155, 160, 166, 191, 192, 203, 205, 206, 239, 241, 251, 267, 289, 294, 306, 312, 315, 319, 325, 327, 330, 331, 332, 334, 338, 341, 342, 377, 381, 400, 401, 405, 410, 452, 456, 478, 484, 487, 494, 498, 499, 503, 504, 507, 509, 513], "were": [3, 4, 5, 56, 78, 152, 166, 206, 207, 217, 220, 225, 246, 284, 289, 296, 309, 312, 323, 331, 332, 333, 334, 345, 349, 384, 454, 455, 484, 486, 487, 488, 492, 494, 499, 507, 509], "sql": [3, 79], "2": [3, 4, 10, 15, 22, 27, 35, 37, 55, 57, 78, 79, 84, 85, 91, 93, 94, 96, 97, 100, 105, 109, 111, 113, 114, 124, 126, 134, 136, 137, 138, 140, 147, 152, 153, 154, 155, 156, 160, 164, 168, 172, 173, 176, 179, 180, 189, 201, 202, 212, 220, 221, 238, 239, 241, 242, 248, 251, 253, 289, 294, 302, 306, 307, 308, 309, 312, 318, 319, 323, 325, 327, 332, 334, 335, 336, 338, 341, 342, 343, 344, 345, 348, 353, 355, 356, 357, 358, 362, 364, 367, 378, 393, 400, 401, 404, 410, 411, 412, 417, 418, 419, 421, 426, 427, 438, 441, 442, 444, 449, 454, 455, 462, 464, 470, 471, 472, 474, 475, 477, 479, 480, 484, 491, 492, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 507, 509, 510, 513], "storag": [3, 7, 24, 78, 284, 342, 345, 352, 363, 418, 507], "wa": [3, 4, 5, 7, 11, 38, 78, 81, 93, 105, 152, 156, 160, 166, 167, 170, 185, 188, 192, 193, 198, 205, 220, 221, 228, 239, 257, 284, 289, 290, 296, 309, 312, 318, 332, 334, 341, 342, 343, 351, 377, 378, 384, 395, 402, 412, 415, 444, 454, 455, 456, 478, 484, 486, 487, 488, 492, 494, 497, 498, 499, 502, 507, 508, 509], "hdf5": [3, 4, 5, 9, 12, 35, 46, 78, 348, 408, 486, 489, 494, 497, 509], "requir": [3, 15, 21, 32, 33, 35, 38, 40, 46, 50, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 105, 152, 155, 156, 164, 201, 205, 212, 215, 220, 224, 225, 241, 242, 243, 246, 250, 253, 257, 284, 285, 286, 289, 291, 293, 294, 295, 300, 308, 312, 313, 315, 318, 319, 320, 323, 332, 334, 336, 337, 343, 345, 348, 353, 361, 367, 375, 376, 382, 383, 390, 393, 399, 406, 410, 413, 442, 446, 447, 448, 452, 454, 455, 480, 483, 485, 486, 487, 488, 490, 494, 495, 496, 498, 499, 502, 505, 507, 512, 513, 514], "less": [3, 50, 105, 156, 164, 167, 168, 205, 221, 289, 308, 309, 315, 318, 332, 335, 340, 356, 402, 410, 411, 412, 418, 419, 442, 454, 455, 486, 487, 494, 497, 507, 509], "extern": [3, 79, 81, 170, 176, 205, 215, 219, 241, 242, 253, 275, 284, 332, 404, 412, 449, 451, 455, 483, 484, 487, 494, 503, 507, 509], "infrastructur": [3, 284, 448, 450, 484], "howev": [3, 5, 8, 9, 10, 50, 79, 153, 196, 241, 289, 295, 306, 312, 319, 332, 334, 340, 345, 348, 356, 393, 408, 419, 451, 453, 454, 455, 492, 494, 498, 507, 513], "did": [3, 4, 309, 342, 442, 486, 499], "ghost": 3, "could": [3, 4, 5, 38, 48, 50, 56, 57, 79, 105, 153, 161, 163, 164, 196, 199, 202, 205, 213, 221, 239, 242, 246, 253, 257, 289, 290, 295, 309, 315, 318, 332, 344, 345, 348, 376, 400, 410, 411, 412, 413, 415, 416, 442, 454, 456, 484, 487, 492, 494, 497, 499, 502, 503, 507, 509, 513], "long": [3, 5, 33, 40, 67, 71, 105, 174, 205, 284, 289, 312, 341, 400, 401, 402, 419, 437, 447, 454, 456, 484, 494], "dimens": [3, 4, 5, 9, 26, 29, 50, 57, 79, 93, 98, 105, 168, 238, 241, 286, 289, 290, 293, 294, 300, 306, 307, 309, 311, 312, 315, 323, 325, 338, 341, 343, 348, 355, 357, 390, 401, 449, 474, 483, 486, 487, 490, 492, 498, 503, 507, 508, 511], "consist": [3, 48, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 152, 156, 160, 166, 167, 170, 172, 174, 177, 185, 201, 213, 215, 241, 257, 286, 289, 295, 312, 318, 325, 332, 340, 341, 356, 358, 383, 401, 419, 428, 442, 452, 455, 483, 484, 486, 487, 490, 494, 498, 503, 507, 513], "inconveni": 3, "prone": [3, 313, 334, 335, 349, 484], "kept": [3, 105, 334], "schema": [3, 242, 284, 300, 369, 375, 376, 381], "permit": [3, 5, 10, 286, 312, 408, 486], "entir": [3, 5, 11, 79, 105, 167, 205, 224, 241, 284, 289, 291, 294, 312, 316, 332, 335, 352, 370, 405, 415, 419, 421, 442, 455, 456, 464, 498, 499, 505, 507, 509], "written": [3, 4, 5, 7, 9, 16, 20, 45, 46, 48, 56, 59, 166, 167, 171, 173, 175, 176, 178, 179, 180, 184, 185, 189, 191, 192, 212, 303, 342, 348, 363, 370, 416, 454, 455, 456, 484, 486, 487, 492, 499, 507], "recov": [3, 10, 66, 325, 509], "just": [3, 5, 6, 8, 10, 11, 20, 22, 34, 46, 47, 50, 59, 79, 80, 105, 114, 116, 145, 152, 153, 155, 163, 164, 166, 199, 206, 209, 217, 242, 253, 284, 285, 286, 289, 290, 294, 304, 306, 309, 312, 315, 325, 331, 332, 340, 342, 343, 345, 356, 365, 368, 370, 397, 399, 400, 410, 411, 412, 416, 419, 433, 440, 442, 447, 451, 452, 454, 455, 456, 473, 484, 487, 492, 494, 496, 497, 498, 499, 507, 508, 509, 510], "improv": [3, 45, 48, 163, 284, 289, 334, 486, 487, 490, 491, 507, 510], "strategi": [3, 46], "larg": [3, 15, 79, 86, 145, 221, 239, 242, 250, 284, 312, 313, 331, 332, 364, 383, 406, 407, 410, 416, 449, 452, 455, 484, 486, 494, 498, 502, 507, 508], "attribut": [3, 4, 5, 9, 10, 11, 25, 27, 56, 67, 79, 105, 152, 154, 156, 163, 168, 170, 176, 201, 202, 203, 241, 242, 246, 262, 267, 268, 284, 285, 290, 291, 292, 293, 294, 295, 296, 309, 312, 315, 319, 325, 330, 331, 332, 333, 336, 345, 347, 348, 349, 363, 375, 384, 415, 417, 419, 433, 441, 442, 447, 449, 452, 455, 486, 487, 488, 492, 493, 494, 507, 509, 513], "special": [3, 4, 5, 10, 33, 47, 80, 98, 105, 156, 163, 164, 167, 174, 205, 220, 241, 242, 272, 284, 286, 293, 308, 312, 332, 345, 348, 368, 393, 402, 415, 419, 442, 446, 449, 454, 456, 483, 486, 492, 494, 498, 509], "string": [3, 5, 8, 11, 27, 32, 34, 40, 57, 67, 71, 79, 80, 156, 167, 173, 174, 178, 179, 180, 196, 202, 205, 206, 212, 215, 220, 242, 257, 264, 284, 286, 289, 291, 292, 293, 294, 295, 296, 301, 306, 309, 312, 325, 332, 334, 335, 340, 341, 345, 348, 355, 360, 368, 370, 375, 376, 377, 381, 383, 397, 400, 401, 402, 404, 411, 412, 414, 416, 417, 419, 437, 442, 452, 455, 456, 486, 498, 502, 503, 507, 509], "symbol": [3, 105, 153, 154, 155, 156, 158, 404], "c00n00": [3, 5, 492], "attr": [3, 4, 5, 25, 309, 312, 348, 349, 415], "5_linkeddim": 3, "support": [3, 5, 6, 9, 10, 11, 20, 38, 44, 46, 48, 77, 79, 80, 87, 153, 156, 160, 163, 164, 166, 206, 207, 241, 246, 284, 289, 296, 319, 325, 338, 345, 348, 351, 353, 357, 368, 378, 397, 401, 408, 411, 419, 442, 449, 455, 456, 484, 486, 487, 489, 490, 494, 499, 507, 509, 510, 511, 513], "copi": [3, 5, 16, 33, 48, 79, 105, 152, 172, 174, 177, 205, 215, 230, 242, 244, 248, 253, 267, 275, 289, 294, 312, 318, 331, 332, 342, 367, 370, 381, 400, 405, 411, 413, 415, 425, 446, 451, 455, 484, 486, 487, 488, 490, 497, 498, 499, 507], "node": [3, 5, 7, 10, 11, 16, 20, 21, 22, 27, 28, 29, 33, 36, 45, 61, 75, 78, 79, 152, 165, 176, 191, 202, 205, 206, 209, 212, 220, 239, 241, 253, 255, 257, 260, 286, 293, 295, 312, 332, 377, 393, 399, 400, 403, 406, 416, 418, 449, 452, 454, 483, 489, 492, 494, 503, 507, 509, 510, 512], "dataset": [3, 4, 5, 9, 46, 191, 509], "anoth": [3, 5, 33, 44, 48, 56, 57, 79, 134, 138, 145, 161, 164, 184, 196, 203, 220, 221, 242, 253, 255, 284, 289, 306, 309, 312, 313, 315, 318, 319, 326, 331, 341, 342, 343, 348, 378, 400, 412, 418, 419, 430, 442, 452, 454, 455, 456, 480, 484, 485, 490, 497, 504, 507, 509, 511, 514], "refer": [3, 4, 5, 27, 48, 80, 81, 82, 84, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 112, 113, 117, 134, 137, 138, 140, 141, 143, 152, 153, 154, 155, 156, 167, 175, 196, 220, 242, 251, 286, 289, 294, 309, 312, 315, 316, 317, 332, 336, 356, 357, 370, 383, 400, 416, 442, 446, 449, 451, 452, 454, 456, 457, 482, 485, 487, 488, 489, 498, 500, 503, 505, 507, 509, 511, 514], "maintain": [3, 105, 139, 155, 156, 170, 205, 286, 312, 325, 349, 428, 463, 484, 485, 486, 507, 514], "previou": [3, 5, 21, 79, 145, 176, 189, 204, 209, 220, 221, 224, 253, 284, 289, 312, 376, 400, 416, 442, 449, 486, 494, 499, 503, 507, 510, 513], "old": [3, 4, 5, 17, 145, 146, 148, 150, 167, 284, 290, 296, 309, 312, 318, 348, 351, 353, 369, 376, 399, 405, 455, 484, 486, 487, 488, 489, 507, 509, 510], "cannot": [3, 4, 79, 80, 105, 152, 156, 204, 241, 242, 306, 309, 312, 313, 345, 346, 348, 349, 350, 357, 377, 383, 400, 412, 416, 417, 419, 427, 492, 494, 507], "compress": 3, "locat": [3, 5, 9, 10, 17, 18, 40, 44, 48, 56, 78, 79, 148, 215, 220, 221, 224, 225, 227, 228, 284, 285, 286, 289, 294, 296, 299, 309, 312, 316, 317, 325, 327, 332, 333, 335, 336, 337, 338, 340, 341, 343, 344, 345, 348, 352, 353, 355, 356, 362, 364, 366, 367, 370, 383, 401, 407, 428, 442, 449, 471, 485, 486, 487, 490, 492, 497, 499, 502, 503, 505, 507, 509, 514], "allow": [3, 4, 5, 7, 8, 11, 22, 40, 46, 48, 56, 57, 61, 67, 71, 79, 80, 105, 152, 153, 160, 163, 164, 166, 168, 174, 202, 205, 215, 219, 220, 221, 246, 253, 283, 284, 289, 290, 293, 295, 301, 306, 312, 318, 320, 331, 332, 333, 334, 342, 345, 347, 348, 368, 369, 375, 376, 377, 378, 400, 401, 408, 412, 413, 415, 419, 447, 448, 449, 451, 454, 455, 456, 463, 471, 484, 486, 487, 490, 497, 498, 499, 507, 509, 510], "multiindex": 3, "4": [3, 5, 10, 22, 35, 55, 57, 78, 79, 81, 82, 83, 84, 85, 91, 109, 112, 113, 126, 137, 138, 140, 153, 154, 156, 160, 164, 167, 176, 185, 220, 221, 238, 239, 242, 289, 294, 302, 318, 319, 327, 332, 334, 335, 338, 341, 343, 348, 356, 357, 358, 362, 400, 411, 419, 427, 438, 441, 448, 452, 462, 470, 471, 473, 478, 480, 484, 491, 492, 495, 496, 497, 498, 499, 507, 510, 511, 513], "includ": [3, 5, 15, 27, 45, 48, 57, 62, 79, 80, 109, 138, 145, 153, 154, 164, 166, 170, 176, 183, 201, 205, 213, 216, 220, 238, 241, 242, 246, 253, 262, 264, 284, 289, 294, 295, 309, 312, 315, 319, 331, 332, 334, 343, 345, 346, 349, 352, 358, 363, 364, 365, 373, 382, 400, 404, 408, 415, 419, 442, 446, 448, 449, 451, 455, 456, 463, 477, 480, 483, 484, 486, 487, 492, 494, 498, 501, 503, 507, 512], "compos": [3, 4, 24, 56, 335, 345, 351], "multipl": [3, 5, 27, 29, 48, 50, 51, 59, 62, 73, 78, 92, 152, 164, 176, 205, 215, 224, 241, 242, 284, 289, 293, 299, 304, 309, 312, 315, 317, 318, 319, 325, 326, 331, 332, 336, 342, 345, 356, 357, 360, 364, 367, 378, 397, 400, 412, 438, 452, 454, 455, 456, 484, 487, 492, 494, 498, 502, 503, 504, 505, 507, 508, 513], "have": [3, 4, 5, 7, 10, 14, 15, 16, 17, 18, 20, 27, 31, 32, 34, 35, 36, 37, 42, 43, 45, 46, 47, 48, 50, 54, 55, 56, 59, 60, 75, 76, 77, 78, 79, 80, 90, 105, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 145, 148, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 170, 176, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 205, 209, 211, 212, 213, 215, 219, 220, 221, 224, 225, 226, 227, 228, 235, 236, 237, 241, 242, 246, 250, 251, 255, 257, 260, 261, 264, 267, 268, 269, 270, 271, 272, 275, 282, 284, 286, 289, 290, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 312, 315, 316, 317, 318, 319, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 338, 340, 342, 343, 345, 347, 348, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 376, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 411, 412, 416, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 477, 478, 483, 484, 485, 487, 490, 492, 493, 494, 497, 498, 499, 503, 505, 507, 508, 509, 510, 511, 513, 514], "effici": [3, 10, 57, 153, 163, 201, 242, 312, 330, 332, 335, 343, 347, 401, 463, 484, 487, 490, 498], "mean": [3, 4, 10, 93, 96, 97, 98, 100, 167, 215, 221, 242, 260, 289, 312, 334, 341, 356, 370, 400, 410, 412, 449, 451, 455, 456, 484, 486, 498, 499, 502, 503, 507], "extract": [3, 5, 48, 66, 215, 220, 248, 258, 299, 312, 449, 483, 497], "pathlik": [3, 5, 6, 7], "serial": [3, 4, 5, 10, 152, 167, 239, 242, 285, 286, 291, 292, 293, 312, 345, 347, 348, 360, 363, 375, 376, 389, 486, 487, 490, 509], "push": [3, 5, 238, 356, 451, 455, 456, 486, 503], "aid": [3, 5, 213, 334, 345, 348, 352, 376, 486, 503], "pack": [3, 5, 10, 285, 289, 312, 343, 345, 348, 363, 486, 507], "unpack": [3, 5, 9, 10, 17, 48, 285, 312, 345, 348, 363, 411, 419, 486], "structur": [3, 4, 5, 9, 50, 56, 79, 87, 93, 105, 153, 154, 156, 163, 166, 167, 168, 170, 173, 174, 175, 178, 179, 180, 205, 207, 214, 215, 219, 220, 242, 244, 248, 253, 258, 270, 284, 285, 286, 290, 294, 295, 296, 320, 331, 332, 333, 334, 336, 340, 344, 345, 347, 351, 359, 375, 401, 450, 468, 470, 483, 484, 486, 487, 490, 492, 494, 499, 503, 505, 507, 513], "relationship": [3, 5, 336, 357, 511], "non": [3, 4, 5, 9, 17, 32, 78, 79, 105, 152, 167, 168, 202, 217, 224, 228, 241, 242, 253, 255, 258, 260, 270, 284, 286, 289, 294, 296, 299, 306, 308, 309, 312, 318, 325, 330, 331, 332, 335, 342, 343, 347, 348, 351, 356, 381, 403, 408, 413, 414, 416, 428, 447, 456, 487, 489, 497, 503, 507, 509, 511], "doc": [3, 5, 22, 61, 93, 242, 285, 293, 312, 408, 417, 446, 449, 451, 455, 456, 469, 487, 492, 494, 499, 507], "w": [3, 5, 6, 12, 81, 84, 91, 93, 94, 96, 97, 100, 102, 105, 113, 114, 132, 133, 134, 137, 138, 140, 143, 147, 154, 156, 167, 238, 248, 302, 341, 364, 419, 442, 484, 492, 496, 497, 502, 503, 505], "compil": [3, 5, 290, 347, 349, 419, 446], "d": [3, 5, 20, 44, 80, 94, 140, 143, 154, 163, 164, 165, 168, 176, 220, 221, 284, 285, 286, 293, 294, 302, 309, 312, 313, 332, 334, 336, 337, 338, 341, 342, 343, 344, 353, 354, 358, 368, 419, 442, 444, 447, 449, 452, 455, 463, 464, 471, 472, 474, 484, 485, 492, 494, 498, 503, 507, 514], "n": [3, 5, 15, 77, 79, 84, 91, 93, 94, 114, 126, 136, 137, 147, 154, 164, 167, 172, 176, 177, 179, 201, 212, 238, 239, 289, 298, 301, 302, 304, 308, 309, 312, 319, 331, 337, 338, 341, 343, 344, 348, 358, 393, 400, 411, 416, 419, 426, 441, 448, 452, 455, 468, 469, 475, 476, 480, 484, 486, 490, 492, 496, 498, 503, 505, 507, 509], "try": [3, 5, 11, 29, 36, 105, 201, 220, 224, 253, 286, 289, 295, 300, 335, 345, 368, 370, 383, 393, 412, 415, 417, 424, 426, 449, 452, 455, 456, 477, 484, 492, 494, 496, 507], "local": [3, 5, 15, 73, 78, 215, 253, 289, 336, 342, 343, 368, 448, 452, 484, 486, 487, 494, 497, 503], "git": [3, 5, 419, 446, 455, 456, 484, 485, 487, 494, 514], "commit": [3, 5, 15, 446, 448, 450, 455, 494], "sure": [3, 5, 59, 67, 126, 150, 160, 166, 183, 192, 225, 268, 284, 289, 299, 300, 302, 304, 312, 345, 349, 356, 357, 358, 360, 364, 367, 378, 380, 381, 384, 393, 394, 395, 396, 408, 421, 425, 427, 434, 446, 451, 454, 455, 456, 484, 487, 494, 498, 499, 507], "doesn": [3, 5, 7, 21, 48, 56, 94, 95, 201, 202, 203, 205, 206, 289, 290, 309, 312, 318, 341, 345, 347, 364, 383, 411, 415, 419, 425, 446, 451, 456, 494, 498, 499, 507], "instal": [3, 5, 393, 426, 446, 448, 453, 454, 456, 484, 486, 493, 494, 506], "Or": [3, 5, 333, 345, 368, 456, 485, 507, 513, 514], "simpli": [3, 4, 5, 22, 79, 152, 155, 161, 185, 215, 220, 221, 284, 312, 343, 345, 356, 449, 452, 484, 492, 498, 499, 507], "insid": [3, 5, 22, 52, 75, 220, 229, 241, 242, 284, 286, 289, 306, 307, 312, 318, 326, 342, 343, 399, 401, 439, 483, 494, 498, 503, 507, 509, 513], "repo": [3, 5, 105, 448, 455, 456, 494], "hash": [3, 5, 15, 284, 331, 400, 456, 487, 492], "unknown": [3, 5, 11, 153, 154, 348, 490, 509], "completedsuccessfulli": [3, 5], "cleanup": [3, 5, 21, 78, 156, 312, 487], "convers": [3, 4, 5, 54, 105, 164, 168, 173, 202, 213, 253, 295, 312, 313, 318, 319, 320, 326, 330, 331, 332, 335, 341, 444, 461, 465, 482, 486, 487, 495, 500, 503, 505, 507], "keeptimestep": [3, 5], "tupl": [3, 4, 5, 7, 9, 10, 20, 22, 57, 71, 79, 84, 91, 105, 113, 138, 140, 155, 163, 205, 215, 220, 284, 286, 289, 312, 325, 332, 335, 336, 337, 338, 340, 341, 342, 343, 344, 347, 348, 376, 377, 404, 411, 412, 416, 419, 437, 442, 455, 503, 504, 507, 509], "discard": [3, 5, 203, 241, 318, 451, 487], "except": [3, 5, 36, 78, 152, 156, 160, 167, 176, 179, 201, 205, 284, 285, 289, 325, 334, 345, 347, 348, 360, 376, 377, 392, 403, 405, 408, 417, 423, 425, 442, 450, 456, 477, 484, 486, 498], "step": [3, 4, 5, 7, 15, 20, 46, 47, 152, 173, 178, 179, 180, 205, 212, 215, 219, 255, 289, 296, 312, 325, 331, 332, 336, 338, 340, 341, 343, 348, 355, 400, 412, 441, 446, 449, 451, 475, 484, 486, 487, 492, 494, 497, 498, 502, 503, 507, 509, 512, 513], "retain": [3, 5, 9, 40, 67, 71, 79, 196, 220, 306, 312, 318, 348, 358, 377, 394, 486, 509], "separ": [3, 5, 24, 46, 56, 60, 80, 163, 205, 213, 242, 246, 312, 319, 330, 331, 332, 334, 343, 400, 406, 415, 416, 419, 437, 455, 484, 485, 487, 494, 498, 499, 507, 512, 514], "exot": [3, 5], "analys": [3, 5, 49, 56, 201, 334, 449, 458, 461, 482, 484, 494, 498, 500, 507], "each": [3, 5, 7, 9, 10, 20, 27, 28, 33, 44, 46, 48, 56, 57, 73, 78, 79, 83, 152, 154, 155, 156, 163, 166, 167, 168, 170, 176, 180, 203, 205, 206, 212, 220, 221, 231, 239, 241, 244, 246, 257, 263, 278, 284, 286, 289, 291, 292, 295, 306, 307, 309, 311, 312, 316, 317, 318, 319, 320, 325, 331, 332, 334, 336, 337, 342, 343, 345, 347, 348, 349, 356, 364, 367, 370, 375, 376, 378, 395, 400, 401, 402, 410, 412, 413, 416, 418, 419, 437, 442, 449, 451, 452, 454, 455, 456, 462, 463, 491, 492, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 507, 509, 510, 511, 513], "someth": [3, 5, 22, 33, 34, 47, 80, 152, 161, 192, 202, 205, 289, 312, 319, 332, 334, 340, 345, 370, 383, 442, 448, 449, 452, 454, 455, 456, 494, 498, 499, 507], "nuanc": [3, 5, 456], "equilibrium": [3, 5, 20, 204, 207, 257, 289, 353, 385, 484, 498, 503, 505, 507], "cycl": [3, 5, 7, 16, 20, 21, 22, 28, 29, 33, 37, 75, 79, 134, 135, 165, 176, 204, 205, 212, 213, 216, 218, 219, 220, 222, 225, 227, 228, 239, 241, 246, 253, 255, 257, 260, 332, 348, 353, 369, 370, 385, 393, 399, 400, 404, 412, 416, 418, 441, 442, 449, 452, 454, 456, 471, 478, 479, 483, 484, 487, 489, 492, 494, 498, 499, 502, 503, 505, 509, 510, 512], "converg": [3, 5, 51, 79, 165, 166, 180, 184, 212, 213, 221, 253, 257, 322, 331, 375, 385, 498, 505, 510], "At": [3, 4, 5, 20, 33, 205, 218, 284, 290, 315, 323, 356, 449, 454, 455, 491, 497, 509], "last": [3, 5, 152, 153, 176, 202, 205, 209, 221, 253, 320, 336, 340, 402, 410, 411, 419, 442, 452, 487, 489, 503, 507, 509], "wherea": [3, 5, 338, 343, 507], "constitut": [3, 5, 284, 312, 451, 513], "typic": [3, 4, 5, 21, 56, 61, 79, 83, 105, 154, 156, 170, 201, 202, 219, 220, 229, 241, 242, 244, 246, 248, 253, 284, 289, 295, 308, 309, 312, 316, 338, 345, 348, 369, 392, 449, 451, 483, 484, 492, 494, 498, 502, 507, 509], "further": [3, 5, 246, 319, 332, 347, 401, 419, 452, 454], "collect": [3, 4, 5, 11, 22, 27, 29, 33, 45, 46, 47, 48, 56, 61, 79, 152, 167, 201, 202, 205, 239, 241, 242, 246, 248, 251, 257, 264, 267, 284, 286, 289, 309, 312, 333, 335, 336, 342, 345, 347, 348, 367, 394, 404, 408, 412, 416, 447, 449, 451, 452, 454, 468, 470, 472, 480, 484, 487, 492, 494, 495, 496, 507, 509], "back": [3, 5, 40, 48, 49, 56, 79, 166, 189, 215, 221, 244, 253, 272, 275, 312, 319, 325, 331, 334, 345, 347, 348, 367, 370, 376, 381, 405, 412, 413, 425, 452, 456, 484, 486, 487, 494, 498, 507, 509], "like": [3, 4, 5, 7, 9, 10, 20, 21, 22, 29, 34, 47, 48, 50, 70, 79, 80, 105, 145, 148, 153, 155, 161, 163, 166, 170, 202, 203, 205, 207, 215, 216, 220, 221, 241, 242, 246, 248, 253, 284, 286, 289, 290, 293, 294, 296, 311, 312, 313, 318, 319, 325, 331, 332, 333, 335, 338, 340, 341, 342, 345, 349, 352, 356, 361, 362, 369, 370, 377, 378, 400, 401, 411, 412, 413, 417, 419, 433, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 470, 484, 485, 486, 487, 492, 494, 496, 497, 498, 503, 507, 509, 513, 514], "Will": [3, 5, 7, 50, 79, 103, 205, 220, 248, 257, 284, 289, 309, 312, 319, 332, 402, 416, 492, 497, 507], "interpos": [3, 5], "h5": [3, 4, 5, 8, 15, 27, 492, 494, 501, 507, 509], "extens": [3, 5, 27, 44, 46, 221, 284, 286, 319, 402, 408, 418, 486, 487, 490, 503, 507], "handleinvalid": [3, 5, 369, 370, 377], "guarante": [3, 5, 10, 189, 246, 338, 405, 452, 503], "here": [3, 5, 9, 15, 32, 45, 48, 61, 67, 79, 80, 146, 153, 154, 156, 163, 167, 168, 173, 175, 178, 189, 198, 201, 206, 207, 213, 215, 220, 239, 241, 246, 253, 257, 284, 290, 294, 295, 300, 306, 309, 312, 313, 319, 323, 325, 330, 332, 333, 340, 341, 342, 356, 368, 376, 395, 401, 408, 442, 447, 451, 452, 454, 455, 456, 462, 470, 476, 477, 483, 484, 492, 494, 495, 496, 498, 499, 501, 503, 506, 507, 509], "usabl": [3, 5, 433], "vastli": [3, 5], "futur": [3, 4, 5, 20, 45, 48, 50, 79, 80, 207, 242, 284, 289, 290, 294, 296, 332, 334, 335, 347, 358, 408, 419, 442, 499, 507], "primarili": [3, 5, 105, 168, 220, 484], "replac": [3, 5, 10, 11, 80, 220, 225, 284, 289, 296, 309, 312, 332, 335, 342, 348, 353, 410, 419, 442, 480, 486, 487, 489, 498, 507], "csstring": [3, 5], "geomstr": [3, 5, 335], "bpstring": [3, 5], "goal": [3, 5, 9, 335, 364, 412, 455, 456, 484, 492], "ani": [3, 4, 5, 7, 10, 11, 16, 20, 21, 22, 23, 28, 32, 33, 56, 59, 63, 66, 77, 78, 79, 80, 83, 95, 105, 152, 154, 156, 166, 167, 179, 201, 202, 205, 206, 212, 219, 220, 221, 225, 228, 238, 239, 241, 242, 246, 248, 253, 257, 262, 283, 284, 286, 289, 295, 296, 302, 306, 308, 309, 311, 312, 315, 316, 332, 333, 334, 336, 341, 342, 343, 345, 347, 348, 349, 350, 351, 353, 356, 357, 363, 364, 367, 368, 370, 373, 383, 384, 390, 393, 394, 399, 400, 401, 405, 410, 416, 418, 419, 433, 442, 446, 448, 449, 451, 452, 454, 455, 456, 479, 480, 484, 485, 486, 487, 492, 494, 495, 496, 498, 499, 503, 505, 507, 509, 510, 514], "particular": [3, 5, 15, 24, 33, 47, 48, 79, 80, 90, 117, 155, 163, 164, 203, 205, 215, 220, 238, 239, 241, 242, 289, 295, 306, 312, 332, 333, 342, 345, 367, 373, 376, 419, 448, 456, 485, 492, 496, 499, 514], "veri": [3, 4, 5, 14, 16, 21, 22, 33, 83, 115, 153, 164, 174, 175, 204, 209, 213, 284, 289, 312, 313, 331, 332, 334, 340, 345, 348, 370, 378, 412, 442, 449, 451, 452, 455, 456, 471, 484, 489, 492, 494, 497, 498, 499, 507, 513], "dont": [3, 5, 7], "easi": [3, 5, 20, 253, 286, 342, 343, 412, 442, 451, 454, 455, 456, 484, 498, 507], "hard": [3, 5, 32, 43, 46, 78, 80, 215, 300, 334, 450, 484, 509], "geom": [3, 5, 15, 47, 48, 57, 173, 290, 294, 296, 344, 351, 478, 486, 497, 498, 499, 507, 513], "In": [3, 5, 8, 15, 22, 40, 46, 48, 67, 71, 80, 81, 89, 90, 103, 105, 111, 116, 140, 152, 161, 163, 166, 216, 219, 220, 229, 238, 240, 253, 257, 284, 289, 291, 302, 308, 312, 313, 318, 319, 331, 332, 334, 336, 338, 341, 342, 343, 345, 347, 368, 378, 381, 392, 400, 401, 408, 412, 413, 442, 448, 449, 452, 454, 455, 456, 470, 475, 478, 483, 484, 485, 492, 494, 495, 498, 499, 507, 509, 510, 513, 514], "abl": [3, 4, 5, 17, 46, 48, 145, 284, 349, 401, 427, 455, 485, 507, 509, 514], "reproduc": [3, 5, 121, 124, 131, 509], "confid": [3, 5], "ident": [3, 5, 156, 163, 170, 179, 191, 192, 195, 224, 267, 315, 319, 332, 356, 452, 484], "inputdb": [3, 5], "startcycl": [3, 5, 7, 15, 507], "startnod": [3, 5, 7, 15, 507], "standard": [3, 5, 16, 22, 23, 27, 57, 62, 67, 71, 79, 140, 152, 153, 154, 166, 167, 171, 179, 185, 204, 205, 206, 207, 212, 215, 219, 221, 247, 253, 257, 264, 265, 284, 289, 318, 325, 332, 335, 378, 383, 394, 403, 408, 418, 441, 446, 447, 448, 450, 454, 484, 486, 487, 492, 503, 506, 507, 511], "timestep": [3, 5, 7, 20, 28, 35, 46, 253, 347, 507], "request": [3, 5, 7, 20, 33, 78, 79, 152, 156, 198, 201, 205, 209, 212, 219, 239, 241, 253, 257, 260, 286, 295, 309, 312, 332, 334, 340, 341, 347, 349, 405, 408, 410, 425, 448, 449, 450, 455, 484, 492, 494, 507], "present": [3, 5, 7, 8, 20, 79, 136, 161, 163, 168, 173, 175, 176, 178, 198, 202, 225, 228, 251, 260, 284, 312, 332, 335, 343, 347, 349, 369, 378, 383, 400, 413, 419, 456, 499, 507], "auxiliari": [3, 5, 140, 205, 215], "statepointnam": [3, 5], "h5group": [3, 5, 10, 509], "place": [3, 5, 10, 22, 27, 28, 46, 48, 56, 79, 105, 152, 156, 215, 219, 220, 221, 241, 242, 284, 286, 290, 292, 319, 323, 332, 338, 343, 347, 352, 355, 400, 404, 410, 411, 419, 448, 449, 455, 456, 484, 485, 486, 492, 494, 499, 507, 509, 513, 514], "correct": [3, 5, 16, 24, 48, 160, 200, 225, 238, 242, 253, 255, 260, 267, 289, 302, 309, 312, 325, 327, 342, 356, 357, 368, 378, 380, 381, 455, 485, 507, 514], "timenod": [3, 5, 7, 15, 33, 79, 204, 205, 221, 241, 312, 492, 494, 507, 509, 512], "fuel": [3, 5, 20, 27, 28, 50, 52, 55, 94, 105, 109, 126, 134, 135, 136, 137, 138, 143, 154, 202, 213, 216, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 241, 242, 246, 250, 253, 258, 264, 284, 285, 286, 289, 290, 294, 296, 298, 302, 304, 309, 312, 316, 317, 318, 319, 323, 325, 326, 327, 331, 332, 334, 336, 350, 352, 353, 355, 356, 357, 358, 359, 364, 365, 416, 449, 454, 462, 463, 467, 468, 470, 471, 478, 479, 482, 483, 484, 486, 487, 490, 493, 494, 497, 500, 502, 503, 505, 506, 508, 509, 513], "varieti": [3, 5, 57, 163, 284, 289, 312, 343, 358, 383, 449, 454, 455, 484, 492, 495, 507], "client": [3, 5, 8, 161, 163, 253, 283, 312, 332, 335], "server": [3, 5], "kind": [3, 5, 24, 105, 158, 167, 205, 209, 213, 215, 253, 286, 289, 294, 312, 334, 342, 401, 456, 463, 483, 484, 497, 498, 506, 507], "unnecessari": [3, 5, 57, 289], "bp": [3, 5, 11, 47, 48, 57, 62, 290, 296, 351, 412, 470, 478, 497, 507], "allowmiss": [3, 5, 487], "mid": [3, 5, 156, 370], "simul": [3, 5, 7, 21, 22, 33, 61, 138, 213, 220, 239, 255, 257, 284, 285, 292, 332, 368, 369, 399, 449, 452, 455, 456, 484, 492, 494, 498, 499, 505, 507, 509, 510, 512], "valu": [3, 4, 5, 7, 10, 17, 20, 23, 24, 25, 27, 48, 50, 51, 52, 57, 60, 67, 78, 79, 80, 81, 90, 96, 97, 100, 105, 145, 148, 150, 152, 154, 156, 161, 164, 167, 168, 180, 191, 198, 201, 202, 203, 207, 214, 220, 224, 230, 239, 241, 242, 244, 245, 248, 253, 255, 257, 264, 268, 272, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 302, 309, 312, 315, 316, 317, 319, 320, 323, 325, 331, 332, 335, 340, 345, 346, 347, 348, 351, 358, 362, 363, 364, 369, 370, 375, 376, 377, 378, 381, 382, 383, 394, 397, 400, 404, 408, 411, 412, 414, 416, 417, 418, 419, 427, 430, 437, 442, 447, 449, 452, 454, 456, 484, 486, 487, 492, 494, 496, 497, 498, 502, 503, 504, 507, 509, 510, 513], "neg": [3, 5, 253, 286, 289, 302, 306, 312, 316, 325, 326, 341, 348, 356, 378, 412, 507], "index": [3, 4, 5, 10, 44, 57, 153, 154, 164, 167, 176, 203, 205, 221, 224, 244, 248, 253, 270, 285, 286, 289, 292, 312, 332, 336, 338, 340, 341, 342, 343, 362, 400, 401, 404, 412, 416, 419, 437, 446, 480, 484, 486, 487, 490, 492, 503, 507, 509], "eoc": [3, 5, 20, 79, 205, 241, 449, 503, 505], "backward": [3, 5, 6, 105, 179, 208, 220, 290, 416], "statepoint": [3, 5, 492], "emit": [3, 5, 61, 164, 170, 302, 384], "rather": [3, 5, 10, 20, 46, 48, 79, 105, 120, 140, 154, 155, 156, 167, 179, 205, 215, 220, 241, 242, 253, 284, 295, 312, 332, 334, 337, 338, 341, 343, 344, 345, 349, 370, 376, 401, 416, 419, 451, 470, 478, 480, 484, 486, 489, 490, 492, 494, 498, 499, 502, 507], "crash": [3, 5, 63, 78, 161, 205, 368, 400, 450, 451, 486, 507], "undefin": [3, 5, 7, 16, 20, 21, 22, 28, 33, 59, 79, 212, 219, 225, 241, 246, 253, 262, 306, 307, 308, 334, 390, 393, 399, 507], "top": [3, 5, 22, 27, 80, 207, 220, 286, 289, 292, 293, 296, 300, 312, 315, 325, 331, 332, 336, 337, 342, 343, 345, 348, 351, 355, 356, 412, 437, 449, 451, 456, 492, 494, 502, 503, 505, 507, 509], "comp": [3, 5, 7, 10, 26, 289, 315, 509], "param": [3, 5, 7, 10, 11, 20, 45, 79, 220, 253, 255, 286, 289, 312, 319, 330, 331, 332, 347, 348, 356, 386, 394, 404, 416, 452, 471, 479, 486, 487, 489, 492, 494, 497, 502, 503, 504, 507], "too": [3, 5, 45, 174, 312, 332, 348, 356, 400, 419, 437, 452, 487, 497, 498, 507], "must": [3, 5, 7, 15, 16, 20, 21, 22, 28, 33, 50, 56, 59, 67, 77, 78, 79, 146, 152, 160, 163, 164, 167, 170, 173, 202, 205, 212, 219, 220, 225, 227, 241, 242, 246, 253, 261, 262, 284, 286, 289, 295, 306, 309, 312, 317, 318, 323, 331, 332, 334, 340, 342, 343, 345, 347, 348, 349, 355, 360, 378, 390, 393, 394, 399, 404, 416, 417, 442, 446, 447, 448, 449, 452, 455, 456, 463, 484, 485, 487, 494, 498, 501, 507, 510, 514], "indexloc": [3, 5, 221, 228, 285, 289, 336, 340, 341, 342, 343, 362, 449, 513], "make": [3, 5, 9, 16, 20, 27, 28, 51, 56, 57, 59, 62, 67, 79, 80, 126, 145, 150, 152, 153, 160, 161, 164, 166, 167, 170, 173, 183, 192, 213, 215, 219, 220, 225, 241, 248, 253, 262, 268, 269, 283, 284, 286, 289, 290, 294, 295, 296, 299, 300, 302, 304, 309, 312, 316, 318, 319, 332, 334, 335, 336, 341, 342, 343, 345, 347, 348, 349, 350, 356, 357, 358, 360, 364, 367, 378, 380, 381, 383, 384, 393, 394, 395, 396, 400, 401, 408, 412, 415, 416, 418, 419, 421, 425, 427, 434, 437, 442, 446, 447, 448, 449, 450, 452, 454, 455, 456, 464, 467, 478, 480, 481, 482, 483, 484, 486, 487, 490, 492, 493, 495, 497, 498, 499, 500, 502, 506, 513], "sens": [3, 5, 10, 51, 56, 80, 284, 289, 295, 309, 332, 341, 347, 367, 400, 452, 498, 513], "hierarchi": [3, 5, 10, 230, 312, 345, 349, 351, 364, 442, 449, 492, 507, 509], "serv": [3, 5, 28, 79, 255, 284, 335, 347, 348, 411, 419, 486, 494], "anchor": [3, 5, 294, 296, 341, 342, 343, 355, 442, 498, 499, 507, 513], "fulli": [3, 5, 10, 80, 105, 167, 217, 286, 294, 312, 343, 357, 370, 454, 463, 484, 486, 495, 499, 502, 505, 507, 509], "extend": [3, 5, 7, 16, 20, 21, 22, 24, 28, 33, 59, 79, 153, 207, 212, 219, 225, 241, 246, 253, 262, 284, 285, 286, 312, 331, 336, 342, 345, 348, 376, 390, 393, 399, 400, 408, 411, 427, 442, 451, 469, 478, 492, 495, 507], "littl": [3, 4, 5, 10, 34, 35, 59, 167, 284, 399, 401, 408, 455, 470, 492, 494, 509], "complic": [3, 5, 10, 15, 253, 295, 306, 309, 312, 378, 393, 401, 452, 494, 498, 507], "depth": [3, 5, 10, 416, 451, 452, 492], "below": [3, 4, 5, 48, 67, 153, 164, 170, 220, 238, 284, 285, 286, 311, 312, 315, 331, 332, 336, 338, 345, 349, 383, 412, 438, 449, 451, 452, 454, 484, 485, 494, 497, 498, 499, 507, 509, 513, 514], "occupi": [3, 5, 52, 221, 224, 315, 353, 503, 507, 513], "easier": [3, 5, 205, 224, 312, 341, 390, 451, 455, 513], "figur": [3, 5, 8, 27, 33, 44, 88, 126, 142, 201, 205, 289, 331, 332, 334, 344, 404, 416, 418, 456, 469, 473, 474, 476, 484, 492, 496, 498], "given": [3, 4, 5, 10, 20, 44, 71, 79, 81, 83, 84, 105, 109, 114, 146, 154, 155, 156, 159, 164, 201, 204, 205, 212, 220, 224, 241, 242, 244, 246, 248, 253, 258, 284, 286, 289, 290, 294, 295, 312, 316, 317, 318, 319, 323, 327, 331, 332, 335, 338, 340, 341, 343, 344, 345, 347, 348, 364, 367, 408, 410, 411, 412, 415, 416, 418, 419, 442, 443, 444, 452, 454, 455, 463, 468, 471, 484, 490, 494, 498, 502, 505, 507, 509, 510, 511], "pair": [3, 5, 27, 50, 215, 242, 286, 290, 291, 292, 293, 294, 295, 296, 309, 312, 332, 341, 342, 343, 369, 375, 383, 404, 452, 507], "unawar": [3, 5], "outsid": [3, 5, 78, 213, 220, 229, 239, 242, 300, 312, 318, 319, 333, 340, 346, 347, 370, 400, 439, 484, 492, 498, 503, 507], "normal": [3, 4, 5, 105, 140, 166, 170, 179, 185, 203, 205, 242, 253, 262, 284, 289, 318, 341, 351, 368, 375, 393, 404, 424, 442, 449, 456, 462, 480, 484, 492, 494, 498, 507], "know": [3, 4, 5, 7, 32, 95, 153, 154, 163, 166, 213, 284, 286, 289, 295, 304, 306, 312, 332, 334, 345, 348, 349, 370, 401, 404, 411, 412, 413, 417, 454, 494, 496, 498, 507, 508, 509, 513], "about": [3, 4, 5, 20, 22, 29, 47, 56, 79, 84, 91, 105, 113, 138, 140, 152, 153, 166, 167, 170, 185, 196, 201, 205, 220, 284, 286, 289, 294, 295, 312, 318, 334, 335, 340, 345, 347, 348, 349, 356, 370, 442, 451, 452, 454, 456, 472, 473, 474, 477, 484, 487, 492, 494, 496, 498, 499, 502, 503, 507, 509, 513], "plu": [3, 5, 44, 156, 221, 286, 343, 349, 400, 484, 495, 507], "similar": [3, 5, 20, 48, 56, 61, 80, 152, 153, 156, 164, 166, 168, 170, 174, 175, 176, 221, 242, 267, 286, 312, 332, 340, 343, 347, 383, 408, 416, 419, 452, 484, 494, 499, 513], "omit": [3, 5, 289, 309, 312, 333, 400, 401, 507], "temporari": [3, 6, 16, 21, 63, 78, 253, 405, 418, 425], "placehold": [3, 6, 156, 208, 286, 368, 401, 419, 498], "eas": [3, 6, 145, 309, 484, 486], "break": [3, 6, 63, 78, 95, 156, 205, 289, 312, 345, 348, 395, 411, 419, 448, 452, 454, 455, 456, 484], "transit": [3, 6, 215, 335, 451, 484, 491, 494], "help": [3, 7, 9, 10, 22, 40, 56, 61, 67, 71, 78, 79, 153, 163, 199, 227, 284, 312, 331, 377, 404, 407, 411, 412, 413, 419, 442, 446, 447, 450, 451, 452, 455, 456, 486, 489, 492, 494, 498, 507, 509, 513], "deriv": [3, 7, 21, 33, 44, 57, 59, 79, 140, 163, 196, 212, 215, 241, 253, 283, 284, 289, 306, 312, 331, 334, 343, 349, 356, 376, 377, 390, 393, 399, 408, 412, 484, 497, 503, 507, 513], "overridden": [3, 7, 16, 20, 21, 22, 28, 33, 59, 67, 79, 105, 152, 212, 219, 225, 241, 246, 253, 262, 309, 312, 390, 393, 399, 505, 507], "life": [3, 7, 22, 26, 79, 83, 88, 160, 205, 239, 241, 449, 454, 455, 483, 492, 496, 507, 512, 513], "underli": [3, 5, 7, 11, 48, 154, 156, 242, 312, 340, 342, 345, 348, 408, 456, 492, 497, 509, 511, 513], "earli": [3, 7, 21, 208, 451, 507], "while": [3, 7, 22, 36, 38, 40, 44, 46, 67, 71, 79, 139, 161, 166, 196, 206, 215, 238, 239, 257, 284, 289, 309, 312, 313, 317, 318, 319, 323, 330, 331, 332, 335, 336, 343, 349, 405, 408, 411, 442, 449, 451, 455, 463, 484, 485, 494, 495, 498, 507, 509, 513, 514], "first": [3, 5, 7, 10, 15, 21, 29, 35, 44, 46, 48, 79, 80, 105, 152, 156, 166, 167, 168, 170, 176, 202, 205, 212, 219, 220, 221, 224, 239, 241, 242, 260, 284, 286, 289, 293, 304, 309, 312, 318, 319, 332, 333, 340, 341, 343, 345, 347, 353, 364, 400, 410, 411, 412, 416, 419, 421, 428, 437, 442, 443, 447, 449, 450, 451, 452, 454, 455, 456, 468, 473, 480, 484, 487, 492, 493, 497, 498, 501, 507, 509, 513], "receiv": [3, 7, 79, 152, 300, 349, 392, 452], "tight": [3, 7, 79, 205, 212, 255, 257, 289, 375, 390, 437, 449, 487, 506, 507], "coupl": [3, 7, 10, 16, 33, 44, 59, 79, 205, 212, 229, 239, 241, 246, 253, 255, 257, 260, 284, 289, 332, 364, 375, 437, 449, 451, 487, 490, 496, 503, 505, 506, 507], "_timenodeloop": [3, 7], "via": [3, 7, 77, 94, 105, 136, 170, 204, 224, 253, 284, 289, 295, 302, 309, 312, 315, 316, 317, 325, 345, 396, 449, 452, 477, 480, 484, 487, 489, 494, 498, 507, 513], "tend": [3, 7, 38, 44, 242, 309, 334, 348, 447, 495, 509], "decai": [3, 7, 86, 153, 156, 158, 160, 164, 165, 170, 185, 203, 205, 239, 272, 295, 467, 481, 482, 484, 500, 502, 503, 505, 507, 509], "next": [3, 7, 21, 44, 218, 241, 257, 289, 309, 312, 318, 332, 351, 400, 416, 419, 442, 446, 447, 451, 452, 456, 492, 494, 495, 497, 498, 499, 507, 509], "shutdown": [3, 7, 212, 285, 334, 368, 484, 492, 497, 498, 505, 507], "even": [3, 4, 7, 11, 22, 56, 78, 79, 145, 152, 156, 176, 205, 220, 221, 262, 284, 286, 290, 306, 312, 325, 332, 338, 341, 356, 377, 402, 411, 416, 418, 425, 449, 451, 452, 456, 484, 494, 498, 507, 509], "encount": [3, 4, 5, 7, 20, 56], "reconnect": [3, 7], "pre": [3, 7, 10, 11, 20, 202, 219, 241, 242, 267, 284, 289, 331, 332, 341, 400, 442, 487, 494, 505, 507], "still": [3, 5, 7, 11, 20, 56, 78, 79, 105, 153, 160, 189, 206, 215, 220, 221, 239, 242, 283, 284, 289, 290, 296, 307, 309, 312, 332, 333, 334, 342, 348, 353, 367, 395, 397, 408, 425, 448, 449, 455, 456, 463, 484, 486, 494, 499, 507, 509, 513], "connect": [3, 7, 44, 168, 289, 343, 507], "worker": [3, 7, 22, 79, 152, 202, 205, 206, 220, 312, 393, 406, 452, 489, 497], "reloaddbnam": [3, 7, 15, 449, 507], "put": [3, 7, 105, 167, 215, 217, 241, 284, 286, 289, 312, 332, 352, 412, 418, 456, 487, 494], "prior": [3, 7, 79, 205, 284, 319, 383, 452, 486, 507], "mix": [3, 7, 109, 220, 238, 246, 289, 312, 424, 427, 484, 494, 498, 507], "v": [3, 7, 79, 80, 101, 102, 154, 156, 160, 166, 201, 205, 213, 220, 238, 264, 284, 289, 302, 309, 312, 341, 412, 418, 483, 484, 487, 492, 495, 497, 498, 507], "equival": [3, 7, 105, 109, 170, 176, 184, 185, 191, 309, 318, 319, 341, 342, 362, 411, 452, 463, 485, 514], "reload": [3, 7, 21, 205, 220, 253, 257, 507], "doe": [3, 4, 7, 10, 11, 14, 15, 16, 17, 18, 22, 31, 32, 33, 35, 36, 37, 42, 43, 46, 50, 54, 55, 59, 60, 75, 76, 78, 79, 105, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 152, 156, 158, 159, 160, 161, 162, 167, 168, 172, 174, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 205, 211, 212, 215, 220, 221, 224, 225, 226, 227, 235, 236, 237, 241, 242, 244, 250, 251, 253, 255, 260, 261, 262, 267, 268, 269, 270, 271, 272, 275, 282, 284, 286, 289, 291, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 312, 313, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 340, 341, 342, 348, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 408, 412, 415, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 448, 452, 455, 456, 471, 484, 492, 494, 498, 499, 503, 507, 509, 513], "gaurante": [3, 7], "decad": [3, 7, 176, 484], "ago": [3, 5, 7], "easili": [3, 4, 7, 10, 11, 253, 312, 315, 336, 378, 392, 400, 402, 410, 412, 455, 484, 497, 499], "timestepnam": [3, 7, 205], "fresh": [3, 7, 205, 224, 312, 483, 484, 488, 495, 498, 507], "preferenti": [3, 7], "neither": [3, 7, 242, 290], "nor": [3, 7, 290, 341], "mutablesequ": [3, 7], "byloc": [3, 7], "wrapper": [3, 7, 152, 156, 189, 192, 203, 290, 335, 368, 384, 416], "around": [3, 7, 8, 48, 78, 152, 164, 203, 216, 220, 284, 289, 290, 308, 319, 332, 338, 368, 384, 442, 447, 452, 472, 483, 484, 492, 498, 499, 502, 503, 505, 507, 513], "how": [3, 4, 5, 7, 8, 9, 10, 32, 45, 46, 52, 57, 126, 164, 167, 168, 196, 201, 220, 242, 246, 248, 284, 286, 289, 293, 294, 296, 312, 315, 318, 319, 334, 336, 340, 343, 345, 348, 349, 356, 357, 369, 370, 399, 401, 402, 416, 417, 419, 434, 442, 450, 451, 452, 454, 456, 463, 464, 470, 478, 483, 484, 486, 487, 492, 493, 494, 495, 503, 504, 506, 507, 508, 513], "well": [3, 4, 5, 7, 10, 20, 44, 46, 50, 56, 57, 79, 80, 138, 153, 163, 221, 225, 229, 246, 284, 289, 293, 295, 309, 312, 313, 331, 332, 343, 345, 347, 356, 369, 404, 408, 411, 416, 446, 449, 454, 455, 476, 478, 484, 492, 494, 497, 498, 507, 509], "reffilenam": [3, 4], "srcfilenam": [3, 4], "exclus": [3, 4, 48, 56, 220, 242, 290, 294, 332, 335, 343, 364, 367, 487, 492, 507], "toler": [3, 4, 48, 56, 79, 168, 174, 202, 412, 510], "float": [3, 4, 5, 20, 27, 50, 79, 81, 82, 83, 84, 85, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 114, 117, 137, 138, 139, 140, 141, 143, 155, 156, 164, 167, 168, 174, 176, 184, 201, 205, 220, 221, 238, 242, 248, 253, 286, 289, 292, 293, 294, 306, 309, 312, 316, 317, 318, 323, 325, 331, 332, 335, 337, 338, 341, 342, 343, 344, 345, 348, 375, 383, 390, 400, 402, 404, 411, 412, 416, 418, 437, 443, 444, 487, 497, 509, 510, 513], "0": [3, 4, 15, 24, 27, 35, 48, 55, 56, 57, 79, 82, 83, 84, 85, 90, 93, 96, 97, 98, 100, 105, 109, 113, 114, 117, 125, 126, 136, 137, 138, 140, 147, 148, 152, 156, 160, 163, 164, 165, 167, 168, 170, 174, 175, 176, 179, 180, 201, 202, 203, 205, 212, 220, 221, 238, 239, 241, 242, 248, 251, 253, 255, 257, 262, 284, 286, 289, 293, 294, 298, 301, 302, 304, 306, 307, 308, 309, 311, 312, 318, 320, 323, 325, 330, 332, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 352, 355, 357, 358, 362, 376, 383, 399, 400, 401, 402, 404, 408, 410, 411, 412, 415, 416, 417, 419, 427, 438, 441, 442, 444, 449, 452, 454, 456, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 492, 494, 495, 496, 497, 498, 499, 502, 503, 505, 507, 509, 510, 513], "timestepcompar": [3, 4, 48, 56], "high": [3, 4, 5, 28, 78, 88, 92, 93, 95, 201, 225, 229, 253, 260, 284, 285, 289, 332, 334, 350, 412, 416, 449, 471, 484, 487, 492, 497, 499, 502, 503, 504, 505, 507, 509], "two": [3, 4, 10, 11, 48, 65, 71, 116, 152, 153, 156, 164, 168, 170, 172, 174, 177, 191, 195, 201, 202, 203, 204, 205, 213, 224, 225, 239, 241, 242, 243, 284, 286, 289, 291, 295, 307, 312, 315, 318, 319, 325, 331, 332, 335, 340, 341, 342, 345, 346, 353, 356, 383, 404, 412, 418, 419, 449, 452, 454, 455, 480, 485, 486, 489, 494, 497, 498, 501, 507, 510, 513, 514], "dbname": [3, 8, 47, 48, 496], "basecas": [3, 8, 47, 57], "bookeep": [3, 8, 35, 205], "most": [3, 5, 8, 16, 44, 46, 79, 80, 105, 114, 140, 152, 156, 163, 164, 166, 174, 221, 230, 242, 284, 289, 306, 309, 312, 332, 338, 340, 343, 345, 347, 349, 356, 368, 370, 384, 401, 408, 419, 446, 449, 452, 454, 455, 456, 483, 484, 485, 486, 494, 498, 499, 502, 505, 507, 513, 514], "proper": [3, 8, 139, 204, 241, 289, 342, 356, 357, 449, 455, 507], "common": [3, 4, 8, 80, 138, 152, 153, 156, 167, 215, 253, 258, 286, 295, 312, 325, 331, 334, 342, 343, 377, 383, 414, 452, 456, 457, 482, 484, 485, 498, 500, 507, 509, 514], "least": [3, 8, 67, 221, 224, 228, 257, 312, 353, 442, 446, 455, 484, 498, 507], "knowledg": [3, 4, 8, 47, 289, 312, 319, 485, 514], "probe": [3, 8, 48], "interrog": [3, 8, 242], "pathtodb": 3, "loadcycl": 3, "loadnod": 3, "c0n2eoc": 3, "alreadi": [3, 5, 57, 61, 78, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 156, 170, 201, 205, 220, 246, 268, 289, 290, 312, 327, 332, 335, 348, 370, 376, 454, 494, 498, 507], "vari": [3, 4, 9, 57, 163, 257, 289, 296, 332, 338, 345, 484, 497, 507], "middl": [3, 49, 205, 285, 334, 341, 400, 480, 492, 497, 498], "attach": [3, 21, 33, 59, 79, 80, 205, 212, 246, 284, 318, 340, 390, 393, 399, 449, 492, 503], "pathtodatabas": 3, "getfpmass": [3, 285, 312], "fission": [3, 86, 156, 160, 164, 168, 170, 174, 177, 185, 201, 202, 229, 239, 241, 242, 245, 246, 247, 248, 250, 251, 253, 258, 262, 289, 295, 309, 312, 331, 332, 334, 416, 475, 480, 483, 484, 487, 492, 496, 498, 499, 503, 505, 507], "product": [3, 45, 57, 158, 164, 177, 189, 192, 201, 202, 239, 241, 242, 245, 246, 247, 248, 250, 251, 253, 258, 295, 309, 312, 332, 343, 455, 473, 474, 480, 484, 487, 492, 503, 507], "12345": 3, "67": [3, 154, 362], "test_comparedb3": [3, 13], "testcomparedb3": [3, 13, 14], "test_database3": [3, 13], "testdatabas": [3, 13, 15], "testdatabasesmal": [3, 13, 15], "testwritereaddatabas": [3, 13, 15], "test_databaseinterfac": [3, 13], "getsimpledboper": [3, 13, 16], "testdatabaseinterfacebol": [3, 13, 16], "testdatabaseinterfac": [3, 13, 16], "testdatabasewrit": [3, 13, 16], "testdatabaseread": [3, 13, 16], "testbadnam": [3, 13, 16], "teststandardfollowon": [3, 13, 16], "test_jaggedarrai": [3, 13], "testjaggedarrai": [3, 13, 17], "test_layout": [3, 13], "testlocationpack": [3, 13, 18], "writeln": [3, 4], "adddiff": [3, 4], "addstructurediff": [3, 4], "addtimestep": [3, 4], "reportdiff": [3, 4], "ndiff": [3, 4], "fromh5": [3, 9], "tolist": [3, 9], "computeancestor": [3, 10], "allsubclass": [3, 10], "from_yaml": [3, 11, 290, 293, 295], "skip_bp_sect": [3, 11], "unknown_param": [3, 11], "buildparamcol": [3, 11], "read_only_fm": [3, 12], "read_write_fm": [3, 12], "create_file_ti": [3, 12], "create_file_fi": [3, 12], "create_file_fie2": [3, 12], "read_write_cr": [3, 12], "assum": [4, 29, 82, 105, 152, 171, 189, 201, 202, 221, 238, 286, 289, 312, 316, 325, 332, 343, 356, 363, 395, 416, 449, 451, 452, 485, 494, 497, 498, 499, 503, 507, 509, 514], "intim": [4, 342], "h5py": [4, 78, 348, 509], "within": [4, 10, 24, 27, 56, 61, 73, 79, 105, 152, 153, 154, 156, 167, 172, 196, 198, 202, 205, 207, 212, 215, 229, 241, 242, 246, 250, 284, 286, 289, 290, 291, 292, 293, 296, 300, 306, 309, 312, 316, 317, 318, 319, 320, 325, 331, 332, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 348, 355, 356, 357, 367, 405, 442, 443, 449, 450, 451, 454, 468, 484, 487, 491, 494, 498, 499, 502, 503, 507, 509, 510, 511], "correspond": [4, 10, 26, 153, 201, 202, 205, 220, 221, 284, 286, 289, 294, 295, 306, 311, 312, 315, 325, 332, 344, 345, 349, 377, 400, 416, 444, 449, 454, 491, 498, 503, 505, 507, 509], "pull": [4, 48, 205, 220, 225, 289, 418, 448, 450, 455, 487, 494, 497], "cross": [4, 92, 153, 156, 163, 164, 166, 168, 172, 174, 175, 177, 183, 196, 198, 200, 201, 202, 203, 213, 214, 225, 239, 241, 242, 246, 253, 255, 257, 262, 267, 268, 269, 284, 286, 289, 295, 312, 318, 332, 416, 418, 442, 446, 452, 455, 463, 470, 475, 476, 484, 487, 489, 490, 492, 498, 499, 502, 503, 504, 507, 509, 510], "probabl": [4, 40, 45, 48, 67, 71, 94, 153, 156, 248, 262, 284, 286, 290, 309, 312, 347, 412, 413, 419, 442, 456, 484, 494, 502, 508, 509], "speak": [4, 246], "issu": [4, 16, 22, 46, 78, 136, 164, 166, 202, 241, 242, 255, 284, 289, 318, 334, 345, 356, 384, 419, 442, 448, 454, 455, 456, 484, 486, 487, 494, 509], "aris": [4, 79, 153, 156, 284, 295, 394], "against": [4, 40, 48, 50, 79, 126, 224, 241, 312, 332, 334, 365, 376, 378, 383, 402, 421, 448, 484, 487], "sometim": [4, 48, 78, 156, 202, 220, 242, 313, 345, 456, 478, 492, 494, 507, 509], "That": [4, 5, 59, 90, 255, 289, 293, 312, 367, 368, 376, 456, 492, 494, 498, 507], "worri": [4, 340, 349, 452, 454, 456, 494], "especi": [4, 246, 415, 455, 513], "temperatur": [4, 10, 80, 81, 82, 83, 84, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 109, 111, 112, 113, 114, 116, 117, 126, 132, 133, 134, 137, 138, 140, 141, 142, 143, 154, 219, 229, 238, 239, 241, 242, 257, 267, 279, 286, 289, 306, 309, 312, 313, 315, 316, 317, 318, 319, 324, 325, 332, 345, 348, 355, 356, 357, 444, 449, 454, 468, 477, 483, 484, 487, 489, 492, 494, 495, 497, 498, 499, 502, 503, 504, 505, 507, 508, 509, 510, 511], "uniformli": [4, 295, 468, 507], "realli": [4, 32, 45, 105, 203, 209, 294, 296, 332, 338, 368, 451, 452, 454, 484, 499], "suppos": [4, 294, 419, 454], "volum": [4, 81, 88, 105, 114, 136, 138, 139, 198, 201, 238, 241, 286, 289, 293, 300, 306, 309, 311, 312, 319, 331, 332, 344, 355, 356, 357, 365, 404, 467, 481, 482, 500, 503, 504, 505, 507], "rel": [4, 44, 48, 56, 79, 105, 167, 185, 215, 294, 306, 309, 312, 313, 323, 325, 332, 334, 344, 345, 383, 412, 442, 455, 488, 494, 499, 503, 505, 507, 509, 511], "self": [4, 9, 20, 40, 57, 67, 79, 105, 152, 163, 166, 201, 220, 241, 248, 260, 262, 289, 290, 293, 309, 312, 317, 318, 319, 325, 332, 341, 343, 348, 352, 381, 411, 417, 419, 442, 447, 451, 452, 455, 494, 497, 498, 507, 509], "evid": 4, "resourc": [4, 152, 345, 383], "hasn": [4, 201, 268, 417], "tee": 4, "msg": [4, 224, 368, 384, 403, 442], "ignor": [4, 5, 11, 80, 167, 174, 241, 289, 295, 306, 319, 334, 341, 369, 393, 394, 400, 418, 419, 426, 507], "exce": [4, 320, 392], "organ": [4, 20, 34, 207, 215, 370, 449, 452, 487, 492], "later": [4, 23, 27, 38, 40, 79, 168, 176, 205, 242, 291, 317, 367, 447, 449, 451, 454, 455, 484, 494, 503, 507, 513], "keep": [4, 5, 10, 22, 45, 145, 221, 257, 264, 284, 286, 295, 309, 318, 319, 323, 331, 349, 411, 442, 448, 451, 452, 453, 455, 456, 483, 484, 498, 502, 503, 504, 507, 513], "miss": [4, 11, 90, 242, 295, 312, 437, 492, 495, 497, 507], "incompat": 4, "weird": [4, 343, 419], "strang": [4, 5, 10, 59, 345, 408, 498], "smaller": [4, 15, 27, 242, 250, 312, 325, 332, 364, 401, 408, 456, 494], "zero": [4, 10, 59, 67, 78, 105, 130, 139, 156, 167, 168, 173, 174, 191, 201, 205, 224, 227, 228, 241, 246, 257, 286, 289, 306, 307, 308, 309, 312, 325, 326, 332, 341, 352, 356, 410, 412, 424, 449, 455, 477, 486, 490, 492, 494, 498, 503, 504, 507], "diff": [4, 59, 243, 456], "infinit": [4, 242, 343, 411, 472, 473, 507], "rigor": [4, 484], "manner": [4, 242, 306, 442, 449, 484, 486, 494, 510], "fine": [4, 46, 173, 295, 304, 386, 412, 419, 498], "revisit": [4, 284, 510], "comptyp": [4, 284], "paramnam": [4, 5, 9, 10, 20, 312, 331, 345, 347, 452], "absmean": 4, "absmax": 4, "tsname": 4, "stream": [4, 146, 147, 148, 165, 166, 167, 170, 171, 173, 174, 176, 177, 178, 179, 180, 248, 250, 290, 294, 303, 353, 361, 370, 377, 397, 401, 408, 438, 442], "print": [4, 22, 29, 40, 56, 61, 67, 71, 79, 156, 173, 220, 286, 290, 309, 312, 347, 368, 400, 402, 408, 416, 419, 447, 449, 451, 452, 455, 456, 462, 468, 492, 494, 495, 496, 497, 507, 509], "exceed": [4, 79, 408, 410, 503, 504], "recover": 5, "down": [5, 10, 20, 22, 312, 345, 348, 356, 376, 418, 454, 455, 480, 487, 492, 494, 509], "bound": [5, 50, 57, 60, 163, 170, 202, 220, 244, 270, 286, 306, 309, 311, 312, 315, 317, 320, 334, 336, 337, 338, 341, 343, 344, 355, 356, 357, 443, 472, 473, 474, 477, 499, 513], "hierarch": [5, 10, 284, 312, 333, 449, 507], "furthermor": [5, 56, 311, 338, 345, 455, 492], "intend": [5, 24, 153, 202, 215, 241, 242, 253, 284, 294, 312, 318, 331, 334, 343, 378, 406, 408, 411, 419, 449, 450, 455, 483, 494, 510], "dynam": [5, 48, 80, 102, 138, 205, 284, 312, 407, 415, 449, 507, 509], "yet": [5, 20, 47, 56, 202, 206, 220, 238, 242, 289, 293, 312, 316, 331, 400, 454, 484, 492, 502, 507], "undevelop": 5, "ad": [5, 26, 27, 38, 40, 45, 46, 48, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 156, 164, 172, 174, 177, 205, 209, 220, 242, 243, 246, 251, 253, 257, 284, 286, 289, 295, 296, 301, 306, 312, 318, 319, 323, 327, 332, 333, 337, 342, 347, 349, 353, 356, 366, 370, 382, 400, 416, 417, 446, 452, 454, 456, 471, 478, 479, 480, 483, 484, 486, 487, 488, 489, 490, 492, 493, 497, 507, 513], "dump": [5, 33, 39, 42, 43, 45, 46, 215, 239, 242, 285, 286, 332, 347, 369, 371, 375, 376, 480, 507], "again": [5, 10, 61, 189, 218, 284, 332, 348, 350, 384, 442, 451, 454, 455, 486, 498, 507, 509], "nitti": [5, 456], "gritti": [5, 456], "translat": [5, 284, 290, 330, 331, 343, 454, 484], "flat": [5, 9, 10, 289, 309, 318, 341, 356, 401, 410, 421, 490, 498, 513], "pleas": [5, 20, 105, 286, 332, 405, 419, 447, 448, 449, 456, 485, 514], "convent": [5, 202, 215, 289, 334, 450, 456, 507], "cxxnyi": 5, "arraydata": 5, "numpi": [5, 9, 10, 44, 79, 167, 289, 312, 317, 342, 345, 348, 390, 411, 412, 419, 437, 455, 470, 474, 477, 487, 492, 494, 495, 497, 513], "ndarrai": [5, 9, 10, 44, 79, 171, 179, 201, 224, 286, 289, 309, 312, 340, 341, 342, 343, 344, 348, 411, 412], "wouldn": [5, 45], "plai": [5, 284, 289, 349, 449], "nice": [5, 84, 152, 166, 206, 213, 289, 312, 335, 349, 400, 408, 419, 449, 478, 494, 507], "arrai": [5, 9, 10, 44, 57, 79, 167, 168, 170, 286, 289, 309, 312, 317, 331, 332, 336, 341, 342, 345, 348, 362, 390, 411, 412, 419, 430, 437, 487, 490, 492, 494, 503, 509, 510, 513], "conform": [5, 153, 284, 293, 309, 316, 338, 455, 486, 505], "both": [5, 48, 50, 79, 145, 152, 155, 161, 166, 167, 176, 202, 206, 213, 220, 289, 295, 312, 315, 318, 325, 330, 331, 332, 334, 335, 347, 349, 356, 362, 383, 416, 441, 447, 451, 463, 478, 484, 487, 489, 492, 494, 507, 511], "fit": [5, 93, 96, 97, 98, 100, 106, 138, 175, 205, 209, 242, 253, 289, 312, 332, 338, 341, 343, 348, 352, 410, 412, 419, 456, 507, 509, 513], "ish": [5, 437], "accomplish": [5, 497, 509], "hand": [5, 27, 66, 166, 220, 325, 349, 357, 376, 383, 416, 446, 449, 451, 454, 484, 493, 497, 507], "known": [5, 57, 138, 153, 156, 253, 257, 284, 309, 332, 341, 396, 404, 421, 449, 483, 507], "offend": 5, "variou": [5, 20, 22, 26, 29, 35, 61, 78, 79, 135, 153, 156, 163, 167, 175, 204, 205, 212, 216, 220, 224, 272, 284, 290, 292, 293, 312, 325, 332, 334, 348, 356, 357, 362, 364, 369, 401, 412, 419, 430, 437, 441, 447, 449, 451, 458, 459, 461, 466, 482, 484, 485, 486, 492, 494, 498, 499, 500, 506, 507, 508, 509, 514], "necessari": [5, 21, 44, 46, 48, 114, 136, 152, 156, 172, 174, 176, 177, 196, 203, 228, 257, 260, 284, 286, 289, 293, 327, 330, 343, 345, 348, 405, 417, 442, 449, 484, 495, 507, 509], "mind": [5, 286, 349], "alwai": [5, 10, 59, 105, 163, 166, 167, 168, 173, 175, 176, 196, 205, 246, 253, 284, 289, 294, 306, 311, 312, 319, 325, 331, 338, 341, 343, 345, 348, 401, 413, 415, 416, 419, 442, 452, 454, 455, 494, 502, 507], "deal": [5, 10, 45, 167, 168, 229, 248, 312, 378, 411, 452, 454, 498], "routin": [5, 17, 227, 228, 284, 309, 345, 412, 449, 484, 487, 507], "find": [5, 10, 20, 22, 48, 56, 80, 84, 96, 97, 100, 105, 153, 156, 174, 201, 202, 220, 221, 227, 228, 246, 264, 284, 286, 289, 306, 309, 312, 317, 319, 332, 334, 341, 345, 349, 356, 364, 368, 369, 400, 410, 412, 416, 442, 455, 456, 484, 485, 486, 487, 492, 494, 497, 498, 507, 511, 513, 514], "themselv": [5, 9, 284, 332, 345, 348, 378, 454, 486, 497], "lack": [5, 221, 454, 484, 491], "nan": [5, 286, 306], "jag": [5, 9, 17, 348, 487, 489, 509], "concaten": [5, 368, 411], "dimension": [5, 9, 168, 241, 289, 311, 318, 319, 341, 356, 419, 493, 509, 513], "describ": [5, 10, 44, 46, 48, 67, 79, 90, 144, 156, 164, 213, 215, 220, 230, 284, 286, 290, 293, 307, 312, 331, 334, 335, 340, 341, 343, 345, 348, 377, 401, 442, 454, 484, 498, 507, 508, 509, 511, 512], "shape": [5, 9, 17, 44, 126, 167, 286, 298, 301, 302, 304, 306, 307, 308, 309, 311, 312, 315, 335, 356, 357, 358, 449, 478, 483, 498, 499, 503, 508, 513], "offset": [5, 9, 17, 44, 318, 332, 336, 337, 338, 341, 343, 344, 355, 401, 402, 470, 473, 480, 513], "them": [5, 9, 10, 15, 16, 20, 38, 46, 47, 48, 49, 56, 61, 79, 105, 109, 156, 163, 166, 167, 174, 203, 205, 206, 209, 241, 248, 253, 257, 284, 286, 289, 295, 296, 309, 312, 313, 317, 318, 319, 332, 334, 335, 342, 343, 345, 347, 348, 357, 358, 360, 368, 376, 377, 384, 393, 395, 400, 401, 410, 413, 419, 426, 446, 449, 451, 452, 454, 455, 456, 483, 484, 490, 492, 494, 497, 498, 499, 504, 507], "magic": [5, 206, 213, 284, 345, 349, 451, 492], "shouldn": [5, 262, 334], "realist": [5, 507], "scenario": [5, 213, 216, 229, 289, 294, 296, 349, 433, 449, 455, 456, 507], "1d": [5, 9, 176, 241, 242, 267, 317, 318, 342, 348, 390, 412, 487, 490], "diagnost": [5, 10], "invert": 5, "straight": [5, 10], "closest": [5, 220, 325, 412, 507], "represent": [5, 10, 27, 46, 79, 167, 173, 178, 180, 220, 241, 242, 268, 289, 290, 294, 312, 318, 335, 336, 340, 341, 343, 348, 351, 352, 401, 419, 454, 455, 483, 484, 499, 503, 507, 509], "np": [5, 9, 44, 154, 164, 171, 201, 262, 286, 289, 309, 312, 412, 455, 470, 474, 477, 480, 492, 494, 495, 497, 513], "homogen": [5, 107, 168, 201, 202, 217, 241, 242, 262, 289, 312, 318, 319, 327, 345, 356, 486, 487, 503, 507, 509], "densiti": [5, 52, 55, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 126, 130, 134, 135, 137, 138, 139, 140, 141, 142, 143, 153, 154, 156, 166, 178, 198, 201, 241, 242, 246, 248, 257, 262, 267, 285, 289, 290, 293, 295, 302, 304, 306, 309, 312, 317, 323, 325, 329, 330, 331, 332, 345, 356, 357, 358, 388, 404, 420, 424, 463, 483, 484, 486, 487, 488, 489, 490, 493, 495, 498, 499, 502, 503, 504, 505, 507, 509], "No": [5, 9, 45, 79, 81, 113, 117, 260, 262, 375, 401, 449, 455, 486, 492, 497, 499], "longer": [5, 35, 49, 242, 295, 308, 309, 358, 418, 419, 437, 455, 484, 486, 487, 490, 495, 503, 507], "numberdens": [5, 153, 201, 309, 312, 404, 504], "tool": [5, 9, 10, 18, 22, 29, 38, 46, 169, 199, 212, 224, 226, 253, 284, 333, 352, 363, 368, 397, 414, 416, 418, 428, 431, 434, 450, 451, 453, 483, 484, 485, 487, 489, 494, 498, 509, 514], "comput": [5, 29, 55, 79, 83, 93, 98, 105, 134, 164, 166, 167, 170, 201, 205, 209, 212, 239, 241, 253, 255, 257, 263, 289, 306, 307, 308, 309, 311, 312, 317, 319, 331, 342, 343, 356, 361, 367, 401, 412, 449, 450, 452, 455, 463, 467, 482, 484, 487, 492, 494, 497, 500, 507, 510], "slap": 5, "remov": [5, 20, 47, 56, 105, 147, 205, 220, 225, 241, 246, 248, 253, 268, 284, 285, 289, 290, 293, 296, 306, 309, 312, 318, 319, 323, 332, 345, 364, 367, 381, 400, 413, 415, 450, 452, 484, 486, 487, 488, 489, 490, 492, 502, 503, 505, 507], "better": [5, 20, 61, 79, 156, 163, 176, 205, 207, 284, 286, 334, 336, 351, 403, 419, 448, 455, 484, 486, 489, 507], "viz": [5, 45], "view": [5, 27, 28, 319, 341, 416, 454, 485, 492, 494, 507, 509, 514], "_readparam": 5, "compat": [6, 105, 176, 208, 220, 246, 286, 290, 309, 348, 408], "move": [6, 15, 48, 59, 156, 166, 207, 208, 215, 216, 219, 220, 224, 225, 284, 286, 290, 293, 295, 312, 315, 323, 325, 331, 332, 334, 343, 351, 358, 383, 400, 406, 416, 418, 471, 483, 484, 486, 487, 489, 490, 492, 502, 513], "streamlin": [6, 484], "throughout": [7, 154, 156, 246, 312, 335, 336, 449, 455, 499, 502, 507], "rectangular": [9, 286, 307, 311, 343, 356, 507], "jaggeddata": 9, "preserv": [9, 35, 82, 83, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 145, 316, 325, 364, 368, 377, 390, 412, 441, 488, 507], "multi": [9, 246, 255, 257, 289, 331, 342, 348, 363, 456, 467, 481, 482, 483, 486, 492, 497, 500, 509], "popul": [9, 90, 168, 253, 294, 341, 343, 353, 356, 401, 418, 449, 452, 454], "layer": [9, 10, 292, 334, 342, 483, 494], "jagged": 9, "length": [9, 27, 96, 97, 100, 156, 162, 167, 170, 199, 205, 212, 224, 253, 289, 308, 316, 317, 318, 325, 332, 340, 400, 410, 411, 412, 419, 441, 452, 454, 455, 489, 492, 495, 497, 498, 502, 507, 511, 512], "reconstitut": 9, "exactli": [9, 220, 289, 312, 332, 349, 410, 417, 452, 486, 492, 507], "But": [9, 32, 75, 156, 189, 289, 309, 332, 342, 352, 368, 400, 412, 448, 452, 455, 456, 462, 484, 494, 495, 499, 508, 513], "final": [9, 40, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 105, 229, 243, 246, 309, 317, 332, 357, 382, 416, 417, 447, 452, 456, 471, 487, 494, 498, 507, 510], "nest": [9, 22, 27, 284, 289, 342, 400], "round": [9, 15, 220, 290, 300, 332], "trip": [9, 15, 290], "constructor": [9, 50, 78, 146, 152, 156, 205, 309, 318, 337, 341, 342, 343, 345, 411, 419, 442], "x": [9, 12, 15, 38, 44, 46, 126, 146, 168, 174, 198, 200, 201, 202, 203, 219, 220, 241, 242, 257, 260, 262, 267, 268, 271, 289, 290, 294, 295, 298, 301, 302, 304, 311, 312, 319, 332, 336, 338, 342, 343, 356, 358, 376, 400, 412, 416, 418, 419, 443, 444, 455, 467, 469, 470, 471, 472, 473, 474, 479, 480, 481, 482, 486, 487, 489, 492, 496, 497, 498, 499, 500, 503, 507, 509, 513], "recurs": [9, 10, 17, 22, 47, 56, 73, 105, 152, 312, 342, 347, 350, 369, 400, 415, 487], "classmethod": [9, 11, 78, 79, 152, 166, 167, 201, 242, 290, 291, 293, 295, 312, 315, 316, 334, 335, 337, 338, 344, 347, 348, 353, 377, 405, 408], "dtype": [9, 312, 345, 513], "accompani": [9, 451], "zeroth": [9, 10, 176, 513], "constitu": [9, 312], "obj": [9, 22, 152, 156, 172, 174, 177, 202, 253, 286, 312, 323, 331, 333, 400], "alia": [9, 25, 67, 79, 122, 123, 124, 125, 126, 127, 128, 129, 130, 138, 175, 198, 205, 236, 272, 282, 286, 289, 291, 292, 293, 294, 295, 296, 306, 307, 308, 309, 311, 312, 332, 333, 343, 347, 351, 352, 357, 358, 376, 419, 507], "respond": 9, "unpackedjaggeddata": 9, "groundwork": 10, "map": [10, 11, 12, 15, 161, 164, 170, 173, 176, 178, 179, 241, 253, 255, 284, 290, 291, 292, 293, 294, 295, 296, 303, 312, 315, 330, 331, 332, 336, 338, 342, 343, 345, 348, 353, 361, 377, 399, 401, 408, 416, 421, 449, 454, 463, 478, 484, 485, 486, 487, 492, 493, 494, 497, 499, 503, 505, 507, 509, 513, 514], "datbas": 10, "tree": [10, 27, 70, 207, 289, 312, 342, 343, 349, 377, 383, 405, 446], "append": [10, 27, 38, 44, 153, 154, 205, 285, 286, 312, 336, 342, 400, 411, 419, 442, 452, 468, 469, 470, 472, 473, 474, 477, 480, 496, 499], "search": [10, 56, 70, 80, 166, 202, 220, 242, 257, 289, 304, 312, 317, 325, 332, 334, 407, 412, 442, 484, 505], "a1": [10, 82, 220, 312, 332, 507], "a1b1": 10, "a1b1c1": 10, "a1b1c2": 10, "a1b2": 10, "a1b2c1": 10, "a2": [10, 82, 220, 312, 507], "aren": [10, 21, 160, 220, 242, 253, 375, 451, 498, 507], "algorithm": [10, 45, 50, 57, 217, 221, 224, 331, 419, 471, 484, 487, 498, 507], "travers": [10, 312, 343, 449], "region": [10, 165, 168, 173, 175, 183, 196, 201, 202, 242, 286, 319, 320, 356, 494, 503, 505, 507], "indexindata": [10, 509], "increas": [10, 255, 316, 320, 343, 351, 399, 408, 412, 456, 468, 484, 503, 505, 507], "monoton": [10, 412, 507], "children": [10, 105, 228, 286, 289, 296, 312, 345, 348, 350, 355, 356, 358, 362, 407, 454, 490, 509, 513], "parent": [10, 48, 61, 83, 105, 164, 201, 215, 241, 257, 258, 286, 289, 292, 294, 300, 306, 309, 312, 333, 336, 342, 343, 345, 349, 351, 352, 356, 364, 368, 397, 416, 452, 492, 503, 513], "contigu": [10, 498], "interleav": 10, "sibl": [10, 289, 306, 312, 492, 507], "asid": [10, 334], "necessarili": [10, 57, 153, 166, 202, 484, 507], "child": [10, 27, 289, 294, 312, 319, 331, 333, 336, 456, 487, 509, 513], "serialnum": [10, 345, 347, 509], "numchildren": [10, 509], "reach": [10, 156, 212, 405, 410, 456, 484, 494, 507], "desir": [10, 23, 28, 94, 156, 168, 201, 215, 241, 262, 289, 294, 312, 343, 345, 347, 368, 405, 408, 410, 415, 448, 456, 478, 484, 507, 509], "ancestor": [10, 289, 312, 345, 349], "yield": [10, 105, 168, 241, 246, 248, 251, 312, 318, 332, 411, 487, 496, 507], "direct": [10, 62, 80, 167, 168, 191, 224, 253, 289, 296, 311, 312, 319, 331, 336, 337, 341, 343, 348, 359, 412, 442, 444, 454, 484, 503, 505, 507, 509], "elemen": 10, "subsequ": [10, 176, 239, 318, 347, 348, 410], "form": [10, 28, 79, 138, 140, 166, 212, 241, 242, 253, 257, 284, 293, 294, 300, 306, 312, 319, 335, 345, 349, 375, 378, 390, 400, 444, 486, 494, 497, 498, 503, 507], "lightweight": [10, 84], "stitch": [10, 442], "troubl": [10, 309, 494], "laid": [10, 345], "approach": [10, 22, 205, 220, 284, 286, 316, 332, 345, 353, 412, 455, 484, 487, 498, 507], "reason": [10, 43, 105, 152, 153, 241, 246, 253, 290, 295, 318, 334, 342, 343, 347, 419, 442, 448, 451, 452, 456, 484, 494, 503], "bad": [10, 156, 302, 378, 399, 455], "second": [10, 78, 93, 168, 183, 203, 212, 220, 224, 242, 284, 286, 312, 332, 340, 353, 412, 419, 443, 452, 455, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 488, 496, 507, 513], "pretti": [10, 290, 350, 419, 437, 480], "unwieldi": 10, "consum": [10, 262, 295, 335, 411, 442, 484], "cursor": 10, "slice": [10, 289, 311, 343, 412], "ineffici": [10, 289, 306, 309, 312], "cl": [10, 57, 154, 347, 407, 497, 507], "nonsens": [10, 11], "who": [10, 20, 145, 201, 205, 317, 378, 400, 450, 455, 456, 484, 490, 507], "treat": [10, 238, 241, 242, 246, 286, 289, 312, 318, 331, 332, 334, 360, 383, 419, 442, 507, 511], "might": [10, 48, 61, 153, 196, 253, 286, 289, 309, 318, 412, 416, 419, 442, 449, 451, 455, 456, 487, 492, 494, 507], "storabl": [10, 408], "numer": [10, 140, 148, 164, 241, 242, 284, 289, 293, 295, 331, 336, 419, 486, 487, 503, 507, 510], "7": [10, 79, 83, 96, 97, 100, 106, 109, 138, 143, 148, 154, 156, 174, 185, 221, 293, 294, 302, 319, 338, 342, 357, 358, 362, 411, 419, 455, 456, 462, 470, 492, 497, 499, 505, 507, 511], "9": [10, 22, 79, 83, 84, 102, 109, 136, 143, 154, 156, 221, 319, 338, 362, 400, 411, 412, 419, 462, 470, 484, 485, 492, 496, 497, 498, 499, 507, 513, 514], "6": [10, 36, 57, 77, 79, 91, 100, 113, 137, 143, 148, 153, 154, 156, 174, 176, 185, 221, 289, 294, 311, 318, 319, 332, 338, 341, 357, 358, 362, 401, 410, 411, 419, 441, 462, 469, 470, 472, 474, 477, 480, 492, 496, 497, 499, 507, 511, 513], "revers": [10, 176, 179, 205, 221, 270, 312, 331, 341, 367, 449, 492], "essenti": [10, 20, 105, 152, 176, 262, 284, 290, 442, 498], "abil": [11, 62, 105, 220, 225, 227, 270, 289, 325, 343, 355, 362, 363, 364, 416, 434, 442, 454, 486, 487], "arg": [11, 25, 40, 61, 65, 66, 67, 75, 79, 83, 90, 103, 109, 132, 134, 135, 136, 137, 138, 152, 170, 198, 224, 241, 242, 283, 284, 291, 292, 293, 294, 295, 296, 306, 332, 341, 344, 348, 358, 368, 370, 384, 399, 400, 402, 419, 447, 487], "helper": [11, 22, 24, 59, 220, 224, 247, 265, 312, 348, 352, 364, 368, 378, 387, 392, 394, 398, 494], "loader": [11, 290, 293, 295, 309], "round_trip_data": 11, "yamliz": [11, 284, 290, 291, 292, 293, 294, 295, 296, 442], "attribute_collect": [11, 290, 291, 292, 293, 294, 295, 296], "attributecollect": [11, 290, 291, 293, 294, 295, 296], "passiv": [11, 509], "metadata": [11, 16, 144, 161, 168, 169, 176, 179, 184, 196, 284, 293, 345, 347, 348, 381, 418, 486, 487, 509], "To": [11, 20, 27, 46, 61, 78, 83, 146, 155, 201, 220, 284, 286, 289, 319, 331, 332, 334, 351, 383, 393, 395, 400, 419, 426, 442, 446, 447, 448, 449, 451, 452, 454, 456, 484, 485, 494, 495, 497, 498, 507, 509, 510, 514], "variabl": [11, 20, 48, 50, 51, 57, 79, 105, 146, 156, 164, 170, 171, 176, 196, 205, 215, 242, 253, 267, 286, 289, 294, 295, 309, 312, 315, 316, 319, 320, 325, 332, 340, 347, 400, 415, 419, 442, 452, 455, 456, 483, 485, 486, 487, 489, 494, 506, 507, 514], "instanti": [11, 21, 78, 126, 156, 163, 203, 204, 205, 218, 220, 284, 345, 347, 349, 363, 367, 370, 419, 449, 451], "obvious": [11, 217, 284, 351, 456], "huge": [11, 262, 442], "whole": [11, 42, 43, 62, 176, 201, 220, 242, 299, 312, 332, 355, 448, 452, 456, 484, 486, 494, 498, 507], "lose": [11, 154, 156, 484], "claim": 11, "fidel": [11, 246, 289, 300, 484, 502, 503, 504, 507], "your": [11, 20, 22, 32, 47, 78, 83, 105, 201, 215, 220, 221, 242, 248, 253, 284, 313, 331, 332, 370, 378, 400, 402, 405, 412, 416, 418, 446, 447, 448, 449, 452, 455, 456, 457, 463, 464, 477, 482, 484, 485, 492, 493, 497, 498, 500, 507, 513, 514], "understand": [11, 206, 341, 348, 447, 451, 452, 454, 456, 484], "unitless": [11, 105], "test_outputwrit": [13, 14], "test_compareset": [13, 14], "test_diffresultsbas": [13, 14], "test_comparedatabasedupl": [13, 14], "test_comparedatabasesim": [13, 14], "test_diffspecialdata": [13, 14], "test_diffsimpledata": [13, 14], "test_compareauxdata": [13, 14], "makeshufflehistori": [13, 15], "test_load": [13, 15], "test_loadsortset": [13, 15], "test_histori": [13, 15], "makehistori": [13, 15], "test_loadoper": [13, 15], "test_writetodb": [13, 15], "test_geth5fil": [13, 15], "test_auxdata": [13, 15], "test_replacenon": [13, 15], "test_mergehistori": [13, 15], "test_splitdatabas": [13, 15], "test_grablocalcommithash": [13, 15], "test_filenam": [13, 15], "test_readinputsfromdb": [13, 15], "test_delet": [13, 15], "test_open": [13, 15], "test_loadc": [13, 15], "test_loadblueprint": [13, 15], "test_preprestartrun": [13, 15], "test_computepar": [13, 15], "small_yaml": [13, 15], "test_readwriteroundtrip": [13, 15], "test_baddata": [13, 15], "test_interactbol": [13, 16, 259, 260, 266, 267], "test_distribut": [13, 16, 383, 390], "test_demonstratewritinginteract": [13, 16], "test_interacteverynodereturntightcoupl": [13, 16], "test_timenodeloop_tightcoupl": [13, 16], "test_syncdbafterwrit": [13, 16], "test_nosyncdbafterwrit": [13, 16], "test_writesystemattribut": [13, 16], "test_metadata_endsuccessfulli": [13, 16], "test_metadataendfail": [13, 16], "test_gethistori": [13, 16], "test_gethistorybyloc": [13, 16], "test_loadreadonli": [13, 16], "test_growtofullcor": [13, 16, 354, 361, 364], "test_growtofullcorewithc": [13, 16], "test_growtofullcorefromfactori": [13, 16], "test_growtofullcorefromfactorywithc": [13, 16], "test_readwritten": [13, 16], "test_readwithoutinput": [13, 16], "test_varioustypeswork": [13, 16], "test_timestep": [13, 16], "test_baddbnam": [13, 16], "test_standardrestart": [13, 16], "test_roundtrip": [13, 17, 297, 303], "test_roundtripbool": [13, 17], "test_flatten": [13, 17, 420, 429], "test_backwardscompat": [13, 17], "test_locationpack": [13, 18], "test_locationpackingoldervers": [13, 18], "test_locationpackingoldvers": [13, 18], "test_clos": [13, 18], "methodnam": [14, 15, 16, 17, 18, 31, 32, 35, 36, 37, 42, 43, 54, 55, 59, 60, 75, 76, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 158, 159, 160, 161, 162, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 211, 212, 224, 225, 226, 227, 235, 236, 237, 250, 251, 255, 260, 261, 267, 268, 269, 270, 271, 272, 275, 282, 298, 299, 300, 301, 302, 303, 304, 305, 325, 326, 327, 328, 329, 330, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "runtest": [14, 15, 16, 17, 18, 31, 32, 35, 36, 37, 42, 43, 54, 55, 59, 60, 75, 76, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 158, 159, 160, 161, 162, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 211, 212, 224, 225, 226, 227, 235, 236, 237, 250, 251, 255, 260, 261, 267, 268, 269, 270, 271, 272, 275, 282, 298, 299, 300, 301, 302, 303, 304, 305, 324, 325, 326, 327, 328, 329, 330, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "testcas": [14, 15, 16, 17, 18, 31, 32, 35, 36, 37, 42, 43, 54, 55, 59, 60, 75, 76, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 158, 159, 160, 161, 162, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 211, 212, 224, 225, 227, 235, 237, 250, 251, 255, 260, 261, 267, 268, 269, 270, 271, 272, 275, 298, 299, 300, 301, 302, 303, 304, 305, 325, 326, 327, 328, 329, 330, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 380, 381, 382, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 455], "valueerror": [14, 15, 16, 17, 18, 31, 32, 35, 36, 37, 42, 43, 54, 55, 59, 60, 75, 76, 79, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 158, 159, 160, 161, 162, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 204, 211, 212, 221, 224, 225, 226, 227, 228, 235, 236, 237, 241, 242, 250, 251, 255, 257, 260, 261, 267, 268, 269, 270, 271, 272, 275, 282, 286, 289, 290, 296, 298, 299, 300, 301, 302, 303, 304, 305, 309, 317, 318, 325, 326, 327, 328, 329, 330, 348, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 376, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 410, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 490], "photocopi": 14, "simlar": 14, "walk": [15, 492, 498], "few": [15, 20, 33, 156, 221, 239, 262, 332, 367, 449, 452, 455, 456, 470, 483, 484, 497, 498, 499, 507, 509, 513], "shuffl": [15, 217, 219, 220, 221, 224, 225, 294, 332, 334, 416, 487, 492, 498, 503, 505, 507, 513], "languag": [15, 345, 471, 484, 498], "agnost": [15, 228], "super": [15, 45, 57, 75, 137, 260, 261, 311, 408, 456], "correctli": [15, 17, 166, 212, 260, 267, 268, 275, 282, 286, 289, 311, 325, 330, 356, 357, 362, 364, 365, 394, 396, 399, 434, 439, 456, 487, 490, 494], "armirun": [15, 225, 364], "setup": [15, 284, 319, 325, 370, 456, 487], "abov": [15, 103, 152, 154, 164, 238, 253, 284, 286, 312, 315, 325, 334, 342, 349, 364, 401, 411, 424, 444, 449, 451, 452, 454, 456, 470, 483, 484, 494, 498, 499, 503, 507, 509, 510, 513], "reloadingdb": 15, "nonexist": [15, 381], "refoneblockreactor": 15, "nsystem": 15, "y": [15, 27, 38, 44, 94, 109, 115, 137, 143, 154, 220, 264, 289, 294, 311, 336, 338, 342, 343, 356, 410, 412, 416, 418, 419, 438, 443, 444, 455, 469, 471, 472, 473, 474, 479, 480, 496, 498, 499, 503, 507, 509, 513], "z": [15, 38, 44, 84, 91, 113, 138, 140, 153, 154, 155, 156, 158, 191, 286, 289, 294, 303, 312, 313, 319, 320, 325, 327, 331, 332, 336, 337, 338, 341, 342, 343, 362, 419, 444, 449, 467, 469, 471, 472, 473, 477, 479, 480, 481, 482, 486, 492, 496, 498, 499, 500, 503, 507, 513], "sfp": [15, 28, 35, 220, 225, 284, 286, 290, 294, 296, 332, 333, 351, 352, 364, 487, 492, 502, 507], "1000": [15, 140, 143, 156, 255, 452, 456, 492, 497, 498, 502, 507], "evst": 15, "excor": [15, 284, 333, 359, 492, 497, 507], "2000": [15, 109, 113, 114, 126, 138, 143, 495, 507], "ngrid": 15, "hex_corners_up": [15, 513], "lattic": [15, 170, 174, 201, 219, 221, 225, 239, 241, 242, 253, 256, 257, 258, 260, 261, 267, 289, 294, 295, 299, 303, 307, 312, 318, 343, 401, 410, 449, 463, 487, 490, 498, 499, 513], "ic": [15, 126, 294, 298, 301, 302, 304, 478, 498, 507], "symmetri": [15, 221, 253, 285, 286, 289, 294, 312, 332, 335, 336, 337, 338, 340, 341, 342, 343, 344, 356, 401, 470, 478, 484, 486, 487, 492, 498, 499, 502, 507, 513], "32": [15, 154, 334, 348, 362, 408, 419, 484, 498], "hex": [15, 54, 55, 176, 179, 188, 191, 193, 217, 221, 224, 226, 242, 253, 285, 289, 294, 312, 318, 319, 327, 328, 332, 335, 336, 338, 340, 341, 342, 343, 353, 355, 356, 357, 361, 362, 364, 383, 401, 410, 411, 421, 461, 465, 467, 470, 478, 481, 482, 483, 484, 486, 487, 489, 490, 492, 498, 500, 502, 503, 505, 507, 513], "And": [15, 213, 216, 286, 343, 368, 447, 448, 455, 456, 494, 498, 509, 513], "cover": [16, 126, 161, 257, 312, 330, 356, 383, 448, 455, 494, 506], "quickli": [16, 20, 205, 364, 383, 446, 453, 480, 484, 490, 494, 497, 499], "bol": [16, 20, 26, 33, 71, 79, 205, 213, 239, 257, 264, 267, 284, 289, 290, 316, 332, 356, 416, 449, 454, 483, 486, 487, 492, 497, 503, 504, 505, 507, 509, 512], "NOT": [16, 78, 101, 102, 152, 176, 212, 220, 312, 316, 356], "fast": [16, 22, 78, 177, 185, 215, 244, 246, 253, 289, 313, 332, 336, 442, 451, 463, 483, 484, 486, 492, 493, 497, 499, 503, 505, 507], "everi": [16, 22, 57, 79, 160, 176, 205, 239, 241, 246, 253, 257, 286, 332, 345, 356, 367, 370, 383, 399, 401, 402, 411, 412, 416, 418, 419, 442, 449, 454, 456, 485, 489, 494, 497, 499, 502, 507, 513, 514], "syncdbafterwrit": [16, 486, 490, 507], "either": [17, 27, 45, 48, 57, 59, 79, 80, 105, 165, 168, 170, 176, 179, 201, 205, 206, 215, 220, 242, 246, 257, 262, 284, 289, 293, 294, 295, 300, 312, 319, 334, 336, 340, 342, 343, 368, 376, 378, 383, 401, 402, 404, 416, 442, 451, 452, 455, 456, 478, 484, 494, 498, 499, 507, 513], "text": [20, 22, 61, 62, 67, 79, 163, 289, 290, 309, 312, 318, 368, 383, 397, 401, 416, 419, 437, 438, 442, 447, 456, 472, 480, 487, 492, 498, 507, 509, 510, 513], "mechan": [20, 79, 80, 88, 117, 229, 309, 332, 334, 381, 452, 484, 485, 494, 507, 510, 513, 514], "etc": [20, 21, 27, 48, 79, 105, 109, 135, 153, 155, 163, 164, 201, 202, 203, 205, 209, 213, 220, 241, 246, 248, 253, 263, 284, 285, 286, 289, 290, 296, 307, 309, 312, 316, 318, 319, 332, 334, 343, 345, 348, 368, 370, 384, 400, 401, 415, 416, 442, 449, 451, 452, 454, 455, 483, 484, 492, 496, 497, 498, 499, 503, 506, 507], "particularli": [20, 43, 67, 242, 325, 332, 343, 451, 455, 494, 499, 507], "eqhistorytrackerinterfac": 20, "unravel": 20, "interest": [20, 22, 50, 84, 86, 286, 315, 317, 318, 325, 332, 449, 469, 484, 494, 506, 507, 513], "armiblock": 20, "blocknam": 20, "historykei": 20, "paralyzingli": 20, "slow": [20, 312, 331, 453, 487], "def": [20, 57, 284, 345, 348, 402, 411, 417, 447, 451, 452, 468, 470, 478, 480, 492, 494, 497, 498, 507], "percentbu": [20, 220, 471, 503, 504], "now": [20, 38, 48, 50, 105, 140, 147, 176, 189, 202, 208, 255, 257, 284, 289, 312, 333, 341, 345, 446, 449, 452, 454, 455, 456, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 497, 498, 502, 507, 508, 510, 514], "assemswithhistori": 20, "timestepsavail": 20, "gettimeindic": 20, "fluxattimestep3": 20, "b1003a": 20, "date": [20, 241, 253, 284, 332, 343, 376, 446, 456, 486, 487, 488, 489, 490, 492, 494, 507], "stop": [20, 77, 342, 402, 442, 456, 477, 484], "detailassemblynam": 20, "year": [20, 105, 418, 456, 484, 505], "look": [20, 22, 29, 140, 153, 155, 156, 164, 205, 215, 220, 228, 241, 246, 286, 289, 312, 319, 332, 334, 343, 345, 407, 419, 448, 451, 452, 453, 456, 492, 494, 495, 498, 507, 509, 513], "8192": [20, 334], "control": [20, 26, 33, 51, 83, 173, 175, 176, 178, 184, 191, 212, 220, 239, 241, 242, 285, 286, 289, 290, 294, 295, 312, 318, 319, 326, 331, 332, 334, 344, 345, 371, 419, 452, 456, 463, 483, 484, 486, 487, 490, 492, 494, 497, 502, 503, 505, 507, 509, 513], "32768": [20, 334], "ask": [20, 22, 61, 289, 312, 378, 403, 415], "activ": [20, 33, 48, 61, 73, 79, 152, 156, 164, 202, 205, 284, 286, 293, 295, 309, 332, 377, 378, 416, 446, 448, 449, 451, 455, 456, 484, 485, 487, 494, 503, 507, 513, 514], "treatment": [20, 33, 246, 295, 348, 507], "assem": [20, 220, 225, 304, 315, 316, 319, 330, 331, 332, 333, 352, 400, 416, 492], "give": [20, 26, 94, 135, 140, 155, 220, 239, 289, 295, 306, 309, 312, 325, 342, 343, 368, 412, 413, 454, 488, 498, 499, 509], "signal": [20, 33, 78, 289, 348, 349], "timeindic": 20, "boc": [20, 79, 205, 213, 239, 253, 257, 260, 267, 289, 400, 449, 483, 503, 507, 509], "moc": [20, 79, 253], "fashion": [20, 455], "inexpens": 20, "simultan": [20, 412], "preload": 20, "keyerror": [20, 56, 80, 334], "found": [20, 27, 43, 59, 80, 168, 213, 215, 220, 221, 227, 228, 284, 286, 289, 312, 315, 317, 325, 332, 334, 335, 338, 340, 349, 403, 407, 412, 413, 438, 442, 449, 454, 484, 491, 494, 507, 513], "manipul": [21, 48, 66, 77, 166, 205, 284, 339, 368, 415, 442, 507, 508, 509], "catch": [21, 164, 227, 364, 427], "admittedli": 21, "_c": [21, 246], "databs": 21, "soon": [21, 284, 309, 312, 353, 455, 456, 459, 466, 482, 484, 486, 494, 495, 500], "construct": [21, 33, 57, 59, 71, 79, 80, 90, 153, 171, 183, 201, 212, 257, 263, 284, 285, 290, 291, 292, 293, 294, 296, 299, 300, 304, 305, 309, 312, 316, 325, 332, 334, 335, 338, 342, 343, 344, 345, 357, 378, 390, 393, 396, 399, 411, 471, 478, 479, 486, 492, 497, 507, 509, 513], "argument": [21, 33, 40, 54, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 105, 152, 155, 212, 241, 243, 284, 294, 307, 309, 312, 325, 332, 340, 342, 343, 345, 348, 370, 378, 382, 383, 390, 393, 399, 419, 447, 449, 451, 454, 455, 456, 486, 487, 489, 492], "delet": [21, 22, 63, 78, 79, 145, 147, 154, 156, 176, 253, 319, 332, 367, 368, 383, 405, 406, 415, 446, 455, 487, 507], "clean": [21, 63, 78, 147, 156, 215, 312, 319, 405, 425, 446, 449, 456, 487, 507], "job": [21, 22, 78, 242, 318, 434, 507], "cours": [21, 220, 313, 450, 484, 497, 498, 499], "diagnos": [22, 392], "psutil": 22, "perspect": [22, 145, 246, 284, 442, 494, 502], "great": [22, 102, 332, 345, 434, 446, 456, 484, 507], "gc": 22, "get_object": 22, "garbag": [22, 78], "collector": [22, 78], "count": [22, 23, 24, 28, 166, 167, 241, 289, 332, 338, 352, 384, 391, 400, 418, 419, 487, 499, 513], "note": [22, 95, 153, 170, 408, 411, 418, 419, 436, 448, 452, 468, 480, 484, 492, 499, 502, 503, 507, 509, 513], "sy": [22, 77, 494], "getsizeof": 22, "certainli": [22, 456, 499, 507], "slightli": [22, 66, 220, 283, 289, 295, 343, 486, 489, 494, 498, 507], "seem": [22, 34, 46, 221, 253, 343, 345, 376], "de": [22, 45, 289, 368, 492], "alloc": [22, 168, 241, 242], "got": [22, 145], "2gb": 22, "pythonhost": 22, "ntask": [22, 70, 490, 498, 499, 507], "cpuspertask": 22, "total": [22, 36, 45, 56, 83, 109, 134, 166, 168, 179, 183, 198, 201, 213, 225, 238, 248, 286, 289, 309, 312, 317, 318, 320, 325, 332, 356, 392, 401, 402, 404, 412, 452, 454, 456, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 492, 494, 497, 502, 503, 504, 505, 507, 510, 512], "scaveng": 22, "hook": [22, 48, 79, 205, 255, 283, 284, 293, 396, 399, 450, 451, 484, 486, 490, 494, 507], "good": [22, 46, 48, 93, 140, 174, 205, 221, 260, 290, 309, 348, 383, 416, 419, 448, 450, 454, 455, 484, 485, 486, 492, 494, 507, 514], "summari": [22, 28, 29, 40, 62, 67, 71, 154, 215, 285, 296, 305, 312, 320, 332, 367, 450, 471, 478, 479, 492, 507, 509], "footprint": 22, "timedescript": 22, "stdout": [22, 215, 305, 368, 494, 509], "debugmem": [22, 507], "turn": [22, 84, 241, 253, 257, 260, 284, 286, 289, 294, 332, 368, 390, 400, 442, 447, 449, 451, 478, 484, 486, 497, 499, 507, 510], "problem": [22, 56, 105, 164, 168, 170, 171, 183, 242, 253, 257, 258, 295, 302, 312, 331, 332, 342, 343, 344, 367, 378, 381, 418, 449, 456, 480, 484, 498, 499, 505, 507, 509], "attrnam": 22, "refobject": 22, "thorugh": 22, "referr": 22, "oppos": [22, 289, 309, 390, 401], "gigabyt": 22, "reports": 22, "u": [22, 109, 126, 135, 136, 137, 138, 154, 155, 156, 166, 185, 221, 246, 284, 289, 290, 293, 294, 298, 304, 312, 334, 347, 368, 404, 455, 475, 476, 480, 484, 485, 492, 494, 498, 499, 514], "ao": 22, "arbitrarili": [22, 331, 332, 334, 399, 494, 507], "deepli": 22, "focus": [22, 341, 362, 484, 499, 507], "held": [22, 312, 332], "classtyp": 22, "sys_mem": 22, "hostnam": 22, "14": [22, 113, 137, 154, 221, 338, 362, 419, 470, 490, 492, 496, 498, 507], "ram": [22, 484], "proc": 22, "mem": 22, "mb": [22, 36, 465, 481, 505], "491": 22, "472": 22, "471": 22, "470": [22, 507], "13": [22, 137, 154, 221, 338, 362, 412, 419, 449, 470, 487, 490, 492, 496, 507], "474": 22, "473": [22, 82, 93, 492], "460": 22, "461": 22, "printabl": 23, "test_newreport": [23, 30], "testreportcontentcr": [23, 30, 31], "test_report": [23, 30], "testreportingutil": [23, 30, 32], "testreport": [23, 30, 32], "testreportinterfac": [23, 30, 32], "groupsorderfirst": [23, 24], "componentwellgroup": [23, 24], "addtoreport": [23, 24], "writehtml": [23, 24], "writegroupshtml": [23, 24], "writeescap": [23, 25], "writereport": [23, 27, 28, 454], "tableofcont": [23, 27], "leveldict": [23, 27], "addchildel": [23, 27, 454], "addrow": [23, 27, 454], "generatedesignreport": [23, 28], "printreport": [23, 28, 32], "writerunsummari": [23, 28], "reportsfp": [23, 28], "countassembliessfp": [23, 28], "insert": [24, 27, 66, 105, 205, 284, 285, 286, 289, 312, 352, 418, 449, 454, 502], "datum": [24, 412], "f": [24, 25, 94, 105, 154, 201, 221, 347, 412, 416, 419, 442, 447, 452, 453, 468, 472, 492, 494, 495, 496, 497, 499, 507, 509, 513], "midst": [24, 312], "accept": [24, 50, 152, 156, 220, 286, 340, 344, 348, 376, 419, 444, 448, 455, 486, 507], "reportdatum": 24, "kwd": 25, "file_path": [25, 27], "embed": [25, 27, 46, 507], "src": [25, 27, 400, 442, 446, 476], "base64": [25, 27], "casetitl": [25, 215, 253, 369, 370, 478], "comprehens": [26, 264, 334, 454], "summar": [26, 29, 40, 56, 67, 71, 205, 367, 368, 454, 471, 478, 479, 487, 492, 507], "cold": [26, 105, 289, 306, 307, 308, 309, 311, 312, 315, 316, 323, 325, 356, 357, 358, 416, 454, 487, 490, 498, 502, 503, 507, 508], "boolean": [26, 27, 79, 152, 156, 167, 205, 262, 286, 289, 312, 316, 318, 319, 325, 332, 335, 369, 376, 396, 412, 416, 418, 442, 503, 507], "part": [26, 57, 117, 168, 205, 242, 284, 312, 319, 323, 334, 338, 340, 348, 419, 442, 451, 454, 455, 463, 484, 487, 494, 497, 507], "tablesect": [26, 27], "pin": [26, 29, 217, 221, 224, 227, 228, 229, 238, 253, 285, 286, 289, 294, 306, 308, 309, 312, 313, 316, 318, 323, 329, 332, 334, 336, 342, 348, 355, 356, 357, 362, 364, 401, 410, 449, 463, 483, 484, 487, 490, 492, 497, 498, 499, 503, 504, 505, 508], "fraction": [26, 81, 83, 85, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 109, 116, 126, 134, 135, 136, 138, 139, 155, 156, 164, 170, 205, 212, 238, 239, 241, 248, 272, 289, 293, 302, 306, 309, 312, 317, 319, 323, 331, 332, 340, 356, 357, 369, 400, 402, 404, 424, 441, 454, 467, 477, 481, 482, 483, 484, 486, 487, 492, 495, 498, 500, 502, 503, 504, 505, 507, 512], "subsect": [26, 27, 221, 290, 446, 485, 514], "componenet": 26, "generatefullcoremap": [26, 28, 29], "showblockaxmesh": [26, 28, 29, 416, 478], "hold": [27, 79, 166, 179, 180, 204, 221, 242, 286, 291, 306, 309, 312, 319, 343, 345, 347, 410, 483, 507], "abc": [27, 39, 290, 340, 342], "htmltree": [27, 454], "htmlelement": [27, 454], "idprefix": 27, "higher": [27, 176, 220, 284, 286, 309, 325, 449, 498, 509, 513], "font": [27, 416], "rang": [27, 47, 57, 93, 104, 116, 332, 343, 345, 397, 411, 452, 456, 460, 467, 471, 473, 474, 482, 492, 497, 500, 507], "term": [27, 164, 167, 168, 213, 220, 241, 248, 253, 332, 336, 412, 483, 484, 498], "href": 27, "referenc": [27, 163, 166, 370], "left": [27, 156, 163, 219, 224, 284, 309, 312, 338, 340, 342, 343, 376, 401, 412, 419, 454, 509, 510, 511], "subhead": 27, "imagepath": 27, "encod": 27, "hexplot": 27, "premad": 27, "png": [27, 319, 416, 453, 462, 507], "With": [27, 45, 286, 343, 349, 492, 498, 507, 510], "row": [27, 44, 167, 183, 203, 312, 401, 411, 419, 421, 437, 454, 509, 513], "rname": [27, 454], "yaxi": [27, 264, 418, 454], "eventu": [27, 152, 290, 335, 401, 486, 507], "axi": [27, 176, 264, 289, 325, 342, 343, 401, 410, 416, 418, 444, 502, 503, 505, 513], "identifi": [27, 78, 105, 153, 156, 284, 289, 290, 315, 317, 400, 404, 439, 484, 498, 503, 507], "peakdpa": 27, "keff": [27, 212, 253, 255, 332, 375, 412, 418, 449, 454, 492, 503, 505, 507, 510], "seri": [27, 56, 57, 78, 152, 153, 174, 205, 412, 418, 446, 497, 507], "effect": [27, 52, 60, 109, 138, 156, 170, 241, 242, 257, 291, 295, 312, 318, 331, 332, 347, 383, 454, 484, 505, 507, 510], "uncertainti": [27, 454], "keffunc": [27, 418, 454, 505], "uncontrol": [27, 212, 418, 441, 498, 499, 505], "burn": [27, 126, 154, 156, 160, 164, 212, 241, 246, 253, 289, 290, 295, 298, 302, 304, 400, 441, 455, 480, 483, 499, 503, 507], "getassembli": [27, 285, 332, 352, 449, 471, 492, 509], "peakbu": 27, "bu": [27, 217, 220, 241, 454, 455], "maxvalu": 27, "defaultdict": [27, 242, 468, 496], "max": [27, 82, 105, 212, 220, 224, 225, 227, 253, 264, 289, 312, 332, 345, 348, 351, 352, 487, 502, 505, 507, 510, 512], "maxpercentbu": [27, 220, 332, 502, 505, 507], "linetoaddto": 27, "our": [27, 46, 192, 368, 376, 408, 429, 448, 451, 454, 455, 456, 469, 484, 491, 494, 498, 507, 510, 511, 513], "ymin": [27, 418, 472], "ext": [27, 91, 93, 124, 377, 383, 446], "minimum": [27, 105, 224, 242, 312, 318, 331, 338, 341, 343, 404, 416, 418, 505, 507], "enum": [27, 78, 79, 154, 180, 240, 242, 335, 377, 408, 486], "enumer": [27, 154, 239, 335, 377, 452, 462, 477, 480, 486], "pdf": [28, 81, 82, 93, 95, 96, 97, 98, 99, 100, 109, 131, 134, 138, 140, 155, 163, 176, 446, 487, 507], "disabl": [28, 79, 205, 242, 253, 257, 419, 425, 437, 449, 486, 503, 507], "spent": [28, 220, 225, 296, 332, 336, 350, 352, 359, 479, 484, 486, 487, 492, 499, 502, 505, 507], "pool": [28, 220, 225, 296, 332, 336, 350, 352, 359, 479, 486, 487, 492, 499, 502, 507], "miscellan": 29, "Then": [29, 47, 166, 241, 286, 289, 312, 494], "maco": [29, 489, 494], "processor": [29, 78, 145, 152, 206, 242, 257, 438, 442, 452, 489, 492, 498], "convergencesummari": 29, "weight": [29, 56, 85, 153, 154, 155, 156, 170, 201, 202, 241, 267, 309, 312, 332, 404, 480, 487, 494, 496, 503, 505, 507], "balanc": [29, 180, 201, 242, 253, 255, 392, 452, 455, 503], "duct": [29, 94, 241, 242, 267, 285, 289, 306, 309, 318, 325, 326, 332, 334, 356, 358, 416, 463, 468, 478, 484, 490, 492, 497, 498, 503, 507, 513], "simplist": [29, 507], "averag": [29, 93, 98, 105, 170, 176, 201, 241, 242, 253, 267, 286, 289, 311, 312, 316, 317, 319, 331, 332, 334, 345, 348, 355, 412, 416, 430, 487, 492, 496, 498, 502, 503, 504, 505, 507], "fz": 29, "fxy": 29, "fq": 29, "edit": [29, 57, 293, 447, 449, 456, 485, 498, 507, 509, 514], "test_timeseri": [30, 31], "test_tablecr": [30, 31], "test_reportcont": [30, 31], "test_reportcontentsend": [30, 31], "test_neutronicsplotfunct": [30, 31], "test_writereport": [30, 31, 32], "test_reportbas": [30, 31], "test_reportlog": [30, 31], "test_getsysteminfolinux": [30, 32], "test_getsysteminfowindow": [30, 32], "test_getsysteminfomac": [30, 32], "test_getsysteminfo": [30, 32], "test_getnodenam": [30, 32], "test_setdata": [30, 32], "test_getdata": [30, 32], "test_reactorspecificreport": [30, 32], "test_writewelcomehead": [30, 32], "test_printreport": [30, 32], "test_distributablereportint": [30, 32], "test_interactbolreportint": [30, 32], "test_interacteverynod": [30, 32, 34, 37, 259, 260, 266, 267], "test_interactboc": [30, 32, 223, 225, 259, 260, 266, 267], "test_interacteoc": [30, 32], "test_interacteol": [30, 32], "_getsysteminfolinux": 32, "mock": [32, 36, 224, 225, 255, 356, 384, 394], "mocksubprocess": 32, "_getsysteminfowindow": 32, "_getsysteminfomac": 32, "saniti": [32, 327, 396, 437], "wild": 32, "mainstream": [32, 145], "distro": 32, "fail": [32, 75, 78, 156, 202, 224, 241, 270, 286, 338, 353, 369, 370, 378, 383, 393, 394, 397, 400, 413, 417, 425, 486, 487, 490, 507], "empti": [32, 38, 44, 79, 105, 139, 156, 202, 212, 224, 227, 241, 257, 284, 286, 289, 331, 347, 357, 358, 362, 364, 383, 408, 416, 419, 421, 437, 483, 487, 494, 498, 507], "machin": [32, 73, 206, 220, 225, 416, 418, 471, 478, 479, 484, 485, 492, 514], "cluster": [32, 47, 56, 61, 78, 370, 415, 497, 507], "trigger": [33, 152, 163, 167, 239, 284, 349, 471, 478, 479, 483, 484, 492, 502, 509], "folder": [33, 62, 205, 213, 215, 413, 425, 446, 454, 455, 485, 494, 497, 509, 514], "review": [33, 138, 164, 205, 383, 448, 449, 455, 456], "collabor": [33, 284, 484], "dumpsnapshot": [33, 37, 507], "defaultsnapshot": [33, 507], "manageri": 33, "assign": [33, 79, 105, 154, 201, 220, 224, 242, 268, 289, 309, 315, 317, 334, 336, 342, 345, 347, 348, 357, 362, 417, 487, 492, 503, 507, 513], "mol": [33, 83, 109, 134, 138, 507], "stamp": 33, "cccnnn": [33, 507], "opposit": [33, 224, 289, 308, 343, 452], "engin": [34, 48, 84, 111, 164, 230, 450, 494, 495, 496, 497, 507], "world": [34, 253, 400, 437], "test_calcmgflu": [34, 35], "test_historyparamet": [34, 35], "test_historyreport": [34, 35], "test_getblockinassembli": [34, 35], "test_timestepfilt": [34, 35], "test_timestepfilteringwithgap": [34, 35], "test_blocknam": [34, 35], "test_fullbreakdown": [34, 36], "test_displaymemoryusag": [34, 36], "test_printfullmemorybreakdown": [34, 36], "test_getreferr": [34, 36], "test_checkforduplicateobjectsonarmimodel": [34, 36], "test_profilememoryusageact": [34, 36], "test_gettotaljobmemori": [34, 36], "test_getcurrentmemoryusag": [34, 36], "test_printcurrentmemoryst": [34, 36], "test_printcurrentmemorystate_noset": [34, 36], "get_contain": [34, 36], "test_expandcontain": [34, 36], "test_counthandlesrecurs": [34, 36], "test_interactcoupl": [34, 37], "test_activeatedefaultsnapshots_30cycles2burnstep": [34, 37], "test_activeatedefaultsnapshots_17cycles5burnstep": [34, 37], "confirm": [35, 356, 378], "mg": [35, 154], "hdf": [35, 492], "hdfdb": [35, 78], "readblockshistori": 35, "historical_valu": 35, "historical_indic": 35, "cast": [35, 136], "energi": [35, 155, 159, 168, 170, 176, 179, 180, 183, 194, 201, 202, 244, 253, 255, 270, 289, 309, 312, 332, 356, 413, 416, 449, 475, 483, 484, 487, 494, 503, 505, 507], "retriev": [35, 79, 153, 154, 156, 185, 202, 203, 205, 212, 250, 309, 312, 315, 317, 332, 334, 341, 345, 355, 356, 357, 358, 364, 405, 486, 492, 496, 507], "paramat": 35, "swap": [35, 145, 147, 220, 224, 418, 471, 492, 507], "5": [35, 37, 55, 57, 79, 81, 84, 94, 97, 98, 102, 113, 121, 137, 140, 141, 143, 152, 154, 164, 168, 174, 176, 191, 212, 220, 221, 238, 239, 248, 286, 289, 298, 319, 325, 338, 341, 343, 355, 357, 362, 400, 411, 419, 438, 441, 454, 456, 469, 470, 471, 473, 474, 478, 479, 480, 489, 491, 492, 494, 496, 497, 498, 499, 503, 507, 509, 511, 513], "loc": [35, 332, 333, 341, 348, 352, 367, 449, 499], "mockcpucount": 36, "mockvmem": 36, "50": [36, 84, 154, 286, 357, 362, 411, 456, 464, 484, 507], "gb": [36, 145, 484], "10": [36, 79, 83, 91, 94, 106, 114, 115, 126, 136, 137, 142, 154, 155, 163, 166, 167, 168, 172, 174, 176, 177, 212, 220, 221, 289, 294, 298, 302, 304, 309, 312, 319, 325, 338, 348, 357, 362, 383, 411, 412, 416, 419, 428, 441, 442, 449, 452, 455, 456, 470, 473, 474, 475, 478, 480, 484, 486, 487, 492, 494, 495, 496, 497, 498, 499, 507], "cpu": [36, 145, 152, 452, 484, 492, 507], "mocksysandprocmemus": 36, "mockprintsysmemuseact": 36, "mock1": 36, "mocksnapshotrequest": 37, "30": [37, 109, 132, 133, 154, 163, 179, 212, 286, 332, 341, 357, 362, 401, 411, 419, 441, 456, 478, 492, 498, 507], "burnstep": [37, 47, 204, 205, 400, 441, 498, 499, 507], "17": [37, 109, 154, 164, 168, 221, 338, 362, 486, 492, 496, 507], "amen": 38, "theoret": [38, 83, 105, 130, 304, 309, 357, 487, 490, 504], "sort": [38, 79, 154, 176, 285, 289, 306, 312, 332, 334, 341, 345, 356, 364, 367, 408, 416, 442, 470, 471, 487, 492, 497, 507], "wide": [38, 171, 308, 312, 373, 383, 447, 495, 498, 505], "vi": [38, 39, 40, 494], "qualiti": [38, 94, 114, 136, 456, 477, 484, 495], "pure": [38, 82, 109, 111, 134, 137, 332, 368, 401, 408, 437, 442, 495], "silo": 38, "binari": [38, 46, 79, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 183, 184, 185, 187, 191, 411, 475, 494, 507, 509], "test_vi": [38, 41, 43], "testvtkmesh": [38, 41, 42], "testvisdump": [38, 41, 42], "test_xdmf": [38, 41], "testxdmf": [38, 41, 43], "dumpstat": [38, 39, 45, 46], "addopt": [38, 40, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 239, 243, 369, 376, 447], "settingsargu": [38, 40, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 239, 243, 379, 382, 447], "docstr": [40, 67, 71, 166, 417, 419, 446, 450, 451, 454, 456, 488], "decor": [40, 67, 71, 348, 383, 402, 403, 413, 423, 451], "instead": [40, 67, 71, 80, 105, 156, 205, 215, 220, 257, 260, 284, 286, 289, 294, 296, 306, 309, 312, 331, 332, 335, 341, 343, 348, 349, 362, 370, 383, 384, 394, 400, 402, 413, 442, 452, 454, 455, 484, 486, 487, 490, 492, 494, 498, 507, 513], "suffici": [40, 67, 71, 109, 205, 221, 257, 313, 498, 507], "short": [40, 48, 56, 61, 67, 71, 164, 215, 218, 253, 345, 347, 348, 370, 377, 451, 456, 485, 498, 507, 514], "express": [40, 48, 335, 411, 438, 442, 455, 456, 471, 484, 498, 507, 511], "One": [40, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 163, 168, 196, 243, 284, 309, 341, 345, 355, 378, 382, 407, 411, 449, 454, 492, 496, 507], "unspecifi": [40, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 243, 268, 382], "parser": [40, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 167, 243, 382, 447], "posit": [40, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 220, 243, 253, 286, 289, 311, 312, 316, 319, 332, 336, 338, 340, 341, 342, 343, 344, 382, 401, 410, 411, 412, 418, 419, 428, 454, 486, 487, 499, 503, 505, 507, 509, 513], "test_testvtkmesh": [41, 42], "test_dumpreactorvtk": [41, 42], "test_dumpreactorxdmf": [41, 42], "test_hexmesh": [41, 42], "test_cartesianmesh": [41, 42], "test_deduptim": [41, 43], "funtion": 43, "vacuum": [43, 176, 332], "resort": 43, "goe": [44, 206, 221, 332, 340, 341, 350, 356, 448, 456, 480], "vertic": [44, 45, 308, 316, 325, 416, 483, 507], "problemat": [44, 296, 484], "primit": [44, 306, 309, 483], "celltyp": 44, "unstructur": [44, 45, 340], "mesh": [44, 45, 46, 51, 126, 166, 171, 173, 178, 179, 184, 242, 253, 255, 286, 289, 290, 292, 298, 301, 302, 304, 311, 312, 316, 319, 320, 325, 328, 330, 331, 332, 336, 337, 338, 341, 342, 343, 344, 348, 358, 412, 416, 471, 478, 479, 486, 487, 492, 498, 499, 502, 503, 504, 505, 507], "vertex": 44, "cell": [44, 289, 332, 336, 338, 340, 341, 342, 343, 395, 401, 410, 428, 437, 446, 498, 499], "onto": [44, 241, 312, 331, 332, 347, 484, 486, 494, 509], "concept": [44, 48, 93, 205, 296, 317, 332, 338, 451, 455, 487, 507], "bunch": [44, 145, 369, 413, 452, 492, 509], "nx3": 44, "per": [44, 45, 51, 77, 126, 156, 160, 164, 166, 170, 205, 214, 257, 289, 306, 312, 319, 320, 330, 332, 338, 370, 400, 418, 419, 437, 449, 455, 483, 484, 487, 498, 503, 505, 507, 513], "belong": [44, 48, 105, 154, 213, 284, 312, 348, 352, 456, 462], "contin": 44, "relev": [44, 79, 161, 205, 220, 230, 257, 291, 316, 332, 334, 349, 351, 408, 448, 457, 482, 489, 499, 500, 507, 509], "writer": [45, 170, 182, 183, 192, 220, 257, 258, 261, 312, 370, 487], "aspect": [45, 225, 362, 419, 449, 497], "export": [45, 219, 485, 494, 514], "doabl": [45, 509], "arbitrari": [45, 79, 140, 255, 295, 300, 331, 332, 333, 336, 356, 357, 370, 408, 414, 419, 430, 437, 444, 447, 449, 452, 486, 494, 507], "visualiz": 45, "fanci": [45, 48, 284, 345], "difficult": [45, 296, 334, 345, 348, 413, 509], "big": [45, 145, 241, 296, 319, 348, 452, 498, 509], "basenam": [45, 46], "inputnam": [45, 46], "finish": [45, 239, 497, 507], "includeparam": [45, 46], "excludeparam": [45, 46], "exclud": [45, 56, 205, 220, 241, 242, 246, 295, 404], "interchang": 46, "interpret": [46, 67, 79, 80, 83, 90, 103, 105, 109, 132, 135, 136, 137, 138, 153, 176, 293, 294, 295, 325, 332, 334, 335, 401, 412, 492, 507, 510], "light": [46, 246, 480, 483, 499], "live": [46, 146, 164, 207, 213, 215, 218, 239, 253, 284, 295, 451, 509, 513], "xml": [46, 353, 369, 377, 499], "paraview": [46, 485, 494, 514], "visit": [46, 400, 485, 494, 514], "properli": [46, 59, 170, 191, 313, 325, 327, 332, 356, 357, 393, 396, 401, 419, 424, 449, 486], "polyhedra": 46, "unfortun": [46, 342, 408, 417, 455, 507], "__need__": 46, "prism": 46, "wedg": 46, "defeat": 46, "xmdf": 46, "cartesian": [46, 57, 176, 285, 286, 294, 312, 318, 332, 335, 336, 340, 341, 343, 356, 364, 383, 388, 401, 421, 467, 471, 481, 482, 484, 486, 487, 499, 500, 507], "theta": [46, 80, 138, 140, 289, 303, 311, 312, 319, 320, 327, 332, 344, 365, 444, 467, 481, 482, 486, 500, 507], "elementtre": 46, "temporalcollect": 46, "analyz": [47, 50, 56, 57, 216, 238, 449, 451, 484, 492, 506, 509], "often": [47, 48, 49, 67, 78, 80, 86, 87, 91, 105, 146, 153, 163, 167, 170, 174, 205, 215, 229, 241, 285, 312, 313, 318, 334, 336, 338, 339, 342, 348, 447, 463, 470, 484, 485, 486, 492, 494, 495, 497, 498, 507, 508, 509, 513, 514], "sweep": [47, 48, 49, 57, 61, 253, 289, 321, 322, 323, 449, 478, 484, 486, 487, 493, 507], "send": [47, 78, 79, 152, 452, 455], "off": [47, 79, 81, 154, 163, 173, 178, 201, 241, 257, 284, 286, 289, 318, 319, 332, 342, 343, 364, 368, 390, 401, 419, 452, 470, 484, 486, 494, 498, 507, 513], "my": [47, 402, 415, 417, 435, 447, 451, 494, 507], "interdepend": [47, 56], "sensit": [47, 51, 201, 284, 331, 332, 347, 348, 484, 486, 497], "studi": [47, 51, 93, 189, 201, 220, 331, 484, 497, 498, 507], "armiloc": 47, "numstep": 47, "11": [47, 79, 83, 93, 102, 117, 138, 154, 176, 188, 193, 221, 338, 362, 412, 419, 449, 470, 478, 486, 487, 492, 496, 497, 498, 499, 507], "submit": [47, 56, 57, 61, 377, 450, 494, 497, 507], "hpc": [47, 56, 61, 78, 484, 494, 497], "samplinginputmodifi": [47, 49, 50, 57, 60], "fullcoremodifi": [47, 49, 50], "settingsmodifi": [47, 49, 50, 313, 321, 322, 487, 497], "multisettingmodifi": [47, 49, 50], "blueprintblockmodifi": [47, 49, 50, 54], "neutronicsmodifi": [47, 49], "neutronicconvergencemodifi": [47, 49, 51, 313, 321, 322], "neutronicmeshssizemodifi": [47, 49, 51], "pintypeinputmodifi": [47, 49], "smeardensitymodifi": [47, 49, 52], "cladthicknessbyodmodifi": [47, 49, 52], "cladthicknessbyidmodifi": [47, 49, 52], "test_cas": [47, 58], "testarmicas": [47, 58, 59], "testcasesuitedepend": [47, 58, 59], "testcasesuitecomparison": [47, 58, 59], "testextrainputwrit": [47, 58, 59], "multifilesinterfac": [47, 58, 59], "testpluginwithduplicateset": [47, 58, 59], "testpluginforcopyinterfacesmultiplefil": [47, 58, 59], "testcopyinterfaceinput": [47, 58, 59], "test_suitebuild": [47, 58], "latinhypercubemodifi": [47, 58, 60], "settingmodifi": [47, 57, 58, 60], "testlatinhypercubesuitebuild": [47, 58, 60], "testfullfactorialsuitebuild": [47, 58, 60], "testseparateeffectsbuild": [47, 58, 60], "independentvari": [47, 48, 50, 59, 60, 497, 507], "addexplicitdepend": [47, 48], "getpotentialparentfromsettingvalu": [47, 48], "setuptaskdepend": [47, 48], "initializeoper": [47, 48, 478], "summarizedesign": [47, 48, 59], "echoconfigur": [47, 56, 497], "writet": [47, 56], "adddegreeoffreedom": [47, 57, 497], "addmodifierset": [47, 57], "buildsuit": [47, 57, 497], "redirect": [48, 56, 368], "post": [48, 56, 78, 316, 317, 447, 492, 493, 507, 509], "reactiv": [48, 105, 166, 213, 229, 241, 246, 253, 316, 332, 348, 484, 492, 503, 505, 507], "coeffici": [48, 80, 82, 84, 93, 96, 97, 98, 100, 105, 106, 134, 137, 138, 168, 175, 209, 213, 229, 241, 253, 257, 306, 316, 332, 348, 356, 412, 444, 492, 495, 503, 505, 507, 511], "complex": [48, 163, 215, 221, 225, 253, 284, 308, 312, 376, 401, 471, 484, 485, 494, 495, 498, 499, 507, 514], "definit": [48, 50, 80, 83, 109, 156, 158, 160, 164, 166, 173, 178, 231, 239, 248, 263, 278, 284, 285, 287, 288, 292, 293, 294, 296, 309, 310, 312, 331, 332, 334, 343, 345, 346, 347, 348, 349, 350, 364, 373, 376, 396, 399, 400, 403, 416, 442, 448, 449, 451, 478, 480, 486, 487, 490, 494, 495, 496, 497, 498, 502, 507, 513], "independentvariabl": 48, "lazi": [48, 455], "demand": [48, 205, 289, 312], "someon": [48, 57, 152, 253, 293, 345, 349, 484], "reflect": [48, 78, 83, 176, 242, 253, 285, 309, 312, 332, 335, 499, 502, 507, 513], "somehow": [48, 161, 367, 451, 452, 456], "ideal": [48, 79, 170, 284, 334, 383, 494], "explicit": [48, 105, 166, 219, 246, 250, 251, 294, 309, 312, 361, 419, 427, 455, 486, 487, 498, 507, 513], "evalu": [48, 94, 105, 136, 154, 160, 163, 167, 201, 206, 221, 246, 257, 294, 312, 315, 323, 356, 408, 411, 412, 419, 455, 470, 484, 485, 499, 503, 507, 514], "impos": [48, 50, 156, 205, 284, 416], "implicitli": [48, 205, 290, 486, 503, 507], "settingvalu": 48, "filepattern": 48, "conveni": [48, 153, 167, 205, 215, 242, 284, 332, 343, 378, 383, 401, 402, 411, 446, 494, 498, 507], "match": [48, 56, 80, 152, 156, 165, 167, 201, 220, 284, 286, 290, 300, 312, 318, 327, 332, 340, 344, 357, 358, 362, 369, 377, 378, 383, 430, 442, 483, 486, 490, 492, 494, 497, 507, 510], "groupdict": 48, "dirnam": 48, "task": [48, 61, 152, 153, 206, 221, 242, 343, 414, 452, 484, 492, 497, 507], "account": [48, 109, 160, 163, 201, 205, 248, 257, 289, 295, 309, 312, 316, 317, 319, 356, 487, 492, 495, 503, 507], "room": [48, 91, 156, 289, 483, 495, 498, 499], "coverag": [48, 184, 325, 356, 448, 487, 497, 507], "eleg": 48, "page": [48, 71, 91, 111, 117, 136, 138, 143, 238, 416, 451, 452, 454, 484, 492, 498, 499, 513], "additionalfil": 48, "modifiedset": 48, "writestyl": [48, 56], "modif": [48, 57, 83, 90, 103, 105, 109, 132, 135, 136, 137, 138, 173, 244, 284, 285, 289, 290, 291, 292, 293, 295, 298, 302, 304, 309, 319, 370, 417, 468, 471, 478, 479, 486, 487, 492, 494, 498, 499], "safer": [48, 370, 454], "wonder": 48, "medium": [48, 56, 75, 285, 295, 334, 370, 377, 487, 499], "destin": [48, 331, 370, 405, 406, 425], "01": [48, 56, 82, 83, 91, 109, 113, 138, 174, 289, 325, 443, 449, 471, 478, 479, 481, 487, 492, 496, 509], "sourcedir": 48, "forthcom": 48, "baselin": [48, 59, 230, 309, 499, 507], "shufflelog": [48, 79, 220, 225, 492, 498, 507], "loadingfil": [48, 498, 499, 507], "geomfil": [48, 290, 507, 509], "respect": [48, 96, 97, 100, 168, 205, 246, 286, 295, 347, 375, 477, 484, 511], "let": [48, 56, 105, 242, 284, 289, 397, 449, 452, 484, 492, 494, 495, 496, 498, 507, 508, 513], "union": [48, 79, 105, 163, 242, 284, 285, 312, 335, 340, 343, 358, 367, 375, 401, 408, 442], "ping": 48, "modular": [48, 263, 484, 494], "absolut": [48, 79, 312, 336, 343, 370, 415, 442, 488, 507], "wildcard": 48, "glob": [48, 79, 425, 486], "offer": [48, 378, 447, 457, 482, 496, 500], "noth": [48, 201, 217, 225, 332, 341, 356, 392, 416], "inputdirectori": [48, 369, 370, 497], "target": [48, 79, 246, 285, 289, 312, 313, 316, 317, 325, 332, 334, 383, 412, 413, 418, 419, 448, 484, 485, 487, 494, 503, 507, 513, 514], "resolv": [48, 80, 312, 316, 326, 369, 378, 380, 400, 442, 487], "regard": [48, 238], "simplifi": [48, 94, 114, 130, 136, 152, 246, 383, 408, 490, 498, 511], "runtim": [49, 78, 80, 203, 205, 262, 284, 318, 323, 486, 487, 494, 507], "test_inputmodifi": [49, 53], "mockgeom": [49, 53, 54, 55], "testsuitebuilderintegr": [49, 53, 54], "testsettingsmodifi": [49, 53, 54], "neutronicskernelopt": [49, 53, 54], "testfullcoremodifi": [49, 53, 54], "test_pintypeinputmodifi": [49, 53], "testblueprintmodifi": [49, 53, 55], "fail_if_aft": [49, 50, 52], "constuctor": 50, "paramtyp": [50, 57, 60], "__call__": [50, 57, 497], "space": [50, 52, 57, 78, 105, 139, 167, 205, 215, 289, 294, 306, 312, 315, 332, 336, 337, 342, 343, 400, 401, 416, 419, 473, 483, 484, 498, 503, 507, 513], "sampl": [50, 57, 312, 333, 421, 486, 498], "quasi": [50, 57, 336, 483], "random": [50, 57, 286, 345, 417, 428, 435, 452], "continu": [50, 57, 336, 342, 400, 411, 419, 437, 449, 451, 469, 480, 484, 487, 496, 507], "discret": [50, 57, 166, 332, 342], "inclus": [50, 163, 442, 504, 507], "grow": [50, 286, 318, 334, 348, 364, 416, 418, 495, 507], "symmetr": [50, 176, 289, 319, 332, 340, 341, 342, 343, 449, 507], "besid": [50, 213], "expans": [50, 62, 80, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 105, 106, 112, 113, 116, 117, 126, 132, 133, 134, 136, 137, 138, 141, 142, 143, 220, 253, 284, 286, 289, 295, 306, 309, 314, 315, 316, 317, 318, 325, 326, 329, 356, 357, 396, 404, 419, 424, 425, 449, 467, 481, 482, 484, 486, 487, 490, 492, 495, 497, 500, 503, 505, 506, 507], "schedul": [50, 79, 204, 221, 455, 494, 507], "expand": [50, 62, 82, 83, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 126, 137, 141, 143, 156, 238, 286, 293, 294, 295, 300, 306, 309, 312, 316, 317, 318, 319, 325, 332, 335, 356, 357, 364, 401, 404, 412, 419, 424, 446, 454, 472, 483, 486, 487, 492, 495, 497, 498, 499, 507, 511], "themself": 50, "settingnam": [50, 57, 60, 67, 369, 376, 378], "adjust": [50, 51, 52, 55, 57, 79, 105, 156, 238, 251, 253, 286, 289, 295, 309, 312, 316, 322, 323, 356, 357, 449, 480, 485, 487, 497, 498, 499, 502, 507, 514], "settingv": 50, "conf_neutronics_typ": [50, 239, 253, 454], "conf_coarse_mesh_rebal": 50, "conf_eps_eig": 51, "conf_eps_fsavg": 51, "conf_eps_fspoint": 51, "100": [51, 81, 83, 96, 97, 100, 134, 154, 156, 220, 286, 289, 325, 362, 417, 419, 442, 455, 456, 464, 468, 497, 498, 499, 505, 507, 512], "criteria": [51, 79, 184, 212, 220, 253, 289, 290, 312, 332, 347, 507, 510], "multfactor": 51, "factor": [51, 105, 168, 184, 202, 205, 212, 220, 253, 286, 289, 308, 309, 312, 316, 317, 325, 332, 345, 356, 400, 441, 487, 492, 495, 498, 503, 505, 507, 512], "switch": [51, 260, 289, 295, 332, 345, 378, 401, 455, 487, 498, 507], "nodal": [51, 176, 179, 253, 289, 319], "finit": [51, 168, 175, 253, 319, 338, 341, 343, 411, 507], "approxim": [51, 134, 140, 239, 241, 242, 306, 312, 318, 319, 369, 418, 463, 484, 497, 498, 503, 507], "multipli": [51, 105, 155, 168, 201, 220, 238, 253, 262, 289, 312, 411, 503, 507], "axial": [51, 105, 126, 176, 184, 220, 253, 284, 285, 286, 289, 290, 292, 298, 301, 302, 304, 308, 309, 311, 314, 315, 316, 317, 319, 320, 325, 330, 331, 332, 334, 336, 338, 340, 341, 342, 343, 356, 358, 396, 412, 416, 418, 464, 486, 487, 490, 492, 494, 498, 499, 503, 505, 506, 507], "_pintypeassemblymodifi": 52, "smear": [52, 55, 289, 323, 329, 331, 483, 486, 498, 499, 503], "clad": [52, 55, 94, 213, 229, 242, 285, 286, 289, 300, 302, 309, 312, 318, 323, 325, 326, 332, 334, 356, 357, 358, 463, 468, 478, 483, 484, 487, 492, 497, 498, 499, 503, 505, 507, 508, 513], "tube": [52, 289, 483, 498, 499, 513], "fabric": [52, 213, 216, 404, 449, 503, 507], "thick": [52, 55, 311, 318, 323, 492, 498], "inner": [52, 55, 220, 221, 242, 285, 286, 289, 292, 308, 309, 311, 312, 315, 318, 323, 334, 338, 344, 356, 357, 454, 487, 490, 492, 494, 497, 498, 499, 503, 507, 508], "diamet": [52, 55, 289, 308, 315, 318, 323, 357, 492, 497, 498, 503, 507, 508], "outer": [52, 55, 176, 221, 253, 285, 286, 289, 306, 308, 311, 312, 315, 318, 319, 323, 332, 334, 344, 356, 357, 401, 463, 487, 492, 494, 497, 498, 503, 507, 508], "test_smeardensityfail": [53, 54], "test_settingsmodifi": [53, 54], "test_blueprintblockmodifi": [53, 54], "test_neutronicconvergencemodifi": [53, 54], "test_fullcoreconvers": [53, 54], "test_adjustsmeardens": [53, 55, 324, 329], "test_cladthickenessbyodmodifi": [53, 55], "test_cladthickenessbyidmodifi": [53, 55], "areafuel": 55, "smeardens": [55, 503], "innercladarea": 55, "fuelod": 55, "cladid": 55, "sqrt": [55, 308, 323, 341, 343, 410, 471, 472, 510], "cladthick": [55, 497], "od": [55, 286, 289, 302, 307, 308, 311, 357, 358, 470, 478, 497, 498, 499, 507, 508, 513], "cladthic": 55, "12": [55, 79, 82, 83, 102, 142, 143, 152, 154, 156, 221, 338, 362, 400, 412, 419, 442, 449, 456, 469, 470, 471, 477, 478, 486, 490, 492, 496, 507], "24": [55, 142, 154, 309, 338, 362, 419, 487], "cladod": 55, "025": 55, "05": [55, 82, 85, 143, 248, 375, 417, 449, 462, 471, 478, 479, 480, 481, 487, 492, 496, 497, 507], "conjunct": [56, 437, 507], "uniqu": [56, 120, 153, 156, 286, 312, 345, 507, 509, 513], "rootdir": [56, 369], "ignorepattern": [56, 369], "won": [56, 59, 177, 205, 402, 416, 442, 456, 499], "deleg": [56, 219], "oldroot": 56, "By": [56, 79, 215, 241, 286, 334, 343, 412, 419, 463, 494, 499, 507, 511], "thought": [56, 204, 456, 502], "benefici": [56, 67, 451, 454, 484], "person": 56, "consequ": [56, 152, 153, 164, 309, 345, 452], "infer": [56, 101, 102, 289, 381, 419, 507, 509], "mirror": [56, 213, 494], "tableresult": 56, "perturb": [57, 79, 105, 241, 253, 289, 311, 312, 323, 332, 484, 497], "combin": [57, 105, 135, 156, 174, 201, 312, 318, 319, 334, 335, 336, 343, 367, 400, 408, 490, 494, 497, 503, 507], "modifierset": [57, 497], "pop": [57, 336, 342, 378, 456, 471], "degre": [57, 81, 82, 96, 97, 100, 105, 114, 217, 221, 224, 286, 289, 312, 319, 332, 341, 401, 410, 412, 442, 497, 502, 503, 505, 507, 513], "freedom": [57, 497], "sweepbuild": 57, "exact": [57, 154, 183, 213, 246, 286, 300, 307, 309, 312, 332, 341, 358, 413, 449, 507], "callabl": [57, 78, 284, 285, 312, 332, 347, 348, 376, 378], "signatur": [57, 167, 220, 455, 486], "amount": [57, 224, 319, 325, 347, 455, 483, 492, 503, 505, 507], "inputmodifierset": 57, "namingfunc": 57, "meaning": [57, 284, 309, 348, 377, 378, 401, 442, 484, 494], "0000": [57, 164, 497], "four": [57, 312, 338, 456, 489, 507], "digit": [57, 88, 142, 153, 168, 241, 332, 400, 412, 484], "deem": [57, 205, 241, 449], "__init__": [57, 120, 152, 205, 207, 213, 284, 294, 296, 306, 309, 338, 340, 341, 342, 344, 345, 347, 348, 377, 386, 451, 455, 494], "newset": [57, 370], "builder": [57, 60, 284, 446, 487, 497, 507, 513], "somecas": 57, "settingname1": 57, "settingname2": 57, "noisefract": 57, "nois": 57, "avoid": [57, 79, 220, 238, 241, 242, 318, 331, 356, 413, 416, 450, 452, 486, 487, 499, 507, 510], "statist": [57, 497], "postprocessor": 57, "caution": [57, 286], "ongo": [57, 63, 323, 484], "research": [57, 117, 494], "isol": [57, 497], "settignnam": 57, "latin": [57, 487], "hypercub": [57, 487], "lh": 57, "evenli": [57, 312, 452, 507], "fewer": [57, 332, 448], "randomli": 57, "nonoverlap": 57, "partit": 57, "recommend": [57, 79, 213, 242, 289, 318, 337, 338, 341, 344, 345, 405, 451, 453, 484, 485, 494, 498, 503, 507, 513, 514], "surrog": [57, 291], "unlik": [57, 260, 338, 342, 348, 451], "modfier": 57, "inputparametermodifi": 57, "pararmtyp": 57, "test_summarizedesign": [58, 59], "test_independentvari": [58, 59], "test_setuptaskdepend": [58, 59], "test_getcoveragercfil": [58, 59], "test_startcoverag": [58, 59], "test_endcoverag": [58, 59], "test_startprofil": [58, 59], "test_endprofil": [58, 59], "test_run": [58, 59, 74, 76], "test_clon": [58, 59], "test_checkinput": [58, 59], "test_dependencieswithobscurepath": [58, 59], "test_dependencyfromdbnam": [58, 59], "test_dependencyfromexplictrepeatshuffl": [58, 59], "test_explicitdepend": [58, 59], "test_titlesettergett": [58, 59], "test_comparenodiff": [58, 59], "test_writeinput": [58, 59], "test_copyinputshelp": [58, 59], "test_copyinterfaceinputs_singlefil": [58, 59], "test_copyinterfaceinputs_nonfilepath": [58, 59], "test_failonduplicateset": [58, 59], "test_copyinterfaceinputs_multiplefil": [58, 59], "test_copyinterfaceinputs_wildcardfil": [58, 59], "test_copyinterfaceinputs_relpath": [58, 59], "test_copyinterfaceinputs_abspath": [58, 59], "test_initi": [58, 60], "test_buildsuit": [58, 60], "test_adddegreeoffreedom": [58, 60], "assert": [59, 126, 212, 225, 255, 325, 364, 378, 436, 455], "bonu": [59, 493, 503], "damag": [59, 155, 214], "escap": 59, "charact": [59, 153, 156, 167, 242, 289, 291, 419, 442, 455, 456, 486, 489, 502, 507, 513], "reveal": [59, 227], "vehicl": 59, "lhc": 60, "event": [61, 224, 246, 471, 478, 479, 487, 492, 507, 509], "submitsuit": 61, "prog": 61, "epilog": 61, "formatter_class": 61, "argpars": [61, 67, 447], "helpformatt": 61, "prefix_char": 61, "fromfile_prefix_char": 61, "argument_default": 61, "conflict_handl": 61, "add_help": 61, "allow_abbrev": 61, "exit_on_error": 61, "argumentpars": [61, 67], "exit": [61, 67, 78, 347, 405, 494, 507], "test_runentrypoint": [61, 74], "buildtestdb": [61, 74, 75], "testinitializationentrypoint": [61, 74, 75], "testcheckinputentrypoint": [61, 74, 75], "testclonearmiruncommandbatch": [61, 74, 75], "testclonesuitecommand": [61, 74, 75], "testcomparecas": [61, 74, 75], "testcomparesuit": [61, 74, 75], "testexpandblueprint": [61, 74, 75], "testextractinput": [61, 74, 75], "testinjectinput": [61, 74, 75], "testmigrateinput": [61, 74, 75], "testmodifycasesettingscommand": [61, 74, 75], "testreportsentrypoint": [61, 74, 75], "testcompareisotxslibsentrypoint": [61, 74, 75], "testrunentrypoint": [61, 74, 75], "testrunsuitecommand": [61, 74, 75], "testvisfileentrypointcommand": [61, 74, 75], "test_runsuit": [61, 74], "testrunsuitesuit": [61, 74, 76], "parse_arg": [61, 66, 67], "createoptionfromset": [61, 67, 447], "report_out_dir": [61, 71], "totwotupl": [61, 71], "needlessli": [62, 67, 502], "clutter": [62, 67], "inconsist": [62, 79, 242, 332, 342, 348], "occasion": [63, 284, 408], "comparison": [65, 312, 332, 335, 357, 383, 483, 487], "handi": [66, 456, 484, 509], "facilit": [66, 335, 353, 484, 486, 507], "overwrit": [66, 176, 312, 319, 370, 400, 446, 454, 507], "inject": [66, 293, 295, 396, 399], "overrid": [67, 152, 220, 284, 293, 295, 368, 376, 396, 400, 419, 449, 452, 507, 513], "add_argu": [67, 447], "sub": [67, 152, 167, 205, 215, 289, 349, 452, 484, 506, 507], "exitcod": 67, "success": [67, 79, 205, 242, 375, 415, 513], "additionalalia": 67, "suppresshelp": 67, "additionalalis": 67, "care": [67, 201, 205, 239, 289, 295, 312, 332, 349, 415, 442, 448, 454, 455, 456, 484, 507, 509, 513], "distinct": [67, 348, 454, 499], "supresshelp": 67, "suppress": [67, 369], "messag": [67, 79, 284, 302, 346, 368, 377, 384, 403, 442, 448, 450, 452, 483, 486, 507, 509], "almost": [67, 167, 176, 312, 334, 430, 456, 484], "unus": [67, 221, 257, 258, 351, 455, 486, 487, 489, 490, 507], "booldefault": 67, "ep": [67, 212, 320, 383], "editor": [68, 401, 485, 486, 498, 507, 513, 514], "spin": [68, 163, 248], "latest": [69, 145, 160, 166, 241, 289, 312, 446, 503], "keyword": [70, 284, 332, 400, 413, 419, 450], "reportsoutputfil": [71, 454, 501], "strinput": 71, "integ": [71, 166, 167, 220, 221, 241, 286, 289, 312, 325, 334, 348, 397, 401, 408, 412, 416, 419, 437, 449, 490, 503, 505, 509, 512], "web": [71, 87, 91, 94, 100, 114, 137, 166, 172, 176, 177, 446, 452], "mpirun": [73, 394], "mpiexec": [73, 78, 393, 426, 452], "test_entrypointiniti": [74, 75], "test_checkinputentrypointbas": [74, 75], "test_checkinputentrypointinvok": [74, 75], "test_clonearmiruncommandbatchbas": [74, 75], "test_clonearmiruncommandbatchinvokeshort": [74, 75], "test_clonearmiruncommandbatchinvokemedium": [74, 75], "test_clonesuitecommandbas": [74, 75], "test_comparecasesbas": [74, 75], "test_comparesuitesbas": [74, 75], "test_expandblueprintsbas": [74, 75], "test_extractinputsbas": [74, 75], "test_injectinputsbas": [74, 75], "test_injectinputsinvokeignor": [74, 75], "test_injectinputsinvokenodata": [74, 75], "test_migrateinputsbas": [74, 75], "test_modifycasesettingscommandbas": [74, 75], "test_modifycasesettingscommandinvok": [74, 75], "test_totwotupl": [74, 75], "test_cleanarg": [74, 75], "test_reportsentrypointbas": [74, 75], "test_compareisotxslibsbas": [74, 75], "test_runentrypointbas": [74, 75], "test_runcommandhelp": [74, 75], "test_executecommand": [74, 75], "test_runsuitecommandbas": [74, 75], "test_visfileentrypointbas": [74, 75], "test_listcommand": [74, 76], "test_showvers": [74, 76], "numnod": 75, "numcycl": 75, "fiction": 75, "mockexecmd": 76, "pytest": [77, 393, 395, 426, 448, 455, 484, 486], "act": [77, 202, 218, 286, 312, 332, 344, 347, 370, 411, 454, 492], "shop": 77, "submodul": [77, 445, 446], "larger": [77, 412, 456, 498, 499, 507], "project": [77, 166, 311, 447, 448, 451, 456, 473, 474, 484, 485, 494, 514], "session": [77, 205, 416, 486, 499], "termin": [78, 152, 411, 485, 493, 514], "forc": [78, 156, 257, 286, 316, 318, 332, 348, 370, 394, 412, 425, 449, 456, 487, 492, 507], "fast_path": [78, 205, 486], "drive": [78, 215, 306, 317, 393, 415, 455, 463, 498, 507], "obliter": 78, "danger": 78, "olderthandai": 78, "sigbreak": 78, "cancel": [78, 377, 510], "atexit": 78, "notabl": [78, 509], "taskcancelgraceperiod": 78, "sigterm": 78, "sigint": 78, "older": [78, 95, 153, 486, 507], "unrel": [78, 456], "dai": [78, 166, 205, 212, 284, 286, 349, 400, 412, 441, 454, 483, 484, 492, 498, 502, 503, 504, 505, 507, 509, 512], "earlier": [78, 284, 347], "concurr": 78, "forcibli": 78, "disconnect": 78, "hack": [78, 376, 502], "gracefulli": [78, 312], "destroi": [78, 503], "caus": [78, 174, 202, 302, 309, 312, 318, 331, 332, 349, 378, 406, 448, 455, 485, 487, 503, 514], "why": [78, 185, 286, 289, 442, 451, 499], "never": [78, 164, 213, 239, 257, 289, 294, 295, 306, 341, 419, 452, 454, 455, 507], "appear": [78, 90, 221, 284, 367, 369, 376, 416, 434, 442, 492], "repr": 78, "ing": 78, "manual": [78, 156, 158, 160, 176, 191, 200, 201, 205, 212, 246, 295, 313, 325, 332, 334, 367, 484, 492, 496, 507], "learn": [79, 472, 473, 474, 484, 506], "architectur": [79, 205, 284, 450, 484, 494], "createinterfac": [79, 204, 205, 209, 449], "globalflux": [79, 205, 213, 239, 375, 510], "globalfluxinterfac": [79, 239, 252, 255, 487, 490, 510], "maxit": 79, "interactallcoupl": [79, 204, 205], "maximum": [79, 105, 153, 220, 224, 227, 242, 289, 306, 312, 332, 334, 400, 412, 416, 419, 489, 502, 503, 505, 507, 513], "val": [79, 105, 167, 198, 248, 289, 306, 309, 311, 312, 331, 332, 376, 400, 412, 416, 417, 435, 452, 492], "_supported_typ": 79, "commonli": [79, 105, 163, 253, 383, 401, 415, 447, 507], "equal": [79, 152, 160, 166, 168, 170, 172, 174, 177, 202, 205, 220, 224, 257, 289, 306, 308, 312, 320, 342, 356, 362, 376, 383, 400, 401, 412, 416, 417, 452, 472, 480, 498, 507, 511, 513], "typeerror": [79, 341, 376, 381, 444], "met": [79, 289, 510, 513], "recent": [79, 176, 484, 502], "critera": [79, 312], "On": [79, 166, 172, 312, 451, 484, 485, 495, 497, 514], "condit": [79, 152, 156, 164, 215, 229, 239, 253, 257, 284, 286, 289, 335, 338, 340, 363, 365, 378, 406, 411, 483, 484, 490, 497, 498, 499, 507, 513], "stale": [79, 253, 348, 487], "increment": [79, 283, 286, 289, 401, 410, 412, 507], "clear": [79, 105, 156, 165, 201, 241, 260, 286, 289, 309, 312, 319, 330, 331, 348, 357, 446, 455, 487, 498], "2d": [79, 83, 89, 104, 105, 137, 200, 242, 307, 311, 312, 341, 342, 343, 390, 412, 419, 437, 449, 487], "3d": [79, 82, 83, 84, 89, 90, 91, 93, 94, 96, 97, 98, 100, 104, 105, 106, 112, 113, 117, 141, 143, 300, 309, 311, 342, 357, 390, 473, 474, 494], "norm": [79, 492, 494, 510], "listtocheck": 79, "dim": [79, 289, 316, 470, 499], "eponym": 79, "categori": [79, 212, 229, 253, 257, 285, 332, 334, 345, 348, 390, 456, 471, 478, 479, 487, 490, 492, 509], "driver": [79, 242, 285, 312, 318, 326, 334, 452, 507], "neutronsperfiss": 79, "torestor": 79, "restor": [79, 105, 309, 312, 340, 343, 347, 348, 356, 364, 368], "distributest": [79, 152, 393], "quiet": [79, 105, 312], "callback": 79, "pickl": [79, 286, 312, 340, 347, 392, 400], "detach": [79, 204, 205, 342], "deepcopi": [79, 105, 248, 286, 289, 290, 487], "immedi": [79, 312, 318, 332, 341, 343, 345, 349, 484], "occur": [79, 105, 152, 154, 156, 158, 164, 205, 219, 220, 221, 284, 295, 325, 326, 332, 345, 377, 419, 442, 449, 455, 496, 502, 503, 504, 505, 507], "subcycl": [79, 205], "repeatedli": 79, "peripher": [79, 205, 221, 241], "cr": [79, 88, 154, 209, 253, 295, 302, 492, 497, 498, 507], "worth": [79, 166, 209, 220, 253, 442, 454, 455, 456, 484, 505], "theori": [79, 168, 312], "_cmd": 79, "incom": [79, 176, 191, 220], "statu": [79, 315, 317, 345, 377, 446, 485, 507, 514], "statement": [79, 206, 253, 312, 325, 343, 346, 377, 378, 405, 442, 450, 452, 456], "wrong": [79, 289, 302, 304, 312, 451], "innam": [79, 253], "outnam": [79, 253], "interpol": [79, 116, 117, 286, 412], "anywher": [79, 494, 507], "failur": [79, 312, 318, 395, 451, 507], "advent": 79, "perhap": [79, 284, 342, 345, 484, 507, 509], "externalcodeinterfac": [79, 253, 258], "eci": [79, 261], "anyth": [79, 164, 167, 215, 220, 253, 268, 289, 306, 309, 312, 332, 347, 378, 419, 448, 449, 456, 484, 494, 497, 507], "involv": [79, 205, 215, 332, 357, 484, 507, 510], "packag": [79, 202, 205, 207, 284, 312, 343, 348, 408, 419, 442, 445, 449, 450, 451, 455, 484, 485, 492, 493, 494, 509, 514], "klass": [79, 347], "addinterfac": [79, 204, 205], "ultim": [79, 220, 284, 285, 325, 332, 334, 349, 492, 497, 498, 510], "field": [79, 138, 312, 316, 325, 343, 345, 376, 400, 408, 419, 437, 498, 507], "scope": [80, 246, 313, 315, 383, 451, 484, 487, 492, 494, 497, 499, 507], "thermo": [80, 309, 449, 507], "heat": [80, 81, 93, 96, 97, 100, 101, 102, 105, 113, 121, 137, 138, 213, 279, 336, 356, 484, 494, 495, 499, 502, 503, 507], "capac": [80, 81, 93, 96, 97, 100, 101, 102, 105, 113, 137, 138, 205, 494, 495, 498, 507], "linear": [80, 82, 83, 84, 88, 94, 96, 97, 100, 105, 106, 112, 113, 117, 126, 132, 133, 134, 136, 137, 138, 141, 142, 143, 286, 289, 309, 325, 331, 412, 487, 492, 495, 497, 498, 503, 511], "viscos": [80, 102], "nuclear": [80, 84, 86, 87, 91, 105, 138, 153, 154, 156, 163, 164, 165, 166, 177, 185, 196, 213, 216, 238, 239, 246, 312, 352, 401, 449, 483, 489, 492, 494, 496, 499, 505, 507], "alon": [80, 241, 309, 312, 470], "thermal": [80, 81, 82, 83, 84, 90, 91, 93, 94, 96, 97, 98, 100, 102, 105, 106, 109, 112, 113, 114, 117, 132, 134, 137, 138, 140, 141, 143, 161, 163, 229, 238, 276, 278, 279, 280, 282, 306, 309, 312, 315, 316, 317, 318, 325, 326, 329, 332, 348, 356, 357, 448, 467, 481, 482, 484, 486, 487, 492, 493, 495, 498, 500, 503, 505, 506, 507, 508], "scatter": [80, 84, 91, 105, 113, 138, 140, 152, 161, 163, 168, 174, 183, 198, 200, 201, 202, 203, 262, 467, 469, 473, 474, 481, 482, 486, 496, 499, 500, 503, 507], "law": [80, 161, 163, 448, 484, 498], "macroscop": [80, 168, 198, 201, 202, 262, 271, 487, 499, 507], "highli": [80, 219, 242, 453, 471, 485, 498, 514], "team": [80, 419, 437, 448, 456, 484, 494, 513], "updatesourc": 80, "dev": [80, 397, 484, 485, 514], "resolut": [80, 345, 378, 486], "formal": [80, 334, 347, 486, 491, 494], "registri": [80, 284, 285], "data_sourc": [80, 105], "sai": [80, 199, 201, 284, 334, 368, 369, 378, 410, 448, 452, 454, 456, 484, 498, 507, 513], "namespaceord": 80, "latter": [80, 300], "conf_material_namespace_ord": 80, "kentucki": 80, "transport": [80, 81, 114, 171, 176, 213, 239, 253, 262, 286, 331, 484, 487, 498, 503], "cabinet": 80, "colon": [80, 494], "classnam": [80, 507], "prefer": [80, 145, 164, 284, 286, 312, 317, 332, 343, 376, 402, 419, 450, 456, 490, 494, 507], "material_namespace_ord": 80, "modulepath": [80, 415], "matcl": [80, 477], "els": [80, 167, 168, 220, 257, 286, 289, 312, 332, 335, 378, 400, 416, 419, 452, 480, 492, 494, 497, 507], "test__init__": [80, 119], "bettersubclasscheck": [80, 119, 120], "materials__init__test": [80, 119, 120], "test_air": [80, 119], "test_b4c": [80, 119], "b4c_testcas": [80, 119, 122], "test_be9": [80, 119], "test_graphit": [80, 119], "graphite_testcas": [80, 119, 124], "test_lithium": [80, 119], "lithium_testcas": [80, 119, 125], "test_materi": [80, 119, 424], "materialconstructiontest": [80, 119, 126], "materialfindingtest": [80, 119, 126, 424], "californium_testcas": [80, 119, 126], "cesium_testcas": [80, 119, 126], "magnesium_testcas": [80, 119, 126], "magnesiumoxide_testcas": [80, 119, 126], "molybdenum_testcas": [80, 119, 126], "mox_testcas": [80, 119, 126], "nacl_testcas": [80, 119, 126], "niobiumzirconium_testcas": [80, 119, 126], "potassium_testcas": [80, 119, 126], "scandiumoxide_testcas": [80, 119, 126], "sodium_testcas": [80, 119, 126], "tantalum_testcas": [80, 119, 126], "thoriumuraniummetal_testcas": [80, 119, 126], "uranium_testcas": [80, 119, 126], "uraniumoxide_testcas": [80, 119, 126], "thorium_testcas": [80, 119, 126], "thoriumoxide_testcas": [80, 119, 126, 129], "void_testcas": [80, 119, 126], "mixture_testcas": [80, 119, 126], "lead_testcas": [80, 119, 126], "leadbismuth_testcas": [80, 119, 126], "copper_testcas": [80, 119, 126], "sulfur_testcas": [80, 119, 126, 128], "zr_testcas": [80, 119, 126], "inconel_testcas": [80, 119, 126], "inconel600_testcas": [80, 119, 126], "inconel625_testcas": [80, 119, 126], "inconelx750_testcas": [80, 119, 126], "alloy200_testcas": [80, 119, 126], "cah2_testcas": [80, 119, 126], "hafnium_testcas": [80, 119, 126], "hastelloyn_testcas": [80, 119, 126], "tzm_testcas": [80, 119, 126], "yttriumoxide_testcas": [80, 119, 126], "zincoxide_testcas": [80, 119, 126], "fuelmaterial_testcas": [80, 119, 126], "test_sic": [80, 119], "test_sulfur": [80, 119], "test_thoriumoxid": [80, 119], "test_uzr": [80, 119], "uzr_testcas": [80, 119, 130], "test_wat": [80, 119], "propertyvalidtemperatur": [80, 81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143], "setdefaultmassfrac": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143], "pseudodens": [80, 81, 83, 89, 90, 101, 102, 103, 104, 105, 111, 113, 114, 116, 135, 137, 139, 140, 420, 424, 487], "specificvolumeliquid": [80, 81, 114], "thermalconduct": [80, 81, 93, 94, 96, 97, 100, 102, 103, 105, 113, 114, 132, 133, 134, 137, 138, 143, 508], "heatcapac": [80, 81, 93, 96, 97, 100, 101, 102, 103, 105, 113, 137, 138, 494, 495], "modelconst": [80, 82, 105], "referencemaxpercentimpurit": [80, 82], "linearexpansiontablek": [80, 82, 143], "linearexpansiont": [80, 82, 143], "linearexpans": [80, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 132, 133, 134, 137, 138, 141, 143], "enrichednuclid": [80, 83, 90, 103, 105, 109, 132, 135, 136, 137, 138, 309], "applyinputparam": [80, 83, 103, 105, 109, 116, 132, 134, 135, 136, 137, 138], "updatetd": [80, 83, 116], "setnewmassfracsfrommassenrich": [80, 83], "getmassenrichmentfromnumenrich": [80, 83], "linearexpansionperc": [80, 83, 84, 88, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 117, 134, 136, 137, 138, 141, 142, 143, 324, 325, 511], "thermalscatteringlaw": [80, 84, 91, 105, 113, 138, 140], "meltingpoint": [80, 89, 103, 109, 113, 132, 133, 134, 137, 138], "setmassfrac": [80, 90, 105, 285, 312], "materialintro": [80, 93, 137], "reftempk": [80, 93, 96, 97, 98, 100, 105, 113, 143], "meancoefficientthermalexpans": [80, 93, 98], "polyfitthermalconduct": [80, 96, 97, 100], "polyfitheatcapac": [80, 96, 97, 100], "polyfitlinearexpansionperc": [80, 96, 97, 100], "volumetricexpans": [80, 101, 102, 105, 116], "dynamicvisc": [80, 102], "boilingpoint": [80, 103], "getchildren": [80, 105, 285, 312, 354, 358, 492], "getchildrenwithflag": [80, 105, 285, 312, 354, 358, 513], "backup": [80, 105, 285, 306, 309, 312, 336, 340, 343, 345, 347, 348], "restorebackup": [80, 105, 285, 306, 309, 312, 336, 340, 343, 345, 347, 348], "clearcach": [80, 105, 285, 306, 309, 312], "linearexpansionfactor": [80, 105, 495, 511], "getthermalexpansiondensityreduct": [80, 105], "adjustmassenrich": [80, 105, 285, 306, 309, 312], "adjustmassfrac": [80, 105, 285, 312], "gettemperatureatdens": [80, 105], "liquidporos": [80, 105, 306, 309, 503], "gasporos": [80, 105, 306, 309, 503], "pseudodensitykgm3": [80, 105], "densitykgm3": [80, 105], "getcorrosionr": [80, 105], "yieldstrength": [80, 105], "getproperti": [80, 105, 306, 309, 494, 508], "getmassfrac": [80, 105, 245, 248, 285, 312], "clearmassfrac": [80, 105], "removenucmassfrac": [80, 105], "checkpropertytemprang": [80, 105], "checktemprang": [80, 105], "densitytimesheatcapac": [80, 105, 487], "gettempchangefordensitychang": [80, 105], "gettd": [80, 105], "adjusttd": [80, 105], "class1_wt_frac": [80, 105, 404, 507], "class1_custom_isotop": [80, 105, 507], "class2_custom_isotop": [80, 105, 507], "pufrac": [80, 105, 356, 487, 503, 504], "ufrac": [80, 105], "zrfrac": [80, 105, 504], "getmassfracpuo2": [80, 109], "setmassfracpuo2": [80, 109], "getmolfracpuo2": [80, 109], "propertyequ": [80, 113, 137], "propertyunit": [80, 113, 137, 138], "propertynot": [80, 113, 137], "cumulativelinearexpans": [80, 113], "enthalpi": [80, 114, 140], "temperaturec": [80, 117], "percentthermalexpans": [80, 117], "getenrich": [80, 132, 306, 309, 486], "zrfracdefault": [80, 136], "ufracdefault": [80, 136], "propertyrawdata": [80, 137], "refden": [80, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 137, 141, 143, 492], "ea": [80, 138], "c1": [80, 138], "c2": [80, 138], "c3": [80, 138], "reference_temperatur": [80, 138], "thermalconductivitytablek": [80, 138], "thermalconductivityt": [80, 138], "temperature_critical_k": [80, 140], "density_critical_kgpercubicmet": [80, 140], "density_critical_gpercubiccentimet": [80, 140], "vapor_pressure_critical_mpa": [80, 140], "vapor_pressure_critical_pa": [80, 140], "alpha_0": [80, 140], "phi_0": [80, 140], "tau": [80, 140], "vaporpressur": [80, 140], "vaporpressureprim": [80, 140], "auxiliaryquantityspecificenthalpi": [80, 140], "auxiliaryquantityspecificentropi": [80, 140], "entropi": [80, 140], "Near": 81, "sea": 81, "correl": [81, 96, 97, 100, 140, 214, 238, 444], "incropera": [81, 121], "frank": [81, 121], "et": [81, 93, 109, 121, 138, 484], "al": [81, 93, 109, 121, 138, 147, 154, 302, 484, 499, 507], "mass": [81, 82, 83, 84, 85, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 112, 113, 114, 116, 117, 121, 126, 134, 135, 136, 138, 141, 143, 153, 154, 155, 156, 213, 216, 220, 238, 248, 267, 286, 289, 295, 302, 306, 309, 312, 313, 315, 316, 319, 325, 327, 329, 330, 331, 332, 348, 356, 357, 358, 404, 424, 463, 464, 468, 477, 483, 486, 487, 489, 492, 494, 495, 496, 502, 503, 504, 505, 507, 512], "transfer": [81, 121, 213, 279, 289, 331, 352, 452, 503, 509], "vol": [81, 111, 113, 121, 143, 238, 306, 468, 492, 494], "york": [81, 111, 121, 143], "wilei": [81, 121], "2002": [81, 121], "pnnl": [81, 121], "15870": [81, 121], "rev": [81, 121], "www": [81, 82, 84, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 114, 131, 134, 140, 185, 348, 484, 498], "gov": [81, 87, 91, 94, 109, 114, 138, 153, 163, 174, 176, 185], "technical_report": 81, "15870rev1": 81, "1300": [81, 93, 102], "2400": [81, 137, 138], "conduct": [81, 93, 94, 96, 97, 100, 102, 105, 109, 113, 114, 132, 134, 137, 138, 143, 238, 449, 492, 495, 507, 508], "200": [81, 82, 126, 362, 412, 497], "850": 81, "temperature_lower_limit": [81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143], "temperature_upper_limit": [81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143], "temperature_unit": [81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143], "mcconn": 81, "ronald": 81, "j": [81, 93, 94, 96, 97, 100, 101, 102, 104, 105, 111, 113, 114, 136, 137, 138, 140, 168, 176, 178, 179, 183, 201, 238, 294, 312, 332, 336, 338, 340, 341, 342, 343, 344, 362, 401, 449, 472, 473, 474, 484, 486, 494, 495, 510], "compendium": 81, "radiat": [81, 87, 213, 484], "pacif": 81, "northwest": 81, "nation": [81, 93, 109, 138, 155, 166, 176, 483, 484], "lab": [81, 155, 484], "richland": 81, "2011": [81, 93, 166], "tk": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 325, 424, 444, 494, 495], "tc": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 154, 306, 307, 308, 309, 311, 312, 325, 358, 424, 444, 494, 495, 508], "cc": [81, 85, 101, 102, 103, 105, 111, 114, 135, 137, 138, 140, 166, 309, 312, 404, 495, 503, 509], "dewitt": 81, "kelvin": [81, 82, 96, 97, 100, 105, 114, 140, 309, 444], "celsiu": [81, 82, 96, 97, 100, 105, 114, 309, 444], "liquid": [81, 89, 103, 104, 105, 114, 116, 140, 153, 154, 163, 309, 498, 503], "kg": [81, 93, 96, 97, 100, 101, 102, 105, 113, 114, 130, 137, 138, 140, 494, 495, 502, 503, 504, 512], "alloi": [82, 93, 95, 97, 98, 99, 110, 126, 135, 136, 487], "wrought": 82, "commerci": [82, 483, 484], "nickel": [82, 93, 95, 154], "201": [82, 362, 492], "sheet": [82, 117], "jacquet": 82, "biz": 82, "usa": 82, "jcqusa": 82, "citat": [82, 95, 96, 97, 99, 100, 103, 105, 113, 117, 137, 138, 140, 143], "literatur": [82, 95, 96, 97, 99, 100, 103, 105, 109, 113, 117, 137, 138, 140, 143, 495], "trefa": 82, "20": [82, 85, 93, 96, 98, 154, 164, 168, 267, 309, 338, 357, 362, 411, 456, 470, 478, 492, 497, 498, 499, 507, 513], "a0": 82, "2162e": 82, "3001e": 82, "09": [82, 358, 419, 449, 470, 486, 487, 492, 496, 507], "94985e": 82, "intepol": [82, 105], "lookup": [82, 105, 155, 246, 270, 284, 286, 331, 332, 348, 360, 367, 410], "73": [82, 137, 154, 362, 419], "15": [82, 93, 96, 97, 98, 100, 106, 109, 112, 113, 134, 138, 141, 143, 154, 212, 221, 289, 338, 362, 404, 441, 456, 462, 470, 480, 486, 492, 498, 507], "1273": [82, 106], "mn": [82, 147, 154, 302, 492, 497, 507], "35": [82, 83, 154, 362], "si": [82, 113, 154, 302, 492, 497, 507], "25": [82, 83, 154, 156, 286, 294, 301, 302, 325, 341, 357, 358, 362, 416, 456, 474, 486, 492, 495, 497, 498, 507], "fe": [82, 153, 154, 155, 156, 295, 302, 470, 475, 492, 497, 507], "173": [82, 362], "373": [82, 93], "573": 82, "673": 82, "773": 82, "873": 82, "973": [82, 93], "1073": 82, "1173": [82, 93, 137, 487], "01e": 82, "13e": [82, 143], "33e": [82, 113], "39e": 82, "43e": 82, "48e": 82, "52e": [82, 499], "56e": 82, "58e": 82, "62e": 82, "65e": [82, 499], "67e": 82, "instantan": [82, 96, 97, 100, 105, 483], "half": [82, 160, 164, 175, 220, 319, 343, 355, 356, 496, 505, 507], "impur": [82, 484], "rest": [82, 184, 286, 291, 334, 392, 449, 456, 470, 498, 499, 507, 509], "ni": [82, 154, 302, 312, 492, 497, 507], "cm": [82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 154, 178, 179, 198, 201, 220, 238, 248, 253, 286, 289, 294, 306, 307, 308, 309, 311, 312, 316, 331, 332, 336, 337, 338, 340, 341, 342, 343, 345, 365, 404, 454, 455, 472, 473, 492, 495, 497, 498, 499, 502, 503, 504, 505, 507, 508], "dep": [82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143], "percent": [82, 83, 84, 85, 88, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 134, 135, 137, 138, 141, 142, 143, 201, 316, 325, 332, 468, 483, 484, 487, 492, 497, 503, 505, 507], "dp": [82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 140, 141, 143, 154], "dl": [82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 138, 141, 143], "l": [82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 114, 117, 137, 138, 141, 143, 168, 308, 325, 400, 416, 470, 477, 495, 511], "boron": [83, 122, 154, 289, 309, 312, 496], "carbid": [83, 113, 122], "difficulti": 83, "real": [83, 166, 176, 179, 204, 205, 239, 248, 253, 289, 309, 312, 331, 332, 340, 412, 416, 437, 447, 452, 463, 494, 497, 499, 507], "td_frac": [83, 105, 109, 116, 134, 137, 138, 302, 487, 507], "b10": [83, 295, 475, 492, 503], "enrich": [83, 90, 103, 105, 109, 132, 135, 136, 137, 138, 220, 286, 289, 309, 312, 332, 357, 404, 416, 484, 492, 498, 499, 503, 507], "500": [83, 143, 357, 358, 468, 487, 492, 495, 497, 498, 508], "b10_wt_frac": [83, 507], "theoretical_dens": [83, 507], "massenrich": [83, 105], "boron10massgram": 83, "boron11massgram": 83, "carbonmassgram": 83, "012": [83, 492], "009": [83, 492], "carbon": [83, 91, 154, 161, 163], "0107": 83, "mole": [83, 109, 134, 155, 289, 309, 312, 494, 503, 504], "gram": [83, 85, 109, 134, 155, 160, 289, 309, 312, 492, 507], "199": [83, 362], "969552": 83, "801": [83, 164], "272836": 83, "mi": [83, 477], "mb10": 83, "nb10": 83, "ab10": 83, "nb11": 83, "ab11": 83, "natur": [83, 101, 105, 138, 153, 154, 155, 156, 158, 246, 284, 295, 302, 312, 332, 338, 404, 448, 449, 469, 484, 486, 492, 495, 496, 497, 507], "19": [83, 109, 117, 137, 154, 302, 338, 362, 419, 487, 492], "80": [83, 100, 154, 362, 507], "811": 83, "96796": 83, "27604": 83, "55": [83, 109, 114, 154, 362], "2547": 83, "naturalb10numberfract": 83, "preliminari": 83, "beryllium": [84, 123, 154], "metal": [84, 88, 94, 98, 117, 132, 133, 135, 137, 143, 154, 156, 163, 238, 289, 312, 332, 356, 358, 404, 483, 492, 496, 498, 503, 504, 505, 507], "lot": [84, 86, 152, 153, 201, 205, 239, 248, 295, 312, 332, 383, 417, 447, 448, 452, 455, 456, 484, 485, 492, 499, 507, 509, 514], "2n": [84, 164, 201, 476, 480], "reaction": [84, 164, 177, 189, 201, 202, 239, 253, 255, 312, 330, 331, 416, 467, 481, 482, 484, 486, 490, 500, 503], "inhal": 84, "hazard": 84, "compound": [84, 91, 113, 136, 138, 140, 163, 242, 375, 419], "Be": [84, 163, 312, 415, 448, 456, 484, 486], "frozenset": [84, 91, 113, 138, 140], "BE": [84, 154], "012183e": 84, "00": [84, 140, 449, 465, 481, 496], "1560": 84, "ferp": 84, "ucsd": 84, "edu": [84, 168], "prop": 84, "pano": 84, "fusion": 84, "fedee": 84, "141": [84, 362], "234": [84, 442, 496], "1987": [84, 489], "calcium": [85, 154], "hydrid": 85, "calciumhydrid": 85, "atom": [85, 105, 109, 153, 154, 155, 156, 163, 166, 198, 201, 214, 242, 248, 267, 289, 309, 312, 318, 319, 331, 404, 483, 484, 492, 496, 502, 503, 504, 505, 507], "kaeri": 85, "kr": [85, 154, 416], "ton": 85, "iso": [85, 156, 507], "abund": [85, 153, 155, 156, 185, 469, 496], "ca": [85, 113, 154, 507], "40": [85, 88, 154, 156, 176, 362, 400, 456, 497], "96": [85, 154, 362, 499], "941": 85, "39": [85, 154, 362, 492, 495, 496, 497], "9625912": 85, "42": [85, 109, 154, 156, 362, 417, 419, 499], "647": [85, 131, 140], "41": [85, 154, 156, 362, 419], "9586183": 85, "43": [85, 88, 154, 362, 492], "135": [85, 140, 362], "9587668": 85, "44": [85, 117, 154, 362], "086": 85, "9554811": 85, "46": [85, 154, 238, 362, 507], "004": [85, 492, 507], "45": [85, 154, 362, 507], "9536928": 85, "48": [85, 154, 362, 478, 492], "187": [85, 362], "47": [85, 154, 362], "9525335": 85, "01565": 85, "09367285": 85, "920331558": 85, "006449241": 85, "001377745": 85, "02178264": 85, "3668e": 85, "002130278": 85, "047884869": 85, "en": [85, 86, 89, 443], "wikipedia": [85, 86, 89, 103, 443, 496], "wiki": [85, 86, 89, 443], "calcium_hydrid": 85, "synthet": 86, "spontan": [86, 156, 164, 487, 496, 503, 505], "equip": [87, 492], "shield": [87, 166, 201, 241, 285, 286, 318, 319, 332, 334, 492, 497, 503, 507], "concreat": 87, "archiv": [87, 100, 456, 485, 514], "20221103120449": 87, "nist": [87, 153, 155, 156], "cgi": [87, 153], "bin": [87, 153, 246, 319, 320, 337, 430, 485, 514], "star": 87, "compo": 87, "pl": [87, 153], "matno": 87, "144": [87, 362], "788": 88, "83": [88, 154, 362], "engaug": 88, "21": [88, 96, 97, 100, 117, 137, 154, 338, 362, 417, 487, 492, 499], "thrust": 88, "chamber": [88, 499], "predict": [88, 229, 246, 498, 510], "rocket": 88, "nozzl": [88, 332, 502, 503, 507], "nasa": 88, "134806": 88, "cesium": [89, 154], "caesium": 89, "benchmark": [90, 365, 484, 498, 499, 507], "isotopicopt": [90, 246, 285, 290, 478], "customisotop": [90, 105, 285, 290, 295, 354, 358, 478, 507], "peopl": [90, 105, 456, 484, 485, 489, 507, 514], "overwritten": [90, 215, 248, 309, 311, 364, 380], "u235": [90, 105, 109, 135, 136, 137, 138, 153, 155, 156, 158, 174, 202, 242, 289, 302, 312, 404, 470, 475, 476, 492, 495, 496, 499, 507], "customloc": 90, "matter": [90, 143, 156, 205, 257, 267, 332, 334, 343, 408, 411, 455, 456, 494], "moder": [91, 220, 285, 332, 334, 484], "ga": [91, 105, 153, 154, 238, 241, 248, 251, 334, 484, 503, 507], "cool": [91, 451, 483, 484, 498, 499], "inl": [91, 93, 124], "16": [91, 117, 124, 154, 156, 221, 334, 335, 338, 348, 357, 358, 362, 383, 470, 477, 481, 484, 486, 492, 496, 498, 499, 507], "38241": [91, 124], "mceligot": 91, "donald": 91, "swank": 91, "david": 91, "cottl": 91, "valentin": 91, "francisco": 91, "348": [91, 507], "2016": [91, 172], "doi": [91, 94, 106, 114, 136, 137, 166, 172, 176, 177, 484], "2172": [91, 94, 114, 137, 166, 172, 176, 177], "1330693": 91, "osti": [91, 94, 114, 166, 172, 177], "biblio": [91, 94, 114], "10p": 91, "201114e": [91, 113], "l0": [91, 94, 317, 325, 495], "captur": [92, 163, 164, 168, 201, 239, 241, 257, 289, 290, 318, 332, 384, 449, 480, 484, 489, 498, 503, 507], "lenntech": 92, "com": [92, 93, 95, 96, 97, 98, 99, 100, 307, 308, 348, 419, 437, 442, 443, 448, 455, 484, 485, 487, 514], "hf": [92, 154], "htm": 92, "hastelloi": [93, 486], "invent": 93, "ornl": [93, 109, 126, 138], "molten": [93, 111, 116, 484], "fluorid": 93, "salt": [93, 115, 213, 484], "un": [93, 98, 215, 503], "n10003": 93, "hayn": 93, "h": [93, 94, 136, 140, 154, 163, 172, 221, 238, 279, 331, 332, 334, 498, 499, 507], "2052d": 93, "2020": [93, 486, 499], "haynesintl": 93, "brochur": 93, "corros": [93, 105, 229, 483, 495, 503], "resist": 93, "sab": 93, "sabharwal": 93, "feasibl": 93, "secondari": [93, 205, 285, 334, 418, 484, 505], "exchang": [93, 166, 336, 483, 499, 507], "23076": 93, "oak": [93, 109, 138], "ridg": [93, 109, 138], "laboratori": [93, 109, 138, 166, 176, 483], "oxid": [93, 106, 109, 112, 134, 138, 141, 142, 495], "hot": [93, 98, 105, 117, 289, 306, 309, 316, 318, 325, 356, 357, 416, 487, 495, 498, 499, 503, 507, 508, 511], "704": 93, "871c": 93, "1600f": 93, "293": [93, 94, 137, 143], "polynomi": [93, 94, 96, 97, 98, 100, 106, 138], "sixth": 93, "97": [93, 114, 154, 362], "dll": [93, 98, 105, 309, 495], "academ": [94, 114, 136, 477, 494, 495], "incomplet": [94, 332, 495], "ferrit": 94, "martensit": 94, "stainless": 94, "steel": [94, 302, 498, 507], "famou": 94, "sfr": [94, 229, 484, 494, 498, 499], "swell": [94, 289, 495], "mfh": 94, "handbook": [94, 102, 111, 137, 143], "hofman": [94, 137], "billon": 94, "koenig": 94, "kramer": 94, "lambert": 94, "leibowitz": [94, 114], "orechwa": 94, "pedersen": 94, "porter": 94, "tsai": 94, "wright": 94, "2019": [94, 168, 484, 486, 490, 498], "1506477": 94, "1050": 94, "ref": [94, 113, 116, 138, 174, 241, 332, 383], "eq": [94, 136, 201], "sped": [94, 487], "austenit": 95, "chromium": [95, 154], "superalloi": 95, "specialmet": [95, 96, 97, 98, 99, 100], "technic": [95, 319, 332, 485, 514], "bulletin": 95, "617": [95, 487], "certainti": 95, "900": [96, 138, 143, 468, 470, 492, 507, 509], "800": [96, 98, 143, 468, 486], "20alloi": [96, 100], "20600": 96, "294": [96, 97, 98, 100, 138], "equat": [96, 97, 100, 115, 170, 238, 262, 331, 412, 444, 455, 480, 495, 511], "thermalcond": [96, 97, 100], "cte": [96, 97, 100], "strain": [96, 97, 100, 229, 483, 484, 503, 507], "linexpperc": [96, 97, 100], "2nd": [96, 97, 100, 471], "divid": [96, 97, 100, 289, 312, 367, 392, 411, 470, 483, 502, 503], "differenti": [96, 97, 100, 253, 311, 452], "722e": 96, "303e": 96, "linexp": [96, 97, 100], "221": [97, 496], "1093": [97, 100], "927": 97, "982": [97, 100], "asset": [97, 98, 99], "625": 97, "083e": 97, "125e": 97, "incoloi": [98, 486], "800h": 98, "n08800": 98, "n08810": 98, "sm": [98, 154, 246], "smc": 98, "pe16": 99, "nimon": 99, "x750": 100, "18": [100, 111, 154, 163, 338, 362, 492, 507], "156": [100, 362], "871": 100, "20x": 100, "750": 100, "20170215105917": 100, "8378e": 100, "056e": 100, "600": [101, 126, 132, 133, 138, 143, 298, 301, 302, 304, 345, 468, 470, 507, 508], "1700": [101, 489], "1500": [101, 113, 114, 138], "volumetr": [101, 102, 116, 331, 495, 503, 505], "ON": [101, 102], "measur": [101, 102, 124, 238, 284, 325, 343, 345, 402, 454, 483, 510], "sobolev": [101, 102], "nucl": [101, 102], "mat": [101, 102, 156, 293, 312, 357, 477], "362": [101, 102], "2007": [101, 102], "235": [101, 102, 109, 135, 153, 155, 156, 185, 246, 289, 312, 475, 476, 492, 499], "247": [101, 102], "bismuth": [102, 154], "eutect": 102, "coolant": [102, 105, 258, 285, 289, 306, 309, 312, 318, 326, 331, 332, 334, 356, 358, 416, 463, 468, 470, 478, 484, 492, 494, 495, 498, 502, 503, 505, 507], "superfast": 102, "400": [102, 143, 357, 468, 513], "visc": 102, "1100": [102, 143], "pa": [102, 140, 154, 502, 503, 505], "onlin": [102, 446], "oecd": 102, "nea": [102, 499], "scienc": [102, 164], "nea6195": 102, "ccapac": 102, "accuraci": [102, 412], "whenev": [103, 205, 239, 284, 348, 399, 451, 494], "irradi": [103, 109, 138, 155, 229, 238, 483, 495, 503, 505], "tritium": 103, "li6": [103, 496], "li_wt_frac": [103, 507], "li6_wt_frac": [103, 507], "180c": 103, "923": [104, 487], "1390": 104, "cm3": [104, 312, 404], "mcgonig": 104, "templ": 104, "univers": [104, 168, 253, 312, 401, 484], "1961": 104, "truth": [105, 325, 332], "incorpor": [105, 153, 284, 507], "concert": [105, 167, 484], "bulk": [105, 295, 332, 502, 503], "massfrac": [105, 248, 312, 404, 477, 495], "theoreticaldensityfrac": [105, 504], "realiti": [105, 483, 484, 507], "solid": [105, 134, 153, 154, 163, 229, 238, 289, 306, 307, 309, 315, 317, 325, 334, 357, 495, 496, 498, 503, 507], "due": [105, 109, 168, 170, 221, 229, 238, 242, 253, 255, 257, 284, 289, 309, 312, 315, 318, 326, 346, 356, 376, 454, 484, 487, 503, 505], "manufactur": 105, "programmat": [105, 215, 253, 293, 427, 467, 481, 482, 494, 500, 508], "getter": [105, 331, 332, 345, 363, 364, 370], "privat": [105, 176, 312, 393, 448, 455, 456, 484], "deep": [105, 312, 358, 507], "generationnum": [105, 312, 358], "includemateri": [105, 312, 358], "predic": [105, 156, 312, 332, 358], "typespec": [105, 220, 242, 286, 289, 309, 312, 318, 332, 334, 358], "exactmatch": [105, 312, 332, 358], "paramstoappli": [105, 309, 312, 347, 348], "previous": [105, 221, 312, 413, 486, 505, 507, 513], "dt": [105, 140, 494, 503], "t0": [105, 309], "methodologi": [105, 201, 238, 316, 484, 494, 511], "prevtempinc": 105, "newtempinc": 105, "temperatureinc": [105, 306, 309, 316, 317, 468, 504, 509], "temperatureincnew": 105, "nucnam": [105, 155, 156, 174, 198, 201, 202, 241, 248, 309, 312, 404, 416, 462, 470, 477], "thrown": [105, 300, 381], "nuclidenam": [105, 295, 309, 312], "massfract": [105, 309, 312], "u238": [105, 155, 156, 164, 242, 302, 470, 475, 492, 495, 496, 499, 507], "likewis": [105, 153], "accordingli": [105, 309, 343, 484, 507], "achiev": [105, 167, 205, 483, 505, 507], "targetdens": 105, "tempguessinc": 105, "celciu": [105, 140, 238, 309, 494], "agre": [105, 227, 312, 484, 498], "inputheightsconsideredhot": [105, 293, 316, 325, 357, 487, 507], "psuedodens": 105, "driven": [105, 242, 290, 497], "forward": [105, 179, 284, 368, 416], "rate": [105, 170, 201, 205, 253, 255, 289, 309, 312, 317, 330, 331, 348, 449, 467, 480, 481, 482, 486, 490, 494, 500, 502, 503, 504, 505, 507, 510], "micron": 105, "strength": 105, "mpa": 105, "propnam": 105, "expandfissionproduct": [105, 312], "pu239": [105, 109, 153, 156, 164, 202, 302, 312, 492, 499, 507], "sum": [105, 156, 164, 170, 198, 201, 203, 241, 248, 251, 289, 312, 356, 400, 416, 430, 452, 492, 497, 507], "frac": [105, 136, 201, 238, 241, 289, 309, 312, 318, 331, 410, 424, 477, 495, 498, 504, 507, 510, 511], "altern": [105, 164, 189, 202, 217, 220, 253, 318, 345, 408, 419, 449, 452, 487, 494, 497, 507, 513], "critic": [105, 140, 166, 242, 289, 307, 484, 502, 505, 507], "million": [105, 411], "nuc": [105, 155, 156, 174, 198, 248, 309, 312, 404, 496], "fall": [105, 229, 317, 448, 456, 484, 509], "min": [105, 225, 312, 343, 487, 505], "mint": 105, "maxt": 105, "convienc": 105, "rhocp": 105, "right": [105, 212, 215, 224, 253, 296, 299, 302, 312, 318, 319, 327, 340, 341, 342, 343, 381, 401, 410, 412, 414, 416, 419, 427, 439, 449, 480, 507, 510, 511, 513], "logic": [105, 163, 166, 173, 178, 205, 220, 225, 284, 290, 293, 295, 331, 332, 348, 377, 397, 399, 411, 456, 486, 487, 492, 507, 513], "downstream": [105, 286, 332, 484, 487, 509], "embrac": 105, "deprec": [105, 155, 284, 296, 335, 353, 370, 488, 490, 507], "densityfrac": 105, "fill": [105, 139, 153, 156, 238, 289, 296, 306, 312, 319, 320, 332, 345, 352, 357, 400, 419, 470, 487, 494, 498, 499, 503, 507], "300": [105, 138, 495], "uniti": 105, "parameter": [105, 471, 507], "magnesiumoxid": 106, "273": [106, 112, 138, 141], "milo": 106, "durand": 106, "journal": [106, 136, 238], "297": 106, "1936": 106, "1063": 106, "174539": 106, "3rd": [106, 338, 340, 353, 502], "moli": 108, "ceram": [109, 134, 138], "thermophys": [109, 115, 138, 140, 143, 213], "popov": [109, 138], "tm": [109, 138, 154, 155], "351": [109, 138], "rsicc": [109, 138], "fmdp": [109, 138], "tm2000": [109, 138], "inherit": [109, 152, 156, 241, 306, 332, 349, 370, 455, 489, 494, 507], "leav": [109, 156, 221, 309, 312, 376, 449, 492, 499, 507], "unchang": [109, 309, 376, 487, 507], "u235_wt_frac": [109, 135, 136, 137, 138, 298, 498, 507], "mass_frac_pu02": 109, "massfracpuo2": 109, "puo2": 109, "pu238": [109, 302, 492, 499, 507], "238": [109, 135, 155, 246, 289, 475, 480, 496], "0495599": 109, "239": [109, 135, 155, 246, 480, 496], "0521634": [109, 155], "pu240": [109, 302, 492, 499, 507], "240": [109, 246, 496], "0538135": 109, "pu241": [109, 156, 302, 492, 499, 507], "241": [109, 246, 496], "0568515": 109, "pu242": [109, 170, 302, 492, 499, 507], "242": [109, 156, 496], "0587426": 109, "am241": [109, 155, 290, 302, 492, 499, 507], "0568291": 109, "0439299": [109, 153, 155], "0507882": [109, 155], "oxygen": [109, 134, 154, 295, 312, 404, 499, 507], "9994": [109, 134], "joyo": [109, 484], "pu": [109, 135, 136, 154, 246, 289, 312, 332, 356, 404, 503, 504], "76": [109, 154, 362], "82": [109, 154, 362, 495], "23": [109, 154, 262, 338, 356, 362, 442, 487, 492], "66": [109, 154, 362], "64": [109, 138, 154, 334, 348, 362, 408, 492, 499], "326469": 109, "22": [109, 113, 117, 140, 154, 338, 362, 419, 484, 485, 487, 492, 496, 507, 514], "99": [109, 126, 154, 203, 246, 362, 412, 507], "77": [109, 154, 167, 362], "237": [109, 496], "359511": 109, "upu": 109, "70766": 109, "31": [109, 134, 154, 362, 486], "9988": [109, 134], "269": 109, "70646": 109, "881357": 109, "177": [109, 362, 492, 494, 497, 498, 501, 513], "156000": 109, "823": 109, "725356": 109, "001": [109, 320, 332, 367, 412, 486, 492, 507, 513], "074256": 109, "000156": 109, "7682": 109, "119839": 109, "1923": 109, "029999": 109, "0266": 109, "004150": 109, "0055": 109, "000858": 109, "0064": 109, "000998": 109, "2299": 109, "195": [109, 362], "633404": 109, "166759": 109, "7701": 109, "558597": 109, "118643": 109, "melt": [109, 113, 132, 133, 134, 137, 138], "liquidu": [109, 495], "tl": [109, 154, 161], "solidu": [109, 495], "3120": [109, 138], "388": 109, "655": 109, "336": 109, "burnup": [109, 164, 175, 213, 220, 221, 224, 227, 228, 229, 241, 242, 246, 253, 257, 289, 312, 400, 412, 418, 471, 483, 487, 489, 490, 502, 503, 504, 505, 507, 513], "niobium": [110, 154], "zirconium": [110, 135, 143, 154, 155, 499, 507], "foust": 111, "nak": 111, "gordon": 111, "breach": 111, "1972": 111, "63": [111, 154, 362], "1250": 111, "scandium": [112, 154], "1573": [112, 141], "scandia": 112, "invers": [112, 141, 412], "rare": [112, 141, 163, 349, 370, 437], "earth": [112, 141, 419], "silicon": [113, 154], "808538e": 113, "cumul": [113, 212, 253, 316, 345, 348, 400, 419, 441, 487, 507, 513], "munro": 113, "phy": 113, "chem": 113, "26": [113, 153, 154, 156, 362, 499], "1997": 113, "51": [113, 154, 362], "math": [113, 168, 204, 220, 410, 412, 430, 439, 443, 455, 464, 471, 472, 480, 487, 494, 513], "exp": 113, "00527": 113, "0e": [113, 470, 499, 510], "rho0": 113, "tc0": 113, "0e3": 113, "1110": 113, "425": 113, "003": [113, 332, 367, 492, 507], "52000": 113, "24e": 113, "437": 113, "298": [113, 134, 137, 138, 143], "bring": [114, 136, 284, 405, 425, 484, 494, 498, 507], "anl": [114, 137, 143, 155, 176, 344, 483, 484, 492, 494, 497, 498, 501, 513], "95": [114, 154, 156, 176, 362, 507], "fink": 114, "thermodynam": 114, "vapor": [114, 140], "1995": [114, 176, 238], "94649": 114, "gxndli": 114, "webview": 114, "85": [114, 154, 362, 419], "2230": 114, "371": 114, "3715": 114, "chlorid": 115, "nabr": 115, "naf": 115, "rai": [115, 401], "attenu": 115, "techniqu": [115, 331, 507], "334": 116, "430": [116, 357], "sulfur_density_frac": [116, 507], "espeau": 116, "ceolin": 116, "508k": 116, "1382": 117, "tungsten": [117, 154, 486], "refractori": 117, "roll": [117, 502], "bureau": 117, "naval": 117, "weapon": 117, "contract": [117, 309, 316, 325, 503, 506], "n600": 117, "59530": 117, "southern": 117, "institut": 117, "456": [117, 492], "574": [117, 492], "702": [117, 492], "840": 117, "56": [117, 154, 362, 496], "846": [117, 487], "948": 117, "89": [117, 154, 362, 480], "1023": 117, "1146": 117, "1287": 117, "78": [117, 154, 362, 507], "203": [117, 362], "253": [117, 238], "303": 117, "342": 117, "366": 117, "421": [117, 238], "468": [117, 477, 481], "504": [117, 492], "tabular": [117, 419], "21c": 117, "1966": [117, 490], "viii": [117, 163, 507], "appendix": 117, "181": [117, 362], "test_canaccessclassesfrompackag": [119, 120], "test_packageclassesequalmoduleclass": [119, 120], "test_pseudodens": [119, 121, 123, 125, 126, 127], "test_heatcapac": [119, 121, 125, 126, 127], "test_thermalconduct": [119, 121, 126], "test_massfrac": [119, 121, 131], "test_validrang": [119, 121], "mat_class": [119, 122, 123, 124, 125, 126, 127, 128, 129, 130], "test_theoretical_pseudodens": [119, 122, 129], "test_propertyvalidtemperatur": [119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "test_linearexpansionperc": [119, 124, 126, 129], "test_dens": [119, 124, 126, 130, 354, 357], "defaultmassfrac": [119, 125], "test_lithium_material_modif": [119, 125], "test_meltingpoint": [119, 125, 126, 127], "test_boilingpoint": [119, 125], "test_material_initi": [119, 126], "test_findmateri": [119, 126], "test_namespac": [119, 126, 424], "test_poros": [119, 126], "test_getcorrosionr": [119, 126], "test_getmassfracpuo2": [119, 126], "test_getmolfracpuo2": [119, 126], "test_getmeltingpoint": [119, 126], "test_applyinputparam": [119, 126], "test_specificvolumeliquid": [119, 126], "test_enthalpi": [119, 126], "test_linearexpans": [119, 126], "test_adjustmassenrich": [119, 126, 354, 357], "test_gettemperatureatdens": [119, 126], "test_getdensityexpansion3d": [119, 126], "test_removenucmassfrac": [119, 126], "test_densitytimesheatcapactii": [119, 126], "test_gettempchangefordensitychang": [119, 126], "test_dupl": [119, 126, 130, 249, 251, 354, 355, 356, 383, 390], "test_setdefaultmassfrac": [119, 126], "test_volumetricexpans": [119, 126], "test_dynamicvisc": [119, 126], "test_densityneverchang": [119, 126], "test_getchildren": [119, 126, 354, 358], "test_getchildrenwithflag": [119, 126], "test_iconel800_linearexpans": [119, 126], "test_00_setdefaultmassfrac": [119, 126], "test_01_linearexpansionperc": [119, 126], "test_02_linearexpans": [119, 126], "test_03_pseudodens": [119, 126], "test_polyfitthermalconduct": [119, 126], "test_polyfitheatcapac": [119, 126], "test_polyfitlinearexpansionperc": [119, 126], "test_nicklecont": [119, 126], "test_linearexpansionhott": [119, 126], "test_meancoefficientthermalexpans": [119, 126], "test_00_applyinputparam": [119, 126], "test_01_pseudodens": [119, 126], "test_02_linearexpansionperc": [119, 126], "baseinput": [119, 126], "loadassembli": [119, 126], "test_class1class2_class1_wt_frac": [119, 126], "test_class1class2_classx_custom_isotop": [119, 126], "test_sulfur_density_frac": [119, 128], "test_ispickl": [119, 130, 354, 360, 364], "test_td": [119, 130], "test_cach": [119, 130], "test_densitykgm3": [119, 130], "test_pseudodensitykgm3": [119, 130], "test_water_at_freez": [119, 131], "test_water_at_boil": [119, 131], "test_water_at_critcalpoint": [119, 131], "test_validatenam": [119, 131], "superclass": 120, "verif": [121, 131, 455, 483], "300k": 121, "ratio": [121, 164, 289, 332, 400, 402, 480, 499, 503, 504, 505, 507], "_material_test": [122, 123, 125, 126, 127, 128, 129], "0759": 125, "discover": [126, 487], "1723": 126, "efg": 126, "pseudo": [126, 130, 158, 452, 487, 509], "linearli": [126, 400], "_mixtur": 126, "nickl": 126, "spec": 126, "nnuclid": [126, 298, 302, 304], "ncustom": [126, 302], "customisotopic1": 126, "customisotopic2": 126, "nblock": [126, 298, 301, 302, 304], "block_fuel": [126, 298, 304, 498, 507, 513], "fuel1": [126, 298, 304, 319, 334, 507], "component_fuel_fuel1": [126, 298, 304, 507], "tinput": [126, 298, 301, 302, 304, 306, 307, 308, 309, 311, 325, 357, 358, 470, 478, 498, 499, 507, 513], "thot": [126, 298, 301, 302, 304, 306, 307, 308, 309, 311, 325, 354, 357, 358, 470, 478, 492, 498, 499, 507, 513], "ip": [126, 289, 298, 301, 302, 304, 307, 309, 357, 358, 470, 478, 498, 507, 508], "mult": [126, 220, 289, 293, 298, 301, 302, 304, 307, 308, 309, 311, 357, 358, 470, 478, 498, 499, 504, 507, 508, 513], "op": [126, 289, 298, 301, 302, 304, 306, 307, 308, 309, 335, 357, 358, 378, 470, 478, 498, 507, 508], "fuel2": [126, 298, 304, 319, 334, 507], "component_fuel_fuel2": [126, 298, 304, 507], "nassembli": [126, 298, 301, 302, 304], "assembly_a": [126, 298, 301, 302, 304, 507], "height": [126, 175, 225, 286, 289, 290, 292, 298, 300, 301, 302, 304, 307, 309, 311, 312, 316, 317, 325, 331, 332, 338, 343, 355, 356, 357, 358, 399, 412, 437, 478, 486, 487, 490, 492, 498, 499, 503, 507], "materialmodif": [126, 285, 290, 291, 304], "picklabl": [130, 392], "commun": [130, 152, 166, 205, 356, 377, 450, 510, 513], "iapw": [131, 140], "if97": [131, 140], "0c": 131, "relguid": [131, 140], "supsat": [131, 140], "100c": 131, "096k": 131, "iaea": [132, 133, 134, 213], "tecdoc": [132, 133, 134], "1450": [132, 133, 134], "u233": [132, 156, 496], "u233_wt_frac": [132, 507], "te": [132, 133, 134, 154, 156, 507], "challeng": [134, 167, 295, 332, 343, 456, 484], "2005": [134, 490], "pub": 134, "mtcd": 134, "te_1450_web": 134, "1223": 134, "232": [134, 135, 496], "030806": 134, "264": 134, "029606": 134, "298k": 134, "zirc": 135, "233": [135, 496], "zr_wt_frac": [135, 136, 304, 507], "notion": [136, 253, 341], "10zr": [136, 312], "chandrabhanu": 136, "incorrect": [136, 345, 487, 513], "basak": 136, "prasad": 136, "kamath": 136, "prabhu": 136, "rich": [136, 378, 446, 484, 509], "480": 136, "2009": [136, 484], "857": 136, "862": 136, "issn": 136, "0925": 136, "8388": 136, "1016": [136, 484], "jallcom": 136, "02": [136, 138, 156, 286, 302, 449, 462, 471, 472, 478, 479, 481, 486, 487, 488, 492, 496, 507, 509], "077": 136, "aaafuel": 137, "kim": 137, "aaa": [137, 143, 505], "2003": [137, 499], "822554": 137, "01591t": 137, "907": 137, "215": [137, 362, 496], "1600": [137, 143], "255": 137, "nse": 137, "gl": 137, "07": [137, 164, 449, 462, 471, 478, 479, 489, 492, 496, 507], "27": [138, 154, 362, 456, 486, 487, 492], "302": 138, "008463": 138, "87410000": 138, "548": [138, 487], "68": [138, 154, 362], "18531": 138, "3100": 138, "3123": 138, "3000": 138, "dioxid": 138, "nonequilibrium": 138, "molecular": [138, 312], "motoyama": 138, "60": [138, 154, 217, 221, 224, 286, 289, 341, 357, 362, 401, 410, 412, 502, 503, 505, 513], "juli": 138, "1999": 138, "92": [138, 153, 154, 156, 362, 496], "380289e": [138, 496], "599930e": 138, "1200": [138, 143, 468], "1800": [138, 143], "2100": 138, "2700": 138, "991": 138, "864": 138, "768": 138, "567": [138, 492], "073": 138, "891": 138, "847": 138, "718": 138, "u234": [138, 156, 295, 302, 492, 496, 507], "curv": [138, 209, 412, 487], "faith": 140, "supplementari": 140, "ordinari": 140, "substanc": 140, "1992": [140, 490], "steam": 140, "satur": 140, "industri": [140, 484, 494], "h2o": [140, 163], "007976e": 140, "sr1": 140, "86": [140, 154, 362, 492, 507], "pressur": [140, 154, 213, 229, 279, 345, 444, 484, 502, 503, 505, 507], "096": 140, "322": 140, "064": 140, "22064000": 140, "5453657571674064": 140, "65134998e": 140, "08": [140, 449, 470, 471, 478, 479, 486, 487, 492], "2690": 140, "66631": 140, "127": [140, 362, 472, 498], "287297": 140, "003439": 140, "981825814": 140, "alpha": [140, 156, 163, 164, 166, 470, 475, 477, 480, 495, 503, 511], "1135": 140, "905627715": 140, "phi": 140, "2319": 140, "5246": 140, "1e": [140, 143, 168, 212, 375, 404, 416, 464, 470, 479, 507, 510], "06": [140, 143, 248, 302, 449, 462, 471, 478, 479, 487, 492, 496], "wrt": 140, "quantiti": [140, 166, 331, 348, 357, 416, 418, 502, 513], "kgk": 140, "yttrium": [141, 154], "yttria": 141, "zinc": [142, 154], "1491": 142, "28": [142, 154, 362], "polycrystallin": 142, "devic": 142, "technologi": [142, 238, 484], "45803": 143, "touloukian": 143, "kirbi": 143, "taylor": 143, "desai": 143, "ifi": 143, "plenum": [143, 238, 285, 286, 289, 334, 355, 356, 483, 492, 497], "washington": 143, "1975": 143, "700": [143, 468, 492], "1136": [143, 487, 492], "99999": 143, "1137": 143, "1400": 143, "7e": [143, 470], "9e": [143, 470], "6e": [143, 470], "8e": [143, 470], "2e": [143, 160, 470], "5e": [143, 454, 470], "03e": 143, "mk": 143, "upgrad": [145, 253, 484, 487, 499, 507], "invest": [145, 484], "thousand": [145, 163, 332, 449, 456, 484, 502, 503, 504], "seriou": [145, 484, 494, 507], "analyst": [145, 313, 449, 451, 484, 492, 507, 509], "strongli": [145, 312, 448, 509], "oftentim": [145, 295, 507], "week": [145, 484], "monetari": 145, "tempor": 145, "meanwhil": [145, 484], "fix": [145, 153, 166, 171, 224, 242, 253, 331, 348, 356, 378, 412, 419, 448, 455, 456, 507], "train": 145, "cognit": 145, "burden": [145, 383, 507], "background": 145, "word": [145, 312, 313, 336, 343, 358, 383, 418, 419, 455, 507], "spreadsheet": [145, 484], "test_m0_1_6": [145, 149], "testmigr": [145, 149, 150], "test_migration_bas": [145, 149], "testmigrationbas": [145, 149, 151], "testsettingsmigr": [145, 149, 151], "fromvers": [145, 146, 147, 148], "tovers": [145, 146, 147, 148], "classic": [146, 498], "_applytostream": 146, "center": [147, 220, 221, 224, 286, 289, 308, 311, 312, 318, 319, 332, 338, 341, 342, 343, 355, 356, 400, 401, 410, 419, 428, 437, 472, 480, 487, 492, 494, 499, 503, 507, 513], "na23": [147, 470, 484, 492], "na": [147, 154, 262, 295, 312, 356, 470, 492, 497, 507], "mn55": [147, 492], "he4": [147, 164, 492], "he": [147, 154, 492, 497, 503], "w182": [147, 302, 492], "o16": [147, 295, 499, 507], "al27": [147, 163, 499], "n14": 147, "w183": [147, 302, 492], "w184": [147, 302, 492], "w186": [147, 302, 492], "alphanumer": [148, 486], "ring": [148, 220, 221, 224, 242, 289, 307, 311, 318, 319, 326, 332, 336, 337, 338, 341, 342, 343, 344, 364, 367, 410, 428, 463, 464, 486, 505, 507, 509, 513], "a2003b": 148, "test_locationlabelmigr": [149, 150], "test_basic_valid": [149, 151], "test_loadstreamfrompath": [149, 151], "locationlabel": 150, "mpi_comm": [152, 452], "bcast": [152, 206, 400], "wait": [152, 206, 452, 456, 494], "sync": [152, 394, 452], "sit": [152, 164, 206, 221, 332, 452, 480, 483], "someinst": 152, "comm_world": 152, "interestingli": 152, "strong": [152, 229, 246], "discourag": [152, 312], "sign": [152, 205, 312, 448, 454], "allcpuresult": 152, "objectsforallcorestoit": 152, "subset": [152, 241, 295, 312, 313, 330, 404, 424, 425, 486, 507], "len": [152, 156, 221, 312, 411, 416, 452, 470, 473, 474, 477, 496, 497, 509], "clase": 152, "numpernod": 152, "mpi_siz": [152, 262, 452], "workload": 152, "spawn": [152, 486], "varaibl": 152, "think": [152, 312, 456, 486, 507, 509], "dsitributionact": 152, "amongst": [152, 345, 507], "skipinterfac": 152, "minim": [153, 221, 224, 240, 345, 394, 406, 412, 455, 480, 485, 498, 514], "mainli": [153, 242, 284], "three": [153, 156, 168, 170, 183, 224, 290, 311, 312, 341, 343, 377, 412, 494, 498, 499, 507], "byz": [153, 154, 496], "ironfromz": 153, "ironfromnam": 153, "bynam": [153, 154, 156, 163, 462, 469, 470, 477, 496], "iron": [153, 154, 155, 496, 507], "ironfromsymbol": 153, "bysymbol": [153, 154, 496], "lower": [153, 220, 224, 242, 285, 286, 289, 294, 312, 314, 315, 325, 332, 334, 340, 343, 344, 383, 487, 502, 513], "upper": [153, 154, 170, 202, 220, 224, 244, 253, 285, 286, 289, 314, 315, 325, 334, 340, 343, 344, 401, 410, 507, 513], "truli": [153, 400, 484, 503], "ever": [153, 334, 356, 358, 368, 455, 484, 494, 507], "118": [153, 154, 362], "fe56": [153, 163, 475, 492], "stand_alon": 153, "human": [153, 156, 335, 382, 507], "readabl": [153, 156, 284, 382, 455, 507], "capit": [153, 156, 241, 454, 455, 507], "letter": [153, 167, 202, 241, 289, 401, 415, 455, 490, 498, 503, 507], "tradition": [153, 219], "legaci": [153, 239, 353, 484], "Of": [153, 164, 220, 313, 484, 492, 497, 499], "reserv": [153, 242, 455, 456], "aa": [153, 165, 174, 202, 241, 242, 257, 332, 358, 475, 476], "ab": [153, 201, 241, 289, 312, 332, 492, 494, 503], "za": 153, "pu39": [153, 289], "along": [153, 156, 167, 213, 224, 242, 253, 283, 289, 312, 313, 316, 317, 325, 331, 334, 340, 375, 376, 412, 449, 451], "bylabel": [153, 156, 496], "softwar": [153, 156, 166, 449, 455, 483, 484, 485, 498, 507, 514], "mcnp": [153, 156, 163, 246, 284, 289, 319, 332, 404, 412, 424, 444, 461, 465, 482, 487, 490, 494, 500, 507], "serpent": [153, 156, 205, 242, 246, 507], "mc2": [153, 155, 156, 160, 170, 172, 174, 177, 201, 205, 246, 250, 257, 289, 413, 449, 484, 490, 507], "94": [153, 154, 155, 362, 487], "tinfromnam": 153, "sn112": 153, "tinfromlabel": 153, "tinfrommcc2id": 153, "sn1125": 153, "tinfrommcc3id": 153, "sn1127": 153, "fulfil": 153, "ll": [153, 286, 343, 344, 419, 452, 485, 492, 494, 497, 498, 507, 514], "test_el": [153, 157], "testel": [153, 157, 158], "test_nucdirectori": [153, 157], "testnucdirectori": [153, 157, 159], "test_nuclidebas": [153, 157], "testnuclid": [153, 157, 160], "testaaazzzsid": [153, 157, 160], "test_thermalscatt": [153, 157], "buildblockwithtsl": [153, 157, 161], "testthermalscatt": [153, 157, 161], "getnuclidethermalscatteringdata": [153, 157, 161], "test_transmut": [153, 157], "randomstr": [153, 157, 162], "transmutationtest": [153, 157, 162], "decaymodetest": [153, 157, 162], "alkali_met": [153, 154, 496], "alkaline_earth_met": [153, 154], "nonmet": [153, 154], "transition_met": [153, 154], "post_transition_met": [153, 154], "metalloid": [153, 154], "halogen": [153, 154], "noble_ga": [153, 154], "lanthanid": [153, 154], "actinid": [153, 154, 248, 295, 312, 480, 507], "isnaturallyoccur": [153, 154, 158, 496], "getdatabasenam": [153, 156], "getdecai": [153, 156], "getmcc2id": [153, 156], "getmcc3id": [153, 156, 490], "getmcc3idendfbvii0": [153, 156], "getmcc3idendfbvii1": [153, 156], "getserpentid": [153, 156], "fissil": [153, 156, 183, 241, 286, 312, 492, 502, 503, 505, 507, 512], "spontaneous_fiss": [153, 156], "getmcnpid": [153, 156], "getaaazzzsid": [153, 156], "getendfmatnum": [153, 156], "getsubjectnuclidebas": [153, 163], "getpreferredproduct": [153, 164], "outlin": [154, 156, 401, 454, 509], "gaseou": [154, 248, 487, 507], "stp": [154, 251], "hydrogen": [154, 161, 499], "helium": 154, "nitrogen": 154, "fluorin": 154, "ne": [154, 155, 312], "neon": [154, 155], "chlorin": 154, "argon": 154, "36": [154, 362, 492, 507], "krypton": [154, 416], "xe": [154, 246, 416], "54": [154, 362], "xenon": [154, 416, 507], "rn": 154, "radon": 154, "og": 154, "oganesson": 154, "classifi": [154, 312], "ac": [154, 163, 497], "actinium": 154, "90": [154, 289, 312, 362, 401, 411, 471, 484, 498, 507], "91": [154, 362], "protactinium": [154, 158], "93": [154, 362, 507], "neptunium": 154, "plutonium": 154, "am": [154, 246], "americium": 154, "curium": [154, 507], "bk": 154, "berkelium": 154, "cf": 154, "98": [154, 362, 477, 480, 492, 507], "einsteinium": 154, "fm": 154, "fermium": 154, "md": [154, 494], "101": [154, 362, 412], "mendelevium": 154, "NO": 154, "102": [154, 362], "nobelium": 154, "lr": 154, "103": [154, 362, 473, 481], "lawrencium": 154, "num": [154, 212, 289, 355, 449, 471, 513], "aluminium": 154, "phosphoru": 154, "sc": [154, 417], "37": [154, 362], "titanium": 154, "ti": [154, 341, 342, 454, 480, 495], "vanadium": 154, "34": [154, 362, 492], "manganes": 154, "38": [154, 362, 498], "cobalt": 154, "co": [154, 471, 485, 507, 514], "29": [154, 345, 362, 489], "zn": [154, 302], "gallium": 154, "germanium": 154, "ge": 154, "33": [154, 179, 255, 362, 419, 470], "arsen": 154, "AS": [154, 167, 484, 498], "selenium": 154, "se": 154, "bromin": 154, "br": 154, "rubidium": 154, "rb": [154, 167, 171], "strontium": 154, "sr": [154, 442], "57": [154, 362], "nb": [154, 156, 163, 462, 477, 480], "mo": [154, 246, 302, 492, 497, 507], "technetium": 154, "ruthenium": 154, "ru": 154, "rhodium": 154, "rh": 154, "palladium": 154, "pd": [154, 264, 347], "53": [154, 362], "silver": 154, "ag": [154, 213, 419], "74": [154, 362, 365, 498], "cadmium": 154, "cd": [154, 484, 485, 494, 514], "49": [154, 362], "indium": 154, "IN": [154, 168, 175], "88": [154, 362], "tin": [154, 507], "sn": [154, 166, 253], "59": [154, 362], "antimoni": 154, "sb": 154, "52": [154, 289, 362], "tellurium": 154, "iodin": 154, "barium": 154, "ba": [154, 241], "lanthanum": 154, "la": [154, 163, 166], "58": [154, 345, 362], "cerium": 154, "ce": 154, "praseodymium": 154, "pr": [154, 448, 455, 487, 488, 489, 490], "neodymium": 154, "nd": [154, 164, 262, 302], "61": [154, 362], "promethium": 154, "pm": [154, 347], "62": [154, 362], "samarium": 154, "europium": 154, "eu": 154, "gadolinium": 154, "gd": 154, "65": [154, 241, 362], "terbium": 154, "tb": 154, "dysprosium": 154, "dy": 154, "holmium": 154, "ho": 154, "erbium": 154, "er": 154, "69": [154, 362], "thulium": 154, "70": [154, 356, 362, 411, 419, 497, 507], "ytterbium": 154, "yb": 154, "71": [154, 362, 492], "lutetium": 154, "lu": 154, "72": [154, 362, 492, 507], "ta": 154, "75": [154, 362, 498], "rhenium": 154, "osmium": 154, "iridium": 154, "ir": 154, "platinum": 154, "pt": 154, "79": [154, 362, 507], "gold": [154, 442], "au": 154, "mercuri": 154, "hg": 154, "81": [154, 362], "thallium": 154, "pb": [154, 284, 354, 363, 383, 394], "bi": [154, 452], "84": [154, 362, 496], "polonium": 154, "po": [154, 332, 337, 338, 341, 343, 344, 364, 486, 509], "astatin": 154, "AT": [154, 173], "87": [154, 362, 496], "francium": 154, "fr": 154, "radium": 154, "ra": [154, 160], "104": [154, 362], "rutherfordium": 154, "rf": 154, "105": [154, 362], "dubnium": 154, "106": [154, 362], "seaborgium": 154, "sg": 154, "107": [154, 362, 474, 481], "bohrium": 154, "bh": 154, "108": [154, 362], "hassium": 154, "109": [154, 362], "meitnerium": 154, "mt": [154, 492, 512], "110": [154, 238, 357, 362, 411], "darmstadtium": 154, "111": [154, 362], "roentgenium": 154, "rg": 154, "112": [154, 362], "copernicium": 154, "cn": 154, "113": [154, 362], "nihonium": 154, "nh": 154, "114": [154, 362], "flevrovium": 154, "fl": 154, "115": [154, 362], "moscovium": 154, "mc": [154, 155, 156, 172, 189, 201, 253, 294, 498, 507], "116": [154, 362], "livermorium": 154, "lv": 154, "117": [154, 362], "tennessin": 154, "119": [154, 362], "dummi": [154, 156, 172, 174, 177, 201, 212, 285, 293, 302, 325, 332, 334, 356, 358, 382, 390, 452, 470, 471, 479, 492, 499], "120": [154, 224, 289, 319, 362, 489, 496, 513], "lumpedfissionproduct": [154, 239, 245, 289, 309, 312], "lp": 154, "proton": [154, 156, 164, 469, 477, 480, 496], "chemic": [154, 229, 251, 312, 404, 483, 503, 505], "cut": [154, 289, 311, 319, 401, 484, 507], "elem": 154, "abbrevi": [154, 155, 160, 455], "getz": 154, "elementzbysymbol": 154, "elementsymbol": 155, "prefix": [155, 166, 167, 215, 400, 455], "xstype": [155, 239, 242, 246, 289, 292, 478, 503, 507], "suffix": [155, 165, 201, 202, 257, 289, 312, 353], "u235ia": 155, "zircfb": 155, "2355": [155, 156], "ia": 155, "fb": 155, "mc2liblabel": 155, "am242": [155, 156, 241, 302], "a242": 155, "am242m": [155, 156, 160, 492], "adjustnuclid": 155, "amass": 155, "u239": [155, 496], "lindhard": 155, "cutoff": [155, 242, 402, 507], "displac": [155, 159, 214, 238, 484, 503, 507, 513], "specter": 155, "ii": 155, "greenwood": 155, "fpp": 155, "197": [155, 362], "argonn": [155, 168, 176, 483, 484], "1985": [155, 490], "ed": [155, 507], "ev": [155, 170, 201, 244, 475, 503, 505], "350439e": [156, 496], "hl": [156, 496], "22160758861e": [156, 496], "204000e": [156, 496], "03": [156, 449, 462, 465, 471, 478, 479, 487, 492, 496, 507, 509], "bymcc2id": [156, 496], "bymcc3idendfvii0": 156, "u235_7": 156, "bymcnpid": [156, 496], "92235": [156, 462], "aaazzz": 156, "byaaazzzsid": [156, 496], "2350920": 156, "npu239": 156, "decaytyp": 156, "dectyp": 156, "sf": [156, 164, 492], "identif": [156, 175, 184], "endf": [156, 160, 163, 185, 246, 295, 490, 507], "vii": [156, 160, 163, 185, 490, 507], "fissl": 156, "halflif": [156, 496], "mcc2id": 156, "mcc3idendfbvii0": 156, "mcc3idendfbvii1": 156, "nucleon": 156, "excit": [156, 494, 499], "pad": [156, 253, 325, 400, 411, 419, 437, 505, 507], "nusf": [156, 164, 496], "cm244": [156, 302, 492], "answer": [156, 343, 378, 421, 483, 484, 492, 496], "card": [156, 201, 404, 424, 461, 465, 482, 487, 500], "isomer": 156, "94239": [156, 462], "6000": [156, 462], "eg": [156, 202, 312], "129m": 156, "njoi": [156, 246], "lightest": 156, "9228": 156, "9237": 156, "92000": 156, "Not": [156, 199, 201, 242, 312, 338, 400, 403, 503, 509], "nat": 156, "truncat": [156, 400, 419], "lump": [156, 164, 241, 246, 248, 250, 251, 309, 312, 480, 487, 507], "fissionproduct": [156, 246, 471, 478, 479, 492, 509], "expend": 156, "numberdensitydict": 156, "activenuclid": [156, 354, 358], "march": [156, 449, 507], "smallest": [156, 289, 306, 315, 318, 412], "orderedset": 156, "lambda": [156, 312, 347, 411, 416, 419, 471, 494, 497, 505], "nn": [156, 509], "zn64": 156, "zn66": 156, "zn67": 156, "zn68": 156, "zn70": 156, "zr90": [156, 492], "zr91": [156, 492], "zr92": [156, 492], "zr94": [156, 492], "zr96": [156, 492], "zr93": 156, "zr95": 156, "isomers90": 156, "isom": [156, 163], "mo95": [156, 492], "mo2n": 156, "nb95": 156, "nb2n": 156, "zr2n": 156, "meet": [156, 289, 312, 332, 338, 347], "0107358968": 156, "am4c": 156, "newlabel": 156, "burnchainstream": [156, 480], "twice": [156, 225, 342, 498], "rebuild": 156, "orphan": 156, "burnchain": 156, "believ": [156, 484], "bymcc3idendfbvii0": 156, "bymcc3idendfbvii1": 156, "henc": [156, 309, 419, 451], "ecosystem": [156, 284, 448, 450, 455, 456, 484, 495], "everyth": [156, 176, 202, 203, 206, 242, 253, 312, 318, 345, 415, 419, 452, 498, 513], "metast": [156, 480, 505], "ground": [156, 484, 487], "test_elements_elementbulkproperti": [157, 158], "test_element_elementbynamereturnsel": [157, 158], "test_element_elementbyzreturnsel": [157, 158], "test_element_elementbysymbolreturnsel": [157, 158], "test_element_addexistingelementfail": [157, 158], "test_element_addedelementappearsinelementlist": [157, 158], "test_element_getnatrualisotpicsonlyretrievesabundacegt0": [157, 158], "test_element_isnaturallyoccur": [157, 158], "test_abundancesaddtoon": [157, 158], "test_isheavymet": [157, 158], "test_nucdir_getnameforolddashednam": [157, 159], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclid": [157, 159], "test_nucdir_getnuclidesfromforbadnam": [157, 159], "test_getdisplacementenergi": [157, 159], "test_nucbases_fromnamebadnameraisesexcept": [157, 160], "test_nucbase_allabundancesaddtoon": [157, 160], "test_nucbases_alllabelsareuniqu": [157, 160], "test_nucbases_negativezraisesexcept": [157, 160], "test_nucbases_z295raisesexcept": [157, 160], "test_nucbases_mc2element": [157, 160], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail": [157, 160], "test_naturalnuclidebase_getnatrualisotp": [157, 160], "test_nucbases_singlefailswithmultiplematch": [157, 160], "test_nucbases_singlefailswithnomatch": [157, 160], "test_nucbases_singleisprettyspecif": [157, 160], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotop": [157, 160], "test_nucbases_labelandnamecollsionsareforsamenuclid": [157, 160], "test_nucbases_imposeburnchaindecaybulkstatist": [157, 160], "test_nucbases_imposeburnchaintransmutationbulkstatist": [157, 160], "test_nucbases_imposeburn_nusf": [157, 160], "test_nucbases_databasenamesstartwith_n": [157, 160], "test_nucbases_alldatabasenamesareuniqu": [157, 160], "test_nucbases_am242m": [157, 160], "test_nucbases_isheavymet": [157, 160], "test_getdecai": [157, 160], "test_getendfmatnum": [157, 160], "test_nonmc2nuclid": [157, 160], "test_kryptondecayconst": [157, 160], "test_curiedefinitionwithra226": [157, 160], "test_loadmcc2data": [157, 160], "test_loadmcc3endfvii0data": [157, 160], "test_loadmcc3endfvii1data": [157, 160], "test_aaazzzsnamegener": [157, 160], "test_graphiteonreactor": [157, 161], "test_endf8compound": [157, 161], "test_endf8elementincompound": [157, 161], "test_endf8isotop": [157, 161], "test_acecompound": [157, 161], "test_aceelementincompound": [157, 161], "test_aceisotop": [157, 161], "test_failonmultipl": [157, 161], "test_transmutation_validreactiontyp": [157, 162], "test_transmutation_productparticl": [157, 162], "test_transmutation_invalidreactiontyp": [157, 162], "test_decaymode_validreactiontyp": [157, 162], "test_decaymode_invalidreactiontyp": [157, 162], "ripl": [158, 486, 487], "debat": 158, "yeah": [158, 213], "branch": [160, 164, 257, 448, 480, 487], "3e": [160, 470], "threshold": [160, 244, 270], "ternari": [160, 355], "sponan": 160, "am242g": 160, "226": [160, 496], "ci": [160, 312, 462, 487, 489], "988": 160, "mcc": [160, 174], "aaazz": 160, "tsl": [161, 163], "armiobj": 161, "conceptu": [161, 309, 367, 484, 507], "offici": [161, 175, 348, 456], "tslbynuclidebas": 161, "subject": [161, 163, 284, 455, 484], "tslinfo": 161, "nucbas": 161, "acelabel": [161, 163], "awar": [163, 206, 316, 484, 507], "characterist": [163, 345], "significantli": [163, 166, 205, 242, 312, 318, 449], "molecul": [163, 312], "beta": [163, 164, 170, 238, 480, 503, 505, 507], "solver": [163, 164, 170, 174, 176, 205, 246, 252, 253, 284, 289, 318, 331, 463, 471, 480, 494, 498, 499, 507], "c12": 163, "parson": 163, "ur": 163, "25096": 163, "lanl": [163, 174], "pdf_file": 163, "classif": 163, "beo": 163, "crystallin": 163, "porou": [163, 238], "para": 163, "ortho": 163, "ch4": 163, "sio2": 163, "benzen": 163, "iii": 163, "kernel": [163, 215, 241, 253, 292, 293, 412, 484, 487, 492, 493, 498, 507, 509], "bynbandcompound": 163, "compoundnam": 163, "endf8label": 163, "whose": [163, 242, 289, 316, 345, 400, 411, 419], "methan": 163, "endf8": 163, "rebuilt": 163, "burnchainfilenam": [164, 507], "np237": [164, 302, 492], "n2n": [164, 189, 198, 201, 262, 312, 503], "lfp38": [164, 246, 302, 492], "np239": 164, "ngamma": [164, 262, 416, 475, 480], "45000e": 164, "halflifeinsecond": 164, "4099935680e": 164, "gamma": [164, 166, 171, 172, 177, 192, 201, 202, 203, 239, 253, 260, 262, 289, 309, 312, 330, 331, 345, 348, 416, 475, 480, 487, 503, 507], "low": [164, 241, 242, 285, 334, 400, 416, 471, 492, 499, 502, 503, 504, 505, 507], "explicitli": [164, 220, 246, 284, 296, 332, 334, 452, 456, 473, 474, 486, 494, 498, 507, 513], "matrix": [164, 167, 168, 170, 173, 174, 183, 192, 198, 201, 203, 262, 400, 467, 480, 481, 482, 497, 500, 503, 509], "ill": 164, "exponenti": [164, 412, 480], "cram": 164, "adequ": [164, 455], "solut": [164, 172, 241, 242, 246, 313, 318, 348, 412, 507], "intrins": [164, 483, 503, 505], "pusa": 164, "maria": 164, "jaakko": 164, "leppanen": 164, "164": [164, 362, 492], "2010": 164, "140": [164, 362], "150": [164, 362, 411, 412, 464, 507], "moler": 164, "cleve": 164, "charl": 164, "van": 164, "loan": 164, "nineteen": 164, "dubiou": 164, "siam": 164, "1978": 164, "836": 164, "datadict": 164, "productnuclid": [164, 480], "fallback": [164, 220, 385], "productparticl": 164, "outgo": [164, 176, 191, 220, 507], "particl": [164, 503, 507], "scale": [164, 168, 289, 295, 312, 319, 338, 355, 364, 404, 416, 418, 495, 503, 510], "doubl": [164, 167, 292, 419, 509], "librarynucnam": 164, "daughter": [164, 505], "circuit": [164, 347, 348], "shorter": [164, 376, 419, 450, 456, 499], "nalph": [164, 262, 416, 475, 480], "deuteron": 164, "triton": 164, "nt": [164, 262, 507], "bmd": [164, 480], "bpd": [164, 480], "electron": 164, "ec": [164, 472], "xsid": [165, 202, 241, 242, 268], "isotx": [165, 166, 168, 170, 189, 196, 201, 202, 203, 243, 260, 262, 289, 309, 312, 332, 416, 467, 470, 476, 481, 482, 486, 487, 500, 507], "compx": [165, 166, 175, 183, 196, 202], "gamiso": [165, 166, 174, 187, 202, 203, 486, 487], "cycle0": 165, "pmatrx": [165, 166, 192, 201, 202, 203, 486, 487], "implicit_int": [165, 166, 167], "iorecord": [165, 166, 167], "binaryrecordread": [165, 166, 167], "binaryrecordwrit": [165, 166, 167], "asciirecordread": [165, 166, 167], "asciirecordwrit": [165, 166, 167], "datacontain": [165, 166, 167, 169, 173, 175, 176, 178, 179, 180], "streamwithdatacontain": [165, 166, 167, 169, 173, 175, 176, 178, 179, 180], "getblockbandwidth": [165, 166, 167], "compxsregion": [165, 166, 168], "dif3d": [165, 166, 168, 170, 171, 172, 174, 175, 176, 179, 184, 186, 188, 190, 193, 201, 205, 221, 286, 289, 319, 331, 336, 344, 449, 483, 498, 503, 507], "dif3ddata": [165, 166, 169], "dif3dstream": [165, 166, 169], "dlayx": [165, 166, 185], "delayedneutrondata": [165, 166, 170], "readbinari": [165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 202, 470, 475, 476], "readascii": [165, 166, 167, 170, 177, 400, 401], "writebinari": [165, 166, 167, 168, 170, 171, 173, 174, 177, 178, 179, 180], "writeascii": [165, 166, 167, 170, 176, 177, 180, 400, 401], "dlayxsio": [165, 166, 170], "fixsrc": [165, 166, 186, 507], "comparenuclidex": [165, 166, 172, 174, 177], "adddummynuclidestolibrari": [165, 166, 172, 174, 177], "geodst": [165, 166, 176, 178, 188, 332, 487], "geodstdata": [165, 166, 173], "geodststream": [165, 166, 173], "compareset": [165, 166, 174], "isotxsio": [165, 166, 174], "labelsdata": [165, 166, 175], "labelsstream": [165, 166, 175], "nhflux": [165, 166, 179, 191, 487], "nhfluxstream": [165, 166, 176], "nafluxstream": [165, 166, 176], "nhfluxstreamvari": [165, 166, 176], "nafluxstreamvari": [165, 166, 176], "getnhfluxread": [165, 166, 176], "pmatrxio": [165, 166, 177], "pwdint": [165, 166, 193], "pwdintdata": [165, 166, 178], "pwdintstream": [165, 166, 178], "rtflux": [165, 166, 171, 194], "rtfluxdata": [165, 166, 179], "rtfluxstream": [165, 166, 179], "atfluxstream": [165, 166, 179], "getfdfluxread": [165, 166, 179], "rzflux": [165, 166, 179, 195], "rzfluxdata": [165, 166, 180], "rzfluxstream": [165, 166, 180], "test_xscollect": [165, 197], "testxscollect": [165, 197, 198], "mockblueprint": [165, 197, 198], "mockblock": [165, 197, 198], "test_xslibrari": [165, 197], "tempfilemixin": [165, 197, 199], "testxslibrari": [165, 197, 199], "testgetisotxsfilesinworkingdirectori": [165, 197, 199], "abstracttestxslibrarymerg": [165, 197, 199], "pmatrx_merge_test": [165, 197, 199], "isotxs_merge_test": [165, 166, 181, 189, 197, 199], "gamiso_merge_test": [165, 197, 199], "combined_merge_test": [165, 197, 199], "test_xsnuclid": [165, 197], "nuclidetest": [165, 197, 200], "getdefaultx": [165, 201], "getabsorptionx": [165, 201], "gettotalscattermatrix": [165, 201], "collapsecrosssect": [165, 201], "createmacrosonblocklist": [165, 201], "createmacrosfrommicro": [165, 201], "gammaenergyupperbound": [165, 202], "neutrondoseconversionfactor": [165, 202], "gammadoseconversionfactor": [165, 202], "numgroup": [165, 168, 201, 202], "numgroupsgamma": [165, 202], "nuclidelabel": [165, 202], "resetscatterweight": [165, 202], "getscatterweight": [165, 202], "purgefissionproduct": [165, 202], "regionlabel": [165, 202], "updatebasenuclid": [165, 203], "getmicrox": [165, 200, 203], "getx": [165, 166, 168, 203], "buildnormalizedscattercolumn": [165, 203], "tran": [165, 203, 480], "late": 166, "1960": [166, 484], "recogn": [166, 284, 484], "establish": [166, 316, 405, 406, 455, 484], "committe": 166, "coordin": [166, 176, 200, 215, 220, 246, 253, 286, 289, 294, 312, 319, 320, 327, 328, 331, 332, 336, 338, 341, 342, 343, 355, 356, 362, 401, 410, 412, 421, 443, 444, 464, 473, 494, 499, 513], "1977": 166, "iv": [166, 170, 171, 173, 174, 178, 179, 180, 333], "partisn": [166, 507], "multigroup": [166, 168, 170, 171, 172, 174, 177, 179, 180, 201, 214, 244, 253, 257, 289, 309, 312, 331, 332, 357, 416, 470, 490, 503, 507], "grupx": 166, "brkox": 166, "bondarenko": 166, "russian": 166, "delai": [166, 168, 170, 185, 239, 242, 272, 503, 505, 507], "precursor": [166, 170, 239, 272, 505, 507], "isogx": 166, "ndxsrf": 166, "znatdn": 166, "subzon": 166, "sncon": 166, "ordin": [166, 418], "surfac": [166, 176, 191, 503], "scalar": [166, 332, 418, 497, 503, 509, 513], "atflux": [166, 171, 179], "adjoint": [166, 176, 179, 194, 239, 253, 289, 309, 312, 331, 332, 416, 503, 505, 507], "rcurnt": 166, "acurnt": 166, "raflux": 166, "angular": [166, 311, 344], "aaflux": 166, "avearg": 166, "densitii": 166, "interv": [166, 178, 412, 430], "dougla": 166, "dell": 166, "procedur": [166, 331], "6941": 166, "lo": 166, "alamo": 166, "septemb": 166, "5369298": 166, "ascii": [166, 167, 170, 173, 176, 177, 178, 179, 180, 182, 183, 192, 194, 195, 220, 294, 361, 401, 421, 486, 498, 507], "confus": [166, 167, 295, 309, 312, 334, 341, 455, 487, 507], "rw": [166, 167], "talk": [166, 167, 507, 513], "hide": [166, 214, 302, 309, 358, 447, 455, 486], "record": [166, 167, 168, 169, 173, 175, 178, 368, 370, 419, 437], "byte": [166, 167, 312, 408, 411, 437], "fortran": [166, 167, 412, 484], "unformat": 166, "sequenti": [166, 167, 442, 449], "gcc": [166, 492], "gnu": [166, 383], "onlinedoc": 166, "gfortran": 166, "pyne": 166, "terrapow": [166, 242, 413, 446, 451, 456, 483, 484, 485, 487, 498, 514], "author": [166, 419], "era": 166, "inspir": 166, "prof": 166, "jame": 166, "paul": 166, "hollowai": 166, "ccccutil": 166, "2001": 166, "test_cccc": [166, 181], "cccciostreamtest": [166, 181, 182], "ccccbinaryrecordtest": [166, 181, 182], "ccccasciirecordtest": [166, 181, 182], "test_compx": [166, 181], "testcompx": [166, 181, 183], "test_dif3d": [166, 181], "testdif3dsimplehexz": [166, 181, 184], "testdif3demptyrecord": [166, 181, 184], "test_dlayx": [166, 181], "dlayxstest": [166, 181, 185], "test_fixsrc": [166, 181], "testfixsrc": [166, 181, 186], "test_gamiso": [166, 181], "testgamiso": [166, 181, 187], "test_geodst": [166, 181], "testgeodst": [166, 181, 188, 193], "test_isotx": [166, 181], "testisotx": [166, 181, 189], "test_label": [166, 181, 354, 361], "testlabel": [166, 181, 190], "test_nhflux": [166, 181], "testnhflux": [166, 181, 191], "testnhfluxvari": [166, 181, 191], "test_pmatrx": [166, 181], "testpmatrxnuclid": [166, 181, 192], "testpmatrx": [166, 181, 192], "testproductionmatrix_fromwritten": [166, 181, 192], "testproductionmatrix_fromwrittenascii": [166, 181, 192], "test_pwdint": [166, 181], "test_rtflux": [166, 181], "testrtflux": [166, 181, 194], "test_rzflux": [166, 181], "testrzflux": [166, 181, 195], "binaryfilesequ": [166, 181, 195], "maxsiz": [166, 167], "rwint": [166, 167], "rwbool": [166, 167], "rwfloat": [166, 167], "rwdoubl": [166, 167], "rwstring": [166, 167], "rwlist": [166, 167], "rwmatrix": [166, 167], "rwdoublematrix": [166, 167], "rwintmatrix": [166, 167], "rwimplicitlytypedmap": [166, 167], "rwlong": [166, 167], "readwrit": [166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180], "createrecord": [166, 167], "initmetadata": [166, 168], "allocatex": [166, 168], "makescatteringmatric": [166, 168], "generateaveragedelayedneutronconst": [166, 170], "fluxmoment": [166, 176], "partialcurrentshex": [166, 176], "partialcurrentshex_ext": [166, 176], "partialcurrentsz": [166, 176], "groupflux": [166, 179, 180], "getenergygroupindex": [166, 179], "no_iter": [166, 180], "diverg": [166, 180, 221, 385], "ijklmn": 167, "implicit": [167, 446, 498], "hasrecordboundari": 167, "signific": [167, 229, 289, 309, 404, 484], "enforc": [167, 284, 335, 348, 362, 376, 383, 449, 489, 507], "tradeoff": [167, 507], "comprehend": 167, "885": [167, 487], "seemingli": 167, "odd": [167, 176, 332, 338, 455], "precis": [167, 331, 332, 348, 442, 486, 487, 498, 507], "containedtyp": [167, 369, 376], "strlength": 167, "fortran77": 167, "roughli": [167, 312, 471, 498], "front": [167, 334, 507], "newlin": [167, 205, 419], "streamwithdatastructur": 167, "filemod": [167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180], "io": [167, 312, 442, 446, 484], "wb": [167, 171], "boilerpl": 167, "nintj": 167, "nblok": 167, "bandwidth": 167, "jl": 167, "ju": 167, "WITH": 167, "THE": [167, 168], "AND": [167, 175, 332], "min0": 167, "jup": 167, "matric": [167, 168, 183, 198, 201, 203, 262, 476], "spars": [167, 168, 183, 203, 382], "jh": 167, "jmax": 167, "band": 167, "derstin": [168, 344], "solv": [168, 170, 230, 253, 331, 342, 348, 410, 412, 480, 485, 494, 498, 507, 509, 514], "diffus": [168, 253, 262, 319, 331, 483, 484, 486, 487], "april": 168, "1984": [168, 344, 490], "illinoi": 168, "unt": 168, "ark": 168, "67531": 168, "metadc283553": 168, "octob": [168, 176], "north": [168, 332, 513], "texa": 168, "credit": 168, "govern": [168, 484, 498], "depart": 168, "IF": [168, 175, 370], "FOR": [168, 175], "OF": [168, 484, 498], "decreas": [168, 320, 412, 499], "r0": 168, "macro": [168, 201, 262, 289, 499], "higherorderscatt": 168, "p1": [168, 412], "p5": 168, "compxs2": 168, "watt": [168, 178, 289, 505], "powerconvmult": 168, "integr": [168, 289, 306, 312, 331, 355, 450, 484, 503, 505, 510], "absorpt": [168, 201, 331, 503, 505], "similari": 168, "lib1": [168, 170, 172, 174, 177, 202], "lib2": [168, 170, 172, 174, 177, 202], "verbos": [168, 174, 201, 370, 397, 400, 419, 456, 497, 507, 509], "disregard": [168, 289], "regionnumb": 168, "filewidechi": 168, "reg00": 168, "reg01": 168, "reg02": 168, "regnn": 168, "r10": 168, "01147095": 168, "01006284": 168, "0065597": 168, "00660079": 168, "005587": 168, "08920149": 168, "13035864": 168, "16192732": 168, "sigma_": [168, 201, 289], "rem": 168, "cdot": [168, 309], "reconstruct": [168, 191, 196, 203, 253, 503, 507, 509], "s_": 168, "rightarrow": 168, "segment": [168, 311, 483, 507], "xscatu_j": 168, "lbrace": [168, 510], "vert": 168, "nup": 168, "rbrace": [168, 510], "xscatj_j": 168, "xscatd_j": 168, "j_ndn": 168, "ndn": 168, "upscatt": 168, "downscatt": [168, 244], "scipi": [168, 183, 286, 412], "csc_matrix": [168, 183], "five": [169, 224, 410], "emiss": [170, 185], "spectra": 170, "numenergygroup": 170, "numprecursorgroup": 170, "kinet": [170, 185, 213, 348, 503], "precursordecayconst": 170, "character": [170, 257, 343, 344, 483], "delayemissionspectrum": [170, 185], "famili": [170, 289, 403, 492, 507], "pxg": 170, "spectrum": [170, 185, 241, 242, 253, 289, 416, 480, 503], "aka": [170, 507], "chi": [170, 201, 238, 262, 503], "delayneutronsperfiss": 170, "nubar": 170, "ordereddict": [170, 291, 292, 293, 294, 295, 296, 437], "contribut": [170, 201, 331, 448, 485, 514], "nuclidefamili": 170, "numfamili": 170, "numnuclid": 170, "neutronenergyupperbound": 170, "nuclidecontributionfract": 170, "perturbationtheori": 170, "perturbationtheoryinterfac": 170, "calculatebeta": 170, "triangular": 171, "photon": [171, 201, 253, 487], "fixsrcarrai": 171, "intent": [171, 286, 484], "preexist": 171, "v3": [172, 452], "microscop": [172, 174, 198, 201, 203, 241, 253, 262, 289, 318, 332, 476, 495], "gamsor": [172, 177], "smith": [172, 176, 419], "lee": [172, 177], "hill": 172, "1343095": 172, "nuc1": [172, 174, 177], "nuc2": [172, 174, 177], "dummynuclid": [172, 174, 177], "coars": [173, 184, 221], "geo": 173, "xmesh": 173, "zmesh": 173, "geodst2": 173, "rememb": [173, 220, 312, 349, 452, 455, 507], "analog": [173, 180, 205, 325, 509], "istox": [173, 180, 203], "stand": 174, "dragon": 174, "mylib": [174, 201], "fis5": 174, "micro": [174, 201, 262, 475, 476], "scat": 174, "1st": 174, "elast": [174, 198, 201], "captureenergi": 174, "isotxsmetadata": 174, "ecapt": 174, "cacluat": 174, "closer": 174, "shown": [174, 285, 416, 452, 484, 498, 507], "getnuclidefunc": [174, 177], "semi": 174, "t2": 174, "transx": 174, "hyper": 174, "isotsx": 174, "variant": [175, 176, 190, 206, 487], "transvers": 175, "nhts1": 175, "gt": [175, 492, 496, 497, 499], "OR": [175, 484, 498], "distanc": [175, 220, 289, 308, 318, 338, 341, 342, 343, 410, 494, 498, 507], "ngts2": 175, "nset": [175, 212, 441], "nalia": 175, "rod": [175, 286, 289, 290, 318, 331, 484, 487, 498, 502, 505], "nbank": 175, "bank": 175, "channel": [175, 503, 507], "llchn": 175, "llrod": 175, "mmesh": 175, "nvari": 175, "maxbrn": 175, "maxord": 175, "labeldata": 175, "labelstream": 175, "moment": [176, 179, 191, 323, 491], "nhfluxdata": 176, "nfluxstream": 176, "numdatasetstoread": 176, "reader": [176, 179, 182, 183, 312, 370, 403, 442, 454, 455, 487], "v11": 176, "incomingpointerstoallassembli": 176, "geodstcoordmap": 176, "externalcurrentpoint": 176, "boundari": [176, 184, 253, 286, 294, 319, 331, 332, 335, 336, 337, 340, 343, 355, 362, 365, 442, 498, 505, 507], "outgoingpcsymsecpoint": 176, "outpgo": 176, "sector": 176, "ingoingpcsymsecpoint": 176, "ingo": 176, "fluxmomentsal": 176, "jth": 176, "planar": [176, 505, 507], "pariti": 176, "partialcurrentshexal": 176, "partialcurrentshex_extal": 176, "adjac": [176, 191, 498], "partialcurrentszal": 176, "upward": [176, 487], "downward": 176, "rebu": [176, 484, 498], "2014": [176, 443], "palmiotti": 176, "lewi": 176, "carrico": 176, "variat": [176, 260, 284, 289, 455], "anisotrop": 176, "multidimension": 176, "il": 176, "shemon": 176, "1127298": 176, "anlpub": 176, "04": [176, 248, 302, 449, 462, 465, 471, 478, 479, 481, 484, 492, 496], "78313": 176, "naflux": 176, "setter": [176, 331, 345, 348, 363, 376], "radial": [176, 253, 285, 286, 290, 311, 319, 320, 331, 332, 334, 336, 344, 492, 494, 497, 499, 502, 503, 505, 506], "conflict": [176, 394, 484, 485, 494, 507, 514], "_readwrit": 176, "sassi": [176, 332, 503], "adjointflag": [176, 179], "variantflag": 176, "mc23": 177, "changho": 177, "jung": 177, "yeon": 177, "sang": 177, "yang": 177, "sik": 177, "2018": [177, 413], "1483949": 177, "xslib": [177, 455], "pwr": 178, "pwdint2": 178, "rtflux2": 179, "adjointflux": 179, "ng": [179, 255, 262, 312, 503], "fd": [179, 289], "rzflux2": 180, "itp": 180, "test_initwithfilemod": [181, 182], "test_writeandreadsimpleintegerrecord": [181, 182], "test_writeandreadsimplefloatrecord": [181, 182], "test_writeandreadsimplestringrecord": [181, 182], "test_notreadinganentirerecordraisesexcept": [181, 182], "test_readingbeyondrecordraisesexcept": [181, 182], "binarywritepath": [181, 183], "asciiwritepath": [181, 183], "test_librarydata": [181, 183], "test_regionprimaryx": [181, 183], "test_totalscattermatrix": [181, 183], "test_binaryrw": [181, 183], "test_asciirw": [181, 183], "test_mergecompxslibrari": [181, 183], "test_getcompxsfilenam": [181, 183], "test__rwfileid": [181, 184], "test__rwfile1drecord": [181, 184], "test__rw2drecord": [181, 184], "test__rw3drecord": [181, 184], "test__rw4drecord": [181, 184], "test__rw5drecord": [181, 184], "test_writebinari": [181, 184, 187, 189], "test_empty4and5record": [181, 184], "test_decayconst": [181, 185], "test_chi_delai": [181, 185], "test_chi_delaysumsto1": [181, 185], "test_nudelai": [181, 185], "test_endfvii1decayconst": [181, 185], "test_endfvii1neutronsperfiss": [181, 185], "test_compar": [181, 185, 187], "test_writebinary_mcc3": [181, 185], "test_nuclid": [181, 185, 297, 300], "test_avg": [181, 185], "test_writereadbinaryloop": [181, 186], "test_adddummynuclidestolibrari": [181, 187], "test_readgeodst": [181, 188, 193], "test_writegeodst": [181, 188, 193], "test_isotxsgeneraldata": [181, 189], "test_isotxsdetaileddata": [181, 189], "test_getscatteringweight": [181, 189], "test_getnuclid": [181, 189, 354, 358], "test_n2nisreactionbas": [181, 189], "test_getscatterweight": [181, 189], "test_getisotxsfilenam": [181, 189], "test_getgamisofilenam": [181, 189], "test_mergemccv2filesremovesthefilewidechi": [181, 189], "test_readlabelsbinari": [181, 190], "test_writelabelsascii": [181, 190], "test_fc": [181, 191], "test_fluxmo": [181, 191], "test_xypartialcurr": [181, 191], "test_zpartialcurr": [181, 191], "test_writ": [181, 191, 383, 397], "test_pmatrxnuclidedataaa": [181, 192], "test_pmatrxnuclidedataab": [181, 192], "test_nuclidedataisdiffer": [181, 192], "test_getpmatrxfilenam": [181, 192], "test_pmatrxgammaenergi": [181, 192], "test_pmatrxneutronenergi": [181, 192], "test_pmatrxnuclidenam": [181, 192], "test_pmatrxdoesnthavedoseconversionfactor": [181, 192], "test_writtenisidenticaltoorigin": [181, 192], "test_readrtflux": [181, 194], "test_writertflux": [181, 194], "test_rwascii": [181, 194, 195], "test_adjoint": [181, 194], "test_readrzflux": [181, 195], "test_writerzflux": [181, 195], "vector": [183, 201, 203, 224, 248, 262, 312, 332, 343, 362, 404, 486, 502, 503, 504, 505, 509, 513], "indptr": 183, "correspons": 183, "verifi": [183, 184, 185, 191, 260, 275, 284, 312, 325, 329, 356, 357, 365, 378, 383, 471, 478, 479, 492, 497, 507], "optimum": 184, "overrelax": 184, "rebal": 184, "delayx": 185, "nu": [185, 503], "nndc": 185, "bnl": 185, "robert": 185, "keepin": 185, "comment": [185, 448, 450, 456, 498, 499, 507], "subtract": [191, 289, 306, 342, 356, 357, 504, 507], "xy": [191, 253, 416, 444, 502, 503, 507], "fn1": 195, "fn2": 195, "bytewis": 195, "assist": [196, 224, 383, 484, 485, 486, 497, 514], "rewrit": 196, "scaffold": 196, "overal": [196, 454, 455, 484, 492], "_metadata": 196, "test_generatetotalscatteringmatrix": [197, 198], "test_generatetotalscatteringmatrixwithmissingdata": [197, 198], "test_plotnucx": [197, 198], "test_createmacrosfrommicro": [197, 198], "test_collapsecrosssect": [197, 198], "getvolum": [197, 198, 285, 286, 289, 306, 309, 312, 468, 492, 494], "getnuclidenumberdens": [197, 198, 201, 285, 306, 309, 312], "paramcollectiontyp": [197, 198, 285, 286, 289, 306, 307, 308, 309, 311, 312, 332, 333, 349, 351, 352, 354, 358], "setnumberdens": [197, 198, 285, 306, 309, 312, 484, 492], "testfilenam": [197, 199], "test_canpickleandunpickleisotx": [197, 199], "test_canpickleandunpicklegamiso": [197, 199], "test_canpickleandunpicklepmatrx": [197, 199], "test_comparework": [197, 199], "test_comparedifferentcomponentsofanxslibrari": [197, 199], "test_mergefailswithnonisotxsfil": [197, 199], "test_isotxslibraryattribut": [197, 199], "test_gamisolibraryattribut": [197, 199], "test_pmatrxlibraryattribut": [197, 199], "test_mergexslibrarieswithdifferentdatawork": [197, 199], "test_canwriteisotxsfromcombinedxslibrari": [197, 199], "test_canwritegamisofromcombinedxslibrari": [197, 199], "test_canwritepmatrxfromcombinedxslibrari": [197, 199], "test_getisotxsfileswithoutlibrarysuffix": [197, 199], "test_getisotxsfileswithlibrarysuffix": [197, 199], "assert_contains_onli": [197, 199], "geterrortyp": [197, 199], "getreadfunc": [197, 199], "getwritefunc": [197, 199], "getlibaapath": [197, 199], "getlibabpath": [197, 199], "getlibaa_abpath": [197, 199], "getliblumpedpath": [197, 199], "test_cannotmergexslibwithsamenuclidenam": [197, 199], "test_cannotmergexslibxwithdifferentgroupstructur": [197, 199], "test_mergeemptyxslibwithotheressentiallyclonestheoth": [197, 199], "test_mergetwoxslibfil": [197, 199], "test_canremoveisotop": [197, 199], "test_cannotmergexslibswithdifferentgammagroupstructur": [197, 199], "test_mergeallxslibfil": [197, 199], "test_nuclide_createfromlabelfailsonbadnam": [197, 200], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict": [197, 200], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclid": [197, 200], "test_nuclide_newlabelsdontcausewarn": [197, 200], "test_nuclide_oldlabelscausewarn": [197, 200], "test_nuclide_nuclidebasemethodsshouldnotfail": [197, 200], "test_nuclide_isoaadetail": [197, 200], "test_nuclide_2dxsarrangementiscorrect": [197, 200], "test_nuclide_scatterxsarrangementiscorrect": [197, 200], "test_getmicrox": [197, 200], "test_getx": [197, 200], "inelast": [198, 201, 476], "collaps": [198, 201, 246], "barn": [198, 253, 312, 475, 507], "blockparametercollect": [198, 289, 345, 349], "shouldbether": 199, "shouldnotbether": 199, "nicer": [199, 513], "microscopicxscollect": 201, "microlib": 201, "u235aa": [201, 202], "macrocollect": 201, "blockswithmacro": 201, "nuclidecollect": 201, "displai": [201, 312, 416, 442, 483], "crosssect": 201, "extrem": [201, 413, 455, 497], "efficaci": 201, "survei": 201, "bar": [201, 317, 408, 416, 418, 420, 427, 444, 454, 470], "sigma": [201, 289, 344, 503, 505], "sum_g": 201, "sigma_g": 201, "phi_g": [201, 289], "onegroupx": 201, "relativetoler": [201, 417], "overlap": [201, 238, 289, 312, 315, 318, 331, 356, 480, 484], "attributestoignor": 201, "buildscattermatrix": [201, 262], "buildonlycool": [201, 262], "minimumnuclidedens": [201, 262, 487, 507], "creation": [201, 242, 251, 267, 312, 331, 345, 349, 363, 364, 425, 427, 454, 484, 487, 513], "microlibrari": 201, "blocklist": [201, 241, 253, 257, 285, 290, 292, 332, 478], "libtyp": [201, 262], "gammax": [201, 262], "isotxslib": 201, "4b": 201, "hmg4c": 201, "chi_g": 201, "sum_": [201, 289, 312, 510], "chi_": 201, "n_n": 201, "nu_": 201, "sum_n": 201, "microsuffix": 201, "deposit": [201, 289, 356, 503], "obtain": [201, 221, 241, 289, 312, 319, 332, 349, 356, 400, 410, 484, 498, 503, 510, 511, 513], "bn": [201, 248, 309, 312, 404, 492, 502, 503, 504], "getmicrosuffix": [201, 285, 289, 306, 309, 312], "energydepositionconst": 201, "e_": 201, "generation_fiss": 201, "kappa_f": 201, "sigma_f": 201, "fissionenergyfactor": 201, "joul": [201, 289], "kappa_c": 201, "sigma_c": 201, "getnumberdens": [201, 245, 248, 285, 306, 309, 312, 462, 492], "captureenergyfactor": 201, "constantnam": 201, "multconst": 201, "multlib": 201, "macrogroupconst": 201, "attributenam": 202, "veloc": [202, 257, 494, 503], "nuclabel": 202, "xslibrarysuffix": [202, 257, 258], "xslibfilenam": 202, "doppler": [202, 229, 241, 242, 257, 332, 489, 503, 505, 510], "isoaa": 202, "isoba": 202, "isoca": 202, "n1": 202, "isoab": 202, "n2": [202, 400], "isoda": 202, "mergegammalib": 202, "alternatedirectori": 202, "alphabet": [202, 241, 332, 360, 367, 490], "referencedummynuclid": 202, "_xslibrari": 202, "libisotx": 202, "dose": [202, 213, 253, 483, 484, 503, 505, 507], "scattermatrixkei": [202, 203], "elasticscatt": 202, "_buildscatterweight": 202, "purg": 202, "pu39aa": 203, "xscollectionkei": 203, "containerkei": 203, "homogregion": 203, "scatterweight": 203, "fromg": 203, "gx1": 203, "cannib": 203, "newli": [203, 239, 284, 370, 399, 402, 507], "scattermatrix": 203, "scattertypelabel": 203, "scattermatrix1": 203, "scattermatrix2": 203, "graphic": [203, 402, 483, 485, 494, 507, 514], "chosen": [204, 312, 449, 490, 494, 507, 513], "introduc": [204, 239, 345, 395, 451, 487, 499, 505], "test_operatorsnapshot": [204, 210], "testoperatorsnapshot": [204, 210, 211], "testoperatorsnapshotsset": [204, 210, 211], "test_oper": [204, 210], "interfacea": [204, 210, 212], "interfaceb": [204, 210, 212], "interfacec": [204, 210, 212], "operatortest": [204, 210, 212], "testcreateoper": [204, 210, 212], "cyclessettingstest": [204, 210, 212, 400, 420, 441], "testinterfaceandeventhead": [204, 210, 212], "maxburnstep": [204, 205], "steplength": [204, 205, 400, 512], "cyclelength": [204, 205, 345, 400, 441, 454, 497, 498, 499, 507, 512], "powerfract": [204, 205, 400, 441, 507], "availabilityfactor": [204, 205, 400, 441, 498, 499, 507, 512], "cyclenam": [204, 205, 400], "ateol": [204, 205, 209], "initializeinterfac": [204, 205], "printinterfacesummari": [204, 205], "interactallinit": [204, 205], "interactallbol": [204, 205, 449], "interactallboc": [204, 205], "interactalleverynod": [204, 205], "interactalleoc": [204, 205], "interactalleol": [204, 205], "interactallerror": [204, 205], "removeallinterfac": [204, 205], "removeinterfac": [204, 205], "interfaceisact": [204, 205], "getactiveinterfac": [204, 205], "reattach": [204, 205], "snapshotrequest": [204, 205], "setstatetodefault": [204, 205, 209], "couplingisact": [204, 205, 212], "workerquit": [204, 206], "collapseallstderr": [204, 206], "plant": [205, 483, 484, 497, 507, 512], "orchestr": 205, "piec": [205, 312, 449, 492, 495, 507], "flow": [205, 213, 216, 239, 257, 279, 289, 348, 449, 484, 494, 502, 503, 505, 507], "narr": [205, 457, 482, 500], "topic": [205, 442, 454], "tier": 205, "intra": [205, 400], "durat": [205, 503, 507], "outag": [205, 216, 217, 220, 224, 418, 483, 507, 512], "oserror": 205, "unabl": 205, "ncycl": [205, 212, 400, 441, 498, 499, 507], "mainoper": [205, 449], "interactionnam": 205, "statepointindex": 205, "grep": [205, 497], "leverag": [205, 484], "banner": 205, "excludedinterfacenam": 205, "tn": [205, 241], "couplediter": [205, 505], "lie": [205, 338], "reverseateol": 205, "question": [205, 228, 239, 312, 338, 343, 377, 378, 415, 416, 418, 442, 448, 484, 496, 507], "ephemer": 205, "interfacenam": 205, "wasn": 205, "___": [205, 378, 485, 492, 497, 514], "simpler": [205, 341, 447], "touch": [205, 220, 456, 489], "interactst": 205, "dictat": [205, 215, 332, 451], "activeinterfac": 205, "opportun": [205, 332, 454], "weakref": 205, "network": [205, 215, 312, 483, 507], "updatemassfract": 205, "rerout": 205, "didn": 205, "evolv": [205, 449, 484], "smart": [206, 325, 411], "optim": [206, 221, 257, 289, 311, 323, 332, 484, 497, 507], "_mainoper": 206, "rank": [206, 452, 492, 507], "instruct": [206, 452, 456, 485, 514], "devis": 206, "stderr": [206, 368, 509], "arrang": [206, 296, 336, 449, 483, 484, 507], "deprecationwarn": 208, "disappear": 208, "2025": 208, "rx": [209, 255, 376, 480], "behav": [209, 318, 332, 341, 347, 349, 412, 507], "chrolog": 209, "test_ateol": [210, 211], "test_setstatetodefault": [210, 211, 212], "test_mainoper": [210, 211], "test_createinterfac": [210, 211], "test_createinterfacesdis": [210, 211], "test_getoperatorclassfromset": [210, 211], "test_operatordata": [210, 212], "test_orderedinterfac": [210, 212], "test_addinterfacesubclasscollis": [210, 212], "test_interfaceisact": [210, 212], "test_getactiveinterfac": [210, 212], "test_loadstateerror": [210, 212], "test_snapshotrequest": [210, 212], "test_createoper": [210, 212], "test_getsteplength": [210, 212, 420, 441], "test_couplingisact": [210, 212], "test_performtightcoupling_inact": [210, 212], "test_performtightcoupling_skip": [210, 212], "test_performtightcoupling_notconverg": [210, 212], "test_performtightcoupling_writedb": [210, 212], "test_performtightcoupling_nowritedb": [210, 212], "dbwriteforcoupl": [210, 212], "test_computetightcouplingconverg": [210, 212], "detailedcyclesset": [210, 212, 420, 441], "powerfractionssolut": [210, 212], "cyclenamessolut": [210, 212], "availabilityfactorssolut": [210, 212], "steplengthssolut": [210, 212], "cyclelengthssolut": [210, 212], "burnstepssolut": [210, 212], "maxburnstepssolut": [210, 212], "test_getpowerfract": [210, 212, 420, 441], "test_getcyclenam": [210, 212, 420, 441], "test_getavailabilityfactor": [210, 212, 420, 441], "test_getcyclelength": [210, 212, 420, 441], "test_getburnstep": [210, 212, 420, 441], "test_getmaxburnstep": [210, 212, 420, 441], "test_expandcycleandtimenodeargs_empti": [210, 212], "test_expandcycleandtimenodeargs_cycl": [210, 212], "test_expandcycleandtimenodeargs_everynod": [210, 212], "test_expandcycleandtimenodeargs_coupl": [210, 212], "interactal": 212, "loadtestreactor": [212, 285, 354, 364, 462, 463, 464, 471, 479], "fakedirlist": 212, "fakecopi": 212, "conf_tight_coupl": 212, "_performtightcoupl": 212, "conf_cycles_skip_tight_coupling_interact": 212, "address": [212, 229, 290, 345, 450, 492], "accour": 212, "WILL": [212, 323], "writedb": 212, "greater": [212, 289, 306, 410], "prescrib": [212, 316, 444, 499, 510], "previterkeff": 212, "curriterkeff": 212, "nmetadata": [212, 441], "1000000000": [212, 441, 498, 499], "r4": [212, 441], "cyclenodeinfo": 212, "vast": 213, "fairli": [213, 215, 499, 507], "ve": [213, 352, 484, 492, 494, 507], "reprocess": [213, 483], "accid": [213, 229, 484], "drop": [213, 312, 376, 400, 411, 419, 454], "econom": [213, 449, 484, 512], "cost": [213, 455, 484, 512], "estim": [213, 503, 504], "stretch": 213, "supersourceterm": 213, "magwoodsbrain": 213, "propos": [213, 378], "ticket": [213, 448, 455], "began": 213, "matur": [213, 495], "assemblyrotationalgorithm": [213, 216, 224, 507], "bureducingassemblyrot": [213, 216, 217, 490], "simpleassemblyrot": [213, 216, 217, 507], "fuelhandlerfactori": [213, 216, 492], "fuelhandlerinterfac": [213, 216, 220, 225, 257, 284], "fuelhandl": [213, 216, 217, 218, 219, 224, 284, 332, 385, 418, 449, 471, 479, 487, 492, 498, 507], "hexassemblyfuelmgmtutil": [213, 216], "getoptimalassemblyorient": [213, 216, 221, 490], "buildringschedul": [213, 216, 221], "buildconvergentringschedul": [213, 216, 221], "getfuelcycleset": [213, 216, 222], "getfuelcyclesettingvalid": [213, 216, 222], "assemblyhasfuelpinpow": [213, 216, 228], "assemblyhasfuelpinburnup": [213, 216, 228], "maxburnuploc": [213, 216, 228], "maxburnupblock": [213, 216, 228], "fuelperformanceopt": [213, 229, 230], "fuelperformanceexecut": [213, 229, 230], "getfuelperformanceparameterdefinit": [213, 229, 231], "fuelperformanceplugin": [213, 229, 232, 236], "definevalid": [213, 229, 233, 276, 280, 494], "applyfueldisplac": [213, 229, 238], "gasconductivitycorrect": [213, 229, 238], "everynod": [213, 239, 257, 267, 449, 490, 507], "firstcouplediter": [213, 239, 260, 267, 507], "fissionproductmodel": [213, 239, 289, 309, 312, 492], "latticephys": [213, 239, 242], "const": [213, 239, 276], "crosssectiongroupmanag": [213, 225, 239, 242, 246, 267, 492], "getxstypenumberfromlabel": [213, 239, 241], "getxstypelabelfromnumb": [213, 239, 241], "blockcollect": [213, 239, 241, 487], "medianblockcollect": [213, 239, 241], "averageblockcollect": [213, 239, 241], "getblocknuclidetemperatur": [213, 239, 241], "getblocknuclidetemperatureavgterm": [213, 239, 241], "cylindricalcomponentsaverageblockcollect": [213, 239, 241, 487], "cylindricalcomponentsducthetaverageblockcollect": [213, 239, 241], "slabcomponentsaverageblockcollect": [213, 239, 241], "fluxweightedaverageblockcollect": [213, 239, 241], "blockcollectionfactori": [213, 239, 241], "crosssectionset": [213, 239], "xsgeometrytyp": [213, 239, 242], "xsset": [213, 239, 241, 242, 507], "xsmodelingopt": [213, 239, 242, 268], "serializexsset": [213, 239, 242], "xssettingdef": [213, 239, 242], "xssettingsvalid": [213, 239, 242], "diffisotx": [213, 239], "compareisotxslibrari": [213, 239, 243], "energygroup": [213, 239, 475], "getfastfluxgroupcutoff": [213, 239, 244], "getgroupstructur": [213, 239, 244, 475], "getgroupstructuretyp": [213, 239, 244], "group_structur": [213, 239, 244], "macroxsgenerationinterfac": [213, 239, 271], "macroxsgener": [213, 239, 262], "getneutronicsparameterdefinit": [213, 239, 263], "insertneutronicsreport": [213, 239, 264], "insertneutronicsbolcont": [213, 239, 264], "neutronicsplot": [213, 239, 264, 454], "insertinitialcorefuelassem": [213, 239, 264], "generatelineplot": [213, 239, 264], "pd_plot": [213, 239, 264], "getneutronicssettingvalid": [213, 239, 265], "test_execut": [213, 229, 234, 274], "mockparam": [213, 274, 275], "mockcor": [213, 252, 254, 255, 274, 275], "testexecutionopt": [213, 274, 275], "testexecut": [213, 274, 275], "getparameterdefinit": [213, 276, 278], "thermalhydraulicsplugin": [213, 276, 279, 282, 490], "fromuserset": [213, 215, 229, 230, 252, 253], "fromreactor": [213, 215, 229, 230, 252, 253, 285, 353, 400, 401], "resolvederivedopt": [213, 215], "setrundirfromcasetitl": [213, 215], "dpa": [214, 253, 255, 286, 454, 487, 502, 503, 505, 507], "executor": 215, "pathwai": [215, 480], "inputfil": 215, "stdin": 215, "outputfil": [215, 413], "extrainputfil": 215, "sourcenam": 215, "destnam": 215, "brought": [215, 220, 284, 289], "rundir": [215, 275], "extraoutputfil": 215, "executablepath": [215, 413], "workingdir": 215, "savephysicsfil": [215, 253, 487, 507], "dedic": [215, 290], "copyoutput": [215, 487], "applyresultstoreactor": 215, "deliber": [215, 253, 284, 345, 442], "paralleliz": 215, "maxim": [215, 224, 294, 419, 513], "reusabl": [215, 294, 455], "transform": [215, 253, 319, 342, 343, 400, 411, 463, 480], "executeropt": [215, 255], "mine": 216, "dispos": 216, "ex": [216, 296, 333, 351, 393, 413, 426, 486, 490, 507], "chemistri": 216, "handler": [216, 219, 220, 224, 225, 284, 492, 498, 507], "hookspec": [216, 284, 451], "inspect": [216, 232, 239, 279, 284, 378, 490, 497], "test_assemblyrotationalgorithm": [216, 223], "mockfuelhandl": [216, 223, 224], "shuffleandrotatetesthelp": [216, 223, 224], "testoptimalassemblyrot": [216, 223, 224], "testfuelhandlermgmttool": [216, 223, 224], "simplerotationtest": [216, 223, 224], "test_fuelhandl": [216, 223], "fuelhandlertesthelp": [216, 223, 225], "mocklatticephysicsinterfac": [216, 223, 225], "mockxsgm": [216, 223, 225], "testfuelhandl": [216, 223, 225], "testfuelplugin": [216, 223, 225], "addsomedetailassembli": [216, 223, 225], "test_hexassemblyfuelmgmtutil": [216, 223], "testhexassemmgmttool": [216, 223, 226], "test_util": [216, 223, 400, 420], "fuelcycleutilstest": [216, 223, 227], "managefuel": [216, 219, 225], "makeshufflereport": [216, 219, 220], "chooseswap": [216, 220, 223, 224, 383, 385, 498, 507], "prepcor": [216, 220], "findassembli": [216, 220, 225, 492, 507], "isassemblyinazon": [216, 220], "swapassembli": [216, 220, 471, 492], "dischargeswap": [216, 220, 498], "swapcascad": [216, 220], "repeatshufflepattern": [216, 220], "readmov": [216, 219, 220], "trackchain": [216, 220], "processmovelist": [216, 220], "dorepeatshuffl": [216, 220, 332], "prepshufflemap": [216, 220], "makeshufflearrow": [216, 220], "rotat": [217, 220, 221, 224, 228, 253, 285, 286, 289, 308, 341, 355, 362, 410, 412, 428, 480, 490, 502, 503, 505, 506, 507], "fh": [217, 225, 492], "lowest": [217, 221, 224, 244, 286, 332, 400, 471, 492, 507], "orient": [217, 221, 286, 289, 316, 341, 362, 401, 410, 428, 455, 472, 483, 492, 502, 503, 505, 513], "stationari": [217, 225, 334, 507], "isotrop": 217, "txt": [219, 220, 225, 332, 507], "fuelhandlernam": [220, 498, 507], "decis": [220, 246, 342, 454], "supervisori": 220, "movelist": [220, 490], "shufflefactor": 220, "aux": 220, "targetr": [220, 332], "compareto": [220, 492, 507], "forcesid": 220, "mandatoryloc": 220, "zonelist": 220, "excludedloc": 220, "minparam": 220, "minval": [220, 320, 412], "maxparam": 220, "maxval": [220, 312, 320], "findmani": [220, 225], "coord": [220, 285, 286, 289, 364, 489, 492, 494], "exacttyp": [220, 332], "acceptfirstcandidat": 220, "blocklevelmax": [220, 492], "findfromsfp": 220, "maxnumassem": 220, "circularringflag": 220, "criterion": [220, 471], "had": [220, 345, 407, 408, 442, 487, 507], "bob": [220, 419, 452], "ye": [220, 449, 455, 492], "timetolimit": [220, 502, 503], "pick": [220, 332, 418, 447, 484, 492, 507, 513], "assembi": [220, 296], "ignit": [220, 285, 289, 334, 505, 507], "earliest": 220, "maxbu": 220, "candid": [220, 241, 312, 377, 471], "maxburnup": 220, "toggl": [220, 345, 507], "gotten": 220, "valuabl": [220, 456, 505], "reconsid": [220, 230], "assemlist": 220, "feed": [220, 224, 285, 289, 332, 334, 404, 484, 505, 507, 512], "discharg": [220, 221, 332, 352, 502, 507], "goingout": 220, "inter1": 220, "inter2": 220, "goingin": 220, "art": 220, "explicitrepeatshuffl": [220, 507], "casenam": 220, "oldloc": [220, 332], "newloc": [220, 332], "enrichlist": [220, 332], "assemtyp": [220, 284, 286, 319, 332], "bottom": [220, 253, 286, 289, 315, 325, 332, 337, 338, 342, 343, 345, 348, 355, 401, 437, 492, 494, 498, 499, 502, 503, 505, 507], "startingat": 220, "alreadydon": 220, "mont": [220, 246, 484], "carlo": [220, 246, 484], "fromloc": 220, "toloc": 220, "assemnam": [220, 332, 344], "loadnam": 220, "charg": [220, 221, 487, 502], "movingassemnam": 220, "loadchain": 220, "loadqueu": [220, 286], "loopchain": 220, "loadchargetyp": 220, "movement": [220, 332], "maneuv": [220, 416], "arrow": [220, 416, 480, 507], "currentcoord": 220, "oldcoord": 220, "aprev": 221, "peak": [221, 253, 264, 289, 331, 416, 454, 484, 487, 498, 503, 505, 507], "hexgrid": [221, 285, 318, 336, 341, 355, 470, 472, 489, 513], "rotateindex": [221, 336, 341], "getpincoordin": [221, 285, 289, 362, 490, 513], "linpowbypin": [221, 224, 289, 362, 503, 513], "site": [221, 224, 513], "assumpt": [221, 241, 257, 286, 289, 318, 323, 332, 487, 507, 511, 513], "plausibl": 221, "pi": [221, 286, 289, 308, 318, 444, 464, 471, 472, 474, 480, 498], "counterclockwis": [221, 289, 332, 341, 502, 503, 505], "insuffici": 221, "maxringincor": 221, "charger": 221, "jumpringfrom": 221, "jumpringto": 221, "coarsefactor": 221, "combo": [221, 295, 452], "jumpr": [221, 505, 507], "scheme": [221, 456, 507], "jump": [221, 455, 505, 507], "sublist": [221, 411], "subcas": 221, "baselist": [221, 257], "enter": [221, 306, 312, 498, 502, 507], "outermost": [221, 289], "hit": [221, 325, 356, 484], "rj": 221, "rd": 221, "ringschedul": 221, "ringwidth": 221, "getnumr": [221, 285, 332], "innermost": [221, 289, 492], "conwidth": 221, "n_pin": [223, 224, 227], "ensureblockhasspatialgrid": [223, 224], "setassemblypinburnup": [223, 224], "setassemblypinpow": [223, 224], "powerwithminvalu": [223, 224], "burnupwithmaxvalu": [223, 224], "comparemockedtoexpectedrot": [223, 224], "test_flatpowernorot": [223, 224], "test_maxburnupatcenternorot": [223, 224], "test_oppositerot": [223, 224], "test_noblockswithburnup": [223, 224], "test_mismatchpinpowersandloc": [223, 224], "test_burotationwithfreshfe": [223, 224], "test_burotationwithstationaryrot": [223, 224], "test_rotateinshufflequeu": [223, 224], "test_simpleassemblyrot": [223, 224], "test_getparammax": [223, 225], "test_findhighbu": [223, 225], "test_outag": [223, 225], "test_outageedgecas": [223, 225], "test_isassemblyinazon": [223, 225], "test_width": [223, 225], "test_findmani": [223, 225], "test_findinsfp": [223, 225], "test_findbycoord": [223, 225], "test_findwithminmax": [223, 225], "runshuffl": [223, 225], "test_repeatshuffl": [223, 225], "test_readmov": [223, 225], "test_processmovelist": [223, 225], "test_getfactorlist": [223, 225], "test_linpowbypin": [223, 225], "test_linpowbypinneutron": [223, 225], "test_linpowbypingamma": [223, 225], "test_transferstationaryblock": [223, 225], "test_transferdifferentnumberstationaryblock": [223, 225], "test_transferunalignedlocationstationaryblock": [223, 225], "test_transferincompatibleheightstationaryblock": [223, 225], "test_dischargeswap": [223, 225], "test_dischargeswapincompatiblestationaryblock": [223, 225], "test_getassembliesinr": [223, 225], "test_settingsarediscov": [223, 225], "test_buildconvergentringschedul": [223, 226], "test_buildringschedul": [223, 226], "test_maxburnuplocationfromcompon": [223, 227], "test_singlelocatorwithburnup": [223, 227], "test_maxburnuplocatorwithnoburnup": [223, 227], "test_maxburnuplocatormismatcheddata": [223, 227], "test_assemblyhaspinpow": [223, 227], "test_assemblyhaspinburnup": [223, 227], "test_maxburnupblock": [223, 227], "test_maxburnupblocknoblock": [223, 227], "test_maxburnupblocknoburnup": [223, 227], "169": [224, 227, 301, 302, 362, 507], "spatial": [224, 228, 242, 286, 289, 294, 312, 318, 333, 336, 340, 343, 352, 355, 356, 416, 449, 484, 486, 487, 490, 492, 498, 502, 503, 505, 506, 507], "pinpow": 224, "prep": [224, 230, 253], "minindex": [224, 412], "maxindex": 224, "nrotat": 224, "mrotat": 224, "suggest": [224, 345, 377, 378, 446, 507], "180": [224, 362, 480, 498], "pinpercentbu": [224, 227, 228, 504], "examin": [224, 295, 319, 332, 507], "ccw": [224, 341, 412], "latticephysicsinterfac": [225, 239, 242, 246, 256, 260, 507], "mockchooseswap": 225, "repeatshuffl": 225, "_transferstationaryblock": 225, "unalign": [225, 331], "unequ": 225, "hist": 225, "indiffer": 227, "geometr": [228, 241, 289, 290, 309, 340, 483, 484, 486, 492, 498, 507, 508, 513], "phenomena": [229, 511], "lwr": [229, 467, 471, 482, 483, 486, 487, 498, 499, 500, 507, 513], "triso": [229, 293], "degrad": 229, "fcci": [229, 505], "eros": 229, "fcmi": 229, "stress": [229, 255, 483], "gase": 229, "feedback": [229, 332, 484, 487, 503, 510], "absorb": [229, 331, 498, 503, 505], "influenc": [229, 343], "bond": [229, 238, 285, 309, 326, 334, 358, 492, 498, 503, 507], "squeez": 229, "impact": [229, 246, 286, 312], "testfuelperformanceopt": [229, 234, 235], "test_fuelperformanceplugin": [229, 234], "testfuelperformanceplugin": [229, 234, 236], "test_fuelperformanceutil": [229, 234], "testfuelperformanceutil": [229, 234, 237], "subpackag": [230, 307, 383, 445, 449, 480, 494], "hope": [230, 263, 335, 484, 495], "parameterdefinitioncollect": [231, 263, 278, 284, 285, 286, 289, 306, 307, 308, 309, 311, 312, 331, 332, 345, 347, 348, 349, 351, 358, 363, 394], "test_fuelperformanceopt": [234, 235], "test_applyfueldisplac": [234, 237], "test_gasconductivitycorrection_morph0": [234, 237], "test_gasconductivitycorrection_morph1": [234, 237], "test_gasconductivitycorrection_morph2": [234, 237], "test_gasconductivitycorrection_morph3": [234, 237], "test_gasconductivitycorrection_morph4": [234, 237], "displacementincm": 238, "radiu": [238, 289, 306, 311, 318, 332, 344, 356, 365, 472], "conserv": [238, 253, 286, 289, 309, 313, 316, 318, 319, 325, 329, 331, 356, 357, 464, 487, 489, 494, 505, 507], "buffer": [238, 293], "prime": [238, 309, 331], "tempinc": [238, 468], "poros": [238, 495], "morphologi": 238, "pore": [238, 503], "irregular": [238, 340, 507], "conservat": 238, "bauer": 238, "spheric": [238, 311, 492], "660": [238, 492], "maxwel": 238, "eucken": 238, "source1": 238, "pile": 238, "holland": 238, "407": 238, "source2": 238, "ondracek": 238, "schulz": 238, "1973": 238, "258": 238, "encompass": [239, 308], "temporarili": [239, 312, 418, 509], "untangl": 239, "dbload": [239, 284, 332, 399, 494], "intenum": 239, "frequenc": [239, 257, 260, 267, 484, 507], "c0n0": 239, "n0": 239, "fissionproductmodelset": [239, 245], "getfissionproductmodelsettingvalid": [239, 245, 247], "lumpedfissionproductcollect": [239, 245, 248], "fissionproductdefinitionfil": [239, 245, 248], "lumpedfissionproductfactori": [239, 245, 248], "isga": [239, 245, 248], "globalfluxinterfaceusingexecut": [239, 252, 253, 255], "globalfluxopt": [239, 252, 253, 255, 331], "globalfluxexecut": [239, 252, 253, 255], "globalfluxresultmapp": [239, 252, 253], "computedpar": [239, 252, 253], "calcreactionr": [239, 252, 253, 331], "setblockneutronveloc": [239, 256, 257], "latticephysicswrit": [239, 256, 261], "test_crosssectionmanag": [239, 266], "testblockcollect": [239, 266, 267], "testblockcollectionmedian": [239, 266, 267], "testblockcollectionaverag": [239, 266, 267], "testcomponentaverag": [239, 266, 267], "testblockcollectioncomponentaverag": [239, 266, 267], "testblockcollectioncomponentaverage1dcylind": [239, 266, 267], "testblockcollectionfluxweightedaverag": [239, 266, 267], "testcrosssectiongroupmanag": [239, 266, 267], "testcrosssectiongroupmanagerwithtempgroup": [239, 266, 267], "testxsnumberconvert": [239, 266, 267], "makeblock": [239, 266, 267], "test_crosssectionset": [239, 266], "testcrosssectionset": [239, 266, 268], "testxsset": [239, 266, 268], "test_crosssectiont": [239, 266], "testcrosssectiont": [239, 266, 269], "test_energygroup": [239, 266], "testenergygroup": [239, 266, 270], "test_macroxsgenerationinterfac": [239, 266], "testmacroxsgenerationinterfac": [239, 266, 271], "test_neutronicsplugin": [239, 266], "testneutronicsplugin": [239, 266, 272], "neutronicsreactortest": [239, 266, 272], "createrepresentativeblock": [239, 241], "calcavgnuclidetemperatur": [239, 241], "getweight": [239, 241], "getcandidateblock": [239, 241], "clearrepresentativeblock": [239, 241], "xstypeispregener": [239, 241], "fluxsolutionispregener": [239, 241], "createrepresentativeblocksusingexistingblock": [239, 241], "getnextavailablexstyp": [239, 241], "makecrosssectiongroup": [239, 241], "disableenvgroupupd": [239, 241], "enableenvgroupupd": [239, 241], "getnuctemperatur": [239, 241], "updatenuclidetemperatur": [239, 241], "zero_dimension": [239, 242], "one_dimensional_slab": [239, 242], "one_dimensional_cylind": [239, 242], "two_dimensional_hex": [239, 242], "getstr": [239, 242], "setdefault": [239, 242, 268], "envgroup": [239, 242, 289, 489, 503], "xsispregener": [239, 242], "fluxispregener": [239, 242], "buildmacro": [239, 262], "circular": [240, 289, 306, 308, 332, 356, 486, 487, 507], "sent": [241, 284, 452, 507], "csm": 241, "_setbugroupbound": 241, "bugroup": [241, 418, 454, 489, 498, 499, 507], "_settempgroupbound": 241, "tempgroup": [241, 242, 507], "_addxsgroupsfromblock": 241, "representativeblocklist": 241, "representativeblock": [241, 257, 258, 487], "blockthatrepresentsba": 241, "xsgm": [241, 267], "xstypelabel": 241, "xtview": [241, 319, 483, 486], "xstypenumb": 241, "allnuclidesinproblem": [241, 246, 354, 358], "validblocktyp": [241, 242], "averagebycompon": [241, 242, 267], "best": [241, 253, 313, 332, 412, 448, 451, 452, 453, 454, 456, 484, 495, 503, 507], "n_i": [241, 262, 309, 312, 331], "v_i": 241, "t_i": 241, "reflector": [241, 285, 286, 319, 334, 449, 478, 492, 497, 499], "leakag": [241, 505], "median": [241, 503, 505, 507], "accur": [241, 246, 257, 286, 312, 418, 443, 463, 486], "allnucnam": 241, "denomin": 241, "trace": [241, 242, 309, 358, 453, 499, 507], "cylindr": [241, 242, 267, 318, 463, 487], "opinion": [241, 318], "slab": 241, "forese": 241, "xsgroup": [241, 471, 478, 479, 492, 509], "originalrepresentativeblock": 241, "remain": [241, 286, 289, 312, 318, 319, 335, 343, 404, 446, 471, 484, 507], "unperturb": [241, 505], "blockcollectionbyxsgroup": 241, "modifiedreprblock": 241, "origxsidsfromnew": 241, "howmani": [241, 267], "excludedxstyp": 241, "unrepres": 241, "env": [241, 492, 497, 513], "avgnuctemperatur": 241, "arug": 241, "carri": [242, 375, 399, 442, 484], "0d": 242, "blockrepresent": [242, 268], "past": [242, 319, 345, 367, 381, 442, 449, 451, 455, 484, 494, 507], "block_collect": 242, "xsfileloc": [242, 268], "fluxfileloc": 242, "driverid": 242, "criticalbuckl": 242, "nuclidereactiondriv": 242, "externaldriv": 242, "usehomogenizedblockcomposit": 242, "numinternalr": [242, 318], "numexternalr": [242, 318, 463], "mergeintoclad": [242, 318], "mergeintofuel": [242, 318], "meshsubdivisionspercm": 242, "xsexecuteexclus": 242, "xsprioriti": 242, "xsmaxatomnumb": 242, "mindriverdens": 242, "ductheterogen": [242, 318, 463], "traceisotopethreshold": 242, "xstempisotop": 242, "subcrit": 242, "buckl": [242, 507], "gap": [242, 285, 289, 312, 326, 334, 356, 357, 463, 478, 492, 497, 498, 499, 503, 507, 513], "subregion": 242, "prioriti": [242, 321, 322, 484], "dilut": [242, 258, 507], "basi": [242, 257, 319, 342, 484, 498], "dehomogen": 242, "heterogen": [242, 267, 309, 318, 463, 507], "domin": [242, 312], "templat": [242, 315], "char": [242, 412], "conf_xsid": 242, "mutual": [242, 294, 335, 367, 484], "tune": [242, 412], "xssettingsdict": 242, "coerc": [242, 375, 381], "egrpstruc": 244, "descend": 244, "propag": [244, 376], "neutronenergyboundsinev": 244, "test_fissionproductmodel": [245, 249], "testfissionproductmodellumpedfissionproduct": [245, 249, 250], "testfissionproductmodelexplicitmc2librari": [245, 249, 250], "testfissionproductmodelexplicitmc2libraryslow": [245, 249, 250], "test_lumpedfissionproduct": [245, 249], "getdummylfpfil": [245, 249, 251], "testfissionproductdefinitionfil": [245, 249, 251], "testlumpedfissionproduct": [245, 249, 251], "testlumpedfissionproductcollect": [245, 249, 251], "testlumpedfissionproductsfromreferencefil": [245, 249, 251], "testlumpedfissionproductsexplicit": [245, 249, 251], "testmo99lfp": [245, 249, 251], "setallcomponentfissionproduct": [245, 246], "setallblocklfp": [245, 246], "getgloballumpedfissionproduct": [245, 246], "setgloballumpedfissionproduct": [245, 246], "getallfissionproductnam": [245, 246, 248], "removefissiongasesfromblock": [245, 246], "getgaseousyieldfract": [245, 248], "gettotalyield": [245, 248], "getmassfracdenom": [245, 248], "getlumpedfissionproductnam": [245, 248], "getallfissionproductnuclidebas": [245, 248], "createlfpsfromfil": [245, 248], "createsinglelfpfromfil": [245, 248], "inventori": [246, 404], "substanti": [246, 289], "lfp35": [246, 248, 302, 492], "lfp39": [246, 248, 302, 492], "lfp40": [246, 302, 492], "lfp41": [246, 302, 492], "fpmodel": [246, 507], "lfp": [246, 248, 289, 295, 309, 312], "casmo": 246, "referencefissionproduct": [246, 251], "dat": [246, 251, 507], "nuclideflag": [246, 285, 290, 295, 478, 507], "quick": [246, 253, 357, 448, 457, 482, 485, 494, 500, 507, 514], "aim": [246, 401, 484], "fpmodellibrari": [246, 507], "autoupdatenuclideflag": [246, 285, 290, 295], "vision": 246, "origen": [246, 507], "caveat": [246, 407, 455, 507], "box": [246, 284, 472], "autofil": 246, "getallnuclidebasesbylibrari": [246, 285, 290, 295], "setlumpedfissionproduct": [246, 285, 306, 309, 312], "isotopicdeplet": [246, 293, 489], "depletioninterfac": 246, "buildfissionproduct": 246, "getlumpedfissionproductcollect": [246, 248, 285, 289, 306, 309, 312], "fp": [248, 250, 251], "yld": 248, "fpd": 248, "eu151": 248, "9773e": 248, "objectwithparentdens": 248, "densfunc": 248, "fpdensiti": 248, "oldmassfrac": 248, "ge73": 248, "9000e": 248, "ge74": 248, "4000e": 248, "ge76": 248, "6000e": 248, "as75": 248, "lfpcompositionfilepath": [248, 507], "test_loadgloballfpsfromfil": [249, 250], "test_getallfissionproductnam": [249, 250, 251], "test_fpappl": [249, 250], "test_nuclideflag": [249, 250, 297, 300], "test_nuclidesinmodelfuel": [249, 250], "test_nuclidesinmodelalldepletableblock": [249, 250], "test_createlfp": [249, 251], "test_createreferencelfp": [249, 251], "test_getyield": [249, 251], "test_gaseousyieldfract": [249, 251], "test_isga": [249, 251], "test_getallfissionproductnuclidebas": [249, 251], "test_getnumberdens": [249, 251, 354, 356, 357, 358], "test_getmassfrac": [249, 251], "test_fissionproductyield": [249, 251], "test_explicitfissionproduct": [249, 251], "faster": [250, 289, 290, 312, 317, 332, 345, 364], "slower": [250, 497, 507], "lumpedfissionproduc": 251, "explicitfissionproduct": [251, 487, 507], "mo99": [251, 507], "test_globalfluxinterfac": [252, 254], "mockcoreparam": [252, 254, 255], "mockglobalfluxinterfac": [252, 254, 255], "mockglobalfluxwithexecut": [252, 254, 255], "mockglobalfluxwithexecutersnonuniform": [252, 254, 255], "mockglobalfluxexecut": [252, 254, 255], "testglobalfluxopt": [252, 254, 255], "testglobalfluxinterfac": [252, 254, 255], "testglobalfluxinterfacewithexecut": [252, 254, 255], "testglobalfluxinterfacewithexecutersnonuniform": [252, 254, 255], "testglobalfluxresultmapp": [252, 254, 255], "testglobalfluxutil": [252, 254, 255], "applydummyflux": [252, 254, 255], "checkenergybal": [252, 253], "getiofilenam": [252, 253], "calculatekeff": [252, 253], "getoptionscl": [252, 253], "getexecutercl": [252, 253, 254, 255], "getexecuteropt": [252, 253, 254, 255], "getexecut": [252, 253], "getlabel": [252, 253, 336, 340, 341], "edgeassembliesareneed": [252, 253], "getkeff": [252, 253], "clearflux": [252, 253], "getdpax": [252, 253], "getburnuppeakingfactor": [252, 253], "updatedpar": [252, 253], "updatemaxdpaparam": [252, 253], "versu": [253, 489], "tightli": [253, 505, 513], "coupledit": 253, "additionallabel": 253, "stdname": 253, "eigenvalu": [253, 331, 505, 507], "interoper": 253, "myriad": 253, "blank": [253, 376, 401, 456, 498, 503], "calc": [253, 255, 331, 357, 413], "calcreactionratesonmeshconvers": 253, "recalcul": [253, 289, 331], "remap": [253, 331], "eigenvalueproblem": 253, "includefixedsourc": 253, "eig": 253, "fredholm": 253, "satisfi": [253, 284, 312, 335, 336, 483], "uniform": [253, 255, 286, 289, 290, 294, 308, 316, 319, 320, 325, 330, 331, 332, 343, 348, 468, 486, 487, 503, 505, 507], "aclpdoselimit": [253, 507], "detailedaxialexpans": [253, 316, 325, 330, 331, 332, 345, 348, 396, 487, 507], "dpaperflu": [253, 503, 507], "dirti": [253, 507], "dpapeak": [253, 507], "fastfluencepeak": [253, 503, 507], "energydepocalcmethodstep": 253, "epseigenvalu": 253, "epsfissionsourceavg": 253, "epsfissionsourcepoint": 253, "rz": [253, 285, 286, 319, 328, 335, 365, 461, 465, 482, 484, 486, 500], "rzt": [253, 285, 319, 332, 335, 336, 343, 365], "hasnonuniformassem": 253, "isrestart": 253, "guess": [253, 412, 442, 507], "kernelnam": 253, "loadpadelev": [253, 507], "elev": [253, 286, 416, 499, 502, 507], "aclp": [253, 285, 325, 334, 505, 507], "plate": [253, 286, 332, 336, 483, 494, 498, 505, 507], "loadpadlength": [253, 507], "maxout": 253, "savephysicsfileslist": 253, "timestamp": [253, 507], "xskernel": [253, 507], "pn": 253, "edg": [253, 289, 312, 319, 325, 327, 331, 332, 345, 347, 348, 364, 397, 401, 437, 484, 490, 503, 507], "unifi": [253, 325, 343], "pipe": [253, 368, 494], "delta": [253, 364, 494, 495, 502, 503, 511], "burnuppeakingfactor": [253, 507], "avg": [253, 332, 412, 494, 505, 507], "updatefluenceanddpa": 253, "mgflux": [253, 263, 289, 312, 331, 470, 492, 494, 503], "dpax": 253, "incur": 253, "exposur": 253, "convolut": 253, "dpapersecond": 253, "nusigf": 253, "test_readfromset": [254, 255], "test_readfromreactor": [254, 255], "test_savephysicsfil": [254, 255], "test_computedpar": [254, 255], "test_interact": [254, 255], "test_getiofilenam": [254, 255], "test_gethistoryparam": [254, 255], "test_checkenergybal": [254, 255], "test_executerinteract": [254, 255], "test_calculatekeff": [254, 255], "test_getexecutercl": [254, 255], "test_settightcouplingdefault": [254, 255], "test_gettightcouplingvalu": [254, 255], "test_executerinteractionnonuniformassem": [254, 255], "test_mapp": [254, 255], "test_getdpax": [254, 255], "test_getburnuppeakingfactor": [254, 255], "test_getburnuppeakingfactorzero": [254, 255], "test_calcreactionr": [254, 255], "fake": [255, 325, 396, 492, 513], "gf": 255, "pcm": [255, 505, 507], "reli": [255, 306, 317, 340, 343, 470, 499], "swing": [255, 505], "observ": 255, "mockgeometrytransform": 255, "mockexecut": 255, "mockconverterfactori": 255, "broad": [255, 257, 487, 494, 507, 509], "test_latticeinterfac": [256, 259], "latticeinterfacetest": [256, 259, 260], "latticeinterfacetesterlibfals": [256, 259, 260], "testlatticephysicsinterfacebas": [256, 259, 260], "testlatticephysicsinterfac": [256, 259, 260], "testlatticephysicslibrarycr": [256, 259, 260], "test_latticewrit": [256, 259], "fakelatticephysicswrit": [256, 259, 261], "testlatticephysicswrit": [256, 259, 261], "updatexslibrari": [256, 257], "readexistingxslibrari": [256, 257, 259, 260], "makecyclexsfilesasbasefil": [256, 257], "clearx": [256, 257, 507], "computecrosssect": [256, 257], "generatelatticephysicsinput": [256, 257], "getwrit": [256, 257], "getread": [256, 257], "getrepresentativeblock": [256, 257], "unused_categori": [256, 258], "fuel_categori": [256, 258], "structure_categori": [256, 258], "coolant_categori": [256, 258], "fission_product_categori": [256, 258], "undeplet": [256, 258], "inf_dilut": [256, 258], "neutronveloc": 257, "mgneutronveloc": [257, 503], "genx": [257, 498, 499, 507], "runlatticephysicsbeforeshuffl": 257, "weather": 257, "regener": [257, 332, 499, 507], "_is_": 257, "reson": 257, "lifetim": [257, 505, 510], "forceseri": 257, "book": [257, 456], "xswriter": 257, "bc": 257, "returnedfromwrit": 257, "agent": 257, "cyclic": [257, 406, 505], "seek": 258, "generateexclusivegammax": 258, "inf": [258, 496, 510], "test_includegammax": [259, 260], "test_latticephysicsinterfac": [259, 260], "test_interacteverynodewhencoupl": [259, 260], "test_interacteverynodewhencoupledbutnot": [259, 260], "test_interacteverynodefirstcoupl": [259, 260], "test_interacteverynodeal": [259, 260], "test_interactfirstcouplediter": [259, 260, 266, 267], "test_interactal": [259, 260], "test_getsuffix": [259, 260], "test_libcreation_nogenx": [259, 260], "test_libcreation_genx": [259, 260], "test_libcreation_nogenxs_2": [259, 260], "test_libcreation_genxs_2": [259, 260], "test_libcreation_genxs_3": [259, 260], "test_setblockneutronveloc": [259, 261], "test_latticephysicswrit": [259, 261], "test_writetitl": [259, 261], "test_issourcedriven": [259, 261], "test_isgammaxsgenerationen": [259, 261], "test_getallnuclidesbytemperatureincnon": [259, 261], "test_getallnuclidesbytemperatureinc": [259, 261], "test_getallnuclidesbytemperatureincexplicitfissionproduct": [259, 261], "test_getavgnuclidetemperatureinc": [259, 261], "test_getfueltemperatur": [259, 261], "test_getdetailedfissionproduct": [259, 261], "test_getdetailedfissionproductspass": [259, 261], "test_getdetailedfpdens": [259, 261], "test_iscriticalbucklingsearchact": [259, 261], "test_getdriverblock": [259, 261], "_newlibraryshouldbecr": 260, "flip": 260, "testverif": 260, "gen": [260, 267], "sigma_i": 262, "interactxyz": 262, "macroxsgen": 262, "blistsom": 262, "gxg": 262, "fluxrecon": [262, 507], "computepinmgfluxandpow": 262, "denot": [264, 454], "addtion": 264, "subsectionhead": 264, "areal": [264, 505, 509], "test_add": [266, 267, 354, 355, 356, 359, 364], "test_getblocksingroup": [266, 267], "test_is_pickl": [266, 267], "test_createrepresentativeblock": [266, 267], "test_getblocknuclidetemperatur": [266, 267], "test_performaveragebycompon": [266, 267], "test_checkblocksimilar": [266, 267], "test_createrepresentativeblockdissimilar": [266, 267], "test_getaveragecomponentnumberdens": [266, 267], "test_getaveragecomponenttemperatur": [266, 267], "test_getaveragecomponenttemperaturevariedweight": [266, 267], "test_getaveragecomponenttemperaturenomass": [266, 267], "test_componentaveragerepblock": [266, 267], "test_componentaverage1dcylind": [266, 267], "test_componentaverageducthet1dcylind": [266, 267], "test_checkcomponentconsist": [266, 267], "test_invalidweight": [266, 267], "test_enableenvgroupupd": [266, 267], "test_disableenvgroupupd": [266, 267], "test_updateburnupgroup": [266, 267], "test_setbugroupbound": [266, 267], "test_settempgroupbound": [266, 267], "test_addxsgroupsfromblock": [266, 267], "test_calcweightedburnup": [266, 267], "test_getnextavailablexstyp": [266, 267], "test_getrepresentativeblock": [266, 267], "test_createrepresentativeblocksusingexistingblock": [266, 267], "test_createrepresentativeblocksusingexistingblocksdisablevalidblocktyp": [266, 267], "test_interactallcoupl": [266, 267], "test_xsgmisrunbeforex": [266, 267], "test_copypregeneratedfil": [266, 267], "test_updateenvironmentgroup": [266, 267], "test_convers": [266, 267], "test_conversion_2digit": [266, 267], "test_crosssect": [266, 268], "test_pregeneratedcrosssect": [266, 268], "test_pregeneratedfluxinput": [266, 268], "test_priorit": [266, 268], "test_homogeneousxsdefaultsettingassign": [266, 268], "test_setdefaultsettingsbylowestenvgrouphomogen": [266, 268], "test_setdefaultsettingsbylowestenvgrouponedimension": [266, 268], "test_optionalkei": [266, 268], "test_badcrosssect": [266, 268], "test_yamlio": [266, 268, 354, 361], "test_caseset": [266, 268], "test_csblockrepresent": [266, 268], "test_csblockrepresentationfileloc": [266, 268], "test_xssettingssetdefault": [266, 268], "test_maket": [266, 269], "test_isotopicdepletioninterfac": [266, 269], "test_invalidgroupstructuretyp": [266, 270], "test_consistenciesbetweengroupstructureandgroupstructuretyp": [266, 270], "test_getfastfluxgroupcutoff": [266, 270], "test_macroxsgenerationinterfacebas": [266, 271], "test_customsettingobjectio": [266, 272], "test_customsettingroundtrip": [266, 272], "test_neutronicssettingsload": [266, 272], "test_kineticsparameterassign": [266, 272], "test_neutronicssettingsvalid": [266, 272], "dissimilar": [267, 319], "zppr": [267, 289, 484], "cylind": 267, "disableblocktypeexclusioninxsgener": 267, "whip": [268, 342, 486], "forth": 272, "test_runningdirectorypath": [274, 275], "test_collectinputsandoutput": [274, 275], "test_updaterundir": [274, 275], "test_runexternalexecut": [274, 275], "hydraul": [276, 278, 279, 280, 282, 289, 332, 348, 484, 487, 495, 498, 507], "test_thermalhydraulicsplugin": [276, 281], "testthermalhydraulicsplugin": [276, 281, 282], "concern": [279, 507], "test_thermalhydraulicssettingsload": [281, 282], "test_thermalhydraulicssettingsset": [281, 282], "stock": 283, "pluggi": [283, 284, 451], "featur": [283, 284, 290, 331, 345, 376, 378, 408, 418, 424, 425, 446, 449, 451, 456, 471, 480, 484, 486, 494, 496, 498, 499, 507, 509], "mutat": [283, 381], "cheapli": 283, "altitud": 284, "subtl": 284, "exercis": 284, "forget": [284, 492, 509], "ergonom": [284, 335], "lest": 284, "endeavor": 284, "redesign": 284, "parametercollect": [284, 285, 312, 345, 348, 349, 363, 394, 490], "metaclass": [284, 309, 312, 345, 349], "stateless": [284, 451], "pluginmagag": 284, "notic": [284, 338, 451, 452, 455, 456, 498], "staticmethod": [284, 331, 343, 451, 494], "preclud": 284, "componenttyp": [284, 285, 306, 309], "registr": [284, 309, 494], "surpris": [284, 312, 334, 507], "ersatz": 284, "inter": [284, 312, 412, 437], "favor": [284, 353], "predat": 284, "pluginblockparam": 284, "createbuild": [284, 345, 348], "defparam": [284, 345, 348], "plugblkp1": 284, "pluginassemparam": 284, "plugasmp1": 284, "constraint": [284, 416, 449, 503], "alter": [284, 408, 507], "novel": 284, "blocktyp": [284, 286, 332], "largest": [284, 289, 312, 318, 401], "suspect": 284, "ceas": 284, "beyond": [284, 306, 451, 484, 492, 498], "elsewher": [284, 312, 341, 455], "elimin": [284, 345, 484, 486], "altogeth": [284, 507], "resolutionmethod": 284, "unbound": 284, "enhanc": [284, 450, 484], "t1671": 284, "misbehav": 284, "declar": [284, 312, 316, 507], "member": [284, 312, 400, 412, 456], "widget": [284, 376], "tab": [284, 419, 449, 492], "widgetdata": 284, "submitt": 284, "abstracttab": 284, "addsectionsfromplugin": 284, "mcnpaddtal": 284, "usesrctp": 284, "frustrat": 284, "rule": [284, 335, 348, 349, 368, 377, 378, 451, 455, 456, 507], "intact": 284, "collid": [284, 345, 386], "superoldparam": 284, "oldparam": 284, "currentparam": 284, "newer": [284, 351, 415, 485, 514], "arguabl": 284, "suboptim": 284, "axialexpansionchang": [284, 285, 309, 313, 325, 396, 490], "negat": [284, 341], "encourag": [284, 448], "tryfirst": 284, "hookimpl": [284, 451, 494], "invoc": [284, 447], "changer": [284, 289, 319, 327, 396, 406, 425, 486, 487, 507], "myplugin": [284, 507], "myproject": 284, "bespokeaxialexpans": 284, "mod": [284, 446, 499], "adapt": [284, 296, 451], "stapl": 284, "programm": [284, 507], "improperli": [284, 345], "collis": [284, 427], "hous": [285, 492], "constructassem": [285, 290, 325], "adddefaultsfp": [285, 290], "assemblyblueprint": [285, 290, 478, 490], "bycomponentmodif": [285, 290, 291], "assemblykeyedlist": [285, 290, 291, 478], "blockblueprint": [285, 290, 293, 478], "blockkeyedlist": [285, 290, 292, 478], "componentblueprint": [285, 290, 292, 300, 301, 478], "componentdimens": [285, 290, 293], "expandelement": [285, 290, 293], "insertdepletablenuclidekei": [285, 290, 293, 300], "componentkeyedlist": [285, 290, 293], "groupedcompon": [285, 290, 293], "componentgroup": [285, 290, 293], "gridblueprint": [285, 290, 296, 353, 478], "triplet": [285, 289, 290, 294, 478], "savetostream": [285, 290, 294], "getdefaultnuclideflag": [285, 290, 295], "eleexpandinfobasedoncodeendf": [285, 290, 295], "gendefaultnucflag": [285, 290, 295, 478], "reactorblueprint": [285, 290, 353, 478], "systemblueprint": [285, 290, 296, 478], "summarizematerialdata": [285, 290, 296, 490], "getboundingcircleouterdiamet": [285, 306, 307, 308, 309, 311, 312, 315, 354, 358], "getdimens": [285, 289, 306, 309, 508, 513], "dimension_nam": [285, 306, 307, 308, 309, 311], "init_signatur": [285, 306, 307, 308, 309, 311], "pdef": [285, 286, 289, 306, 307, 308, 309, 311, 312, 332, 345, 347, 349, 351, 354, 358, 363, 383, 394], "getcomponentarea": [285, 306, 307, 308, 309, 311], "fromcompon": [285, 306], "is3d": [285, 306, 307, 308, 309, 311], "getcomponentvolum": [285, 306, 309, 311], "setvolum": [285, 306, 309], "computevolum": [285, 306, 309, 357], "getmaxvolum": [285, 306, 489], "basicshap": [285, 289, 306], "circl": [285, 289, 302, 306, 307, 308, 309, 310, 311, 312, 315, 318, 357, 358, 416, 468, 470, 478, 483, 492, 498, 499, 507, 513], "rectangl": [285, 289, 306, 307, 308, 309, 310, 338, 343, 357, 480, 486, 507], "solidrectangl": [285, 306, 307, 357, 507], "squar": [285, 306, 307, 308, 332, 336, 356, 357, 469, 473, 480, 486, 499, 507], "complexshap": [285, 306, 487], "holedhexagon": [285, 306, 308, 310, 357, 507], "hexholedcircl": [285, 306, 308, 310, 357, 507], "holedrectangl": [285, 306, 308, 310, 357, 507], "holedsquar": [285, 306, 308, 357, 507], "helix": [285, 306, 308, 310, 312, 357, 478, 483, 487, 492, 498, 507], "componenttypeisvalid": [285, 306, 309], "shapedcompon": [285, 306, 307, 308, 309, 311, 507], "componentparamet": [285, 306], "getcomponentparameterdefinit": [285, 306, 310], "getcircleparameterdefinit": [285, 306, 310], "gethexagonparameterdefinit": [285, 306, 310], "getholedhexagonparameterdefinit": [285, 306, 310], "gethexholedcircleparameterdefinit": [285, 306, 310], "getholedrectangleparameterdefinit": [285, 306, 310], "gethelixparameterdefinit": [285, 306, 310], "getrectangleparameterdefinit": [285, 306, 310], "getcubeparameterdefinit": [285, 306, 310], "gettriangleparameterdefinit": [285, 306, 310], "getunshapedparameterdefinit": [285, 306, 310], "getradialsegmentparameterdefinit": [285, 306, 310], "volumetricshap": [285, 306], "sphere": [285, 300, 306, 311, 357, 365, 507], "cube": [285, 306, 310, 311, 357, 507], "radialseg": [285, 306, 310, 311, 357, 507], "differentialradialseg": [285, 289, 306, 311, 357, 507], "parametersweep": [285, 313], "blockconvert": [285, 313, 463], "componentmerg": [285, 313, 318], "multiplecomponentmerg": [285, 313, 318], "blockavgtocylconvert": [285, 313, 318], "hexcomponentstocylconvert": [285, 313, 318, 463], "getouterdiamfromidandarea": [285, 313, 318], "radiifromhexpitch": [285, 313, 318], "radiifromhexsid": [285, 313, 318], "radiifromringofrod": [285, 313, 318], "stripcompon": [285, 313, 318], "geometryconvert": [285, 289, 313, 322, 331, 332, 464], "geometrychang": [285, 313, 319], "fuelassemnummodifi": [285, 313, 319], "hextorzthetaconvert": [285, 313, 319], "hextorzconvert": [285, 313, 319, 327, 464], "thirdcorehextofullcorechang": [285, 313, 319], "edgeassemblychang": [285, 289, 313, 319, 492], "meshconvert": [285, 313, 319], "rzthetareactormeshconvert": [285, 313, 320], "rzthetareactormeshconverterbyringcompositionaxialbin": [285, 313, 320], "rzthetareactormeshconverterbyringcompositionaxialcoordin": [285, 313, 320], "rzthetareactormeshconverterbyringcompositionaxialflag": [285, 313, 320], "checklastvalueinlist": [285, 313, 320], "checklistbound": [285, 313, 320], "generatebin": [285, 313, 320], "pintypeblockconvert": [285, 313], "adjustsmeardens": [285, 313, 323], "adjustcladthicknessbyod": [285, 313, 323], "adjustcladthicknessbyid": [285, 313, 323], "uniformmesh": [285, 289, 313, 316, 487], "converterfactori": [285, 313, 331], "uniformmeshgener": [285, 313, 331], "uniformmeshgeometryconvert": [285, 289, 296, 313, 331, 487], "neutronicsuniformmeshconvert": [285, 313, 331], "gammauniformmeshconvert": [285, 313, 331], "parammapp": [285, 313, 331], "setnumberdensitiesfromoverlap": [285, 313, 331], "axialgrid": [285, 336, 337, 470], "cartesiangrid": [285, 318, 336, 338, 473, 486], "locationbas": [285, 312, 333, 336, 337, 340, 342, 352], "multiindexloc": [285, 289, 294, 336, 342, 513], "coordinateloc": [285, 336, 342, 513], "addingisvalid": [285, 336, 342], "structuredgrid": [285, 336, 337, 338, 341, 344, 488, 489], "gridparamet": [285, 336, 343], "thetarz": [285, 286, 289, 336, 343, 356], "thetarzgrid": [285, 320, 336, 344, 474], "parameterdefinitionerror": [285, 345, 346], "parametererror": [285, 345, 346], "unknownparametererror": [285, 345, 346], "global_serial_num": [285, 345, 347], "collectpluginparamet": [285, 345, 347], "applyallparamet": [285, 345, 347], "parameterdefinit": [285, 286, 289, 306, 307, 308, 309, 311, 312, 332, 345, 347, 351, 358, 363, 394], "paramloc": [285, 289, 345, 347, 348, 513], "nodefault": [285, 345, 348], "isnumpyarrai": [285, 345, 348], "isnumpyf32arrai": [285, 345, 348], "parameterbuild": [285, 345, 348, 363, 394], "resolvecollect": [285, 345], "resolveparametersmeta": [285, 312, 345, 347, 349], "test_assembli": [285, 354], "buildtestassembli": [285, 354, 355], "materialinassembly_testcas": [285, 354, 355], "maketestassembli": [285, 354, 355], "assembly_testcas": [285, 354, 355], "assemblyinreactor_testcas": [285, 354, 355], "annularfueltestcas": [285, 354, 355], "test_block": [285, 312, 354, 366, 468], "buildsimplefuelblock": [285, 354, 356, 468], "loadtestblock": [285, 354, 356], "applydummydata": [285, 354, 356], "getcomponentdata": [285, 354, 356], "testdetailedndensupd": [285, 354, 356], "block_testcas": [285, 312, 354, 356], "blockinputheightstest": [285, 354, 356], "blockenergydepositionconst": [285, 354, 356], "testnegativevolum": [285, 354, 356], "hexblock_testcas": [285, 354, 356], "testhexblockorient": [285, 354, 356], "thrzblock_testcas": [285, 354, 356], "cartesianblock_testcas": [285, 354, 356], "massconservationtest": [285, 313, 324, 329, 354, 356], "test_compon": [285, 297, 300, 354], "testcomponentfactori": [285, 354, 357], "testgeneralcompon": [285, 354, 357], "testcompon": [285, 354, 357], "testnullcompon": [285, 354, 357], "testunshapedcompon": [285, 354, 357], "testshapedcompon": [285, 354, 357], "testderivedshap": [285, 354, 357], "testderivedshapegetarea": [285, 354, 357], "testcircl": [285, 354, 357], "testcomponentexpans": [285, 354, 357], "testtriangl": [285, 354, 357, 400, 420, 439], "testrectangl": [285, 354, 357], "testsolidrectangl": [285, 354, 357], "testsquar": [285, 354, 357], "testcub": [285, 354, 357], "testhexagon": [285, 354, 357, 400, 420, 428], "testholedhexagon": [285, 354, 357], "testhexholedcircl": [285, 354, 357], "testholedrectangl": [285, 354, 357], "testholedsquar": [285, 354, 357], "testhelix": [285, 354, 357], "testspher": [285, 354, 357], "testradialseg": [285, 354, 357], "testdifferentialradialseg": [285, 354, 357], "testmaterialadjust": [285, 354, 357], "testpinquant": [285, 354, 357], "test_composit": [285, 354], "mockbp": [285, 354, 358], "getdummyparamdef": [285, 354, 358], "dummycomposit": [285, 354, 358], "dummyleaf": [285, 354, 358], "testcompositepattern": [285, 354, 358], "testcompositetre": [285, 354, 358], "testflagseri": [285, 354, 358], "testmiscmethod": [285, 354, 358], "testgetreactionratedict": [285, 354, 358], "test_excorestructur": [285, 297, 305, 354], "testexcorestructur": [285, 354, 359], "testspentfuelpool": [285, 354, 359], "testexcorecollect": [285, 354, 359], "test_flag": [285, 354, 400, 420], "testflag": [285, 354, 360, 400, 420, 427], "test_geometri": [285, 354], "testgeomtyp": [285, 354, 361], "testsymmetrytyp": [285, 354, 361], "testsystemlayoutinput": [285, 354, 361], "testsystemlayoutinputtrz": [285, 354, 361], "test_hexblockrot": [285, 354], "hexblockrotatetest": [285, 354, 362], "emptyblockrotatetest": [285, 354, 362], "test_paramet": [285, 354], "mockcomposit": [285, 354, 363], "mockcompositegrandpar": [285, 354, 363], "mockcompositepar": [285, 354, 363], "mockcompositechild": [285, 354, 363], "parametertest": [285, 354, 363], "paramcollectionwher": [285, 354, 363], "testmakeparametersreadonli": [285, 354, 363], "test_reactor": [285, 354, 462, 463, 464, 471, 479], "buildoperatorofemptyhexblock": [285, 354, 364], "buildoperatorofemptycartesianblock": [285, 354, 364], "reducetestreactor": [285, 354, 364], "reactortest": [285, 354, 364], "hexreactortest": [285, 354, 364], "cartesianreactorneighbortest": [285, 354, 364], "test_rz_reactor": [285, 354], "testrztreactor": [285, 354, 365], "testrztreactormodern": [285, 354, 365], "test_zon": [285, 354], "testzon": [285, 354, 366], "load_queu": [285, 286], "spent_fuel_pool": [285, 286], "not_in_cor": [285, 286], "renameblocksaccordingtoassemblynum": [285, 286], "makenamefromassemnum": [285, 286], "renumb": [285, 286, 332, 351, 352], "makeuniqu": [285, 286], "moveto": [285, 286, 312], "scaleparamstonewsymmetryfactor": [285, 286], "getnum": [285, 286], "getloc": [285, 286, 289, 290, 294, 492], "getarea": [285, 286, 289, 306, 309, 312, 357, 490, 504], "getpinplenumvolumeincubicmet": [285, 286], "getaverageplenumtemperatur": [285, 286], "adjustresolut": [285, 286], "getaxialmesh": [285, 286, 332, 487], "calculatezcoord": [285, 286, 289], "gettotalheight": [285, 286], "getheight": [285, 286, 289, 492], "getreactiveheight": [285, 286], "getelevationboundariesbyblocktyp": [285, 286], "getelevationsmatchingparamvalu": [285, 286], "getag": [285, 286], "makeaxialsnaplist": [285, 286, 503], "setblockmesh": [285, 286, 489, 503], "setblockheight": [285, 286], "getblock": [285, 286, 289, 332, 452, 462, 463, 471, 479, 492, 494], "getblocksandz": [285, 286], "hascontinuouscoolantchannel": [285, 286], "getfirstblock": [285, 286, 332, 470, 492, 499, 508], "getfirstblockbytyp": [285, 286], "getblockatelev": [285, 286], "getbindexfromzindex": [285, 286], "getblocksbetweenelev": [285, 286], "getparamvaluesatz": [285, 286], "getparamofzfunct": [285, 286], "reestablishblockord": [285, 286], "countblockswithflag": [285, 286, 332], "getdim": [285, 286, 289], "getsymmetryfactor": [285, 286, 289, 312, 319, 356, 364, 492, 494], "isonwhichsymmetrylin": [285, 286, 489], "orientblock": [285, 286], "radialout": [285, 286, 289], "radialinn": [285, 286, 289], "thetaout": [285, 286, 289], "thetainn": [285, 286, 289], "uniqid": [285, 289], "pitch_dimens": [285, 289], "pitch_component_typ": [285, 289], "createhomogenizedcopi": [285, 289], "makenam": [285, 289], "getsmeardens": [285, 289], "autocreatespatialgrid": [285, 289, 513], "getmgflux": [285, 289, 312], "setpinmgflux": [285, 289], "setheight": [285, 289], "getwettedperimet": [285, 289, 487], "getflowareaperpin": [285, 289], "gethydraulicdiamet": [285, 289], "adjustuenrich": [285, 289], "setbulimitinfo": [285, 289], "getmaxarea": [285, 289, 312], "adjustdens": [285, 289], "completeinitialload": [285, 289, 323], "setb10volparam": [285, 289], "replaceblockwithblock": [285, 289, 356], "plotflux": [285, 289], "removeal": [285, 289, 312], "getcomponentsthatarelinkedto": [285, 289], "getcomponentsinlinkedord": [285, 289], "getsortedcomponentsinsideofcompon": [285, 289], "getnumpin": [285, 289, 487, 513], "mergewithblock": [285, 289], "getcomponentareafrac": [285, 289], "verifyblockdim": [285, 289], "getpincenterflattoflat": [285, 289], "getwirewrapcladgap": [285, 289], "getplenumpin": [285, 289], "isplenumpin": [285, 289], "getpitch": [285, 289], "haspinpitch": [285, 289], "getpinpitch": [285, 289, 513], "getlargestcompon": [285, 289], "setpitch": [285, 289], "getmfp": [285, 289], "setareafractionsreport": [285, 289], "updatecomponentdim": [285, 289, 311], "getintegratedmgflux": [285, 289, 306, 309, 312], "setaxialexptargetcomp": [285, 289], "getpinloc": [285, 289, 513], "gettotalenergygenerationconst": [285, 289, 489], "getfissionenergygenerationconst": [285, 289, 489], "getcaptureenergygenerationconst": [285, 289, 489], "getneutronenergydepositionconst": [285, 289, 489], "getgammaenergydepositionconst": [285, 289, 489], "getboronmassenrich": [285, 289, 489], "geturaniummassenrich": [285, 289, 489], "getinputheight": [285, 289, 490], "getductip": [285, 289], "getductop": [285, 289], "initializepinloc": [285, 289], "setpinpow": [285, 289], "getpintoductgap": [285, 289], "getrotationnum": [285, 289], "setrotationnum": [285, 289], "getflowarea": [285, 289], "axialinn": [285, 289], "axialout": [285, 289], "copyparamsfrom": [285, 312], "updateparamsfrom": [285, 312], "getcompon": [285, 312, 334, 468, 494, 499, 508], "itercompon": [285, 306, 309, 312, 354, 358], "dochildrenhaveflag": [285, 312], "containsatleastonechildwithflag": [285, 312], "containsonlychildrenwithflag": [285, 312], "copyparamstochildren": [285, 312], "getparametercollect": [285, 312], "getparamnam": [285, 312], "setnam": [285, 306, 309, 312], "hasflag": [285, 286, 312, 334], "gettyp": [285, 312, 492, 498], "settyp": [285, 312, 470], "getvolumefract": [285, 309, 312, 356, 468], "getmass": [285, 306, 309, 312, 358, 492], "getchildrenwithnuclid": [285, 312], "getancestor": [285, 312], "getancestoranddist": [285, 312], "getancestorwithflag": [285, 312], "gettotalnden": [285, 312], "updatenumberdens": [285, 306, 309, 312], "changendensbyfactor": [285, 312], "clearnumberdens": [285, 312], "getnumberofatom": [285, 312], "setchildrenlumpedfissionproduct": [285, 312], "getfissilemassenrich": [285, 312], "geturaniumnumenrich": [285, 312], "calctotalparam": [285, 312, 494], "calcavgparam": [285, 312], "getmaxparam": [285, 312, 358, 471, 484, 498], "getminparam": [285, 312, 358], "getchildparamvalu": [285, 312, 492], "isfuel": [285, 312, 492, 494], "containsheavymet": [285, 312], "getfissilemass": [285, 312, 492], "gethmmass": [285, 312, 464], "gethmmol": [285, 312, 356], "gethmden": [285, 312], "getfuelmass": [285, 306, 309, 312, 358], "constituentreport": [285, 312], "removemass": [285, 312], "addmass": [285, 312], "setmass": [285, 312, 404], "getboundingindic": [285, 312], "getcomponentnam": [285, 312], "getcomponentsofshap": [285, 312], "getcomponentsofmateri": [285, 312], "hascompon": [285, 312], "getcomponentbynam": [285, 312], "getnumcompon": [285, 312], "setcomponentdimensionsreport": [285, 312], "expandallelementalstoisotop": [285, 312], "expandelementaltoisotop": [285, 312, 470], "getaveragetempinc": [285, 312], "resolvelinkeddim": [285, 306, 309, 312, 357], "setchildren": [285, 312], "getchildrenoftyp": [285, 312], "syncmpist": [285, 312, 347, 360, 452], "retainst": [285, 312, 343, 347, 356], "getlumpedfissionproductsifnecessari": [285, 312], "requireslumpedfissionproduct": [285, 312], "getreactionr": [285, 312, 470, 487, 489], "printcont": [285, 306, 309, 312, 492], "getpumol": [285, 312, 356, 489, 490], "setoptionsfromc": [285, 332, 470], "powermultipli": [285, 332, 502], "isfullcor": [285, 332], "refassem": [285, 286, 332, 487], "sortassemsbyr": [285, 332, 487, 492], "summarizereactorstat": [285, 332], "setpowerfromdens": [285, 332], "setpowerifnecessari": [285, 332], "setblockmassparam": [285, 332], "getscalarevolut": [285, 332], "locateallassembli": [285, 332], "removeassembli": [285, 332], "removeassembliesinr": [285, 332], "normalizenam": [285, 332, 351, 352], "normalizeinternalbookeep": [285, 332], "genassembliesaddedthiscycl": [285, 332], "getnumhexr": [285, 332], "getnumassemblieswithallringsfilledout": [285, 332], "getnumenergygroup": [285, 332], "countfuelaxialblock": [285, 332], "getfirstfuelblockaxialnod": [285, 332], "getassembliesinr": [285, 332], "getmaxassembliesinhexr": [285, 332], "getassembliesinsquareorhexr": [285, 332], "getassembliesincircular": [285, 332], "buildcircularringdictionari": [285, 332], "getassemblybynam": [285, 332], "getnozzletyp": [285, 332], "getblockbynam": [285, 332], "getblocksbyindic": [285, 332], "genblocksbylocnam": [285, 332], "getfirstassembli": [285, 332], "regenassemblylist": [285, 286, 332], "getallxssuffix": [285, 332], "getnuclidecategori": [285, 332, 364], "summarizenuclidecategori": [285, 332], "getlocationcont": [285, 332], "makelocationlookup": [285, 332], "getfluxvector": [285, 332], "getassembliesoftyp": [285, 332], "getassemblywithassemnum": [285, 332], "getassemblywithstringloc": [285, 332], "getassemblypitch": [285, 332], "findneighbor": [285, 332], "setmovelist": [285, 332], "createfreshfe": [285, 332], "createassemblyoftyp": [285, 332, 498], "saveallflux": [285, 332], "getassembliesonsymmetrylin": [285, 332], "getcoreradiu": [285, 332], "findallmeshpoint": [285, 332, 364, 365], "findallaxialmeshpoint": [285, 286, 332], "updateaxialmesh": [285, 289, 316, 332], "findaxialmeshindexof": [285, 332], "addmorenod": [285, 332], "findallazimeshpoint": [285, 332], "findallradmeshpoint": [285, 332], "getmaxblockparam": [285, 332], "gettotalblockparam": [285, 332], "getmaxnumpin": [285, 332], "getminimumpercentfluxinfuel": [285, 332], "getavgtemp": [285, 332], "growtofullcor": [285, 327, 332, 353, 479, 487], "setpitchuniform": [285, 332], "calcblockmax": [285, 332], "getfuelbottomheight": [285, 332], "processload": [285, 316, 332, 487], "buildmanualzon": [285, 332], "tertiari": [285, 334], "annular": [285, 308, 309, 334, 356], "shield_block": [285, 334], "slug": [285, 334, 498], "starter": [285, 334, 494], "blanket": [285, 291, 334], "booster": [285, 332, 334], "grid_plat": [285, 325, 334, 507], "handling_socket": [285, 325, 334], "inlet_nozzl": [285, 325, 334], "liner": [285, 312, 318, 325, 326, 334, 338, 483, 484], "wire": [285, 286, 289, 308, 309, 325, 326, 332, 334, 356, 416, 478, 487, 492, 497, 498, 507, 513], "intercool": [285, 312, 318, 334, 356, 468, 478, 492, 498, 507], "load_pad": [285, 334], "skid": [285, 334, 507], "interductcool": [285, 334], "dspacerinsid": [285, 334], "guide_tub": [285, 325, 334, 499], "fission_chamb": [285, 334, 499], "core_barrel": [285, 334], "batchmassaddit": [285, 334], "poison": [285, 286, 304, 334, 507], "moveabl": [285, 334, 502], "fromstringignoreerror": [285, 334], "fromstr": [285, 334, 335], "tostr": [285, 334, 360, 490], "fromani": [285, 335], "null": [285, 335, 356, 357, 368], "full_cor": [285, 335], "third_cor": [285, 335, 470], "quarter_cor": [285, 335], "eighth_cor": [285, 335], "sixteenth_cor": [285, 335], "symmetryfactor": [285, 289, 335], "no_symmetri": [285, 335], "hassymmetri": [285, 335], "valid_symmetri": [285, 335], "createvalidsymmetrystr": [285, 335], "checkvalidsymmetri": [285, 335], "incrementassemnum": [285, 351], "root_tag": [285, 353], "readgeomfromfil": [285, 353], "readgeomfromstream": [285, 353], "togridblueprint": [285, 353], "modifyeqpath": [285, 353], "writegeom": [285, 353], "valid_typ": [285, 367], "addloc": [285, 367], "removeloc": [285, 367], "additem": [285, 367], "removeitem": [285, 367], "addzon": [285, 367], "removezon": [285, 367], "checkdupl": [285, 367], "getzoneloc": [285, 367], "getallloc": [285, 367], "findzoneitisin": [285, 367], "sortzon": [285, 367], "typ": [286, 312, 496], "assemnum": [286, 289, 332, 355, 486, 502, 503, 507], "compli": [286, 448], "newnum": 286, "impli": [286, 332, 368, 395, 410, 484, 498, 499, 507], "somewher": [286, 289, 342, 407, 416], "oldsymmetryfactor": 286, "plane": [286, 338, 341, 343, 444, 492, 507], "outlet": [286, 355, 494, 502, 503, 505, 507], "refa": 286, "zeroatfuel": 286, "zeroesatfuel": 286, "enrichthresh": 286, "zbottom": [286, 289, 503], "resid": [286, 342, 367, 503, 507, 513], "refmesh": 286, "stick": 286, "topindex": [286, 503], "snap": [286, 332], "rebusoutput": 286, "blockmesh": 286, "conservemassflag": 286, "depict": [286, 484], "slide": 286, "blockheight": 286, "returnbottomz": 286, "returntopz": 286, "zcoord": [286, 473], "blocksandcoord": 286, "bottomz": 286, "typenam": [286, 312, 419], "mergeblock": 286, "targetblock": 286, "zindex": [286, 332], "bindex": 286, "zlower": 286, "zupper": 286, "blockinfo": 286, "blockobj": 286, "overlapheightincm": 286, "block3": 286, "block2": 286, "block1": 286, "interptyp": 286, "fillvalu": [286, 419], "thoutlettemperatur": 286, "paramdefinedat": 286, "extrapol": [286, 412, 507], "spline": 286, "interp1d": 286, "nearest": [286, 332], "slinear": 286, "quadrat": 286, "cubic": [286, 341], "rough": 286, "valatz": 286, "extrapolol": 286, "nonphys": 286, "spatialgrid": [286, 289, 294, 312, 332, 338, 343, 352, 355, 356, 449, 470, 486, 492, 513], "wise": [286, 314, 315, 316, 317, 356, 419, 490, 504, 505, 507], "spatialloc": [286, 289, 294, 312, 332, 336, 341, 342, 343, 470, 471, 479, 492, 494, 499, 509, 513], "ztop": [286, 289, 503], "reorder": 286, "blocktypespec": [286, 332], "blockcount": 286, "dimnam": [286, 289], "rad": [286, 289, 318, 474], "angl": [286, 289, 307, 401, 444, 507], "radian": [286, 289, 320, 344, 412, 444, 513], "clockwis": [286, 289, 338, 341, 410, 503, 513], "parentspatialgrid": 286, "assemblyparametercollect": [286, 342], "divis": [286, 332, 484, 492], "subdivid": 286, "axialmesh": [286, 464, 487, 505], "azimuth": [286, 290, 311, 332, 344, 502], "bind": [289, 334, 347, 449, 507], "classvar": 289, "pinspatialloc": 289, "gloss": 289, "axialindex": [289, 292, 486], "inher": [289, 401, 454, 497, 510], "b0120": 289, "005": [289, 332, 486, 492, 507], "negativearea": 289, "systemspatialgrid": 289, "multiplicti": 289, "ringnumb": 289, "fastest": [289, 309, 312], "clock": [289, 503], "pinmgflux": [289, 490, 503, 513], "5th": 289, "6th": [289, 502, 503, 505], "modifiedheight": 289, "conservemass": 289, "adjustlist": 289, "bottleneck": 289, "fly": [289, 316, 341, 342, 486], "numpin": 289, "newenrich": [289, 312], "central": [289, 332, 338, 340, 370, 456, 484, 492, 499], "bisect": 289, "trisect": 289, "overhang": 289, "scaleparamsrelatedtosymmetri": [289, 313, 319], "returnmass": 289, "bolblock": [289, 323], "hm": [289, 312, 486, 503, 504], "initialload": 289, "ecpt": [289, 323], "hmden": [289, 312], "importgeom": [289, 311, 332], "_updateblockparametersafterdeplet": 289, "heighthot": 289, "initialb10componentvol": [289, 364, 503], "breplac": 289, "replacementblock": 289, "blist": [289, 416], "blist2": [289, 416], "recomputeareafract": 289, "stai": [289, 312, 316, 356, 368, 446], "linkedcomp": 289, "componentlist": 289, "otherblock": 289, "among": [289, 306, 312, 452, 484, 507, 509], "compnam": 289, "dimval": 289, "betwen": 289, "returncomp": 289, "largestcompon": 289, "updatebolparam": 289, "settingpitch": 289, "setdimens": [289, 306, 309], "034": [289, 480, 481, 492], "phi_e": 289, "mfp": 289, "mfpab": 289, "diffusionlength": 289, "thrz": [289, 311], "updatedim": [289, 306, 309, 311], "optimizationinterfac": [289, 311, 332], "modifycas": [289, 311], "tracklength": [289, 309, 312], "integratedflux": [289, 309, 312], "lfpname": [289, 309, 312], "targetcompon": 289, "centroid": [289, 332, 342, 345, 348, 443, 513], "localcoord": 289, "totalenergygenconst": 289, "fissionenergygenconst": 289, "energydepconst": 289, "attributeerror": [289, 417, 455], "umc": 289, "frequent": [289, 312, 332, 352, 401, 448, 492, 498], "determinist": [289, 507], "makeassemwithuniformmesh": [289, 313, 331], "powerkeysuffix": 289, "pinloc": [289, 487, 503], "elig": 289, "assembl": [289, 507], "pintoductgap": 289, "diameter": 289, "face": [289, 296, 341, 416, 456, 484, 487], "rotnum": 289, "contact": [289, 412, 484, 507], "spacer": [289, 498], "pinpitch": 289, "wet": [289, 356, 490], "perimet": [289, 307, 341, 356, 357, 490], "4a": 289, "minu": [289, 498, 502], "widthout": [289, 307, 308, 311, 357, 499, 507], "pertain": 290, "rigidli": 290, "adher": 290, "mymaterialmodification1": 290, "mymaterialmodification2": 290, "hotchannelfactor": [290, 502, 507], "twrpclad": [290, 507], "yamlstr": [290, 297, 302], "griddesign": [290, 478], "roundtrip": 290, "blueprintsobject": 290, "closur": 290, "irrelev": [290, 383], "inp": [290, 319, 383, 413], "textio": [290, 442], "cloader": 290, "10x": [290, 442], "roundtripload": 290, "submesh": [290, 330, 332, 487], "sophist": [290, 294, 442], "stabil": [290, 484, 507], "portion": [290, 394, 507, 513], "test_assemblyblueprint": [290, 297], "testmaterialmodif": [290, 297, 298, 304], "test_blockblueprint": [290, 297], "testgriddedblock": [290, 297, 299], "test_blueprint": [290, 297], "testblueprint": [290, 297, 300], "testblueprintsschema": [290, 297, 300], "test_componentblueprint": [290, 297], "testcomponentblueprint": [290, 297, 301], "test_customisotop": [290, 297, 300], "testcustomisotop": [290, 297, 302], "testcustomisotopics_errorcondit": [290, 297, 302], "testnuclideflagsexpans": [290, 297, 302], "test_gridblueprint": [290, 297], "testgridbproundtrip": [290, 297, 303], "testgridblueprintssect": [290, 297, 303], "testrztgridblueprint": [290, 297, 303], "test_materialmodif": [290, 297], "test_reactorblueprint": [290, 296, 297], "testreactorblueprint": [290, 297, 305], "key_typ": [290, 291, 295], "value_typ": [290, 291, 295], "getassemclass": [290, 291], "item_typ": [290, 291, 292, 293, 294, 295, 296], "byspecifi": [290, 291], "to_yaml": [290, 293], "readfromlatticemap": [290, 294], "expandtoful": [290, 294], "getmultiloc": [290, 294], "fileasactiveorinert": [290, 295], "from_yaml_key_v": [290, 295], "decoupl": [291, 487], "yamlizablestr": [291, 295], "mapattributecollect": [291, 295], "underneath": 291, "keyedlist": [291, 292, 293, 294, 295, 296], "_loadcomposit": 291, "keyedlistattributecollect": [291, 292, 293, 294, 295, 296], "axialmeshpoint": [292, 478], "materialinput": 292, "byblock": 292, "_rtd": 293, "matmod": 293, "_resolvenuclid": 293, "isotopicdepletioninterfac": 293, "isdeplet": 293, "pointer": [293, 494], "subassembli": [294, 486], "sh": [294, 498, 507], "rr": [294, 478, 498], "oc": [294, 498], "pc": [294, 480, 498], "latticemap": [294, 478], "latticedimens": 294, "gridbound": 294, "gridcont": 294, "__new__": [294, 296, 342], "setattr": [294, 296], "lazili": [294, 408, 419], "unfold": 294, "rudimentari": 294, "domain": [294, 332, 335, 340, 401, 502], "latticeid": [294, 499, 507, 513], "bluep": 294, "trymap": 294, "cobbl": 294, "regardless": [294, 312, 319, 343, 377, 437, 494, 507], "creator": 295, "o17": [295, 499, 507], "o18": [295, 404, 499], "reachabl": 295, "expandto": [295, 302, 486, 499, 507], "activeset": 295, "inertset": 295, "inert": 295, "yamlizablefloat": 295, "rtd": 295, "key_nod": 295, "val_nod": 295, "key_attr": 295, "customisotopicsnam": [295, 504], "customisotopicnam": 295, "customisoptop": 295, "infrequ": 295, "cm247": [295, 302, 492], "b11": [295, 492], "intellig": 295, "elementalstokeep": 295, "oxygen16": 295, "conf_fission_product_library_nam": 295, "proven": 296, "loadcomp": 296, "initnewreactor": [296, 313, 327, 331], "twoblockinput_correct": [297, 298], "twoblockinput_wrongmeshpoint": [297, 298], "twoblockinput_wrongheight": [297, 298], "twoblockinput_wrongxstyp": [297, 298], "twoblockinput_wrongmatmod": [297, 298], "loadcustomassembli": [297, 298], "test_checkparamconsist": [297, 298], "test_constructspatialgrid": [297, 299], "test_getlocatorsatlatticeposit": [297, 299], "test_blocklattic": [297, 299], "test_nonlatticecomponenthasrightmult": [297, 299], "test_explicitflag": [297, 299], "test_densityconsistentwithcomponentconstructor": [297, 299], "test_roundtripcompletebp": [297, 300], "test_getassemblytypebyspecifi": [297, 300], "test_specialisotopicvector": [297, 300], "test_componentdimens": [297, 300], "test_tracenuclid": [297, 300], "test_noduplicatekeysinyamlblueprint": [297, 300], "test_assemblyparamet": [297, 300], "test_nuclidesmc2v2": [297, 300], "test_nuclidesmc2v3": [297, 300], "test_merg": [297, 300], "test_cladding_invalid": [297, 300], "test_withoutblock": [297, 300], "test_toplevelcomponentinput": [297, 300], "test_componentgroupinput": [297, 300], "componentstr": [297, 301], "test_componentinitializationincompleteburnchain": [297, 301], "test_componentinitializationcontrolcustomisotop": [297, 301], "test_autodeplet": [297, 301], "test_componentinitializationamericiumcustomisotop": [297, 301], "test_componentinitializationthoriumburncustomisotop": [297, 301], "test_componentinitializationthoriumnoburncustomisotop": [297, 301], "yamlpreambl": [297, 302], "yamlgoodblock": [297, 302], "yamlbadblock": [297, 302], "yamlstringwitherror": [297, 302], "test_unmodifi": [297, 302], "test_massfractionsareappli": [297, 302], "test_densitiesappliedtononcustommateri": [297, 302], "test_customdensitylogsanderror": [297, 302], "test_numberfract": [297, 302], "test_numberdens": [297, 302], "test_numberdensitiesanchor": [297, 302], "test_expandednatur": [297, 302], "test_infdiluteareonlynatur": [297, 302], "test_densitymustbeposit": [297, 302], "test_nonconformantelementnam": [297, 302], "test_numberdensitiescannotspecifydens": [297, 302], "test_eleexpandinfobasedoncodeendf": [297, 302], "test_cont": [297, 303], "test_tinymap": [297, 303], "test_simpleread": [297, 303, 305], "test_simplereadlatticemap": [297, 303], "test_simplereadnolatticemap": [297, 303], "test_construct": [297, 303, 305, 324, 325], "test_geomfil": [297, 303], "uzrinput": [297, 304], "b4cinput": [297, 304], "loaduzrassembli": [297, 304], "loadb4cassembli": [297, 304], "test_nomaterialmodif": [297, 304], "test_u235_wt_frac_modif": [297, 304], "test_u235_wt_frac_bycomponent_modification1": [297, 304], "test_u235_wt_frac_bycomponent_modification2": [297, 304], "test_materialmodificationlength": [297, 304], "test_invalidcomponentmodif": [297, 304], "test_zrwtfracmodif": [297, 304], "test_bothu235zrwtfracmodif": [297, 304], "test_checkbycomponentmaterialinput": [297, 304], "test_filtermaterialinput": [297, 304], "test_invalidmatmodnam": [297, 304], "test_matmodsupthemro": [297, 304], "test_theoreticaldens": [297, 304], "test_materialdatasummari": [297, 305], "test_spentfuelpool": [297, 305], "assemblyinput": 298, "intermedi": [299, 507, 509], "faithfulli": [300, 331, 509], "robust": [300, 312, 356], "tip": [300, 331, 401, 451, 487, 502], "prove": [300, 304, 357, 367, 381, 399, 454, 456, 484], "mc2v3": [300, 507], "86602": [301, 302, 507], "dump2": [302, 492], "dump1": [302, 492], "pu236": [302, 492], "u236": [302, 492, 496, 507], "am243": [302, 492], "cm242": [302, 492], "cm245": [302, 492], "np238": [302, 492], "cm243": [302, 492], "cm246": [302, 492], "992742": 302, "007204": [302, 496], "000054": 302, "992650": 302, "007295": 302, "000055": 302, "u_isotop": 302, "6539102e": 302, "5254048e": 302, "7967943e": 302, "block_0": 302, "basic_fuel": 302, "block_1": 302, "block_2": 302, "block_3": 302, "block_4": 302, "block_5": 302, "block_6": 302, "overspecifi": 302, "block_7": 302, "block_8": 302, "block_9": 302, "assembly_b": 302, "assembly_c": 302, "assembly_d": 302, "unmodifi": 302, "fe54": [302, 492], "block_poison": 304, "mro": 304, "bcomp": 306, "lowercas": 306, "mergewith": [306, 307, 308, 309, 311, 504], "componentparametercollect": [306, 309], "modarea": [306, 307, 308, 311, 504, 507], "leftov": [306, 309], "othercompon": [306, 309], "freez": 306, "unshapedcomponentparametercollect": 306, "makemgfluxblock": 306, "makemassadditioncompon": 306, "circumst": [306, 309, 331, 332, 393, 408, 449, 485, 507, 513, 514], "dh": 306, "pai": [306, 507], "attent": [306, 507], "companion": [306, 494], "thermal_expansion_dim": [306, 307, 308, 309, 311], "getcircleinnerdiamet": [306, 307, 308, 309, 315, 487], "isencapsulatedbi": [306, 307], "getperimet": [306, 307], "getpitchdata": [306, 307, 309], "islatticecompon": [306, 307], "non_dimension_nam": [306, 309], "temperatureink": [306, 309], "setlink": [306, 309], "setproperti": [306, 309], "applymaterialmassfracstonumberdens": [306, 309, 316], "adjustdensityforheightexpans": [306, 309], "getheightfactor": [306, 309], "containsvoidmateri": [306, 309], "containssolidmateri": [306, 309], "setarea": [306, 309], "settemperatur": [306, 309, 468], "getmassenrich": [306, 309], "dimensionislink": [306, 309], "getdimensionnameslinkedto": [306, 309], "clearlinkedcach": [306, 309], "getlinkedcompon": [306, 309], "getthermalexpansionfactor": [306, 309], "setdimensionreport": [306, 309], "mergenuclidesinto": [306, 309], "getpinmgflux": [306, 309, 490], "finalizeloadingfromdb": [306, 309], "circleparametercollect": 307, "www3": 307, "wolframalpha": 307, "hexagonparametercollect": 307, "lengthout": [307, 308, 311, 357, 507], "lengthinn": [307, 311, 357, 507], "widthinn": [307, 311, 357, 499, 507], "rectangleparametercollect": 307, "hollow": [307, 308, 498], "lenth": 307, "triangleparametercollect": 307, "holeod": [308, 357, 507], "nhole": [308, 357, 507], "hole": [308, 357, 421, 486, 498, 507], "holedhexagonparametercollect": 308, "holeop": [308, 357, 507], "hexholedcircleparametercollect": 308, "holedrectangleparametercollect": 308, "holedsquareparametercollect": 308, "axialpitch": [308, 357, 478, 498, 507], "helixdiamet": [308, 357, 478, 498, 507], "spiral": 308, "mathworld": 308, "wolfram": 308, "climb": 308, "exterior": 308, "interior": [308, 487], "helixparametercollect": 308, "specfi": 309, "componettyp": 309, "addition": [309, 318, 452, 484, 507], "inputtemperatureinc": [309, 316, 317, 509], "othercomp": 309, "othercompkei": 309, "newhot": 309, "accommod": [309, 416, 449], "lfpcollect": [309, 312], "proport": [309, 463], "rho": [309, 312, 404], "f_n": 309, "dn": 309, "sim": 309, "nden": [309, 312, 462, 492, 503], "unlist": [309, 312], "ambigu": 309, "blend": [309, 507], "sum_i": [309, 312, 331], "a_i": [309, 312, 510], "n_a": [309, 312], "avogadro": 309, "retainlink": 309, "indirectli": [309, 404], "intersect": 309, "percentag": [309, 316, 332, 455, 503, 504], "includenuclid": [309, 312, 492], "comptomergewith": 309, "pervious": 309, "whichev": [309, 332, 449, 451, 484], "weigh": [309, 332], "ngroup": [309, 513], "doubli": [309, 355], "fetch": [309, 315, 347], "sphereparametercollect": 311, "heightout": [311, 357, 507], "heightinn": [311, 357, 507], "cuboid": 311, "centric": 311, "cubeparametercollect": 311, "inner_radiu": [311, 357, 507], "outer_radiu": [311, 357, 507], "inner_theta": [311, 507], "outer_theta": [311, 507], "283185307179586": 311, "xxxx": 311, "xxxxxxx": 311, "refvolum": 311, "refheight": 311, "radialsegmentparametercollect": 311, "radius_differenti": [311, 357, 507], "inner_axi": [311, 357, 507], "azimuthal_differenti": [311, 507], "thrzactiveheight": 311, "thrzactiveradiu": 311, "outer_axi": 311, "principl": 312, "everywher": 312, "analogi": 312, "unsaf": 312, "unexpect": [312, 455], "uint64": 312, "uint8": 312, "unsign": 312, "hood": [312, 498], "particip": [312, 486, 507], "gang": 312, "far": [312, 341, 401, 485, 494, 497, 505, 512, 514], "unstabl": [312, 486], "armiobjectparametercollect": [312, 333, 349, 352], "rapidli": [312, 484], "weak": 312, "complabel": 312, "unpickl": [312, 342, 400], "dig": 312, "__reduce__": [312, 340], "testfuel": [312, 332], "insensit": [312, 343], "typeid": 312, "bitwis": [312, 348, 408, 427], "qualifi": [312, 451, 486], "disallow": 312, "volfrac": [312, 468], "test_consistentareawithoverlappingcompon": [312, 354, 356], "insur": 312, "ai": 312, "m_i": 312, "sum_j": 312, "m_j": 312, "m_": 312, "nuclidetoadjust": 312, "elementtoadjust": 312, "nuclidetoholdconst": 312, "elementtoholdconst": 312, "5zr": 312, "oi": 312, "f1": 312, "f2": 312, "fn": 312, "caller": 312, "_distanc": 312, "ntot": 312, "unnatur": 312, "anticip": 312, "dealt": 312, "therebi": 312, "nearli": [312, 449, 486, 494, 509], "volumeintegr": [312, 332], "addsymmetricposit": 312, "calcbasedonfullobj": 312, "postion": 312, "weightingparam": 312, "volumeaverag": 312, "grandchildren": 312, "x_i": 312, "w_i": 312, "unset": 312, "returnobj": 312, "sought": 312, "magnitud": [312, 316, 343], "wholli": 312, "reduct": [312, 507], "pertin": [312, 454], "formula": [312, 331, 443, 487, 495], "mini": [312, 412], "maxi": 312, "minj": 312, "maxj": 312, "mink": 312, "maxk": 312, "shapeclass": 312, "materialnam": [312, 477], "selector": 312, "componentswiththismat": 312, "npin": [312, 503, 513], "elementalnuclid": 312, "naturalnuclid": 312, "tripl": [312, 342, 502, 503, 505], "pump": [312, 484, 499, 502, 505, 507], "apart": 312, "spatialoc": 312, "seq": [312, 411], "unari": 312, "getattr": 312, "child1": 312, "child2": 312, "child3": 312, "grandchild1": 312, "grandchild2": 312, "grandchild3": 312, "isinst": [312, 335], "synchron": [312, 347, 452], "revert": [312, 330, 376, 378, 507], "parmeterdefinit": [312, 347], "ndensiti": 312, "rxnrate": 312, "nf": 312, "compris": [312, 507], "rabc": 312, "implic": [312, 342], "unclear": 312, "__exit__": 312, "xssuffix": 312, "_label_": 312, "rxn": 312, "n3n": 312, "tediou": [313, 484], "autom": [313, 419, 451, 463, 483, 497, 507, 513], "assemblyaxiallinkag": [313, 314, 316, 396], "areaxiallylink": [313, 314, 315], "axiallink": [313, 314, 315, 325], "getdefaultreferenceassem": [313, 314, 316], "makeassemsabletosnaptouniformmesh": [313, 314, 316], "expansiondata": [313, 314, 316, 325, 383, 396], "itersolidcompon": [313, 314, 317, 325], "getsolidcompon": [313, 314, 317, 325], "generalparametersweepconvert": [313, 321], "parametersweepconvert": [313, 321, 322], "test_axialexpansionchang": [313, 324, 487], "axialexpansiontestbas": [313, 324, 325], "testaxialexpansionheight": [313, 324, 325], "testconserv": [313, 324, 325], "testmanagecoremesh": [313, 324, 325], "testexcept": [313, 324, 325], "testdeterminetargetcompon": [313, 324, 325], "testgetsolidcompon": [313, 324, 325], "testinputheightsconsideredhot": [313, 324, 325], "checkcoldblockheight": [313, 324, 325], "testcomponentlink": [313, 324, 325], "buildtestassemblywithfakemateri": [313, 324, 325], "fakemat": [313, 324, 325], "fakematexcept": [313, 324, 325], "testaxiallinkhelp": [313, 324, 325], "testblocklink": [313, 324, 325], "test_blockconvert": [313, 324], "buildsimplefuelblocknegativearea": [313, 324, 326], "testblockconvert": [313, 324, 326], "testtocircl": [313, 324, 326], "buildcontrolblockwithlinkednegativeareacompon": [313, 324, 326], "test_geometryconvert": [313, 324], "testgeometryconvert": [313, 324, 327], "testhextorzconvert": [313, 324, 327], "testedgeassemblychang": [313, 324, 327], "testthirdcorehextofullcorechang": [313, 324, 327], "test_meshconvert": [313, 324], "testrzreactormeshconvert": [313, 324, 328], "test_pintypeblockconvert": [313, 324], "testpintypeconvert": [313, 324, 329], "test_uniformmesh": [313, 324], "dummyfluxopt": [313, 324, 330], "testconverterfactori": [313, 324, 330], "testassemblyuniformmesh": [313, 324, 330], "testuniformmeshgener": [313, 324, 330], "testuniformmeshcompon": [313, 324, 330], "applynonuniformheightdistribut": [313, 324, 330], "testuniformmesh": [313, 324, 330], "testcalcreationr": [313, 324, 330], "testgammauniformmesh": [313, 324, 330], "testparamconvers": [313, 324, 330], "testuniformmeshnonuniformassemflag": [313, 324, 330], "dissolvecomponentintocompon": [313, 318], "restablishlink": [313, 318], "plotconvertedblock": [313, 318, 463], "addr": [313, 319, 327], "createhomogenizedrztblock": [313, 319], "plotconvertedreactor": [313, 319, 331, 464], "expected_input_symmetri": [313, 319], "restorepreviousgeometri": [313, 319], "addedgeassembli": [313, 319], "removeedgeassembli": [313, 319], "generatemesh": [313, 320], "writemeshdata": [313, 320], "setringstoconvert": [313, 320], "setaxialmesh": [313, 320], "setthetamesh": [313, 320], "generatecommonmesh": [313, 330, 331], "reactorparammappingcategori": [313, 331], "blockparammappingcategori": [313, 331], "applystatetoorigin": [313, 330, 331], "setassemblystatefromoverlap": [313, 331], "clearstateonassembli": [313, 331], "updatereactionr": [313, 331], "paramsett": [313, 331], "paramgett": [313, 331], "linkedblock": [314, 315], "linkedcompon": [314, 315], "getlinkedblock": [314, 315], "expandcolddimstohot": [314, 316], "performprescribedaxialexpans": [314, 316], "performthermalaxialexpans": [314, 316], "setassembli": [314, 316], "applycoldheightmassincreas": [314, 316], "axiallyexpandassembli": [314, 316], "managecoremesh": [314, 316], "componentreferencetemperatur": [314, 317], "setexpansionfactor": [314, 317], "updatecomponenttempsby1dtempfield": [314, 317], "updatecomponenttemp": [314, 317], "computethermalexpansionfactor": [314, 317], "getexpansionfactor": [314, 317], "determinetargetcompon": [314, 317, 325], "istargetcompon": [314, 317], "componenta": 315, "componentb": 315, "linkag": [315, 316, 325], "Their": [315, 513], "biggest": 315, "slight": [315, 507], "hint": [315, 487], "axialassemblylinkag": 315, "nonuniformassemflag": [316, 507], "referenceassembli": 316, "isdetailedaxialexpans": 316, "disjoint": 316, "finest": 316, "setfuel": [316, 317], "tempgrid": [316, 317, 325], "tempfield": [316, 317], "expandfromtinputtothot": [316, 317], "perfectli": [316, 392, 454], "gradient": 316, "loss": [316, 502, 503, 507], "tall": [316, 337, 498], "cheap": [316, 484], "oldmesh": 316, "_isfuellock": [317, 325], "cacul": 317, "expfrac": 317, "l1": [317, 325], "retriv": 317, "flagofinterest": 317, "axialexptargetcompon": [317, 503], "sourceblock": [318, 463], "solutenam": 318, "solventnam": 318, "minid": 318, "_sourceblock": 318, "solvent": [318, 326], "dissolv": [318, 326], "solutelink": 318, "sane": 318, "specifiedminid": 318, "_verifyexpans": 318, "farthest": 318, "driverfuelblock": [318, 463], "concentr": [318, 507], "surround": [318, 483, 507, 513], "mcc3": 318, "pincomponentsring1": 318, "pincomponentsring2": 318, "nonpin": 318, "annulu": [318, 498, 507], "radii": 318, "sidelength": 318, "disttorodcent": 318, "numrod": 318, "rodradii": 318, "radiilist": 318, "radtorodcent": 318, "thicknessoneachsid": 318, "r_1": 318, "equiv": 318, "r_2": 318, "texttt": 318, "compflag": 318, "strip": [318, 342], "newblock": 318, "mixtureflag": 318, "reactorconvert": 319, "usemostcommonxsid": 319, "expandreactor": 319, "geomconv": 319, "newr": 319, "convreactor": [319, 331, 464], "dif3dinterfac": 319, "dif3drz": 319, "rzgeom_actu": 319, "overwritelist": 319, "ringstoadd": 319, "furthest": [319, 502], "converterset": [319, 320, 464], "stricthomogen": 319, "rztheta": [319, 328, 343, 484], "uniformthetamesh": [319, 320, 464], "thetabin": [319, 320, 464], "radialconversiontyp": [319, 464], "axialconversiontyp": [319, 464], "_rzthetareactormeshconverterbyaxialcoordin": [319, 320], "_rzthetareactormeshconverterbyaxialbin": [319, 320], "homogenizeaxiallybyflag": 319, "byringcomposit": 319, "radialmesh": 319, "homblock": 319, "loweraxialz": 319, "upperaxialz": 319, "radialthetazoneassem": 319, "fnamebas": 319, "coremap": [319, 492, 498], "explan": 319, "myreactor": 319, "sourcereactor": [319, 331], "undo": 319, "edgechang": 319, "difnt": 319, "paramstoscalesubset": 319, "_rzthetareactormeshconverterbyringcomposit": 320, "_rzthetareactormeshconverterbyaxialflag": 320, "inputlist": 320, "listnam": 320, "expectedvalu": 320, "adjustlastvalu": 320, "totalnumdatapoint": 320, "numperbin": 320, "minnum": 320, "settingtomodifi": 322, "sd": 323, "fuel_r": 323, "clad_ir": 323, "fuel_od": 323, "clad_id": 323, "steel_component_lst": [324, 325], "test_assemblyaxialexpansionheight": [324, 325], "expandassemformassconservationtest": [324, 325], "test_thermalexpansioncontractionconservation_simpl": [324, 325], "test_thermalexpansioncontractionconservation_complex": [324, 325], "complexconservationtest": [324, 325], "test_prescribedexpansioncontractionconserv": [324, 325], "test_targetcomponentmassconserv": [324, 325], "test_nomovementaclp": [324, 325], "test_reset": [324, 325], "test_computethermalexpansionfactor": [324, 325], "test_managecoremesh": [324, 325], "test_componentconserv": [324, 325], "test_istopdummyblockpres": [324, 325], "test_setexpansionfactor": [324, 325], "test_updatecomponenttempsby1dtempfieldvalueerror": [324, 325], "test_updatecomponenttempsby1dtempfieldruntimeerror": [324, 325], "test_assemblyaxialexpansionexcept": [324, 325], "test_isfuellock": [324, 325], "test_determinelink": [324, 325], "test_getlinkedcompon": [324, 325], "test_determinetargetcompon": [324, 325], "test_determinetargetcomponentblockwithmultipleflag": [324, 325], "test_specifytargetcomponent_notfound": [324, 325], "test_specifytargetcomponent_singlesolid": [324, 325], "test_specifytargetcomponet_multiplefound": [324, 325], "test_manuallysettargetcompon": [324, 325], "test_getsolidcompon": [324, 325], "test_coldassemblyexpans": [324, 325], "checkcoldheightblockmass": [324, 325], "test_overlappingsolidpin": [324, 325], "test_differentmultnotoverlap": [324, 325], "test_solidpinnotoverlappingannulu": [324, 325], "test_solidpinoverlappingwithannulu": [324, 325], "test_annularpinnotoverlappingwithannulu": [324, 325], "test_annularpinoverlappingwithannul": [324, 325], "test_thinannularpinoverlappingwiththickannulu": [324, 325], "test_annularhexoverlappingthickannularhex": [324, 325], "test_liquid": [324, 325], "test_unshapedcomponentandcircl": [324, 325], "test_overrid": [324, 325], "test_singleblock": [324, 325], "test_multiblock": [324, 325], "test_emptyblock": [324, 325], "test_onassembli": [324, 325], "test_dissolvewireintocool": [324, 326], "test_dissolvelinerintoclad": [324, 326], "test_dissolvemultipl": [324, 326], "test_dissolvezeroarea": [324, 326], "test_dissolveintozeroarea": [324, 326], "test_dissolvenegativearea": [324, 326], "test_dissolveintonegativearea": [324, 326], "test_build_nthr": [324, 326], "test_buildinsideduct": [324, 326], "test_convert": [324, 326, 327], "test_converthexwithfueldriv": [324, 326], "test_converthexwithfueldriveronnegativecomponentareablock": [324, 326], "test_convertcartesianlatticewithfueldriv": [324, 326], "test_fromhex": [324, 326], "test_fromringofrod": [324, 326], "test_addr": [324, 327], "test_setnumberoffuelassem": [324, 327], "test_getassembliesinsector": [324, 327], "test_createhomogenizedrztblock": [324, 327], "test_edgeassembli": [324, 327], "test_growtofullcorefromthirdcor": [324, 327], "test_initnewfullreactor": [324, 327], "test_skipgrowtofullcorewhenalreadyfullcor": [324, 327], "test_meshbyringcompositionaxialbinssmallcor": [324, 328], "test_meshbyringcompositionaxialcoordinatessmallcor": [324, 328], "test_meshbyringcompositionaxialflagssmallcor": [324, 328], "test_meshbyringcompositionaxialbinslargecor": [324, 328], "test_meshbyringcompositionaxialcoordinateslargecor": [324, 328], "test_meshbyringcompositionaxialflagslargecor": [324, 328], "test_adjustcladthicknessbyod": [324, 329], "test_adjustcladthicknessbyid": [324, 329], "test_converterfactori": [324, 330], "test_makeassemwithuniformmesh": [324, 330], "test_makeassemwithuniformmeshsubmesh": [324, 330], "test_makeassemuniformmeshparammappingsamemesh": [324, 330], "test_clearassemblyst": [324, 330], "test_computeaverageaxialmesh": [324, 330], "test_filtermesh": [324, 330], "test_filteredtopandbottom": [324, 330], "test_generatecommonmesh": [324, 330], "test_blueprintcopi": [324, 330], "test_convertnumberdens": [324, 330], "test_applystatetoorigin": [324, 330], "test_calcreactionratesblocklist": [324, 330], "test_setstatefromoverlap": [324, 330], "test_reactorconvers": [324, 330], "137438953472": [325, 334], "274877906944": [325, 334], "549755813888": [325, 334], "1099511627776": [325, 334], "17592186044416": [325, 334], "140737488355328": [325, 334], "2251799813685248": [325, 334], "72057594037927936": [325, 334], "coldtemp": 325, "hotinlettemp": 325, "360": [325, 492, 494, 507], "numtempgridpt": 325, "tempstep": 325, "inlet": [325, 494, 502, 503, 507], "nomin": [325, 484, 502, 503], "metric": [325, 484], "isotherm": 325, "caught": 325, "_componentdeterminesblockheight": 325, "target_flags_in_preferred_ord": 325, "specifytargetcompon": 325, "r_armi_inp_cold_height": 325, "refsmallreactorbas": 325, "deltat": [325, 494], "bstd": 325, "bexp": 325, "flagtyp": 325, "underpredict": 325, "asserttyp": 325, "strforassert": 325, "componentstotest": 325, "assertionbool": 325, "commonarg": 325, "typea": 325, "typeb": 325, "annuli": 325, "dataclass": [325, 419], "setnumberoffuelassem": 327, "sourceassem": [330, 331], "newassem": [330, 498], "_decuspaxialmesh": 330, "dest": 330, "pden": [330, 416, 479, 484, 492, 494, 503], "lost": [331, 452], "finer": [331, 498], "uniformreactor": 331, "minimummeshs": 331, "decusp": [331, 487], "uniformmeshminimums": [331, 507], "_computeaverageaxialmesh": 331, "cusp": 331, "reactorparamstomap": 331, "blockparamstomap": 331, "_setparamstoupd": 331, "reactorparamnam": 331, "blockparamnam": 331, "newmesh": 331, "mapnumberdens": 331, "includepincoordin": 331, "sourceassembli": 331, "destinationassembli": 331, "int_": 331, "z_1": 331, "z_2": 331, "dz": 331, "piecewis": [331, 412], "smarter": 331, "param1": 331, "val1": [331, 417, 452], "param2": 331, "val2": [331, 417, 452], "b2": 331, "pinquant": [331, 345, 348, 487], "powergener": [331, 503], "powerneutron": [331, 503], "powergamma": [331, 503], "paramdef": [331, 345, 347, 348], "overlappingblockinfo": 331, "h_i": 331, "refin": [332, 487, 507], "powerdens": [332, 487, 505, 507], "kghm": [332, 483, 487, 503], "kgfi": [332, 464, 487, 503], "trackassem": [332, 487, 507], "spend": [332, 456, 484], "constrain": [332, 343, 463, 464, 486, 498], "ringnum": 332, "overridecircularringmod": [332, 364], "startindex": [332, 352], "unoccupi": 332, "chargecycl": [332, 502], "indexbas": 332, "maxr": 332, "nring": 332, "nassmwithblank": 332, "read1d": 332, "assemtypespec": 332, "maxblock": 332, "circularringmod": [332, 507], "alist": 332, "fullcor": 332, "numedgeassem": 332, "_modifygeometryafterload": 332, "ringpitch": 332, "a0001": [332, 492], "sortkei": 332, "includebolassem": 332, "includesfp": 332, "includeal": 332, "similarli": [332, 347, 455, 499, 507, 513], "_children": 332, "nozzletyp": [332, 502, 507], "nozzleid": 332, "a0001a": 332, "blocksbynam": 332, "blocksbylocnam": 332, "btype": 332, "slipperi": 332, "detachallassembli": 332, "regrow": 332, "suffic": 332, "categor": [332, 334, 364, 376, 492], "broaden": [332, 510], "coolantnuclid": 332, "fuelnuclid": 332, "structurenuclid": 332, "assemblylevel": 332, "loccont": 332, "speedup": [332, 442, 448], "speed": [332, 487, 489, 507], "energyord": 332, "extsrc": [332, 503], "nxg": 332, "locationstr": 332, "assemblynam": 332, "foundassembli": 332, "showblank": 332, "duplicateassembliesonreflectiveboundari": 332, "neighbor": [332, 341, 343, 364, 488], "east": [332, 513], "west": 332, "south": 332, "border": [332, 470], "asymmetr": 332, "getsymmetricequival": [332, 336, 337, 338, 340, 341, 342, 344], "assemblytyp": 332, "allflux": 332, "symmetrylineid": 332, "applysubmesh": 332, "endpoint": [332, 343], "meshval": 332, "imbalanc": 332, "trz": [332, 361], "xyz": [332, 473, 474], "float_dimension_decim": [332, 487], "9th": 332, "10th": 332, "repetit": [332, 343, 442, 503, 507], "heightcm": 332, "meshlist": 332, "extraassem": 332, "mcpnxt": 332, "flux2weight": 332, "avgtemp": 332, "pitchincm": 332, "shift": [332, 341, 486, 507], "lowestfuelheightincm": 332, "coreparametercollect": 332, "zonedefinit": [332, 367, 507], "002": [332, 367, 486, 492, 507], "simplest": [333, 364, 497, 507], "baseclass": 333, "freeli": 333, "2311582653024": 333, "dual": 333, "2311590971136": 333, "noun": 334, "adject": 334, "disambigu": 334, "bitfield": 334, "widen": 334, "led": [334, 507], "clearli": [334, 367, 507], "stori": 334, "substr": 334, "decid": [334, 349, 456], "canon": [334, 397], "mention": [334, 454], "plenti": 334, "lta": 334, "distinguish": [334, 499], "circul": 334, "bundl": [334, 498, 502, 503, 505], "128": [334, 348, 362, 484], "256": [334, 348], "512": [334, 492], "1024": 334, "2048": 334, "4096": 334, "16384": 334, "65536": 334, "131072": 334, "262144": 334, "524288": 334, "1048576": 334, "2097152": 334, "4194304": 334, "8388608": 334, "16777216": 334, "33554432": 334, "67108864": 334, "134217728": 334, "268435456": 334, "536870912": 334, "1073741824": 334, "2147483648": 334, "4294967296": 334, "8589934592": 334, "17179869184": 334, "34359738368": 334, "68719476736": 334, "2199023255552": 334, "4398046511104": 334, "8796093022208": 334, "35184372088832": 334, "70368744177664": 334, "281474976710656": 334, "562949953421312": 334, "1125899906842624": 334, "4503599627370496": 334, "9007199254740992": 334, "18014398509481984": 334, "36028797018963968": 334, "144115188075855872": 334, "288230376151711744": 334, "576460752303423488": 334, "1152921504606846976": 334, "2305843009213693952": 334, "4611686018427387904": 334, "9223372036854775808": 334, "18446744073709551616": 334, "36893488147419103232": 334, "straightforward": [335, 348, 498, 499, 507], "quarter": [335, 343, 499, 507], "harder": [335, 455], "proceed": [335, 485, 507, 514], "reliev": 335, "elif": [335, 454], "instrument": 335, "forbid": 335, "shapestr": 335, "symmetrystr": 335, "throughcenterassembli": 335, "symmetryinput": 335, "outcom": 335, "fromrectangl": [336, 338], "getglobalcoordin": [336, 342, 471, 472, 473, 474, 479, 492, 494, 499], "test_grid": [336, 420, 437], "testspatialloc": 336, "test_recurs": 336, "getringpo": [336, 338, 341, 342, 343, 344], "indicestoringpo": [336, 341], "fromncel": [336, 337, 470], "locatorindomain": [336, 337, 338, 340, 341, 344], "getindicesfromringandpo": [336, 337, 338, 341, 343, 344], "getminimumr": [336, 337, 338, 341, 343, 344], "getpositionsinr": [336, 337, 338, 341, 343, 344], "overlapswhichsymmetrylin": [336, 337, 338, 340, 341, 344], "changepitch": [336, 338, 341], "isaxialonli": [336, 340, 343], "getcoordin": [336, 340, 343, 344], "getcellbas": [336, 340, 343], "getcelltop": [336, 340, 343], "cornersup": [336, 341, 489], "frompitch": [336, 341, 470, 472], "getneighboringcellindic": [336, 341, 343, 488], "trianglecoord": [336, 341], "isinfirstthird": [336, 341], "generatesortedhexlocationlist": [336, 341, 472], "detachedcopi": [336, 342], "parentloc": [336, 342], "getcompleteindic": [336, 342], "getlocalcoordin": [336, 342, 356, 513], "getglobalcellbas": [336, 342], "getglobalcelltop": [336, 342], "distanceto": [336, 342], "unitsteplimit": [336, 337, 338, 341, 343, 344], "unitstep": [336, 337, 338, 341, 343, 344, 473], "getaboveandbelowcellindic": [336, 343], "getindexbound": [336, 343], "getbound": [336, 343], "getlocatorfromringandpo": [336, 343], "getallindic": [336, 343], "fromgeom": [336, 344], "indicesofbound": [336, 344], "__init_": 337, "numcel": [337, 410], "symmetryoverlap": [337, 338, 340, 341], "noreturn": [337, 338, 344], "tricker": 338, "lai": 338, "illustr": [338, 341], "draw": [338, 419, 428, 480], "ax": [338, 342, 343, 412, 416, 468, 470, 472, 473, 474, 477, 480], "numr": [338, 341, 410], "isoffset": 338, "manhattan": 338, "quadrant": [338, 343], "diagon": [338, 341], "childrenbyloc": [338, 449], "_isthroughcent": 338, "xw": 338, "yw": 338, "dx": 340, "boundary_cent": [340, 341], "nativecoord": [340, 342, 343, 344], "hashabl": 340, "happi": [340, 451, 507], "__getstate__": [340, 347, 363, 381, 394], "__setstate__": 340, "_____": 341, "Being": [341, 484], "newpitchcm": 341, "includetopedg": 341, "nloc": 341, "a3001": 341, "a3003": 341, "stem": 341, "q": [341, 494], "motiv": 341, "notat": [341, 412, 499, 507], "immut": [342, 348, 370, 417, 486, 487], "unbeliev": 342, "inexplic": [342, 416, 418], "annoi": 342, "tagalong": 342, "rack": 342, "awkward": 342, "ok": [342, 493], "todo": [342, 455], "mygrid": 342, "parentgrid": 342, "vice": 343, "versa": 343, "dxi": 343, "dxj": 343, "jxk": 343, "dyi": 343, "dyj": 343, "dyk": 343, "dzi": 343, "dzj": 343, "dzk": 343, "dmn": 343, "0th": 343, "settl": [343, 502], "struggl": [343, 510], "orthogon": 343, "wast": 343, "compact": 343, "intuit": [343, 349, 507], "phantom": 343, "2x": 343, "backrefer": 343, "cleaner": [343, 348, 425], "disadvantag": 343, "pollut": 343, "recreat": 343, "exsist": 343, "dens": [343, 509], "unphys": [343, 494], "zeta": 344, "2pi": [344, 444], "geominfo": 344, "readgeomxml": 344, "rad0": 344, "rad1": 344, "theta0": 344, "theta1": 344, "0001": [344, 497], "350": 345, "hidden": [345, 347], "_p_": 345, "_p_cyclelength": 345, "circumv": 345, "rational": 345, "behind": [345, 454, 486, 495, 498], "5e13": 345, "fueltemp": 345, "217": [345, 478, 496], "curiou": 345, "heightbol": [345, 503], "collectiontyp": [345, 348], "suitabl": 345, "experi": [345, 483, 484, 507], "thefreedictionari": 345, "atmospher": 345, "meriam": 345, "webster": 345, "descriptor": [345, 347], "protocol": [345, 347, 400, 483], "all_definit": 345, "secret": 345, "pep": 345, "412": 345, "protect": [345, 455, 487], "__slots__": 345, "lite": 345, "roundabout": 345, "pain": 345, "consumpt": 345, "pylint": [345, 487], "overwhelm": 345, "unsustain": 345, "__dict__": 345, "slot": 345, "becam": [345, 408], "oner": [345, 349], "tradit": [345, 348, 484], "__something__": 345, "applyparamet": [345, 347], "definint": 345, "getsyncdata": [345, 347], "cumulativeovercycl": [345, 348], "assigninblueprint": [345, 348], "retainonreplac": [345, 348], "fluxquant": [345, 348], "multigroupquant": [345, 348], "reactivitycoeffici": [345, 348], "volume_integr": [345, 348, 489], "fieldnam": [345, 348], "savetodb": [345, 348, 507], "atloc": [345, 347, 348, 363], "hascategori": [345, 348, 363, 490], "incategori": [345, 348], "unchanged_sinc": [345, 348], "fortyp": [345, 348], "resetassignmentflag": [345, 348], "setassignmentflag": [345, 348], "bynameandtyp": [345, 348], "bynameandcollectiontyp": [345, 348], "lock": [345, 347, 348, 349, 417, 446, 487, 503], "towritetodb": [345, 348, 363], "associateparameterdefinitioncollect": [345, 348], "parameterfactori": 346, "setparam": 346, "27998": 347, "thread": [347, 494], "gil": 347, "_state": [347, 363, 394], "illeg": [347, 417], "redefin": 347, "_backup": 347, "_hist": 347, "transmit": [347, 452], "_allfield": [347, 363, 394], "accessor": 347, "proactiv": 347, "somedict": 347, "applydefinit": 347, "since_last_distribute_st": 347, "parmatercollect": 347, "proxi": 347, "accumul": [348, 498, 503, 504], "mark": [348, 451, 455, 507], "deseri": [348, 376], "datatyp": 348, "nativ": [348, 408, 452, 511], "wrote": 348, "dilig": 348, "paramstr": 348, "reassign": 348, "myparametercollect": 348, "diet": 348, "_p_speed": 348, "_representedtyp": 348, "__getitem__": 348, "categorynam": 348, "mask": 348, "complementari": 348, "compositetyp": 348, "vipan": 348, "htdoc": 348, "bitwisehelp": 348, "assignedmask": 348, "bitmask": 348, "syntax": [348, 507], "brief": [348, 492], "mutabl": [348, 408, 452], "engag": [348, 349, 448], "mimic": [349, 408], "blindli": 349, "parametercollectionclass": 349, "bparametercollect": 349, "needn": 349, "ourselv": 349, "sausag": 349, "profici": 349, "calss": 349, "paramt": 350, "writeabl": 350, "reactorparametercollect": 351, "pond": 352, "defunct": [353, 488], "tri": [353, 414, 419, 507], "modifiedpath": 353, "eqpathindex": 353, "eqpathcycl": 353, "outputfilenam": [353, 413], "geoemtri": 353, "test_sortnoloc": [354, 355], "test_uthzrmateri": [354, 355], "test_isonwhichsymmetrylin": [354, 355], "test_notesparamet": [354, 355], "test_it": [354, 355], "test_len": [354, 355], "test_append": [354, 355], "test_extend": [354, 355, 420, 427], "test_moveto": [354, 355], "test_scaleparamswhenmov": [354, 355], "test_getnam": [354, 355, 358], "test_getnum": [354, 355], "test_getloc": [354, 355], "test_getarea": [354, 355, 356, 357], "test_getvolum": [354, 355, 357], "test_adjustresolut": [354, 355], "test_getaxialmesh": [354, 355], "test_calculatezcoord": [354, 355], "test_gettotalheight": [354, 355], "test_getheight": [354, 355], "test_getreactiveheight": [354, 355], "test_getfissilemass": [354, 355, 358], "test_getmass": [354, 355, 356, 364], "test_getag": [354, 355], "test_makeaxialsnaplist": [354, 355], "test_snapaxialmeshtorefer": [354, 355], "test_updatefromassembli": [354, 355], "test_hasflag": [354, 355, 356, 358], "test_renameblocksaccordingtoassemblynum": [354, 355], "test_getblock": [354, 355], "test_getfirstblock": [354, 355], "test_getfirstblockbytyp": [354, 355], "test_getblockdata": [354, 355], "test_getmaxparam": [354, 355, 358], "test_getelevationsmatchingparamvalu": [354, 355], "test_calcavgparam": [354, 355], "test_calctotalparam": [354, 355], "test_reattach": [354, 355], "test_reestablishblockord": [354, 355], "test_countblocksoftyp": [354, 355, 364], "test_getdim": [354, 355], "test_getdominantmateri": [354, 355, 364], "test_iter": [354, 355, 366, 400, 420, 427], "test_getblocksandz": [354, 355], "test_getblocksbetweenelev": [354, 355], "test_getparamvaluesatz": [354, 355], "test_hascontinuouscoolantchannel": [354, 355], "test_carestiancoordin": [354, 355], "test_pinplenumvolum": [354, 355], "test_averageplenumtemperatur": [354, 355], "test_rot": [354, 355], "test_assem_block_typ": [354, 355], "test_assem_hex_typ": [354, 355], "test_getbindexfromzindex": [354, 355], "test_getelevationboundariesbyblocktyp": [354, 355], "test_snapaxialmeshtoreferenceconservingmassbasedonblockignit": [354, 355], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield": [354, 355], "test_areacheck": [354, 355], "test_updatedetailednden": [354, 356], "test_getsmeardens": [354, 356], "test_getsmeardensitymultiplelin": [354, 356], "test_getsmeardensityedgecas": [354, 356], "test_timenodeparam": [354, 356], "test_gettyp": [354, 356], "test_settyp": [354, 356], "test_homogenizedmixtur": [354, 356], "test_getxstyp": [354, 356], "test_27b_setenvgroup": [354, 356], "test_setzeroheight": [354, 356], "test_getvolumefractionswithzeroheight": [354, 356], "test_getvolumefractionwithoutpar": [354, 356], "test_cleardens": [354, 356], "test_removemass": [354, 356], "test_setnumberdens": [354, 356, 357], "test_setmass": [354, 356, 358], "test_gettotalmass": [354, 356], "test_replaceblockwithblock": [354, 356], "test_getwettedperimet": [354, 356], "test_getwettedperimetercircularinnerduct": [354, 356], "test_getwettedperimeterhexinnerduct": [354, 356], "test_getflowareaperpin": [354, 356], "test_getflowarea": [354, 356], "test_gethydraulicdiamet": [354, 356], "test_adjustuenrich": [354, 356], "test_setloc": [354, 356], "test_setbulimitinfo": [354, 356], "test_gettotalnden": [354, 356], "test_gethmden": [354, 356], "test_getfissilemassenrich": [354, 356], "test_getmicrosuffix": [354, 356], "test_geturaniummassenrich": [354, 356], "test_geturaniumnumenrich": [354, 356], "test_getnumberofatom": [354, 356], "test_getpu": [354, 356], "test_adjustdens": [354, 356], "test_completeinitialload": [354, 356], "test_hascompon": [354, 356], "test_getcomponentnam": [354, 356], "test_getcompon": [354, 356], "test_getcomponentsofshap": [354, 356], "test_getcomponentsofmateri": [354, 356], "test_getcomponentbynam": [354, 356], "test_getsortedcomponentsinsideofcomponentclad": [354, 356], "test_getsortedcomponentsinsideofcomponentduct": [354, 356], "test_getnumcompon": [354, 356], "test_getnumpin": [354, 356], "test_setlinpowbypin": [354, 356], "test_getcomponentareafrac": [354, 356], "test_100_getpinpitch": [354, 356], "test_101_getpitch": [354, 356], "test_102_setpitch": [354, 356], "test_106_getareafract": [354, 356], "test_expandelementaltoisotop": [354, 356], "test_expandallelementalstoisotop": [354, 356], "test_setpitch": [354, 356], "test_setimportantparam": [354, 356], "test_getmfp": [354, 356], "test_consistentmassdensityvolumebetweencoldblockandcoldcompon": [354, 356], "test_consistentmassdensityvolumebetweenhotblockandhotcompon": [354, 356], "test_pinmgflux": [354, 356], "test_getcomponentsinlinkedord": [354, 356], "test_mergewithblock": [354, 356], "test_getdimens": [354, 356, 357], "test_getplenumpin": [354, 356], "test_haspinpitch": [354, 356], "test_getreactionr": [354, 356, 358], "test_foundreactor": [354, 356], "test_noblueprint": [354, 356], "test_gettotalenergygenerationconst": [354, 356], "test_getfissionenergydepositionconst": [354, 356], "test_getcaptureenergygenerationconst": [354, 356], "test_getneutronenergydepositionconst": [354, 356], "test_getgammaenergydepositionconst": [354, 356], "test_negativevolum": [354, 356, 357], "test_component_typ": [354, 356], "test_coord": [354, 356], "test_block_dim": [354, 356], "test_symmetryfactor": [354, 356, 361], "test_retainst": [354, 356], "test_getpinloc": [354, 356], "test_getpincoordsandlocsagre": [354, 356], "test_getpincoord": [354, 356], "test_getpitchhomogeneousblock": [354, 356], "test_getductpitch": [354, 356], "test_getpincenterflattoflat": [354, 356], "test_gridcr": [354, 356], "test_gridnumpinsandloc": [354, 356], "test_gridnotcreatedmultiplemultipl": [354, 356], "getlocalcoordinatesblockbound": [354, 356], "test_validatereactorcornersup": [354, 356], "test_validatereactorflatsup": [354, 356], "test_radii": [354, 356], "test_theta": [354, 356], "test_axi": [354, 356], "test_verifyblockdim": [354, 356], "test_getthetarzgrid": [354, 356], "test_getpitchsquar": [354, 356], "test_getcartesiangrid": [354, 356], "test_heightexpansiondiffer": [354, 356], "test_massfuelheatup": [354, 356], "test_masscladheatup": [354, 356], "test_massductheatup": [354, 356], "test_masscoolheatup": [354, 356], "test_dimensionductheatup": [354, 356], "test_coldmass": [354, 356], "test_massconsist": [354, 356], "getcirclevoiddict": [354, 357], "getcirclefueldict": [354, 357], "test_factori": [354, 357], "test_componentinitializationanddupl": [354, 357], "test_factorybadshapenam": [354, 357], "test_invalidcoolantcomponentassign": [354, 357], "componentcl": [354, 357], "componentmateri": [354, 357], "componentdim": [354, 357], "test_initializecomponentmateri": [354, 357], "test_solid_materi": [354, 357], "test_cmp": [354, 357], "test_nonzero": [354, 357], "test_getcomponentarea": [354, 357], "test_getboundingcircleouterdiamet": [354, 357], "test_component_less_than": [354, 357], "test_fromcompon": [354, 357], "test_preservemassduringthermalexpans": [354, 357], "test_volumeafterclearcach": [354, 357], "test_densityconsist": [354, 357], "test_computevolum": [354, 357], "test_getareacoldtru": [354, 357], "test_getthermalexpansionfactorconservedmassbylinearexpansionperc": [354, 357], "test_thermallyexpand": [354, 357], "test_getcircleinnerdiamet": [354, 357], "test_dimensionthermallyexpand": [354, 357], "test_componentinteractionslinkingbydimens": [354, 357], "test_badcomponentnam": [354, 357], "test_componentinteractionslinkingbysubtract": [354, 357], "test_changenumberdens": [354, 357], "test_fuelmass": [354, 357], "test_theoreticaldensitysett": [354, 357], "tcold": [354, 357, 492], "twarm": [354, 357], "coldouterdiamet": [354, 357], "test_ht9expans": [354, 357], "test_uzrexpans": [354, 357], "test_b4cexpans": [354, 357], "runexpansiontest": [354, 357], "componentmassindependentofinputtemp": [354, 357], "expansionconservationhotheightdefin": [354, 357], "expansionconservationcoldheightdefin": [354, 357], "test_negativearea": [354, 357], "test_getperimet": [354, 357], "dimstotestexpans": [354, 357], "setclassdim": [354, 357], "test_validparamet": [354, 357], "test_updatedim": [354, 357], "test_setmassfrac": [354, 357], "test_setmassfraconcomponentmateri": [354, 357], "test_adjustmassfrac_invalid": [354, 357], "test_adjustmassfrac_u235": [354, 357], "test_adjustmassfrac_u": [354, 357], "test_adjustmassfrac_clear_zr": [354, 357], "test_adjustmassfrac_set_zr": [354, 357], "test_adjustmassfrac_leave_sam": [354, 357], "test_getenrich": [354, 357], "test_finalizeloaddbadjuststd": [354, 357], "test_getpinmgflux": [354, 357], "inactivenuclid": [354, 358], "elementstoexpand": [354, 358], "test_itercompon": [354, 358], "test_sort": [354, 358], "test_arechildernoftyp": [354, 358], "test_containsatleastonechildoftyp": [354, 358], "test_containsonlychildrenoftyp": [354, 358], "test_namecontain": [354, 358, 383, 390], "test_nucspec": [354, 358], "test_hasflagssubstr": [354, 358], "test_hasflagsnotypespecifi": [354, 358], "test_getboundingcirlceouterdiamet": [354, 358], "test_getparamnam": [354, 358], "test_updatevolum": [354, 358], "test_expandlfp": [354, 358], "test_setchildrenlumpedfissionproduct": [354, 358], "test_requireslumpedfissionproduct": [354, 358], "test_getlumpedfissionproductsifnecessarynullcas": [354, 358], "test_getintegratedmgflux": [354, 358], "test_syncparamet": [354, 358], "blueprintyaml": [354, 358], "test_ord": [354, 358], "test_sum": [354, 358], "test_constituentreport": [354, 358], "test_getfuelmass": [354, 358], "test_getchildrenincludemateri": [354, 358], "test_gethmmass": [354, 358], "test_getfpmass": [354, 358], "test_getminparam": [354, 358], "testflagsa": [354, 358], "testflagsb": [354, 358], "bprime": [354, 358], "test_flagseri": [354, 358], "test_flagconvers": [354, 358], "test_getnumberdensitieswithexpandedfissionproduct": [354, 358], "test_dimensionreport": [354, 358], "test_getatomicweight": [354, 358], "test_containsheavymet": [354, 358], "test_copyparamstochildren": [354, 358], "test_copyparamsfrom": [354, 358], "test_getreactionratedict": [354, 358], "test_constructor": [354, 359], "test_represent": [354, 359], "test_parentreactor": [354, 359], "test_getassembli": [354, 359], "test_updatenumberofcolumn": [354, 359], "test_getnextloc": [354, 359], "test_normalizenam": [354, 359, 364], "test_addlikedict": [354, 359], "test_addlikeattribut": [354, 359], "test_fromstr": [354, 360, 361], "test_fromstringwithnumb": [354, 360], "test_flagsdefinedwithnumb": [354, 360], "test_flagstoandfromstr": [354, 360], "test_tostringalphabet": [354, 360], "test_fromstringstrict": [354, 360], "test_lookup": [354, 360], "test_convertsstringswithnonflag": [354, 360], "test_defaultisfals": [354, 360], "test_str": [354, 361], "test_fromani": [354, 361], "test_baseconstructor": [354, 361], "test_domaintypenul": [354, 361], "test_checkvalidgeomsymmetrycombo": [354, 361], "test_readhexgeomxml": [354, 361], "test_readreactor": [354, 361], "test_asciimap": [354, 361, 400, 420], "test_readasciimap": [354, 361], "test_readtrzgeomxml": [354, 361], "test_trzyamlio": [354, 361], "boundary_param": [354, 362], "boundary_data": [354, 362], "pin_param": [354, 362], "pin_data": [354, 362], "test_orientationvector": [354, 362], "test_rotateboundaryparamet": [354, 362], "assertindexlocationequival": [354, 362], "test_pinrotationloc": [354, 362], "test_pinrotationcoordin": [354, 362], "test_updatechildloc": [354, 362], "test_pinparametersunmodifi": [354, 362], "test_orient": [354, 362], "test_mutabledefaultsnotsupport": [354, 363], "test_writesomeparamstodb": [354, 363], "test_serializer_pack_unpack": [354, 363], "test_parampropertydoesnotconflict": [354, 363], "test_parampropertydoesnotconflictwithnonedefault": [354, 363], "test_getwithoutdefaultraisesparametererror": [354, 363], "test_attemptingtosetparamwithoutsetterfail": [354, 363], "test_sett": [354, 363], "test_settergetterbas": [354, 363], "test_cannotdefineparameterwithsamenam": [354, 363], "test_paramdefinitionscompos": [354, 363], "test_cannotdefineparameterwithsamenameforcollectionsubclass": [354, 363], "test_cannotcreateattrbuteonparametercollectionsubclass": [354, 363], "test_cannotcreateinstanceof_nodefault": [354, 363], "test_cannotcreateinstanceof_undefin": [354, 363], "test_defaultloc": [354, 363], "test_categori": [354, 363], "test_parametercollectionshave__slots__": [354, 363], "scopeparamcollect": [354, 363], "test_oncategori": [354, 363], "test_onloc": [354, 363], "test_compl": [354, 363], "test_makeparametersreadonli": [354, 363], "test_coresfp": [354, 364], "test_factorysortset": [354, 364], "test_getsetparamet": [354, 364], "test_sortchildren": [354, 364], "test_sortassembyr": [354, 364], "test_gettotalparam": [354, 364], "test_geomtyp": [354, 364], "test_getblocksbyindic": [354, 364], "test_getallxssuffix": [354, 364], "test_genblocksbylocnam": [354, 364], "test_setpitchuniform": [354, 364], "test_setb10voloncr": [354, 364], "test_countfuelaxialblock": [354, 364], "test_getfirstfuelblockaxialnod": [354, 364], "test_getmaxassembliesinhexr": [354, 364], "test_getmaxnumpin": [354, 364], "test_addmultiplecor": [354, 364], "test_getreactor": [354, 364], "test_addmorenod": [354, 364], "test_findaxialmeshindexof": [354, 364], "test_findallaxialmeshpoint": [354, 364], "test_findallaxialmeshpoints_wsubmesh": [354, 364], "test_findallazimeshpoint": [354, 364], "test_findallradmeshpoint": [354, 364], "test_findneighbor": [354, 364], "test_getassembliesincircular": [354, 364], "test_getassembliesinhexr": [354, 364], "test_genassembliesaddedthiscycl": [354, 364], "test_getassemblypitch": [354, 364], "test_getnumassemblieswithallringsfilledout": [354, 364], "test_getnumassemblieswithallringsfilledoutbipass": [354, 364], "test_getnumenergygroup": [354, 364], "test_getminimumpercentfluxinfuel": [354, 364], "test_getassemblywithloc": [354, 364], "test_getassemblywithnam": [354, 364], "test_restorereactor": [354, 364], "test_differentnuclidemodel": [354, 364], "test_getsymmetryfactor": [354, 364], "test_getassembliesonsymmetrylin": [354, 364], "test_saveallflux": [354, 364], "test_getfluxvector": [354, 364], "test_getfuelbottomheight": [354, 364], "test_getgridbound": [354, 364], "test_loc": [354, 364], "test_removeassembli": [354, 364], "test_removeassemblynosfp": [354, 364], "test_removeassembliesinr": [354, 364], "test_removeassembliesinringbycount": [354, 364], "test_getnumr": [354, 364], "test_whennoassembli": [354, 364], "test_removeassembliesinringhex": [354, 364], "test_getnozzletyp": [354, 364], "test_createassemblyoftyp": [354, 364], "test_createfreshfe": [354, 364], "test_createassemblyoftypeexpandedcor": [354, 364], "test_getavgtemp": [354, 364], "test_getscalarevolut": [354, 364], "test_ifmissingspatialgrid": [354, 364], "test_pincoordsallblock": [354, 364], "test_nonuniformassem": [354, 364], "test_applythermalexpansion_coreconstruct": [354, 364], "test_updateblockbolheights_dbload": [354, 364], "test_buildmanualzon": [354, 364], "test_buildmanualzonesempti": [354, 364], "test_getnuclidecategori": [354, 364], "test_setpowerifnecessari": [354, 364], "test_findallmeshpoint": [354, 364, 365], "test_getassembliesinsquar": [354, 364], "test_getnuclidecategorieslog": [354, 364], "test_findneighborscartesian": [354, 364], "test_loadrzt": [354, 365], "test_loadrzt_reactor": [354, 365], "test_additem": [354, 366], "test_removeitem": [354, 366], "test_addloc": [354, 366], "test_removeloc": [354, 366], "test_repr": [354, 366], "test_dictionaryinterfac": [354, 366], "test_findzoneitisin": [354, 366], "test_getzoneloc": [354, 366], "test_getallloc": [354, 366], "test_summari": [354, 366], "test_sortzon": [354, 366], "uth": 355, "numblock": 355, "139731422845872": 355, "8660254": 355, "2500": 355, "carestiangrid": 355, "mock_sf": 356, "simlutan": 356, "165": [356, 362], "evacu": 356, "pullabl": 356, "magicmock": 356, "mock_captur": 356, "mock_fiss": 356, "mock_method": 356, "__name__": [356, 368, 456, 478, 480, 494, 509], "unshap": 356, "neutronical": 356, "grown": [356, 484], "excess": [356, 416, 418], "veifi": 357, "141592653589793": 357, "demonst": 357, "tutori": [357, 446, 449, 451, 457, 469, 482, 484, 486, 487, 492, 494, 498, 499, 500, 507, 513], "160": [357, 362], "170": [357, 362, 411], "dummycompositeparametercollect": 358, "dummyleafparametercollect": 358, "queryabl": 358, "block_metal_fuel": 358, "component_metal_fuel_fuel": 358, "component_metal_fuel_clad": 358, "450": [358, 468, 478, 492, 498, 499, 507], "component_metal_fuel_bond": 358, "component_metal_fuel_cool": 358, "component_metal_fuel_duct": 358, "block_oxide_fuel": 358, "compost": 358, "pickleabl": 360, "cornerfastflux": [362, 503, 513], "pointscornerdpa": [362, 503], "pointscornerdpar": [362, 503], "pointscornerfastfluxfr": [362, 503], "pointsedgedpa": [362, 503], "pointsedgedpar": [362, 503], "pointsedgefastfluxfr": [362, 503], "thedgetemp": [362, 503], "thcorntemp": [362, 503], "percentbubypin": [362, 503], "121": 362, "122": 362, "123": [362, 456], "124": 362, "125": 362, "126": 362, "129": 362, "130": [362, 411], "131": 362, "132": 362, "133": 362, "134": 362, "136": 362, "137": 362, "138": 362, "139": [362, 480], "142": [362, 492, 498], "143": 362, "145": [362, 507], "146": 362, "147": 362, "148": 362, "149": 362, "151": 362, "152": 362, "153": [362, 498], "154": [362, 480], "155": 362, "157": 362, "158": 362, "159": 362, "161": 362, "162": 362, "163": 362, "166": 362, "167": [362, 472, 481], "168": 362, "171": [362, 469, 481], "172": 362, "174": 362, "175": [362, 464], "176": 362, "178": 362, "179": 362, "182": 362, "183": 362, "184": [362, 492], "185": 362, "186": 362, "188": 362, "189": 362, "190": [362, 411], "191": [362, 498], "192": 362, "193": 362, "194": 362, "196": 362, "198": 362, "202": 362, "204": 362, "205": 362, "206": 362, "207": 362, "208": 362, "209": 362, "210": 362, "211": 362, "212": 362, "213": 362, "214": 362, "216": [362, 496], "reinforc": 362, "wherev": 362, "assort": [363, 404], "_writeparam": 363, "signifi": [363, 513], "lifecycl": 363, "accident": [363, 397, 415, 484], "customset": 364, "inputfilepath": 364, "home": [364, 484, 492], "runner": [364, 492], "inputfilenam": [364, 471], "test_root": 364, "maxnumr": 364, "neeed": 364, "getgridbound": 364, "mockgetassembli": 364, "godiva": 365, "heu": 365, "zonetyp": 367, "heavier": 367, "chicken": 367, "egg": [367, 419], "zonenam": [367, 507], "zoneloc": 367, "defint": 367, "consol": 368, "logger": [368, 370, 384, 397, 507, 509], "getlogg": [368, 456, 509], "someexcept": 368, "mpirank": [368, 415], "logdir": 368, "indent": [368, 442, 507], "levelnam": 368, "msgtype": [368, 384], "mangl": 368, "dedupl": 368, "stub": 368, "intlevel": 368, "isstderr": 368, "csfile": 369, "databaseset": [369, 371], "globalset": [369, 371, 494], "reportset": [369, 371], "tightcouplingset": [369, 371, 507, 510], "serializetightcouplingset": [369, 371, 375], "tightcouplingsettingdef": [369, 371, 375], "tightcouplingsettingsvalid": [369, 371, 375], "test_inspector": [369, 379], "testinspector": [369, 379, 380], "test_set": [369, 376, 379], "dummysettingplugin1": [369, 379, 381], "dummysettingplugin2": [369, 379, 381], "pluginaddsopt": [369, 379, 381], "testset": [369, 379, 381, 382], "testaddingopt": [369, 379, 381], "testsettings2": [369, 379, 381], "testsettingsutil": [369, 379, 381], "testflaglistset": [369, 379, 381], "testsettingsvalidationutil": [369, 379, 381], "test_settingsio": [369, 379], "settingsfailuretest": [369, 379, 382], "settingsreadertest": [369, 379, 382], "settingsrenametest": [369, 379, 382], "settingswritertest": [369, 379, 382], "mockentrypoint": [369, 379, 382], "settingargstest": [369, 379, 382], "defaultcasetitl": [369, 370], "environmentset": [369, 370], "reverttodefault": [369, 370, 376], "failonload": [369, 370], "loadfrominputfil": [369, 370], "loadfromstr": [369, 370], "initlogverbos": [369, 370], "writetoyamlfil": [369, 370], "getsettingssetbyus": [369, 370], "writetoyamlstream": [369, 370], "updateenvironmentsettingsfrom": [369, 370], "setmoduleverbos": [369, 370], "underlyingtyp": [369, 376], "setvalu": [369, 376], "changedefault": [369, 376], "isdefault": [369, 376], "offdefault": [369, 376], "getcustomattribut": [369, 376], "getdefaultattribut": [369, 376], "renameset": [369, 377], "settingsinputformat": [369, 377], "fromext": [369, 377], "readfromfil": [369, 377], "readfromstream": [369, 377], "writeyaml": [369, 377], "iscorrect": [369, 378], "no_act": [369, 378, 494], "addqueri": [369, 378], "addquerybadlocationwilllikelyfail": [369, 378], "addquerycurrentsettingmaynotsupportfeatur": [369, 378], "hundr": [370, 484], "begun": [370, 507], "setpath": 370, "went": 370, "hoc": [370, 493], "fromfil": 370, "fpath": 370, "usersettingsnam": 370, "settingssetbyus": [370, 377], "writabl": 370, "otherc": 370, "couplingset": 375, "tightcouplingsettingsdict": 375, "coeff": 376, "enforcedopt": 376, "sublabel": 376, "isenviron": 376, "oldnam": [376, 377], "legal": 376, "expir": [376, 377], "subtyp": 376, "serializ": 376, "newdefault": 376, "compund": 376, "gone": [376, 503, 507], "residu": 376, "settings_inst": 377, "dialogu": 378, "imposs": [378, 412, 455, 509], "affirm": 378, "interplai": 378, "correctionsmad": 378, "initiallambda": 378, "versionthi": 378, "versionrequir": 378, "test_queri": [379, 380], "test_overwritesettingscorrectivequeri": [379, 380], "test_changeofc": [379, 380], "test_noncorrectivequeri": [379, 380], "test_callablecorrectioncheck": [379, 380], "test_assignc": [379, 380], "test_createqueryrevertbadpathtodefault": [379, 380], "test_correctcyclestozeroburnup": [379, 380], "test_checkforbothsimpleanddetailedcyclesinput": [379, 380], "test_updateenvironmentsettingsfrom": [379, 381], "test_metadata": [379, 381], "test_addingopt": [379, 381], "test_schemacheckstyp": [379, 381], "test_listsmut": [379, 381], "test_listcoercion": [379, 381], "test_typedetect": [379, 381], "test_cswork": [379, 381], "test_pluginvalidatorsarediscov": [379, 381], "test_pluginset": [379, 381], "test_default": [379, 381], "test_getsettingssetbyus": [379, 381], "test_setmoduleverbos": [379, 381], "test_getfailur": [379, 381], "test_settingisokaytograb": [379, 381], "test_modifi": [379, 381], "test_copyset": [379, 381], "test_copysettingnotdefault": [379, 381], "test_empti": [379, 381], "test_recursivescan": [379, 381], "test_prompt": [379, 381], "test_flaglistset": [379, 381], "test_invalidflaglisttypeerror": [379, 381], "test_validatevers": [379, 381], "test_settingsobjset": [379, 382], "test_loadfromyamlfailsonbadnam": [379, 382], "test_invalidfil": [379, 382], "test_basicsettingsread": [379, 382], "test_readfromfil": [379, 382], "test_renam": [379, 382], "test_collidingrenam": [379, 382], "test_writeshort": [379, 382], "test_writemedium": [379, 382], "test_writeful": [379, 382], "test_writeyaml": [379, 382], "test_errorsettingswrit": [379, 382], "test_commandlineset": [379, 382], "test_cannotloadsettingsafterparsingcommandlineset": [379, 382], "sound": 381, "particuar": 381, "_customschema": 381, "testsetting1": 382, "testsetting2": 382, "testsetting3": 382, "refdirectori": 383, "abspath": 383, "fixturefunct": 383, "expectedfilepath": 383, "actualfilepath": 383, "falseneglist": 383, "mainten": 383, "rebaselin": 383, "accomod": 383, "epsilon": [383, 510], "impl": [383, 456], "rstrip": 383, "whitespac": [383, 419, 455], "parsabl": 383, "presenc": 383, "approv": 383, "clearsinglewarn": [383, 384], "getstdout": [383, 384], "emptystdout": [383, 384], "getstderrvalu": [383, 384], "test_getparamrenam": [383, 386], "test_registerpluginflag": [383, 386], "test_getparamrenamesinvalid": [383, 386], "test_vers": [383, 386], "test_getset": [383, 386], "test_splashtext": [383, 386], "test_splashtextdifferentapp": [383, 386], "test_isstablereleasevers": [383, 386], "test_disablefutureconfigur": [383, 386], "test_getdefaultpluginmanag": [383, 386], "test_overconfigur": [383, 386], "test_main": [383, 386], "test_comparefilessucess": [383, 387], "test_comparefilesfail": [383, 387], "test_comparefilessucceedfalseneg": [383, 387], "test_custom": [383, 388], "test_rank": [383, 389, 393], "test_nonnonedata": [383, 389, 393], "test_isrequesteddetailpoint": [383, 390], "test_en": [383, 390], "test_predistributest": [383, 390], "test_coupleract": [383, 390], "test_storepreviousiterationvalu": [383, 390], "test_storepreviousiterationvalueexcept": [383, 390], "test_isconvergedvalueerror": [383, 390], "test_isconverg": [383, 390], "test_isconvergedruntimeerror": [383, 390], "test_getlistdimens": [383, 390], "test_loadc5g7": [383, 391], "test_parallel": [383, 392, 426], "test_serialgath": [383, 392], "test_mpiit": [383, 392], "test_perfectbalanc": [383, 392], "test_excessprocess": [383, 392], "test_typicalbalanc": [383, 392], "test_runactionsdistributionact": [383, 392], "test_runactionsdistributestateact": [383, 392], "test_diagnosepickleerrortestreactor": [383, 392], "test_disableforexclusivetask": [383, 392], "test_makequeu": [383, 392], "test_basicoperatormpi": [383, 393], "test_primaryexcept": [383, 393], "test_primarycrit": [383, 393], "test_finalizeinteract": [383, 393], "test_distributeset": [383, 393], "test_distributereactor": [383, 393], "test_distributeinterfac": [383, 393], "test_distributest": [383, 393], "test_compileresult": [383, 393], "test_cleanpathmpi": [383, 393], "test_noconflict": [383, 394], "test_withconflict": [383, 394], "test_withconflictsbutsamevalu": [383, 394], "test_conflictsmaintainwithstateretain": [383, 394], "test_runparamsweep": [383, 395], "test_rundatamodel": [383, 395], "test_defineflag": [383, 396], "test_axialexpansionhook": [383, 396], "test_passivedbloadplugin": [383, 396], "test_beforereactorconstructionhook": [383, 396], "test_defineparamet": [383, 396], "test_exposeinterfac": [383, 396], "test_pluginsexposeinterfac": [383, 396], "test_defineblueprintssect": [383, 396], "test_setverbosityfrominteg": [383, 397], "test_setverbosityfromstr": [383, 397], "test_verbosityoutofrang": [383, 397], "test_invalidsetverbositybystr": [383, 397], "test_parentrunlog": [383, 397], "test_getwhitespac": [383, 397], "test_warningreport": [383, 397], "test_warningreportinvalid": [383, 397], "test_closelog": [383, 397], "test_setverbos": [383, 397], "test_setverbositybeforestartlog": [383, 397], "test_callingstartlogmultipletim": [383, 397], "test_concatenatelog": [383, 397], "test_createlogdir": [383, 397], "test_getduplicatesfilt": [383, 397], "test_allowstopdupl": [383, 397], "test_comparefilelin": [383, 398], "test_userpluginsflag": [383, 399], "test_validateuserpluginlimit": [383, 399], "test_registeruserplugin": [383, 399], "test_registeruserpluginsabspath": [383, 399], "test_registeruserpluginsfromset": [383, 399], "test_userpluginonprocesscoreload": [383, 399], "test_userpluginwithinterfac": [383, 399], "test_registerrepeateduserplugin": [383, 399], "_runlog": 384, "shuffler": 385, "factorlist": 385, "coexist": 386, "plugin1": 386, "dummyact": 390, "notif": 390, "coupler": 390, "rag": 390, "c5g7": [391, 486, 487, 498, 499, 513], "numproc": 392, "numobject": 392, "numobj": 392, "imbal": 392, "_diagnosepickleerror": 392, "featurest": 393, "commandlin": [393, 455], "mpi4pi": [393, 426, 452, 484, 485, 486, 514], "failer": 393, "mockopmpi": 393, "unittest": [394, 429, 455], "ipynb": [395, 446, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480], "inadvert": 395, "successfulli": [396, 400, 509], "carefulli": 397, "startlog": 397, "concat": 397, "flex": [399, 494], "meaningless": 399, "filepath": [400, 415, 442], "sha": [400, 419, 492], "timestepnum": 400, "timenodenum": 400, "picklechain": 400, "a101": 400, "fix_import": 400, "buffer_callback": 400, "pickler": 400, "testpickl": 400, "sob": 400, "classcount": 400, "heirarchi": 400, "trend": 400, "originallist": 400, "listtoprepend": 400, "beginn": 400, "prepend": [400, 401, 419], "cap": 400, "prestr": 400, "4d": 400, "4e": [400, 470, 492], "datalist": 400, "maxnumberofvaluesbeforedelimit": 400, "delimit": 400, "hello": 400, "n4": 400, "minv": 400, "maxv": 400, "xlabel": [400, 418, 469, 470, 475, 480, 495, 496], "ylabel": [400, 418, 469, 470, 475, 480, 495, 496], "xtick": 400, "ytick": 400, "cmap": [400, 477], "figsiz": [400, 469, 477, 480, 496], "friendli": [400, 402], "hyphen": [400, 419], "otherdictionari": 400, "dst": 400, "shutil": [400, 415], "testasciimap": [400, 420, 421], "test_codetim": [400, 420, 441], "codetimingtest": [400, 420, 422], "test_custom_except": [400, 420], "customexceptiontest": [400, 420, 423], "test_densitytool": [400, 420], "testdensitytool": [400, 420, 424], "test_directorychang": [400, 420], "expectedexcept": [400, 420, 425], "testdirectorychang": [400, 420, 425], "test_directorychangersmpi": [400, 420], "revealyourdirectori": [400, 420, 426], "testmpi": [400, 420, 426], "exampleflag": [400, 420, 427], "test_hexagon": [400, 420], "testiter": [400, 420, 429], "test_mathemat": [400, 420], "testmath": [400, 420, 430], "test_outputcach": [400, 420], "testoutputcach": [400, 420, 431], "test_pars": [400, 420], "literalevaltest": [400, 420, 432], "test_pathtool": [400, 420], "pathtoolstest": [400, 420, 433], "test_plot": [400, 420], "testplot": [400, 420, 434], "testpatch": [400, 420, 434], "test_properti": [400, 420], "immutableclass": [400, 420, 435], "immutablepropertytest": [400, 420, 435], "test_reportplot": [400, 420], "testradar": [400, 420, 436], "test_tabul": [400, 420], "testtabulateapi": [400, 420, 437], "testtabulateinput": [400, 420, 437], "testtabulateintern": [400, 420, 437], "testtabulateoutput": [400, 420, 437], "test_textprocessor": [400, 420], "testtextprocessor": [400, 420, 438], "yamlincludetest": [400, 420, 438], "sequentialreadertest": [400, 420, 438], "test_triangl": [400, 420], "test_unit": [400, 420], "testunit": [400, 420, 440], "testgeneralutil": [400, 420, 441], "asciilin": [400, 401], "asciioffset": [400, 401], "asciilabelbyindic": [400, 401], "gridcontentstoascii": [400, 401], "gettim": [400, 402], "starttim": [400, 402], "endtim": [400, 402], "startal": [400, 402], "stopal": [400, 402], "getactivetim": [400, 402], "timelin": [400, 402, 507], "movefil": [400, 405], "retrievefil": [400, 405], "getrandomdirectori": [400, 405], "sortedfield": [400, 408], "to_byt": [400, 408], "from_byt": [400, 408], "set_val": [400, 416], "updatepagedepthcolor": [400, 416], "sep": [400, 419, 492], "hline": [400, 419], "headerrow": [400, 419], "lineabov": [400, 419], "linebelow": [400, 419], "linebelowhead": [400, 419], "linebetweenrow": [400, 419], "withheaderhid": [400, 419], "unicode_whitespace_tran": [400, 419], "uspac": [400, 419], "wordsep_r": [400, 419], "wordsep_simple_r": [400, 419], "sentence_end_r": [400, 419], "from_iter": [400, 419], "func": [400, 403, 411, 412, 419, 452], "issuewarningonfindingtext": [400, 442], "raiseerroronfindingtext": [400, 442], "raiseerroronfindingpattern": [400, 442], "searchfortext": [400, 442], "searchforpattern": [400, 442], "searchforpatternonnextlin": [400, 442], "consumelin": [400, 442], "scipat": [400, 442], "decim": [400, 419, 437, 442], "errorcheck": [400, 442], "checkerror": [400, 442], "fsearch": [400, 438, 442], "reimplement": 401, "simplic": [401, 498], "vocabulari": 401, "nestabl": 401, "latticeblueprint": 401, "programat": [401, 497, 507], "linenum": 401, "colnum": 401, "ij": 401, "col": [401, 437], "decrement": [401, 412], "jaggedli": 401, "ridicul": 401, "horizont": [401, 416], "_ijmax": 401, "ijmax": 401, "toward": [401, 419, 480, 484], "timer": [402, 507], "mymethod": 402, "mymethod2": 402, "event_nam": 402, "unfriendli": 402, "unstart": 402, "master": [402, 492], "kill": [402, 456], "inclusion_cutoff": 402, "total_tim": 402, "_timer": 402, "__str__": 402, "base_file_nam": 402, "granular": 403, "inport": 403, "abort": 403, "uninteract": 403, "custommsgend": 403, "matnum": [404, 462], "minden": 404, "sigfig": 404, "mcnp6compat": 404, "mcnplibrari": 404, "mcard": 404, "nuclidevector": 404, "elementexpansionpair": 404, "nuclidbas": 404, "isotopicsubset": 404, "nuclideinventori": 404, "enrichedmassfrac": 404, "fertilemassfrac": 404, "remix": 404, "filestomov": [405, 406], "filestoretriev": [405, 406], "dumponexcept": 405, "outputpath": [405, 406], "cwd": 405, "tell": [405, 456, 471, 494, 498, 507], "stall": [405, 452], "chdir": 405, "race": 406, "importentirepackag": 407, "aenum": 408, "provis": [408, 507], "arithmet": 408, "emul": 408, "unlimit": 408, "myflag": 408, "foo": [408, 420, 427], "baz": [408, 420, 427], "byteord": 408, "snake_cas": [408, 455], "pythagorean": 410, "theorem": 410, "initialcellindex": 410, "orientationnumb": 410, "lst": 411, "lenght": 411, "padwith": [411, 452], "padwithnon": 411, "binaryrow": 411, "valuedict": 411, "hexrow": 411, "1000000": [411, 507], "0x": 411, "although": [411, 448, 507], "forev": 411, "remedi": 411, "dropwhil": 411, "takewhil": 411, "itertool": [411, 416, 473, 474], "pred": 411, "newseq": 411, "summat": [411, 412, 507, 509], "expon": 412, "repeatedlist": 412, "9r": [412, 507], "listtosearch": 412, "indx": 412, "searchlist": 412, "searchvalu": 412, "strtofloat": 412, "03231714805651": 412, "03231714805651e": 412, "scientif": [412, 494], "prevvalu": 412, "inputit": 412, "x0": 412, "y0": 412, "x1": [412, 443], "y1": [412, 443], "targetx": 412, "targeti": 412, "interpi": 412, "interpx": 412, "maxiter": 412, "positiveguess": 412, "tol": 412, "newton": 412, "p2": 412, "p3": 412, "parabola": 412, "x2": [412, 443], "x3": [412, 443], "y2": [412, 443], "y3": [412, 443], "bx": 412, "ap": 412, "cp": [412, 494], "targetk": [412, 507], "bt": 412, "2at": 412, "2a": 412, "slope": [412, 505], "realroot": 412, "newtim": 412, "v1": [412, 452, 456], "v2": [412, 452], "xin": 412, "yin": 412, "xout": 412, "resampl": 412, "realloc": 412, "resmampl": 412, "degreescounterclockwis": 412, "radianscounterclockwis": 412, "xr": 412, "yr": [412, 502, 505, 512], "crc": 413, "instantli": 413, "blah": 413, "inpfil": 413, "mccaa": 413, "rmzflx": 413, "outputfound": 413, "outfil": 413, "subprocess": 413, "exepath": 413, "inputpath": 413, "cachedir": 413, "loctoretrieveto": 413, "greedi": 413, "cachedfold": 413, "destruct": [413, 503], "teardown": 413, "requestedtyp": 414, "allownon": 414, "matchingnonetyp": 414, "datetim": 414, "pathpart": 415, "filepathdescript": 415, "sourcepath": 415, "destinationpath": 415, "path1": 415, "path2": 415, "ioerror": 415, "pathattr": 415, "myclass": 415, "userspecifiedmodul": 415, "copiou": 415, "everyon": [415, 455, 456], "misplac": 415, "net": [415, 503], "rmtree": 415, "matplotlib": [416, 418, 455, 464, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 492, 495, 496, 499], "bewar": [416, 418], "gobbl": [416, 418], "judici": [416, 418], "advis": [416, 418, 507], "skippedcolor": 416, "color": [416, 463, 469, 470, 480, 496, 499], "css": 416, "indefinit": 416, "bare": [416, 456], "cmapnam": 416, "jet": 416, "labelfmt": [416, 464, 479], "3f": 416, "legendmap": 416, "fontsiz": [416, 472, 477, 480], "minscal": 416, "maxscal": 416, "axisequ": 416, "makecolorbar": 416, "cbarlabel": 416, "shufflearrow": 416, "titles": 416, "depthindex": [416, 492], "viewabl": 416, "referencestokeep": 416, "colormap": 416, "pylab_exampl": 416, "show_colormap": 416, "labl": 416, "decript": 416, "legend": [416, 418, 468, 470, 475], "autoscal": 416, "ellips": 416, "patch": [416, 434, 442, 472, 480, 490], "facemap": [416, 467, 481, 482, 487, 490, 500], "typenumassem": 416, "rdylbu": 416, "fig": [416, 464, 468, 470, 472, 473, 474, 477, 478, 480], "galleri": [416, 450, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484], "sliderlabel": 416, "updatefunc": 416, "selecteddepthcolor": 416, "valinit": 416, "slider": 416, "valmin": 416, "valmax": 416, "_event": 416, "newval": 416, "maxassem": 416, "yaxislabel": 416, "plt": [416, 464, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 492, 495, 496, 499], "histogram": 416, "materiallist": 416, "fileformat": 416, "svg": [416, 507], "pictur": 416, "jpg": [416, 507], "xsname": 416, "noshow": 416, "ipython": [416, 499], "u238na": 416, "dependencyact": 417, "properrti": 417, "esenti": 417, "someclass": 417, "mynum": [417, 420, 435], "__doc__": [417, 419], "unlock": [417, 451], "unassign": 417, "dbi": [418, 492], "abscissa": 418, "chart": [418, 449, 467, 481, 482, 493, 500], "reactornam": 418, "radar": [418, 436], "spider": 418, "xmajortick": 418, "ymajortick": 418, "legendlabel": 418, "tick": 418, "legendslabel": 418, "zval": [418, 477], "datav": 418, "nplot": 418, "ylog": 418, "mit": [419, 437, 448, 456, 484], "licens": [419, 437, 450, 494, 498], "thank": [419, 437], "github": [419, 437, 446, 448, 455, 456, 484, 485, 487, 494, 514], "astanin": [419, 437], "anic": 419, "plain": [419, 437, 454, 509], "sun": 419, "696000": 419, "1989100000": 419, "6371": 419, "5973": 419, "moon": 419, "1737": [419, 489], "mar": 419, "3390": 419, "641": 419, "9891e": 419, "firstrow": [419, 437], "headerless": 419, "sex": 419, "alic": 419, "numalign": 419, "stralign": 419, "colglobalalign": [419, 437], "colalign": [419, 437], "coltyp": 419, "headersglobalalign": [419, 437], "headersalign": [419, 437], "behaviour": 419, "intfmt": 419, "floatfmt": 419, "missingv": 419, "spam": 419, "tablefmt": 419, "rst": [419, 437], "tsv": 419, "tabulateformat": [419, 437], "pseudograph": 419, "9999": 419, "451": 419, "pandoc": [419, 446], "simple_t": 419, "emac": 419, "el": 419, "grid_tabl": 419, "restructuredtext": 419, "42992e1": 419, "429920": 419, "disablenumpars": 419, "grain": 419, "longest": 419, "maxcolwidth": [419, 437], "john": 419, "maxheadercolwidth": [419, 437], "showindex": 419, "rowalign": 419, "psql": 419, "initial_ind": 419, "subsequent_ind": 419, "expand_tab": 419, "replace_whitespac": 419, "fix_sentence_end": 419, "break_long_word": 419, "drop_whitespac": 419, "break_on_hyphen": 419, "tabsiz": 419, "max_lin": 419, "tweak": 419, "_wrap_chunk": 419, "sentenc": [419, 456], "punctuat": 419, "unavoid": 419, "imperfect": 419, "trail": [419, 455], "x0b": 419, "x0c": 419, "em": 419, "dash": 419, "reformat": 419, "paragraph": [419, 454, 456], "expandtab": 419, "__next__": 419, "exhaust": 419, "field_nam": 419, "_asdict": 419, "_replac": 419, "iter1": 419, "iter2": 419, "stopiter": 419, "substitut": [419, 437], "test_hexthird": [420, 421], "test_hexwithhol": [420, 421], "test_hexwithemptyrow": [420, 421], "test_troublesomehexthird": [420, 421], "test_hexfullcornersupspotcheck": [420, 421], "test_hexfullcornersup": [420, 421], "test_hexfullflatsup": [420, 421], "test_hexfullflat": [420, 421], "test_hexsmallflat": [420, 421], "test_flathexbas": [420, 421], "test_method_definit": [420, 422], "test_alternate_usag": [420, 422], "test_property_access": [420, 422], "test_mast": [420, 422], "test_messy_starts_and_stop": [420, 422], "exampleinfomessag": [420, 423], "test_info_decor": [420, 423], "exampleimportantmessag": [420, 423], "test_important_decor": [420, 423], "examplewarnmessag": [420, 423], "test_warn_decor": [420, 423], "examplewarnwhenrootmessag": [420, 423], "test_warn_when_root_decor": [420, 423], "test_expandelementalmassfracstonuclid": [420, 424], "test_expandelementalzeromassfrac": [420, 424], "test_getchem": [420, 424], "test_expandel": [420, 424], "test_applyisotopicsmix": [420, 424], "test_getndensfrommass": [420, 424], "test_getmassfract": [420, 424], "test_calculatenumberdens": [420, 424], "test_getmassingram": [420, 424], "test_normalizenuclidelist": [420, 424], "test_formatmaterialcard": [420, 424], "test_mpiactionfailsonnonexistentpath": [420, 425], "test_except": [420, 425], "test_exception_dis": [420, 425], "test_change_to_nonexisting_fail": [420, 425], "test_change_to_nonexisting_works_forc": [420, 425], "test_temporary_clean": [420, 425], "test_file_retriev": [420, 425], "test_file_retrieval_missing_fil": [420, 425], "test_mpidirectorychang": [420, 426], "test_auto": [420, 427], "test_collision_extens": [420, 427], "test_collision_cr": [420, 427], "test_bool": [420, 427, 437], "test_inclus": [420, 427], "test_bitwis": [420, 427], "test_hash": [420, 427], "test_getitem": [420, 427], "n_fuzzy_draw": [420, 428], "test_hexagon_area": [420, 428], "test_numpositionsinr": [420, 428], "test_rotatedcellcent": [420, 428], "test_rotatedfirstr": [420, 428], "test_rotatefuzzi": [420, 428], "test_positionsuptor": [420, 428], "test_rotatedcellindexerror": [420, 428], "test_rotatedcellorientationerror": [420, 428], "test_indexwithnorot": [420, 428], "test_chunk": [420, 429], "test_split": [420, 429], "test_packingandunpackingbinarystr": [420, 429], "test_packingandunpackinghexstr": [420, 429], "test_sequenceinit": [420, 429], "test_sequ": [420, 429], "test_copysequ": [420, 429], "test_extendsequ": [420, 429], "test_appendsequ": [420, 429], "test_addingsequ": [420, 429], "test_listpivot": [420, 429], "test_arraypivot": [420, 429], "test_average1dwithintoler": [420, 430], "test_average1dwithintoleranceinvalid": [420, 430], "test_converttoslic": [420, 430], "test_efmt": [420, 430], "test_expandrepeatedfloat": [420, 430], "test_findclosest": [420, 430], "test_findnearestvalu": [420, 430], "test_fixthreedigitexp": [420, 430], "test_getfloat": [420, 430], "test_getstepsfromvalu": [420, 430], "test_ismonoton": [420, 430], "test_linearinterpol": [420, 430], "test_minimizescalarfunc": [420, 430], "test_newtonsmethod": [420, 430], "test_parabola": [420, 430], "test_parabolicinterpol": [420, 430], "test_relerr": [420, 430], "test_resamplestepwiseavg0": [420, 430], "test_resamplestepwiseavg1": [420, 430], "test_resamplestepwiseavg2": [420, 430], "test_resamplestepwiseavg3": [420, 430], "test_resamplestepwiseavg4": [420, 430], "test_resamplestepwiseavg5": [420, 430], "test_resamplestepwiseavg6": [420, 430], "test_resamplestepwiseavg7": [420, 430], "test_resamplestepwisesum0": [420, 430], "test_resamplestepwisesum1": [420, 430], "test_resamplestepwisesum2": [420, 430], "test_resamplestepwisesum3": [420, 430], "test_resamplestepwisesum4": [420, 430], "test_resamplestepwisesum5": [420, 430], "test_resamplestepwisesum6": [420, 430], "test_resamplestepwisesum7": [420, 430], "test_resamplestepwiseavgallnon": [420, 430], "test_resamplestepwiseavgonenon": [420, 430], "test_resamplestepwisesumallnon": [420, 430], "test_resamplestepwisesumonenon": [420, 430], "test_resamplestepwiseavgcomplicatednon": [420, 430], "test_resamplestepwiseavgnparrai": [420, 430], "test_resamplestepwiseavgnparrayaverag": [420, 430], "test_rotatexi": [420, 430], "test_hashfil": [420, 431], "test_deletecach": [420, 431], "test_getcachedfold": [420, 431], "test_makeoutputmanifest": [420, 431], "test_retrieveoutput": [420, 431], "test_tryliteralev": [420, 432], "test_parsevalu": [420, 432], "test_copyorwarnfil": [420, 433], "test_copyorwarndir": [420, 433], "test_separatemoduleandattribut": [420, 433], "test_importcustommodul": [420, 433], "test_moduleandattributeexist": [420, 433], "test_cleanpathnompi": [420, 433], "test_isfilepathnew": [420, 433], "test_isaccess": [420, 433], "test_plotdepthmap": [420, 434], "test_plotassemblytyp": [420, 434], "test_plotblockflux": [420, 434], "test_plothexblock": [420, 434], "test_plotcartesianblock": [420, 434], "test_makeassempatch": [420, 434], "test_retreivingunassignedvalueraiseserror": [420, 435], "test_cannotassignvaluetoimmutableproperti": [420, 435], "test_unlockdoesnotpermitsreassignmentofanimmutableproperti": [420, 435], "test_radar": [420, 436], "test_createplotmetadata": [420, 436], "test_plotaxialprofil": [420, 436], "test_keffvstim": [420, 436], "test_valuevstim": [420, 436], "test_movesvscycl": [420, 436], "test_xshistoryvstim": [420, 436], "test_tabulateformat": [420, 437], "test_iterableofempti": [420, 437], "test_iterableofiter": [420, 437], "test_iterableofiterableshead": [420, 437], "test_iterableofiterablesfirstrow": [420, 437], "test_listoflist": [420, 437], "test_listoflistsfirstrow": [420, 437], "test_listoflistskei": [420, 437], "test_dictlik": [420, 437], "test_numpy2d": [420, 437], "test_numpy2dfirstrow": [420, 437], "test_numpy2dkei": [420, 437], "test_numpyrecordarrai": [420, 437], "test_numpyrecordarraykei": [420, 437], "test_numpyrecordarrayhead": [420, 437], "test_listofnamedtupl": [420, 437], "test_listofnamedtupleskei": [420, 437], "test_listofdict": [420, 437], "test_listofuserdict": [420, 437], "test_listofdictskei": [420, 437], "test_listofuserdictskei": [420, 437], "test_listofdictswithmissingkei": [420, 437], "test_listofdictsfirstrow": [420, 437], "test_listofdictswithdictofhead": [420, 437], "test_listofdictswithlistofhead": [420, 437], "test_listofordereddict": [420, 437], "test_listbyt": [420, 437], "test_tightcouplingexampl": [420, 437], "test_aligncolumndecim": [420, 437], "test_aligncolumndecimalwiththousandsepar": [420, 437], "test_aligncolumndecimalwithincorrectthousandsepar": [420, 437], "test_aligncolumnnon": [420, 437], "test_aligncolumnmultilin": [420, 437], "test_aligncellveriticallyonelineonli": [420, 437], "test_aligncellveriticallytopsingletextmultiplepad": [420, 437], "test_aligncellveriticallycentersingletextmultiplepad": [420, 437], "test_aligncellveriticallybottomsingletextmultiplepad": [420, 437], "test_aligncellveriticallytopmultitextmultiplepad": [420, 437], "test_aligncellveriticallycentermultitextmultiplepad": [420, 437], "test_aligncellveriticallybottommultitextmultiplepad": [420, 437], "test_assortedrareedgecas": [420, 437], "test_buildlin": [420, 437], "test_buildrow": [420, 437], "test_format": [420, 437], "test_ismultilin": [420, 437], "test_multilinewidth": [420, 437], "test_normalizetabulardata": [420, 437], "test_typ": [420, 437], "test_visiblewidth": [420, 437], "test_wraptexttocolwidth": [420, 437], "test_plain": [420, 437], "test_plainheaderless": [420, 437], "test_plainmultilineheaderless": [420, 437], "test_plainmultilin": [420, 437], "test_plainmultilinewithlink": [420, 437], "test_plainmultilinewithemptycel": [420, 437], "test_plainmultilinewithemptycellsheaderless": [420, 437], "test_plainmaxcolwidthautowrap": [420, 437], "test_plainmaxcolwidthautowrapswithsep": [420, 437], "test_maxcolwidthsinglevalu": [420, 437], "test_maxcolwidthpadtailingwidth": [420, 437], "test_maxcolwidthhonordisableparsenum": [420, 437], "test_plainmaxheadercolwidthsautowrap": [420, 437], "test_simpl": [420, 437], "test_simplewithseplin": [420, 437], "test_readmeexamplewithsep": [420, 437], "test_simplemultiline2": [420, 437], "test_simplemultiline2withseplin": [420, 437], "test_simpleheaderless": [420, 437], "test_simpleheaderlesswithseplin": [420, 437], "test_simplemultilineheaderless": [420, 437], "test_simplemultilin": [420, 437], "test_simplemultilinewithlink": [420, 437], "test_simplemultilinewithemptycel": [420, 437], "test_simplemultilinewithemptycellsheaderless": [420, 437], "test_github": [420, 437], "test_gridheaderless": [420, 437], "test_gridmultilineheaderless": [420, 437], "test_gridmultilin": [420, 437], "test_gridmultilinewithemptycel": [420, 437], "test_gridmultilinewithemptycellsheaderless": [420, 437], "test_pretti": [420, 437], "test_prettyheaderless": [420, 437], "test_prettymultilineheaderless": [420, 437], "test_prettymultilin": [420, 437], "test_prettymultilinewithlink": [420, 437], "test_prettymultilinewithemptycel": [420, 437], "test_prettymultilinewithemptycellsheaderless": [420, 437], "test_rst": [420, 437], "test_rstwithemptyvaluesinfirstcolumn": [420, 437], "test_rstheaderless": [420, 437], "test_rstmultilin": [420, 437], "test_rstmultilinewithlink": [420, 437], "test_rstmultilinewithemptycel": [420, 437], "test_rstmultilinewithemptycellsheaderless": [420, 437], "test_nodata": [420, 437], "test_emptydata": [420, 437], "test_nodatawithouthead": [420, 437], "test_emptydatawithouthead": [420, 437], "test_intfmt": [420, 437], "test_emptydatawithhead": [420, 437], "test_floatfmt": [420, 437], "test_floatfmtmulti": [420, 437], "test_colalignmulti": [420, 437], "test_colalignmultiwithseplin": [420, 437], "test_columnglobalandspecificalign": [420, 437], "test_headersglobalandspecificalign": [420, 437], "test_colalignorheadersaligntoolong": [420, 437], "test_floatconvers": [420, 437], "test_missingv": [420, 437], "test_missingvalmulti": [420, 437], "test_columnalign": [420, 437], "test_dictlikewithindex": [420, 437], "test_listoflistswithindex": [420, 437], "test_listoflistswithindexwithseplin": [420, 437], "test_listoflistswithsuppliedindex": [420, 437], "test_listoflistswithindexfirstrow": [420, 437], "test_disablenumparsedefault": [420, 437], "test_disablenumparsetru": [420, 437], "test_disablenumparselist": [420, 437], "test_fsearch": [420, 438], "test_fsearchtext": [420, 438], "test_resolveinclud": [420, 438], "test_resolveincludes_stringio": [420, 438], "test_findinclud": [420, 438], "textstream": [420, 438], "test_readfil": [420, 438], "test_readfilewithpattern": [420, 438], "test_issuewarningonfindingtext": [420, 438], "test_raiseerroronfindingtext": [420, 438], "test_consumelin": [420, 438], "test_gettrianglearea": [420, 439], "test_checkifpointisintriangl": [420, 439], "test_checkifpointisintriangle2": [420, 439], "test_gettc": [420, 440], "test_gettk": [420, 440], "test_gettf": [420, 440], "test_pressure_convert": [420, 440], "test_gettmev": [420, 440], "test_gettemperatur": [420, 440], "test_convertxtopasc": [420, 440], "test_sanitizeangl": [420, 440], "test_getxylineparamet": [420, 440], "test_getfilesha1hash": [420, 441], "test_getfilesha1hashdir": [420, 441], "test_mergeabledictionari": [420, 441], "test_createformattedstrwithdelimit": [420, 441], "test_capstrlen": [420, 441], "test_list2str": [420, 441], "test_slantsplit": [420, 441], "test_prependtolist": [420, 441], "test_plotmatrix": [420, 441], "test_classesinhierarchi": [420, 441], "test_safecopi": [420, 441], "test_safemov": [420, 441], "test_safemovedir": [420, 441], "simplecyclesset": [420, 441], "powerfractionsdetailedsolut": [420, 441], "powerfractionssimplesolut": [420, 441], "cyclenamesdetailedsolut": [420, 441], "cyclenamessimplesolut": [420, 441], "availabilityfactorsdetailedsolut": [420, 441], "availabilityfactorssimplesolut": [420, 441], "steplengthsdetailedsolut": [420, 441], "steplengthssimplesolut": [420, 441], "cyclelengthsdetailedsolut": [420, 441], "cyclelengthssimplesolut": [420, 441], "burnstepsdetailedsolut": [420, 441], "burnstepssimplesolut": [420, 441], "nodespercycledetailedsolut": [420, 441], "nodespercyclesimplesolut": [420, 441], "maxburnstepsdetailedsolut": [420, 441], "maxburnstepssimplesolut": [420, 441], "test_hasburnup": [420, 441], "test_getnodespercycl": [420, 441], "test_getcyclenodefromcumulativestep": [420, 441], "test_getcyclenodefromcumulativenod": [420, 441], "test_getprevioustimenod": [420, 441], "test_getcumulativenodenum": [420, 441], "spot": 421, "chop": 421, "isotopc": 424, "succe": 425, "cohort": 427, "doesnt": 427, "fuzzi": 428, "invari": 428, "uneven": 430, "propereti": 435, "smoke": 436, "userdict": 437, "_align_column": 437, "is_multilin": 437, "multilin": 437, "celltext": 437, "_buildlin": 437, "_buildrow": 437, "_format": 437, "_ismultilin": 437, "_multilinewidth": 437, "_normalizetabulardata": 437, "_type": 437, "_visiblewidth": 437, "_wraptexttocolwidth": 437, "autowrap": 437, "partli": 437, "tail": [437, 509], "disable_parsenum": 437, "honor": [437, 507], "stringio": [438, 442, 487], "nthi": 438, "ncan": 438, "nfile": 438, "nx": [438, 492], "checkifpointisintrinagl": 439, "barycentriccheckifpointisintriangl": 439, "pascal": [440, 444], "dog": 441, "ferret": 441, "r2": [441, 507], "r1": 441, "03333333333333333": 441, "06666666666666667": 441, "10000000000000002": 441, "eedd": 442, "23e10": 442, "23ee10": 442, "23d10": 442, "23e": 442, "213423": 442, "2342": 442, "023": [442, 492], "relativeto": 442, "textiobas": 442, "ruamel": 442, "prohibit": 442, "drawback": 442, "underpin": 442, "alias": 442, "monkei": 442, "stackoverflow": 442, "44910886": 442, "pyyaml": [442, 487], "chunck": 442, "somefil": 442, "occurr": 442, "_searchfor": 442, "inidc": 442, "occurec": 442, "highmem": 442, "rewind": 442, "checkforerror": 442, "killon": 442, "textflag": 442, "vertici": 443, "heron": 443, "coordind": 443, "27s_formula": 443, "barycentr": 443, "totolog": 443, "blogspot": 443, "fahrenheit": 444, "tempunit": 444, "mmhg": 444, "pbar": 444, "patm": 444, "atomspher": 444, "sphinx": [446, 456, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 494, 500], "restructedtext": 446, "repositori": [446, 456], "hyperlink": 446, "virtual": [446, 484, 492], "pip": [446, 448, 484], "graphviz": 446, "latex": [446, 480], "miktex": 446, "imagemagick": 446, "_build": 446, "host": 446, "rsync": 446, "ahv": 446, "intersphinx": 446, "intersphinx_map": 446, "sphinxcontrib": 446, "workflow": [446, 450, 454, 456, 494], "apidoc_extra_arg": 446, "sphx_glr_galleri": 446, "highlight": 446, "neat": 446, "nbsphinx": 446, "nbconvert": 446, "clearoutputpreprocessor": 446, "inplac": 446, "mynotebook": 446, "verb": 447, "joi": 447, "armi": [447, 448, 449, 450, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 485, 491, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514], "sampleentrypoint": 447, "conf_cycle_length": 447, "conf_burn_step": 447, "store_tru": 447, "inputcas": 447, "post_process": 447, "settingsfil": 447, "pythonpath": [447, 485, 494, 514], "codebas": [448, 507], "publicli": 448, "regul": 448, "annot": [448, 480], "fork": 448, "guidanc": [448, 451, 456], "bot": 448, "agreement": 448, "publish": 448, "synopsi": 448, "pyproject": [448, 484, 487, 489, 494], "toml": [448, 484, 487, 489, 494], "superce": [448, 484], "apach": [448, 456, 484, 498], "gpl": [448, 456, 484], "bsd": [448, 456, 484], "explor": [449, 460, 467, 482, 493, 495, 497, 500], "spectral": 449, "heavili": [449, 456], "seen": [449, 456, 484, 494, 505, 507, 508], "guid": [449, 450, 484, 485, 498, 499, 513, 514], "environment": [449, 455, 485, 514], "former": [449, 513], "quasistat": 449, "promin": [449, 494], "softwaretest": 449, "orificedoptim": 449, "orific": [449, 502], "alchemylit": 449, "alchemi": 449, "subchan": 449, "launch": 449, "fire": [449, 452, 484], "teach": 450, "audienc": 450, "scientist": 450, "contributor": [450, 484], "black": [450, 480, 487], "ruff": [450, 451, 468, 478, 487, 488, 489], "nake": 450, "envelop": 451, "proprietari": [451, 477, 484, 507], "ship": 451, "perus": 451, "deeper": 451, "feel": [451, 494], "overli": [451, 498], "familiar": [451, 455, 485, 514], "chose": 451, "complain": [451, 487], "guidelin": [451, 455], "iceberg": 451, "cohes": 451, "plug": [451, 484], "Such": [451, 456, 507], "_pm": [451, 494], "plugina": 451, "pluginb": 451, "fear": 452, "mpi_rank": 452, "comm": 452, "proc0": 452, "proc1": 452, "proc2": 452, "proc3": 452, "val3": 452, "farm": 452, "worklist": 452, "_i": [452, 456], "unchunk": 452, "reassembl": 452, "mpi_exampl": 452, "v4": 452, "worklistloadbalanc": 452, "myvalstoadd": 452, "num1": 452, "num2": 452, "allresultsloadbalanc": 452, "allresult": 452, "5f": [452, 454], "transmiss": 452, "surviv": [452, 507], "someinterfac": 452, "interactevernod": 452, "bcastact": 452, "aresult": 452, "someparam": 452, "somefunct": 452, "opt": 452, "someset": 452, "distrib": 452, "extractblockresult": 452, "whatact": 452, "generatemyobject": 452, "depletionmatrix": [452, 503], "burnmatrix": [452, 503], "computation": 452, "reasonbli": 453, "stat": 453, "gprof2dot": 453, "invalu": 453, "graphvi": 453, "pstat": 453, "mystatsfil": 453, "tpng": 453, "mydesiredimagenam": 453, "cornerston": 454, "creategeneralreportcont": 454, "blueprintcont": 454, "getendoflifecont": 454, "imagin": 454, "dicionari": 454, "scene": [454, 495, 498], "__get__": 454, "childcont": 454, "prose": 454, "enclos": 454, "bdesign": 454, "combat": 454, "currentt": 454, "overview": [454, 484, 507], "comprehensive_report": 454, "tablelist": 454, "outputfileextens": [454, 507], "mwt": [454, 498], "0e6": [454, 492], "similarili": 454, "conf_boundari": 454, "conf_neutronics_kernel": 454, "conf_fp_model": 454, "assembly_area": 454, "sup": 454, "beg": 454, "mayb": [454, 494, 513], "overdo": 454, "sole": 454, "neutronicssect": 454, "reportconst": 454, "neutronics_sect": 454, "keff_plot": 454, "thier": 454, "subpart": 455, "402": [455, 470, 481], "nqa": 455, "shall": 455, "clariti": [455, 470, 492], "theme": 455, "concis": [455, 457, 482, 500], "deviat": 455, "justifi": 455, "justif": 455, "consult": 455, "formatt": 455, "amaz": 455, "linter": [455, 487], "setabl": 455, "password": 455, "fragil": 455, "nigh": 455, "debugg": 455, "annoy": 455, "userbas": 455, "camelcas": [455, 484, 489], "hassl": 455, "correlationmatrix": 455, "prefac": 455, "underscor": 455, "_": [455, 485, 492, 497, 510, 514], "pronounc": 455, "acronym": 455, "understood": 455, "expert": 455, "pascalcas": 455, "diskio": 455, "iooper": 455, "renderhtml": 455, "test_": 455, "packagenam": 455, "modulenam": 455, "speed_of_light_in_meters_per_second": 455, "_one_over_pi": 455, "dosomeact": 455, "_dosomeact": 455, "_assembli": 455, "linearheatgenerationr": 455, "_unuseddescript": 455, "repetiti": 455, "harderd": 455, "runnabl": 455, "modern": [455, 484], "laptop": [455, 484], "pyplot": [455, 464, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 492, 495, 496, 499], "sin": 455, "articl": 455, "explain": [455, 456, 509], "zerodivisionerror": 455, "floatingpointerror": 455, "paradigm": 455, "json": 455, "strict": [455, 487, 489], "relic": 455, "fixm": 455, "xxx": 455, "stranger": 456, "voic": 456, "tens": 456, "oh": 456, "chapter": 456, "discourtesi": 456, "busi": 456, "polish": [456, 484], "draft": [456, 488], "thumb": 456, "lint": [456, 487, 488], "somebodi": 456, "bread": 456, "crumb": 456, "breadcrumb": 456, "minor": [456, 486], "conf": 456, "install_requir": 456, "abstractli": 456, "extras_requir": 456, "strictli": 456, "bump": [456, 480], "revv": 456, "nrc": 456, "sanction": 456, "deserv": 456, "admin": [456, 507], "privileg": 456, "ui": 456, "die": 456, "branchverbos": [456, 507, 509], "visibl": 456, "halt": 456, "happili": 456, "silli": 456, "wick": 456, "000": [456, 492, 497], "explanatori": [457, 482, 500], "download": [462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 485, 494, 498, 499, 514], "pervas": 462, "m1": 462, "40090": 462, "35498695e": 462, "40091": 462, "31641456e": 462, "40092": 462, "11832896e": 462, "40094": 462, "13332690e": 462, "40096": 462, "82584320e": 462, "92234": 462, "00000000e": 462, "36147243e": 462, "92236": 462, "92238": 462, "48425449e": 462, "93237": 462, "93238": 462, "94236": 462, "94238": 462, "94240": 462, "94241": 462, "94242": 462, "95241": 462, "95242": 462, "95243": 462, "96242": 462, "96243": 462, "96244": 462, "96245": 462, "96246": 462, "96247": 462, "m2": 462, "11023": 462, "21665718e": 462, "m3": 462, "67941747e": 462, "14028": 462, "78629407e": 462, "14029": 462, "92249968e": 462, "14030": 462, "26729800e": 462, "23050": 462, "79003816e": 462, "23051": 462, "70922523e": 462, "24050": 462, "52833976e": 462, "24052": 462, "73245259e": 462, "24053": 462, "90190013e": 462, "24054": 462, "46479253e": 462, "25055": 462, "19738893e": 462, "26054": 462, "09816265e": 462, "26056": 462, "43323879e": 462, "26057": 462, "48571542e": 462, "26058": 462, "97721449e": 462, "28058": 462, "94209415e": 462, "28060": 462, "13328336e": 462, "28061": 462, "92675527e": 462, "28062": 462, "57051128e": 462, "28064": 462, "00190823e": 462, "42092": 462, "13437638e": 462, "42094": 462, "44696641e": 462, "42095": 462, "65358976e": 462, "42096": 462, "01896213e": 462, "42097": 462, "59119235e": 462, "42098": 462, "16005724e": 462, "42100": 462, "62965260e": 462, "74182": 462, "66064130e": 462, "74183": 462, "97674630e": 462, "74184": 462, "23253002e": 462, "74186": 462, "92724649e": 462, "m4": 462, "68566498e": 462, "78937437e": 462, "92406371e": 462, "26832899e": 462, "79556212e": 462, "71142929e": 462, "53202374e": 462, "73955678e": 462, "90995571e": 462, "46679773e": 462, "20080367e": 462, "10149666e": 462, "43847248e": 462, "48692411e": 462, "97882303e": 462, "94448766e": 462, "13420533e": 462, "93076337e": 462, "57178896e": 462, "00516393e": 462, "14018048e": 462, "45058419e": 462, "65981625e": 462, "02548587e": 462, "59492746e": 462, "16100100e": 462, "63341900e": 462, "66361937e": 462, "97835446e": 462, "23597335e": 462, "93044146e": 462, "m5": 462, "m6": 462, "m7": 462, "sphinx_gallery_thumbnail_path": 462, "logo": 462, "_o": [462, 463], "bfuel": [462, 463], "ndensbybas": 462, "den": 462, "join": [462, 480], "minut": [462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480], "483": [462, 465], "run_blockmcnpmaterialcard": [462, 465], "bcontrol": 463, "589": [463, 465], "run_hexblocktorzconvers": [463, 465], "sphinx_gallery_thumbnail_numb": [464, 471], "thetamesh": 464, "519": [464, 465], "run_hexreactortorz": [464, 465], "591": 465, "gallery_analysi": 465, "sphx_glr_gallery_framework_run_fuelmanag": [467, 481, 482, 500], "assess": 468, "23641": 468, "0189566": 468, "0764606": 468, "553986": 468, "114187": 468, "233214": 468, "0189313": 468, "557207": 468, "234575": 468, "0189824": 468, "0766673": 468, "555588": 468, "0190348": 468, "0768788": 468, "55349": 468, "238847": 468, "0190871": 468, "07709": 468, "550789": 468, "242019": 468, "0191381": 468, "0772959": 468, "54736": 468, "246067": 468, "0191865": 468, "0774913": 468, "543069": 468, "264995": 468, "0193035": 468, "0779642": 468, "52355": 468, "noqa": [468, 478], "e402": [468, 478], "writeinitialvolumefract": 468, "plotvolfracswithcomponenttemp": 468, "uniformtemp": 468, "componentstomodifi": 468, "initialvol": 468, "relativevol": 468, "uniformtempsinc": 468, "subplot": [468, 470, 472, 477, 480], "set_titl": [468, 472, 477, 480], "set_ylabel": [468, 480], "set_xlabel": [468, 477, 480], "252": [468, 481, 494], "run_blockvolumefract": [468, 481], "xyc": [469, 496], "zip": [469, 470, 473, 474, 485, 496, 499, 514], "marker": [469, 496], "run_chartofnuclid": [469, 481], "isoaa_path": [470, 475, 476], "_addflux": 470, "createdummyreactor": 470, "allrat": 470, "ratedata": 470, "ratelabel": 470, "nucrat": 470, "arang": [470, 477, 492, 494, 513], "set_xtick": [470, 477], "set_xticklabel": [470, 477], "axvlin": 470, "set_xlim": [470, 472, 480], "yscale": [470, 475], "run_computereactionr": [470, 481], "demo": [471, 480, 484, 497], "139731422458016": 471, "reftestcartesian": 471, "cosin": 471, "candidateassem": 471, "969": [471, 481], "run_fuelmanag": [471, 481], "mpatch": [472, 480], "patchcollect": [472, 480], "poli": 472, "set_aspect": [472, 480], "set_axis_off": 472, "hex_i": 472, "va": [472, 480], "regularpolygon": 472, "numvertic": 472, "fc": [472, 499], "white": 472, "add_collect": [472, 480], "margin": [472, 484], "bbox": 472, "get_datalim": 472, "transdata": 472, "xmin": 472, "xmax": 472, "set_ylim": [472, 480], "ymax": 472, "run_grids1_hex": [472, 481], "cartesian_grid": 473, "add_subplot": [473, 474], "run_grids2_cartesian": [473, 481], "linspac": [474, 495, 497], "rz_grid": 474, "run_grids3_rzt": [474, 481], "anl33": [475, 507], "xscale": 475, "438": [475, 481], "run_isotx": [475, 481], "inelasticscatt": 476, "n2nscatter": 476, "345": [476, 481], "run_isotxs2_matrix": [476, 481], "max_z": 477, "nummat": 477, "idx": 477, "indexerror": 477, "im": 477, "imshow": 477, "ylgn": 477, "set_ytick": 477, "set_yticklabel": 477, "run_materi": [477, 481], "traceabl": 478, "139731399309152": 478, "buildcas": 478, "buildcompon": 478, "blockdesign": [478, 497], "buildblock": 478, "assemdesign": 478, "buildassembli": 478, "buildgrid": 478, "systemdesign": 478, "buildsystem": 478, "isothermal_temperature_in_c": 478, "508": 478, "5842": 478, "14224": 478, "72644": 478, "0109": 478, "6205": 478, "01420": 478, "cname": 478, "fuelbock": 478, "reflectorblock": 478, "fuelassem": [478, 513], "reflectorassem": 478, "coregrid": 478, "481": [478, 481], "run_programmaticreactordefinit": [478, 481], "139731451980000": 479, "139731459821776": 479, "879": [479, 481], "run_reactorfacemap": [479, 481], "shortcut": 480, "bateman": 480, "plotnuc": 480, "ry": 480, "get_xi": 480, "cx": 480, "get_width": 480, "cy": 480, "get_height": 480, "plotal": 480, "xlim": 480, "ylim": 480, "xp": 480, "yp": 480, "deeppink": 480, "orang": 480, "arrowprop": 480, "shrink": 480, "rxntype": 480, "atan": 480, "grei": 480, "facecolor": 480, "mistyros": 480, "edgecolor": 480, "zoom": 480, "run_transmutationmatrix": [480, 481], "815": 481, "gallery_framework": 481, "megawatt": 483, "kilogram": 483, "mwd": [483, 503, 504], "radionuclid": [483, 503, 505], "fima": [483, 502, 503, 504, 505, 507], "thin": 483, "imped": 483, "wastag": [483, 484, 503, 505, 507], "predomin": 483, "todai": [483, 484], "gass": [483, 498], "twr": [483, 484], "travel": [483, 484], "wave": [483, 484], "breed": [483, 503, 505], "advantag": [483, 484], "fingertip": [484, 498], "profession": 484, "llc": [484, 498], "compani": 484, "hub": 484, "spoke": 484, "specialist": 484, "acquir": 484, "first_time_contributor": 484, "prerequisit": [484, 506], "launcher": 484, "tour": 484, "nuclei": 484, "energet": 484, "induc": [484, 510], "withdraw": 484, "postul": 484, "earthquak": 484, "eniac": 484, "1940": [484, 490], "toss": 484, "experiment": [484, 499], "surprisingli": 484, "port": 484, "specialti": 484, "born": 484, "eclect": 484, "uncoupl": 484, "dispatch": 484, "multiobject": 484, "Its": [484, 494, 507], "labor": 484, "focu": [484, 513], "seamless": 484, "green": [484, 499], "skelet": 484, "schemat": [484, 507], "subchannel": [484, 498, 507], "cfd": [484, 507], "curat": 484, "wall": 484, "orif": [484, 503, 507], "electr": [484, 512], "creativ": [484, 498], "graduat": 484, "undergradu": 484, "greatli": [484, 486, 487], "uncommon": 484, "tedium": 484, "fftf": [484, 507], "perfect": 484, "wing": 484, "seattl": 484, "mission": 484, "intertwin": 484, "secreci": 484, "risk": 484, "entiti": 484, "hypothes": 484, "worldwid": 484, "shakedown": 484, "fund": 484, "predominantli": 484, "microsoft": 484, "flavor": 484, "realiz": 484, "mail": 484, "broadli": 484, "phenix": 484, "bf": 484, "acceler": 484, "trademark": 484, "holder": 484, "copyright": [484, 498], "2024": [484, 488, 489, 490, 492, 507], "complianc": [484, 498], "warranti": [484, 498], "touran": 484, "nichola": 484, "2017": 484, "518": 484, "526": 484, "eng": 484, "016": 484, "glossari": 484, "python3": [485, 514], "pip3": [485, 514], "vv": [485, 514], "navig": [485, 514], "venv": [485, 501, 514], "deactiv": [485, 507, 514], "bat": [485, 514], "sudo": [485, 514], "apt": [485, 514], "libopenmpi": [485, 514], "ssh": [485, 514], "click": [485, 492, 507, 514], "bashrc": [485, 514], "____": [485, 492, 497, 514], "__": [485, 492, 497, 514], "congrat": [485, 514], "wxpython": [485, 514], "websit": [485, 514], "2021": [486, 487], "vestigi": 486, "detailassemsbybolloc": 486, "materialclassnam": 486, "armitestbas": 486, "dumplocationsnapshot": 486, "obviat": 486, "redund": [486, 487], "isannular": 486, "doth": [486, 507], "armiabsdirfromnam": 486, "delat": 486, "addcompon": 486, "constist": 486, "latticefil": 486, "diment": 486, "pympler": 486, "demot": 486, "2023": 487, "1383": 487, "getmasterc": 487, "setmasterc": 487, "1399": 487, "1336": 487, "1349": 487, "1345": 487, "1355": 487, "1335": 487, "1395": 487, "sha1": 487, "1334": 487, "1409": 487, "gh": 487, "1341": 487, "avgfueltemp": [487, 503], "1362": 487, "1347": 487, "1396": 487, "_getnuctemphelp": 487, "1363": 487, "_processinclud": 487, "1333": 487, "1342": 487, "1280": 487, "1296": 487, "1288": 487, "1294": 487, "1265": 487, "1320": 487, "1183": 487, "1299": 487, "1277": 487, "drastic": 487, "1282": 487, "1275": 487, "density3": 487, "1163": 487, "1274": 487, "hcfcoretyp": 487, "1179": 487, "1248": 487, "1239": 487, "assemflagstoskipaxialexpans": 487, "1235": 487, "1204": 487, "1219": 487, "1218": 487, "1227": 487, "dctype": 487, "1228": 487, "1226": 487, "1229": 487, "createrepresentativeblocksfromexistingblock": 487, "1217": 487, "priorit": 487, "1237": 487, "1230": 487, "1238": 487, "1256": 487, "1257": 487, "1258": 487, "1270": 487, "1213": 487, "1216": 487, "1206": 487, "1225": 487, "1062": 487, "froze": 487, "1035": 487, "955": 487, "962": 487, "4614": [487, 496], "998": 487, "overhaul": 487, "loosecoupl": 487, "1033": 487, "c2n1": 487, "952": 487, "959": 487, "fuelcladlock": [487, 503], "1038": 487, "1022": 487, "1047": [487, 492], "1042": 487, "1086": 487, "1098": 487, "uniformmeshconvert": 487, "mapper": 487, "1108": 487, "1165": 487, "cyclesskiptightcouplinginteract": 487, "referenceblockaxialmesh": [487, 505], "980": 487, "deadelin": 487, "barrier": 487, "1046": 487, "1067": 487, "1118": 487, "992": 487, "1168": 487, "1129": 487, "magnessium": 487, "1126": 487, "1128": 487, "1131": 487, "1150": 487, "1149": 487, "1199": 487, "1178": 487, "1185": 487, "2022": [487, 490], "coveragerc": [487, 489], "924": 487, "932": 487, "922": [487, 492, 498], "943": 487, "942": 487, "fastflux": [487, 498, 503], "_swapfluxparam": 487, "665": 487, "settingsrul": 487, "872": 487, "__repr__": 487, "stationaryblock": 487, "stationaryblockflag": [487, 507], "isoxx": 487, "getreac": 487, "rotatepin": [487, 490], "855": 487, "_applythermalexpans": 487, "completeinitiaload": 487, "secur": 487, "alert": 487, "530": 487, "546": 487, "558": [487, 492], "uml": 487, "weren": 487, "550": 487, "557": 487, "540": 487, "507": [487, 492], "490": 487, "534": 487, "solidifi": 487, "stake": 487, "clarif": 487, "anl116": [487, 507], "multii": 487, "bugfix": 487, "_copyinputshelp": 488, "1416": 488, "1412": 488, "functool": 488, "1466": 488, "incorrectli": 488, "1614": 488, "mandat": 488, "1419": 488, "1438": 488, "downgrad": 488, "polici": 488, "1444": 488, "1665": 489, "1425": 489, "1689": 489, "1729": 489, "1750": 489, "1745": 489, "1726": 489, "1717": 489, "1796": 489, "1650": 489, "1651": 489, "allpositionsinthird": 489, "1655": 489, "getallnuclidesin": 489, "plottriangleflux": 489, "1656": 489, "dochelp": 489, "1662": 489, "convertdatabas": 489, "convertdb": 489, "1658": 489, "buildcommand": 489, "1773": 489, "1671": 489, "extran": 489, "armiojbect": 489, "1667": 489, "getmaxuraniummassenrich": 489, "getpufrac": 489, "getpumass": 489, "getpun": 489, "getzrfrac": 489, "printdens": 489, "rditernum": 489, "1704": 489, "outsidefuelr": 489, "outsidefuelringfluxfr": 489, "doorificedth": 489, "1706": 489, "1659": 489, "_expandcycleandtimenodearg": 489, "1766": 489, "1090": 489, "1649": 489, "1691": 489, "1653": 489, "1751": 489, "1771": 489, "1786": 489, "1713": 489, "1646": 489, "1770": 489, "1692": 489, "1670": 489, "tbd": 490, "1813": 490, "1996": 490, "1891": 490, "1917": 490, "1982": 490, "mcnplibraryvers": [490, 507], "1989": 490, "ingest": 490, "1811": 490, "1943": 490, "1927": 490, "1899": 490, "1846": 490, "1858": 490, "1870": 490, "1945": 490, "1963": 490, "1887": 490, "1949": 490, "1842": 490, "detailednden": [490, 502, 503, 504, 505], "1954": 490, "1990": 490, "bymcc3id": [490, 496], "1895": 490, "1844": 490, "1881": 490, "transpos": 490, "1937": 490, "1912": 490, "1934": 490, "syndbafterwrit": 490, "1968": 490, "buvstim": 490, "1994": 490, "assemblylist": 490, "doseresultsmapp": 490, "1952": 490, "smartlist": 490, "1835": 490, "doubleresolut": 490, "1951": 490, "buildeqringschedul": 490, "1928": 490, "prepsearch": 490, "1845": 490, "skippingxsgen_buchangedlessthantoler": 490, "autogenerateblockgrid": [490, 513], "1947": 490, "mpitaskspernod": 490, "numprocessor": 490, "1958": 490, "breakfuelcomponentsintoindividu": 490, "1831": 490, "1824": 490, "permissionerror": 490, "1857": 490, "1853": 490, "thkernel": [490, 507], "1855": 490, "1828": 490, "1883": 490, "1852": 490, "1925": 490, "1926": 490, "_checkparamconsist": 490, "1822": 490, "axialunitgrid": 490, "1809": 490, "1861": [490, 492], "1920": 490, "cadenc": 491, "v0": 491, "lt": [492, 496, 497], "afci": [492, 494, 497, 498, 501, 513], "haleu": [492, 498], "tru": [492, 498, 507], "fv": 492, "az692": 492, "wed": 492, "dec": 492, "d0a0f84ddd": 492, "29f959e5a4": 492, "5904530cb2": 492, "fuelmanag": [492, 498], "622957b035": 492, "ubuntu": 492, "vendor_id": 492, "authenticamd": 492, "amd": 492, "epyc": 492, "7763": 492, "microcod": 492, "0xffffffff": 492, "mhz": 492, "3241": 492, "kb": 492, "apicid": 492, "fpu": 492, "fpu_except": 492, "cpuid": 492, "wp": 492, "vme": 492, "pse": 492, "tsc": 492, "msr": 492, "pae": 492, "mce": 492, "cx8": 492, "apic": 492, "mtrr": 492, "pge": 492, "mca": 492, "cmov": 492, "pat": 492, "pse36": 492, "clflush": 492, "mmx": 492, "fxsr": 492, "sse": 492, "sse2": 492, "ht": 492, "syscal": 492, "mmxext": 492, "fxsr_opt": 492, "pdpe1gb": 492, "rdtscp": 492, "lm": 492, "constant_tsc": 492, "rep_good": 492, "nopl": 492, "tsc_reliabl": 492, "nonstop_tsc": 492, "extd_apicid": 492, "aperfmperf": 492, "pni": 492, "pclmulqdq": 492, "ssse3": 492, "fma": 492, "cx16": 492, "pcid": 492, "sse4_1": 492, "sse4_2": 492, "movb": 492, "popcnt": 492, "ae": 492, "xsave": 492, "avx": 492, "f16c": 492, "rdrand": 492, "hypervisor": 492, "lahf_lm": 492, "cmp_legaci": 492, "svm": 492, "cr8_legaci": 492, "abm": 492, "sse4a": 492, "misalignss": 492, "3dnowprefetch": 492, "osvw": 492, "topoext": 492, "invpcid_singl": 492, "vmmcall": 492, "fsgsbase": 492, "bmi1": 492, "avx2": 492, "smep": 492, "bmi2": 492, "erm": 492, "invpcid": 492, "rdseed": 492, "adx": 492, "smap": 492, "clflushopt": 492, "clwb": 492, "sha_ni": 492, "xsaveopt": 492, "xsavec": 492, "xgetbv1": 492, "clzero": 492, "xsaveerptr": 492, "rdpru": 492, "arat": 492, "npt": 492, "nrip_sav": 492, "tsc_scale": 492, "vmcb_clean": 492, "flushbyasid": 492, "decodeassist": 492, "pausefilt": 492, "pfthreshold": 492, "v_vmsave_vmload": 492, "umip": 492, "vae": 492, "vpclmulqdq": 492, "rdpid": 492, "fsrm": 492, "sysret_ss_attr": 492, "null_seg": 492, "spectre_v1": 492, "spectre_v2": 492, "spec_store_bypass": 492, "srso": 492, "bogomip": 492, "4890": 492, "tlb": 492, "2560": 492, "4k": 492, "cache_align": 492, "3235": 492, "634": 492, "3195": 492, "057": 492, "3231": 492, "569": 492, "mw": [492, 497, 502, 503, 505], "411": [492, 498, 499], "9995": 492, "140158182410320": 492, "gp": [492, 497, 513], "006": [492, 497], "999999999998449e": [492, 497], "597": [492, 497, 498], "b0000": 492, "b0001": 492, "b0002": 492, "b0004": 492, "045": [492, 507], "b0005": 492, "011": 492, "056": 492, "b0006": 492, "b0007": 492, "018": 492, "b0008": 492, "029": 492, "b0009": [492, 513], "008": [492, 513], "040": [492, 513], "b0010": 492, "010": 492, "051": 492, "b0011": 492, "b0012": 492, "b0013": 492, "024": 492, "b0014": 492, "007": 492, "035": 492, "b0015": 492, "046": 492, "b0016": 492, "b0017": 492, "b0019": 492, "030": 492, "b0020": 492, "041": 492, "b0021": 492, "052": 492, "b0022": 492, "b0023": 492, "b0024": 492, "b0025": 492, "036": 492, "b0026": 492, "047": 492, "b0027": 492, "058": 492, "b0028": 492, "b0029": 492, "b0030": 492, "b0031": 492, "b0032": 492, "042": 492, "b0033": 492, "053": 492, "b0035": 492, "b0036": 492, "b0037": 492, "b0038": 492, "048": 492, "b0039": 492, "059": 492, "b0040": 492, "b0041": 492, "b0042": 492, "b0043": 492, "b0044": 492, "b0045": 492, "054": 492, "b0046": 492, "b0047": 492, "b0048": 492, "b0049": 492, "b0050": 492, "b0051": 492, "b0052": 492, "b0053": 492, "b0055": 492, "b0056": 492, "b0057": 492, "b0058": 492, "b0059": 492, "b0060": 492, "b0061": 492, "b0062": 492, "b0063": 492, "b0064": 492, "b0065": 492, "b0066": 492, "b0067": 492, "b0068": 492, "b0069": 492, "b0070": 492, "b0071": 492, "b0072": 492, "b0073": 492, "b0074": 492, "b0075": 492, "b0076": 492, "b0077": 492, "b0078": 492, "b0079": 492, "b0080": 492, "b0081": 492, "b0082": 492, "014": 492, "b0083": 492, "b0084": 492, "b0085": 492, "b0086": 492, "b0087": 492, "b0088": 492, "013": 492, "b0089": 492, "b0090": 492, "b0091": 492, "b0092": 492, "b0093": 492, "015": 492, "b0094": 492, "b0095": 492, "b0096": 492, "b0097": 492, "b0098": 492, "b0099": 492, "b0100": 492, "b0101": 492, "b0102": 492, "b0103": 492, "b0104": 492, "fe58": 492, "fe57": 492, "ni60": 492, "cr50": 492, "si28": 492, "ni64": 492, "mo97": 492, "si30": 492, "ni62": 492, "mo92": 492, "mo98": 492, "v51": 492, "cr52": 492, "v50": 492, "mo94": 492, "mo96": 492, "ni58": 492, "si29": 492, "cr54": 492, "cr53": 492, "ni61": 492, "mo100": 492, "helic": [492, 498], "dodecagon": 492, "a0005": 492, "a0004": 492, "a0010": 492, "a0016": 492, "a0003": 492, "a0009": 492, "a0015": 492, "a0021": 492, "a0027": 492, "a0002": 492, "a0008": 492, "a0014": 492, "a0020": 492, "a0026": 492, "a0033": 492, "a0039": 492, "a0007": 492, "a0013": 492, "a0019": 492, "a0025": 492, "a0032": 492, "a0038": 492, "a0045": 492, "a0000": 492, "fifth": 492, "fifthassem": 492, "drill": 492, "a0006": 492, "913110": 492, "7780886302": 492, "1615298013245032": 492, "e6": 492, "630279585150355": 492, "press": 492, "5940e": 492, "impt": [492, 497, 509], "271": [492, 498, 513], "6029": [492, 498], "6086118601525807": 492, "447": [492, 498], "6962": [492, 498], "6996347645979837": 492, "0466500": 492, "0455115": 492, "808": [492, 498], "8119863398379357": 492, "0559000": 492, "0561758": 492, "148007667250084": 492, "8888": [492, 498], "8931849738217292": 492, "0808": [492, 498], "08119863398379355": 492, "995619013690193": 492, "787506681749962": 492, "3940000": 492, "3959438": 492, "2160000": 492, "1772467": 492, "midplan": 492, "peakpow": [492, 494], "1e6": [492, 494, 497], "mgfluxbas": [492, 494], "setfakepow": [492, 494], "linalg": [492, 494], "fuelflag": [492, 494], "2121328751081": 492, "283": 492, "72676915791163": 492, "429": 492, "75679542940935": 492, "726": 492, "2065240578604": 492, "1481": 492, "7416753196674": 492, "594": 492, "2890628648304": 492, "832": 492, "7118344145881": 492, "1247": 492, "3666431166173": 492, "2061": 492, "589294063221": 492, "3983": 492, "795411797809": 492, "9068752321263": 492, "781": 492, "8211719174191": 492, "546832731319": 492, "1775": 492, "4675690469703": 492, "3037": 492, "7948251721677": 492, "576": 492, "436766311226": 492, "798": 492, "0792090090622": 492, "1171": 492, "232095330452": 492, "5889992921707": 492, "3298": 492, "9174953243905": 492, "4367663112263": 492, "543": 492, "7674846477125": 492, "736": 492, "7925560723418": 492, "1043": 492, "811476571239": 492, "1559": 492, "086660392669": 492, "2454": 492, "8587995069606": 492, "482": 492, "26958247687014": 492, "628": 492, "2425670515395": 492, "838": 492, "5497047927524": 492, "1141": 492, "6712238490518": 492, "1557": 492, "9644917470105": 492, "501": 492, "16274186391075": 492, "6884827804276": 492, "897": 492, "3713186381708": 492, "1253": 492, "5417832788535": 492, "1774": 492, "0124459802742": 492, "7937693841397": 492, "672": 492, "2615830527569": 492, "918": 492, "8562740000916": 492, "1295": 492, "8684850899372": 492, "1859": 492, "989350727691": 492, "8562740000918": 492, "433": 492, "2686512340821": 492, "547": 492, "5702713630133": 492, "749781243437": 492, "5628571891203": 492, "0693805556527": 492, "453": 492, "75938768776024": 492, "580": 492, "7120147457107": 492, "755": 492, "9623309969782": 492, "993": 492, "8470981807069": 492, "093144979462": 492, "464": 492, "7491657921643": 492, "598": 492, "8342655277754": 492, "786": 492, "9650870342906": 492, "1048": 492, "1321554651122": 492, "1388": 492, "8263886151203": 492, "7120147457109": 492, "8470981807073": 492, "7497812434373": 492, "069380555653": 492, "385": 492, "40733734089025": 492, "28984043160057": 492, "583": 492, "5451425775741": 492, "715": 492, "8005320700539": 492, "859": 492, "8515267335054": 492, "405": 492, "7823467609031": 492, "39119992660204": 492, "631": 492, "5597751814538": 492, "789": 492, "4185339360051": 492, "968": 492, "3266188429413": 492, "419": 492, "07528981152086": 492, "525": 492, "0945662075254": 492, "664": 492, "3581773715332": 492, "841": 492, "335903664775": 492, "624870298122": 492, "78234676090335": 492, "5597751814539": 492, "4185339360054": 492, "3359036647746": 492, "6248702981216": 492, "0940445113585": 492, "435": 492, "6795184040706": 492, "527": 492, "4099165571945": 492, "633": 492, "1389396547851": 492, "743": 492, "2808920676976": 492, "374": 492, "1357488147068": 492, "40437929246855": 492, "0878077962307": 492, "677": 492, "871204505851": 492, "805": 492, "6974218981927": 492, "381": 492, "5754294076418": 492, "467": 492, "5242208618066": 492, "8051751545618": 492, "6944398365334": 492, "0090146000248": 492, "0090146000249": 492, "135748814707": 492, "6974218981929": 492, "8712045058508": 492, "6795184040708": 492, "2808920676978": 492, "13164561512574927": 492, "sodiumbefor": 492, "2f": [492, 495], "sodiumaft": 492, "20241211191739023205": 492, "c00n01": 492, "databaseloc": 492, "dbo": 492, "fro": 492, "909142": 492, "5216630063": 492, "lucki": 492, "neutronicskernel": [492, 507], "brand": 492, "hopefulli": 492, "readi": 494, "shell": [494, 497], "proce": [494, 507], "my_armi_project": 494, "fluxsolv": 494, "thermalsolv": 494, "readm": 494, "quickstart": 494, "exampleapp": 494, "shortli": 494, "mixabl": 494, "__version__": 494, "armi_vers": 494, "myapp_vers": 494, "dummyphysicsplugin": 494, "cobra": 494, "cacophoni": 494, "subphys": 494, "conf_vers": 494, "setversioninset": 494, "fluxinterfac": 494, "thermalinterfac": 494, "facet": 494, "boiler": 494, "myappvers": 494, "nasti": 494, "conf_inlet_temperatur": 494, "inletinc": 494, "conf_outlet_temperatur": 494, "outletinc": 494, "520": 494, "weav": 494, "administr": 494, "gut": 494, "cloud": 494, "tini": 494, "dummyflux": 494, "fuelblock": [494, 513], "topfuelz": 494, "bottomfuelz": 494, "coremidplan": 494, "told": 494, "c_p": 494, "dummyth": 494, "runthermalhydraul": 494, "massflow": 494, "computeidealizedflow": 494, "computeaxialcoolanttemperatur": 494, "tempavg": 494, "coolantprop": 494, "massflowr": 494, "qdot": 494, "mdot": 494, "thcoolantinlett": [494, 502, 503], "thcoolantoutlett": [494, 502, 503], "thcoolantaveraget": [494, 503], "phenomen": 494, "lovingli": 494, "whack": 494, "slash": 494, "materialnamespaceord": [494, 507], "vizual": 494, "510": [494, 507], "lighter": 494, "finicki": 494, "sublass": [494, 510], "userpluginexampl": 494, "userplugin0": 494, "pluginz": [494, 507], "userplugin1": 494, "userplugin2": 494, "thermomechan": 495, "density500": 495, "500c": [495, 508], "006270676074462742": 495, "8752281279010555": 495, "11850119602448178": 495, "l_0": [495, 511], "4f": 495, "0471": 495, "inlin": 495, "uo_2": 495, "creep": 495, "recal": [496, 499], "amu": 496, "nucsbytyp": 496, "4706": 496, "043929425": 496, "u215": 496, "150262e": 496, "00000000000e": 496, "000000e": 496, "u216": 496, "160240e": 496, "50000000000e": 496, "u217": 496, "170244e": 496, "60000000000e": 496, "u218": 496, "218": 496, "180235e": 496, "u219": 496, "219": 496, "190249e": 496, "u220": 496, "220": 496, "200247e": 496, "11110000000e": 496, "u221": 496, "210264e": 496, "u222": 496, "222": 496, "220261e": 496, "70000000000e": 496, "u223": 496, "223": 496, "230277e": 496, "80000000000e": 496, "u224": 496, "224": 496, "240276e": 496, "40000000000e": 496, "u225": 496, "225": 496, "250294e": 496, "90000000000e": 496, "u226": 496, "260293e": 496, "68000000000e": 496, "u227": 496, "227": 496, "270312e": 496, "u228": 496, "228": 496, "280314e": 496, "46000000000e": 496, "u229": 496, "229": 496, "290335e": 496, "48000000000e": 496, "u230": 496, "230": 496, "300339e": 496, "74787200000e": 496, "u231": 496, "231": 496, "310363e": 496, "62880000000e": 496, "u232": 496, "320372e": 496, "17427219965e": 496, "330396e": 496, "02354704590e": 496, "340410e": 496, "74722532676e": 496, "400000e": 496, "u235m": 496, "u23f": 496, "56000000000e": 496, "236": 496, "360456e": 496, "39063206325e": 496, "u237": 496, "370487e": 496, "83372800000e": 496, "380508e": 496, "40996345254e": 496, "927420e": 496, "390543e": 496, "40700000000e": 496, "u240": 496, "400566e": 496, "07600000000e": 496, "u241": 496, "410603e": 496, "u242": 496, "420629e": 496, "00800000000e": 496, "u243": 496, "243": 496, "430674e": 496, "u244": 496, "244": 496, "440679e": 496, "u245": 496, "245": 496, "450708e": 496, "u246": 496, "246": 496, "460702e": 496, "li7": 496, "016004e": 496, "li07": 496, "241000e": 496, "01600439548": 496, "92410004": 496, "940038e": 496, "li3": 496, "030775e": 496, "li03": 496, "li4": 496, "027185e": 496, "li04": 496, "li5": 496, "012538e": 496, "li05": 496, "70924971603e": 496, "015123e": 496, "li06": 496, "590000e": 496, "li8": 496, "022488e": 496, "li08": 496, "39900000000e": 496, "li9": 496, "026789e": 496, "li09": 496, "78300000000e": 496, "li10": 496, "003548e": 496, "li11": 496, "104380e": 496, "75000000000e": 496, "li12": 496, "205378e": 496, "li13": 496, "306117e": 496, "lielement": 496, "standardweight": 496, "940037501798687": 496, "fullfactori": 497, "powermodif": 497, "tracer": 497, "0002": 497, "0003": 497, "10000000": 497, "40000000": 497, "70000000": 497, "100000000": 497, "queu": 497, "cladthicknessmodifi": 497, "componentdesign": 497, "cladmodif": 497, "0004": 497, "inde": [497, 507], "a6": 497, "8250000000000001": 497, "8500000000000001": 497, "875": 497, "cyclelengthmod": 497, "conclus": 497, "ran": 497, "loadsuit": 497, "parametr": 497, "regress": 497, "lastli": 498, "lieu": 498, "crazi": 498, "hotter": 498, "710": 498, "interstiti": [498, 507], "punch": 498, "derivedcompon": 498, "unclad": 498, "breviti": [498, 513], "block_shield": [498, 507], "block_reflector": 498, "777": 498, "block_control": 498, "block_plenum": [498, 507], "88888": 498, "overlai": [498, 507], "paper": 498, "fuel_block": 498, "ic_x": 498, "weirdest": 498, "plena": 498, "trade": 498, "columnar": 498, "307": 498, "370": 498, "efpd": 498, "momentarili": 498, "sampleshuffl": 498, "frontend": 498, "fluenc": [498, 503], "0e23": 498, "violat": [498, 503], "shuffleparamet": 498, "cyclesecond": 498, "seconds_per_dai": 498, "peakfluenc": 498, "fastfluenc": [498, 503], "peakflux": 498, "philosophi": 498, "mistak": [498, 507], "nsc": 499, "00e": 499, "21e": 499, "50e": 499, "80e": 499, "40e": 499, "30e": 499, "63e": 499, "90e": 499, "16e": 499, "05e": 499, "225e": 499, "622e": 499, "70e": 499, "35e": 499, "78e": 499, "apear": 499, "block_uo2": 499, "8190": 499, "fuel_gap_1": 499, "clad_zr": 499, "8360": 499, "9500": 499, "fuel_gap_2": 499, "aluminum": 499, "clad_al": 499, "9700": 499, "0800": 499, "guide_tube_moder": 499, "6800": 499, "fission_chamber_guide_tub": 499, "fission_chamber_mod": 499, "332": 499, "block_mox": 499, "ml": 499, "mm": 499, "mh": 499, "block_mod": 499, "alongsid": 499, "said": [499, 507], "genreport": [499, 507], "fiddl": 499, "yellow": 499, "red": 499, "xi": [499, 510], "yi": 499, "zi": 499, "reftestbas": 501, "powerdecai": [502, 505], "decayheatcalctimesinsecond": 502, "arealpd": [502, 503, 509], "pct": 502, "bulimit": [502, 503], "chargebu": 502, "chargefi": 502, "chargetim": 502, "dust": 502, "dayssincelastmov": 502, "kinf": [502, 503, 505], "maxdpapeak": 502, "nummov": [502, 505], "fi": [502, 503, 504], "interf": [502, 503, 504], "detailednuckei": [502, 503, 504, 505], "unwis": 502, "crcriticalfract": 502, "crcurrentelev": 502, "crinsertedelev": 502, "crrodlength": 502, "crwithdrawnelev": 502, "withdrawn": 502, "thdeltapnograv": 502, "graviti": 502, "thdeltappump": 502, "rise": [502, 503, 505], "thdeltaptot": [502, 503], "thmassflowr": [502, 503], "thlocaldtout": [502, 503], "thlocaldtoutfuel": [502, 503], "thorificezon": [502, 503], "dischargetim": 502, "hcf": [502, 505, 507], "azimesh": 502, "radmesh": 502, "burnupmwdperkg": [503, 504], "fissilefract": 503, "moleshmbolbypin": 503, "newdpa": 503, "accru": 503, "percentbumax": 503, "percentbumaxpinloc": 503, "moleshmnow": 503, "moleshmbol": [503, 504], "masshmbol": [503, 504], "cycleaverageburnmatrix": 503, "envgroupnum": 503, "burat": [503, 504], "buratepeak": 503, "detaileddpa": [503, 505], "detaileddpapeak": 503, "detaileddpar": 503, "displacementx": [503, 513], "displacementi": 503, "heliuminb4c": 503, "powerrx": 503, "nhmatbol": 503, "withregard": 503, "eqregion": 503, "eqcascad": 503, "cascad": [503, 507], "xstypenum": 503, "rxfueldensitycoeffpermass": 503, "\u03b4k": [503, 505], "rxfueltemperaturecoeffpermass": 503, "rxfuelvoidedtemperaturecoeffpermass": 503, "rxcladdensitycoeffpermass": 503, "rxcladtemperaturecoeffpermass": 503, "rxstructuredensitycoeffpermass": 503, "rxstructuretemperaturecoeffpermass": 503, "rxcoolantdensitycoeffpermass": 503, "rxcoolanttemperaturecoeffpermass": 503, "rxfueldensitycoeffpertemp": [503, 505], "rxfueldopplercoeffpertemp": [503, 505], "rxfuelvoideddopplercoeffpertemp": [503, 505], "rxfueldopplerconst": [503, 505], "rxfuelvoideddopplerconst": [503, 505], "rxstructuredopplerconst": [503, 505], "rxcladdopplerconst": [503, 505], "rxfueltemperaturecoeffpertemp": [503, 505], "rxfuelvoidedtemperaturecoeffpertemp": [503, 505], "rxcladdensitycoeffpertemp": [503, 505], "rxcladdopplercoeffpertemp": [503, 505], "rxcladtemperaturecoeffpertemp": [503, 505], "rxstructuredensitycoeffpertemp": [503, 505], "rxstructuredopplercoeffpertemp": [503, 505], "rxstructuretemperaturecoeffpertemp": [503, 505], "rxcoolantdensitycoeffpertemp": [503, 505], "rxcoolanttemperaturecoeffpertemp": [503, 505], "reliabl": 503, "axextennodeheight": 503, "blockbeta": 503, "blockf": 503, "breedratio": 503, "fissiledestroi": 503, "fissilebefor": 503, "substep": [503, 507], "fissileaft": 503, "cladacci": 503, "\u00b5m": [503, 505], "convratio": 503, "crwastag": 503, "acci": 503, "cyclicnerr": 503, "intrinsicsourc": 503, "intrinsicsourcedecai": 503, "mchan": 503, "mreg": 503, "newdpapeak": 503, "percentbupeak": 503, "powershapedelta": 503, "pressurelosscoeff": 503, "hardwar": 503, "thhotchannelcladmidwallt": 503, "midwal": 503, "thhotchannelheattransfercoeff": 503, "film": 503, "thhotchannelcladodt": 503, "thhotchannelcladidt": 503, "thhotchannelfuelodt": 503, "thhotchannelfuelcenterlinet": 503, "centerlin": 503, "th0sigmacladodt": 503, "th2sigmacladodt": 503, "th3sigmacladodt": 503, "th0sigmacladidt": 503, "th2sigmacladidt": 503, "th3sigmacladidt": 503, "thdilationpressur": 503, "dilat": 503, "thtfuelcl": 503, "thtfuelod": 503, "thaveragecladodt": 503, "thaveragecladidt": 503, "thaveragecladtemp": 503, "thaveragegaptemp": 503, "thaverageducttemp": 503, "thcoolantstatict": 503, "thhotchanneloutlett": 503, "degc": 503, "thhotchannel": 503, "gasreleasefract": 503, "bondremov": [503, 507], "cladwastag": 503, "totalcladstrain": 503, "diametr": 503, "axialgrowthpct": 503, "growth": [503, 505, 507], "fppeakfueltemp": 503, "fpavefueltemp": 503, "axmesh": 503, "adjmgflux": 503, "lastmgflux": 503, "mgfluxgamma": 503, "mggammasrc": 503, "gammasrc": 503, "mgfluxsk": 503, "pinmgfluxesadj": 503, "naxialseg": 503, "pinmgfluxesgamma": 503, "axialpowerprofil": 503, "axialpowerprofileneutron": 503, "axialpowerprofilegamma": 503, "betad": 503, "chid": 503, "linpow": 503, "unavail": 503, "linpowbypinneutron": 503, "linpowbypingamma": 503, "reactionr": 503, "reactionstodb": 503, "100kev": 503, "ratebal": 503, "rateextsrc": 503, "ratefisab": 503, "ratefissrc": 503, "rateleak": 503, "leak": 503, "rateparasab": 503, "parasit": 503, "fertil": [503, 505], "rateprodnet": 503, "ratescatin": 503, "ratescatout": 503, "capturepowerfrac": 503, "fluxadj": 503, "fluxadjpeak": 503, "pdensdecai": 503, "fertilebonu": 503, "fisden": 503, "fisdenshom": 503, "fluxgamma": 503, "fluxpeak": 503, "medabs": 503, "medfis": 503, "medflx": 503, "pdensgamma": 503, "pdensneutron": 503, "ppden": 503, "ppdensgamma": 503, "rateab": 503, "fisson": 503, "ratecap": 503, "rateprodn2n": 503, "ratefi": 503, "rateprodfi": 503, "detaileddpathiscycl": 503, "detaileddpapeakr": 503, "dpapeakfromflu": 503, "enrichmentbol": 503, "fastfluxfr": 503, "pdensgener": 503, "pinnden": 504, "pinnum": 504, "zzzaaa": 505, "zzz": 505, "maxassemnum": [505, 512], "crmostvaluableprimaryrodloc": 505, "crmostvaluablesecondaryrodloc": 505, "crworthrequiredprimari": 505, "crworthrequiredsecondari": 505, "crtransientoverpowerworth": 505, "critsearchslop": 505, "doublingtim": 505, "fissilemass": 505, "heavymetalmass": 505, "lastkeff": 505, "loadpaddpaavg": 505, "loadpaddpapeak": 505, "maxcladfcci": 505, "maxdpa": 505, "maxgriddpa": 505, "minutessincestart": 505, "peakgriddpaat60year": 505, "totalintrinsicsourc": 505, "totalintrinsicsourcedecai": 505, "thmaxdeltappump": 505, "thmaxdilationpressur": 505, "thoutlettempid": 505, "pergram": 505, "medabscor": 505, "medfluxcor": 505, "medsrccor": 505, "pkflux": 505, "maxdetaileddpapeak": 505, "maxflux": 505, "adjweightedfissrc": 505, "maxdetaileddpathiscycl": 505, "dpafullwidthhalfmax": 505, "elevationofaclp3cycl": 505, "elevationofaclp7cycl": 505, "rxswing": 505, "maxbuf": 505, "maxbui": 505, "peakkeff": 505, "fastfluxfravg": 505, "leakagefractot": 505, "leakagefracplanar": 505, "leakagefracaxi": 505, "maxpden": 505, "maxpd": 505, "bred": 505, "betacompon": 505, "betadecayconst": 505, "promptneutrongenerationtim": 505, "promptneutronlifetim": 505, "rxfuelaxialexpansioncoeffpertemp": 505, "rxfuelaxialexpansioncoeffperperc": 505, "rxgridplateradialexpansioncoeffpertemp": 505, "rxaclpradialexpansioncoeffpertemp": 505, "rxcontrolroddrivelineexpansioncoeffpertemp": 505, "drivelin": 505, "rxcorewidecoolantvoidworth": 505, "rxspatiallydependentcoolantvoidworth": 505, "boeckeff": 505, "boec": 505, "maxcyclicnerr": 505, "breedingratio": 505, "convratiocor": 505, "absperfiscor": 505, "axialexpansionperc": 505, "fisfrac": 505, "fisratecor": 505, "infin": [505, 510], "refkeff": 505, "loos": 506, "resus": 507, "block_nam": 507, "erron": 507, "excerpt": [507, 509], "003454": 507, "detailassemlocationsbol": 507, "freshfeedtyp": 507, "refsmallreactor": 507, "moduleverbos": [507, 509], "palett": 507, "warrant": 507, "brush": 507, "multiphys": 507, "detailassemnum": 507, "detailallassem": 507, "dk": 507, "kk": 507, "dollar": 507, "cent": 507, "decayconst": 507, "six": [507, 513], "365": 507, "2425": 507, "uptim": [507, 512], "shorthand": 507, "overcom": 507, "emploi": 507, "r5": 507, "ramp": 507, "prolong": 507, "downtim": 507, "unevenli": 507, "buildup": 507, "rerun": 507, "000000": 507, "001002": 507, "loadstyl": 507, "fromdb": 507, "remaind": [507, 511], "frominput": 507, "skipcycl": 507, "makeup": 507, "core_grid": 507, "wit": 507, "elementari": 507, "neglect": 507, "flexibli": 507, "757": 507, "regex": 507, "extrud": 507, "componentnam": 507, "dimensionnam": 507, "label1": 507, "ousid": 507, "905": 507, "burnabl": 507, "fuelgrid": 507, "possess": 507, "buri": 507, "unambigu": 507, "standard_height": 507, "standard_axial_mesh_point": 507, "inner_core_block": 507, "dragger": 507, "defaul": 507, "superset": 507, "79213903298633": 507, "000664847887388523": 507, "182466356404319": 507, "00323253628006144": 507, "705266053783901": 507, "0171714161260001": 507, "00233843050046998": 507, "0831976890804466": 507, "00566266993741259": 507, "rect": 507, "cicl": 507, "downsid": 507, "pitchdefiningcompon": 507, "carbon_flag": 507, "getfactor": 507, "newincom": 507, "oldoutgo": 507, "daisi": 507, "overton": 507, "a3": 507, "a4": 507, "a5": 507, "thusli": 507, "essenc": 507, "peripheri": 507, "bluepint": 507, "watch": 507, "typenum": 507, "numdischarg": 507, "chargeenrich": 507, "defaultfactor": 507, "factorsearchflag": 507, "tout": 507, "acceptableblockareaerror": 507, "assemflagstoskipaxialexpa": 507, "nsion": 507, "assempowsummari": 507, "bureducingassemblyr": 507, "otat": 507, "assemblyrotationstationar": 507, "automaticvariablemesh": 507, "axialexpans": 507, "axialmeshrefinementfactor": 507, "bccoeffici": 507, "extrapolat": 507, "zerosurfaceflux": 507, "zeroinwardcurr": 507, "circularringord": 507, "distancesmart": 507, "circularringpitch": 507, "claddingstrain": 507, "claddingwastag": 507, "copyfilesfrom": 507, "copyfilesto": 507, "coverageconfigfil": 507, "crosssectioncontrol": 507, "dict_k": 507, "ei": 507, "customfuelmanagementindex": 507, "242199": 507, "cyclesskiptightcouplingin": 507, "teract": 507, "dbstorageaftercycl": 507, "debugdb": 507, "debugmems": 507, "deferredinterfacenam": 507, "deferredinterfacescycl": 507, "disableblocktypeexclus": 507, "inxsgener": 507, "01568627": 507, "451e": 507, "dpaxsset": 507, "dpa_ebrii_": 507, "dpa_ebrii_inc600": 507, "dpa_ebrii_incx750": 507, "dpa_ebrii_ht9": 507, "dpa_ebrii_pe16": 507, "dpa_ebrii_inc625": 507, "eigenprob": 507, "epseig": 507, "epsfsavg": 507, "epsfspoint": 507, "eqdirect": 507, "shuf": 507, "existingfixedsourc": 507, "varsrc": 507, "fgremov": 507, "fissiongasyieldfract": 507, "forcedbparam": 507, "nofissionproduct": 507, "infinitelydilut": 507, "explicitfissionp": 507, "roduct": 507, "explicitfissionpr": 507, "oduct": 507, "fuelperformanceengin": 507, "globalfluxact": 507, "gridplatedpaxsset": 507, "groupstructur": 507, "anl9": 507, "anl70": 507, "anl230": 507, "anl703": 507, "anl1041": 507, "anl2082": 507, "armi33": 507, "armi45": 507, "cinder63": 507, "growtofullcoreafterload": 507, "independentvarnam": 507, "infinitedilutecutoff": 507, "initializeburnchain": 507, "jumpringnum": 507, "checkerboard": 507, "levelspercascad": 507, "referencef": 507, "issionprod": 507, "uct": 507, "loadfromdbeverynod": 507, "lowpowerregionfract": 507, "makeallblocklfpsindepend": 507, "minmeshsizeratio": 507, "dp1": 507, "dp2": 507, "minimumfissilefract": 507, "neutronicstyp": 507, "numbermeshperedg": 507, "operatorloc": 507, "outputcacheloc": 507, "plotshufflearrow": 507, "namepl": 507, "reallysmallrun": 507, "removepercycl": 507, "restartneutron": 507, "runlatticephysicsbeforesh": 507, "uffl": 507, "smallrun": 507, "sortreactor": 507, "calul": 507, "grid_pla": 507, "summarizeassemdesign": 507, "tightcouplingmaxnumit": 507, "tightcoup": 507, "lingsettin": 507, "dict_kei": 507, "timelineinclusioncutoff": 507, "tolerateburnupchang": 507, "test_wha": 507, "xsblockrepresent": 507, "fluxweightedaverag": 507, "componentaverage1dslab": 507, "xsbucklingconverg": 507, "xseigenvalueconverg": 507, "mc2v2": 507, "xsscatteringord": 507, "zerooutnuclidesnotindb": 507, "loc1": 507, "loc2": 507, "loc3": 507, "odhot": 508, "id600": 508, "numclad": 508, "cladmat": 508, "savephysicsio": 509, "cxny": 509, "00x00y": 509, "xtra": 509, "traceback": 509, "monitor": 509, "myrun": 509, "mydatabas": 509, "ahist": 509, "filesystem": 509, "endian": 509, "portabl": 509, "supplement": 509, "stroke": 509, "operation": 509, "locationtyp": 509, "comp_typ": 509, "mold": 509, "tricki": 509, "interspers": 509, "thaveragecladtemperatur": 510, "k_": 510, "l2": 510, "_2": 510, "a_": 510, "b_": 510, "mathbf": 510, "quad": 510, "foral": 510, "epsilon_i": 510, "textbf": 510, "_settightcouplingdefault": 510, "easiest": 510, "t_0": 511, "rearrang": 511, "l_1": 511, "t_1": 511, "l_h": 511, "t_h": 511, "t_c": 511, "l_c": 511, "capacityfactor": 512, "lcoe": 512, "levelis": 512, "usd": 512, "kwh": 512, "efeedmt": 512, "efissil": 512, "eswu": 512, "swu": 512, "specifci": 513, "ten": 513, "819": 513, "2046645914880": 513, "4444": 513, "76972338": 513, "coordsfromfuel": 513, "coordsfrompin": 513, "coordsfromblock": 513, "mutli": 513, "leftmost": 513}, "objects": {"": [[0, 0, 0, "-", "armi"]], "armi": [[0, 1, 1, "", "applyAsyncioWindowsWorkaround"], [1, 0, 0, "-", "apps"], [2, 0, 0, "-", "bookkeeping"], [47, 0, 0, "-", "cases"], [61, 0, 0, "-", "cli"], [0, 1, 1, "", "configure"], [77, 0, 0, "-", "conftest"], [78, 0, 0, "-", "context"], [0, 1, 1, "", "disableFutureConfigures"], [0, 1, 1, "", "getApp"], [0, 1, 1, "", "getDefaultPluginManager"], [0, 1, 1, "", "getDefaultPlugins"], [0, 1, 1, "", "getPluginManager"], [0, 1, 1, "", "getPluginManagerOrFail"], [0, 1, 1, "", "init"], [79, 0, 0, "-", "interfaces"], [0, 1, 1, "", "isConfigured"], [0, 1, 1, "", "isStableReleaseVersion"], [80, 0, 0, "-", "materials"], [144, 0, 0, "-", "meta"], [145, 0, 0, "-", "migration"], [152, 0, 0, "-", "mpiActions"], [153, 0, 0, "-", "nucDirectory"], [165, 0, 0, "-", "nuclearDataIO"], [204, 0, 0, "-", "operators"], [213, 0, 0, "-", "physics"], [283, 0, 0, "-", "pluginManager"], [284, 0, 0, "-", "plugins"], [285, 0, 0, "-", "reactor"], [368, 0, 0, "-", "runLog"], [369, 0, 0, "-", "settings"], [383, 0, 0, "-", "tests"], [400, 0, 0, "-", "utils"]], "armi.apps": [[1, 2, 1, "", "App"]], "armi.apps.App": [[1, 3, 1, "", "getParamRenames"], [1, 3, 1, "", "getSettings"], [1, 4, 1, "", "name"], [1, 5, 1, "", "pluginManager"], [1, 3, 1, "", "registerPluginFlags"], [1, 3, 1, "", "registerUserPlugins"], [1, 5, 1, "", "splashText"], [1, 5, 1, "", "version"]], "armi.bookkeeping": [[2, 2, 1, "", "BookkeepingPlugin"], [3, 0, 0, "-", "db"], [20, 0, 0, "-", "historyTracker"], [21, 0, 0, "-", "mainInterface"], [22, 0, 0, "-", "memoryProfiler"], [23, 0, 0, "-", "report"], [33, 0, 0, "-", "snapshotInterface"], [34, 0, 0, "-", "tests"], [38, 0, 0, "-", "visualization"]], "armi.bookkeeping.BookkeepingPlugin": [[2, 3, 1, "", "defineCaseDependencies"], [2, 3, 1, "", "defineEntryPoints"], [2, 3, 1, "", "exposeInterfaces"], [2, 3, 1, "", "getReportContents"], [2, 3, 1, "", "mpiActionRequiresReset"]], "armi.bookkeeping.db": [[3, 2, 1, "", "Database"], [3, 2, 1, "", "Database3"], [3, 2, 1, "", "DatabaseInterface"], [4, 0, 0, "-", "compareDB3"], [3, 1, 1, "", "compareDatabases"], [5, 0, 0, "-", "database"], [6, 0, 0, "-", "database3"], [3, 1, 1, "", "databaseFactory"], [7, 0, 0, "-", "databaseInterface"], [8, 0, 0, "-", "factory"], [9, 0, 0, "-", "jaggedArray"], [10, 0, 0, "-", "layout"], [3, 1, 1, "", "loadOperator"], [11, 0, 0, "-", "passiveDBLoadPlugin"], [12, 0, 0, "-", "permissions"], [13, 0, 0, "-", "tests"], [19, 0, 0, "-", "typedefs"]], "armi.bookkeeping.db.Database": [[3, 3, 1, "", "close"], [3, 5, 1, "", "fileName"], [3, 3, 1, "", "genAuxiliaryData"], [3, 3, 1, "", "genTimeStepGroups"], [3, 3, 1, "", "genTimeSteps"], [3, 3, 1, "", "getAuxiliaryDataPath"], [3, 3, 1, "", "getH5Group"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistoriesByLocation"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "getHistoryByLocation"], [3, 3, 1, "", "getLayout"], [3, 3, 1, "", "grabLocalCommitHash"], [3, 3, 1, "", "hasTimeStep"], [3, 3, 1, "", "isOpen"], [3, 3, 1, "", "keys"], [3, 3, 1, "", "load"], [3, 3, 1, "", "loadBlueprints"], [3, 3, 1, "", "loadCS"], [3, 3, 1, "", "loadGeometry"], [3, 3, 1, "", "loadReadOnly"], [3, 3, 1, "", "mergeHistory"], [3, 3, 1, "", "open"], [3, 3, 1, "", "readInputsFromDB"], [3, 3, 1, "", "splitDatabase"], [3, 3, 1, "", "syncToSharedFolder"], [3, 4, 1, "", "timeNodeGroupPattern"], [3, 5, 1, "", "version"], [3, 5, 1, "", "versionMajor"], [3, 5, 1, "", "versionMinor"], [3, 3, 1, "", "writeInputsToDB"], [3, 3, 1, "", "writeSystemAttributes"], [3, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.Database3": [[3, 4, 1, "", "h5db"]], "armi.bookkeeping.db.DatabaseInterface": [[3, 3, 1, "", "closeDB"], [3, 5, 1, "", "database"], [3, 3, 1, "", "distributable"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "initDB"], [3, 3, 1, "", "interactBOL"], [3, 3, 1, "", "interactDistributeState"], [3, 3, 1, "", "interactEOC"], [3, 3, 1, "", "interactEOL"], [3, 3, 1, "", "interactError"], [3, 3, 1, "", "interactEveryNode"], [3, 3, 1, "", "loadState"], [3, 4, 1, "", "name"], [3, 3, 1, "", "prepRestartRun"], [3, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.compareDB3": [[4, 2, 1, "", "DiffResults"], [4, 2, 1, "", "OutputWriter"], [4, 1, 1, "", "compareDatabases"]], "armi.bookkeeping.db.compareDB3.DiffResults": [[4, 3, 1, "", "addDiff"], [4, 3, 1, "", "addStructureDiffs"], [4, 3, 1, "", "addTimeStep"], [4, 3, 1, "", "nDiffs"], [4, 3, 1, "", "reportDiffs"]], "armi.bookkeeping.db.compareDB3.OutputWriter": [[4, 3, 1, "", "writeln"]], "armi.bookkeeping.db.database": [[5, 2, 1, "", "Database"], [5, 1, 1, "", "collectBlockNumberDensities"], [5, 1, 1, "", "getH5GroupName"], [5, 1, 1, "", "packSpecialData"], [5, 1, 1, "", "unpackSpecialData"]], "armi.bookkeeping.db.database.Database": [[5, 3, 1, "", "close"], [5, 5, 1, "", "fileName"], [5, 3, 1, "", "genAuxiliaryData"], [5, 3, 1, "", "genTimeStepGroups"], [5, 3, 1, "", "genTimeSteps"], [5, 3, 1, "", "getAuxiliaryDataPath"], [5, 3, 1, "", "getH5Group"], [5, 3, 1, "", "getHistories"], [5, 3, 1, "", "getHistoriesByLocation"], [5, 3, 1, "", "getHistory"], [5, 3, 1, "", "getHistoryByLocation"], [5, 3, 1, "", "getLayout"], [5, 3, 1, "", "grabLocalCommitHash"], [5, 4, 1, "", "h5db"], [5, 3, 1, "", "hasTimeStep"], [5, 3, 1, "", "isOpen"], [5, 3, 1, "", "keys"], [5, 3, 1, "", "load"], [5, 3, 1, "", "loadBlueprints"], [5, 3, 1, "", "loadCS"], [5, 3, 1, "", "loadGeometry"], [5, 3, 1, "", "loadReadOnly"], [5, 3, 1, "", "mergeHistory"], [5, 3, 1, "", "open"], [5, 3, 1, "", "readInputsFromDB"], [5, 3, 1, "", "splitDatabase"], [5, 3, 1, "", "syncToSharedFolder"], [5, 4, 1, "", "timeNodeGroupPattern"], [5, 5, 1, "", "version"], [5, 5, 1, "", "versionMajor"], [5, 5, 1, "", "versionMinor"], [5, 3, 1, "", "writeInputsToDB"], [5, 3, 1, "", "writeSystemAttributes"], [5, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.database3": [[6, 2, 1, "", "Database3"]], "armi.bookkeeping.db.database3.Database3": [[6, 4, 1, "", "h5db"]], "armi.bookkeeping.db.databaseInterface": [[7, 2, 1, "", "DatabaseInterface"], [7, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.db.databaseInterface.DatabaseInterface": [[7, 3, 1, "", "closeDB"], [7, 5, 1, "", "database"], [7, 3, 1, "", "distributable"], [7, 3, 1, "", "getHistories"], [7, 3, 1, "", "getHistory"], [7, 3, 1, "", "initDB"], [7, 3, 1, "", "interactBOL"], [7, 3, 1, "", "interactDistributeState"], [7, 3, 1, "", "interactEOC"], [7, 3, 1, "", "interactEOL"], [7, 3, 1, "", "interactError"], [7, 3, 1, "", "interactEveryNode"], [7, 3, 1, "", "loadState"], [7, 4, 1, "", "name"], [7, 3, 1, "", "prepRestartRun"], [7, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[8, 1, 1, "", "databaseFactory"]], "armi.bookkeeping.db.jaggedArray": [[9, 2, 1, "", "JaggedArray"]], "armi.bookkeeping.db.jaggedArray.JaggedArray": [[9, 3, 1, "", "flatten"], [9, 3, 1, "", "fromH5"], [9, 3, 1, "", "tolist"], [9, 3, 1, "", "unpack"]], "armi.bookkeeping.db.layout": [[10, 2, 1, "", "Layout"], [10, 1, 1, "", "replaceNonesWithNonsense"], [10, 1, 1, "", "replaceNonsenseWithNones"]], "armi.bookkeeping.db.layout.Layout": [[10, 3, 1, "", "allSubclasses"], [10, 3, 1, "", "computeAncestors"], [10, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.passiveDBLoadPlugin": [[11, 2, 1, "", "PassThroughYamlize"], [11, 2, 1, "", "PassiveDBLoadPlugin"]], "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize": [[11, 4, 1, "", "attributes"], [11, 3, 1, "", "from_yaml"]], "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin": [[11, 4, 1, "", "SKIP_BP_SECTIONS"], [11, 4, 1, "", "UNKNOWN_PARAMS"], [11, 3, 1, "", "buildParamColl"], [11, 3, 1, "", "defineBlueprintsSections"], [11, 3, 1, "", "defineParameters"]], "armi.bookkeeping.db.permissions": [[12, 2, 1, "", "Permissions"]], "armi.bookkeeping.db.permissions.Permissions": [[12, 4, 1, "", "CREATE_FILE_FIE"], [12, 4, 1, "", "CREATE_FILE_FIE2"], [12, 4, 1, "", "CREATE_FILE_TIE"], [12, 4, 1, "", "DEFAULT"], [12, 4, 1, "", "READ_ONLY_FME"], [12, 4, 1, "", "READ_WRITE_CREATE"], [12, 4, 1, "", "READ_WRITE_FME"], [12, 4, 1, "", "all"], [12, 4, 1, "", "create"], [12, 4, 1, "", "read"], [12, 4, 1, "", "write"]], "armi.bookkeeping.db.tests": [[14, 0, 0, "-", "test_comparedb3"], [15, 0, 0, "-", "test_database3"], [16, 0, 0, "-", "test_databaseInterface"], [17, 0, 0, "-", "test_jaggedArray"], [18, 0, 0, "-", "test_layout"]], "armi.bookkeeping.db.tests.test_comparedb3": [[14, 2, 1, "", "TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3": [[14, 3, 1, "", "test_compareAuxData"], [14, 3, 1, "", "test_compareDatabaseDuplicate"], [14, 3, 1, "", "test_compareDatabaseSim"], [14, 3, 1, "", "test_compareSets"], [14, 3, 1, "", "test_diffResultsBasic"], [14, 3, 1, "", "test_diffSimpleData"], [14, 3, 1, "", "test_diffSpecialData"], [14, 3, 1, "", "test_outputWriter"]], "armi.bookkeeping.db.tests.test_database3": [[15, 2, 1, "", "TestDatabase"], [15, 2, 1, "", "TestDatabaseSmaller"], [15, 2, 1, "", "TestWriteReadDatabase"]], "armi.bookkeeping.db.tests.test_database3.TestDatabase": [[15, 3, 1, "", "makeShuffleHistory"], [15, 3, 1, "", "test_history"], [15, 3, 1, "", "test_load"], [15, 3, 1, "", "test_loadSortSetting"]], "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller": [[15, 3, 1, "", "makeHistory"], [15, 3, 1, "", "test_auxData"], [15, 3, 1, "", "test_computeParents"], [15, 3, 1, "", "test_deleting"], [15, 3, 1, "", "test_fileName"], [15, 3, 1, "", "test_getH5File"], [15, 3, 1, "", "test_grabLocalCommitHash"], [15, 3, 1, "", "test_loadBlueprints"], [15, 3, 1, "", "test_loadCS"], [15, 3, 1, "", "test_loadOperator"], [15, 3, 1, "", "test_mergeHistory"], [15, 3, 1, "", "test_open"], [15, 3, 1, "", "test_prepRestartRun"], [15, 3, 1, "", "test_readInputsFromDB"], [15, 3, 1, "", "test_replaceNones"], [15, 3, 1, "", "test_splitDatabase"], [15, 3, 1, "", "test_writeToDB"]], "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase": [[15, 4, 1, "", "SMALL_YAML"], [15, 3, 1, "", "test_badData"], [15, 3, 1, "", "test_readWriteRoundTrip"]], "armi.bookkeeping.db.tests.test_databaseInterface": [[16, 2, 1, "", "MockInterface"], [16, 2, 1, "", "TestBadName"], [16, 2, 1, "", "TestDatabaseInterface"], [16, 2, 1, "", "TestDatabaseInterfaceBOL"], [16, 2, 1, "", "TestDatabaseReading"], [16, 2, 1, "", "TestDatabaseWriter"], [16, 2, 1, "", "TestStandardFollowOn"], [16, 1, 1, "", "getSimpleDBOperator"]], "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface": [[16, 3, 1, "", "interactEveryNode"], [16, 4, 1, "", "name"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName": [[16, 3, 1, "", "test_badDBName"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface": [[16, 3, 1, "", "test_demonstrateWritingInteractions"], [16, 3, 1, "", "test_distributable"], [16, 3, 1, "", "test_interactEveryNodeReturnTightCoupling"], [16, 3, 1, "", "test_noSyncDbAfterWrite"], [16, 3, 1, "", "test_syncDbAfterWrite"], [16, 3, 1, "", "test_timeNodeLoop_tightCoupling"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL": [[16, 3, 1, "", "test_interactBOL"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading": [[16, 3, 1, "", "test_growToFullCore"], [16, 3, 1, "", "test_growToFullCoreFromFactory"], [16, 3, 1, "", "test_growToFullCoreFromFactoryWithCS"], [16, 3, 1, "", "test_growToFullCoreWithCS"], [16, 3, 1, "", "test_loadReadOnly"], [16, 3, 1, "", "test_readWithoutInputs"], [16, 3, 1, "", "test_readWritten"], [16, 3, 1, "", "test_timesteps"], [16, 3, 1, "", "test_variousTypesWork"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter": [[16, 3, 1, "", "test_getHistory"], [16, 3, 1, "", "test_getHistoryByLocation"], [16, 3, 1, "", "test_metaDataEndFail"], [16, 3, 1, "", "test_metaData_endSuccessfully"], [16, 3, 1, "", "test_writeSystemAttributes"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn": [[16, 3, 1, "", "test_standardRestart"]], "armi.bookkeeping.db.tests.test_jaggedArray": [[17, 2, 1, "", "TestJaggedArray"]], "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray": [[17, 3, 1, "", "test_backwardsCompatible"], [17, 3, 1, "", "test_flatten"], [17, 3, 1, "", "test_roundTrip"], [17, 3, 1, "", "test_roundTripBool"]], "armi.bookkeeping.db.tests.test_layout": [[18, 2, 1, "", "TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout.TestLocationPacking": [[18, 3, 1, "", "test_close"], [18, 3, 1, "", "test_locationPacking"], [18, 3, 1, "", "test_locationPackingOldVersion"], [18, 3, 1, "", "test_locationPackingOlderVersions"]], "armi.bookkeeping.historyTracker": [[20, 2, 1, "", "HistoryTrackerInterface"], [20, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.historyTracker.HistoryTrackerInterface": [[20, 4, 1, "", "DETAILED_ASSEMBLY_FLAGS"], [20, 3, 1, "", "addAllDetailedAssems"], [20, 3, 1, "", "addDetailAssembliesBOL"], [20, 3, 1, "", "addDetailAssembly"], [20, 3, 1, "", "addDetailAssemsByAssemNums"], [20, 3, 1, "", "filterTimeIndices"], [20, 3, 1, "", "getBlockHistoryVal"], [20, 3, 1, "", "getDetailAssemblies"], [20, 3, 1, "", "getDetailBlocks"], [20, 3, 1, "", "getTimeSteps"], [20, 3, 1, "", "getTrackedParams"], [20, 3, 1, "", "interactBOC"], [20, 3, 1, "", "interactBOL"], [20, 3, 1, "", "interactEOL"], [20, 4, 1, "", "name"], [20, 3, 1, "", "preloadBlockHistoryVals"], [20, 3, 1, "", "unloadBlockHistoryVals"], [20, 3, 1, "", "writeAssemHistory"]], "armi.bookkeeping.mainInterface": [[21, 2, 1, "", "MainInterface"], [21, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.mainInterface.MainInterface": [[21, 3, 1, "", "cleanARMIFiles"], [21, 3, 1, "", "cleanLastCycleFiles"], [21, 3, 1, "", "interactBOC"], [21, 3, 1, "", "interactBOL"], [21, 3, 1, "", "interactEOL"], [21, 3, 1, "", "interactEveryNode"], [21, 4, 1, "", "name"]], "armi.bookkeeping.memoryProfiler": [[22, 2, 1, "", "InstanceCounter"], [22, 2, 1, "", "KlassCounter"], [22, 2, 1, "", "MemoryProfiler"], [22, 2, 1, "", "PrintSystemMemoryUsageAction"], [22, 2, 1, "", "ProfileMemoryUsageAction"], [22, 2, 1, "", "SystemAndProcessMemoryUsage"], [22, 1, 1, "", "describeInterfaces"], [22, 1, 1, "", "getCurrentMemoryUsage"], [22, 1, 1, "", "getTotalJobMemory"]], "armi.bookkeeping.memoryProfiler.InstanceCounter": [[22, 3, 1, "", "add"]], "armi.bookkeeping.memoryProfiler.KlassCounter": [[22, 3, 1, "", "countObjects"]], "armi.bookkeeping.memoryProfiler.MemoryProfiler": [[22, 3, 1, "", "checkForDuplicateObjectsOnArmiModel"], [22, 3, 1, "", "displayMemoryUsage"], [22, 3, 1, "", "getReferrers"], [22, 3, 1, "", "interactBOL"], [22, 3, 1, "", "interactEOL"], [22, 3, 1, "", "interactEveryNode"], [22, 4, 1, "", "name"], [22, 3, 1, "", "printCurrentMemoryState"]], "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction": [[22, 3, 1, "", "invokeHook"], [22, 5, 1, "", "maxProcessMemoryInMB"], [22, 5, 1, "", "minProcessMemoryInMB"], [22, 3, 1, "", "printUsage"]], "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction": [[22, 3, 1, "", "invokeHook"]], "armi.bookkeeping.report": [[24, 0, 0, "-", "data"], [25, 0, 0, "-", "html"], [26, 0, 0, "-", "newReportUtils"], [27, 0, 0, "-", "newReports"], [28, 0, 0, "-", "reportInterface"], [29, 0, 0, "-", "reportingUtils"], [23, 1, 1, "", "setData"], [30, 0, 0, "-", "tests"]], "armi.bookkeeping.report.data": [[24, 2, 1, "", "Group"], [24, 2, 1, "", "Image"], [24, 2, 1, "", "Report"], [24, 2, 1, "", "Table"]], "armi.bookkeeping.report.data.Group": [[24, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Image": [[24, 4, 1, "", "count"], [24, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Report": [[24, 3, 1, "", "addToReport"], [24, 4, 1, "", "componentWellGroups"], [24, 4, 1, "", "groupsOrderFirst"], [24, 3, 1, "", "writeGroupsHTML"], [24, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Table": [[24, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.html": [[25, 2, 1, "", "A"], [25, 2, 1, "", "B"], [25, 2, 1, "", "Body"], [25, 2, 1, "", "Caption"], [25, 2, 1, "", "Div"], [25, 2, 1, "", "Footer"], [25, 2, 1, "", "H1"], [25, 2, 1, "", "H2"], [25, 2, 1, "", "H3"], [25, 2, 1, "", "H4"], [25, 2, 1, "", "HTMLFile"], [25, 2, 1, "", "Head"], [25, 2, 1, "", "Html"], [25, 2, 1, "", "Img"], [25, 2, 1, "", "LI"], [25, 2, 1, "", "Link"], [25, 2, 1, "", "P"], [25, 2, 1, "", "Script"], [25, 2, 1, "", "Span"], [25, 2, 1, "", "Style"], [25, 2, 1, "", "TBody"], [25, 2, 1, "", "TD"], [25, 2, 1, "", "TH"], [25, 2, 1, "", "THead"], [25, 2, 1, "", "TR"], [25, 2, 1, "", "Table"], [25, 2, 1, "", "Tag"], [25, 2, 1, "", "Title"], [25, 2, 1, "", "UL"], [25, 1, 1, "", "encode64"], [25, 1, 1, "", "writeStandardReportTemplate"]], "armi.bookkeeping.report.html.A": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.B": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Body": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Caption": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Div": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Footer": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H1": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H2": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H3": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H4": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.HTMLFile": [[25, 3, 1, "", "write"], [25, 3, 1, "", "writeEscaped"]], "armi.bookkeeping.report.html.Head": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Html": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Img": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.LI": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Link": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.P": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Script": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Span": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Style": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TBody": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TD": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TH": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.THead": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TR": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Table": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Tag": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Title": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.UL": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.newReportUtils": [[26, 6, 1, "", "DESIGN"], [26, 1, 1, "", "comprehensiveBOLContent"], [26, 1, 1, "", "createDimensionReport"], [26, 1, 1, "", "getPinDesignTable"], [26, 1, 1, "", "insertAreaFractionsReport"], [26, 1, 1, "", "insertBlockDesignReport"], [26, 1, 1, "", "insertBlockDiagrams"], [26, 1, 1, "", "insertBlueprintContent"], [26, 1, 1, "", "insertCoreAndAssemblyMaps"], [26, 1, 1, "", "insertCoreDesignReport"], [26, 1, 1, "", "insertDesignContent"], [26, 1, 1, "", "insertEndOfLifeContent"], [26, 1, 1, "", "insertGeneralReportContent"], [26, 1, 1, "", "insertMetaTable"], [26, 1, 1, "", "insertSettingsData"]], "armi.bookkeeping.report.newReports": [[27, 2, 1, "", "Image"], [27, 2, 1, "", "ReportContent"], [27, 2, 1, "", "ReportNode"], [27, 2, 1, "", "ReportStage"], [27, 2, 1, "", "Section"], [27, 2, 1, "", "Table"], [27, 2, 1, "", "TimeSeries"], [27, 1, 1, "", "encode64"]], "armi.bookkeeping.report.newReports.Image": [[27, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportContent": [[27, 3, 1, "", "get"], [27, 3, 1, "", "tableOfContents"], [27, 3, 1, "", "writeReports"]], "armi.bookkeeping.report.newReports.ReportNode": [[27, 4, 1, "", "levelDict"], [27, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportStage": [[27, 4, 1, "", "Begin"], [27, 4, 1, "", "End"], [27, 4, 1, "", "Standard"]], "armi.bookkeeping.report.newReports.Section": [[27, 3, 1, "", "addChildElement"], [27, 3, 1, "", "get"], [27, 3, 1, "", "items"], [27, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.Table": [[27, 3, 1, "", "addRow"], [27, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.TimeSeries": [[27, 3, 1, "", "add"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "render"]], "armi.bookkeeping.report.reportInterface": [[28, 2, 1, "", "ReportInterface"], [28, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.report.reportInterface.ReportInterface": [[28, 3, 1, "", "countAssembliesSFP"], [28, 3, 1, "", "distributable"], [28, 3, 1, "", "generateDesignReport"], [28, 3, 1, "", "interactBOC"], [28, 3, 1, "", "interactBOL"], [28, 3, 1, "", "interactEOC"], [28, 3, 1, "", "interactEOL"], [28, 3, 1, "", "interactEveryNode"], [28, 4, 1, "", "name"], [28, 3, 1, "", "printReports"], [28, 3, 1, "", "reportSFP"], [28, 4, 1, "", "reports"], [28, 3, 1, "", "writeReports"], [28, 3, 1, "", "writeRunSummary"]], "armi.bookkeeping.report.reportingUtils": [[29, 1, 1, "", "getInterfaceStackSummary"], [29, 1, 1, "", "getNodeName"], [29, 1, 1, "", "getSystemInfo"], [29, 1, 1, "", "makeBlockDesignReport"], [29, 1, 1, "", "makeCoreAndAssemblyMaps"], [29, 1, 1, "", "makeCoreDesignReport"], [29, 1, 1, "", "setNeutronBalancesReport"], [29, 1, 1, "", "summarizePinDesign"], [29, 1, 1, "", "summarizePower"], [29, 1, 1, "", "summarizePowerPeaking"], [29, 1, 1, "", "writeAssemblyMassSummary"], [29, 1, 1, "", "writeCycleSummary"], [29, 1, 1, "", "writeTightCouplingConvergenceSummary"], [29, 1, 1, "", "writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[31, 0, 0, "-", "test_newReport"], [32, 0, 0, "-", "test_report"]], "armi.bookkeeping.report.tests.test_newReport": [[31, 2, 1, "", "TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation": [[31, 3, 1, "", "test_neutronicsPlotFunctions"], [31, 3, 1, "", "test_reportBasics"], [31, 3, 1, "", "test_reportContents"], [31, 3, 1, "", "test_reportContentsEnd"], [31, 3, 1, "", "test_reportLogs"], [31, 3, 1, "", "test_tableCreation"], [31, 3, 1, "", "test_timeSeries"], [31, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.report.tests.test_report": [[32, 2, 1, "", "TestReport"], [32, 2, 1, "", "TestReportInterface"], [32, 2, 1, "", "TestReportingUtils"]], "armi.bookkeeping.report.tests.test_report.TestReport": [[32, 3, 1, "", "test_getData"], [32, 3, 1, "", "test_reactorSpecificReporting"], [32, 3, 1, "", "test_setData"], [32, 3, 1, "", "test_writeWelcomeHeaders"]], "armi.bookkeeping.report.tests.test_report.TestReportInterface": [[32, 3, 1, "", "test_distributableReportInt"], [32, 3, 1, "", "test_interactBOC"], [32, 3, 1, "", "test_interactBOLReportInt"], [32, 3, 1, "", "test_interactEOC"], [32, 3, 1, "", "test_interactEOL"], [32, 3, 1, "", "test_interactEveryNode"], [32, 3, 1, "", "test_printReports"], [32, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.report.tests.test_report.TestReportingUtils": [[32, 3, 1, "", "test_getNodeName"], [32, 3, 1, "", "test_getSystemInfo"], [32, 3, 1, "", "test_getSystemInfoLinux"], [32, 3, 1, "", "test_getSystemInfoMac"], [32, 3, 1, "", "test_getSystemInfoWindows"]], "armi.bookkeeping.snapshotInterface": [[33, 2, 1, "", "SnapshotInterface"], [33, 1, 1, "", "describeInterfaces"], [33, 1, 1, "", "extractCycleNodeFromStamp"], [33, 1, 1, "", "getCycleNodeStamp"]], "armi.bookkeeping.snapshotInterface.SnapshotInterface": [[33, 3, 1, "", "activateDefaultSnapshots"], [33, 3, 1, "", "interactBOL"], [33, 3, 1, "", "interactCoupled"], [33, 3, 1, "", "interactEveryNode"], [33, 4, 1, "", "name"]], "armi.bookkeeping.tests": [[35, 0, 0, "-", "test_historyTracker"], [36, 0, 0, "-", "test_memoryProfiler"], [37, 0, 0, "-", "test_snapshot"]], "armi.bookkeeping.tests.test_historyTracker": [[35, 2, 1, "", "TestHistoryTracker"], [35, 2, 1, "", "TestHistoryTrackerNoModel"], [35, 1, 1, "", "runTutorialNotebook"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker": [[35, 3, 1, "", "test_calcMGFluence"], [35, 3, 1, "", "test_getBlockInAssembly"], [35, 3, 1, "", "test_historyParameters"], [35, 3, 1, "", "test_historyReport"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel": [[35, 3, 1, "", "test_blockName"], [35, 3, 1, "", "test_timestepFiltering"], [35, 3, 1, "", "test_timestepFilteringWithGap"]], "armi.bookkeeping.tests.test_memoryProfiler": [[36, 2, 1, "", "KlassCounterTests"], [36, 2, 1, "", "TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests": [[36, 3, 1, "", "get_containers"], [36, 3, 1, "", "test_countHandlesRecursion"], [36, 3, 1, "", "test_expandContainer"]], "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler": [[36, 3, 1, "", "test_checkForDuplicateObjectsOnArmiModel"], [36, 3, 1, "", "test_displayMemoryUsage"], [36, 3, 1, "", "test_fullBreakdown"], [36, 3, 1, "", "test_getCurrentMemoryUsage"], [36, 3, 1, "", "test_getReferrers"], [36, 3, 1, "", "test_getTotalJobMemory"], [36, 3, 1, "", "test_printCurrentMemoryState"], [36, 3, 1, "", "test_printCurrentMemoryState_noSetting"], [36, 3, 1, "", "test_printFullMemoryBreakdown"], [36, 3, 1, "", "test_profileMemoryUsageAction"]], "armi.bookkeeping.tests.test_snapshot": [[37, 2, 1, "", "MockReactor"], [37, 2, 1, "", "MockReactorParams"], [37, 2, 1, "", "TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface": [[37, 3, 1, "", "test_activeateDefaultSnapshots_17cycles5BurnSteps"], [37, 3, 1, "", "test_activeateDefaultSnapshots_30cycles2BurnSteps"], [37, 3, 1, "", "test_interactCoupled"], [37, 3, 1, "", "test_interactEveryNode"]], "armi.bookkeeping.visualization": [[39, 0, 0, "-", "dumper"], [40, 0, 0, "-", "entryPoint"], [41, 0, 0, "-", "tests"], [44, 0, 0, "-", "utils"], [45, 0, 0, "-", "vtk"], [46, 0, 0, "-", "xdmf"]], "armi.bookkeeping.visualization.dumper": [[39, 2, 1, "", "VisFileDumper"]], "armi.bookkeeping.visualization.dumper.VisFileDumper": [[39, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.entryPoint": [[40, 2, 1, "", "VisFileEntryPoint"]], "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint": [[40, 3, 1, "", "addOptions"], [40, 4, 1, "", "description"], [40, 3, 1, "", "invoke"], [40, 4, 1, "", "name"], [40, 3, 1, "", "parse"], [40, 4, 1, "", "settingsArgument"]], "armi.bookkeeping.visualization.tests": [[42, 0, 0, "-", "test_vis"], [43, 0, 0, "-", "test_xdmf"]], "armi.bookkeeping.visualization.tests.test_vis": [[42, 2, 1, "", "TestVisDump"], [42, 2, 1, "", "TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVisDump": [[42, 3, 1, "", "test_cartesianMesh"], [42, 3, 1, "", "test_dumpReactorVtk"], [42, 3, 1, "", "test_dumpReactorXdmf"], [42, 3, 1, "", "test_hexMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh": [[42, 3, 1, "", "test_testVtkMesh"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[43, 2, 1, "", "TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf": [[43, 3, 1, "", "test_dedupTimes"]], "armi.bookkeeping.visualization.utils": [[44, 2, 1, "", "VtkMesh"], [44, 1, 1, "", "createAssemMesh"], [44, 1, 1, "", "createBlockMesh"], [44, 1, 1, "", "createReactorAssemMesh"], [44, 1, 1, "", "createReactorBlockMesh"]], "armi.bookkeeping.visualization.utils.VtkMesh": [[44, 3, 1, "", "append"], [44, 3, 1, "", "empty"], [44, 3, 1, "", "write"], [44, 5, 1, "", "x"], [44, 5, 1, "", "y"], [44, 5, 1, "", "z"]], "armi.bookkeeping.visualization.vtk": [[45, 2, 1, "", "VtkDumper"]], "armi.bookkeeping.visualization.vtk.VtkDumper": [[45, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.xdmf": [[46, 2, 1, "", "XdmfDumper"]], "armi.bookkeeping.visualization.xdmf.XdmfDumper": [[46, 3, 1, "", "dumpState"]], "armi.cases": [[48, 0, 0, "-", "case"], [49, 0, 0, "-", "inputModifiers"], [56, 0, 0, "-", "suite"], [57, 0, 0, "-", "suiteBuilder"], [58, 0, 0, "-", "tests"]], "armi.cases.case": [[48, 2, 1, "", "Case"], [48, 1, 1, "", "copyInterfaceInputs"]], "armi.cases.case.Case": [[48, 3, 1, "", "addExplicitDependency"], [48, 5, 1, "", "bp"], [48, 3, 1, "", "checkInputs"], [48, 3, 1, "", "clone"], [48, 3, 1, "", "compare"], [48, 5, 1, "", "dbName"], [48, 5, 1, "", "dependencies"], [48, 5, 1, "", "directory"], [48, 5, 1, "", "geom"], [48, 3, 1, "", "getPotentialParentFromSettingValue"], [48, 5, 1, "", "independentVariables"], [48, 3, 1, "", "initializeOperator"], [48, 3, 1, "", "run"], [48, 3, 1, "", "setUpTaskDependence"], [48, 3, 1, "", "summarizeDesign"], [48, 5, 1, "", "title"], [48, 3, 1, "", "writeInputs"]], "armi.cases.inputModifiers": [[50, 0, 0, "-", "inputModifiers"], [51, 0, 0, "-", "neutronicsModifiers"], [52, 0, 0, "-", "pinTypeInputModifiers"], [53, 0, 0, "-", "tests"]], "armi.cases.inputModifiers.inputModifiers": [[50, 2, 1, "", "BluePrintBlockModifier"], [50, 2, 1, "", "FullCoreModifier"], [50, 2, 1, "", "InputModifier"], [50, 2, 1, "", "MultiSettingModifier"], [50, 2, 1, "", "SamplingInputModifier"], [50, 2, 1, "", "SettingsModifier"]], "armi.cases.inputModifiers.inputModifiers.InputModifier": [[50, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.neutronicsModifiers": [[51, 2, 1, "", "NeutronicConvergenceModifier"], [51, 2, 1, "", "NeutronicMeshsSizeModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers": [[52, 2, 1, "", "CladThicknessByIDModifier"], [52, 2, 1, "", "CladThicknessByODModifier"], [52, 2, 1, "", "SmearDensityModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier": [[52, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier": [[52, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.tests": [[54, 0, 0, "-", "test_inputModifiers"], [55, 0, 0, "-", "test_pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests.test_inputModifiers": [[54, 2, 1, "", "MockGeom"], [54, 2, 1, "", "NeutronicsKernelOpts"], [54, 2, 1, "", "TestFullCoreModifier"], [54, 2, 1, "", "TestSettingsModifiers"], [54, 2, 1, "", "TestsuiteBuilderIntegrations"]], "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom": [[54, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier": [[54, 3, 1, "", "test_fullCoreConversion"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers": [[54, 3, 1, "", "test_NeutronicConvergenceModifier"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations": [[54, 3, 1, "", "test_bluePrintBlockModifier"], [54, 3, 1, "", "test_settingsModifier"], [54, 3, 1, "", "test_smearDensityFail"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers": [[55, 2, 1, "", "MockGeom"], [55, 2, 1, "", "TestBlueprintModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom": [[55, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers": [[55, 3, 1, "", "test_AdjustSmearDensity"], [55, 3, 1, "", "test_CladThickenessByIDModifier"], [55, 3, 1, "", "test_CladThickenessByODModifier"]], "armi.cases.suite": [[56, 2, 1, "", "CaseSuite"]], "armi.cases.suite.CaseSuite": [[56, 3, 1, "", "add"], [56, 3, 1, "", "clone"], [56, 3, 1, "", "compare"], [56, 3, 1, "", "discover"], [56, 3, 1, "", "echoConfiguration"], [56, 3, 1, "", "remove"], [56, 3, 1, "", "run"], [56, 3, 1, "", "writeInputs"], [56, 3, 1, "", "writeTable"]], "armi.cases.suiteBuilder": [[57, 2, 1, "", "FullFactorialSuiteBuilder"], [57, 2, 1, "", "FullFactorialSuiteBuilderNoisy"], [57, 2, 1, "", "LatinHyperCubeSuiteBuilder"], [57, 2, 1, "", "SeparateEffectsSuiteBuilder"], [57, 2, 1, "", "SuiteBuilder"], [57, 1, 1, "", "getInputModifiers"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilder": [[57, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy": [[57, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder": [[57, 3, 1, "", "addDegreeOfFreedom"], [57, 3, 1, "", "buildSuite"]], "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder": [[57, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.SuiteBuilder": [[57, 3, 1, "", "addDegreeOfFreedom"], [57, 3, 1, "", "addModifierSet"], [57, 3, 1, "", "buildSuite"]], "armi.cases.tests": [[59, 0, 0, "-", "test_cases"], [60, 0, 0, "-", "test_suiteBuilder"]], "armi.cases.tests.test_cases": [[59, 2, 1, "", "MultiFilesInterfaces"], [59, 2, 1, "", "TestArmiCase"], [59, 2, 1, "", "TestCaseSuiteComparison"], [59, 2, 1, "", "TestCaseSuiteDependencies"], [59, 2, 1, "", "TestCopyInterfaceInputs"], [59, 2, 1, "", "TestExtraInputWriting"], [59, 2, 1, "", "TestPluginForCopyInterfacesMultipleFiles"], [59, 2, 1, "", "TestPluginWithDuplicateSetting"]], "armi.cases.tests.test_cases.MultiFilesInterfaces": [[59, 4, 1, "", "name"], [59, 3, 1, "", "specifyInputs"]], "armi.cases.tests.test_cases.TestArmiCase": [[59, 3, 1, "", "test_clone"], [59, 3, 1, "", "test_endCoverage"], [59, 3, 1, "", "test_endProfiling"], [59, 3, 1, "", "test_getCoverageRcFile"], [59, 3, 1, "", "test_independentVariables"], [59, 3, 1, "", "test_run"], [59, 3, 1, "", "test_setUpTaskDependence"], [59, 3, 1, "", "test_startCoverage"], [59, 3, 1, "", "test_startProfiling"], [59, 3, 1, "", "test_summarizeDesign"]], "armi.cases.tests.test_cases.TestCaseSuiteComparison": [[59, 3, 1, "", "test_compareNoDiffs"]], "armi.cases.tests.test_cases.TestCaseSuiteDependencies": [[59, 3, 1, "", "test_checkInputs"], [59, 3, 1, "", "test_clone"], [59, 3, 1, "", "test_dependenciesWithObscurePaths"], [59, 3, 1, "", "test_dependencyFromDBName"], [59, 3, 1, "", "test_dependencyFromExplictRepeatShuffles"], [59, 3, 1, "", "test_explicitDependency"], [59, 3, 1, "", "test_titleSetterGetter"]], "armi.cases.tests.test_cases.TestCopyInterfaceInputs": [[59, 3, 1, "", "test_copyInputsHelper"], [59, 3, 1, "", "test_copyInterfaceInputs_absPath"], [59, 3, 1, "", "test_copyInterfaceInputs_multipleFiles"], [59, 3, 1, "", "test_copyInterfaceInputs_nonFilePath"], [59, 3, 1, "", "test_copyInterfaceInputs_relPath"], [59, 3, 1, "", "test_copyInterfaceInputs_singleFile"], [59, 3, 1, "", "test_copyInterfaceInputs_wildcardFile"], [59, 3, 1, "", "test_failOnDuplicateSetting"]], "armi.cases.tests.test_cases.TestExtraInputWriting": [[59, 3, 1, "", "test_writeInput"]], "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles": [[59, 3, 1, "", "defineSettings"], [59, 3, 1, "", "exposeInterfaces"]], "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting": [[59, 3, 1, "", "defineSettings"]], "armi.cases.tests.test_suiteBuilder": [[60, 2, 1, "", "LatinHyperCubeModifier"], [60, 2, 1, "", "SettingModifier"], [60, 2, 1, "", "TestFullFactorialSuiteBuilder"], [60, 2, 1, "", "TestLatinHyperCubeSuiteBuilder"], [60, 2, 1, "", "TestSeparateEffectsBuilder"]], "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder": [[60, 3, 1, "", "test_buildSuite"]], "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder": [[60, 3, 1, "", "test_addDegreeOfFreedom"], [60, 3, 1, "", "test_buildSuite"], [60, 3, 1, "", "test_initialize"]], "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder": [[60, 3, 1, "", "test_buildSuite"]], "armi.cli": [[61, 2, 1, "", "ArmiCLI"], [61, 2, 1, "", "ArmiParser"], [61, 2, 1, "", "EntryPointsPlugin"], [62, 0, 0, "-", "checkInputs"], [63, 0, 0, "-", "cleanTemps"], [64, 0, 0, "-", "clone"], [65, 0, 0, "-", "compareCases"], [66, 0, 0, "-", "database"], [67, 0, 0, "-", "entryPoint"], [68, 0, 0, "-", "gridGui"], [69, 0, 0, "-", "migrateInputs"], [70, 0, 0, "-", "modify"], [71, 0, 0, "-", "reportsEntryPoint"], [72, 0, 0, "-", "run"], [73, 0, 0, "-", "runSuite"], [61, 1, 1, "", "splash"], [74, 0, 0, "-", "tests"]], "armi.cli.ArmiCLI": [[61, 3, 1, "", "executeCommand"], [61, 3, 1, "", "listCommands"], [61, 3, 1, "", "run"], [61, 3, 1, "", "showVersion"]], "armi.cli.ArmiParser": [[61, 3, 1, "", "print_help"]], "armi.cli.EntryPointsPlugin": [[61, 3, 1, "", "defineEntryPoints"]], "armi.cli.checkInputs": [[62, 2, 1, "", "CheckInputEntryPoint"], [62, 2, 1, "", "ExpandBlueprints"]], "armi.cli.checkInputs.CheckInputEntryPoint": [[62, 3, 1, "", "addOptions"], [62, 3, 1, "", "invoke"], [62, 4, 1, "", "name"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.checkInputs.ExpandBlueprints": [[62, 3, 1, "", "addOptions"], [62, 3, 1, "", "invoke"], [62, 4, 1, "", "name"], [62, 4, 1, "", "settingsArgument"], [62, 4, 1, "", "splash"]], "armi.cli.cleanTemps": [[63, 2, 1, "", "CleanTemps"]], "armi.cli.cleanTemps.CleanTemps": [[63, 3, 1, "", "invoke"], [63, 4, 1, "", "name"], [63, 4, 1, "", "settingsArgument"]], "armi.cli.clone": [[64, 2, 1, "", "CloneArmiRunCommandBatch"], [64, 2, 1, "", "CloneArmiRunCommandInteractive"], [64, 2, 1, "", "CloneSuiteCommand"]], "armi.cli.clone.CloneArmiRunCommandBatch": [[64, 3, 1, "", "addOptions"], [64, 3, 1, "", "invoke"], [64, 4, 1, "", "name"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneArmiRunCommandInteractive": [[64, 4, 1, "", "name"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneSuiteCommand": [[64, 3, 1, "", "addOptions"], [64, 3, 1, "", "invoke"], [64, 4, 1, "", "name"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases": [[65, 2, 1, "", "CompareCases"], [65, 2, 1, "", "CompareSuites"]], "armi.cli.compareCases.CompareCases": [[65, 3, 1, "", "addOptions"], [65, 3, 1, "", "invoke"], [65, 4, 1, "", "name"], [65, 3, 1, "", "parse"], [65, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases.CompareSuites": [[65, 3, 1, "", "addOptions"], [65, 3, 1, "", "invoke"], [65, 4, 1, "", "name"], [65, 4, 1, "", "settingsArgument"]], "armi.cli.database": [[66, 2, 1, "", "ExtractInputs"], [66, 2, 1, "", "InjectInputs"]], "armi.cli.database.ExtractInputs": [[66, 3, 1, "", "addOptions"], [66, 3, 1, "", "invoke"], [66, 4, 1, "", "mode"], [66, 4, 1, "", "name"], [66, 3, 1, "", "parse_args"], [66, 4, 1, "", "settingsArgument"]], "armi.cli.database.InjectInputs": [[66, 3, 1, "", "addOptions"], [66, 3, 1, "", "invoke"], [66, 4, 1, "", "mode"], [66, 4, 1, "", "name"], [66, 4, 1, "", "settingsArgument"]], "armi.cli.entryPoint": [[67, 2, 1, "", "EntryPoint"], [67, 1, 1, "", "loadSettings"], [67, 1, 1, "", "setCaseTitle"], [67, 1, 1, "", "setSetting"], [67, 1, 1, "", "storeBool"]], "armi.cli.entryPoint.EntryPoint": [[67, 3, 1, "", "addOptions"], [67, 3, 1, "", "createOptionFromSetting"], [67, 4, 1, "", "description"], [67, 3, 1, "", "invoke"], [67, 4, 1, "", "mode"], [67, 4, 1, "", "name"], [67, 3, 1, "", "parse"], [67, 3, 1, "", "parse_args"], [67, 4, 1, "", "settingsArgument"], [67, 4, 1, "", "splash"]], "armi.cli.gridGui": [[68, 2, 1, "", "GridGuiEntryPoint"]], "armi.cli.gridGui.GridGuiEntryPoint": [[68, 3, 1, "", "addOptions"], [68, 3, 1, "", "invoke"], [68, 4, 1, "", "name"], [68, 4, 1, "", "settingsArgument"]], "armi.cli.migrateInputs": [[69, 2, 1, "", "MigrateInputs"]], "armi.cli.migrateInputs.MigrateInputs": [[69, 3, 1, "", "addOptions"], [69, 3, 1, "", "invoke"], [69, 4, 1, "", "name"], [69, 4, 1, "", "settingsArgument"]], "armi.cli.modify": [[70, 2, 1, "", "ModifyCaseSettingsCommand"]], "armi.cli.modify.ModifyCaseSettingsCommand": [[70, 3, 1, "", "addOptions"], [70, 3, 1, "", "invoke"], [70, 4, 1, "", "name"], [70, 4, 1, "", "settingsArgument"]], "armi.cli.reportsEntryPoint": [[71, 2, 1, "", "ReportsEntryPoint"], [71, 1, 1, "", "createReportFromSettings"]], "armi.cli.reportsEntryPoint.ReportsEntryPoint": [[71, 3, 1, "", "addOptions"], [71, 4, 1, "", "description"], [71, 3, 1, "", "invoke"], [71, 4, 1, "", "name"], [71, 4, 1, "", "report_out_dir"], [71, 4, 1, "", "settingsArgument"], [71, 3, 1, "", "toTwoTuple"]], "armi.cli.run": [[72, 2, 1, "", "RunEntryPoint"]], "armi.cli.run.RunEntryPoint": [[72, 3, 1, "", "addOptions"], [72, 3, 1, "", "invoke"], [72, 4, 1, "", "name"], [72, 4, 1, "", "settingsArgument"]], "armi.cli.runSuite": [[73, 2, 1, "", "RunSuiteCommand"]], "armi.cli.runSuite.RunSuiteCommand": [[73, 3, 1, "", "addOptions"], [73, 3, 1, "", "invoke"], [73, 4, 1, "", "name"], [73, 4, 1, "", "settingsArgument"]], "armi.cli.tests": [[75, 0, 0, "-", "test_runEntryPoint"], [76, 0, 0, "-", "test_runSuite"]], "armi.cli.tests.test_runEntryPoint": [[75, 2, 1, "", "TestCheckInputEntryPoint"], [75, 2, 1, "", "TestCloneArmiRunCommandBatch"], [75, 2, 1, "", "TestCloneSuiteCommand"], [75, 2, 1, "", "TestCompareCases"], [75, 2, 1, "", "TestCompareIsotxsLibsEntryPoint"], [75, 2, 1, "", "TestCompareSuites"], [75, 2, 1, "", "TestExpandBlueprints"], [75, 2, 1, "", "TestExtractInputs"], [75, 2, 1, "", "TestInitializationEntryPoints"], [75, 2, 1, "", "TestInjectInputs"], [75, 2, 1, "", "TestMigrateInputs"], [75, 2, 1, "", "TestModifyCaseSettingsCommand"], [75, 2, 1, "", "TestReportsEntryPoint"], [75, 2, 1, "", "TestRunEntryPoint"], [75, 2, 1, "", "TestRunSuiteCommand"], [75, 2, 1, "", "TestVisFileEntryPointCommand"], [75, 1, 1, "", "buildTestDB"]], "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint": [[75, 3, 1, "", "test_checkInputEntryPointBasics"], [75, 3, 1, "", "test_checkInputEntryPointInvoke"]], "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch": [[75, 3, 1, "", "test_cloneArmiRunCommandBatchBasics"], [75, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeMedium"], [75, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeShort"]], "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand": [[75, 3, 1, "", "test_cloneSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareCases": [[75, 3, 1, "", "test_compareCasesBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint": [[75, 3, 1, "", "test_compareIsotxsLibsBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareSuites": [[75, 3, 1, "", "test_compareSuitesBasics"]], "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints": [[75, 3, 1, "", "test_expandBlueprintsBasics"]], "armi.cli.tests.test_runEntryPoint.TestExtractInputs": [[75, 3, 1, "", "test_extractInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints": [[75, 3, 1, "", "test_entryPointInitialization"]], "armi.cli.tests.test_runEntryPoint.TestInjectInputs": [[75, 3, 1, "", "test_injectInputsBasics"], [75, 3, 1, "", "test_injectInputsInvokeIgnore"], [75, 3, 1, "", "test_injectInputsInvokeNoData"]], "armi.cli.tests.test_runEntryPoint.TestMigrateInputs": [[75, 3, 1, "", "test_migrateInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand": [[75, 3, 1, "", "test_modifyCaseSettingsCommandBasics"], [75, 3, 1, "", "test_modifyCaseSettingsCommandInvoke"]], "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint": [[75, 3, 1, "", "test_cleanArgs"], [75, 3, 1, "", "test_reportsEntryPointBasics"], [75, 3, 1, "", "test_toTwoTuple"]], "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint": [[75, 3, 1, "", "test_executeCommand"], [75, 3, 1, "", "test_runCommandHelp"], [75, 3, 1, "", "test_runEntryPointBasics"]], "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand": [[75, 3, 1, "", "test_runSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand": [[75, 3, 1, "", "test_visFileEntryPointBasics"]], "armi.cli.tests.test_runSuite": [[76, 2, 1, "", "TestRunSuiteSuite"]], "armi.cli.tests.test_runSuite.TestRunSuiteSuite": [[76, 3, 1, "", "test_listCommand"], [76, 3, 1, "", "test_run"], [76, 3, 1, "", "test_showVersion"]], "armi.conftest": [[77, 1, 1, "", "bootstrapArmiTestEnv"], [77, 1, 1, "", "pytest_sessionstart"]], "armi.context": [[78, 2, 1, "", "Mode"], [78, 1, 1, "", "activateLocalFastPath"], [78, 1, 1, "", "cleanAllArmiTempDirs"], [78, 1, 1, "", "cleanTempDirs"], [78, 1, 1, "", "disconnectAllHdfDBs"], [78, 1, 1, "", "getFastPath"]], "armi.context.Mode": [[78, 4, 1, "", "BATCH"], [78, 4, 1, "", "GUI"], [78, 4, 1, "", "INTERACTIVE"], [78, 3, 1, "", "setMode"]], "armi.interfaces": [[79, 2, 1, "", "InputWriter"], [79, 2, 1, "", "Interface"], [79, 2, 1, "", "InterfaceInfo"], [79, 2, 1, "", "OutputReader"], [79, 2, 1, "", "STACK_ORDER"], [79, 2, 1, "", "TightCoupler"], [79, 1, 1, "", "getActiveInterfaceInfo"], [79, 1, 1, "", "isInterfaceActive"]], "armi.interfaces.InputWriter": [[79, 3, 1, "", "getInterface"], [79, 3, 1, "", "write"]], "armi.interfaces.Interface": [[79, 2, 1, "", "Distribute"], [79, 3, 1, "", "attachReactor"], [79, 3, 1, "", "bolForce"], [79, 3, 1, "", "detachReactor"], [79, 3, 1, "", "distributable"], [79, 3, 1, "", "duplicate"], [79, 3, 1, "", "enabled"], [79, 4, 1, "", "function"], [79, 3, 1, "", "getDependencies"], [79, 3, 1, "", "getHistoryParams"], [79, 3, 1, "", "getInputFiles"], [79, 3, 1, "", "getInterface"], [79, 3, 1, "", "getTightCouplingValue"], [79, 3, 1, "", "interactBOC"], [79, 3, 1, "", "interactBOL"], [79, 3, 1, "", "interactCoupled"], [79, 3, 1, "", "interactDistributeState"], [79, 3, 1, "", "interactEOC"], [79, 3, 1, "", "interactEOL"], [79, 3, 1, "", "interactError"], [79, 3, 1, "", "interactEveryNode"], [79, 3, 1, "", "interactInit"], [79, 3, 1, "", "isRequestedDetailPoint"], [79, 4, 1, "", "name"], [79, 3, 1, "", "nameContains"], [79, 3, 1, "", "postDistributeState"], [79, 3, 1, "", "preDistributeState"], [79, 3, 1, "", "readOutput"], [79, 3, 1, "", "specifyInputs"], [79, 3, 1, "", "updatePhysicsCouplingControl"], [79, 3, 1, "", "workerOperate"], [79, 3, 1, "", "writeInput"]], "armi.interfaces.Interface.Distribute": [[79, 4, 1, "", "DUPLICATE"], [79, 4, 1, "", "NEW"], [79, 4, 1, "", "SKIP"]], "armi.interfaces.InterfaceInfo": [[79, 4, 1, "", "interfaceCls"], [79, 4, 1, "", "kwargs"], [79, 4, 1, "", "order"]], "armi.interfaces.OutputReader": [[79, 3, 1, "", "apply"], [79, 3, 1, "", "getInterface"], [79, 3, 1, "", "read"]], "armi.interfaces.STACK_ORDER": [[79, 4, 1, "", "AFTER"], [79, 4, 1, "", "BEFORE"], [79, 4, 1, "", "BOOKKEEPING"], [79, 4, 1, "", "CRITICAL_CONTROL"], [79, 4, 1, "", "CROSS_SECTIONS"], [79, 4, 1, "", "DEPLETION"], [79, 4, 1, "", "FLUX"], [79, 4, 1, "", "FUEL_MANAGEMENT"], [79, 4, 1, "", "FUEL_PERFORMANCE"], [79, 4, 1, "", "POSTPROCESSING"], [79, 4, 1, "", "PREPROCESSING"], [79, 4, 1, "", "REACTIVITY_COEFFS"], [79, 4, 1, "", "THERMAL_HYDRAULICS"], [79, 4, 1, "", "TRANSIENT"]], "armi.interfaces.TightCoupler": [[79, 3, 1, "", "getListDimension"], [79, 3, 1, "", "isConverged"], [79, 3, 1, "", "storePreviousIterationValue"]], "armi.materials": [[81, 0, 0, "-", "air"], [82, 0, 0, "-", "alloy200"], [83, 0, 0, "-", "b4c"], [84, 0, 0, "-", "be9"], [85, 0, 0, "-", "caH2"], [86, 0, 0, "-", "californium"], [87, 0, 0, "-", "concrete"], [88, 0, 0, "-", "copper"], [89, 0, 0, "-", "cs"], [90, 0, 0, "-", "custom"], [91, 0, 0, "-", "graphite"], [92, 0, 0, "-", "hafnium"], [93, 0, 0, "-", "hastelloyN"], [94, 0, 0, "-", "ht9"], [80, 1, 1, "", "importMaterialsIntoModuleNamespace"], [95, 0, 0, "-", "inconel"], [96, 0, 0, "-", "inconel600"], [97, 0, 0, "-", "inconel625"], [98, 0, 0, "-", "inconel800"], [99, 0, 0, "-", "inconelPE16"], [100, 0, 0, "-", "inconelX750"], [80, 1, 1, "", "iterAllMaterialClassesInNamespace"], [101, 0, 0, "-", "lead"], [102, 0, 0, "-", "leadBismuth"], [103, 0, 0, "-", "lithium"], [104, 0, 0, "-", "magnesium"], [105, 0, 0, "-", "material"], [106, 0, 0, "-", "mgO"], [107, 0, 0, "-", "mixture"], [108, 0, 0, "-", "molybdenum"], [109, 0, 0, "-", "mox"], [110, 0, 0, "-", "nZ"], [111, 0, 0, "-", "potassium"], [80, 1, 1, "", "resolveMaterialClassByName"], [112, 0, 0, "-", "scandiumOxide"], [80, 1, 1, "", "setMaterialNamespaceOrder"], [113, 0, 0, "-", "siC"], [114, 0, 0, "-", "sodium"], [115, 0, 0, "-", "sodiumChloride"], [116, 0, 0, "-", "sulfur"], [117, 0, 0, "-", "tZM"], [118, 0, 0, "-", "tantalum"], [119, 0, 0, "-", "tests"], [132, 0, 0, "-", "thU"], [133, 0, 0, "-", "thorium"], [134, 0, 0, "-", "thoriumOxide"], [135, 0, 0, "-", "uThZr"], [136, 0, 0, "-", "uZr"], [137, 0, 0, "-", "uranium"], [138, 0, 0, "-", "uraniumOxide"], [139, 0, 0, "-", "void"], [140, 0, 0, "-", "water"], [141, 0, 0, "-", "yttriumOxide"], [142, 0, 0, "-", "zincOxide"], [143, 0, 0, "-", "zr"]], "armi.materials.air": [[81, 2, 1, "", "Air"]], "armi.materials.air.Air": [[81, 3, 1, "", "heatCapacity"], [81, 4, 1, "", "propertyValidTemperature"], [81, 3, 1, "", "pseudoDensity"], [81, 3, 1, "", "setDefaultMassFracs"], [81, 3, 1, "", "specificVolumeLiquid"], [81, 3, 1, "", "thermalConductivity"]], "armi.materials.alloy200": [[82, 2, 1, "", "Alloy200"]], "armi.materials.alloy200.Alloy200": [[82, 3, 1, "", "density"], [82, 3, 1, "", "linearExpansion"], [82, 4, 1, "", "linearExpansionTable"], [82, 4, 1, "", "linearExpansionTableK"], [82, 4, 1, "", "modelConst"], [82, 4, 1, "", "propertyValidTemperature"], [82, 4, 1, "", "referenceMaxPercentImpurites"], [82, 4, 1, "", "references"], [82, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.b4c": [[83, 2, 1, "", "B4C"]], "armi.materials.b4c.B4C": [[83, 3, 1, "", "applyInputParams"], [83, 3, 1, "", "density"], [83, 4, 1, "", "enrichedNuclide"], [83, 3, 1, "", "getMassEnrichmentFromNumEnrich"], [83, 3, 1, "", "linearExpansionPercent"], [83, 4, 1, "", "propertyValidTemperature"], [83, 3, 1, "", "pseudoDensity"], [83, 3, 1, "", "setDefaultMassFracs"], [83, 3, 1, "", "setNewMassFracsFromMassEnrich"], [83, 3, 1, "", "updateTD"]], "armi.materials.be9": [[84, 2, 1, "", "Be9"]], "armi.materials.be9.Be9": [[84, 3, 1, "", "density"], [84, 3, 1, "", "linearExpansionPercent"], [84, 4, 1, "", "propertyValidTemperature"], [84, 3, 1, "", "setDefaultMassFracs"], [84, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.caH2": [[85, 2, 1, "", "CaH2"]], "armi.materials.caH2.CaH2": [[85, 3, 1, "", "density"], [85, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.californium": [[86, 2, 1, "", "Californium"]], "armi.materials.californium.Californium": [[86, 3, 1, "", "density"], [86, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.concrete": [[87, 2, 1, "", "Concrete"]], "armi.materials.concrete.Concrete": [[87, 3, 1, "", "density"], [87, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.copper": [[88, 2, 1, "", "Cu"]], "armi.materials.copper.Cu": [[88, 3, 1, "", "density"], [88, 3, 1, "", "linearExpansionPercent"], [88, 4, 1, "", "propertyValidTemperature"], [88, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.cs": [[89, 2, 1, "", "Cs"]], "armi.materials.cs.Cs": [[89, 3, 1, "", "meltingPoint"], [89, 3, 1, "", "pseudoDensity"], [89, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.custom": [[90, 2, 1, "", "Custom"]], "armi.materials.custom.Custom": [[90, 3, 1, "", "density"], [90, 4, 1, "", "enrichedNuclide"], [90, 3, 1, "", "pseudoDensity"], [90, 3, 1, "", "setMassFrac"]], "armi.materials.graphite": [[91, 2, 1, "", "Graphite"]], "armi.materials.graphite.Graphite": [[91, 3, 1, "", "density"], [91, 3, 1, "", "linearExpansionPercent"], [91, 3, 1, "", "setDefaultMassFracs"], [91, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.hafnium": [[92, 2, 1, "", "Hafnium"]], "armi.materials.hafnium.Hafnium": [[92, 3, 1, "", "density"], [92, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.hastelloyN": [[93, 2, 1, "", "HastelloyN"]], "armi.materials.hastelloyN.HastelloyN": [[93, 3, 1, "", "density"], [93, 3, 1, "", "heatCapacity"], [93, 3, 1, "", "linearExpansionPercent"], [93, 4, 1, "", "materialIntro"], [93, 3, 1, "", "meanCoefficientThermalExpansion"], [93, 4, 1, "", "propertyValidTemperature"], [93, 4, 1, "", "refTempK"], [93, 3, 1, "", "setDefaultMassFracs"], [93, 3, 1, "", "thermalConductivity"]], "armi.materials.ht9": [[94, 2, 1, "", "HT9"]], "armi.materials.ht9.HT9": [[94, 3, 1, "", "density"], [94, 3, 1, "", "linearExpansionPercent"], [94, 4, 1, "", "propertyValidTemperature"], [94, 3, 1, "", "setDefaultMassFracs"], [94, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel": [[95, 2, 1, "", "Inconel"], [95, 2, 1, "", "Inconel617"]], "armi.materials.inconel.Inconel": [[95, 3, 1, "", "density"], [95, 4, 1, "", "references"], [95, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconel600": [[96, 2, 1, "", "Inconel600"]], "armi.materials.inconel600.Inconel600": [[96, 3, 1, "", "density"], [96, 3, 1, "", "heatCapacity"], [96, 3, 1, "", "linearExpansion"], [96, 3, 1, "", "linearExpansionPercent"], [96, 3, 1, "", "polyfitHeatCapacity"], [96, 3, 1, "", "polyfitLinearExpansionPercent"], [96, 3, 1, "", "polyfitThermalConductivity"], [96, 4, 1, "", "propertyValidTemperature"], [96, 4, 1, "", "refTempK"], [96, 4, 1, "", "references"], [96, 3, 1, "", "setDefaultMassFracs"], [96, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel625": [[97, 2, 1, "", "Inconel625"]], "armi.materials.inconel625.Inconel625": [[97, 3, 1, "", "density"], [97, 3, 1, "", "heatCapacity"], [97, 3, 1, "", "linearExpansion"], [97, 3, 1, "", "linearExpansionPercent"], [97, 3, 1, "", "polyfitHeatCapacity"], [97, 3, 1, "", "polyfitLinearExpansionPercent"], [97, 3, 1, "", "polyfitThermalConductivity"], [97, 4, 1, "", "propertyValidTemperature"], [97, 4, 1, "", "refTempK"], [97, 4, 1, "", "references"], [97, 3, 1, "", "setDefaultMassFracs"], [97, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel800": [[98, 2, 1, "", "Inconel800"]], "armi.materials.inconel800.Inconel800": [[98, 3, 1, "", "density"], [98, 3, 1, "", "linearExpansionPercent"], [98, 3, 1, "", "meanCoefficientThermalExpansion"], [98, 4, 1, "", "propertyValidTemperature"], [98, 4, 1, "", "refTempK"], [98, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelPE16": [[99, 2, 1, "", "InconelPE16"]], "armi.materials.inconelPE16.InconelPE16": [[99, 3, 1, "", "density"], [99, 4, 1, "", "references"], [99, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelX750": [[100, 2, 1, "", "InconelX750"]], "armi.materials.inconelX750.InconelX750": [[100, 3, 1, "", "density"], [100, 3, 1, "", "heatCapacity"], [100, 3, 1, "", "linearExpansion"], [100, 3, 1, "", "linearExpansionPercent"], [100, 3, 1, "", "polyfitHeatCapacity"], [100, 3, 1, "", "polyfitLinearExpansionPercent"], [100, 3, 1, "", "polyfitThermalConductivity"], [100, 4, 1, "", "propertyValidTemperature"], [100, 4, 1, "", "refTempK"], [100, 4, 1, "", "references"], [100, 3, 1, "", "setDefaultMassFracs"], [100, 3, 1, "", "thermalConductivity"]], "armi.materials.lead": [[101, 2, 1, "", "Lead"]], "armi.materials.lead.Lead": [[101, 3, 1, "", "heatCapacity"], [101, 4, 1, "", "propertyValidTemperature"], [101, 3, 1, "", "pseudoDensity"], [101, 3, 1, "", "setDefaultMassFracs"], [101, 3, 1, "", "volumetricExpansion"]], "armi.materials.leadBismuth": [[102, 2, 1, "", "LeadBismuth"]], "armi.materials.leadBismuth.LeadBismuth": [[102, 3, 1, "", "dynamicVisc"], [102, 3, 1, "", "heatCapacity"], [102, 4, 1, "", "propertyValidTemperature"], [102, 3, 1, "", "pseudoDensity"], [102, 3, 1, "", "setDefaultMassFracs"], [102, 3, 1, "", "thermalConductivity"], [102, 3, 1, "", "volumetricExpansion"]], "armi.materials.lithium": [[103, 2, 1, "", "Lithium"]], "armi.materials.lithium.Lithium": [[103, 3, 1, "", "applyInputParams"], [103, 3, 1, "", "boilingPoint"], [103, 4, 1, "", "enrichedNuclide"], [103, 3, 1, "", "heatCapacity"], [103, 3, 1, "", "meltingPoint"], [103, 3, 1, "", "pseudoDensity"], [103, 4, 1, "", "references"], [103, 3, 1, "", "setDefaultMassFracs"], [103, 3, 1, "", "thermalConductivity"]], "armi.materials.magnesium": [[104, 2, 1, "", "Magnesium"]], "armi.materials.magnesium.Magnesium": [[104, 4, 1, "", "propertyValidTemperature"], [104, 3, 1, "", "pseudoDensity"], [104, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.material": [[105, 2, 1, "", "Fluid"], [105, 2, 1, "", "FuelMaterial"], [105, 2, 1, "", "Material"], [105, 2, 1, "", "SimpleSolid"], [105, 1, 1, "", "parentAwareDensityRedirect"]], "armi.materials.material.Fluid": [[105, 3, 1, "", "density"], [105, 3, 1, "", "getTempChangeForDensityChange"], [105, 3, 1, "", "getThermalExpansionDensityReduction"], [105, 3, 1, "", "linearExpansion"]], "armi.materials.material.FuelMaterial": [[105, 3, 1, "", "applyInputParams"], [105, 4, 1, "", "class1_custom_isotopics"], [105, 4, 1, "", "class1_wt_frac"], [105, 4, 1, "", "class2_custom_isotopics"], [105, 3, 1, "", "density"], [105, 3, 1, "", "duplicate"], [105, 4, 1, "", "puFrac"], [105, 4, 1, "", "uFrac"], [105, 4, 1, "", "zrFrac"]], "armi.materials.material.Material": [[105, 4, 1, "", "DATA_SOURCE"], [105, 3, 1, "", "adjustMassEnrichment"], [105, 3, 1, "", "adjustMassFrac"], [105, 3, 1, "", "adjustTD"], [105, 3, 1, "", "applyInputParams"], [105, 3, 1, "", "backUp"], [105, 3, 1, "", "checkPropertyTempRange"], [105, 3, 1, "", "checkTempRange"], [105, 3, 1, "", "clearCache"], [105, 3, 1, "", "clearMassFrac"], [105, 3, 1, "", "density"], [105, 3, 1, "", "densityKgM3"], [105, 3, 1, "", "densityTimesHeatCapacity"], [105, 3, 1, "", "duplicate"], [105, 4, 1, "", "enrichedNuclide"], [105, 5, 1, "", "gasPorosity"], [105, 3, 1, "", "getChildren"], [105, 3, 1, "", "getChildrenWithFlags"], [105, 3, 1, "", "getCorrosionRate"], [105, 3, 1, "", "getMassFrac"], [105, 3, 1, "", "getName"], [105, 3, 1, "", "getNuclides"], [105, 3, 1, "", "getProperty"], [105, 3, 1, "", "getTD"], [105, 3, 1, "", "getTempChangeForDensityChange"], [105, 3, 1, "", "getTemperatureAtDensity"], [105, 3, 1, "", "getThermalExpansionDensityReduction"], [105, 3, 1, "", "heatCapacity"], [105, 3, 1, "", "linearExpansion"], [105, 3, 1, "", "linearExpansionFactor"], [105, 3, 1, "", "linearExpansionPercent"], [105, 5, 1, "", "liquidPorosity"], [105, 4, 1, "", "modelConst"], [105, 5, 1, "", "name"], [105, 4, 1, "", "propertyValidTemperature"], [105, 3, 1, "", "pseudoDensity"], [105, 3, 1, "", "pseudoDensityKgM3"], [105, 4, 1, "", "references"], [105, 3, 1, "", "removeNucMassFrac"], [105, 3, 1, "", "restoreBackup"], [105, 3, 1, "", "setDefaultMassFracs"], [105, 3, 1, "", "setMassFrac"], [105, 3, 1, "", "thermalConductivity"], [105, 4, 1, "", "thermalScatteringLaws"], [105, 3, 1, "", "volumetricExpansion"], [105, 3, 1, "", "yieldStrength"]], "armi.materials.material.SimpleSolid": [[105, 3, 1, "", "density"], [105, 3, 1, "", "linearExpansionPercent"], [105, 3, 1, "", "pseudoDensity"], [105, 4, 1, "", "refTempK"]], "armi.materials.mgO": [[106, 2, 1, "", "MgO"]], "armi.materials.mgO.MgO": [[106, 3, 1, "", "density"], [106, 3, 1, "", "linearExpansionPercent"], [106, 4, 1, "", "propertyValidTemperature"], [106, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.molybdenum": [[108, 2, 1, "", "Molybdenum"]], "armi.materials.molybdenum.Molybdenum": [[108, 3, 1, "", "density"], [108, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.mox": [[109, 2, 1, "", "MOX"]], "armi.materials.mox.MOX": [[109, 3, 1, "", "applyInputParams"], [109, 4, 1, "", "enrichedNuclide"], [109, 3, 1, "", "getMassFracPuO2"], [109, 3, 1, "", "getMolFracPuO2"], [109, 3, 1, "", "meltingPoint"], [109, 3, 1, "", "setDefaultMassFracs"], [109, 3, 1, "", "setMassFracPuO2"]], "armi.materials.nZ": [[110, 2, 1, "", "NZ"]], "armi.materials.nZ.NZ": [[110, 3, 1, "", "density"], [110, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.potassium": [[111, 2, 1, "", "Potassium"]], "armi.materials.potassium.Potassium": [[111, 4, 1, "", "propertyValidTemperature"], [111, 3, 1, "", "pseudoDensity"]], "armi.materials.scandiumOxide": [[112, 2, 1, "", "Sc2O3"]], "armi.materials.scandiumOxide.Sc2O3": [[112, 3, 1, "", "density"], [112, 3, 1, "", "linearExpansionPercent"], [112, 4, 1, "", "propertyValidTemperature"], [112, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.siC": [[113, 2, 1, "", "SiC"]], "armi.materials.siC.SiC": [[113, 3, 1, "", "cumulativeLinearExpansion"], [113, 3, 1, "", "density"], [113, 3, 1, "", "heatCapacity"], [113, 3, 1, "", "meltingPoint"], [113, 4, 1, "", "propertyEquation"], [113, 4, 1, "", "propertyNotes"], [113, 4, 1, "", "propertyUnits"], [113, 4, 1, "", "propertyValidTemperature"], [113, 3, 1, "", "pseudoDensity"], [113, 4, 1, "", "refTempK"], [113, 4, 1, "", "references"], [113, 3, 1, "", "setDefaultMassFracs"], [113, 3, 1, "", "thermalConductivity"], [113, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.sodium": [[114, 2, 1, "", "Sodium"]], "armi.materials.sodium.Sodium": [[114, 3, 1, "", "enthalpy"], [114, 4, 1, "", "propertyValidTemperature"], [114, 3, 1, "", "pseudoDensity"], [114, 3, 1, "", "setDefaultMassFracs"], [114, 3, 1, "", "specificVolumeLiquid"], [114, 3, 1, "", "thermalConductivity"]], "armi.materials.sodiumChloride": [[115, 2, 1, "", "NaCl"]], "armi.materials.sodiumChloride.NaCl": [[115, 3, 1, "", "density"], [115, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.sulfur": [[116, 2, 1, "", "Sulfur"]], "armi.materials.sulfur.Sulfur": [[116, 3, 1, "", "applyInputParams"], [116, 4, 1, "", "propertyValidTemperature"], [116, 3, 1, "", "pseudoDensity"], [116, 3, 1, "", "setDefaultMassFracs"], [116, 3, 1, "", "updateTD"], [116, 3, 1, "", "volumetricExpansion"]], "armi.materials.tZM": [[117, 2, 1, "", "TZM"]], "armi.materials.tZM.TZM": [[117, 3, 1, "", "density"], [117, 3, 1, "", "linearExpansionPercent"], [117, 4, 1, "", "percentThermalExpansion"], [117, 4, 1, "", "propertyValidTemperature"], [117, 4, 1, "", "references"], [117, 3, 1, "", "setDefaultMassFracs"], [117, 4, 1, "", "temperatureC"]], "armi.materials.tantalum": [[118, 2, 1, "", "Tantalum"]], "armi.materials.tantalum.Tantalum": [[118, 3, 1, "", "density"], [118, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.tests": [[120, 0, 0, "-", "test__init__"], [121, 0, 0, "-", "test_air"], [122, 0, 0, "-", "test_b4c"], [123, 0, 0, "-", "test_be9"], [124, 0, 0, "-", "test_graphite"], [125, 0, 0, "-", "test_lithium"], [126, 0, 0, "-", "test_materials"], [127, 0, 0, "-", "test_sic"], [128, 0, 0, "-", "test_sulfur"], [129, 0, 0, "-", "test_thoriumOxide"], [130, 0, 0, "-", "test_uZr"], [131, 0, 0, "-", "test_water"]], "armi.materials.tests.test__init__": [[120, 2, 1, "", "Materials__init__Tests"], [120, 1, 1, "", "betterSubClassCheck"]], "armi.materials.tests.test__init__.Materials__init__Tests": [[120, 3, 1, "", "test_canAccessClassesFromPackage"], [120, 3, 1, "", "test_packageClassesEqualModuleClasses"]], "armi.materials.tests.test_air": [[121, 2, 1, "", "Test_Air"]], "armi.materials.tests.test_air.Test_Air": [[121, 3, 1, "", "test_heatCapacity"], [121, 3, 1, "", "test_massFrac"], [121, 3, 1, "", "test_pseudoDensity"], [121, 3, 1, "", "test_thermalConductivity"], [121, 3, 1, "", "test_validRanges"]], "armi.materials.tests.test_b4c": [[122, 2, 1, "", "B4C_TestCase"]], "armi.materials.tests.test_b4c.B4C_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_be9": [[123, 2, 1, "", "Test_Be9"]], "armi.materials.tests.test_be9.Test_Be9": [[123, 4, 1, "", "MAT_CLASS"], [123, 3, 1, "", "test_propertyValidTemperature"], [123, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_graphite": [[124, 2, 1, "", "Graphite_TestCase"]], "armi.materials.tests.test_graphite.Graphite_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_density"], [124, 3, 1, "", "test_linearExpansionPercent"], [124, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_lithium": [[125, 2, 1, "", "Lithium_TestCase"]], "armi.materials.tests.test_lithium.Lithium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 4, 1, "", "defaultMassFrac"], [125, 3, 1, "", "test_Lithium_material_modifications"], [125, 3, 1, "", "test_boilingPoint"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_meltingPoint"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials": [[126, 2, 1, "", "Alloy200_TestCase"], [126, 2, 1, "", "CaH2_TestCase"], [126, 2, 1, "", "Californium_TestCase"], [126, 2, 1, "", "Cesium_TestCase"], [126, 2, 1, "", "Copper_TestCase"], [126, 2, 1, "", "FuelMaterial_TestCase"], [126, 2, 1, "", "Hafnium_TestCase"], [126, 2, 1, "", "HastelloyN_TestCase"], [126, 2, 1, "", "Inconel600_TestCase"], [126, 2, 1, "", "Inconel625_TestCase"], [126, 2, 1, "", "InconelX750_TestCase"], [126, 2, 1, "", "Inconel_TestCase"], [126, 2, 1, "", "LeadBismuth_TestCase"], [126, 2, 1, "", "Lead_TestCase"], [126, 2, 1, "", "MOX_TestCase"], [126, 2, 1, "", "MagnesiumOxide_TestCase"], [126, 2, 1, "", "Magnesium_TestCase"], [126, 2, 1, "", "MaterialConstructionTests"], [126, 2, 1, "", "MaterialFindingTests"], [126, 2, 1, "", "Mixture_TestCase"], [126, 2, 1, "", "Molybdenum_TestCase"], [126, 2, 1, "", "NaCl_TestCase"], [126, 2, 1, "", "NiobiumZirconium_TestCase"], [126, 2, 1, "", "Potassium_TestCase"], [126, 2, 1, "", "ScandiumOxide_TestCase"], [126, 2, 1, "", "Sodium_TestCase"], [126, 2, 1, "", "Sulfur_TestCase"], [126, 2, 1, "", "TZM_TestCase"], [126, 2, 1, "", "Tantalum_TestCase"], [126, 2, 1, "", "ThoriumOxide_TestCase"], [126, 2, 1, "", "ThoriumUraniumMetal_TestCase"], [126, 2, 1, "", "Thorium_TestCase"], [126, 2, 1, "", "UraniumOxide_TestCase"], [126, 2, 1, "", "Uranium_TestCase"], [126, 2, 1, "", "Void_TestCase"], [126, 2, 1, "", "YttriumOxide_TestCase"], [126, 2, 1, "", "ZincOxide_TestCase"], [126, 2, 1, "", "Zr_TestCase"]], "armi.materials.tests.test_materials.Alloy200_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_linearExpansionHotter"], [126, 3, 1, "", "test_nickleContent"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.CaH2_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Californium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_getCorrosionRate"], [126, 3, 1, "", "test_porosities"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Cesium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Copper_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_densityNeverChanges"], [126, 3, 1, "", "test_getChildren"], [126, 3, 1, "", "test_getChildrenWithFlags"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.FuelMaterial_TestCase": [[126, 4, 1, "", "baseInput"], [126, 3, 1, "", "loadAssembly"], [126, 3, 1, "", "test_class1Class2_class1_wt_frac"], [126, 3, 1, "", "test_class1Class2_classX_custom_isotopics"]], "armi.materials.tests.test_materials.Hafnium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.HastelloyN_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_meanCoefficientThermalExpansion"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Inconel600_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_00_setDefaultMassFracs"], [126, 3, 1, "", "test_01_linearExpansionPercent"], [126, 3, 1, "", "test_02_linearExpansion"], [126, 3, 1, "", "test_03_pseudoDensity"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_polyfitHeatCapacity"], [126, 3, 1, "", "test_polyfitLinearExpansionPercent"], [126, 3, 1, "", "test_polyfitThermalConductivity"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel625_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_00_setDefaultMassFracs"], [126, 3, 1, "", "test_01_linearExpansionPercent"], [126, 3, 1, "", "test_02_linearExpansion"], [126, 3, 1, "", "test_03_pseudoDensity"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_polyfitHeatCapacity"], [126, 3, 1, "", "test_polyfitLinearExpansionPercent"], [126, 3, 1, "", "test_polyfitThermalConductivity"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.InconelX750_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_00_setDefaultMassFracs"], [126, 3, 1, "", "test_01_linearExpansionPercent"], [126, 3, 1, "", "test_02_linearExpansion"], [126, 3, 1, "", "test_03_pseudoDensity"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_polyfitHeatCapacity"], [126, 3, 1, "", "test_polyfitLinearExpansionPercent"], [126, 3, 1, "", "test_polyfitThermalConductivity"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel_TestCase": [[126, 3, 1, "", "test_Iconel800_linearExpansion"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.LeadBismuth_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_dynamicVisc"], [126, 3, 1, "", "test_getTempChangeForDensityChange"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_setDefaultMassFracs"], [126, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.Lead_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_setDefaultMassFracs"], [126, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.MOX_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_applyInputParams"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_getMassFracPuO2"], [126, 3, 1, "", "test_getMeltingPoint"], [126, 3, 1, "", "test_getMolFracPuO2"]], "armi.materials.tests.test_materials.MagnesiumOxide_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Magnesium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.MaterialConstructionTests": [[126, 3, 1, "", "test_material_initialization"]], "armi.materials.tests.test_materials.MaterialFindingTests": [[126, 3, 1, "", "test_findMaterial"], [126, 3, 1, "", "test_namespacing"]], "armi.materials.tests.test_materials.Mixture_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.Molybdenum_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.NaCl_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.NiobiumZirconium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Potassium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ScandiumOxide_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Sodium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_enthalpy"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_specificVolumeLiquid"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Sulfur_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_setDefaultMassFracs"], [126, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.TZM_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_00_applyInputParams"], [126, 3, 1, "", "test_01_pseudoDensity"], [126, 3, 1, "", "test_02_linearExpansionPercent"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Tantalum_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ThoriumOxide_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_meltingPoint"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_meltingPoint"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Thorium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_meltingPoint"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_setDefaultMassFracs"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.UraniumOxide_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_adjustMassEnrichment"], [126, 3, 1, "", "test_applyInputParams"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_densityTimesHeatCapactiy"], [126, 3, 1, "", "test_duplicate"], [126, 3, 1, "", "test_getDensityExpansion3D"], [126, 3, 1, "", "test_getTempChangeForDensityChange"], [126, 3, 1, "", "test_getTemperatureAtDensity"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_meltingPoint"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_removeNucMassFrac"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Uranium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_applyInputParams"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Void_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.YttriumOxide_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ZincOxide_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Zr_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_sic": [[127, 2, 1, "", "Test_SiC"]], "armi.materials.tests.test_sic.Test_SiC": [[127, 4, 1, "", "MAT_CLASS"], [127, 3, 1, "", "test_heatCapacity"], [127, 3, 1, "", "test_meltingPoint"], [127, 3, 1, "", "test_propertyValidTemperature"], [127, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_sulfur": [[128, 2, 1, "", "Sulfur_TestCase"]], "armi.materials.tests.test_sulfur.Sulfur_TestCase": [[128, 4, 1, "", "MAT_CLASS"], [128, 3, 1, "", "test_propertyValidTemperature"], [128, 3, 1, "", "test_sulfur_density_frac"]], "armi.materials.tests.test_thoriumOxide": [[129, 2, 1, "", "ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase": [[129, 4, 1, "", "MAT_CLASS"], [129, 3, 1, "", "test_linearExpansionPercent"], [129, 3, 1, "", "test_propertyValidTemperature"], [129, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_uZr": [[130, 2, 1, "", "UZR_TestCase"]], "armi.materials.tests.test_uZr.UZR_TestCase": [[130, 4, 1, "", "MAT_CLASS"], [130, 3, 1, "", "test_TD"], [130, 3, 1, "", "test_cache"], [130, 3, 1, "", "test_density"], [130, 3, 1, "", "test_densityKgM3"], [130, 3, 1, "", "test_duplicate"], [130, 3, 1, "", "test_isPicklable"], [130, 3, 1, "", "test_propertyValidTemperature"], [130, 3, 1, "", "test_pseudoDensityKgM3"]], "armi.materials.tests.test_water": [[131, 2, 1, "", "Test_Water"]], "armi.materials.tests.test_water.Test_Water": [[131, 3, 1, "", "test_massFrac"], [131, 3, 1, "", "test_propertyValidTemperature"], [131, 3, 1, "", "test_validateNames"], [131, 3, 1, "", "test_water_at_boiling"], [131, 3, 1, "", "test_water_at_critcalPoint"], [131, 3, 1, "", "test_water_at_freezing"]], "armi.materials.thU": [[132, 2, 1, "", "ThU"]], "armi.materials.thU.ThU": [[132, 3, 1, "", "applyInputParams"], [132, 4, 1, "", "enrichedNuclide"], [132, 3, 1, "", "getEnrichment"], [132, 3, 1, "", "linearExpansion"], [132, 3, 1, "", "meltingPoint"], [132, 4, 1, "", "propertyValidTemperature"], [132, 3, 1, "", "setDefaultMassFracs"], [132, 3, 1, "", "thermalConductivity"]], "armi.materials.thorium": [[133, 2, 1, "", "Thorium"]], "armi.materials.thorium.Thorium": [[133, 3, 1, "", "linearExpansion"], [133, 3, 1, "", "meltingPoint"], [133, 4, 1, "", "propertyValidTemperature"], [133, 3, 1, "", "setDefaultMassFracs"], [133, 3, 1, "", "thermalConductivity"]], "armi.materials.thoriumOxide": [[134, 2, 1, "", "ThO2"], [134, 2, 1, "", "ThoriumOxide"]], "armi.materials.thoriumOxide.ThoriumOxide": [[134, 3, 1, "", "applyInputParams"], [134, 3, 1, "", "density"], [134, 3, 1, "", "linearExpansion"], [134, 3, 1, "", "linearExpansionPercent"], [134, 3, 1, "", "meltingPoint"], [134, 4, 1, "", "propertyValidTemperature"], [134, 3, 1, "", "setDefaultMassFracs"], [134, 3, 1, "", "thermalConductivity"]], "armi.materials.uThZr": [[135, 2, 1, "", "UThZr"]], "armi.materials.uThZr.UThZr": [[135, 3, 1, "", "applyInputParams"], [135, 4, 1, "", "enrichedNuclide"], [135, 3, 1, "", "pseudoDensity"], [135, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.uZr": [[136, 2, 1, "", "UZr"]], "armi.materials.uZr.UZr": [[136, 3, 1, "", "applyInputParams"], [136, 4, 1, "", "enrichedNuclide"], [136, 3, 1, "", "linearExpansionPercent"], [136, 3, 1, "", "setDefaultMassFracs"], [136, 4, 1, "", "uFracDefault"], [136, 4, 1, "", "zrFracDefault"]], "armi.materials.uranium": [[137, 2, 1, "", "Uranium"]], "armi.materials.uranium.Uranium": [[137, 3, 1, "", "applyInputParams"], [137, 3, 1, "", "density"], [137, 4, 1, "", "enrichedNuclide"], [137, 3, 1, "", "heatCapacity"], [137, 3, 1, "", "linearExpansion"], [137, 3, 1, "", "linearExpansionPercent"], [137, 4, 1, "", "materialIntro"], [137, 3, 1, "", "meltingPoint"], [137, 4, 1, "", "propertyEquation"], [137, 4, 1, "", "propertyNotes"], [137, 4, 1, "", "propertyRawData"], [137, 4, 1, "", "propertyUnits"], [137, 4, 1, "", "propertyValidTemperature"], [137, 3, 1, "", "pseudoDensity"], [137, 4, 1, "", "refDens"], [137, 4, 1, "", "references"], [137, 3, 1, "", "setDefaultMassFracs"], [137, 3, 1, "", "thermalConductivity"]], "armi.materials.uraniumOxide": [[138, 2, 1, "", "HeatCapacityConstants"], [138, 2, 1, "", "UO2"], [138, 2, 1, "", "UraniumOxide"]], "armi.materials.uraniumOxide.HeatCapacityConstants": [[138, 4, 1, "", "Ea"], [138, 4, 1, "", "c1"], [138, 4, 1, "", "c2"], [138, 4, 1, "", "c3"], [138, 4, 1, "", "theta"]], "armi.materials.uraniumOxide.UraniumOxide": [[138, 4, 1, "", "REFERENCE_TEMPERATURE"], [138, 3, 1, "", "applyInputParams"], [138, 3, 1, "", "density"], [138, 4, 1, "", "enrichedNuclide"], [138, 3, 1, "", "heatCapacity"], [138, 4, 1, "", "heatCapacityConstants"], [138, 3, 1, "", "linearExpansion"], [138, 3, 1, "", "linearExpansionPercent"], [138, 3, 1, "", "meltingPoint"], [138, 4, 1, "", "propertyUnits"], [138, 4, 1, "", "propertyValidTemperature"], [138, 4, 1, "", "references"], [138, 3, 1, "", "setDefaultMassFracs"], [138, 3, 1, "", "thermalConductivity"], [138, 4, 1, "", "thermalConductivityTable"], [138, 4, 1, "", "thermalConductivityTableK"], [138, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.void": [[139, 2, 1, "", "Void"]], "armi.materials.void.Void": [[139, 3, 1, "", "density"], [139, 3, 1, "", "pseudoDensity"]], "armi.materials.water": [[140, 2, 1, "", "SaturatedSteam"], [140, 2, 1, "", "SaturatedWater"], [140, 2, 1, "", "Water"]], "armi.materials.water.SaturatedSteam": [[140, 3, 1, "", "pseudoDensity"]], "armi.materials.water.SaturatedWater": [[140, 3, 1, "", "pseudoDensity"]], "armi.materials.water.Water": [[140, 4, 1, "", "ALPHA_0"], [140, 4, 1, "", "DENSITY_CRITICAL_GPERCUBICCENTIMETER"], [140, 4, 1, "", "DENSITY_CRITICAL_KGPERCUBICMETER"], [140, 4, 1, "", "PHI_0"], [140, 4, 1, "", "TEMPERATURE_CRITICAL_K"], [140, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_MPA"], [140, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_PA"], [140, 3, 1, "", "auxiliaryQuantitySpecificEnthalpy"], [140, 3, 1, "", "auxiliaryQuantitySpecificEntropy"], [140, 4, 1, "", "d"], [140, 3, 1, "", "enthalpy"], [140, 3, 1, "", "entropy"], [140, 3, 1, "", "pseudoDensity"], [140, 4, 1, "", "references"], [140, 3, 1, "", "setDefaultMassFracs"], [140, 3, 1, "", "tau"], [140, 4, 1, "", "thermalScatteringLaws"], [140, 3, 1, "", "theta"], [140, 3, 1, "", "vaporPressure"], [140, 3, 1, "", "vaporPressurePrime"]], "armi.materials.yttriumOxide": [[141, 2, 1, "", "Y2O3"]], "armi.materials.yttriumOxide.Y2O3": [[141, 3, 1, "", "density"], [141, 3, 1, "", "linearExpansionPercent"], [141, 4, 1, "", "propertyValidTemperature"], [141, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zincOxide": [[142, 2, 1, "", "ZnO"]], "armi.materials.zincOxide.ZnO": [[142, 3, 1, "", "density"], [142, 3, 1, "", "linearExpansionPercent"], [142, 4, 1, "", "propertyValidTemperature"], [142, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zr": [[143, 2, 1, "", "Zr"]], "armi.materials.zr.Zr": [[143, 3, 1, "", "density"], [143, 3, 1, "", "linearExpansion"], [143, 3, 1, "", "linearExpansionPercent"], [143, 4, 1, "", "linearExpansionTable"], [143, 4, 1, "", "linearExpansionTableK"], [143, 4, 1, "", "propertyValidTemperature"], [143, 4, 1, "", "refTempK"], [143, 4, 1, "", "references"], [143, 3, 1, "", "setDefaultMassFracs"], [143, 3, 1, "", "thermalConductivity"]], "armi.migration": [[146, 0, 0, "-", "base"], [147, 0, 0, "-", "m0_1_3"], [148, 0, 0, "-", "m0_1_6"], [149, 0, 0, "-", "tests"]], "armi.migration.base": [[146, 2, 1, "", "BlueprintsMigration"], [146, 2, 1, "", "DatabaseMigration"], [146, 2, 1, "", "Migration"], [146, 2, 1, "", "SettingsMigration"]], "armi.migration.base.Migration": [[146, 3, 1, "", "apply"], [146, 4, 1, "", "fromVersion"], [146, 4, 1, "", "toVersion"]], "armi.migration.m0_1_3": [[147, 2, 1, "", "RemoveCentersFromBlueprints"], [147, 2, 1, "", "UpdateElementalNuclides"]], "armi.migration.m0_1_3.RemoveCentersFromBlueprints": [[147, 4, 1, "", "fromVersion"], [147, 4, 1, "", "toVersion"]], "armi.migration.m0_1_3.UpdateElementalNuclides": [[147, 4, 1, "", "deletions"], [147, 4, 1, "", "fromVersion"], [147, 4, 1, "", "swaps"], [147, 4, 1, "", "toVersion"]], "armi.migration.m0_1_6": [[148, 2, 1, "", "ConvertAlphanumLocationSettingsToNum"], [148, 1, 1, "", "getIndicesFromDIF3DStyleLocatorLabel"]], "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum": [[148, 4, 1, "", "fromVersion"], [148, 4, 1, "", "toVersion"]], "armi.migration.tests": [[150, 0, 0, "-", "test_m0_1_6"], [151, 0, 0, "-", "test_migration_base"]], "armi.migration.tests.test_m0_1_6": [[150, 2, 1, "", "TestMigration"]], "armi.migration.tests.test_m0_1_6.TestMigration": [[150, 3, 1, "", "test_locationLabelMigration"]], "armi.migration.tests.test_migration_base": [[151, 2, 1, "", "TestMigrationBases"], [151, 2, 1, "", "TestSettingsMigration"]], "armi.migration.tests.test_migration_base.TestMigrationBases": [[151, 3, 1, "", "test_basic_validation"]], "armi.migration.tests.test_migration_base.TestSettingsMigration": [[151, 3, 1, "", "test_loadStreamFromPath"]], "armi.mpiActions": [[152, 2, 1, "", "DistributeStateAction"], [152, 2, 1, "", "DistributionAction"], [152, 2, 1, "", "MpiAction"], [152, 7, 1, "", "MpiActionError"], [152, 1, 1, "", "runActions"], [152, 1, 1, "", "runActionsInSerial"]], "armi.mpiActions.DistributeStateAction": [[152, 3, 1, "", "invokeHook"]], "armi.mpiActions.DistributionAction": [[152, 3, 1, "", "invokeHook"]], "armi.mpiActions.MpiAction": [[152, 3, 1, "", "broadcast"], [152, 3, 1, "", "gather"], [152, 3, 1, "", "invoke"], [152, 3, 1, "", "invokeAsMaster"], [152, 3, 1, "", "invokeHook"], [152, 3, 1, "", "mpiFlatten"], [152, 3, 1, "", "mpiIter"], [152, 5, 1, "", "parallel"]], "armi.nucDirectory": [[154, 0, 0, "-", "elements"], [155, 0, 0, "-", "nucDir"], [156, 0, 0, "-", "nuclideBases"], [157, 0, 0, "-", "tests"], [163, 0, 0, "-", "thermalScattering"], [164, 0, 0, "-", "transmutations"]], "armi.nucDirectory.elements": [[154, 2, 1, "", "ChemicalGroup"], [154, 2, 1, "", "ChemicalPhase"], [154, 2, 1, "", "Element"], [154, 1, 1, "", "addGlobalElement"], [154, 1, 1, "", "destroyGlobalElements"], [154, 1, 1, "", "factory"], [154, 1, 1, "", "getElementZ"], [154, 1, 1, "", "getElementsByChemicalGroup"], [154, 1, 1, "", "getElementsByChemicalPhase"], [154, 1, 1, "", "getName"], [154, 1, 1, "", "getSymbol"]], "armi.nucDirectory.elements.ChemicalGroup": [[154, 4, 1, "", "ACTINIDE"], [154, 4, 1, "", "ALKALINE_EARTH_METAL"], [154, 4, 1, "", "ALKALI_METAL"], [154, 4, 1, "", "HALOGEN"], [154, 4, 1, "", "LANTHANIDE"], [154, 4, 1, "", "METALLOID"], [154, 4, 1, "", "NOBLE_GAS"], [154, 4, 1, "", "NONMETAL"], [154, 4, 1, "", "POST_TRANSITION_METAL"], [154, 4, 1, "", "TRANSITION_METAL"], [154, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.ChemicalPhase": [[154, 4, 1, "", "GAS"], [154, 4, 1, "", "LIQUID"], [154, 4, 1, "", "SOLID"], [154, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.Element": [[154, 3, 1, "", "append"], [154, 3, 1, "", "getNaturalIsotopics"], [154, 3, 1, "", "isHeavyMetal"], [154, 3, 1, "", "isNaturallyOccurring"]], "armi.nucDirectory.nucDir": [[155, 1, 1, "", "getAtomicWeight"], [155, 1, 1, "", "getElementName"], [155, 1, 1, "", "getElementSymbol"], [155, 1, 1, "", "getMc2Label"], [155, 1, 1, "", "getNaturalIsotopics"], [155, 1, 1, "", "getNaturalMassIsotopics"], [155, 1, 1, "", "getNuclide"], [155, 1, 1, "", "getNuclideFromName"], [155, 1, 1, "", "getNuclideNames"], [155, 1, 1, "", "getNuclides"], [155, 1, 1, "", "getThresholdDisplacementEnergy"], [155, 1, 1, "", "isFissile"], [155, 1, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases": [[156, 2, 1, "", "DummyNuclideBase"], [156, 2, 1, "", "IMcnpNuclide"], [156, 2, 1, "", "INuclide"], [156, 2, 1, "", "LumpNuclideBase"], [156, 2, 1, "", "NaturalNuclideBase"], [156, 2, 1, "", "NuclideBase"], [156, 2, 1, "", "NuclideInterface"], [156, 2, 1, "", "NuclideWrapper"], [156, 1, 1, "", "addGlobalNuclide"], [156, 1, 1, "", "addNuclideBases"], [156, 1, 1, "", "changeLabel"], [156, 1, 1, "", "destroyGlobalNuclides"], [156, 1, 1, "", "factory"], [156, 1, 1, "", "fromName"], [156, 1, 1, "", "getDepletableNuclides"], [156, 1, 1, "", "getIsotopics"], [156, 1, 1, "", "imposeBurnChain"], [156, 1, 1, "", "initReachableActiveNuclidesThroughBurnChain"], [156, 1, 1, "", "isMonoIsotopicElement"], [156, 1, 1, "", "isotopes"], [156, 1, 1, "", "readMCCNuclideData"], [156, 1, 1, "", "single"], [156, 1, 1, "", "updateNuclideBasesForSpecialCases"], [156, 1, 1, "", "where"]], "armi.nucDirectory.nuclideBases.DummyNuclideBase": [[156, 3, 1, "", "getMcc2Id"], [156, 3, 1, "", "getMcc3Id"], [156, 3, 1, "", "getMcc3IdEndfbVII0"], [156, 3, 1, "", "getMcc3IdEndfbVII1"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.IMcnpNuclide": [[156, 3, 1, "", "getAAAZZZSId"], [156, 3, 1, "", "getMcnpId"]], "armi.nucDirectory.nuclideBases.INuclide": [[156, 4, 1, "", "DECAY"], [156, 4, 1, "", "SPONTANEOUS_FISSION"], [156, 4, 1, "", "TRANSMUTATION"], [156, 4, 1, "", "fissile"], [156, 3, 1, "", "getDatabaseName"], [156, 3, 1, "", "getDecay"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "isFissile"], [156, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.LumpNuclideBase": [[156, 3, 1, "", "getMcc2Id"], [156, 3, 1, "", "getMcc3Id"], [156, 3, 1, "", "getMcc3IdEndfbVII0"], [156, 3, 1, "", "getMcc3IdEndfbVII1"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NaturalNuclideBase": [[156, 3, 1, "", "getAAAZZZSId"], [156, 3, 1, "", "getEndfMatNum"], [156, 3, 1, "", "getMcc2Id"], [156, 3, 1, "", "getMcc3Id"], [156, 3, 1, "", "getMcc3IdEndfbVII0"], [156, 3, 1, "", "getMcc3IdEndfbVII1"], [156, 3, 1, "", "getMcnpId"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideBase": [[156, 3, 1, "", "getAAAZZZSId"], [156, 3, 1, "", "getEndfMatNum"], [156, 3, 1, "", "getMcc2Id"], [156, 3, 1, "", "getMcc3Id"], [156, 3, 1, "", "getMcc3IdEndfbVII0"], [156, 3, 1, "", "getMcc3IdEndfbVII1"], [156, 3, 1, "", "getMcnpId"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideInterface": [[156, 3, 1, "", "getDatabaseName"], [156, 3, 1, "", "getDecay"], [156, 3, 1, "", "getMcc2Id"], [156, 3, 1, "", "getMcc3Id"], [156, 3, 1, "", "getMcc3IdEndfbVII0"], [156, 3, 1, "", "getMcc3IdEndfbVII1"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "getSerpentId"], [156, 3, 1, "", "isFissile"], [156, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NuclideWrapper": [[156, 3, 1, "", "getDatabaseName"], [156, 3, 1, "", "getDecay"], [156, 3, 1, "", "getMcc2Id"], [156, 3, 1, "", "getMcc3Id"], [156, 3, 1, "", "getMcc3IdEndfbVII0"], [156, 3, 1, "", "getMcc3IdEndfbVII1"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "isFissile"], [156, 3, 1, "", "isHeavyMetal"], [156, 5, 1, "", "name"], [156, 5, 1, "", "weight"]], "armi.nucDirectory.tests": [[158, 0, 0, "-", "test_elements"], [159, 0, 0, "-", "test_nucDirectory"], [160, 0, 0, "-", "test_nuclideBases"], [161, 0, 0, "-", "test_thermalScattering"], [162, 0, 0, "-", "test_transmutations"]], "armi.nucDirectory.tests.test_elements": [[158, 2, 1, "", "TestElement"]], "armi.nucDirectory.tests.test_elements.TestElement": [[158, 3, 1, "", "test_abundancesAddToOne"], [158, 3, 1, "", "test_element_addExistingElementFails"], [158, 3, 1, "", "test_element_addedElementAppearsInElementList"], [158, 3, 1, "", "test_element_elementByNameReturnsElement"], [158, 3, 1, "", "test_element_elementBySymbolReturnsElement"], [158, 3, 1, "", "test_element_elementByZReturnsElement"], [158, 3, 1, "", "test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"], [158, 3, 1, "", "test_element_isNaturallyOccurring"], [158, 3, 1, "", "test_elements_elementBulkProperties"], [158, 3, 1, "", "test_isHeavyMetal"]], "armi.nucDirectory.tests.test_nucDirectory": [[159, 2, 1, "", "TestNucDirectory"]], "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory": [[159, 3, 1, "", "test_getDisplacementEnergy"], [159, 3, 1, "", "test_nucDir_getNameForOldDashedNames"], [159, 3, 1, "", "test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"], [159, 3, 1, "", "test_nucDir_getNuclidesFromForBadName"]], "armi.nucDirectory.tests.test_nuclideBases": [[160, 2, 1, "", "TestAAAZZZSId"], [160, 2, 1, "", "TestNuclide"]], "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId": [[160, 3, 1, "", "test_AAAZZZSNameGenerator"]], "armi.nucDirectory.tests.test_nuclideBases.TestNuclide": [[160, 3, 1, "", "test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"], [160, 3, 1, "", "test_NaturalNuclideBase_getNatrualIsotpics"], [160, 3, 1, "", "test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"], [160, 3, 1, "", "test_NonMc2Nuclide"], [160, 3, 1, "", "test_curieDefinitionWithRa226"], [160, 3, 1, "", "test_getDecay"], [160, 3, 1, "", "test_getEndfMatNum"], [160, 3, 1, "", "test_kryptonDecayConstants"], [160, 3, 1, "", "test_loadMcc2Data"], [160, 3, 1, "", "test_loadMcc3EndfVII0Data"], [160, 3, 1, "", "test_loadMcc3EndfVII1Data"], [160, 3, 1, "", "test_nucBase_AllAbundancesAddToOne"], [160, 3, 1, "", "test_nucBases_AllDatabaseNamesAreUnique"], [160, 3, 1, "", "test_nucBases_AllLabelsAreUnique"], [160, 3, 1, "", "test_nucBases_Am242m"], [160, 3, 1, "", "test_nucBases_Mc2Elementals"], [160, 3, 1, "", "test_nucBases_NegativeZRaisesException"], [160, 3, 1, "", "test_nucBases_Z295RaisesException"], [160, 3, 1, "", "test_nucBases_databaseNamesStartWith_n"], [160, 3, 1, "", "test_nucBases_fromNameBadNameRaisesException"], [160, 3, 1, "", "test_nucBases_imposeBurnChainDecayBulkStatistics"], [160, 3, 1, "", "test_nucBases_imposeBurnChainTransmutationBulkStatistics"], [160, 3, 1, "", "test_nucBases_imposeBurn_nuSF"], [160, 3, 1, "", "test_nucBases_isHeavyMetal"], [160, 3, 1, "", "test_nucBases_labelAndNameCollsionsAreForSameNuclide"], [160, 3, 1, "", "test_nucBases_singleFailsWithMultipleMatches"], [160, 3, 1, "", "test_nucBases_singleFailsWithNoMatches"], [160, 3, 1, "", "test_nucBases_singleIsPrettySpecific"]], "armi.nucDirectory.tests.test_thermalScattering": [[161, 2, 1, "", "TestThermalScattering"], [161, 1, 1, "", "buildBlockWithTSL"], [161, 1, 1, "", "getNuclideThermalScatteringData"]], "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering": [[161, 3, 1, "", "test_ACECompound"], [161, 3, 1, "", "test_ACEElementInCompound"], [161, 3, 1, "", "test_ACEIsotope"], [161, 3, 1, "", "test_endf8Compound"], [161, 3, 1, "", "test_endf8ElementInCompound"], [161, 3, 1, "", "test_endf8Isotope"], [161, 3, 1, "", "test_failOnMultiple"], [161, 3, 1, "", "test_graphiteOnReactor"]], "armi.nucDirectory.tests.test_transmutations": [[162, 2, 1, "", "DecayModeTests"], [162, 2, 1, "", "TransmutationTests"], [162, 1, 1, "", "randomString"]], "armi.nucDirectory.tests.test_transmutations.DecayModeTests": [[162, 3, 1, "", "test_DecayMode_invalidReactionTypes"], [162, 3, 1, "", "test_DecayMode_validReactionTypes"]], "armi.nucDirectory.tests.test_transmutations.TransmutationTests": [[162, 3, 1, "", "test_Transmutation_invalidReactionTypes"], [162, 3, 1, "", "test_Transmutation_productParticle"], [162, 3, 1, "", "test_Transmutation_validReactionTypes"]], "armi.nucDirectory.thermalScattering": [[163, 2, 1, "", "ThermalScattering"], [163, 1, 1, "", "factory"]], "armi.nucDirectory.thermalScattering.ThermalScattering": [[163, 3, 1, "", "getSubjectNuclideBases"]], "armi.nucDirectory.transmutations": [[164, 2, 1, "", "DecayMode"], [164, 2, 1, "", "Transmutable"], [164, 2, 1, "", "Transmutation"]], "armi.nucDirectory.transmutations.Transmutable": [[164, 3, 1, "", "getPreferredProduct"]], "armi.nuclearDataIO": [[166, 0, 0, "-", "cccc"], [165, 1, 1, "", "getExpectedCOMPXSFileName"], [165, 1, 1, "", "getExpectedGAMISOFileName"], [165, 1, 1, "", "getExpectedISOTXSFileName"], [165, 1, 1, "", "getExpectedPMATRXFileName"], [196, 0, 0, "-", "nuclearFileMetadata"], [197, 0, 0, "-", "tests"], [201, 0, 0, "-", "xsCollections"], [202, 0, 0, "-", "xsLibraries"], [203, 0, 0, "-", "xsNuclides"]], "armi.nuclearDataIO.cccc": [[167, 0, 0, "-", "cccc"], [168, 0, 0, "-", "compxs"], [169, 0, 0, "-", "dif3d"], [170, 0, 0, "-", "dlayxs"], [171, 0, 0, "-", "fixsrc"], [172, 0, 0, "-", "gamiso"], [173, 0, 0, "-", "geodst"], [174, 0, 0, "-", "isotxs"], [175, 0, 0, "-", "labels"], [176, 0, 0, "-", "nhflux"], [177, 0, 0, "-", "pmatrx"], [178, 0, 0, "-", "pwdint"], [179, 0, 0, "-", "rtflux"], [180, 0, 0, "-", "rzflux"], [181, 0, 0, "-", "tests"]], "armi.nuclearDataIO.cccc.cccc": [[167, 2, 1, "", "AsciiRecordReader"], [167, 2, 1, "", "AsciiRecordWriter"], [167, 2, 1, "", "BinaryRecordReader"], [167, 2, 1, "", "BinaryRecordWriter"], [167, 2, 1, "", "DataContainer"], [167, 6, 1, "", "IMPLICIT_INT"], [167, 2, 1, "", "IORecord"], [167, 2, 1, "", "Stream"], [167, 2, 1, "", "StreamWithDataContainer"], [167, 1, 1, "", "getBlockBandwidth"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader": [[167, 3, 1, "", "close"], [167, 3, 1, "", "rwDouble"], [167, 3, 1, "", "rwFloat"], [167, 3, 1, "", "rwInt"], [167, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter": [[167, 3, 1, "", "close"], [167, 3, 1, "", "open"], [167, 3, 1, "", "rwDouble"], [167, 3, 1, "", "rwFloat"], [167, 3, 1, "", "rwInt"], [167, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader": [[167, 3, 1, "", "close"], [167, 3, 1, "", "open"], [167, 3, 1, "", "rwBool"], [167, 3, 1, "", "rwDouble"], [167, 3, 1, "", "rwFloat"], [167, 3, 1, "", "rwInt"], [167, 3, 1, "", "rwLong"], [167, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter": [[167, 3, 1, "", "close"], [167, 3, 1, "", "open"], [167, 3, 1, "", "rwBool"], [167, 3, 1, "", "rwDouble"], [167, 3, 1, "", "rwFloat"], [167, 3, 1, "", "rwInt"], [167, 3, 1, "", "rwLong"], [167, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.IORecord": [[167, 3, 1, "", "close"], [167, 4, 1, "", "count"], [167, 4, 1, "", "maxsize"], [167, 3, 1, "", "open"], [167, 3, 1, "", "rwBool"], [167, 3, 1, "", "rwDouble"], [167, 3, 1, "", "rwDoubleMatrix"], [167, 3, 1, "", "rwFloat"], [167, 3, 1, "", "rwImplicitlyTypedMap"], [167, 3, 1, "", "rwInt"], [167, 3, 1, "", "rwIntMatrix"], [167, 3, 1, "", "rwList"], [167, 3, 1, "", "rwMatrix"], [167, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.Stream": [[167, 3, 1, "", "createRecord"], [167, 3, 1, "", "readAscii"], [167, 3, 1, "", "readBinary"], [167, 3, 1, "", "readWrite"], [167, 3, 1, "", "writeAscii"], [167, 3, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.compxs": [[168, 2, 1, "", "CompxsRegion"], [168, 1, 1, "", "compare"]], "armi.nuclearDataIO.cccc.compxs.CompxsRegion": [[168, 3, 1, "", "allocateXS"], [168, 3, 1, "", "getXS"], [168, 3, 1, "", "initMetadata"], [168, 5, 1, "", "isFissile"], [168, 3, 1, "", "makeScatteringMatrices"], [168, 3, 1, "", "merge"]], "armi.nuclearDataIO.cccc.dif3d": [[169, 2, 1, "", "Dif3dData"], [169, 2, 1, "", "Dif3dStream"]], "armi.nuclearDataIO.cccc.dif3d.Dif3dStream": [[169, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.dlayxs": [[170, 2, 1, "", "DelayedNeutronData"], [170, 2, 1, "", "Dlayxs"], [170, 2, 1, "", "DlayxsIO"], [170, 1, 1, "", "compare"], [170, 1, 1, "", "readAscii"], [170, 1, 1, "", "readBinary"], [170, 1, 1, "", "writeAscii"], [170, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.dlayxs.Dlayxs": [[170, 5, 1, "", "G"], [170, 3, 1, "", "generateAverageDelayedNeutronConstants"]], "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO": [[170, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.fixsrc": [[171, 2, 1, "", "FIXSRC"], [171, 1, 1, "", "readBinary"], [171, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.fixsrc.FIXSRC": [[171, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.gamiso": [[172, 1, 1, "", "addDummyNuclidesToLibrary"], [172, 1, 1, "", "compare"], [172, 1, 1, "", "compareNuclideXS"]], "armi.nuclearDataIO.cccc.geodst": [[173, 2, 1, "", "GeodstData"], [173, 2, 1, "", "GeodstStream"]], "armi.nuclearDataIO.cccc.geodst.GeodstStream": [[173, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.isotxs": [[174, 2, 1, "", "IsotxsIO"], [174, 1, 1, "", "addDummyNuclidesToLibrary"], [174, 1, 1, "", "compare"], [174, 1, 1, "", "compareNuclideXS"], [174, 1, 1, "", "compareSet"]], "armi.nuclearDataIO.cccc.isotxs.IsotxsIO": [[174, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.labels": [[175, 2, 1, "", "LabelsData"], [175, 2, 1, "", "LabelsStream"]], "armi.nuclearDataIO.cccc.labels.LabelsStream": [[175, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.nhflux": [[176, 2, 1, "", "NHFLUX"], [176, 2, 1, "", "NafluxStream"], [176, 2, 1, "", "NafluxStreamVariant"], [176, 2, 1, "", "NhfluxStream"], [176, 2, 1, "", "NhfluxStreamVariant"], [176, 1, 1, "", "getNhfluxReader"]], "armi.nuclearDataIO.cccc.nhflux.NHFLUX": [[176, 5, 1, "", "fluxMoments"], [176, 5, 1, "", "partialCurrentsHex"], [176, 5, 1, "", "partialCurrentsHex_ext"], [176, 5, 1, "", "partialCurrentsZ"]], "armi.nuclearDataIO.cccc.nhflux.NhfluxStream": [[176, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pmatrx": [[177, 2, 1, "", "PmatrxIO"], [177, 1, 1, "", "addDummyNuclidesToLibrary"], [177, 1, 1, "", "compare"], [177, 1, 1, "", "compareNuclideXS"], [177, 1, 1, "", "readAscii"], [177, 1, 1, "", "readBinary"], [177, 1, 1, "", "writeAscii"], [177, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO": [[177, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pwdint": [[178, 2, 1, "", "PwdintData"], [178, 2, 1, "", "PwdintStream"]], "armi.nuclearDataIO.cccc.pwdint.PwdintStream": [[178, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rtflux": [[179, 2, 1, "", "AtfluxStream"], [179, 2, 1, "", "RtfluxData"], [179, 2, 1, "", "RtfluxStream"], [179, 1, 1, "", "getFDFluxReader"]], "armi.nuclearDataIO.cccc.rtflux.AtfluxStream": [[179, 3, 1, "", "getEnergyGroupIndex"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxData": [[179, 4, 1, "", "groupFluxes"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxStream": [[179, 3, 1, "", "getEnergyGroupIndex"], [179, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rzflux": [[180, 2, 1, "", "Convergence"], [180, 2, 1, "", "RzfluxData"], [180, 2, 1, "", "RzfluxStream"]], "armi.nuclearDataIO.cccc.rzflux.Convergence": [[180, 4, 1, "", "CONVERGED"], [180, 4, 1, "", "CONVERGING"], [180, 4, 1, "", "DIVERGING"], [180, 4, 1, "", "NO_ITERATIONS"]], "armi.nuclearDataIO.cccc.rzflux.RzfluxStream": [[180, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.tests": [[182, 0, 0, "-", "test_cccc"], [183, 0, 0, "-", "test_compxs"], [184, 0, 0, "-", "test_dif3d"], [185, 0, 0, "-", "test_dlayxs"], [186, 0, 0, "-", "test_fixsrc"], [187, 0, 0, "-", "test_gamiso"], [188, 0, 0, "-", "test_geodst"], [189, 0, 0, "-", "test_isotxs"], [190, 0, 0, "-", "test_labels"], [191, 0, 0, "-", "test_nhflux"], [192, 0, 0, "-", "test_pmatrx"], [193, 0, 0, "-", "test_pwdint"], [194, 0, 0, "-", "test_rtflux"], [195, 0, 0, "-", "test_rzflux"]], "armi.nuclearDataIO.cccc.tests.test_cccc": [[182, 2, 1, "", "CcccAsciiRecordTests"], [182, 2, 1, "", "CcccBinaryRecordTests"], [182, 2, 1, "", "CcccIOStreamTests"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests": [[182, 3, 1, "", "test_notReadingAnEntireRecordRaisesException"], [182, 3, 1, "", "test_readingBeyondRecordRaisesException"], [182, 3, 1, "", "test_writeAndReadSimpleFloatRecord"], [182, 3, 1, "", "test_writeAndReadSimpleIntegerRecord"], [182, 3, 1, "", "test_writeAndReadSimpleStringRecord"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests": [[182, 3, 1, "", "test_initWithFileMode"]], "armi.nuclearDataIO.cccc.tests.test_compxs": [[183, 2, 1, "", "TestCompxs"]], "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs": [[183, 5, 1, "", "asciiWritePath"], [183, 5, 1, "", "binaryWritePath"], [183, 3, 1, "", "test_asciiRW"], [183, 3, 1, "", "test_binaryRW"], [183, 3, 1, "", "test_getCOMPXSFileName"], [183, 3, 1, "", "test_libraryData"], [183, 3, 1, "", "test_mergeCompxsLibraries"], [183, 3, 1, "", "test_regionPrimaryXS"], [183, 3, 1, "", "test_totalScatterMatrix"]], "armi.nuclearDataIO.cccc.tests.test_dif3d": [[184, 2, 1, "", "TestDif3dEmptyRecords"], [184, 2, 1, "", "TestDif3dSimpleHexz"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords": [[184, 3, 1, "", "test_empty4and5Records"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz": [[184, 3, 1, "", "test__rw2DRecord"], [184, 3, 1, "", "test__rw3DRecord"], [184, 3, 1, "", "test__rw4DRecord"], [184, 3, 1, "", "test__rw5DRecord"], [184, 3, 1, "", "test__rwFile1DRecord"], [184, 3, 1, "", "test__rwFileID"], [184, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs": [[185, 2, 1, "", "DlayxsTests"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests": [[185, 3, 1, "", "test_ENDFVII1DecayConstants"], [185, 3, 1, "", "test_ENDFVII1NeutronsPerFission"], [185, 3, 1, "", "test_NuDelay"], [185, 3, 1, "", "test_avg"], [185, 3, 1, "", "test_chi_delay"], [185, 3, 1, "", "test_chi_delaySumsTo1"], [185, 3, 1, "", "test_compare"], [185, 3, 1, "", "test_decayConstants"], [185, 3, 1, "", "test_nuclides"], [185, 3, 1, "", "test_writeBinary_mcc3"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc": [[186, 2, 1, "", "TestFixsrc"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc": [[186, 3, 1, "", "test_writeReadBinaryLoop"]], "armi.nuclearDataIO.cccc.tests.test_gamiso": [[187, 2, 1, "", "TestGamiso"]], "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso": [[187, 3, 1, "", "test_addDummyNuclidesToLibrary"], [187, 3, 1, "", "test_compare"], [187, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_geodst": [[188, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst": [[188, 3, 1, "", "test_readGeodst"], [188, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs": [[189, 2, 1, "", "Isotxs_merge_Tests"], [189, 2, 1, "", "TestIsotxs"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests": [[189, 3, 1, "", "test_mergeMccV2FilesRemovesTheFileWideChi"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs": [[189, 3, 1, "", "test_getGAMISOFileName"], [189, 3, 1, "", "test_getISOTXSFileName"], [189, 3, 1, "", "test_getNuclide"], [189, 3, 1, "", "test_getScatterWeights"], [189, 3, 1, "", "test_getScatteringWeights"], [189, 3, 1, "", "test_isotxsDetailedData"], [189, 3, 1, "", "test_isotxsGeneralData"], [189, 3, 1, "", "test_n2nIsReactionBased"], [189, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_labels": [[190, 2, 1, "", "TestLabels"]], "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels": [[190, 3, 1, "", "test_readLabelsBinary"], [190, 3, 1, "", "test_writeLabelsAscii"]], "armi.nuclearDataIO.cccc.tests.test_nhflux": [[191, 2, 1, "", "TestNhflux"], [191, 2, 1, "", "TestNhfluxVariant"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux": [[191, 3, 1, "", "test_fc"], [191, 3, 1, "", "test_fluxMoments"], [191, 3, 1, "", "test_write"], [191, 3, 1, "", "test_xyPartialCurrents"], [191, 3, 1, "", "test_zPartialCurrents"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant": [[191, 3, 1, "", "test_fc"], [191, 3, 1, "", "test_fluxMoments"], [191, 3, 1, "", "test_write"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx": [[192, 2, 1, "", "TestPmatrx"], [192, 2, 1, "", "TestPmatrxNuclides"], [192, 2, 1, "", "TestProductionMatrix_FromWritten"], [192, 2, 1, "", "TestProductionMatrix_FromWrittenAscii"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx": [[192, 3, 1, "", "test_pmatrxDoesntHaveDoseConversionFactors"], [192, 3, 1, "", "test_pmatrxGammaEnergies"], [192, 3, 1, "", "test_pmatrxNeutronEnergies"], [192, 3, 1, "", "test_pmatrxNuclideNames"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides": [[192, 3, 1, "", "test_getPMATRXFileName"], [192, 3, 1, "", "test_nuclideDataIsDifferent"], [192, 3, 1, "", "test_pmatrxNuclideDataAA"], [192, 3, 1, "", "test_pmatrxNuclideDataAB"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten": [[192, 3, 1, "", "test_writtenIsIdenticalToOriginal"]], "armi.nuclearDataIO.cccc.tests.test_pwdint": [[193, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst": [[193, 3, 1, "", "test_readGeodst"], [193, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_rtflux": [[194, 2, 1, "", "Testrtflux"]], "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux": [[194, 3, 1, "", "test_adjoint"], [194, 3, 1, "", "test_readrtflux"], [194, 3, 1, "", "test_rwAscii"], [194, 3, 1, "", "test_writertflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux": [[195, 2, 1, "", "TestRzflux"], [195, 1, 1, "", "binaryFilesEqual"]], "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux": [[195, 3, 1, "", "test_readRzflux"], [195, 3, 1, "", "test_rwAscii"], [195, 3, 1, "", "test_writeRzflux"]], "armi.nuclearDataIO.nuclearFileMetadata": [[196, 2, 1, "", "FileMetadata"], [196, 2, 1, "", "NuclideMetadata"], [196, 2, 1, "", "NuclideXSMetadata"], [196, 2, 1, "", "RegionXSMetadata"]], "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata": [[196, 3, 1, "", "update"]], "armi.nuclearDataIO.tests": [[198, 0, 0, "-", "test_xsCollections"], [199, 0, 0, "-", "test_xsLibraries"], [200, 0, 0, "-", "test_xsNuclides"]], "armi.nuclearDataIO.tests.test_xsCollections": [[198, 2, 1, "", "MockBlock"], [198, 2, 1, "", "MockBlueprints"], [198, 2, 1, "", "MockReactor"], [198, 2, 1, "", "TestXsCollections"]], "armi.nuclearDataIO.tests.test_xsCollections.MockBlock": [[198, 3, 1, "", "getNuclideNumberDensities"], [198, 3, 1, "", "getNuclides"], [198, 3, 1, "", "getVolume"], [198, 4, 1, "", "paramCollectionType"], [198, 5, 1, "", "r"], [198, 3, 1, "", "setNumberDensity"]], "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections": [[198, 3, 1, "", "test_collapseCrossSection"], [198, 3, 1, "", "test_createMacrosFromMicros"], [198, 3, 1, "", "test_generateTotalScatteringMatrix"], [198, 3, 1, "", "test_generateTotalScatteringMatrixWithMissingData"], [198, 3, 1, "", "test_plotNucXs"]], "armi.nuclearDataIO.tests.test_xsLibraries": [[199, 2, 1, "", "AbstractTestXSlibraryMerging"], [199, 2, 1, "", "Combined_Merge_Tests"], [199, 2, 1, "", "Gamiso_Merge_Tests"], [199, 2, 1, "", "Isotxs_Merge_Tests"], [199, 2, 1, "", "Pmatrx_Merge_Tests"], [199, 2, 1, "", "TempFileMixin"], [199, 2, 1, "", "TestGetISOTXSFilesInWorkingDirectory"], [199, 2, 1, "", "TestXSLibrary"]], "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging": [[199, 3, 1, "", "getErrorType"], [199, 3, 1, "", "getLibAAPath"], [199, 3, 1, "", "getLibAA_ABPath"], [199, 3, 1, "", "getLibABPath"], [199, 3, 1, "", "getLibLumpedPath"], [199, 3, 1, "", "getReadFunc"], [199, 3, 1, "", "getWriteFunc"], [199, 3, 1, "", "test_canRemoveIsotopes"], [199, 3, 1, "", "test_cannotMergeXSLibWithSameNuclideNames"], [199, 3, 1, "", "test_cannotMergeXSLibxWithDifferentGroupStructure"], [199, 3, 1, "", "test_mergeEmptyXSLibWithOtherEssentiallyClonesTheOther"], [199, 3, 1, "", "test_mergeTwoXSLibFiles"]], "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests": [[199, 3, 1, "", "test_mergeAllXSLibFiles"]], "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests": [[199, 3, 1, "", "getErrorType"], [199, 3, 1, "", "getLibAAPath"], [199, 3, 1, "", "getLibAA_ABPath"], [199, 3, 1, "", "getLibABPath"], [199, 3, 1, "", "getLibLumpedPath"], [199, 3, 1, "", "getReadFunc"], [199, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests": [[199, 3, 1, "", "getErrorType"], [199, 3, 1, "", "getLibAAPath"], [199, 3, 1, "", "getLibAA_ABPath"], [199, 3, 1, "", "getLibABPath"], [199, 3, 1, "", "getLibLumpedPath"], [199, 3, 1, "", "getReadFunc"], [199, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests": [[199, 3, 1, "", "getErrorType"], [199, 3, 1, "", "getLibAAPath"], [199, 3, 1, "", "getLibAA_ABPath"], [199, 3, 1, "", "getLibABPath"], [199, 3, 1, "", "getLibLumpedPath"], [199, 3, 1, "", "getReadFunc"], [199, 3, 1, "", "getWriteFunc"], [199, 3, 1, "", "test_canRemoveIsotopes"], [199, 3, 1, "", "test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin": [[199, 5, 1, "", "testFileName"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory": [[199, 3, 1, "", "assert_contains_only"], [199, 3, 1, "", "test_getISOTXSFilesWithLibrarySuffix"], [199, 3, 1, "", "test_getISOTXSFilesWithoutLibrarySuffix"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary": [[199, 3, 1, "", "test_canPickleAndUnpickleGAMISO"], [199, 3, 1, "", "test_canPickleAndUnpickleISOTXS"], [199, 3, 1, "", "test_canPickleAndUnpicklePMATRX"], [199, 3, 1, "", "test_canWriteGamisoFromCombinedXSLibrary"], [199, 3, 1, "", "test_canWriteIsotxsFromCombinedXSLibrary"], [199, 3, 1, "", "test_canWritePmatrxFromCombinedXSLibrary"], [199, 3, 1, "", "test_compareDifferentComponentsOfAnXSLibrary"], [199, 3, 1, "", "test_compareWorks"], [199, 3, 1, "", "test_gamisoLibraryAttributes"], [199, 3, 1, "", "test_isotxsLibraryAttributes"], [199, 3, 1, "", "test_mergeFailsWithNonIsotxsFiles"], [199, 3, 1, "", "test_mergeXSLibrariesWithDifferentDataWorks"], [199, 3, 1, "", "test_pmatrxLibraryAttributes"]], "armi.nuclearDataIO.tests.test_xsNuclides": [[200, 2, 1, "", "NuclideTests"]], "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests": [[200, 3, 1, "", "test_getMicroXS"], [200, 3, 1, "", "test_getXS"], [200, 3, 1, "", "test_nuclide_2dXsArrangementIsCorrect"], [200, 3, 1, "", "test_nuclide_createFromLabelFailsOnBadName"], [200, 3, 1, "", "test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"], [200, 3, 1, "", "test_nuclide_isoaaDetails"], [200, 3, 1, "", "test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"], [200, 3, 1, "", "test_nuclide_newLabelsDontCauseWarnings"], [200, 3, 1, "", "test_nuclide_nuclideBaseMethodsShouldNotFail"], [200, 3, 1, "", "test_nuclide_oldLabelsCauseWarnings"], [200, 3, 1, "", "test_nuclide_scatterXsArrangementIsCorrect"]], "armi.nuclearDataIO.xsCollections": [[201, 2, 1, "", "MacroscopicCrossSectionCreator"], [201, 2, 1, "", "XSCollection"], [201, 1, 1, "", "computeBlockAverageChi"], [201, 1, 1, "", "computeCaptureEnergyGenerationConstants"], [201, 1, 1, "", "computeFissionEnergyGenerationConstants"], [201, 1, 1, "", "computeGammaEnergyDepositionConstants"], [201, 1, 1, "", "computeMacroscopicGroupConstants"], [201, 1, 1, "", "computeNeutronEnergyDepositionConstants"]], "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator": [[201, 3, 1, "", "createMacrosFromMicros"], [201, 3, 1, "", "createMacrosOnBlocklist"]], "armi.nuclearDataIO.xsCollections.XSCollection": [[201, 3, 1, "", "clear"], [201, 3, 1, "", "collapseCrossSection"], [201, 3, 1, "", "compare"], [201, 3, 1, "", "get"], [201, 3, 1, "", "getAbsorptionXS"], [201, 3, 1, "", "getDefaultXs"], [201, 3, 1, "", "getTotalScatterMatrix"], [201, 3, 1, "", "merge"]], "armi.nuclearDataIO.xsLibraries": [[202, 2, 1, "", "CompxsLibrary"], [202, 2, 1, "", "IsotxsLibrary"], [202, 1, 1, "", "compare"], [202, 1, 1, "", "compareLibraryNeutronEnergies"], [202, 1, 1, "", "compareXSLibraryAttribute"], [202, 1, 1, "", "getISOTXSLibrariesToMerge"], [202, 1, 1, "", "getSuffixFromNuclideLabel"], [202, 1, 1, "", "mergeXSLibrariesInWorkingDirectory"]], "armi.nuclearDataIO.xsLibraries.CompxsLibrary": [[202, 3, 1, "", "merge"], [202, 5, 1, "", "regionLabels"], [202, 5, 1, "", "regions"]], "armi.nuclearDataIO.xsLibraries.IsotxsLibrary": [[202, 5, 1, "", "gammaDoseConversionFactors"], [202, 5, 1, "", "gammaEnergyUpperBounds"], [202, 3, 1, "", "get"], [202, 3, 1, "", "getNuclide"], [202, 3, 1, "", "getNuclides"], [202, 3, 1, "", "getScatterWeights"], [202, 3, 1, "", "merge"], [202, 5, 1, "", "neutronDoseConversionFactors"], [202, 5, 1, "", "nuclideLabels"], [202, 5, 1, "", "nuclides"], [202, 5, 1, "", "numGroups"], [202, 5, 1, "", "numGroupsGamma"], [202, 3, 1, "", "purgeFissionProducts"], [202, 3, 1, "", "resetScatterWeights"], [202, 5, 1, "", "xsIDs"]], "armi.nuclearDataIO.xsNuclides": [[203, 2, 1, "", "XSNuclide"], [203, 1, 1, "", "plotCompareScatterMatrix"], [203, 1, 1, "", "plotScatterMatrix"]], "armi.nuclearDataIO.xsNuclides.XSNuclide": [[203, 3, 1, "", "buildNormalizedScatterColumns"], [203, 5, 1, "", "decays"], [203, 3, 1, "", "getMicroXS"], [203, 3, 1, "", "getXS"], [203, 3, 1, "", "merge"], [203, 5, 1, "", "trans"], [203, 3, 1, "", "updateBaseNuclide"]], "armi.operators": [[204, 1, 1, "", "factory"], [204, 1, 1, "", "getOperatorClassFromSettings"], [205, 0, 0, "-", "operator"], [206, 0, 0, "-", "operatorMPI"], [207, 0, 0, "-", "runTypes"], [208, 0, 0, "-", "settingsValidation"], [209, 0, 0, "-", "snapshots"], [210, 0, 0, "-", "tests"]], "armi.operators.operator": [[205, 2, 1, "", "Operator"]], "armi.operators.operator.Operator": [[205, 3, 1, "", "addInterface"], [205, 5, 1, "", "atEOL"], [205, 5, 1, "", "availabilityFactors"], [205, 5, 1, "", "burnSteps"], [205, 3, 1, "", "couplingIsActive"], [205, 3, 1, "", "createInterfaces"], [205, 5, 1, "", "cycleLengths"], [205, 5, 1, "", "cycleNames"], [205, 3, 1, "", "detach"], [205, 3, 1, "", "getActiveInterfaces"], [205, 3, 1, "", "getInterface"], [205, 3, 1, "", "getInterfaces"], [205, 3, 1, "", "initializeInterfaces"], [205, 4, 1, "", "inspector"], [205, 3, 1, "", "interactAllBOC"], [205, 3, 1, "", "interactAllBOL"], [205, 3, 1, "", "interactAllCoupled"], [205, 3, 1, "", "interactAllEOC"], [205, 3, 1, "", "interactAllEOL"], [205, 3, 1, "", "interactAllError"], [205, 3, 1, "", "interactAllEveryNode"], [205, 3, 1, "", "interactAllInit"], [205, 3, 1, "", "interfaceIsActive"], [205, 3, 1, "", "loadState"], [205, 5, 1, "", "maxBurnSteps"], [205, 3, 1, "", "operate"], [205, 5, 1, "", "powerFractions"], [205, 3, 1, "", "printInterfaceSummary"], [205, 3, 1, "", "reattach"], [205, 3, 1, "", "removeAllInterfaces"], [205, 3, 1, "", "removeInterface"], [205, 3, 1, "", "setStateToDefault"], [205, 3, 1, "", "snapshotRequest"], [205, 5, 1, "", "stepLengths"]], "armi.operators.operatorMPI": [[206, 2, 1, "", "OperatorMPI"]], "armi.operators.operatorMPI.OperatorMPI": [[206, 3, 1, "", "collapseAllStderrs"], [206, 3, 1, "", "operate"], [206, 3, 1, "", "workerOperate"], [206, 3, 1, "", "workerQuit"]], "armi.operators.runTypes": [[207, 2, 1, "", "RunTypes"]], "armi.operators.runTypes.RunTypes": [[207, 4, 1, "", "EQUILIBRIUM"], [207, 4, 1, "", "SNAPSHOTS"], [207, 4, 1, "", "STANDARD"]], "armi.operators.snapshots": [[209, 2, 1, "", "OperatorSnapshots"]], "armi.operators.snapshots.OperatorSnapshots": [[209, 5, 1, "", "atEOL"], [209, 3, 1, "", "createInterfaces"], [209, 3, 1, "", "setStateToDefault"]], "armi.operators.tests": [[211, 0, 0, "-", "test_operatorSnapshots"], [212, 0, 0, "-", "test_operators"]], "armi.operators.tests.test_operatorSnapshots": [[211, 2, 1, "", "TestOperatorSnapshots"], [211, 2, 1, "", "TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots": [[211, 3, 1, "", "test_atEOL"], [211, 3, 1, "", "test_createInterfaces"], [211, 3, 1, "", "test_createInterfacesDisabled"], [211, 3, 1, "", "test_mainOperate"], [211, 3, 1, "", "test_setStateToDefault"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings": [[211, 3, 1, "", "test_getOperatorClassFromSettings"]], "armi.operators.tests.test_operators": [[212, 2, 1, "", "CyclesSettingsTests"], [212, 2, 1, "", "InterfaceA"], [212, 2, 1, "", "InterfaceB"], [212, 2, 1, "", "InterfaceC"], [212, 2, 1, "", "OperatorTests"], [212, 2, 1, "", "TestCreateOperator"], [212, 2, 1, "", "TestInterfaceAndEventHeaders"], [212, 2, 1, "", "TestTightCoupling"]], "armi.operators.tests.test_operators.CyclesSettingsTests": [[212, 4, 1, "", "availabilityFactorsSolution"], [212, 4, 1, "", "burnStepsSolution"], [212, 4, 1, "", "cycleLengthsSolution"], [212, 4, 1, "", "cycleNamesSolution"], [212, 4, 1, "", "detailedCyclesSettings"], [212, 4, 1, "", "maxBurnStepsSolution"], [212, 4, 1, "", "powerFractionsSolution"], [212, 4, 1, "", "stepLengthsSolution"], [212, 3, 1, "", "test_getAvailabilityFactors"], [212, 3, 1, "", "test_getBurnSteps"], [212, 3, 1, "", "test_getCycleLengths"], [212, 3, 1, "", "test_getCycleNames"], [212, 3, 1, "", "test_getMaxBurnSteps"], [212, 3, 1, "", "test_getPowerFractions"], [212, 3, 1, "", "test_getStepLengths"]], "armi.operators.tests.test_operators.InterfaceA": [[212, 4, 1, "", "function"], [212, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceB": [[212, 4, 1, "", "function"], [212, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceC": [[212, 4, 1, "", "function"], [212, 4, 1, "", "name"]], "armi.operators.tests.test_operators.OperatorTests": [[212, 3, 1, "", "test_addInterfaceSubclassCollision"], [212, 3, 1, "", "test_getActiveInterfaces"], [212, 3, 1, "", "test_interfaceIsActive"], [212, 3, 1, "", "test_loadStateError"], [212, 3, 1, "", "test_operatorData"], [212, 3, 1, "", "test_orderedInterfaces"], [212, 3, 1, "", "test_setStateToDefault"], [212, 3, 1, "", "test_snapshotRequest"]], "armi.operators.tests.test_operators.TestCreateOperator": [[212, 3, 1, "", "test_createOperator"]], "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders": [[212, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Coupled"], [212, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Cycle"], [212, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Empty"], [212, 3, 1, "", "test_expandCycleAndTimeNodeArgs_EveryNode"]], "armi.operators.tests.test_operators.TestTightCoupling": [[212, 3, 1, "", "dbWriteForCoupling"], [212, 3, 1, "", "test_computeTightCouplingConvergence"], [212, 3, 1, "", "test_couplingIsActive"], [212, 3, 1, "", "test_getStepLengths"], [212, 3, 1, "", "test_performTightCoupling_Inactive"], [212, 3, 1, "", "test_performTightCoupling_NoWriteDB"], [212, 3, 1, "", "test_performTightCoupling_WriteDB"], [212, 3, 1, "", "test_performTightCoupling_notConverged"], [212, 3, 1, "", "test_performTightCoupling_skip"]], "armi.physics": [[214, 0, 0, "-", "constants"], [215, 0, 0, "-", "executers"], [216, 0, 0, "-", "fuelCycle"], [229, 0, 0, "-", "fuelPerformance"], [239, 0, 0, "-", "neutronics"], [273, 0, 0, "-", "safety"], [274, 0, 0, "-", "tests"], [276, 0, 0, "-", "thermalHydraulics"]], "armi.physics.constants": [[214, 6, 1, "", "DPA_CROSS_SECTIONS"]], "armi.physics.executers": [[215, 2, 1, "", "DefaultExecuter"], [215, 2, 1, "", "Executer"], [215, 2, 1, "", "ExecutionOptions"]], "armi.physics.executers.DefaultExecuter": [[215, 3, 1, "", "run"], [215, 3, 1, "", "writeInput"]], "armi.physics.executers.Executer": [[215, 3, 1, "", "run"]], "armi.physics.executers.ExecutionOptions": [[215, 3, 1, "", "describe"], [215, 3, 1, "", "fromReactor"], [215, 3, 1, "", "fromUserSettings"], [215, 3, 1, "", "resolveDerivedOptions"], [215, 3, 1, "", "setRunDirFromCaseTitle"]], "armi.physics.fuelCycle": [[216, 2, 1, "", "FuelHandlerPlugin"], [217, 0, 0, "-", "assemblyRotationAlgorithms"], [218, 0, 0, "-", "fuelHandlerFactory"], [219, 0, 0, "-", "fuelHandlerInterface"], [220, 0, 0, "-", "fuelHandlers"], [221, 0, 0, "-", "hexAssemblyFuelMgmtUtils"], [222, 0, 0, "-", "settings"], [223, 0, 0, "-", "tests"], [228, 0, 0, "-", "utils"]], "armi.physics.fuelCycle.FuelHandlerPlugin": [[216, 3, 1, "", "defineSettings"], [216, 3, 1, "", "defineSettingsValidators"], [216, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms": [[217, 1, 1, "", "buReducingAssemblyRotation"], [217, 1, 1, "", "simpleAssemblyRotation"]], "armi.physics.fuelCycle.fuelHandlerFactory": [[218, 1, 1, "", "fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface": [[219, 2, 1, "", "FuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface": [[219, 3, 1, "", "interactBOC"], [219, 3, 1, "", "interactEOC"], [219, 3, 1, "", "interactEOL"], [219, 3, 1, "", "makeShuffleReport"], [219, 3, 1, "", "manageFuel"], [219, 4, 1, "", "name"], [219, 3, 1, "", "specifyInputs"], [219, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.fuelHandlers": [[220, 2, 1, "", "FuelHandler"]], "armi.physics.fuelCycle.fuelHandlers.FuelHandler": [[220, 3, 1, "", "chooseSwaps"], [220, 5, 1, "", "cs"], [220, 5, 1, "", "cycle"], [220, 3, 1, "", "dischargeSwap"], [220, 3, 1, "", "doRepeatShuffle"], [220, 3, 1, "", "findAssembly"], [220, 3, 1, "", "getFactorList"], [220, 3, 1, "", "isAssemblyInAZone"], [220, 3, 1, "", "makeShuffleArrows"], [220, 3, 1, "", "outage"], [220, 3, 1, "", "prepCore"], [220, 3, 1, "", "prepShuffleMap"], [220, 3, 1, "", "processMoveList"], [220, 5, 1, "", "r"], [220, 3, 1, "", "readMoves"], [220, 3, 1, "", "repeatShufflePattern"], [220, 3, 1, "", "swapAssemblies"], [220, 3, 1, "", "swapCascade"], [220, 3, 1, "", "trackChain"], [220, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils": [[221, 1, 1, "", "buildConvergentRingSchedule"], [221, 1, 1, "", "buildRingSchedule"], [221, 1, 1, "", "getOptimalAssemblyOrientation"]], "armi.physics.fuelCycle.settings": [[222, 1, 1, "", "getFuelCycleSettingValidators"], [222, 1, 1, "", "getFuelCycleSettings"]], "armi.physics.fuelCycle.tests": [[224, 0, 0, "-", "test_assemblyRotationAlgorithms"], [225, 0, 0, "-", "test_fuelHandlers"], [226, 0, 0, "-", "test_hexAssemblyFuelMgmtUtils"], [227, 0, 0, "-", "test_utils"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms": [[224, 2, 1, "", "MockFuelHandler"], [224, 2, 1, "", "ShuffleAndRotateTestHelper"], [224, 2, 1, "", "SimpleRotationTests"], [224, 2, 1, "", "TestFuelHandlerMgmtTools"], [224, 2, 1, "", "TestOptimalAssemblyRotation"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.MockFuelHandler": [[224, 3, 1, "", "chooseSwaps"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper": [[224, 4, 1, "", "N_PINS"], [224, 3, 1, "", "burnupWithMaxValue"], [224, 3, 1, "", "compareMockedToExpectedRotation"], [224, 3, 1, "", "ensureBlockHasSpatialGrid"], [224, 3, 1, "", "powerWithMinValue"], [224, 3, 1, "", "setAssemblyPinBurnups"], [224, 3, 1, "", "setAssemblyPinPowers"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.SimpleRotationTests": [[224, 3, 1, "", "test_simpleAssemblyRotation"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools": [[224, 3, 1, "", "test_buRotationWithFreshFeed"], [224, 3, 1, "", "test_buRotationWithStationaryRotation"], [224, 3, 1, "", "test_rotateInShuffleQueue"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation": [[224, 3, 1, "", "test_flatPowerNoRotation"], [224, 3, 1, "", "test_maxBurnupAtCenterNoRotation"], [224, 3, 1, "", "test_mismatchPinPowersAndLocations"], [224, 3, 1, "", "test_noBlocksWithBurnup"], [224, 3, 1, "", "test_oppositeRotation"]], "armi.physics.fuelCycle.tests.test_fuelHandlers": [[225, 2, 1, "", "FuelHandlerTestHelper"], [225, 2, 1, "", "MockLatticePhysicsInterface"], [225, 2, 1, "", "MockXSGM"], [225, 2, 1, "", "TestFuelHandler"], [225, 2, 1, "", "TestFuelPlugin"], [225, 1, 1, "", "addSomeDetailAssemblies"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface": [[225, 3, 1, "", "interactBOC"], [225, 4, 1, "", "name"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM": [[225, 3, 1, "", "interactBOC"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler": [[225, 3, 1, "", "runShuffling"], [225, 3, 1, "", "test_dischargeSwap"], [225, 3, 1, "", "test_dischargeSwapIncompatibleStationaryBlocks"], [225, 3, 1, "", "test_findByCoords"], [225, 3, 1, "", "test_findHighBu"], [225, 3, 1, "", "test_findInSFP"], [225, 3, 1, "", "test_findMany"], [225, 3, 1, "", "test_findWithMinMax"], [225, 3, 1, "", "test_getAssembliesInRings"], [225, 3, 1, "", "test_getFactorList"], [225, 3, 1, "", "test_getParamMax"], [225, 3, 1, "", "test_interactBOC"], [225, 3, 1, "", "test_isAssemblyInAZone"], [225, 3, 1, "", "test_linPowByPin"], [225, 3, 1, "", "test_linPowByPinGamma"], [225, 3, 1, "", "test_linPowByPinNeutron"], [225, 3, 1, "", "test_outage"], [225, 3, 1, "", "test_outageEdgeCase"], [225, 3, 1, "", "test_processMoveList"], [225, 3, 1, "", "test_readMoves"], [225, 3, 1, "", "test_repeatShuffles"], [225, 3, 1, "", "test_transferDifferentNumberStationaryBlocks"], [225, 3, 1, "", "test_transferIncompatibleHeightStationaryBlocks"], [225, 3, 1, "", "test_transferStationaryBlocks"], [225, 3, 1, "", "test_transferUnalignedLocationStationaryBlocks"], [225, 3, 1, "", "test_width"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin": [[225, 3, 1, "", "test_settingsAreDiscovered"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils": [[226, 2, 1, "", "TestHexAssemMgmtTools"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools": [[226, 3, 1, "", "test_buildConvergentRingSchedule"], [226, 3, 1, "", "test_buildRingSchedule"]], "armi.physics.fuelCycle.tests.test_utils": [[227, 2, 1, "", "FuelCycleUtilsTests"]], "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests": [[227, 4, 1, "", "N_PINS"], [227, 3, 1, "", "test_assemblyHasPinBurnups"], [227, 3, 1, "", "test_assemblyHasPinPower"], [227, 3, 1, "", "test_maxBurnupBlock"], [227, 3, 1, "", "test_maxBurnupBlockNoBlocks"], [227, 3, 1, "", "test_maxBurnupBlockNoBurnup"], [227, 3, 1, "", "test_maxBurnupLocationFromComponents"], [227, 3, 1, "", "test_maxBurnupLocatorMismatchedData"], [227, 3, 1, "", "test_maxBurnupLocatorWithNoBurnup"], [227, 3, 1, "", "test_singleLocatorWithBurnup"]], "armi.physics.fuelCycle.utils": [[228, 1, 1, "", "assemblyHasFuelPinBurnup"], [228, 1, 1, "", "assemblyHasFuelPinPowers"], [228, 1, 1, "", "maxBurnupBlock"], [228, 1, 1, "", "maxBurnupLocator"]], "armi.physics.fuelPerformance": [[230, 0, 0, "-", "executers"], [231, 0, 0, "-", "parameters"], [232, 0, 0, "-", "plugin"], [233, 0, 0, "-", "settings"], [234, 0, 0, "-", "tests"], [238, 0, 0, "-", "utils"]], "armi.physics.fuelPerformance.executers": [[230, 2, 1, "", "FuelPerformanceExecuter"], [230, 2, 1, "", "FuelPerformanceOptions"]], "armi.physics.fuelPerformance.executers.FuelPerformanceOptions": [[230, 3, 1, "", "fromReactor"], [230, 3, 1, "", "fromUserSettings"]], "armi.physics.fuelPerformance.parameters": [[231, 1, 1, "", "getFuelPerformanceParameterDefinitions"]], "armi.physics.fuelPerformance.plugin": [[232, 2, 1, "", "FuelPerformancePlugin"]], "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin": [[232, 3, 1, "", "defineParameters"], [232, 3, 1, "", "defineSettings"], [232, 3, 1, "", "defineSettingsValidators"], [232, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelPerformance.settings": [[233, 1, 1, "", "defineSettings"], [233, 1, 1, "", "defineValidators"]], "armi.physics.fuelPerformance.tests": [[235, 0, 0, "-", "test_executers"], [236, 0, 0, "-", "test_fuelPerformancePlugin"], [237, 0, 0, "-", "test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_executers": [[235, 2, 1, "", "TestFuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions": [[235, 3, 1, "", "test_fuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin": [[236, 2, 1, "", "TestFuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin": [[236, 4, 1, "", "plugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils": [[237, 2, 1, "", "TestFuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils": [[237, 3, 1, "", "test_applyFuelDisplacement"], [237, 3, 1, "", "test_gasConductivityCorrection_morph0"], [237, 3, 1, "", "test_gasConductivityCorrection_morph1"], [237, 3, 1, "", "test_gasConductivityCorrection_morph2"], [237, 3, 1, "", "test_gasConductivityCorrection_morph3"], [237, 3, 1, "", "test_gasConductivityCorrection_morph4"]], "armi.physics.fuelPerformance.utils": [[238, 1, 1, "", "applyFuelDisplacement"], [238, 1, 1, "", "gasConductivityCorrection"]], "armi.physics.neutronics": [[239, 2, 1, "", "LatticePhysicsFrequency"], [239, 2, 1, "", "NeutronicsPlugin"], [239, 1, 1, "", "adjointCalculationRequested"], [239, 1, 1, "", "applyEffectiveDelayedNeutronFractionToCore"], [240, 0, 0, "-", "const"], [241, 0, 0, "-", "crossSectionGroupManager"], [242, 0, 0, "-", "crossSectionSettings"], [243, 0, 0, "-", "diffIsotxs"], [244, 0, 0, "-", "energyGroups"], [245, 0, 0, "-", "fissionProductModel"], [239, 1, 1, "", "gammaTransportIsRequested"], [239, 1, 1, "", "gammaXsAreRequested"], [252, 0, 0, "-", "globalFlux"], [256, 0, 0, "-", "latticePhysics"], [262, 0, 0, "-", "macroXSGenerationInterface"], [263, 0, 0, "-", "parameters"], [239, 1, 1, "", "realCalculationRequested"], [264, 0, 0, "-", "reports"], [265, 0, 0, "-", "settings"], [266, 0, 0, "-", "tests"]], "armi.physics.neutronics.LatticePhysicsFrequency": [[239, 4, 1, "", "BOC"], [239, 4, 1, "", "BOL"], [239, 4, 1, "", "all"], [239, 4, 1, "", "everyNode"], [239, 4, 1, "", "firstCoupledIteration"], [239, 4, 1, "", "never"]], "armi.physics.neutronics.NeutronicsPlugin": [[239, 3, 1, "", "defineEntryPoints"], [239, 3, 1, "", "defineParameterRenames"], [239, 3, 1, "", "defineParameters"], [239, 3, 1, "", "defineSettings"], [239, 3, 1, "", "defineSettingsValidators"], [239, 3, 1, "", "exposeInterfaces"], [239, 3, 1, "", "getReportContents"], [239, 3, 1, "", "onProcessCoreLoading"]], "armi.physics.neutronics.crossSectionGroupManager": [[241, 2, 1, "", "AverageBlockCollection"], [241, 2, 1, "", "BlockCollection"], [241, 2, 1, "", "CrossSectionGroupManager"], [241, 2, 1, "", "CylindricalComponentsAverageBlockCollection"], [241, 2, 1, "", "CylindricalComponentsDuctHetAverageBlockCollection"], [241, 2, 1, "", "FluxWeightedAverageBlockCollection"], [241, 2, 1, "", "MedianBlockCollection"], [241, 2, 1, "", "SlabComponentsAverageBlockCollection"], [241, 1, 1, "", "blockCollectionFactory"], [241, 1, 1, "", "describeInterfaces"], [241, 1, 1, "", "getBlockNuclideTemperature"], [241, 1, 1, "", "getBlockNuclideTemperatureAvgTerms"], [241, 1, 1, "", "getXSTypeLabelFromNumber"], [241, 1, 1, "", "getXSTypeNumberFromLabel"]], "armi.physics.neutronics.crossSectionGroupManager.BlockCollection": [[241, 3, 1, "", "calcAvgNuclideTemperatures"], [241, 3, 1, "", "createRepresentativeBlock"], [241, 3, 1, "", "getCandidateBlocks"], [241, 3, 1, "", "getWeight"]], "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager": [[241, 3, 1, "", "clearRepresentativeBlocks"], [241, 3, 1, "", "createRepresentativeBlocks"], [241, 3, 1, "", "createRepresentativeBlocksUsingExistingBlocks"], [241, 3, 1, "", "disableEnvGroupUpdates"], [241, 3, 1, "", "enableEnvGroupUpdates"], [241, 3, 1, "", "fluxSolutionIsPregenerated"], [241, 3, 1, "", "getNextAvailableXsTypes"], [241, 3, 1, "", "getNucTemperature"], [241, 3, 1, "", "interactBOC"], [241, 3, 1, "", "interactBOL"], [241, 3, 1, "", "interactCoupled"], [241, 3, 1, "", "interactEOC"], [241, 3, 1, "", "interactEveryNode"], [241, 3, 1, "", "makeCrossSectionGroups"], [241, 4, 1, "", "name"], [241, 3, 1, "", "updateNuclideTemperatures"], [241, 3, 1, "", "xsTypeIsPregenerated"]], "armi.physics.neutronics.crossSectionSettings": [[242, 2, 1, "", "XSGeometryTypes"], [242, 2, 1, "", "XSModelingOptions"], [242, 2, 1, "", "XSSettingDef"], [242, 2, 1, "", "XSSettings"], [242, 1, 1, "", "serializeXSSettings"], [242, 1, 1, "", "xsSettingsValidator"]], "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes": [[242, 4, 1, "", "ONE_DIMENSIONAL_CYLINDER"], [242, 4, 1, "", "ONE_DIMENSIONAL_SLAB"], [242, 4, 1, "", "TWO_DIMENSIONAL_HEX"], [242, 4, 1, "", "ZERO_DIMENSIONAL"], [242, 3, 1, "", "getStr"]], "armi.physics.neutronics.crossSectionSettings.XSModelingOptions": [[242, 5, 1, "", "envGroup"], [242, 5, 1, "", "fluxIsPregenerated"], [242, 3, 1, "", "serialize"], [242, 3, 1, "", "setDefaults"], [242, 3, 1, "", "validate"], [242, 5, 1, "", "xsIsPregenerated"], [242, 5, 1, "", "xsType"]], "armi.physics.neutronics.crossSectionSettings.XSSettingDef": [[242, 3, 1, "", "dump"]], "armi.physics.neutronics.crossSectionSettings.XSSettings": [[242, 3, 1, "", "setDefaults"]], "armi.physics.neutronics.diffIsotxs": [[243, 2, 1, "", "CompareIsotxsLibraries"]], "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries": [[243, 3, 1, "", "addOptions"], [243, 3, 1, "", "invoke"], [243, 4, 1, "", "name"], [243, 4, 1, "", "settingsArgument"]], "armi.physics.neutronics.energyGroups": [[244, 6, 1, "", "GROUP_STRUCTURE"], [244, 1, 1, "", "getFastFluxGroupCutoff"], [244, 1, 1, "", "getGroupStructure"], [244, 1, 1, "", "getGroupStructureType"]], "armi.physics.neutronics.fissionProductModel": [[246, 0, 0, "-", "fissionProductModel"], [247, 0, 0, "-", "fissionProductModelSettings"], [248, 0, 0, "-", "lumpedFissionProduct"], [249, 0, 0, "-", "tests"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel": [[246, 2, 1, "", "FissionProductModel"], [246, 1, 1, "", "describeInterfaces"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel": [[246, 3, 1, "", "getAllFissionProductNames"], [246, 3, 1, "", "getGlobalLumpedFissionProducts"], [246, 3, 1, "", "interactBOC"], [246, 3, 1, "", "interactBOL"], [246, 3, 1, "", "interactDistributeState"], [246, 4, 1, "", "name"], [246, 3, 1, "", "removeFissionGasesFromBlocks"], [246, 3, 1, "", "setAllBlockLFPs"], [246, 3, 1, "", "setAllComponentFissionProducts"], [246, 3, 1, "", "setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings": [[247, 1, 1, "", "defineSettings"], [247, 1, 1, "", "getFissionProductModelSettingValidators"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct": [[248, 2, 1, "", "FissionProductDefinitionFile"], [248, 2, 1, "", "LumpedFissionProduct"], [248, 2, 1, "", "LumpedFissionProductCollection"], [248, 1, 1, "", "isGas"], [248, 1, 1, "", "lumpedFissionProductFactory"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile": [[248, 3, 1, "", "createLFPsFromFile"], [248, 3, 1, "", "createSingleLFPFromFile"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct": [[248, 3, 1, "", "duplicate"], [248, 3, 1, "", "getGaseousYieldFraction"], [248, 3, 1, "", "getMassFrac"], [248, 3, 1, "", "getMassFracDenom"], [248, 3, 1, "", "getMassFracs"], [248, 3, 1, "", "getTotalYield"], [248, 3, 1, "", "items"], [248, 3, 1, "", "keys"], [248, 3, 1, "", "values"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection": [[248, 3, 1, "", "duplicate"], [248, 3, 1, "", "getAllFissionProductNames"], [248, 3, 1, "", "getAllFissionProductNuclideBases"], [248, 3, 1, "", "getLumpedFissionProductNames"], [248, 3, 1, "", "getMassFrac"], [248, 3, 1, "", "getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests": [[250, 0, 0, "-", "test_fissionProductModel"], [251, 0, 0, "-", "test_lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel": [[250, 2, 1, "", "TestFissionProductModelExplicitMC2Library"], [250, 2, 1, "", "TestFissionProductModelExplicitMC2LibrarySlower"], [250, 2, 1, "", "TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library": [[250, 3, 1, "", "test_nuclideFlags"], [250, 3, 1, "", "test_nuclidesInModelFuel"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower": [[250, 3, 1, "", "test_nuclidesInModelAllDepletableBlocks"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts": [[250, 3, 1, "", "test_fpApplication"], [250, 3, 1, "", "test_getAllFissionProductNames"], [250, 3, 1, "", "test_loadGlobalLFPsFromFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct": [[251, 2, 1, "", "TestFissionProductDefinitionFile"], [251, 2, 1, "", "TestLumpedFissionProduct"], [251, 2, 1, "", "TestLumpedFissionProductCollection"], [251, 2, 1, "", "TestLumpedFissionProductsExplicit"], [251, 2, 1, "", "TestLumpedFissionProductsFromReferenceFile"], [251, 2, 1, "", "TestMo99LFP"], [251, 1, 1, "", "getDummyLFPFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile": [[251, 3, 1, "", "test_createLFPs"], [251, 3, 1, "", "test_createReferenceLFPs"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct": [[251, 3, 1, "", "test_gaseousYieldFraction"], [251, 3, 1, "", "test_getYield"], [251, 3, 1, "", "test_isGas"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection": [[251, 3, 1, "", "test_duplicate"], [251, 3, 1, "", "test_getAllFissionProductNames"], [251, 3, 1, "", "test_getAllFissionProductNuclideBases"], [251, 3, 1, "", "test_getMassFrac"], [251, 3, 1, "", "test_getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit": [[251, 3, 1, "", "test_explicitFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile": [[251, 3, 1, "", "test_fissionProductYields"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP": [[251, 3, 1, "", "test_getAllFissionProductNames"]], "armi.physics.neutronics.globalFlux": [[253, 0, 0, "-", "globalFluxInterface"], [254, 0, 0, "-", "tests"]], "armi.physics.neutronics.globalFlux.globalFluxInterface": [[253, 2, 1, "", "GlobalFluxExecuter"], [253, 2, 1, "", "GlobalFluxInterface"], [253, 2, 1, "", "GlobalFluxInterfaceUsingExecuters"], [253, 2, 1, "", "GlobalFluxOptions"], [253, 2, 1, "", "GlobalFluxResultMapper"], [253, 1, 1, "", "calcReactionRates"], [253, 1, 1, "", "computeDpaRate"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter": [[253, 3, 1, "", "edgeAssembliesAreNeeded"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface": [[253, 3, 1, "", "calculateKeff"], [253, 3, 1, "", "checkEnergyBalance"], [253, 4, 1, "", "function"], [253, 3, 1, "", "getHistoryParams"], [253, 3, 1, "", "getIOFileNames"], [253, 3, 1, "", "interactBOC"], [253, 3, 1, "", "interactCoupled"], [253, 3, 1, "", "interactEveryNode"], [253, 4, 1, "", "name"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters": [[253, 3, 1, "", "calculateKeff"], [253, 3, 1, "", "getExecuter"], [253, 3, 1, "", "getExecuterCls"], [253, 3, 1, "", "getExecuterOptions"], [253, 3, 1, "", "getLabel"], [253, 3, 1, "", "getOptionsCls"], [253, 3, 1, "", "getTightCouplingValue"], [253, 3, 1, "", "interactCoupled"], [253, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions": [[253, 3, 1, "", "fromReactor"], [253, 3, 1, "", "fromUserSettings"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper": [[253, 3, 1, "", "clearFlux"], [253, 3, 1, "", "getBurnupPeakingFactor"], [253, 3, 1, "", "getDpaXs"], [253, 3, 1, "", "getKeff"], [253, 3, 1, "", "updateDpaRate"], [253, 3, 1, "", "updateMaxDpaParams"]], "armi.physics.neutronics.globalFlux.tests": [[255, 0, 0, "-", "test_globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface": [[255, 2, 1, "", "MockCore"], [255, 2, 1, "", "MockCoreParams"], [255, 2, 1, "", "MockGlobalFluxExecuter"], [255, 2, 1, "", "MockGlobalFluxInterface"], [255, 2, 1, "", "MockGlobalFluxWithExecuters"], [255, 2, 1, "", "MockGlobalFluxWithExecutersNonUniform"], [255, 2, 1, "", "MockReactor"], [255, 2, 1, "", "MockReactorParams"], [255, 2, 1, "", "TestGlobalFluxInterface"], [255, 2, 1, "", "TestGlobalFluxInterfaceWithExecuters"], [255, 2, 1, "", "TestGlobalFluxInterfaceWithExecutersNonUniform"], [255, 2, 1, "", "TestGlobalFluxOptions"], [255, 2, 1, "", "TestGlobalFluxResultMapper"], [255, 2, 1, "", "TestGlobalFluxUtils"], [255, 1, 1, "", "applyDummyFlux"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface": [[255, 3, 1, "", "interactBOC"], [255, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters": [[255, 3, 1, "", "getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform": [[255, 3, 1, "", "getExecuterOptions"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface": [[255, 3, 1, "", "test_checkEnergyBalance"], [255, 3, 1, "", "test_computeDpaRate"], [255, 3, 1, "", "test_getHistoryParams"], [255, 3, 1, "", "test_getIOFileNames"], [255, 3, 1, "", "test_interaction"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters": [[255, 3, 1, "", "test_calculateKeff"], [255, 3, 1, "", "test_executerInteraction"], [255, 3, 1, "", "test_getExecuterCls"], [255, 3, 1, "", "test_getTightCouplingValue"], [255, 3, 1, "", "test_setTightCouplingDefaults"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform": [[255, 3, 1, "", "test_calculateKeff"], [255, 3, 1, "", "test_executerInteractionNonUniformAssems"], [255, 3, 1, "", "test_getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions": [[255, 3, 1, "", "test_readFromReactors"], [255, 3, 1, "", "test_readFromSettings"], [255, 3, 1, "", "test_savePhysicsFiles"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper": [[255, 3, 1, "", "test_getBurnupPeakingFactor"], [255, 3, 1, "", "test_getBurnupPeakingFactorZero"], [255, 3, 1, "", "test_getDpaXs"], [255, 3, 1, "", "test_mapper"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils": [[255, 3, 1, "", "test_calcReactionRates"]], "armi.physics.neutronics.latticePhysics": [[257, 0, 0, "-", "latticePhysicsInterface"], [258, 0, 0, "-", "latticePhysicsWriter"], [259, 0, 0, "-", "tests"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface": [[257, 2, 1, "", "LatticePhysicsInterface"], [257, 1, 1, "", "setBlockNeutronVelocities"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface": [[257, 3, 1, "", "clearXS"], [257, 3, 1, "", "computeCrossSections"], [257, 4, 1, "", "function"], [257, 3, 1, "", "generateLatticePhysicsInputs"], [257, 3, 1, "", "getReader"], [257, 3, 1, "", "getRepresentativeBlocks"], [257, 3, 1, "", "getWriters"], [257, 3, 1, "", "interactBOC"], [257, 3, 1, "", "interactBOL"], [257, 3, 1, "", "interactCoupled"], [257, 3, 1, "", "interactEOC"], [257, 3, 1, "", "interactEveryNode"], [257, 3, 1, "", "makeCycleXSFilesAsBaseFiles"], [257, 3, 1, "", "readExistingXSLibraries"], [257, 3, 1, "", "updatePhysicsCouplingControl"], [257, 3, 1, "", "updateXSLibrary"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter": [[258, 2, 1, "", "LatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter": [[258, 4, 1, "", "COOLANT_CATEGORY"], [258, 4, 1, "", "DEPLETABLE"], [258, 4, 1, "", "FISSION_PRODUCT_CATEGORY"], [258, 4, 1, "", "FUEL_CATEGORY"], [258, 4, 1, "", "INF_DILUTE"], [258, 4, 1, "", "REPRESENTED"], [258, 4, 1, "", "STRUCTURE_CATEGORY"], [258, 4, 1, "", "UNDEPLETABLE"], [258, 4, 1, "", "UNUSED_CATEGORY"], [258, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests": [[260, 0, 0, "-", "test_latticeInterface"], [261, 0, 0, "-", "test_latticeWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface": [[260, 2, 1, "", "LatticeInterfaceTester"], [260, 2, 1, "", "LatticeInterfaceTesterLibFalse"], [260, 2, 1, "", "TestLatticePhysicsInterface"], [260, 2, 1, "", "TestLatticePhysicsInterfaceBase"], [260, 2, 1, "", "TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester": [[260, 3, 1, "", "readExistingXSLibraries"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface": [[260, 3, 1, "", "test_getSuffix"], [260, 3, 1, "", "test_includeGammaXS"], [260, 3, 1, "", "test_interactAll"], [260, 3, 1, "", "test_interactBOC"], [260, 3, 1, "", "test_interactBOL"], [260, 3, 1, "", "test_interactEveryNode"], [260, 3, 1, "", "test_interactEveryNodeAll"], [260, 3, 1, "", "test_interactEveryNodeFirstCoupled"], [260, 3, 1, "", "test_interactEveryNodeWhenCoupled"], [260, 3, 1, "", "test_interactEveryNodeWhenCoupledButNot"], [260, 3, 1, "", "test_interactFirstCoupledIteration"], [260, 3, 1, "", "test_latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation": [[260, 3, 1, "", "test_libCreation_GenXS"], [260, 3, 1, "", "test_libCreation_GenXS_2"], [260, 3, 1, "", "test_libCreation_GenXS_3"], [260, 3, 1, "", "test_libCreation_NoGenXS"], [260, 3, 1, "", "test_libCreation_NoGenXS_2"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter": [[261, 2, 1, "", "FakeLatticePhysicsWriter"], [261, 2, 1, "", "TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter": [[261, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter": [[261, 3, 1, "", "test_getAllNuclidesByTemperatureInC"], [261, 3, 1, "", "test_getAllNuclidesByTemperatureInCExplicitFissionProducts"], [261, 3, 1, "", "test_getAllNuclidesByTemperatureInCNone"], [261, 3, 1, "", "test_getAvgNuclideTemperatureInC"], [261, 3, 1, "", "test_getDetailedFPDensities"], [261, 3, 1, "", "test_getDetailedFissionProducts"], [261, 3, 1, "", "test_getDetailedFissionProductsPass"], [261, 3, 1, "", "test_getDriverBlock"], [261, 3, 1, "", "test_getFuelTemperature"], [261, 3, 1, "", "test_isCriticalBucklingSearchActive"], [261, 3, 1, "", "test_isGammaXSGenerationEnabled"], [261, 3, 1, "", "test_isSourceDriven"], [261, 3, 1, "", "test_latticePhysicsWriter"], [261, 3, 1, "", "test_setBlockNeutronVelocities"], [261, 3, 1, "", "test_writeTitle"]], "armi.physics.neutronics.macroXSGenerationInterface": [[262, 2, 1, "", "MacroXSGenerationInterface"], [262, 2, 1, "", "MacroXSGenerator"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface": [[262, 3, 1, "", "buildMacros"], [262, 4, 1, "", "name"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator": [[262, 3, 1, "", "invokeHook"]], "armi.physics.neutronics.parameters": [[263, 1, 1, "", "getNeutronicsParameterDefinitions"]], "armi.physics.neutronics.reports": [[264, 6, 1, "", "PD_PLOT"], [264, 1, 1, "", "generateLinePlot"], [264, 1, 1, "", "insertInitialCoreFuelAssem"], [264, 1, 1, "", "insertNeutronicsBOLContent"], [264, 1, 1, "", "insertNeutronicsReport"], [264, 1, 1, "", "neutronicsPlotting"]], "armi.physics.neutronics.settings": [[265, 1, 1, "", "defineSettings"], [265, 1, 1, "", "getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[267, 0, 0, "-", "test_crossSectionManager"], [268, 0, 0, "-", "test_crossSectionSettings"], [269, 0, 0, "-", "test_crossSectionTable"], [270, 0, 0, "-", "test_energyGroups"], [271, 0, 0, "-", "test_macroXSGenerationInterface"], [272, 0, 0, "-", "test_neutronicsPlugin"]], "armi.physics.neutronics.tests.test_crossSectionManager": [[267, 2, 1, "", "TestBlockCollection"], [267, 2, 1, "", "TestBlockCollectionAverage"], [267, 2, 1, "", "TestBlockCollectionComponentAverage"], [267, 2, 1, "", "TestBlockCollectionComponentAverage1DCylinder"], [267, 2, 1, "", "TestBlockCollectionFluxWeightedAverage"], [267, 2, 1, "", "TestBlockCollectionMedian"], [267, 2, 1, "", "TestComponentAveraging"], [267, 2, 1, "", "TestCrossSectionGroupManager"], [267, 2, 1, "", "TestCrossSectionGroupManagerWithTempGrouping"], [267, 2, 1, "", "TestXSNumberConverters"], [267, 1, 1, "", "makeBlocks"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection": [[267, 3, 1, "", "test_add"], [267, 3, 1, "", "test_getBlocksInGroup"], [267, 3, 1, "", "test_is_pickleable"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage": [[267, 3, 1, "", "test_checkBlockSimilarity"], [267, 3, 1, "", "test_createRepresentativeBlock"], [267, 3, 1, "", "test_createRepresentativeBlockDissimilar"], [267, 3, 1, "", "test_performAverageByComponent"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage": [[267, 3, 1, "", "test_ComponentAverageRepBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder": [[267, 3, 1, "", "test_ComponentAverage1DCylinder"], [267, 3, 1, "", "test_ComponentAverageDuctHet1DCylinder"], [267, 3, 1, "", "test_checkComponentConsistency"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage": [[267, 3, 1, "", "test_createRepresentativeBlock"], [267, 3, 1, "", "test_invalidWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian": [[267, 3, 1, "", "test_createRepresentativeBlock"], [267, 3, 1, "", "test_getBlockNuclideTemperature"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging": [[267, 3, 1, "", "test_getAverageComponentNumberDensities"], [267, 3, 1, "", "test_getAverageComponentTemperature"], [267, 3, 1, "", "test_getAverageComponentTemperatureNoMass"], [267, 3, 1, "", "test_getAverageComponentTemperatureVariedWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager": [[267, 3, 1, "", "test_addXsGroupsFromBlocks"], [267, 3, 1, "", "test_calcWeightedBurnup"], [267, 3, 1, "", "test_copyPregeneratedFiles"], [267, 3, 1, "", "test_createRepresentativeBlocksUsingExistingBlocks"], [267, 3, 1, "", "test_createRepresentativeBlocksUsingExistingBlocksDisableValidBlockTypes"], [267, 3, 1, "", "test_disableEnvGroupUpdates"], [267, 3, 1, "", "test_enableEnvGroupUpdates"], [267, 3, 1, "", "test_getNextAvailableXsType"], [267, 3, 1, "", "test_getRepresentativeBlocks"], [267, 3, 1, "", "test_interactAllCoupled"], [267, 3, 1, "", "test_interactBOC"], [267, 3, 1, "", "test_interactBOL"], [267, 3, 1, "", "test_interactEveryNode"], [267, 3, 1, "", "test_interactFirstCoupledIteration"], [267, 3, 1, "", "test_setBuGroupBounds"], [267, 3, 1, "", "test_setTempGroupBounds"], [267, 3, 1, "", "test_updateBurnupGroups"], [267, 3, 1, "", "test_xsgmIsRunBeforeXS"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManagerWithTempGrouping": [[267, 3, 1, "", "test_updateEnvironmentGroups"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters": [[267, 3, 1, "", "test_conversion"], [267, 3, 1, "", "test_conversion_2digit"]], "armi.physics.neutronics.tests.test_crossSectionSettings": [[268, 2, 1, "", "TestCrossSectionSettings"], [268, 2, 1, "", "TestXSSettings"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings": [[268, 3, 1, "", "test_badCrossSections"], [268, 3, 1, "", "test_crossSections"], [268, 3, 1, "", "test_homogeneousXsDefaultSettingAssignment"], [268, 3, 1, "", "test_optionalKey"], [268, 3, 1, "", "test_pregeneratedCrossSections"], [268, 3, 1, "", "test_pregeneratedFluxInputs"], [268, 3, 1, "", "test_prioritization"], [268, 3, 1, "", "test_setDefaultSettingsByLowestEnvGroupHomogeneous"], [268, 3, 1, "", "test_setDefaultSettingsByLowestEnvGroupOneDimensional"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings": [[268, 3, 1, "", "test_caseSettings"], [268, 3, 1, "", "test_csBlockRepresentation"], [268, 3, 1, "", "test_csBlockRepresentationFileLocation"], [268, 3, 1, "", "test_xsSettingsSetDefault"], [268, 3, 1, "", "test_yamlIO"]], "armi.physics.neutronics.tests.test_crossSectionTable": [[269, 2, 1, "", "TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable": [[269, 3, 1, "", "test_isotopicDepletionInterface"], [269, 3, 1, "", "test_makeTable"]], "armi.physics.neutronics.tests.test_energyGroups": [[270, 2, 1, "", "TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups": [[270, 3, 1, "", "test_consistenciesBetweenGroupStructureAndGroupStructureType"], [270, 3, 1, "", "test_getFastFluxGroupCutoff"], [270, 3, 1, "", "test_invalidGroupStructureType"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface": [[271, 2, 1, "", "TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface": [[271, 3, 1, "", "test_macroXSGenerationInterfaceBasics"]], "armi.physics.neutronics.tests.test_neutronicsPlugin": [[272, 2, 1, "", "NeutronicsReactorTests"], [272, 2, 1, "", "TestNeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests": [[272, 3, 1, "", "test_kineticsParameterAssignment"], [272, 3, 1, "", "test_neutronicsSettingsValidators"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin": [[272, 4, 1, "", "plugin"], [272, 3, 1, "", "test_customSettingObjectIO"], [272, 3, 1, "", "test_customSettingRoundTrip"], [272, 3, 1, "", "test_neutronicsSettingsLoaded"]], "armi.physics.safety": [[273, 2, 1, "", "SafetyPlugin"]], "armi.physics.safety.SafetyPlugin": [[273, 3, 1, "", "defineSettings"]], "armi.physics.tests": [[275, 0, 0, "-", "test_executers"]], "armi.physics.tests.test_executers": [[275, 2, 1, "", "MockCore"], [275, 2, 1, "", "MockParams"], [275, 2, 1, "", "MockReactor"], [275, 2, 1, "", "TestExecuters"], [275, 2, 1, "", "TestExecutionOptions"]], "armi.physics.tests.test_executers.TestExecuters": [[275, 3, 1, "", "test_collectInputsAndOutputs"], [275, 3, 1, "", "test_runExternalExecutable"], [275, 3, 1, "", "test_updateRunDir"]], "armi.physics.tests.test_executers.TestExecutionOptions": [[275, 3, 1, "", "test_runningDirectoryPath"]], "armi.physics.thermalHydraulics": [[277, 0, 0, "-", "const"], [278, 0, 0, "-", "parameters"], [279, 0, 0, "-", "plugin"], [280, 0, 0, "-", "settings"], [281, 0, 0, "-", "tests"]], "armi.physics.thermalHydraulics.parameters": [[278, 1, 1, "", "getParameterDefinitions"]], "armi.physics.thermalHydraulics.plugin": [[279, 2, 1, "", "ThermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin": [[279, 3, 1, "", "afterConstructionOfAssemblies"], [279, 3, 1, "", "defineParameters"], [279, 3, 1, "", "defineSettings"], [279, 3, 1, "", "defineSettingsValidators"], [279, 3, 1, "", "exposeInterfaces"]], "armi.physics.thermalHydraulics.settings": [[280, 1, 1, "", "defineSettings"], [280, 1, 1, "", "defineValidators"]], "armi.physics.thermalHydraulics.tests": [[282, 0, 0, "-", "test_thermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin": [[282, 2, 1, "", "TestThermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin": [[282, 4, 1, "", "plugin"], [282, 3, 1, "", "test_thermalHydraulicsSettingsLoaded"], [282, 3, 1, "", "test_thermalHydraulicsSettingsSet"]], "armi.pluginManager": [[283, 2, 1, "", "ArmiPluginManager"]], "armi.pluginManager.ArmiPluginManager": [[283, 5, 1, "", "counter"], [283, 3, 1, "", "register"], [283, 3, 1, "", "unregister"]], "armi.plugins": [[284, 2, 1, "", "ArmiPlugin"], [284, 7, 1, "", "PluginError"], [284, 2, 1, "", "UserPlugin"], [284, 1, 1, "", "collectInterfaceDescriptions"], [284, 1, 1, "", "getNewPluginManager"]], "armi.plugins.ArmiPlugin": [[284, 3, 1, "", "afterConstructionOfAssemblies"], [284, 3, 1, "", "beforeReactorConstruction"], [284, 3, 1, "", "defineAssemblyTypes"], [284, 3, 1, "", "defineBlockTypes"], [284, 3, 1, "", "defineBlueprintsSections"], [284, 3, 1, "", "defineCaseDependencies"], [284, 3, 1, "", "defineEntryPoints"], [284, 3, 1, "", "defineFlags"], [284, 3, 1, "", "defineGuiWidgets"], [284, 3, 1, "", "defineParameterRenames"], [284, 3, 1, "", "defineParameters"], [284, 3, 1, "", "defineSettings"], [284, 3, 1, "", "defineSettingsValidators"], [284, 3, 1, "", "defineSystemBuilders"], [284, 3, 1, "", "exposeInterfaces"], [284, 3, 1, "", "getAxialExpansionChanger"], [284, 3, 1, "", "getOperatorClassFromRunType"], [284, 3, 1, "", "getReportContents"], [284, 3, 1, "", "mpiActionRequiresReset"], [284, 3, 1, "", "onProcessCoreLoading"]], "armi.plugins.UserPlugin": [[284, 3, 1, "", "defineParameterRenames"], [284, 3, 1, "", "defineParameters"], [284, 3, 1, "", "defineSettings"], [284, 3, 1, "", "defineSettingsValidators"]], "armi.reactor": [[285, 2, 1, "", "ReactorPlugin"], [286, 0, 0, "-", "assemblies"], [287, 0, 0, "-", "assemblyParameters"], [288, 0, 0, "-", "blockParameters"], [289, 0, 0, "-", "blocks"], [290, 0, 0, "-", "blueprints"], [306, 0, 0, "-", "components"], [312, 0, 0, "-", "composites"], [313, 0, 0, "-", "converters"], [332, 0, 0, "-", "cores"], [333, 0, 0, "-", "excoreStructure"], [334, 0, 0, "-", "flags"], [335, 0, 0, "-", "geometry"], [336, 0, 0, "-", "grids"], [345, 0, 0, "-", "parameters"], [350, 0, 0, "-", "reactorParameters"], [351, 0, 0, "-", "reactors"], [352, 0, 0, "-", "spentFuelPool"], [353, 0, 0, "-", "systemLayoutInput"], [354, 0, 0, "-", "tests"], [367, 0, 0, "-", "zones"]], "armi.reactor.ReactorPlugin": [[285, 3, 1, "", "beforeReactorConstruction"], [285, 3, 1, "", "defineAssemblyTypes"], [285, 3, 1, "", "defineBlockTypes"], [285, 3, 1, "", "defineSystemBuilders"], [285, 3, 1, "", "getAxialExpansionChanger"]], "armi.reactor.assemblies": [[286, 2, 1, "", "Assembly"], [286, 2, 1, "", "CartesianAssembly"], [286, 2, 1, "", "HexAssembly"], [286, 2, 1, "", "RZAssembly"], [286, 2, 1, "", "ThRZAssembly"]], "armi.reactor.assemblies.Assembly": [[286, 4, 1, "", "DATABASE"], [286, 4, 1, "", "LOAD_QUEUE"], [286, 4, 1, "", "NOT_IN_CORE"], [286, 4, 1, "", "SPENT_FUEL_POOL"], [286, 3, 1, "", "add"], [286, 3, 1, "", "adjustResolution"], [286, 3, 1, "", "calculateZCoords"], [286, 3, 1, "", "coords"], [286, 3, 1, "", "countBlocksWithFlags"], [286, 3, 1, "", "dump"], [286, 3, 1, "", "getAge"], [286, 3, 1, "", "getArea"], [286, 3, 1, "", "getAveragePlenumTemperature"], [286, 3, 1, "", "getAxialMesh"], [286, 3, 1, "", "getBIndexFromZIndex"], [286, 3, 1, "", "getBlockAtElevation"], [286, 3, 1, "", "getBlocks"], [286, 3, 1, "", "getBlocksAndZ"], [286, 3, 1, "", "getBlocksBetweenElevations"], [286, 3, 1, "", "getDim"], [286, 3, 1, "", "getElevationBoundariesByBlockType"], [286, 3, 1, "", "getElevationsMatchingParamValue"], [286, 3, 1, "", "getFirstBlock"], [286, 3, 1, "", "getFirstBlockByType"], [286, 3, 1, "", "getHeight"], [286, 3, 1, "", "getLocation"], [286, 3, 1, "", "getNum"], [286, 3, 1, "", "getParamOfZFunction"], [286, 3, 1, "", "getParamValuesAtZ"], [286, 3, 1, "", "getPinPlenumVolumeInCubicMeters"], [286, 3, 1, "", "getReactiveHeight"], [286, 3, 1, "", "getSymmetryFactor"], [286, 3, 1, "", "getTotalHeight"], [286, 3, 1, "", "getVolume"], [286, 3, 1, "", "hasContinuousCoolantChannel"], [286, 3, 1, "", "insert"], [286, 3, 1, "", "isOnWhichSymmetryLine"], [286, 3, 1, "", "makeAxialSnapList"], [286, 3, 1, "", "makeNameFromAssemNum"], [286, 3, 1, "", "makeUnique"], [286, 3, 1, "", "moveTo"], [286, 3, 1, "", "orientBlocks"], [286, 4, 1, "", "pDefs"], [286, 4, 1, "", "paramCollectionType"], [286, 3, 1, "", "reestablishBlockOrder"], [286, 3, 1, "", "renameBlocksAccordingToAssemblyNum"], [286, 3, 1, "", "renumber"], [286, 3, 1, "", "rotate"], [286, 3, 1, "", "scaleParamsToNewSymmetryFactor"], [286, 3, 1, "", "setBlockHeights"], [286, 3, 1, "", "setBlockMesh"]], "armi.reactor.assemblies.CartesianAssembly": [[286, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblies.HexAssembly": [[286, 4, 1, "", "paramCollectionType"], [286, 3, 1, "", "rotate"]], "armi.reactor.assemblies.RZAssembly": [[286, 4, 1, "", "paramCollectionType"], [286, 3, 1, "", "radialInner"], [286, 3, 1, "", "radialOuter"], [286, 3, 1, "", "thetaInner"], [286, 3, 1, "", "thetaOuter"]], "armi.reactor.assemblies.ThRZAssembly": [[286, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblyParameters": [[287, 1, 1, "", "getAssemblyParameterDefinitions"]], "armi.reactor.blockParameters": [[288, 1, 1, "", "getBlockParameterDefinitions"]], "armi.reactor.blocks": [[289, 2, 1, "", "Block"], [289, 2, 1, "", "CartesianBlock"], [289, 2, 1, "", "HexBlock"], [289, 2, 1, "", "ThRZBlock"]], "armi.reactor.blocks.Block": [[289, 4, 1, "", "PITCH_COMPONENT_TYPE"], [289, 4, 1, "", "PITCH_DIMENSION"], [289, 3, 1, "", "add"], [289, 3, 1, "", "adjustDensity"], [289, 3, 1, "", "adjustUEnrich"], [289, 3, 1, "", "autoCreateSpatialGrids"], [289, 3, 1, "", "completeInitialLoading"], [289, 3, 1, "", "coords"], [289, 5, 1, "", "core"], [289, 3, 1, "", "createHomogenizedCopy"], [289, 3, 1, "", "getArea"], [289, 3, 1, "", "getBlocks"], [289, 3, 1, "", "getBoronMassEnrich"], [289, 3, 1, "", "getCaptureEnergyGenerationConstants"], [289, 3, 1, "", "getComponentAreaFrac"], [289, 3, 1, "", "getComponentsInLinkedOrder"], [289, 3, 1, "", "getComponentsThatAreLinkedTo"], [289, 3, 1, "", "getDim"], [289, 3, 1, "", "getDimensions"], [289, 3, 1, "", "getFissionEnergyGenerationConstants"], [289, 3, 1, "", "getFlowAreaPerPin"], [289, 3, 1, "", "getGammaEnergyDepositionConstants"], [289, 3, 1, "", "getHeight"], [289, 3, 1, "", "getHydraulicDiameter"], [289, 3, 1, "", "getInputHeight"], [289, 3, 1, "", "getIntegratedMgFlux"], [289, 3, 1, "", "getLargestComponent"], [289, 3, 1, "", "getLocation"], [289, 3, 1, "", "getLumpedFissionProductCollection"], [289, 3, 1, "", "getMaxArea"], [289, 3, 1, "", "getMfp"], [289, 3, 1, "", "getMgFlux"], [289, 3, 1, "", "getMicroSuffix"], [289, 3, 1, "", "getNeutronEnergyDepositionConstants"], [289, 3, 1, "", "getNumPins"], [289, 3, 1, "", "getPinCenterFlatToFlat"], [289, 3, 1, "", "getPinCoordinates"], [289, 3, 1, "", "getPinLocations"], [289, 3, 1, "", "getPinPitch"], [289, 3, 1, "", "getPitch"], [289, 3, 1, "", "getPlenumPin"], [289, 3, 1, "", "getSmearDensity"], [289, 3, 1, "", "getSortedComponentsInsideOfComponent"], [289, 3, 1, "", "getSymmetryFactor"], [289, 3, 1, "", "getTotalEnergyGenerationConstants"], [289, 3, 1, "", "getUraniumMassEnrich"], [289, 3, 1, "", "getVolume"], [289, 3, 1, "", "getWettedPerimeter"], [289, 3, 1, "", "getWireWrapCladGap"], [289, 3, 1, "", "hasPinPitch"], [289, 3, 1, "", "isPlenumPin"], [289, 3, 1, "", "makeName"], [289, 3, 1, "", "mergeWithBlock"], [289, 4, 1, "", "pDefs"], [289, 4, 1, "", "paramCollectionType"], [289, 3, 1, "", "plotFlux"], [289, 3, 1, "", "remove"], [289, 3, 1, "", "removeAll"], [289, 3, 1, "", "replaceBlockWithBlock"], [289, 3, 1, "", "rotate"], [289, 3, 1, "", "setAreaFractionsReport"], [289, 3, 1, "", "setAxialExpTargetComp"], [289, 3, 1, "", "setB10VolParam"], [289, 3, 1, "", "setBuLimitInfo"], [289, 3, 1, "", "setHeight"], [289, 3, 1, "", "setPinMgFluxes"], [289, 3, 1, "", "setPitch"], [289, 4, 1, "", "uniqID"], [289, 3, 1, "", "updateComponentDims"], [289, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.CartesianBlock": [[289, 4, 1, "", "PITCH_COMPONENT_TYPE"], [289, 4, 1, "", "PITCH_DIMENSION"], [289, 3, 1, "", "getMaxArea"], [289, 3, 1, "", "getPinCenterFlatToFlat"], [289, 3, 1, "", "getSymmetryFactor"], [289, 4, 1, "", "paramCollectionType"], [289, 3, 1, "", "setPitch"]], "armi.reactor.blocks.HexBlock": [[289, 4, 1, "", "PITCH_COMPONENT_TYPE"], [289, 3, 1, "", "autoCreateSpatialGrids"], [289, 3, 1, "", "coords"], [289, 3, 1, "", "createHomogenizedCopy"], [289, 3, 1, "", "getDuctIP"], [289, 3, 1, "", "getDuctOP"], [289, 3, 1, "", "getFlowArea"], [289, 3, 1, "", "getHydraulicDiameter"], [289, 3, 1, "", "getMaxArea"], [289, 3, 1, "", "getPinCenterFlatToFlat"], [289, 3, 1, "", "getPinPitch"], [289, 3, 1, "", "getPinToDuctGap"], [289, 3, 1, "", "getRotationNum"], [289, 3, 1, "", "getSymmetryFactor"], [289, 3, 1, "", "getWettedPerimeter"], [289, 3, 1, "", "hasPinPitch"], [289, 3, 1, "", "initializePinLocations"], [289, 4, 1, "", "paramCollectionType"], [289, 3, 1, "", "rotate"], [289, 3, 1, "", "setPinPowers"], [289, 3, 1, "", "setRotationNum"], [289, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.ThRZBlock": [[289, 3, 1, "", "axialInner"], [289, 3, 1, "", "axialOuter"], [289, 3, 1, "", "getMaxArea"], [289, 4, 1, "", "paramCollectionType"], [289, 3, 1, "", "radialInner"], [289, 3, 1, "", "radialOuter"], [289, 3, 1, "", "thetaInner"], [289, 3, 1, "", "thetaOuter"], [289, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blueprints": [[290, 2, 1, "", "Blueprints"], [291, 0, 0, "-", "assemblyBlueprint"], [292, 0, 0, "-", "blockBlueprint"], [293, 0, 0, "-", "componentBlueprint"], [294, 0, 0, "-", "gridBlueprint"], [295, 0, 0, "-", "isotopicOptions"], [290, 1, 1, "", "loadFromCs"], [290, 1, 1, "", "migrate"], [296, 0, 0, "-", "reactorBlueprint"], [297, 0, 0, "-", "tests"]], "armi.reactor.blueprints.Blueprints": [[290, 3, 1, "", "addDefaultSFP"], [290, 4, 1, "", "attributes"], [290, 3, 1, "", "constructAssem"], [290, 3, 1, "", "load"], [290, 3, 1, "", "migrate"]], "armi.reactor.blueprints.assemblyBlueprint": [[291, 2, 1, "", "AssemblyBlueprint"], [291, 2, 1, "", "AssemblyKeyedList"], [291, 2, 1, "", "ByComponentModifications"], [291, 2, 1, "", "MaterialModifications"], [291, 2, 1, "", "Modifications"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint": [[291, 4, 1, "", "attributes"], [291, 3, 1, "", "construct"], [291, 3, 1, "", "getAssemClass"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList": [[291, 4, 1, "", "attributes"], [291, 5, 1, "", "bySpecifier"], [291, 4, 1, "", "item_type"]], "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications": [[291, 4, 1, "", "attributes"], [291, 4, 1, "", "key_type"], [291, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications": [[291, 4, 1, "", "attributes"], [291, 4, 1, "", "key_type"], [291, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.Modifications": [[291, 4, 1, "", "attributes"], [291, 4, 1, "", "key_type"], [291, 4, 1, "", "value_type"]], "armi.reactor.blueprints.blockBlueprint": [[292, 2, 1, "", "BlockBlueprint"], [292, 2, 1, "", "BlockKeyedList"], [292, 2, 1, "", "BlockList"]], "armi.reactor.blueprints.blockBlueprint.BlockBlueprint": [[292, 4, 1, "", "attributes"], [292, 3, 1, "", "construct"], [292, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockKeyedList": [[292, 4, 1, "", "attributes"], [292, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockList": [[292, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint": [[293, 2, 1, "", "ComponentBlueprint"], [293, 2, 1, "", "ComponentDimension"], [293, 2, 1, "", "ComponentGroup"], [293, 2, 1, "", "ComponentGroups"], [293, 2, 1, "", "ComponentKeyedList"], [293, 2, 1, "", "GroupedComponent"], [293, 1, 1, "", "expandElementals"], [293, 1, 1, "", "insertDepletableNuclideKeys"]], "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint": [[293, 4, 1, "", "attributes"], [293, 3, 1, "", "construct"]], "armi.reactor.blueprints.componentBlueprint.ComponentDimension": [[293, 4, 1, "", "attributes"], [293, 3, 1, "", "from_yaml"], [293, 3, 1, "", "to_yaml"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroup": [[293, 4, 1, "", "attributes"], [293, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroups": [[293, 4, 1, "", "attributes"], [293, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList": [[293, 4, 1, "", "attributes"], [293, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.GroupedComponent": [[293, 4, 1, "", "attributes"]], "armi.reactor.blueprints.gridBlueprint": [[294, 2, 1, "", "GridBlueprint"], [294, 2, 1, "", "Grids"], [294, 2, 1, "", "Triplet"], [294, 1, 1, "", "saveToStream"]], "armi.reactor.blueprints.gridBlueprint.GridBlueprint": [[294, 4, 1, "", "attributes"], [294, 3, 1, "", "construct"], [294, 3, 1, "", "expandToFull"], [294, 3, 1, "", "getLocators"], [294, 3, 1, "", "getMultiLocator"], [294, 5, 1, "", "readFromLatticeMap"]], "armi.reactor.blueprints.gridBlueprint.Grids": [[294, 4, 1, "", "attributes"], [294, 4, 1, "", "item_type"]], "armi.reactor.blueprints.gridBlueprint.Triplet": [[294, 4, 1, "", "attributes"]], "armi.reactor.blueprints.isotopicOptions": [[295, 2, 1, "", "CustomIsotopic"], [295, 2, 1, "", "CustomIsotopics"], [295, 2, 1, "", "NuclideFlag"], [295, 2, 1, "", "NuclideFlags"], [295, 1, 1, "", "autoUpdateNuclideFlags"], [295, 1, 1, "", "eleExpandInfoBasedOnCodeENDF"], [295, 1, 1, "", "genDefaultNucFlags"], [295, 1, 1, "", "getAllNuclideBasesByLibrary"], [295, 1, 1, "", "getDefaultNuclideFlags"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopic": [[295, 3, 1, "", "apply"], [295, 4, 1, "", "attributes"], [295, 5, 1, "", "density"], [295, 3, 1, "", "from_yaml"], [295, 3, 1, "", "from_yaml_key_val"], [295, 4, 1, "", "key_type"], [295, 4, 1, "", "value_type"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopics": [[295, 3, 1, "", "apply"], [295, 4, 1, "", "attributes"], [295, 4, 1, "", "item_type"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlag": [[295, 4, 1, "", "attributes"], [295, 3, 1, "", "fileAsActiveOrInert"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlags": [[295, 4, 1, "", "attributes"], [295, 4, 1, "", "item_type"]], "armi.reactor.blueprints.reactorBlueprint": [[296, 2, 1, "", "SystemBlueprint"], [296, 2, 1, "", "Systems"], [296, 1, 1, "", "summarizeMaterialData"]], "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint": [[296, 4, 1, "", "attributes"], [296, 3, 1, "", "construct"]], "armi.reactor.blueprints.reactorBlueprint.Systems": [[296, 4, 1, "", "attributes"], [296, 4, 1, "", "item_type"]], "armi.reactor.blueprints.tests": [[298, 0, 0, "-", "test_assemblyBlueprints"], [299, 0, 0, "-", "test_blockBlueprints"], [300, 0, 0, "-", "test_blueprints"], [301, 0, 0, "-", "test_componentBlueprint"], [302, 0, 0, "-", "test_customIsotopics"], [303, 0, 0, "-", "test_gridBlueprints"], [304, 0, 0, "-", "test_materialModifications"], [305, 0, 0, "-", "test_reactorBlueprints"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints": [[298, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications": [[298, 3, 1, "", "loadCustomAssembly"], [298, 3, 1, "", "test_checkParamConsistency"], [298, 4, 1, "", "twoBlockInput_correct"], [298, 4, 1, "", "twoBlockInput_wrongHeights"], [298, 4, 1, "", "twoBlockInput_wrongMatMods"], [298, 4, 1, "", "twoBlockInput_wrongMeshPoints"], [298, 4, 1, "", "twoBlockInput_wrongXSTypes"]], "armi.reactor.blueprints.tests.test_blockBlueprints": [[299, 2, 1, "", "TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock": [[299, 3, 1, "", "test_blockLattice"], [299, 3, 1, "", "test_constructSpatialGrid"], [299, 3, 1, "", "test_densityConsistentWithComponentConstructor"], [299, 3, 1, "", "test_explicitFlags"], [299, 3, 1, "", "test_getLocatorsAtLatticePositions"], [299, 3, 1, "", "test_nonLatticeComponentHasRightMult"]], "armi.reactor.blueprints.tests.test_blueprints": [[300, 2, 1, "", "TestBlueprints"], [300, 2, 1, "", "TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints": [[300, 3, 1, "", "test_componentDimensions"], [300, 3, 1, "", "test_getAssemblyTypeBySpecifier"], [300, 3, 1, "", "test_nuclides"], [300, 3, 1, "", "test_roundTripCompleteBP"], [300, 3, 1, "", "test_specialIsotopicVectors"], [300, 3, 1, "", "test_traceNuclides"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema": [[300, 3, 1, "", "test_assemblyParameters"], [300, 3, 1, "", "test_cladding_invalid"], [300, 3, 1, "", "test_componentGroupInput"], [300, 3, 1, "", "test_components"], [300, 3, 1, "", "test_customIsotopics"], [300, 3, 1, "", "test_merge"], [300, 3, 1, "", "test_noDuplicateKeysInYamlBlueprints"], [300, 3, 1, "", "test_nuclideFlags"], [300, 3, 1, "", "test_nuclidesMc2v2"], [300, 3, 1, "", "test_nuclidesMc2v3"], [300, 3, 1, "", "test_topLevelComponentInput"], [300, 3, 1, "", "test_withoutBlocks"]], "armi.reactor.blueprints.tests.test_componentBlueprint": [[301, 2, 1, "", "TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint": [[301, 4, 1, "", "componentString"], [301, 3, 1, "", "test_autoDepletable"], [301, 3, 1, "", "test_componentInitializationAmericiumCustomIsotopics"], [301, 3, 1, "", "test_componentInitializationControlCustomIsotopics"], [301, 3, 1, "", "test_componentInitializationIncompleteBurnChain"], [301, 3, 1, "", "test_componentInitializationThoriumBurnCustomIsotopics"], [301, 3, 1, "", "test_componentInitializationThoriumNoBurnCustomIsotopics"]], "armi.reactor.blueprints.tests.test_customIsotopics": [[302, 2, 1, "", "TestCustomIsotopics"], [302, 2, 1, "", "TestCustomIsotopics_ErrorConditions"], [302, 2, 1, "", "TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics": [[302, 3, 1, "", "test_customDensityLogsAndErrors"], [302, 3, 1, "", "test_densitiesAppliedToNonCustomMaterials"], [302, 3, 1, "", "test_expandedNatural"], [302, 3, 1, "", "test_infDiluteAreOnlyNatural"], [302, 3, 1, "", "test_massFractionsAreApplied"], [302, 3, 1, "", "test_numberDensities"], [302, 3, 1, "", "test_numberDensitiesAnchor"], [302, 3, 1, "", "test_numberFractions"], [302, 3, 1, "", "test_unmodified"], [302, 4, 1, "", "yamlBadBlocks"], [302, 4, 1, "", "yamlGoodBlocks"], [302, 4, 1, "", "yamlPreamble"], [302, 4, 1, "", "yamlString"], [302, 4, 1, "", "yamlStringWithError"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions": [[302, 3, 1, "", "test_densityMustBePositive"], [302, 3, 1, "", "test_nonConformantElementName"], [302, 3, 1, "", "test_numberDensitiesCannotSpecifyDensity"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion": [[302, 3, 1, "", "test_eleExpandInfoBasedOnCodeENDF"], [302, 3, 1, "", "test_expandedNatural"], [302, 4, 1, "", "yamlString"]], "armi.reactor.blueprints.tests.test_gridBlueprints": [[303, 2, 1, "", "TestGridBPRoundTrip"], [303, 2, 1, "", "TestGridBlueprintsSection"], [303, 2, 1, "", "TestRZTGridBlueprint"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip": [[303, 3, 1, "", "test_contents"], [303, 3, 1, "", "test_roundTrip"], [303, 3, 1, "", "test_tinyMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection": [[303, 3, 1, "", "test_simpleRead"], [303, 3, 1, "", "test_simpleReadLatticeMap"], [303, 3, 1, "", "test_simpleReadNoLatticeMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint": [[303, 3, 1, "", "test_construct"], [303, 3, 1, "", "test_geomFile"]], "armi.reactor.blueprints.tests.test_materialModifications": [[304, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications": [[304, 4, 1, "", "b4cInput"], [304, 3, 1, "", "loadB4CAssembly"], [304, 3, 1, "", "loadUZrAssembly"], [304, 3, 1, "", "test_bothU235ZrWtFracModification"], [304, 3, 1, "", "test_checkByComponentMaterialInput"], [304, 3, 1, "", "test_filterMaterialInput"], [304, 3, 1, "", "test_invalidComponentModification"], [304, 3, 1, "", "test_invalidMatModName"], [304, 3, 1, "", "test_matModsUpTheMRO"], [304, 3, 1, "", "test_materialModificationLength"], [304, 3, 1, "", "test_noMaterialModifications"], [304, 3, 1, "", "test_theoreticalDensity"], [304, 3, 1, "", "test_u235_wt_frac_byComponent_modification1"], [304, 3, 1, "", "test_u235_wt_frac_byComponent_modification2"], [304, 3, 1, "", "test_u235_wt_frac_modification"], [304, 3, 1, "", "test_zrWtFracModification"], [304, 4, 1, "", "uZrInput"]], "armi.reactor.blueprints.tests.test_reactorBlueprints": [[305, 2, 1, "", "TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints": [[305, 3, 1, "", "test_construct"], [305, 3, 1, "", "test_excoreStructure"], [305, 3, 1, "", "test_materialDataSummary"], [305, 3, 1, "", "test_simpleRead"], [305, 3, 1, "", "test_spentFuelPool"]], "armi.reactor.components": [[306, 2, 1, "", "DerivedShape"], [306, 2, 1, "", "NullComponent"], [306, 2, 1, "", "PositiveOrNegativeVolumeComponent"], [306, 2, 1, "", "UnshapedComponent"], [306, 2, 1, "", "UnshapedVolumetricComponent"], [306, 2, 1, "", "ZeroMassComponent"], [307, 0, 0, "-", "basicShapes"], [308, 0, 0, "-", "complexShapes"], [309, 0, 0, "-", "component"], [310, 0, 0, "-", "componentParameters"], [306, 1, 1, "", "factory"], [311, 0, 0, "-", "volumetricShapes"]], "armi.reactor.components.DerivedShape": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 3, 1, "", "computeVolume"], [306, 3, 1, "", "getBoundingCircleOuterDiameter"], [306, 3, 1, "", "getComponentArea"], [306, 3, 1, "", "getMaxVolume"], [306, 3, 1, "", "getVolume"], [306, 4, 1, "", "material"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.NullComponent": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 3, 1, "", "getBoundingCircleOuterDiameter"], [306, 3, 1, "", "getDimension"], [306, 4, 1, "", "material"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.PositiveOrNegativeVolumeComponent": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "material"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedComponent": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 3, 1, "", "fromComponent"], [306, 3, 1, "", "getBoundingCircleOuterDiameter"], [306, 3, 1, "", "getComponentArea"], [306, 4, 1, "", "material"], [306, 4, 1, "", "pDefs"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedVolumetricComponent": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 3, 1, "", "getComponentArea"], [306, 3, 1, "", "getComponentVolume"], [306, 4, 1, "", "is3D"], [306, 4, 1, "", "material"], [306, 4, 1, "", "paramCollectionType"], [306, 3, 1, "", "setVolume"]], "armi.reactor.components.ZeroMassComponent": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 3, 1, "", "getNumberDensity"], [306, 4, 1, "", "material"], [306, 4, 1, "", "paramCollectionType"], [306, 3, 1, "", "setNumberDensity"]], "armi.reactor.components.basicShapes": [[307, 2, 1, "", "Circle"], [307, 2, 1, "", "Hexagon"], [307, 2, 1, "", "Rectangle"], [307, 2, 1, "", "SolidRectangle"], [307, 2, 1, "", "Square"], [307, 2, 1, "", "Triangle"]], "armi.reactor.components.basicShapes.Circle": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getBoundingCircleOuterDiameter"], [307, 3, 1, "", "getCircleInnerDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 4, 1, "", "is3D"], [307, 3, 1, "", "isEncapsulatedBy"], [307, 4, 1, "", "material"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Hexagon": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getBoundingCircleOuterDiameter"], [307, 3, 1, "", "getCircleInnerDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 3, 1, "", "getPerimeter"], [307, 3, 1, "", "getPitchData"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "material"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Rectangle": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getBoundingCircleOuterDiameter"], [307, 3, 1, "", "getCircleInnerDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 3, 1, "", "getPitchData"], [307, 4, 1, "", "is3D"], [307, 3, 1, "", "isLatticeComponent"], [307, 4, 1, "", "material"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.SolidRectangle": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getComponentArea"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "material"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Square": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 3, 1, "", "getBoundingCircleOuterDiameter"], [307, 3, 1, "", "getCircleInnerDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 3, 1, "", "getPitchData"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "material"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Triangle": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getComponentArea"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "material"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes": [[308, 2, 1, "", "Helix"], [308, 2, 1, "", "HexHoledCircle"], [308, 2, 1, "", "HoledHexagon"], [308, 2, 1, "", "HoledRectangle"], [308, 2, 1, "", "HoledSquare"]], "armi.reactor.components.complexShapes.Helix": [[308, 4, 1, "", "DIMENSION_NAMES"], [308, 4, 1, "", "INIT_SIGNATURE"], [308, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [308, 3, 1, "", "getBoundingCircleOuterDiameter"], [308, 3, 1, "", "getCircleInnerDiameter"], [308, 3, 1, "", "getComponentArea"], [308, 4, 1, "", "is3D"], [308, 4, 1, "", "material"], [308, 4, 1, "", "pDefs"], [308, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HexHoledCircle": [[308, 4, 1, "", "DIMENSION_NAMES"], [308, 4, 1, "", "INIT_SIGNATURE"], [308, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [308, 3, 1, "", "getCircleInnerDiameter"], [308, 3, 1, "", "getComponentArea"], [308, 4, 1, "", "material"], [308, 4, 1, "", "pDefs"], [308, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledHexagon": [[308, 4, 1, "", "DIMENSION_NAMES"], [308, 4, 1, "", "INIT_SIGNATURE"], [308, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [308, 3, 1, "", "getCircleInnerDiameter"], [308, 3, 1, "", "getComponentArea"], [308, 4, 1, "", "material"], [308, 4, 1, "", "pDefs"], [308, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledRectangle": [[308, 4, 1, "", "DIMENSION_NAMES"], [308, 4, 1, "", "INIT_SIGNATURE"], [308, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [308, 3, 1, "", "getCircleInnerDiameter"], [308, 3, 1, "", "getComponentArea"], [308, 4, 1, "", "material"], [308, 4, 1, "", "pDefs"], [308, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledSquare": [[308, 4, 1, "", "DIMENSION_NAMES"], [308, 4, 1, "", "INIT_SIGNATURE"], [308, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [308, 3, 1, "", "getCircleInnerDiameter"], [308, 3, 1, "", "getComponentArea"], [308, 4, 1, "", "material"], [308, 4, 1, "", "pDefs"], [308, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.component": [[309, 2, 1, "", "Component"], [309, 2, 1, "", "ComponentType"], [309, 2, 1, "", "ShapedComponent"], [309, 1, 1, "", "componentTypeIsValid"]], "armi.reactor.components.component.Component": [[309, 4, 1, "", "DIMENSION_NAMES"], [309, 4, 1, "", "INIT_SIGNATURE"], [309, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [309, 3, 1, "", "adjustDensityForHeightExpansion"], [309, 3, 1, "", "adjustMassEnrichment"], [309, 3, 1, "", "applyMaterialMassFracsToNumberDensities"], [309, 3, 1, "", "backUp"], [309, 3, 1, "", "clearCache"], [309, 3, 1, "", "clearLinkedCache"], [309, 3, 1, "", "computeVolume"], [309, 3, 1, "", "containsSolidMaterial"], [309, 3, 1, "", "containsVoidMaterial"], [309, 3, 1, "", "density"], [309, 3, 1, "", "dimensionIsLinked"], [309, 3, 1, "", "finalizeLoadingFromDB"], [309, 5, 1, "", "gasPorosity"], [309, 3, 1, "", "getArea"], [309, 3, 1, "", "getBoundingCircleOuterDiameter"], [309, 3, 1, "", "getCircleInnerDiameter"], [309, 3, 1, "", "getComponentArea"], [309, 3, 1, "", "getComponentVolume"], [309, 3, 1, "", "getDimension"], [309, 3, 1, "", "getDimensionNamesLinkedTo"], [309, 3, 1, "", "getEnrichment"], [309, 3, 1, "", "getFuelMass"], [309, 3, 1, "", "getHeightFactor"], [309, 3, 1, "", "getIntegratedMgFlux"], [309, 3, 1, "", "getLinkedComponents"], [309, 3, 1, "", "getLumpedFissionProductCollection"], [309, 3, 1, "", "getMass"], [309, 3, 1, "", "getMassEnrichment"], [309, 3, 1, "", "getMicroSuffix"], [309, 3, 1, "", "getNuclideNumberDensities"], [309, 3, 1, "", "getNuclides"], [309, 3, 1, "", "getNumberDensity"], [309, 3, 1, "", "getPinMgFluxes"], [309, 3, 1, "", "getPitchData"], [309, 3, 1, "", "getProperties"], [309, 3, 1, "", "getThermalExpansionFactor"], [309, 3, 1, "", "getVolume"], [309, 4, 1, "", "is3D"], [309, 3, 1, "", "iterComponents"], [309, 5, 1, "", "liquidPorosity"], [309, 4, 1, "", "material"], [309, 3, 1, "", "mergeNuclidesInto"], [309, 4, 1, "", "pDefs"], [309, 4, 1, "", "paramCollectionType"], [309, 3, 1, "", "printContents"], [309, 3, 1, "", "resolveLinkedDims"], [309, 3, 1, "", "restoreBackup"], [309, 3, 1, "", "setArea"], [309, 3, 1, "", "setDimension"], [309, 3, 1, "", "setDimensionReport"], [309, 3, 1, "", "setLink"], [309, 3, 1, "", "setLumpedFissionProducts"], [309, 3, 1, "", "setName"], [309, 3, 1, "", "setNumberDensities"], [309, 3, 1, "", "setNumberDensity"], [309, 3, 1, "", "setProperties"], [309, 3, 1, "", "setTemperature"], [309, 3, 1, "", "setVolume"], [309, 5, 1, "", "temperatureInC"], [309, 5, 1, "", "temperatureInK"], [309, 3, 1, "", "updateDims"], [309, 3, 1, "", "updateNumberDensities"]], "armi.reactor.components.component.ComponentType": [[309, 4, 1, "", "NON_DIMENSION_NAMES"], [309, 4, 1, "", "TYPES"]], "armi.reactor.components.component.ShapedComponent": [[309, 4, 1, "", "DIMENSION_NAMES"], [309, 4, 1, "", "INIT_SIGNATURE"], [309, 4, 1, "", "material"], [309, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.componentParameters": [[310, 1, 1, "", "getCircleParameterDefinitions"], [310, 1, 1, "", "getComponentParameterDefinitions"], [310, 1, 1, "", "getCubeParameterDefinitions"], [310, 1, 1, "", "getHelixParameterDefinitions"], [310, 1, 1, "", "getHexHoledCircleParameterDefinitions"], [310, 1, 1, "", "getHexagonParameterDefinitions"], [310, 1, 1, "", "getHoledHexagonParameterDefinitions"], [310, 1, 1, "", "getHoledRectangleParameterDefinitions"], [310, 1, 1, "", "getRadialSegmentParameterDefinitions"], [310, 1, 1, "", "getRectangleParameterDefinitions"], [310, 1, 1, "", "getTriangleParameterDefinitions"], [310, 1, 1, "", "getUnshapedParameterDefinitions"]], "armi.reactor.components.volumetricShapes": [[311, 2, 1, "", "Cube"], [311, 2, 1, "", "DifferentialRadialSegment"], [311, 2, 1, "", "RadialSegment"], [311, 2, 1, "", "Sphere"]], "armi.reactor.components.volumetricShapes.Cube": [[311, 4, 1, "", "DIMENSION_NAMES"], [311, 4, 1, "", "INIT_SIGNATURE"], [311, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [311, 3, 1, "", "getComponentArea"], [311, 3, 1, "", "getComponentVolume"], [311, 4, 1, "", "is3D"], [311, 4, 1, "", "material"], [311, 4, 1, "", "pDefs"], [311, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.DifferentialRadialSegment": [[311, 4, 1, "", "DIMENSION_NAMES"], [311, 4, 1, "", "INIT_SIGNATURE"], [311, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [311, 3, 1, "", "getComponentArea"], [311, 3, 1, "", "getComponentVolume"], [311, 4, 1, "", "is3D"], [311, 4, 1, "", "material"], [311, 4, 1, "", "paramCollectionType"], [311, 3, 1, "", "updateDims"]], "armi.reactor.components.volumetricShapes.RadialSegment": [[311, 4, 1, "", "DIMENSION_NAMES"], [311, 4, 1, "", "INIT_SIGNATURE"], [311, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [311, 3, 1, "", "getBoundingCircleOuterDiameter"], [311, 3, 1, "", "getComponentArea"], [311, 3, 1, "", "getComponentVolume"], [311, 4, 1, "", "is3D"], [311, 4, 1, "", "material"], [311, 4, 1, "", "pDefs"], [311, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.Sphere": [[311, 4, 1, "", "DIMENSION_NAMES"], [311, 4, 1, "", "INIT_SIGNATURE"], [311, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [311, 3, 1, "", "getBoundingCircleOuterDiameter"], [311, 3, 1, "", "getComponentArea"], [311, 3, 1, "", "getComponentVolume"], [311, 4, 1, "", "is3D"], [311, 4, 1, "", "material"], [311, 4, 1, "", "pDefs"], [311, 4, 1, "", "paramCollectionType"]], "armi.reactor.composites": [[312, 2, 1, "", "ArmiObject"], [312, 2, 1, "", "Composite"], [312, 2, 1, "", "CompositeModelType"], [312, 2, 1, "", "FlagSerializer"], [312, 2, 1, "", "StateRetainer"], [312, 1, 1, "", "gatherMaterialsByVolume"], [312, 1, 1, "", "getDominantMaterial"], [312, 1, 1, "", "getReactionRateDict"]], "armi.reactor.composites.ArmiObject": [[312, 3, 1, "", "addMass"], [312, 3, 1, "", "addMasses"], [312, 3, 1, "", "adjustMassEnrichment"], [312, 3, 1, "", "adjustMassFrac"], [312, 3, 1, "", "calcAvgParam"], [312, 3, 1, "", "calcTotalParam"], [312, 3, 1, "", "changeNDensByFactor"], [312, 3, 1, "", "clearCache"], [312, 3, 1, "", "clearNumberDensities"], [312, 3, 1, "", "constituentReport"], [312, 3, 1, "", "containsAtLeastOneChildWithFlags"], [312, 3, 1, "", "containsHeavyMetal"], [312, 3, 1, "", "containsOnlyChildrenWithFlags"], [312, 3, 1, "", "copyParamsFrom"], [312, 3, 1, "", "copyParamsToChildren"], [312, 3, 1, "", "density"], [312, 3, 1, "", "doChildrenHaveFlags"], [312, 3, 1, "", "duplicate"], [312, 3, 1, "", "expandAllElementalsToIsotopics"], [312, 3, 1, "", "expandElementalToIsotopics"], [312, 3, 1, "", "getAncestor"], [312, 3, 1, "", "getAncestorAndDistance"], [312, 3, 1, "", "getAncestorWithFlags"], [312, 3, 1, "", "getArea"], [312, 3, 1, "", "getAtomicWeight"], [312, 3, 1, "", "getAverageTempInC"], [312, 3, 1, "", "getBoundingIndices"], [312, 3, 1, "", "getChildParamValues"], [312, 3, 1, "", "getChildren"], [312, 3, 1, "", "getChildrenWithFlags"], [312, 3, 1, "", "getChildrenWithNuclides"], [312, 3, 1, "", "getComponent"], [312, 3, 1, "", "getComponentByName"], [312, 3, 1, "", "getComponentNames"], [312, 3, 1, "", "getComponents"], [312, 3, 1, "", "getComponentsOfMaterial"], [312, 3, 1, "", "getComponentsOfShape"], [312, 3, 1, "", "getDominantMaterial"], [312, 3, 1, "", "getFPMass"], [312, 3, 1, "", "getFissileMass"], [312, 3, 1, "", "getFissileMassEnrich"], [312, 3, 1, "", "getFuelMass"], [312, 3, 1, "", "getHMDens"], [312, 3, 1, "", "getHMMass"], [312, 3, 1, "", "getHMMoles"], [312, 3, 1, "", "getIntegratedMgFlux"], [312, 3, 1, "", "getLumpedFissionProductCollection"], [312, 3, 1, "", "getMass"], [312, 3, 1, "", "getMassFrac"], [312, 3, 1, "", "getMassFracs"], [312, 3, 1, "", "getMasses"], [312, 3, 1, "", "getMaxArea"], [312, 3, 1, "", "getMaxParam"], [312, 3, 1, "", "getMgFlux"], [312, 3, 1, "", "getMicroSuffix"], [312, 3, 1, "", "getMinParam"], [312, 3, 1, "", "getName"], [312, 3, 1, "", "getNuclideNumberDensities"], [312, 3, 1, "", "getNuclides"], [312, 3, 1, "", "getNumComponents"], [312, 3, 1, "", "getNumberDensities"], [312, 3, 1, "", "getNumberDensity"], [312, 3, 1, "", "getNumberOfAtoms"], [312, 3, 1, "", "getParamNames"], [312, 3, 1, "", "getParameterCollection"], [312, 3, 1, "", "getSymmetryFactor"], [312, 3, 1, "", "getTotalNDens"], [312, 3, 1, "", "getType"], [312, 3, 1, "", "getUraniumNumEnrich"], [312, 3, 1, "", "getVolume"], [312, 3, 1, "", "getVolumeFraction"], [312, 3, 1, "", "getVolumeFractions"], [312, 3, 1, "", "hasComponents"], [312, 3, 1, "", "hasFlags"], [312, 3, 1, "", "isFuel"], [312, 3, 1, "", "iterComponents"], [312, 3, 1, "", "nameContains"], [312, 4, 1, "", "pDefs"], [312, 4, 1, "", "paramCollectionType"], [312, 3, 1, "", "removeMass"], [312, 3, 1, "", "resolveLinkedDims"], [312, 3, 1, "", "setChildrenLumpedFissionProducts"], [312, 3, 1, "", "setComponentDimensionsReport"], [312, 3, 1, "", "setLumpedFissionProducts"], [312, 3, 1, "", "setMass"], [312, 3, 1, "", "setMassFrac"], [312, 3, 1, "", "setMassFracs"], [312, 3, 1, "", "setMasses"], [312, 3, 1, "", "setName"], [312, 3, 1, "", "setNumberDensities"], [312, 3, 1, "", "setNumberDensity"], [312, 3, 1, "", "setType"], [312, 3, 1, "", "updateNumberDensities"], [312, 3, 1, "", "updateParamsFrom"]], "armi.reactor.composites.Composite": [[312, 3, 1, "", "add"], [312, 3, 1, "", "append"], [312, 3, 1, "", "backUp"], [312, 3, 1, "", "extend"], [312, 3, 1, "", "getBoundingCircleOuterDiameter"], [312, 3, 1, "", "getChildren"], [312, 3, 1, "", "getChildrenOfType"], [312, 3, 1, "", "getChildrenWithFlags"], [312, 3, 1, "", "getComponents"], [312, 3, 1, "", "getIntegratedMgFlux"], [312, 3, 1, "", "getLumpedFissionProductCollection"], [312, 3, 1, "", "getLumpedFissionProductsIfNecessary"], [312, 3, 1, "", "getPuMoles"], [312, 3, 1, "", "getReactionRates"], [312, 3, 1, "", "index"], [312, 3, 1, "", "insert"], [312, 3, 1, "", "iterComponents"], [312, 3, 1, "", "moveTo"], [312, 4, 1, "", "paramCollectionType"], [312, 3, 1, "", "printContents"], [312, 3, 1, "", "remove"], [312, 3, 1, "", "removeAll"], [312, 3, 1, "", "requiresLumpedFissionProducts"], [312, 3, 1, "", "restoreBackup"], [312, 3, 1, "", "retainState"], [312, 3, 1, "", "setChildren"], [312, 3, 1, "", "sort"], [312, 3, 1, "", "syncMpiState"]], "armi.reactor.composites.CompositeModelType": [[312, 4, 1, "", "TYPES"]], "armi.reactor.composites.FlagSerializer": [[312, 3, 1, "", "pack"], [312, 3, 1, "", "unpack"], [312, 4, 1, "", "version"]], "armi.reactor.converters": [[314, 0, 0, "-", "axialExpansionChanger"], [318, 0, 0, "-", "blockConverters"], [319, 0, 0, "-", "geometryConverters"], [320, 0, 0, "-", "meshConverters"], [321, 0, 0, "-", "parameterSweeps"], [323, 0, 0, "-", "pinTypeBlockConverters"], [324, 0, 0, "-", "tests"], [331, 0, 0, "-", "uniformMesh"]], "armi.reactor.converters.axialExpansionChanger": [[315, 0, 0, "-", "assemblyAxialLinkage"], [316, 0, 0, "-", "axialExpansionChanger"], [317, 0, 0, "-", "expansionData"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage": [[315, 2, 1, "", "AssemblyAxialLinkage"], [315, 2, 1, "", "AxialLink"], [315, 1, 1, "", "areAxiallyLinked"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage": [[315, 3, 1, "", "areAxiallyLinked"], [315, 3, 1, "", "getLinkedBlocks"], [315, 4, 1, "", "linkedBlocks"], [315, 4, 1, "", "linkedComponents"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AxialLink": [[315, 4, 1, "", "lower"], [315, 4, 1, "", "upper"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger": [[316, 2, 1, "", "AxialExpansionChanger"], [316, 1, 1, "", "getDefaultReferenceAssem"], [316, 1, 1, "", "makeAssemsAbleToSnapToUniformMesh"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger": [[316, 3, 1, "", "applyColdHeightMassIncrease"], [316, 3, 1, "", "axiallyExpandAssembly"], [316, 3, 1, "", "expandColdDimsToHot"], [316, 4, 1, "", "expansionData"], [316, 4, 1, "", "linked"], [316, 3, 1, "", "manageCoreMesh"], [316, 3, 1, "", "performPrescribedAxialExpansion"], [316, 3, 1, "", "performThermalAxialExpansion"], [316, 3, 1, "", "reset"], [316, 3, 1, "", "setAssembly"]], "armi.reactor.converters.axialExpansionChanger.expansionData": [[317, 2, 1, "", "ExpansionData"], [317, 1, 1, "", "getSolidComponents"], [317, 1, 1, "", "iterSolidComponents"]], "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData": [[317, 4, 1, "", "componentReferenceTemperature"], [317, 3, 1, "", "computeThermalExpansionFactors"], [317, 3, 1, "", "determineTargetComponent"], [317, 3, 1, "", "getExpansionFactor"], [317, 3, 1, "", "isTargetComponent"], [317, 3, 1, "", "setExpansionFactors"], [317, 3, 1, "", "updateComponentTemp"], [317, 3, 1, "", "updateComponentTempsBy1DTempField"]], "armi.reactor.converters.blockConverters": [[318, 2, 1, "", "BlockAvgToCylConverter"], [318, 2, 1, "", "BlockConverter"], [318, 2, 1, "", "ComponentMerger"], [318, 2, 1, "", "HexComponentsToCylConverter"], [318, 2, 1, "", "MultipleComponentMerger"], [318, 1, 1, "", "getOuterDiamFromIDAndArea"], [318, 1, 1, "", "radiiFromHexPitches"], [318, 1, 1, "", "radiiFromHexSides"], [318, 1, 1, "", "radiiFromRingOfRods"], [318, 1, 1, "", "stripComponents"]], "armi.reactor.converters.blockConverters.BlockAvgToCylConverter": [[318, 3, 1, "", "convert"], [318, 3, 1, "", "plotConvertedBlock"]], "armi.reactor.converters.blockConverters.BlockConverter": [[318, 3, 1, "", "convert"], [318, 3, 1, "", "dissolveComponentIntoComponent"], [318, 3, 1, "", "restablishLinks"]], "armi.reactor.converters.blockConverters.ComponentMerger": [[318, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.HexComponentsToCylConverter": [[318, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.MultipleComponentMerger": [[318, 3, 1, "", "convert"]], "armi.reactor.converters.geometryConverters": [[319, 2, 1, "", "EdgeAssemblyChanger"], [319, 2, 1, "", "FuelAssemNumModifier"], [319, 2, 1, "", "GeometryChanger"], [319, 2, 1, "", "GeometryConverter"], [319, 2, 1, "", "HexToRZConverter"], [319, 2, 1, "", "HexToRZThetaConverter"], [319, 2, 1, "", "ThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger": [[319, 3, 1, "", "addEdgeAssemblies"], [319, 3, 1, "", "removeEdgeAssemblies"], [319, 3, 1, "", "scaleParamsRelatedToSymmetry"]], "armi.reactor.converters.geometryConverters.FuelAssemNumModifier": [[319, 3, 1, "", "addRing"], [319, 3, 1, "", "convert"], [319, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.GeometryChanger": [[319, 3, 1, "", "convert"], [319, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.HexToRZThetaConverter": [[319, 3, 1, "", "convert"], [319, 3, 1, "", "createHomogenizedRZTBlock"], [319, 3, 1, "", "plotConvertedReactor"], [319, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger": [[319, 4, 1, "", "EXPECTED_INPUT_SYMMETRY"], [319, 3, 1, "", "convert"], [319, 3, 1, "", "restorePreviousGeometry"]], "armi.reactor.converters.meshConverters": [[320, 2, 1, "", "MeshConverter"], [320, 2, 1, "", "RZThetaReactorMeshConverter"], [320, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialBins"], [320, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"], [320, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialFlags"], [320, 1, 1, "", "checkLastValueInList"], [320, 1, 1, "", "checkListBounds"], [320, 1, 1, "", "generateBins"]], "armi.reactor.converters.meshConverters.MeshConverter": [[320, 3, 1, "", "generateMesh"], [320, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter": [[320, 3, 1, "", "generateMesh"], [320, 3, 1, "", "setAxialMesh"], [320, 3, 1, "", "setRingsToConvert"], [320, 3, 1, "", "setThetaMesh"], [320, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.parameterSweeps": [[322, 0, 0, "-", "generalParameterSweepConverters"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters": [[322, 2, 1, "", "NeutronicConvergenceModifier"], [322, 2, 1, "", "ParameterSweepConverter"], [322, 2, 1, "", "SettingsModifier"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier": [[322, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter": [[322, 4, 1, "", "PRIORITY"], [322, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier": [[322, 3, 1, "", "convert"]], "armi.reactor.converters.pinTypeBlockConverters": [[323, 1, 1, "", "adjustCladThicknessByID"], [323, 1, 1, "", "adjustCladThicknessByOD"], [323, 1, 1, "", "adjustSmearDensity"]], "armi.reactor.converters.tests": [[325, 0, 0, "-", "test_axialExpansionChanger"], [326, 0, 0, "-", "test_blockConverter"], [327, 0, 0, "-", "test_geometryConverters"], [328, 0, 0, "-", "test_meshConverters"], [329, 0, 0, "-", "test_pinTypeBlockConverters"], [330, 0, 0, "-", "test_uniformMesh"]], "armi.reactor.converters.tests.test_axialExpansionChanger": [[325, 2, 1, "", "AxialExpansionTestBase"], [325, 2, 1, "", "FakeMat"], [325, 2, 1, "", "FakeMatException"], [325, 2, 1, "", "Temperature"], [325, 2, 1, "", "TestAxialExpansionHeight"], [325, 2, 1, "", "TestAxialLinkHelper"], [325, 2, 1, "", "TestBlockLink"], [325, 2, 1, "", "TestComponentLinks"], [325, 2, 1, "", "TestConservation"], [325, 2, 1, "", "TestDetermineTargetComponent"], [325, 2, 1, "", "TestExceptions"], [325, 2, 1, "", "TestGetSolidComponents"], [325, 2, 1, "", "TestInputHeightsConsideredHot"], [325, 2, 1, "", "TestManageCoreMesh"], [325, 1, 1, "", "buildTestAssemblyWithFakeMaterial"], [325, 1, 1, "", "checkColdBlockHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase": [[325, 4, 1, "", "Steel_Component_Lst"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat": [[325, 3, 1, "", "linearExpansionPercent"], [325, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException": [[325, 3, 1, "", "linearExpansionPercent"], [325, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight": [[325, 3, 1, "", "test_AssemblyAxialExpansionHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialLinkHelper": [[325, 3, 1, "", "test_construct"], [325, 3, 1, "", "test_override"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestBlockLink": [[325, 3, 1, "", "test_emptyBlocks"], [325, 3, 1, "", "test_multiBlock"], [325, 3, 1, "", "test_onAssembly"], [325, 3, 1, "", "test_singleBlock"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks": [[325, 3, 1, "", "runTest"], [325, 3, 1, "", "test_AnnularHexOverlappingThickAnnularHex"], [325, 3, 1, "", "test_annularPinNotOverlappingWithAnnulus"], [325, 3, 1, "", "test_annularPinOverlappingWithAnnuls"], [325, 3, 1, "", "test_differentMultNotOverlapping"], [325, 3, 1, "", "test_liquids"], [325, 3, 1, "", "test_overlappingSolidPins"], [325, 3, 1, "", "test_solidPinNotOverlappingAnnulus"], [325, 3, 1, "", "test_solidPinOverlappingWithAnnulus"], [325, 3, 1, "", "test_thinAnnularPinOverlappingWithThickAnnulus"], [325, 3, 1, "", "test_unshapedComponentAndCircle"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation": [[325, 3, 1, "", "complexConservationTest"], [325, 3, 1, "", "expandAssemForMassConservationTest"], [325, 3, 1, "", "test_computeThermalExpansionFactors"], [325, 3, 1, "", "test_noMovementACLP"], [325, 3, 1, "", "test_prescribedExpansionContractionConservation"], [325, 3, 1, "", "test_reset"], [325, 3, 1, "", "test_targetComponentMassConservation"], [325, 3, 1, "", "test_thermalExpansionContractionConservation_complex"], [325, 3, 1, "", "test_thermalExpansionContractionConservation_simple"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent": [[325, 3, 1, "", "test_determineTargetComponent"], [325, 3, 1, "", "test_determineTargetComponentBlockWithMultipleFlags"], [325, 3, 1, "", "test_manuallySetTargetComponent"], [325, 3, 1, "", "test_specifyTargetComponent_NotFound"], [325, 3, 1, "", "test_specifyTargetComponent_singleSolid"], [325, 3, 1, "", "test_specifyTargetComponet_MultipleFound"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions": [[325, 3, 1, "", "test_AssemblyAxialExpansionException"], [325, 3, 1, "", "test_determineLinked"], [325, 3, 1, "", "test_getLinkedComponents"], [325, 3, 1, "", "test_isFuelLocked"], [325, 3, 1, "", "test_isTopDummyBlockPresent"], [325, 3, 1, "", "test_setExpansionFactors"], [325, 3, 1, "", "test_updateComponentTempsBy1DTempFieldRuntimeError"], [325, 3, 1, "", "test_updateComponentTempsBy1DTempFieldValueError"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents": [[325, 3, 1, "", "test_getSolidComponents"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot": [[325, 3, 1, "", "checkColdHeightBlockMass"], [325, 3, 1, "", "test_coldAssemblyExpansion"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh": [[325, 3, 1, "", "test_componentConservation"], [325, 3, 1, "", "test_manageCoreMesh"]], "armi.reactor.converters.tests.test_blockConverter": [[326, 2, 1, "", "TestBlockConverter"], [326, 2, 1, "", "TestToCircles"], [326, 1, 1, "", "buildControlBlockWithLinkedNegativeAreaComponent"], [326, 1, 1, "", "buildSimpleFuelBlockNegativeArea"]], "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter": [[326, 3, 1, "", "test_buildInsideDuct"], [326, 3, 1, "", "test_build_NthRing"], [326, 3, 1, "", "test_convert"], [326, 3, 1, "", "test_convertCartesianLatticeWithFuelDriver"], [326, 3, 1, "", "test_convertHexWithFuelDriver"], [326, 3, 1, "", "test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"], [326, 3, 1, "", "test_dissolveIntoNegativeArea"], [326, 3, 1, "", "test_dissolveIntoZeroArea"], [326, 3, 1, "", "test_dissolveLinerIntoClad"], [326, 3, 1, "", "test_dissolveMultiple"], [326, 3, 1, "", "test_dissolveNegativeArea"], [326, 3, 1, "", "test_dissolveWireIntoCoolant"], [326, 3, 1, "", "test_dissolveZeroArea"]], "armi.reactor.converters.tests.test_blockConverter.TestToCircles": [[326, 3, 1, "", "test_fromHex"], [326, 3, 1, "", "test_fromRingOfRods"]], "armi.reactor.converters.tests.test_geometryConverters": [[327, 2, 1, "", "TestEdgeAssemblyChanger"], [327, 2, 1, "", "TestGeometryConverters"], [327, 2, 1, "", "TestHexToRZConverter"], [327, 2, 1, "", "TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger": [[327, 3, 1, "", "test_edgeAssemblies"]], "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters": [[327, 3, 1, "", "test_addRing"], [327, 3, 1, "", "test_getAssembliesInSector"], [327, 3, 1, "", "test_setNumberOfFuelAssems"]], "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter": [[327, 3, 1, "", "test_convert"], [327, 3, 1, "", "test_createHomogenizedRZTBlock"]], "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger": [[327, 3, 1, "", "test_growToFullCoreFromThirdCore"], [327, 3, 1, "", "test_initNewFullReactor"], [327, 3, 1, "", "test_skipGrowToFullCoreWhenAlreadyFullCore"]], "armi.reactor.converters.tests.test_meshConverters": [[328, 2, 1, "", "TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter": [[328, 3, 1, "", "test_meshByRingCompositionAxialBinsLargeCore"], [328, 3, 1, "", "test_meshByRingCompositionAxialBinsSmallCore"], [328, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesLargeCore"], [328, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesSmallCore"], [328, 3, 1, "", "test_meshByRingCompositionAxialFlagsLargeCore"], [328, 3, 1, "", "test_meshByRingCompositionAxialFlagsSmallCore"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters": [[329, 2, 1, "", "MassConservationTests"], [329, 2, 1, "", "TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests": [[329, 3, 1, "", "test_adjustSmearDensity"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters": [[329, 3, 1, "", "test_adjustCladThicknessByID"], [329, 3, 1, "", "test_adjustCladThicknessByOD"]], "armi.reactor.converters.tests.test_uniformMesh": [[330, 2, 1, "", "DummyFluxOptions"], [330, 2, 1, "", "TestAssemblyUniformMesh"], [330, 2, 1, "", "TestCalcReationRates"], [330, 2, 1, "", "TestConverterFactory"], [330, 2, 1, "", "TestGammaUniformMesh"], [330, 2, 1, "", "TestParamConversion"], [330, 2, 1, "", "TestUniformMesh"], [330, 2, 1, "", "TestUniformMeshComponents"], [330, 2, 1, "", "TestUniformMeshGenerator"], [330, 2, 1, "", "TestUniformMeshNonUniformAssemFlags"], [330, 1, 1, "", "applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh": [[330, 3, 1, "", "test_clearAssemblyState"], [330, 3, 1, "", "test_makeAssemUniformMeshParamMappingSameMesh"], [330, 3, 1, "", "test_makeAssemWithUniformMesh"], [330, 3, 1, "", "test_makeAssemWithUniformMeshSubmesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestCalcReationRates": [[330, 3, 1, "", "test_calcReactionRatesBlockList"]], "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory": [[330, 3, 1, "", "test_converterFactory"]], "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh": [[330, 3, 1, "", "test_applyStateToOriginal"], [330, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion": [[330, 3, 1, "", "test_setStateFromOverlaps"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh": [[330, 3, 1, "", "test_applyStateToOriginal"], [330, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents": [[330, 3, 1, "", "test_blueprintCopy"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator": [[330, 3, 1, "", "test_computeAverageAxialMesh"], [330, 3, 1, "", "test_filterMesh"], [330, 3, 1, "", "test_filteredTopAndBottom"], [330, 3, 1, "", "test_generateCommonMesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags": [[330, 3, 1, "", "test_reactorConversion"]], "armi.reactor.converters.uniformMesh": [[331, 2, 1, "", "GammaUniformMeshConverter"], [331, 2, 1, "", "NeutronicsUniformMeshConverter"], [331, 2, 1, "", "ParamMapper"], [331, 2, 1, "", "UniformMeshGenerator"], [331, 2, 1, "", "UniformMeshGeometryConverter"], [331, 1, 1, "", "converterFactory"], [331, 1, 1, "", "setNumberDensitiesFromOverlaps"]], "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter": [[331, 4, 1, "", "blockParamMappingCategories"], [331, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter": [[331, 4, 1, "", "blockParamMappingCategories"], [331, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.ParamMapper": [[331, 3, 1, "", "paramGetter"], [331, 3, 1, "", "paramSetter"]], "armi.reactor.converters.uniformMesh.UniformMeshGenerator": [[331, 3, 1, "", "generateCommonMesh"]], "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter": [[331, 3, 1, "", "applyStateToOriginal"], [331, 4, 1, "", "blockParamMappingCategories"], [331, 3, 1, "", "clearStateOnAssemblies"], [331, 3, 1, "", "convert"], [331, 3, 1, "", "initNewReactor"], [331, 3, 1, "", "makeAssemWithUniformMesh"], [331, 3, 1, "", "plotConvertedReactor"], [331, 4, 1, "", "reactorParamMappingCategories"], [331, 3, 1, "", "reset"], [331, 3, 1, "", "setAssemblyStateFromOverlaps"], [331, 3, 1, "", "updateReactionRates"]], "armi.reactor.cores": [[332, 2, 1, "", "Core"]], "armi.reactor.cores.Core": [[332, 3, 1, "", "add"], [332, 3, 1, "", "addMoreNodes"], [332, 3, 1, "", "buildCircularRingDictionary"], [332, 3, 1, "", "buildManualZones"], [332, 3, 1, "", "calcBlockMaxes"], [332, 3, 1, "", "countBlocksWithFlags"], [332, 3, 1, "", "countFuelAxialBlocks"], [332, 3, 1, "", "createAssemblyOfType"], [332, 3, 1, "", "createFreshFeed"], [332, 3, 1, "", "findAllAxialMeshPoints"], [332, 3, 1, "", "findAllAziMeshPoints"], [332, 3, 1, "", "findAllMeshPoints"], [332, 3, 1, "", "findAllRadMeshPoints"], [332, 3, 1, "", "findAxialMeshIndexOf"], [332, 3, 1, "", "findNeighbors"], [332, 3, 1, "", "genAssembliesAddedThisCycle"], [332, 3, 1, "", "genBlocksByLocName"], [332, 5, 1, "", "geomType"], [332, 3, 1, "", "getAllXsSuffixes"], [332, 3, 1, "", "getAssemblies"], [332, 3, 1, "", "getAssembliesInCircularRing"], [332, 3, 1, "", "getAssembliesInRing"], [332, 3, 1, "", "getAssembliesInSquareOrHexRing"], [332, 3, 1, "", "getAssembliesOfType"], [332, 3, 1, "", "getAssembliesOnSymmetryLine"], [332, 3, 1, "", "getAssembly"], [332, 3, 1, "", "getAssemblyByName"], [332, 3, 1, "", "getAssemblyPitch"], [332, 3, 1, "", "getAssemblyWithAssemNum"], [332, 3, 1, "", "getAssemblyWithStringLocation"], [332, 3, 1, "", "getAvgTemp"], [332, 3, 1, "", "getBlockByName"], [332, 3, 1, "", "getBlocks"], [332, 3, 1, "", "getBlocksByIndices"], [332, 3, 1, "", "getCoreRadius"], [332, 3, 1, "", "getFirstAssembly"], [332, 3, 1, "", "getFirstBlock"], [332, 3, 1, "", "getFirstFuelBlockAxialNode"], [332, 3, 1, "", "getFluxVector"], [332, 3, 1, "", "getFuelBottomHeight"], [332, 3, 1, "", "getLocationContents"], [332, 3, 1, "", "getMaxAssembliesInHexRing"], [332, 3, 1, "", "getMaxBlockParam"], [332, 3, 1, "", "getMaxNumPins"], [332, 3, 1, "", "getMinimumPercentFluxInFuel"], [332, 3, 1, "", "getNozzleTypes"], [332, 3, 1, "", "getNuclideCategories"], [332, 3, 1, "", "getNumAssembliesWithAllRingsFilledOut"], [332, 3, 1, "", "getNumEnergyGroups"], [332, 3, 1, "", "getNumHexRings"], [332, 3, 1, "", "getNumRings"], [332, 3, 1, "", "getScalarEvolution"], [332, 3, 1, "", "getTotalBlockParam"], [332, 3, 1, "", "growToFullCore"], [332, 5, 1, "", "isFullCore"], [332, 5, 1, "", "lib"], [332, 3, 1, "", "locateAllAssemblies"], [332, 3, 1, "", "makeLocationLookup"], [332, 3, 1, "", "normalizeInternalBookeeping"], [332, 3, 1, "", "normalizeNames"], [332, 4, 1, "", "pDefs"], [332, 4, 1, "", "paramCollectionType"], [332, 5, 1, "", "powerMultiplier"], [332, 3, 1, "", "processLoading"], [332, 5, 1, "", "r"], [332, 5, 1, "", "refAssem"], [332, 3, 1, "", "regenAssemblyLists"], [332, 3, 1, "", "removeAssembliesInRing"], [332, 3, 1, "", "removeAssembly"], [332, 3, 1, "", "saveAllFlux"], [332, 3, 1, "", "setBlockMassParams"], [332, 3, 1, "", "setMoveList"], [332, 3, 1, "", "setOptionsFromCs"], [332, 3, 1, "", "setPitchUniform"], [332, 3, 1, "", "setPowerFromDensity"], [332, 3, 1, "", "setPowerIfNecessary"], [332, 3, 1, "", "sortAssemsByRing"], [332, 3, 1, "", "summarizeNuclideCategories"], [332, 3, 1, "", "summarizeReactorStats"], [332, 5, 1, "", "symmetry"], [332, 3, 1, "", "updateAxialMesh"]], "armi.reactor.excoreStructure": [[333, 2, 1, "", "ExcoreCollection"], [333, 2, 1, "", "ExcoreStructure"]], "armi.reactor.excoreStructure.ExcoreStructure": [[333, 3, 1, "", "add"], [333, 4, 1, "", "paramCollectionType"], [333, 5, 1, "", "r"]], "armi.reactor.flags": [[334, 2, 1, "", "Flags"], [334, 7, 1, "", "InvalidFlagsError"]], "armi.reactor.flags.Flags": [[334, 4, 1, "", "A"], [334, 4, 1, "", "ACLP"], [334, 4, 1, "", "ANNULAR"], [334, 4, 1, "", "AXIAL"], [334, 4, 1, "", "B"], [334, 4, 1, "", "BATCHMASSADDITION"], [334, 4, 1, "", "BLANKET"], [334, 4, 1, "", "BOND"], [334, 4, 1, "", "BOOSTER"], [334, 4, 1, "", "C"], [334, 4, 1, "", "CLAD"], [334, 4, 1, "", "CONTROL"], [334, 4, 1, "", "COOLANT"], [334, 4, 1, "", "CORE_BARREL"], [334, 4, 1, "", "D"], [334, 4, 1, "", "DEPLETABLE"], [334, 4, 1, "", "DRIVER"], [334, 4, 1, "", "DSPACERINSIDE"], [334, 4, 1, "", "DUCT"], [334, 4, 1, "", "DUMMY"], [334, 4, 1, "", "E"], [334, 4, 1, "", "FEED"], [334, 4, 1, "", "FISSION_CHAMBER"], [334, 4, 1, "", "FUEL"], [334, 4, 1, "", "GAP"], [334, 4, 1, "", "GRID_PLATE"], [334, 4, 1, "", "GUIDE_TUBE"], [334, 4, 1, "", "HANDLING_SOCKET"], [334, 4, 1, "", "HIGH"], [334, 4, 1, "", "IGNITER"], [334, 4, 1, "", "INLET_NOZZLE"], [334, 4, 1, "", "INNER"], [334, 4, 1, "", "INTERCOOLANT"], [334, 4, 1, "", "INTERDUCTCOOLANT"], [334, 4, 1, "", "LINER"], [334, 4, 1, "", "LOAD_PAD"], [334, 4, 1, "", "LOW"], [334, 4, 1, "", "LOWER"], [334, 4, 1, "", "MATERIAL"], [334, 4, 1, "", "MEDIUM"], [334, 4, 1, "", "MIDDLE"], [334, 4, 1, "", "MODERATOR"], [334, 4, 1, "", "MOVEABLE"], [334, 4, 1, "", "MOX"], [334, 4, 1, "", "OUTER"], [334, 4, 1, "", "PIN"], [334, 4, 1, "", "PLENUM"], [334, 4, 1, "", "POISON"], [334, 4, 1, "", "PRIMARY"], [334, 4, 1, "", "RADIAL"], [334, 4, 1, "", "REFLECTOR"], [334, 4, 1, "", "SECONDARY"], [334, 4, 1, "", "SHIELD"], [334, 4, 1, "", "SHIELD_BLOCK"], [334, 4, 1, "", "SHUTDOWN"], [334, 4, 1, "", "SKID"], [334, 4, 1, "", "SLUG"], [334, 4, 1, "", "STARTER"], [334, 4, 1, "", "STRUCTURE"], [334, 4, 1, "", "TARGET"], [334, 4, 1, "", "TERTIARY"], [334, 4, 1, "", "TEST"], [334, 4, 1, "", "ULTIMATE"], [334, 4, 1, "", "UPPER"], [334, 4, 1, "", "VOID"], [334, 4, 1, "", "WIRE"], [334, 3, 1, "", "fromString"], [334, 3, 1, "", "fromStringIgnoreErrors"], [334, 3, 1, "", "toString"]], "armi.reactor.geometry": [[335, 2, 1, "", "BoundaryType"], [335, 2, 1, "", "DomainType"], [335, 2, 1, "", "GeomType"], [335, 2, 1, "", "SymmetryType"], [335, 1, 1, "", "checkValidGeomSymmetryCombo"]], "armi.reactor.geometry.BoundaryType": [[335, 4, 1, "", "NO_SYMMETRY"], [335, 4, 1, "", "PERIODIC"], [335, 4, 1, "", "REFLECTIVE"], [335, 3, 1, "", "fromAny"], [335, 3, 1, "", "fromStr"], [335, 3, 1, "", "hasSymmetry"], [335, 5, 1, "", "label"]], "armi.reactor.geometry.DomainType": [[335, 4, 1, "", "EIGHTH_CORE"], [335, 4, 1, "", "FULL_CORE"], [335, 4, 1, "", "NULL"], [335, 4, 1, "", "QUARTER_CORE"], [335, 4, 1, "", "SIXTEENTH_CORE"], [335, 4, 1, "", "THIRD_CORE"], [335, 3, 1, "", "fromAny"], [335, 3, 1, "", "fromStr"], [335, 5, 1, "", "label"], [335, 3, 1, "", "symmetryFactor"]], "armi.reactor.geometry.GeomType": [[335, 4, 1, "", "CARTESIAN"], [335, 4, 1, "", "HEX"], [335, 4, 1, "", "RZ"], [335, 4, 1, "", "RZT"], [335, 3, 1, "", "fromAny"], [335, 3, 1, "", "fromStr"], [335, 5, 1, "", "label"]], "armi.reactor.geometry.SymmetryType": [[335, 4, 1, "", "VALID_SYMMETRY"], [335, 3, 1, "", "checkValidSymmetry"], [335, 3, 1, "", "createValidSymmetryStrings"], [335, 3, 1, "", "fromAny"], [335, 3, 1, "", "fromStr"], [335, 3, 1, "", "symmetryFactor"]], "armi.reactor.grids": [[337, 0, 0, "-", "axial"], [338, 0, 0, "-", "cartesian"], [339, 0, 0, "-", "constants"], [340, 0, 0, "-", "grid"], [341, 0, 0, "-", "hexagonal"], [342, 0, 0, "-", "locations"], [336, 1, 1, "", "locatorLabelToIndices"], [343, 0, 0, "-", "structuredGrid"], [344, 0, 0, "-", "thetarz"]], "armi.reactor.grids.axial": [[337, 2, 1, "", "AxialGrid"]], "armi.reactor.grids.axial.AxialGrid": [[337, 4, 1, "", "armiObject"], [337, 3, 1, "", "fromNCells"], [337, 3, 1, "", "getIndicesFromRingAndPos"], [337, 3, 1, "", "getMinimumRings"], [337, 3, 1, "", "getPositionsInRing"], [337, 3, 1, "", "getSymmetricEquivalents"], [337, 3, 1, "", "locatorInDomain"], [337, 3, 1, "", "overlapsWhichSymmetryLine"], [337, 5, 1, "", "pitch"]], "armi.reactor.grids.cartesian": [[338, 2, 1, "", "CartesianGrid"]], "armi.reactor.grids.cartesian.CartesianGrid": [[338, 4, 1, "", "armiObject"], [338, 3, 1, "", "changePitch"], [338, 3, 1, "", "fromRectangle"], [338, 3, 1, "", "getIndicesFromRingAndPos"], [338, 3, 1, "", "getMinimumRings"], [338, 3, 1, "", "getPositionsInRing"], [338, 3, 1, "", "getRingPos"], [338, 3, 1, "", "getSymmetricEquivalents"], [338, 3, 1, "", "locatorInDomain"], [338, 3, 1, "", "overlapsWhichSymmetryLine"], [338, 5, 1, "", "pitch"]], "armi.reactor.grids.grid": [[340, 2, 1, "", "Grid"]], "armi.reactor.grids.grid.Grid": [[340, 4, 1, "", "armiObject"], [340, 3, 1, "", "backUp"], [340, 5, 1, "", "geomType"], [340, 3, 1, "", "getCellBase"], [340, 3, 1, "", "getCellTop"], [340, 3, 1, "", "getCoordinates"], [340, 3, 1, "", "getLabel"], [340, 3, 1, "", "getSymmetricEquivalents"], [340, 5, 1, "", "isAxialOnly"], [340, 3, 1, "", "items"], [340, 3, 1, "", "locatorInDomain"], [340, 3, 1, "", "overlapsWhichSymmetryLine"], [340, 3, 1, "", "reduce"], [340, 3, 1, "", "restoreBackup"], [340, 5, 1, "", "symmetry"]], "armi.reactor.grids.hexagonal": [[341, 2, 1, "", "HexGrid"]], "armi.reactor.grids.hexagonal.HexGrid": [[341, 4, 1, "", "armiObject"], [341, 3, 1, "", "changePitch"], [341, 5, 1, "", "cornersUp"], [341, 3, 1, "", "fromPitch"], [341, 3, 1, "", "generateSortedHexLocationList"], [341, 3, 1, "", "getIndicesFromRingAndPos"], [341, 3, 1, "", "getLabel"], [341, 3, 1, "", "getMinimumRings"], [341, 3, 1, "", "getNeighboringCellIndices"], [341, 3, 1, "", "getPositionsInRing"], [341, 3, 1, "", "getRingPos"], [341, 3, 1, "", "getSymmetricEquivalents"], [341, 3, 1, "", "indicesToRingPos"], [341, 3, 1, "", "isInFirstThird"], [341, 3, 1, "", "locatorInDomain"], [341, 3, 1, "", "overlapsWhichSymmetryLine"], [341, 5, 1, "", "pitch"], [341, 3, 1, "", "rotateIndex"], [341, 3, 1, "", "triangleCoords"]], "armi.reactor.grids.locations": [[342, 2, 1, "", "CoordinateLocation"], [342, 2, 1, "", "IndexLocation"], [342, 2, 1, "", "LocationBase"], [342, 2, 1, "", "MultiIndexLocation"], [342, 1, 1, "", "addingIsValid"]], "armi.reactor.grids.locations.CoordinateLocation": [[342, 3, 1, "", "getCompleteIndices"], [342, 3, 1, "", "getGlobalCellBase"], [342, 3, 1, "", "getGlobalCellTop"], [342, 3, 1, "", "getLocalCoordinates"]], "armi.reactor.grids.locations.IndexLocation": [[342, 3, 1, "", "detachedCopy"], [342, 3, 1, "", "distanceTo"], [342, 3, 1, "", "getCompleteIndices"], [342, 3, 1, "", "getGlobalCellBase"], [342, 3, 1, "", "getGlobalCellTop"], [342, 3, 1, "", "getGlobalCoordinates"], [342, 3, 1, "", "getLocalCoordinates"], [342, 3, 1, "", "getRingPos"], [342, 3, 1, "", "getSymmetricEquivalents"], [342, 5, 1, "", "indices"], [342, 5, 1, "", "parentLocation"]], "armi.reactor.grids.locations.LocationBase": [[342, 3, 1, "", "associate"], [342, 5, 1, "", "grid"], [342, 5, 1, "", "i"], [342, 5, 1, "", "indices"], [342, 5, 1, "", "j"], [342, 5, 1, "", "k"]], "armi.reactor.grids.locations.MultiIndexLocation": [[342, 3, 1, "", "append"], [342, 3, 1, "", "associate"], [342, 3, 1, "", "detachedCopy"], [342, 3, 1, "", "extend"], [342, 3, 1, "", "getCompleteIndices"], [342, 5, 1, "", "indices"], [342, 3, 1, "", "pop"]], "armi.reactor.grids.structuredGrid": [[343, 2, 1, "", "GridParameters"], [343, 2, 1, "", "StructuredGrid"]], "armi.reactor.grids.structuredGrid.GridParameters": [[343, 4, 1, "", "bounds"], [343, 4, 1, "", "geomType"], [343, 4, 1, "", "offset"], [343, 4, 1, "", "symmetry"], [343, 4, 1, "", "unitStepLimits"], [343, 4, 1, "", "unitSteps"]], "armi.reactor.grids.structuredGrid.StructuredGrid": [[343, 4, 1, "", "armiObject"], [343, 3, 1, "", "backUp"], [343, 3, 1, "", "getAboveAndBelowCellIndices"], [343, 3, 1, "", "getAllIndices"], [343, 3, 1, "", "getBounds"], [343, 3, 1, "", "getCellBase"], [343, 3, 1, "", "getCellTop"], [343, 3, 1, "", "getCoordinates"], [343, 3, 1, "", "getIndexBounds"], [343, 3, 1, "", "getIndicesFromRingAndPos"], [343, 3, 1, "", "getLocatorFromRingAndPos"], [343, 3, 1, "", "getMinimumRings"], [343, 3, 1, "", "getNeighboringCellIndices"], [343, 3, 1, "", "getPositionsInRing"], [343, 3, 1, "", "getRingPos"], [343, 5, 1, "", "isAxialOnly"], [343, 3, 1, "", "items"], [343, 5, 1, "", "offset"], [343, 5, 1, "", "pitch"], [343, 3, 1, "", "reduce"], [343, 3, 1, "", "restoreBackup"]], "armi.reactor.grids.thetarz": [[344, 2, 1, "", "ThetaRZGrid"]], "armi.reactor.grids.thetarz.ThetaRZGrid": [[344, 4, 1, "", "armiObject"], [344, 3, 1, "", "fromGeom"], [344, 3, 1, "", "getCoordinates"], [344, 3, 1, "", "getIndicesFromRingAndPos"], [344, 3, 1, "", "getMinimumRings"], [344, 3, 1, "", "getPositionsInRing"], [344, 3, 1, "", "getRingPos"], [344, 3, 1, "", "getSymmetricEquivalents"], [344, 3, 1, "", "indicesOfBounds"], [344, 3, 1, "", "locatorInDomain"], [344, 3, 1, "", "overlapsWhichSymmetryLine"], [344, 3, 1, "", "pitch"]], "armi.reactor.parameters": [[346, 0, 0, "-", "exceptions"], [347, 0, 0, "-", "parameterCollections"], [348, 0, 0, "-", "parameterDefinitions"], [345, 1, 1, "", "reset"], [349, 0, 0, "-", "resolveCollections"]], "armi.reactor.parameters.exceptions": [[346, 7, 1, "", "ParameterDefinitionError"], [346, 7, 1, "", "ParameterError"], [346, 7, 1, "", "UnknownParameterError"]], "armi.reactor.parameters.parameterCollections": [[347, 6, 1, "", "GLOBAL_SERIAL_NUM"], [347, 2, 1, "", "ParameterCollection"], [347, 1, 1, "", "applyAllParameters"], [347, 1, 1, "", "collectPluginParameters"]], "armi.reactor.parameters.parameterCollections.ParameterCollection": [[347, 3, 1, "", "applyParameters"], [347, 3, 1, "", "backUp"], [347, 3, 1, "", "get"], [347, 3, 1, "", "getSyncData"], [347, 3, 1, "", "items"], [347, 3, 1, "", "keys"], [347, 4, 1, "", "pDefs"], [347, 5, 1, "", "paramDefs"], [347, 3, 1, "", "restoreBackup"], [347, 4, 1, "", "serialNum"], [347, 3, 1, "", "update"], [347, 3, 1, "", "values"], [347, 3, 1, "", "where"]], "armi.reactor.parameters.parameterDefinitions": [[348, 2, 1, "", "Category"], [348, 2, 1, "", "NoDefault"], [348, 2, 1, "", "ParamLocation"], [348, 2, 1, "", "Parameter"], [348, 2, 1, "", "ParameterBuilder"], [348, 2, 1, "", "ParameterDefinitionCollection"], [348, 2, 1, "", "Serializer"], [348, 1, 1, "", "isNumpyArray"], [348, 1, 1, "", "isNumpyF32Array"]], "armi.reactor.parameters.parameterDefinitions.Category": [[348, 4, 1, "", "assignInBlueprints"], [348, 4, 1, "", "cumulative"], [348, 4, 1, "", "cumulativeOverCycle"], [348, 4, 1, "", "depletion"], [348, 4, 1, "", "detailedAxialExpansion"], [348, 4, 1, "", "fluxQuantities"], [348, 4, 1, "", "gamma"], [348, 4, 1, "", "multiGroupQuantities"], [348, 4, 1, "", "neutronics"], [348, 4, 1, "", "pinQuantities"], [348, 4, 1, "", "reactivityCoefficients"], [348, 4, 1, "", "retainOnReplacement"], [348, 4, 1, "", "thermalHydraulics"]], "armi.reactor.parameters.parameterDefinitions.ParamLocation": [[348, 4, 1, "", "AVERAGE"], [348, 4, 1, "", "BOTTOM"], [348, 4, 1, "", "CENTROID"], [348, 4, 1, "", "CHILDREN"], [348, 4, 1, "", "CORNERS"], [348, 4, 1, "", "EDGES"], [348, 4, 1, "", "MAX"], [348, 4, 1, "", "TOP"], [348, 4, 1, "", "VOLUME_INTEGRATED"]], "armi.reactor.parameters.parameterDefinitions.Parameter": [[348, 4, 1, "", "assigned"], [348, 3, 1, "", "atLocation"], [348, 3, 1, "", "backUp"], [348, 4, 1, "", "categories"], [348, 4, 1, "", "collectionType"], [348, 4, 1, "", "default"], [348, 4, 1, "", "description"], [348, 4, 1, "", "fieldName"], [348, 3, 1, "", "hasCategory"], [348, 4, 1, "", "location"], [348, 4, 1, "", "name"], [348, 3, 1, "", "restoreBackup"], [348, 4, 1, "", "saveToDB"], [348, 4, 1, "", "serializer"], [348, 3, 1, "", "setter"], [348, 4, 1, "", "units"]], "armi.reactor.parameters.parameterDefinitions.ParameterBuilder": [[348, 3, 1, "", "associateParameterDefinitionCollection"], [348, 3, 1, "", "defParam"]], "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection": [[348, 3, 1, "", "add"], [348, 3, 1, "", "atLocation"], [348, 3, 1, "", "byNameAndCollectionType"], [348, 3, 1, "", "byNameAndType"], [348, 5, 1, "", "categories"], [348, 3, 1, "", "createBuilder"], [348, 3, 1, "", "extend"], [348, 3, 1, "", "forType"], [348, 3, 1, "", "inCategory"], [348, 3, 1, "", "items"], [348, 3, 1, "", "lock"], [348, 5, 1, "", "locked"], [348, 5, 1, "", "names"], [348, 3, 1, "", "resetAssignmentFlag"], [348, 3, 1, "", "setAssignmentFlag"], [348, 3, 1, "", "since"], [348, 3, 1, "", "toWriteToDB"], [348, 3, 1, "", "unchanged_since"]], "armi.reactor.parameters.parameterDefinitions.Serializer": [[348, 3, 1, "", "pack"], [348, 3, 1, "", "unpack"], [348, 4, 1, "", "version"]], "armi.reactor.parameters.resolveCollections": [[349, 2, 1, "", "ResolveParametersMeta"]], "armi.reactor.reactorParameters": [[350, 1, 1, "", "defineCoreParameters"], [350, 1, 1, "", "defineReactorParameters"], [350, 1, 1, "", "makeParametersReadOnly"]], "armi.reactor.reactors": [[351, 2, 1, "", "Reactor"], [351, 1, 1, "", "factory"], [351, 1, 1, "", "loadFromCs"]], "armi.reactor.reactors.Reactor": [[351, 3, 1, "", "add"], [351, 3, 1, "", "incrementAssemNum"], [351, 3, 1, "", "normalizeNames"], [351, 4, 1, "", "pDefs"], [351, 4, 1, "", "paramCollectionType"]], "armi.reactor.spentFuelPool": [[352, 2, 1, "", "SpentFuelPool"]], "armi.reactor.spentFuelPool.SpentFuelPool": [[352, 3, 1, "", "add"], [352, 3, 1, "", "getAssembly"], [352, 3, 1, "", "normalizeNames"], [352, 4, 1, "", "paramCollectionType"]], "armi.reactor.systemLayoutInput": [[353, 2, 1, "", "SystemLayoutInput"]], "armi.reactor.systemLayoutInput.SystemLayoutInput": [[353, 4, 1, "", "ROOT_TAG"], [353, 3, 1, "", "fromReactor"], [353, 3, 1, "", "growToFullCore"], [353, 3, 1, "", "loadFromCs"], [353, 3, 1, "", "modifyEqPaths"], [353, 3, 1, "", "readGeomFromFile"], [353, 3, 1, "", "readGeomFromStream"], [353, 3, 1, "", "toGridBlueprints"], [353, 3, 1, "", "writeGeom"]], "armi.reactor.tests": [[355, 0, 0, "-", "test_assemblies"], [356, 0, 0, "-", "test_blocks"], [357, 0, 0, "-", "test_components"], [358, 0, 0, "-", "test_composites"], [359, 0, 0, "-", "test_excoreStructures"], [360, 0, 0, "-", "test_flags"], [361, 0, 0, "-", "test_geometry"], [362, 0, 0, "-", "test_hexBlockRotate"], [363, 0, 0, "-", "test_parameters"], [364, 0, 0, "-", "test_reactors"], [365, 0, 0, "-", "test_rz_reactors"], [366, 0, 0, "-", "test_zones"]], "armi.reactor.tests.test_assemblies": [[355, 2, 1, "", "AnnularFuelTestCase"], [355, 2, 1, "", "AssemblyInReactor_TestCase"], [355, 2, 1, "", "Assembly_TestCase"], [355, 2, 1, "", "MaterialInAssembly_TestCase"], [355, 1, 1, "", "buildTestAssemblies"], [355, 1, 1, "", "makeTestAssembly"]], "armi.reactor.tests.test_assemblies.AnnularFuelTestCase": [[355, 3, 1, "", "test_areaCheck"]], "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase": [[355, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"], [355, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "armi.reactor.tests.test_assemblies.Assembly_TestCase": [[355, 3, 1, "", "test_add"], [355, 3, 1, "", "test_adjustResolution"], [355, 3, 1, "", "test_append"], [355, 3, 1, "", "test_assem_block_types"], [355, 3, 1, "", "test_assem_hex_type"], [355, 3, 1, "", "test_averagePlenumTemperature"], [355, 3, 1, "", "test_calcAvgParam"], [355, 3, 1, "", "test_calcTotalParam"], [355, 3, 1, "", "test_calculateZCoords"], [355, 3, 1, "", "test_carestianCoordinates"], [355, 3, 1, "", "test_countBlocksOfType"], [355, 3, 1, "", "test_duplicate"], [355, 3, 1, "", "test_extend"], [355, 3, 1, "", "test_getAge"], [355, 3, 1, "", "test_getArea"], [355, 3, 1, "", "test_getAxialMesh"], [355, 3, 1, "", "test_getBIndexFromZIndex"], [355, 3, 1, "", "test_getBlockData"], [355, 3, 1, "", "test_getBlocks"], [355, 3, 1, "", "test_getBlocksAndZ"], [355, 3, 1, "", "test_getBlocksBetweenElevations"], [355, 3, 1, "", "test_getDim"], [355, 3, 1, "", "test_getDominantMaterial"], [355, 3, 1, "", "test_getElevationBoundariesByBlockType"], [355, 3, 1, "", "test_getElevationsMatchingParamValue"], [355, 3, 1, "", "test_getFirstBlock"], [355, 3, 1, "", "test_getFirstBlockByType"], [355, 3, 1, "", "test_getFissileMass"], [355, 3, 1, "", "test_getHeight"], [355, 3, 1, "", "test_getLocation"], [355, 3, 1, "", "test_getMass"], [355, 3, 1, "", "test_getMaxParam"], [355, 3, 1, "", "test_getName"], [355, 3, 1, "", "test_getNum"], [355, 3, 1, "", "test_getParamValuesAtZ"], [355, 3, 1, "", "test_getReactiveHeight"], [355, 3, 1, "", "test_getTotalHeight"], [355, 3, 1, "", "test_getVolume"], [355, 3, 1, "", "test_hasContinuousCoolantChannel"], [355, 3, 1, "", "test_hasFlags"], [355, 3, 1, "", "test_isOnWhichSymmetryLine"], [355, 3, 1, "", "test_iter"], [355, 3, 1, "", "test_iteration"], [355, 3, 1, "", "test_len"], [355, 3, 1, "", "test_makeAxialSnapList"], [355, 3, 1, "", "test_moveTo"], [355, 3, 1, "", "test_notesParameter"], [355, 3, 1, "", "test_pinPlenumVolume"], [355, 3, 1, "", "test_reattach"], [355, 3, 1, "", "test_reestablishBlockOrder"], [355, 3, 1, "", "test_renameBlocksAccordingToAssemblyNum"], [355, 3, 1, "", "test_rotate"], [355, 3, 1, "", "test_scaleParamsWhenMoved"], [355, 3, 1, "", "test_snapAxialMeshToReference"], [355, 3, 1, "", "test_updateFromAssembly"]], "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase": [[355, 3, 1, "", "test_UThZrMaterial"], [355, 3, 1, "", "test_sortNoLocator"]], "armi.reactor.tests.test_blocks": [[356, 2, 1, "", "BlockEnergyDepositionConstants"], [356, 2, 1, "", "BlockInputHeightsTests"], [356, 2, 1, "", "Block_TestCase"], [356, 2, 1, "", "CartesianBlock_TestCase"], [356, 2, 1, "", "HexBlock_TestCase"], [356, 2, 1, "", "MassConservationTests"], [356, 2, 1, "", "TestDetailedNDensUpdate"], [356, 2, 1, "", "TestHexBlockOrientation"], [356, 2, 1, "", "TestNegativeVolume"], [356, 2, 1, "", "ThRZBlock_TestCase"], [356, 1, 1, "", "applyDummyData"], [356, 1, 1, "", "buildSimpleFuelBlock"], [356, 1, 1, "", "getComponentData"], [356, 1, 1, "", "loadTestBlock"]], "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants": [[356, 3, 1, "", "test_getCaptureEnergyGenerationConstants"], [356, 3, 1, "", "test_getFissionEnergyDepositionConstants"], [356, 3, 1, "", "test_getGammaEnergyDepositionConstants"], [356, 3, 1, "", "test_getNeutronEnergyDepositionConstants"], [356, 3, 1, "", "test_getTotalEnergyGenerationConstants"]], "armi.reactor.tests.test_blocks.BlockInputHeightsTests": [[356, 3, 1, "", "test_foundReactor"], [356, 3, 1, "", "test_noBlueprints"]], "armi.reactor.tests.test_blocks.Block_TestCase": [[356, 3, 1, "", "test_100_getPinPitch"], [356, 3, 1, "", "test_101_getPitch"], [356, 3, 1, "", "test_102_setPitch"], [356, 3, 1, "", "test_106_getAreaFractions"], [356, 3, 1, "", "test_27b_setEnvGroup"], [356, 3, 1, "", "test_add"], [356, 3, 1, "", "test_adjustDensity"], [356, 3, 1, "", "test_adjustUEnrich"], [356, 3, 1, "", "test_clearDensity"], [356, 3, 1, "", "test_completeInitialLoading"], [356, 3, 1, "", "test_consistentAreaWithOverlappingComponents"], [356, 3, 1, "", "test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"], [356, 3, 1, "", "test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"], [356, 3, 1, "", "test_duplicate"], [356, 3, 1, "", "test_expandAllElementalsToIsotopics"], [356, 3, 1, "", "test_expandElementalToIsotopics"], [356, 3, 1, "", "test_getComponent"], [356, 3, 1, "", "test_getComponentAreaFrac"], [356, 3, 1, "", "test_getComponentByName"], [356, 3, 1, "", "test_getComponentNames"], [356, 3, 1, "", "test_getComponents"], [356, 3, 1, "", "test_getComponentsInLinkedOrder"], [356, 3, 1, "", "test_getComponentsOfMaterial"], [356, 3, 1, "", "test_getComponentsOfShape"], [356, 3, 1, "", "test_getDimensions"], [356, 3, 1, "", "test_getFissileMassEnrich"], [356, 3, 1, "", "test_getFlowArea"], [356, 3, 1, "", "test_getFlowAreaPerPin"], [356, 3, 1, "", "test_getHMDens"], [356, 3, 1, "", "test_getHydraulicDiameter"], [356, 3, 1, "", "test_getMass"], [356, 3, 1, "", "test_getMasses"], [356, 3, 1, "", "test_getMfp"], [356, 3, 1, "", "test_getMicroSuffix"], [356, 3, 1, "", "test_getNumComponents"], [356, 3, 1, "", "test_getNumPins"], [356, 3, 1, "", "test_getNumberDensity"], [356, 3, 1, "", "test_getNumberOfAtoms"], [356, 3, 1, "", "test_getPlenumPin"], [356, 3, 1, "", "test_getPu"], [356, 3, 1, "", "test_getReactionRates"], [356, 3, 1, "", "test_getSmearDensity"], [356, 3, 1, "", "test_getSmearDensityEdgeCases"], [356, 3, 1, "", "test_getSmearDensityMultipleLiner"], [356, 3, 1, "", "test_getSortedComponentsInsideOfComponentClad"], [356, 3, 1, "", "test_getSortedComponentsInsideOfComponentDuct"], [356, 3, 1, "", "test_getTotalMass"], [356, 3, 1, "", "test_getTotalNDens"], [356, 3, 1, "", "test_getType"], [356, 3, 1, "", "test_getUraniumMassEnrich"], [356, 3, 1, "", "test_getUraniumNumEnrich"], [356, 3, 1, "", "test_getVolumeFractionWithoutParent"], [356, 3, 1, "", "test_getVolumeFractionsWithZeroHeight"], [356, 3, 1, "", "test_getWettedPerimeter"], [356, 3, 1, "", "test_getWettedPerimeterCircularInnerDuct"], [356, 3, 1, "", "test_getWettedPerimeterHexInnerDuct"], [356, 3, 1, "", "test_getXsType"], [356, 3, 1, "", "test_hasComponents"], [356, 3, 1, "", "test_hasFlags"], [356, 3, 1, "", "test_hasPinPitch"], [356, 3, 1, "", "test_homogenizedMixture"], [356, 3, 1, "", "test_mergeWithBlock"], [356, 3, 1, "", "test_pinMgFluxes"], [356, 3, 1, "", "test_removeMass"], [356, 3, 1, "", "test_replaceBlockWithBlock"], [356, 3, 1, "", "test_setBuLimitInfo"], [356, 3, 1, "", "test_setImportantParams"], [356, 3, 1, "", "test_setLinPowByPin"], [356, 3, 1, "", "test_setLocation"], [356, 3, 1, "", "test_setMass"], [356, 3, 1, "", "test_setNumberDensities"], [356, 3, 1, "", "test_setNumberDensity"], [356, 3, 1, "", "test_setPitch"], [356, 3, 1, "", "test_setType"], [356, 3, 1, "", "test_setZeroHeight"], [356, 3, 1, "", "test_timeNodeParams"]], "armi.reactor.tests.test_blocks.CartesianBlock_TestCase": [[356, 4, 1, "", "PITCH"], [356, 3, 1, "", "test_getCartesianGrid"], [356, 3, 1, "", "test_getHydraulicDiameter"], [356, 3, 1, "", "test_getPitchHomogeneousBlock"], [356, 3, 1, "", "test_getPitchSquare"], [356, 3, 1, "", "test_getWettedPerimeter"]], "armi.reactor.tests.test_blocks.HexBlock_TestCase": [[356, 3, 1, "", "test_block_dims"], [356, 3, 1, "", "test_component_type"], [356, 3, 1, "", "test_coords"], [356, 3, 1, "", "test_getArea"], [356, 3, 1, "", "test_getDuctPitch"], [356, 3, 1, "", "test_getNumPins"], [356, 3, 1, "", "test_getPinCenterFlatToFlat"], [356, 3, 1, "", "test_getPinCoords"], [356, 3, 1, "", "test_getPinCoordsAndLocsAgree"], [356, 3, 1, "", "test_getPinLocations"], [356, 3, 1, "", "test_getPitchHomogeneousBlock"], [356, 3, 1, "", "test_gridCreation"], [356, 3, 1, "", "test_gridNotCreatedMultipleMultiplicities"], [356, 3, 1, "", "test_gridNumPinsAndLocations"], [356, 3, 1, "", "test_retainState"], [356, 3, 1, "", "test_symmetryFactor"]], "armi.reactor.tests.test_blocks.MassConservationTests": [[356, 3, 1, "", "test_coldMass"], [356, 3, 1, "", "test_dimensionDuctHeatup"], [356, 3, 1, "", "test_heightExpansionDifferences"], [356, 3, 1, "", "test_massCladHeatup"], [356, 3, 1, "", "test_massConsistency"], [356, 3, 1, "", "test_massCoolHeatup"], [356, 3, 1, "", "test_massDuctHeatup"], [356, 3, 1, "", "test_massFuelHeatup"]], "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate": [[356, 3, 1, "", "test_updateDetailedNdens"]], "armi.reactor.tests.test_blocks.TestHexBlockOrientation": [[356, 3, 1, "", "getLocalCoordinatesBlockBounds"], [356, 3, 1, "", "test_validateReactorCornersUp"], [356, 3, 1, "", "test_validateReactorFlatsUp"]], "armi.reactor.tests.test_blocks.TestNegativeVolume": [[356, 3, 1, "", "test_negativeVolume"]], "armi.reactor.tests.test_blocks.ThRZBlock_TestCase": [[356, 3, 1, "", "test_axial"], [356, 3, 1, "", "test_getHydraulicDiameter"], [356, 3, 1, "", "test_getThetaRZGrid"], [356, 3, 1, "", "test_getWettedPerimeter"], [356, 3, 1, "", "test_radii"], [356, 3, 1, "", "test_theta"], [356, 3, 1, "", "test_verifyBlockDims"]], "armi.reactor.tests.test_components": [[357, 2, 1, "", "TestCircle"], [357, 2, 1, "", "TestComponent"], [357, 2, 1, "", "TestComponentExpansion"], [357, 2, 1, "", "TestComponentFactory"], [357, 2, 1, "", "TestCube"], [357, 2, 1, "", "TestDerivedShape"], [357, 2, 1, "", "TestDerivedShapeGetArea"], [357, 2, 1, "", "TestDifferentialRadialSegment"], [357, 2, 1, "", "TestGeneralComponents"], [357, 2, 1, "", "TestHelix"], [357, 2, 1, "", "TestHexHoledCircle"], [357, 2, 1, "", "TestHexagon"], [357, 2, 1, "", "TestHoledHexagon"], [357, 2, 1, "", "TestHoledRectangle"], [357, 2, 1, "", "TestHoledSquare"], [357, 2, 1, "", "TestMaterialAdjustments"], [357, 2, 1, "", "TestNullComponent"], [357, 2, 1, "", "TestPinQuantities"], [357, 2, 1, "", "TestRadialSegment"], [357, 2, 1, "", "TestRectangle"], [357, 2, 1, "", "TestShapedComponent"], [357, 2, 1, "", "TestSolidRectangle"], [357, 2, 1, "", "TestSphere"], [357, 2, 1, "", "TestSquare"], [357, 2, 1, "", "TestTriangle"], [357, 2, 1, "", "TestUnshapedComponent"]], "armi.reactor.tests.test_components.TestCircle": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_badComponentName"], [357, 3, 1, "", "test_changeNumberDensities"], [357, 3, 1, "", "test_componentInteractionsLinkingByDimensions"], [357, 3, 1, "", "test_componentInteractionsLinkingBySubtraction"], [357, 3, 1, "", "test_dimensionThermallyExpands"], [357, 3, 1, "", "test_fuelMass"], [357, 3, 1, "", "test_getArea"], [357, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [357, 3, 1, "", "test_getCircleInnerDiameter"], [357, 3, 1, "", "test_getDimension"], [357, 3, 1, "", "test_getNumberDensities"], [357, 3, 1, "", "test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"], [357, 3, 1, "", "test_theoreticalDensitySetter"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestComponent": [[357, 4, 1, "", "componentCls"], [357, 3, 1, "", "test_initializeComponentMaterial"], [357, 3, 1, "", "test_setNumberDensities"], [357, 3, 1, "", "test_setNumberDensity"], [357, 3, 1, "", "test_solid_material"]], "armi.reactor.tests.test_components.TestComponentExpansion": [[357, 4, 1, "", "coldOuterDiameter"], [357, 3, 1, "", "componentMassIndependentOfInputTemp"], [357, 3, 1, "", "expansionConservationColdHeightDefined"], [357, 3, 1, "", "expansionConservationHotHeightDefined"], [357, 3, 1, "", "runExpansionTests"], [357, 4, 1, "", "tCold"], [357, 4, 1, "", "tHot"], [357, 4, 1, "", "tWarm"], [357, 3, 1, "", "test_B4CExpansion"], [357, 3, 1, "", "test_HT9Expansion"], [357, 3, 1, "", "test_UZrExpansion"]], "armi.reactor.tests.test_components.TestComponentFactory": [[357, 3, 1, "", "getCircleFuelDict"], [357, 3, 1, "", "getCircleVoidDict"], [357, 3, 1, "", "test_componentInitializationAndDuplication"], [357, 3, 1, "", "test_factory"], [357, 3, 1, "", "test_factoryBadShapeName"], [357, 3, 1, "", "test_invalidCoolantComponentAssignment"]], "armi.reactor.tests.test_components.TestCube": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_getVolume"], [357, 3, 1, "", "test_negativeVolume"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestDerivedShape": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 4, 1, "", "componentMaterial"], [357, 3, 1, "", "test_computeVolume"], [357, 3, 1, "", "test_getBoundingCircleOuterDiameter"]], "armi.reactor.tests.test_components.TestDerivedShapeGetArea": [[357, 3, 1, "", "test_getAreaColdTrue"]], "armi.reactor.tests.test_components.TestDifferentialRadialSegment": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [357, 3, 1, "", "test_getVolume"], [357, 3, 1, "", "test_thermallyExpands"], [357, 3, 1, "", "test_updateDims"]], "armi.reactor.tests.test_components.TestGeneralComponents": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 4, 1, "", "componentMaterial"]], "armi.reactor.tests.test_components.TestHelix": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_dimensionThermallyExpands"], [357, 3, 1, "", "test_getArea"], [357, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [357, 3, 1, "", "test_getCircleInnerDiameter"], [357, 3, 1, "", "test_thermallyExpands"], [357, 3, 1, "", "test_validParameters"]], "armi.reactor.tests.test_components.TestHexHoledCircle": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_dimensionThermallyExpands"], [357, 3, 1, "", "test_getArea"], [357, 3, 1, "", "test_getCircleInnerDiameter"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHexagon": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_dimensionThermallyExpands"], [357, 3, 1, "", "test_getArea"], [357, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [357, 3, 1, "", "test_getCircleInnerDiameter"], [357, 3, 1, "", "test_getPerimeter"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledHexagon": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_dimensionThermallyExpands"], [357, 3, 1, "", "test_getArea"], [357, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [357, 3, 1, "", "test_getCircleInnerDiameter"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledRectangle": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 4, 1, "", "dimsToTestExpansion"], [357, 3, 1, "", "setClassDims"], [357, 3, 1, "", "test_dimensionThermallyExpands"], [357, 3, 1, "", "test_getArea"], [357, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [357, 3, 1, "", "test_getCircleInnerDiameter"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledSquare": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 4, 1, "", "dimsToTestExpansion"], [357, 3, 1, "", "setClassDims"], [357, 3, 1, "", "test_getCircleInnerDiameter"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestMaterialAdjustments": [[357, 3, 1, "", "test_adjustMassEnrichment"], [357, 3, 1, "", "test_adjustMassFrac_U"], [357, 3, 1, "", "test_adjustMassFrac_U235"], [357, 3, 1, "", "test_adjustMassFrac_clear_ZR"], [357, 3, 1, "", "test_adjustMassFrac_invalid"], [357, 3, 1, "", "test_adjustMassFrac_leave_same"], [357, 3, 1, "", "test_adjustMassFrac_set_ZR"], [357, 3, 1, "", "test_finalizeLoadDBAdjustsTD"], [357, 3, 1, "", "test_getEnrichment"], [357, 3, 1, "", "test_setMassFrac"], [357, 3, 1, "", "test_setMassFracOnComponentMaterial"]], "armi.reactor.tests.test_components.TestNullComponent": [[357, 4, 1, "", "componentCls"], [357, 3, 1, "", "test_cmp"], [357, 3, 1, "", "test_getDimension"], [357, 3, 1, "", "test_nonzero"]], "armi.reactor.tests.test_components.TestPinQuantities": [[357, 3, 1, "", "test_getPinMgFluxes"]], "armi.reactor.tests.test_components.TestRadialSegment": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [357, 3, 1, "", "test_getVolume"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestRectangle": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_dimensionThermallyExpands"], [357, 3, 1, "", "test_getArea"], [357, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [357, 3, 1, "", "test_getCircleInnerDiameter"], [357, 3, 1, "", "test_negativeArea"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestShapedComponent": [[357, 3, 1, "", "test_density"], [357, 3, 1, "", "test_densityConsistent"], [357, 3, 1, "", "test_preserveMassDuringThermalExpansion"], [357, 3, 1, "", "test_volumeAfterClearCache"]], "armi.reactor.tests.test_components.TestSolidRectangle": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_dimensionThermallyExpands"], [357, 3, 1, "", "test_getArea"], [357, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSphere": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_getVolume"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSquare": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_dimensionThermallyExpands"], [357, 3, 1, "", "test_getArea"], [357, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [357, 3, 1, "", "test_getCircleInnerDiameter"], [357, 3, 1, "", "test_negativeArea"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestTriangle": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 3, 1, "", "test_dimensionThermallyExpands"], [357, 3, 1, "", "test_getArea"], [357, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestUnshapedComponent": [[357, 4, 1, "", "componentCls"], [357, 4, 1, "", "componentDims"], [357, 4, 1, "", "componentMaterial"], [357, 3, 1, "", "test_component_less_than"], [357, 3, 1, "", "test_fromComponent"], [357, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [357, 3, 1, "", "test_getComponentArea"]], "armi.reactor.tests.test_composites": [[358, 2, 1, "", "DummyComposite"], [358, 2, 1, "", "DummyLeaf"], [358, 2, 1, "", "MockBP"], [358, 2, 1, "", "TestCompositePattern"], [358, 2, 1, "", "TestCompositeTree"], [358, 2, 1, "", "TestFlagSerializer"], [358, 2, 1, "", "TestGetReactionRateDict"], [358, 2, 1, "", "TestMiscMethods"], [358, 1, 1, "", "getDummyParamDefs"]], "armi.reactor.tests.test_composites.DummyComposite": [[358, 4, 1, "", "pDefs"], [358, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.DummyLeaf": [[358, 3, 1, "", "getBoundingCircleOuterDiameter"], [358, 3, 1, "", "getChildren"], [358, 3, 1, "", "getChildrenWithFlags"], [358, 3, 1, "", "iterComponents"], [358, 4, 1, "", "pDefs"], [358, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.MockBP": [[358, 4, 1, "", "activeNuclides"], [358, 4, 1, "", "allNuclidesInProblem"], [358, 4, 1, "", "customIsotopics"], [358, 4, 1, "", "elementsToExpand"], [358, 4, 1, "", "inactiveNuclides"]], "armi.reactor.tests.test_composites.TestCompositePattern": [[358, 3, 1, "", "test_areChildernOfType"], [358, 3, 1, "", "test_composite"], [358, 3, 1, "", "test_containsAtLeastOneChildOfType"], [358, 3, 1, "", "test_containsOnlyChildrenOfType"], [358, 3, 1, "", "test_expandLFPs"], [358, 3, 1, "", "test_getBoundingCirlceOuterDiameter"], [358, 3, 1, "", "test_getChildren"], [358, 3, 1, "", "test_getIntegratedMgFlux"], [358, 3, 1, "", "test_getLumpedFissionProductsIfNecessaryNullCase"], [358, 3, 1, "", "test_getName"], [358, 3, 1, "", "test_getParamNames"], [358, 3, 1, "", "test_getReactionRates"], [358, 3, 1, "", "test_hasFlags"], [358, 3, 1, "", "test_hasFlagsNoTypeSpecified"], [358, 3, 1, "", "test_hasFlagsSubstring"], [358, 3, 1, "", "test_iterComponents"], [358, 3, 1, "", "test_nameContains"], [358, 3, 1, "", "test_nucSpec"], [358, 3, 1, "", "test_requiresLumpedFissionProducts"], [358, 3, 1, "", "test_setChildrenLumpedFissionProducts"], [358, 3, 1, "", "test_sort"], [358, 3, 1, "", "test_syncParameters"], [358, 3, 1, "", "test_updateVolume"]], "armi.reactor.tests.test_composites.TestCompositeTree": [[358, 4, 1, "", "blueprintYaml"], [358, 3, 1, "", "test_constituentReport"], [358, 3, 1, "", "test_getChildrenIncludeMaterials"], [358, 3, 1, "", "test_getFPMass"], [358, 3, 1, "", "test_getFissileMass"], [358, 3, 1, "", "test_getFuelMass"], [358, 3, 1, "", "test_getHMMass"], [358, 3, 1, "", "test_getMaxParam"], [358, 3, 1, "", "test_getMinParam"], [358, 3, 1, "", "test_getNuclides"], [358, 3, 1, "", "test_ordering"], [358, 3, 1, "", "test_summing"]], "armi.reactor.tests.test_composites.TestFlagSerializer": [[358, 2, 1, "", "TestFlagsA"], [358, 2, 1, "", "TestFlagsB"], [358, 3, 1, "", "test_flagConversion"], [358, 3, 1, "", "test_flagSerialization"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA": [[358, 4, 1, "", "A"], [358, 4, 1, "", "B"], [358, 4, 1, "", "C"], [358, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB": [[358, 4, 1, "", "A"], [358, 4, 1, "", "B"], [358, 4, 1, "", "BPRIME"], [358, 4, 1, "", "C"], [358, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestGetReactionRateDict": [[358, 3, 1, "", "test_getReactionRateDict"]], "armi.reactor.tests.test_composites.TestMiscMethods": [[358, 3, 1, "", "test_containsHeavyMetal"], [358, 3, 1, "", "test_copyParamsFrom"], [358, 3, 1, "", "test_copyParamsToChildren"], [358, 3, 1, "", "test_dimensionReport"], [358, 3, 1, "", "test_getAtomicWeight"], [358, 3, 1, "", "test_getNumberDensities"], [358, 3, 1, "", "test_getNumberDensitiesWithExpandedFissionProducts"], [358, 3, 1, "", "test_setMass"]], "armi.reactor.tests.test_excoreStructures": [[359, 2, 1, "", "TestExcoreCollection"], [359, 2, 1, "", "TestExcoreStructure"], [359, 2, 1, "", "TestSpentFuelPool"]], "armi.reactor.tests.test_excoreStructures.TestExcoreCollection": [[359, 3, 1, "", "test_addLikeAttribute"], [359, 3, 1, "", "test_addLikeDict"]], "armi.reactor.tests.test_excoreStructures.TestExcoreStructure": [[359, 3, 1, "", "test_add"], [359, 3, 1, "", "test_constructor"], [359, 3, 1, "", "test_parentReactor"], [359, 3, 1, "", "test_representation"]], "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool": [[359, 3, 1, "", "test_add"], [359, 3, 1, "", "test_constructor"], [359, 3, 1, "", "test_getAssembly"], [359, 3, 1, "", "test_getNextLocation"], [359, 3, 1, "", "test_normalizeNames"], [359, 3, 1, "", "test_representation"], [359, 3, 1, "", "test_updateNumberOfColumns"]], "armi.reactor.tests.test_flags": [[360, 2, 1, "", "TestFlags"]], "armi.reactor.tests.test_flags.TestFlags": [[360, 3, 1, "", "test_convertsStringsWithNonFlags"], [360, 3, 1, "", "test_defaultIsFalse"], [360, 3, 1, "", "test_flagsDefinedWithNumbers"], [360, 3, 1, "", "test_flagsToAndFromString"], [360, 3, 1, "", "test_fromString"], [360, 3, 1, "", "test_fromStringStrict"], [360, 3, 1, "", "test_fromStringWithNumbers"], [360, 3, 1, "", "test_isPickleable"], [360, 3, 1, "", "test_lookup"], [360, 3, 1, "", "test_toStringAlphabetical"]], "armi.reactor.tests.test_geometry": [[361, 2, 1, "", "TestGeomType"], [361, 2, 1, "", "TestSymmetryType"], [361, 2, 1, "", "TestSystemLayoutInput"], [361, 2, 1, "", "TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry.TestGeomType": [[361, 3, 1, "", "test_fromStr"], [361, 3, 1, "", "test_label"], [361, 3, 1, "", "test_str"]], "armi.reactor.tests.test_geometry.TestSymmetryType": [[361, 3, 1, "", "test_SymmetryFactor"], [361, 3, 1, "", "test_baseConstructor"], [361, 3, 1, "", "test_checkValidGeomSymmetryCombo"], [361, 3, 1, "", "test_domainTypeNulls"], [361, 3, 1, "", "test_fromAny"], [361, 3, 1, "", "test_fromStr"], [361, 3, 1, "", "test_label"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInput": [[361, 3, 1, "", "test_asciimap"], [361, 3, 1, "", "test_growToFullCore"], [361, 3, 1, "", "test_readAsciimap"], [361, 3, 1, "", "test_readHexGeomXML"], [361, 3, 1, "", "test_readReactor"], [361, 3, 1, "", "test_yamlIO"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ": [[361, 3, 1, "", "test_TRZyamlIO"], [361, 3, 1, "", "test_readTRZGeomXML"]], "armi.reactor.tests.test_hexBlockRotate": [[362, 2, 1, "", "EmptyBlockRotateTest"], [362, 2, 1, "", "HexBlockRotateTests"]], "armi.reactor.tests.test_hexBlockRotate.EmptyBlockRotateTest": [[362, 3, 1, "", "test_orientation"]], "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests": [[362, 4, 1, "", "BOUNDARY_DATA"], [362, 4, 1, "", "BOUNDARY_PARAMS"], [362, 4, 1, "", "PIN_DATA"], [362, 4, 1, "", "PIN_PARAMS"], [362, 3, 1, "", "assertIndexLocationEquivalent"], [362, 3, 1, "", "test_orientationVector"], [362, 3, 1, "", "test_pinParametersUnmodified"], [362, 3, 1, "", "test_pinRotationCoordinates"], [362, 3, 1, "", "test_pinRotationLocations"], [362, 3, 1, "", "test_rotateBoundaryParameters"], [362, 3, 1, "", "test_updateChildLocations"]], "armi.reactor.tests.test_parameters": [[363, 2, 1, "", "MockComposite"], [363, 2, 1, "", "MockCompositeChild"], [363, 2, 1, "", "MockCompositeGrandParent"], [363, 2, 1, "", "MockCompositeParent"], [363, 2, 1, "", "ParamCollectionWhere"], [363, 2, 1, "", "ParameterTests"], [363, 2, 1, "", "TestMakeParametersReadOnly"]], "armi.reactor.tests.test_parameters.ParamCollectionWhere": [[363, 2, 1, "", "ScopeParamCollection"], [363, 3, 1, "", "test_complicated"], [363, 3, 1, "", "test_onCategory"], [363, 3, 1, "", "test_onLocation"]], "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection": [[363, 4, 1, "", "pDefs"], [363, 4, 1, "", "pb"]], "armi.reactor.tests.test_parameters.ParameterTests": [[363, 3, 1, "", "test_attemptingToSetParamWithoutSetterFails"], [363, 3, 1, "", "test_cannotCreateAttrbuteOnParameterCollectionSubclass"], [363, 3, 1, "", "test_cannotCreateInstanceOf_NoDefault"], [363, 3, 1, "", "test_cannotCreateInstanceOf_Undefined"], [363, 3, 1, "", "test_cannotDefineParameterWithSameName"], [363, 3, 1, "", "test_cannotDefineParameterWithSameNameForCollectionSubclass"], [363, 3, 1, "", "test_categories"], [363, 3, 1, "", "test_defaultLocation"], [363, 3, 1, "", "test_getWithoutDefaultRaisesParameterError"], [363, 3, 1, "", "test_mutableDefaultsNotSupported"], [363, 3, 1, "", "test_paramDefinitionsCompose"], [363, 3, 1, "", "test_paramPropertyDoesNotConflict"], [363, 3, 1, "", "test_paramPropertyDoesNotConflictWithNoneDefault"], [363, 3, 1, "", "test_parameterCollectionsHave__slots__"], [363, 3, 1, "", "test_serializer_pack_unpack"], [363, 3, 1, "", "test_setter"], [363, 3, 1, "", "test_setterGetterBasics"], [363, 3, 1, "", "test_writeSomeParamsToDB"]], "armi.reactor.tests.test_parameters.TestMakeParametersReadOnly": [[363, 3, 1, "", "test_makeParametersReadOnly"]], "armi.reactor.tests.test_reactors": [[364, 2, 1, "", "CartesianReactorNeighborTests"], [364, 2, 1, "", "CartesianReactorTests"], [364, 2, 1, "", "HexReactorTests"], [364, 2, 1, "", "ReactorTests"], [364, 1, 1, "", "buildOperatorOfEmptyCartesianBlocks"], [364, 1, 1, "", "buildOperatorOfEmptyHexBlocks"], [364, 1, 1, "", "loadTestReactor"], [364, 1, 1, "", "reduceTestReactorRings"]], "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests": [[364, 3, 1, "", "test_findNeighborsCartesian"]], "armi.reactor.tests.test_reactors.CartesianReactorTests": [[364, 3, 1, "", "test_add"], [364, 3, 1, "", "test_getAssembliesInSquareRing"], [364, 3, 1, "", "test_getAssemblyPitch"], [364, 3, 1, "", "test_getNuclideCategoriesLogging"]], "armi.reactor.tests.test_reactors.HexReactorTests": [[364, 3, 1, "", "test_addMoreNodes"], [364, 3, 1, "", "test_addMultipleCores"], [364, 3, 1, "", "test_applyThermalExpansion_CoreConstruct"], [364, 3, 1, "", "test_buildManualZones"], [364, 3, 1, "", "test_buildManualZonesEmpty"], [364, 3, 1, "", "test_coreSfp"], [364, 3, 1, "", "test_countBlocksOfType"], [364, 3, 1, "", "test_countFuelAxialBlocks"], [364, 3, 1, "", "test_createAssemblyOfType"], [364, 3, 1, "", "test_createAssemblyOfTypeExpandedCore"], [364, 3, 1, "", "test_createFreshFeed"], [364, 3, 1, "", "test_differentNuclideModels"], [364, 3, 1, "", "test_factorySortSetting"], [364, 3, 1, "", "test_findAllAxialMeshPoints"], [364, 3, 1, "", "test_findAllAxialMeshPoints_wSubmesh"], [364, 3, 1, "", "test_findAllAziMeshPoints"], [364, 3, 1, "", "test_findAllMeshPoints"], [364, 3, 1, "", "test_findAllRadMeshPoints"], [364, 3, 1, "", "test_findAxialMeshIndexOf"], [364, 3, 1, "", "test_findNeighbors"], [364, 3, 1, "", "test_genAssembliesAddedThisCycle"], [364, 3, 1, "", "test_genBlocksByLocName"], [364, 3, 1, "", "test_geomType"], [364, 3, 1, "", "test_getAllXsSuffixes"], [364, 3, 1, "", "test_getAssembliesInCircularRing"], [364, 3, 1, "", "test_getAssembliesInHexRing"], [364, 3, 1, "", "test_getAssembliesOnSymmetryLine"], [364, 3, 1, "", "test_getAssemblyPitch"], [364, 3, 1, "", "test_getAssemblyWithLoc"], [364, 3, 1, "", "test_getAssemblyWithName"], [364, 3, 1, "", "test_getAvgTemp"], [364, 3, 1, "", "test_getBlocksByIndices"], [364, 3, 1, "", "test_getDominantMaterial"], [364, 3, 1, "", "test_getFirstFuelBlockAxialNode"], [364, 3, 1, "", "test_getFluxVector"], [364, 3, 1, "", "test_getFuelBottomHeight"], [364, 3, 1, "", "test_getGridBounds"], [364, 3, 1, "", "test_getMass"], [364, 3, 1, "", "test_getMaxAssembliesInHexRing"], [364, 3, 1, "", "test_getMaxNumPins"], [364, 3, 1, "", "test_getMinimumPercentFluxInFuel"], [364, 3, 1, "", "test_getNozzleTypes"], [364, 3, 1, "", "test_getNuclideCategories"], [364, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOut"], [364, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOutBipass"], [364, 3, 1, "", "test_getNumEnergyGroups"], [364, 3, 1, "", "test_getNumRings"], [364, 3, 1, "", "test_getReactor"], [364, 3, 1, "", "test_getScalarEvolution"], [364, 3, 1, "", "test_getSetParameters"], [364, 3, 1, "", "test_getSymmetryFactor"], [364, 3, 1, "", "test_getTotalParam"], [364, 3, 1, "", "test_growToFullCore"], [364, 3, 1, "", "test_ifMissingSpatialGrid"], [364, 3, 1, "", "test_isPickleable"], [364, 3, 1, "", "test_locations"], [364, 3, 1, "", "test_nonUniformAssems"], [364, 3, 1, "", "test_normalizeNames"], [364, 3, 1, "", "test_pinCoordsAllBlocks"], [364, 3, 1, "", "test_removeAssembliesInRing"], [364, 3, 1, "", "test_removeAssembliesInRingByCount"], [364, 3, 1, "", "test_removeAssembliesInRingHex"], [364, 3, 1, "", "test_removeAssembly"], [364, 3, 1, "", "test_removeAssemblyNoSfp"], [364, 3, 1, "", "test_restoreReactor"], [364, 3, 1, "", "test_saveAllFlux"], [364, 3, 1, "", "test_setB10VolOnCreation"], [364, 3, 1, "", "test_setPitchUniform"], [364, 3, 1, "", "test_setPowerIfNecessary"], [364, 3, 1, "", "test_sortAssemByRing"], [364, 3, 1, "", "test_sortChildren"], [364, 3, 1, "", "test_updateBlockBOLHeights_DBLoad"], [364, 3, 1, "", "test_whenNoAssemblies"]], "armi.reactor.tests.test_rz_reactors": [[365, 2, 1, "", "TestRZTReactor"], [365, 2, 1, "", "TestRZTReactorModern"]], "armi.reactor.tests.test_rz_reactors.TestRZTReactor": [[365, 3, 1, "", "test_findAllMeshPoints"], [365, 3, 1, "", "test_loadRZT"]], "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern": [[365, 3, 1, "", "test_loadRZT_reactor"]], "armi.reactor.tests.test_zones": [[366, 2, 1, "", "TestZone"], [366, 2, 1, "", "TestZones"]], "armi.reactor.tests.test_zones.TestZone": [[366, 3, 1, "", "test_addItem"], [366, 3, 1, "", "test_addItems"], [366, 3, 1, "", "test_addLoc"], [366, 3, 1, "", "test_addLocs"], [366, 3, 1, "", "test_blocks"], [366, 3, 1, "", "test_iteration"], [366, 3, 1, "", "test_removeItem"], [366, 3, 1, "", "test_removeItems"], [366, 3, 1, "", "test_removeLoc"], [366, 3, 1, "", "test_removeLocs"], [366, 3, 1, "", "test_repr"]], "armi.reactor.tests.test_zones.TestZones": [[366, 3, 1, "", "test_dictionaryInterface"], [366, 3, 1, "", "test_findZoneItIsIn"], [366, 3, 1, "", "test_getAllLocations"], [366, 3, 1, "", "test_getZoneLocations"], [366, 3, 1, "", "test_sortZones"], [366, 3, 1, "", "test_summary"]], "armi.reactor.zones": [[367, 2, 1, "", "Zone"], [367, 2, 1, "", "Zones"]], "armi.reactor.zones.Zone": [[367, 4, 1, "", "VALID_TYPES"], [367, 3, 1, "", "addItem"], [367, 3, 1, "", "addItems"], [367, 3, 1, "", "addLoc"], [367, 3, 1, "", "addLocs"], [367, 3, 1, "", "removeItem"], [367, 3, 1, "", "removeItems"], [367, 3, 1, "", "removeLoc"], [367, 3, 1, "", "removeLocs"]], "armi.reactor.zones.Zones": [[367, 3, 1, "", "addZone"], [367, 3, 1, "", "addZones"], [367, 3, 1, "", "checkDuplicates"], [367, 3, 1, "", "findZoneItIsIn"], [367, 3, 1, "", "getAllLocations"], [367, 3, 1, "", "getZoneLocations"], [367, 5, 1, "", "names"], [367, 3, 1, "", "removeZone"], [367, 3, 1, "", "removeZones"], [367, 3, 1, "", "sortZones"], [367, 3, 1, "", "summary"]], "armi.runLog": [[368, 2, 1, "", "DeduplicationFilter"], [368, 2, 1, "", "NullLogger"], [368, 2, 1, "", "RunLogger"], [368, 1, 1, "", "close"], [368, 1, 1, "", "concatenateLogs"], [368, 1, 1, "", "createLogDir"], [368, 1, 1, "", "debug"], [368, 1, 1, "", "error"], [368, 1, 1, "", "extra"], [368, 1, 1, "", "getVerbosity"], [368, 1, 1, "", "header"], [368, 1, 1, "", "important"], [368, 1, 1, "", "info"], [368, 1, 1, "", "logFactory"], [368, 1, 1, "", "raw"], [368, 1, 1, "", "setVerbosity"], [368, 1, 1, "", "warning"], [368, 1, 1, "", "warningReport"]], "armi.runLog.DeduplicationFilter": [[368, 3, 1, "", "filter"]], "armi.runLog.NullLogger": [[368, 3, 1, "", "addHandler"]], "armi.runLog.RunLogger": [[368, 4, 1, "", "FMT"], [368, 3, 1, "", "allowStopDuplicates"], [368, 3, 1, "", "close"], [368, 3, 1, "", "flush"], [368, 3, 1, "", "getDuplicatesFilter"], [368, 3, 1, "", "log"], [368, 3, 1, "", "setVerbosity"], [368, 3, 1, "", "warningReport"], [368, 3, 1, "", "write"]], "armi.settings": [[370, 0, 0, "-", "caseSettings"], [371, 0, 0, "-", "fwSettings"], [369, 1, 1, "", "isBoolSetting"], [369, 1, 1, "", "promptForSettingsFile"], [369, 1, 1, "", "recursivelyLoadSettingsFiles"], [376, 0, 0, "-", "setting"], [377, 0, 0, "-", "settingsIO"], [378, 0, 0, "-", "settingsValidation"], [379, 0, 0, "-", "tests"]], "armi.settings.caseSettings": [[370, 2, 1, "", "Settings"]], "armi.settings.caseSettings.Settings": [[370, 5, 1, "", "caseTitle"], [370, 4, 1, "", "defaultCaseTitle"], [370, 3, 1, "", "duplicate"], [370, 5, 1, "", "environmentSettings"], [370, 3, 1, "", "failOnLoad"], [370, 3, 1, "", "getSetting"], [370, 3, 1, "", "getSettingsSetByUser"], [370, 3, 1, "", "initLogVerbosity"], [370, 5, 1, "", "inputDirectory"], [370, 3, 1, "", "items"], [370, 3, 1, "", "keys"], [370, 3, 1, "", "loadFromInputFile"], [370, 3, 1, "", "loadFromString"], [370, 3, 1, "", "modified"], [370, 3, 1, "", "registerUserPlugins"], [370, 3, 1, "", "revertToDefaults"], [370, 3, 1, "", "setModuleVerbosities"], [370, 3, 1, "", "updateEnvironmentSettingsFrom"], [370, 3, 1, "", "values"], [370, 3, 1, "", "writeToYamlFile"], [370, 3, 1, "", "writeToYamlStream"]], "armi.settings.fwSettings": [[372, 0, 0, "-", "databaseSettings"], [371, 1, 1, "", "getFrameworkSettings"], [373, 0, 0, "-", "globalSettings"], [374, 0, 0, "-", "reportSettings"], [375, 0, 0, "-", "tightCouplingSettings"]], "armi.settings.fwSettings.databaseSettings": [[372, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.globalSettings": [[373, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.reportSettings": [[374, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.tightCouplingSettings": [[375, 2, 1, "", "TightCouplingSettingDef"], [375, 2, 1, "", "TightCouplingSettings"], [375, 1, 1, "", "serializeTightCouplingSettings"], [375, 1, 1, "", "tightCouplingSettingsValidator"]], "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef": [[375, 3, 1, "", "dump"]], "armi.settings.setting": [[376, 2, 1, "", "Default"], [376, 2, 1, "", "FlagListSetting"], [376, 2, 1, "", "Option"], [376, 2, 1, "", "Setting"]], "armi.settings.setting.Default": [[376, 4, 1, "", "settingName"], [376, 4, 1, "", "value"]], "armi.settings.setting.FlagListSetting": [[376, 3, 1, "", "dump"], [376, 3, 1, "", "schema"]], "armi.settings.setting.Option": [[376, 4, 1, "", "option"], [376, 4, 1, "", "settingName"]], "armi.settings.setting.Setting": [[376, 3, 1, "", "addOption"], [376, 3, 1, "", "addOptions"], [376, 3, 1, "", "changeDefault"], [376, 5, 1, "", "containedType"], [376, 5, 1, "", "default"], [376, 3, 1, "", "dump"], [376, 3, 1, "", "getCustomAttributes"], [376, 3, 1, "", "getDefaultAttributes"], [376, 3, 1, "", "isDefault"], [376, 5, 1, "", "offDefault"], [376, 3, 1, "", "revertToDefault"], [376, 3, 1, "", "setValue"], [376, 5, 1, "", "underlyingType"], [376, 5, 1, "", "value"]], "armi.settings.settingsIO": [[377, 2, 1, "", "Roots"], [377, 7, 1, "", "RunLogPromptCancel"], [377, 7, 1, "", "RunLogPromptUnresolvable"], [377, 2, 1, "", "SettingRenamer"], [377, 2, 1, "", "SettingsReader"], [377, 2, 1, "", "SettingsWriter"], [377, 1, 1, "", "prompt"]], "armi.settings.settingsIO.Roots": [[377, 4, 1, "", "CUSTOM"], [377, 4, 1, "", "VERSION"]], "armi.settings.settingsIO.SettingRenamer": [[377, 3, 1, "", "renameSetting"]], "armi.settings.settingsIO.SettingsReader": [[377, 2, 1, "", "SettingsInputFormat"], [377, 3, 1, "", "readFromFile"], [377, 3, 1, "", "readFromStream"]], "armi.settings.settingsIO.SettingsReader.SettingsInputFormat": [[377, 4, 1, "", "YAML"], [377, 3, 1, "", "fromExt"]], "armi.settings.settingsIO.SettingsWriter": [[377, 3, 1, "", "writeYaml"]], "armi.settings.settingsValidation": [[378, 2, 1, "", "Inspector"], [378, 2, 1, "", "Query"], [378, 1, 1, "", "createQueryRevertBadPathToDefault"], [378, 1, 1, "", "validateVersion"]], "armi.settings.settingsValidation.Inspector": [[378, 3, 1, "", "NO_ACTION"], [378, 3, 1, "", "addQuery"], [378, 3, 1, "", "addQueryBadLocationWillLikelyFail"], [378, 3, 1, "", "addQueryCurrentSettingMayNotSupportFeatures"], [378, 3, 1, "", "run"]], "armi.settings.settingsValidation.Query": [[378, 3, 1, "", "isCorrective"], [378, 3, 1, "", "resolve"]], "armi.settings.tests": [[380, 0, 0, "-", "test_inspectors"], [381, 0, 0, "-", "test_settings"], [382, 0, 0, "-", "test_settingsIO"]], "armi.settings.tests.test_inspectors": [[380, 2, 1, "", "TestInspector"]], "armi.settings.tests.test_inspectors.TestInspector": [[380, 3, 1, "", "test_assignCS"], [380, 3, 1, "", "test_callableCorrectionCheck"], [380, 3, 1, "", "test_changeOfCS"], [380, 3, 1, "", "test_checkForBothSimpleAndDetailedCyclesInputs"], [380, 3, 1, "", "test_correctCyclesToZeroBurnup"], [380, 3, 1, "", "test_createQueryRevertBadPathToDefault"], [380, 3, 1, "", "test_nonCorrectiveQuery"], [380, 3, 1, "", "test_overwriteSettingsCorrectiveQuery"], [380, 3, 1, "", "test_query"]], "armi.settings.tests.test_settings": [[381, 2, 1, "", "DummySettingPlugin1"], [381, 2, 1, "", "DummySettingPlugin2"], [381, 2, 1, "", "PluginAddsOptions"], [381, 2, 1, "", "TestAddingOptions"], [381, 2, 1, "", "TestFlagListSetting"], [381, 2, 1, "", "TestSettings"], [381, 2, 1, "", "TestSettings2"], [381, 2, 1, "", "TestSettingsUtils"], [381, 2, 1, "", "TestSettingsValidationUtils"]], "armi.settings.tests.test_settings.DummySettingPlugin1": [[381, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.DummySettingPlugin2": [[381, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.PluginAddsOptions": [[381, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.TestAddingOptions": [[381, 3, 1, "", "test_addingOptions"]], "armi.settings.tests.test_settings.TestFlagListSetting": [[381, 3, 1, "", "test_flagListSetting"], [381, 3, 1, "", "test_invalidFlagListTypeError"]], "armi.settings.tests.test_settings.TestSettings": [[381, 3, 1, "", "test_metaData"], [381, 3, 1, "", "test_updateEnvironmentSettingsFrom"]], "armi.settings.tests.test_settings.TestSettings2": [[381, 3, 1, "", "test_copySetting"], [381, 3, 1, "", "test_copySettingNotDefault"], [381, 3, 1, "", "test_csWorks"], [381, 3, 1, "", "test_default"], [381, 3, 1, "", "test_empty"], [381, 3, 1, "", "test_getFailures"], [381, 3, 1, "", "test_getSettingsSetByUser"], [381, 3, 1, "", "test_listCoercion"], [381, 3, 1, "", "test_listsMutable"], [381, 3, 1, "", "test_modified"], [381, 3, 1, "", "test_pluginSettings"], [381, 3, 1, "", "test_pluginValidatorsAreDiscovered"], [381, 3, 1, "", "test_schemaChecksType"], [381, 3, 1, "", "test_setModuleVerbosities"], [381, 3, 1, "", "test_settingIsOkayToGrab"], [381, 3, 1, "", "test_typeDetection"]], "armi.settings.tests.test_settings.TestSettingsUtils": [[381, 3, 1, "", "test_prompt"], [381, 3, 1, "", "test_recursiveScan"]], "armi.settings.tests.test_settings.TestSettingsValidationUtils": [[381, 3, 1, "", "test_validateVersion"]], "armi.settings.tests.test_settingsIO": [[382, 2, 1, "", "MockEntryPoint"], [382, 2, 1, "", "SettingArgsTests"], [382, 2, 1, "", "SettingsFailureTests"], [382, 2, 1, "", "SettingsReaderTests"], [382, 2, 1, "", "SettingsRenameTests"], [382, 2, 1, "", "SettingsWriterTests"]], "armi.settings.tests.test_settingsIO.MockEntryPoint": [[382, 4, 1, "", "name"], [382, 4, 1, "", "settingsArgument"]], "armi.settings.tests.test_settingsIO.SettingArgsTests": [[382, 3, 1, "", "test_cannotLoadSettingsAfterParsingCommandLineSetting"], [382, 3, 1, "", "test_commandLineSetting"]], "armi.settings.tests.test_settingsIO.SettingsFailureTests": [[382, 3, 1, "", "test_invalidFile"], [382, 3, 1, "", "test_loadFromYamlFailsOnBadNames"], [382, 3, 1, "", "test_settingsObjSetting"]], "armi.settings.tests.test_settingsIO.SettingsReaderTests": [[382, 3, 1, "", "test_basicSettingsReader"], [382, 3, 1, "", "test_readFromFile"]], "armi.settings.tests.test_settingsIO.SettingsRenameTests": [[382, 4, 1, "", "testSettings"], [382, 3, 1, "", "test_collidingRenames"], [382, 3, 1, "", "test_rename"]], "armi.settings.tests.test_settingsIO.SettingsWriterTests": [[382, 3, 1, "", "test_errorSettingsWriter"], [382, 3, 1, "", "test_writeFull"], [382, 3, 1, "", "test_writeMedium"], [382, 3, 1, "", "test_writeShort"], [382, 3, 1, "", "test_writeYaml"]], "armi.tests": [[383, 2, 1, "", "ArmiTestHelper"], [383, 2, 1, "", "Fixture"], [383, 1, 1, "", "fixture"], [383, 1, 1, "", "getEmptyCartesianReactor"], [383, 1, 1, "", "getEmptyHexReactor"], [384, 0, 0, "-", "mockRunLogs"], [383, 1, 1, "", "rebaselineTextComparisons"], [385, 0, 0, "-", "refSmallReactorShuffleLogic"], [383, 1, 1, "", "requires_fixture"], [386, 0, 0, "-", "test_apps"], [387, 0, 0, "-", "test_armiTestHelper"], [388, 0, 0, "-", "test_cartesian"], [389, 0, 0, "-", "test_context"], [390, 0, 0, "-", "test_interfaces"], [391, 0, 0, "-", "test_lwrInputs"], [392, 0, 0, "-", "test_mpiActions"], [393, 0, 0, "-", "test_mpiFeatures"], [394, 0, 0, "-", "test_mpiParameters"], [395, 0, 0, "-", "test_notebooks"], [396, 0, 0, "-", "test_plugins"], [397, 0, 0, "-", "test_runLog"], [398, 0, 0, "-", "test_tests"], [399, 0, 0, "-", "test_user_plugins"]], "armi.tests.ArmiTestHelper": [[383, 3, 1, "", "compareFilesLineByLine"], [383, 3, 1, "", "compareLines"]], "armi.tests.mockRunLogs": [[384, 2, 1, "", "BufferLog"], [384, 2, 1, "", "LogCounter"]], "armi.tests.mockRunLogs.BufferLog": [[384, 3, 1, "", "clearSingleWarnings"], [384, 3, 1, "", "emptyStdout"], [384, 3, 1, "", "getStderrValue"], [384, 3, 1, "", "getStdout"], [384, 3, 1, "", "log"]], "armi.tests.mockRunLogs.LogCounter": [[384, 3, 1, "", "log"]], "armi.tests.refSmallReactorShuffleLogic": [[385, 2, 1, "", "EquilibriumShuffler"], [385, 1, 1, "", "getFactorList"]], "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler": [[385, 3, 1, "", "chooseSwaps"]], "armi.tests.test_apps": [[386, 2, 1, "", "TestApps"], [386, 2, 1, "", "TestArmiHighLevel"], [386, 2, 1, "", "TestPlugin1"], [386, 2, 1, "", "TestPlugin2"], [386, 2, 1, "", "TestPlugin3"], [386, 2, 1, "", "TestPlugin4"]], "armi.tests.test_apps.TestApps": [[386, 3, 1, "", "test_disableFutureConfigures"], [386, 3, 1, "", "test_getParamRenames"], [386, 3, 1, "", "test_getParamRenamesInvalids"], [386, 3, 1, "", "test_getSettings"], [386, 3, 1, "", "test_isStableReleaseVersion"], [386, 3, 1, "", "test_registerPluginFlags"], [386, 3, 1, "", "test_splashText"], [386, 3, 1, "", "test_splashTextDifferentApp"], [386, 3, 1, "", "test_version"]], "armi.tests.test_apps.TestArmiHighLevel": [[386, 3, 1, "", "test_getDefaultPluginManager"], [386, 3, 1, "", "test_main"], [386, 3, 1, "", "test_overConfigured"]], "armi.tests.test_apps.TestPlugin1": [[386, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin2": [[386, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin3": [[386, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin4": [[386, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_armiTestHelper": [[387, 2, 1, "", "TestArmiTestHelper"]], "armi.tests.test_armiTestHelper.TestArmiTestHelper": [[387, 3, 1, "", "test_compareFilesFail"], [387, 3, 1, "", "test_compareFilesSucceedFalseNegative"], [387, 3, 1, "", "test_compareFilesSucess"]], "armi.tests.test_cartesian": [[388, 2, 1, "", "CartesianReactorTests"]], "armi.tests.test_cartesian.CartesianReactorTests": [[388, 3, 1, "", "test_custom"]], "armi.tests.test_context": [[389, 2, 1, "", "TestContextSerial"]], "armi.tests.test_context.TestContextSerial": [[389, 3, 1, "", "test_nonNoneData"], [389, 3, 1, "", "test_rank"]], "armi.tests.test_interfaces": [[390, 2, 1, "", "DummyInterface"], [390, 2, 1, "", "TestCodeInterface"], [390, 2, 1, "", "TestTightCoupler"]], "armi.tests.test_interfaces.DummyInterface": [[390, 4, 1, "", "function"], [390, 4, 1, "", "name"]], "armi.tests.test_interfaces.TestCodeInterface": [[390, 3, 1, "", "test_distributable"], [390, 3, 1, "", "test_duplicate"], [390, 3, 1, "", "test_enabled"], [390, 3, 1, "", "test_isRequestedDetailPoint"], [390, 3, 1, "", "test_nameContains"], [390, 3, 1, "", "test_preDistributeState"]], "armi.tests.test_interfaces.TestTightCoupler": [[390, 3, 1, "", "test_couplerActive"], [390, 3, 1, "", "test_getListDimension"], [390, 3, 1, "", "test_isConverged"], [390, 3, 1, "", "test_isConvergedRuntimeError"], [390, 3, 1, "", "test_isConvergedValueError"], [390, 3, 1, "", "test_storePreviousIterationValue"], [390, 3, 1, "", "test_storePreviousIterationValueException"]], "armi.tests.test_lwrInputs": [[391, 2, 1, "", "C5G7ReactorTests"]], "armi.tests.test_lwrInputs.C5G7ReactorTests": [[391, 3, 1, "", "test_loadC5G7"]], "armi.tests.test_mpiActions": [[392, 2, 1, "", "MpiIterTests"], [392, 2, 1, "", "QueueActionsTests"], [392, 1, 1, "", "passer"]], "armi.tests.test_mpiActions.MpiIterTests": [[392, 3, 1, "", "test_diagnosePickleErrorTestReactor"], [392, 3, 1, "", "test_excessProcesses"], [392, 3, 1, "", "test_mpiIter"], [392, 3, 1, "", "test_parallel"], [392, 3, 1, "", "test_perfectBalancing"], [392, 3, 1, "", "test_runActionsDistributeStateAction"], [392, 3, 1, "", "test_runActionsDistributionAction"], [392, 3, 1, "", "test_serialGather"], [392, 3, 1, "", "test_typicalBalancing"]], "armi.tests.test_mpiActions.QueueActionsTests": [[392, 3, 1, "", "test_disableForExclusiveTasks"], [392, 3, 1, "", "test_makeQueue"]], "armi.tests.test_mpiFeatures": [[393, 2, 1, "", "BcastAction1"], [393, 2, 1, "", "BcastAction2"], [393, 2, 1, "", "FailingInterface1"], [393, 2, 1, "", "FailingInterface2"], [393, 2, 1, "", "FailingInterface3"], [393, 2, 1, "", "MockInterface"], [393, 2, 1, "", "MpiDistributeStateTests"], [393, 2, 1, "", "MpiOperatorTests"], [393, 2, 1, "", "MpiPathToolsTests"], [393, 2, 1, "", "TestContextMpi"]], "armi.tests.test_mpiFeatures.BcastAction1": [[393, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.BcastAction2": [[393, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.FailingInterface1": [[393, 3, 1, "", "interactEveryNode"], [393, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface2": [[393, 3, 1, "", "interactEveryNode"], [393, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface3": [[393, 3, 1, "", "fail"], [393, 3, 1, "", "interactEveryNode"], [393, 4, 1, "", "name"], [393, 3, 1, "", "workerOperate"]], "armi.tests.test_mpiFeatures.MockInterface": [[393, 3, 1, "", "interactInit"], [393, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.MpiDistributeStateTests": [[393, 3, 1, "", "test_compileResults"], [393, 3, 1, "", "test_distributeInterfaces"], [393, 3, 1, "", "test_distributeReactor"], [393, 3, 1, "", "test_distributeSettings"], [393, 3, 1, "", "test_distributeState"]], "armi.tests.test_mpiFeatures.MpiOperatorTests": [[393, 3, 1, "", "test_basicOperatorMPI"], [393, 3, 1, "", "test_finalizeInteract"], [393, 3, 1, "", "test_primaryCritical"], [393, 3, 1, "", "test_primaryException"]], "armi.tests.test_mpiFeatures.MpiPathToolsTests": [[393, 3, 1, "", "test_cleanPathMpi"]], "armi.tests.test_mpiFeatures.TestContextMpi": [[393, 3, 1, "", "test_nonNoneData"], [393, 3, 1, "", "test_rank"]], "armi.tests.test_mpiParameters": [[394, 2, 1, "", "MockSyncPC"], [394, 2, 1, "", "SynchronizationTests"], [394, 1, 1, "", "makeComp"]], "armi.tests.test_mpiParameters.MockSyncPC": [[394, 4, 1, "", "pDefs"], [394, 4, 1, "", "pb"]], "armi.tests.test_mpiParameters.SynchronizationTests": [[394, 3, 1, "", "test_conflictsMaintainWithStateRetainer"], [394, 3, 1, "", "test_noConflicts"], [394, 3, 1, "", "test_withConflicts"], [394, 3, 1, "", "test_withConflictsButSameValue"]], "armi.tests.test_notebooks": [[395, 2, 1, "", "NotebookTests"], [395, 1, 1, "", "runNotebook"]], "armi.tests.test_notebooks.NotebookTests": [[395, 3, 1, "", "test_runDataModel"], [395, 3, 1, "", "test_runParamSweep"]], "armi.tests.test_plugins": [[396, 2, 1, "", "BeforeReactorPlugin"], [396, 2, 1, "", "PluginFlags1"], [396, 2, 1, "", "SillyAxialExpansionChanger"], [396, 2, 1, "", "SillyAxialPlugin"], [396, 2, 1, "", "TestPlugin"], [396, 2, 1, "", "TestPluginBasics"], [396, 2, 1, "", "TestPluginRegistration"]], "armi.tests.test_plugins.BeforeReactorPlugin": [[396, 3, 1, "", "beforeReactorConstruction"]], "armi.tests.test_plugins.PluginFlags1": [[396, 3, 1, "", "defineFlags"]], "armi.tests.test_plugins.SillyAxialExpansionChanger": [[396, 4, 1, "", "expansionData"], [396, 4, 1, "", "linked"]], "armi.tests.test_plugins.SillyAxialPlugin": [[396, 3, 1, "", "getAxialExpansionChanger"]], "armi.tests.test_plugins.TestPlugin": [[396, 4, 1, "", "plugin"], [396, 3, 1, "", "test_defineBlueprintsSections"], [396, 3, 1, "", "test_exposeInterfaces"]], "armi.tests.test_plugins.TestPluginBasics": [[396, 3, 1, "", "test_defineParameters"], [396, 3, 1, "", "test_exposeInterfaces"], [396, 3, 1, "", "test_pluginsExposeInterfaces"]], "armi.tests.test_plugins.TestPluginRegistration": [[396, 3, 1, "", "test_axialExpansionHook"], [396, 3, 1, "", "test_beforeReactorConstructionHook"], [396, 3, 1, "", "test_defineFlags"], [396, 3, 1, "", "test_passiveDBLoadPlugin"]], "armi.tests.test_runLog": [[397, 2, 1, "", "TestRunLog"], [397, 2, 1, "", "TestRunLogger"]], "armi.tests.test_runLog.TestRunLog": [[397, 3, 1, "", "test_callingStartLogMultipleTimes"], [397, 3, 1, "", "test_closeLogging"], [397, 3, 1, "", "test_concatenateLogs"], [397, 3, 1, "", "test_createLogDir"], [397, 3, 1, "", "test_getWhiteSpace"], [397, 3, 1, "", "test_invalidSetVerbosityByString"], [397, 3, 1, "", "test_parentRunLogging"], [397, 3, 1, "", "test_setVerbosity"], [397, 3, 1, "", "test_setVerbosityBeforeStartLog"], [397, 3, 1, "", "test_setVerbosityFromInteger"], [397, 3, 1, "", "test_setVerbosityFromString"], [397, 3, 1, "", "test_verbosityOutOfRange"], [397, 3, 1, "", "test_warningReport"], [397, 3, 1, "", "test_warningReportInvalid"]], "armi.tests.test_runLog.TestRunLogger": [[397, 3, 1, "", "test_allowStopDuplicates"], [397, 3, 1, "", "test_getDuplicatesFilter"], [397, 3, 1, "", "test_write"]], "armi.tests.test_tests": [[398, 2, 1, "", "TestCompareFiles"]], "armi.tests.test_tests.TestCompareFiles": [[398, 3, 1, "", "test_compareFileLine"]], "armi.tests.test_user_plugins": [[399, 2, 1, "", "TestUserPlugins"], [399, 2, 1, "", "UpInterface"], [399, 2, 1, "", "UserPluginBadDefineParameterRenames"], [399, 2, 1, "", "UserPluginBadDefinesSettings"], [399, 2, 1, "", "UserPluginFlags"], [399, 2, 1, "", "UserPluginFlags2"], [399, 2, 1, "", "UserPluginFlags3"], [399, 2, 1, "", "UserPluginOnProcessCoreLoading"], [399, 2, 1, "", "UserPluginWithInterface"]], "armi.tests.test_user_plugins.TestUserPlugins": [[399, 3, 1, "", "test_registerRepeatedUserPlugins"], [399, 3, 1, "", "test_registerUserPlugins"], [399, 3, 1, "", "test_registerUserPluginsAbsPath"], [399, 3, 1, "", "test_registerUserPluginsFromSettings"], [399, 3, 1, "", "test_userPluginOnProcessCoreLoading"], [399, 3, 1, "", "test_userPluginWithInterfaces"], [399, 3, 1, "", "test_userPluginsFlags"], [399, 3, 1, "", "test_validateUserPluginLimitations"]], "armi.tests.test_user_plugins.UpInterface": [[399, 3, 1, "", "interactEveryNode"], [399, 4, 1, "", "name"]], "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames": [[399, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_user_plugins.UserPluginBadDefinesSettings": [[399, 3, 1, "", "defineSettings"]], "armi.tests.test_user_plugins.UserPluginFlags": [[399, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags2": [[399, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags3": [[399, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading": [[399, 3, 1, "", "onProcessCoreLoading"]], "armi.tests.test_user_plugins.UserPluginWithInterface": [[399, 3, 1, "", "exposeInterfaces"]], "armi.utils": [[400, 2, 1, "", "MergeableDict"], [400, 2, 1, "", "MyPickler"], [401, 0, 0, "-", "asciimaps"], [400, 1, 1, "", "capStrLen"], [400, 1, 1, "", "classesInHierarchy"], [402, 0, 0, "-", "codeTiming"], [400, 1, 1, "", "createFormattedStrWithDelimiter"], [403, 0, 0, "-", "customExceptions"], [404, 0, 0, "-", "densityTools"], [405, 0, 0, "-", "directoryChangers"], [406, 0, 0, "-", "directoryChangersMpi"], [400, 1, 1, "", "doTestPickleOnAllContents2"], [407, 0, 0, "-", "dynamicImporter"], [408, 0, 0, "-", "flags"], [400, 1, 1, "", "getAvailabilityFactors"], [400, 1, 1, "", "getBurnSteps"], [400, 1, 1, "", "getCumulativeNodeNum"], [400, 1, 1, "", "getCycleLengths"], [400, 1, 1, "", "getCycleNames"], [400, 1, 1, "", "getCycleNodeFromCumulativeNode"], [400, 1, 1, "", "getCycleNodeFromCumulativeStep"], [400, 1, 1, "", "getFileSHA1Hash"], [400, 1, 1, "", "getMaxBurnSteps"], [400, 1, 1, "", "getNodesPerCycle"], [400, 1, 1, "", "getPowerFractions"], [400, 1, 1, "", "getPreviousTimeNode"], [400, 1, 1, "", "getStepLengths"], [400, 1, 1, "", "hasBurnup"], [410, 0, 0, "-", "hexagon"], [411, 0, 0, "-", "iterables"], [400, 1, 1, "", "list2str"], [412, 0, 0, "-", "mathematics"], [413, 0, 0, "-", "outputCache"], [414, 0, 0, "-", "parsing"], [415, 0, 0, "-", "pathTools"], [400, 1, 1, "", "plotMatrix"], [416, 0, 0, "-", "plotting"], [400, 1, 1, "", "prependToList"], [417, 0, 0, "-", "properties"], [418, 0, 0, "-", "reportPlotting"], [400, 1, 1, "", "safeCopy"], [400, 1, 1, "", "safeMove"], [400, 1, 1, "", "slantSplit"], [419, 0, 0, "-", "tabulate"], [420, 0, 0, "-", "tests"], [442, 0, 0, "-", "textProcessors"], [443, 0, 0, "-", "triangle"], [400, 1, 1, "", "tryPickleOnAllContents"], [400, 1, 1, "", "tryPickleOnAllContents3"], [444, 0, 0, "-", "units"], [400, 1, 1, "", "userName"]], "armi.utils.MergeableDict": [[400, 3, 1, "", "merge"]], "armi.utils.MyPickler": [[400, 3, 1, "", "save"]], "armi.utils.asciimaps": [[401, 2, 1, "", "AsciiMap"], [401, 2, 1, "", "AsciiMapCartesian"], [401, 2, 1, "", "AsciiMapHexFullFlatsUp"], [401, 2, 1, "", "AsciiMapHexFullTipsUp"], [401, 2, 1, "", "AsciiMapHexThirdFlatsUp"], [401, 1, 1, "", "asciiMapFromGeomAndDomain"]], "armi.utils.asciimaps.AsciiMap": [[401, 4, 1, "", "asciiLabelByIndices"], [401, 4, 1, "", "asciiLines"], [401, 4, 1, "", "asciiOffsets"], [401, 3, 1, "", "fromReactor"], [401, 3, 1, "", "gridContentsToAscii"], [401, 3, 1, "", "items"], [401, 3, 1, "", "keys"], [401, 3, 1, "", "readAscii"], [401, 3, 1, "", "writeAscii"]], "armi.utils.codeTiming": [[402, 2, 1, "", "MasterTimer"], [402, 1, 1, "", "getMasterTimer"], [402, 1, 1, "", "timed"]], "armi.utils.codeTiming.MasterTimer": [[402, 3, 1, "", "endTimer"], [402, 3, 1, "", "getActiveTimers"], [402, 3, 1, "", "getMasterTimer"], [402, 3, 1, "", "getTimer"], [402, 3, 1, "", "report"], [402, 3, 1, "", "startAll"], [402, 3, 1, "", "startTimer"], [402, 3, 1, "", "stopAll"], [402, 3, 1, "", "time"], [402, 3, 1, "", "timeline"]], "armi.utils.customExceptions": [[403, 7, 1, "", "InputError"], [403, 7, 1, "", "InvalidSettingsFileError"], [403, 7, 1, "", "InvalidSettingsStopProcess"], [403, 7, 1, "", "NonexistentSetting"], [403, 7, 1, "", "NonexistentSettingsFileError"], [403, 7, 1, "", "SettingException"], [403, 1, 1, "", "important"], [403, 1, 1, "", "info"], [403, 1, 1, "", "warn"], [403, 1, 1, "", "warn_when_root"]], "armi.utils.densityTools": [[404, 1, 1, "", "applyIsotopicsMix"], [404, 1, 1, "", "calculateMassDensity"], [404, 1, 1, "", "calculateNumberDensity"], [404, 1, 1, "", "expandElementalMassFracsToNuclides"], [404, 1, 1, "", "expandElementalNuclideMassFracs"], [404, 1, 1, "", "filterNuclideList"], [404, 1, 1, "", "formatMaterialCard"], [404, 1, 1, "", "getChemicals"], [404, 1, 1, "", "getMassFractions"], [404, 1, 1, "", "getMassInGrams"], [404, 1, 1, "", "getNDensFromMasses"], [404, 1, 1, "", "normalizeNuclideList"]], "armi.utils.directoryChangers": [[405, 2, 1, "", "DirectoryChanger"], [405, 2, 1, "", "ForcedCreationDirectoryChanger"], [405, 2, 1, "", "TemporaryDirectoryChanger"], [405, 1, 1, "", "directoryChangerFactory"]], "armi.utils.directoryChangers.DirectoryChanger": [[405, 3, 1, "", "close"], [405, 3, 1, "", "moveFiles"], [405, 3, 1, "", "open"], [405, 3, 1, "", "retrieveFiles"]], "armi.utils.directoryChangers.TemporaryDirectoryChanger": [[405, 3, 1, "", "GetRandomDirectory"]], "armi.utils.directoryChangersMpi": [[406, 2, 1, "", "MpiDirectoryChanger"]], "armi.utils.directoryChangersMpi.MpiDirectoryChanger": [[406, 3, 1, "", "close"], [406, 3, 1, "", "open"]], "armi.utils.dynamicImporter": [[407, 1, 1, "", "getEntireFamilyTree"]], "armi.utils.flags": [[408, 2, 1, "", "Flag"], [408, 2, 1, "", "auto"]], "armi.utils.flags.Flag": [[408, 3, 1, "", "extend"], [408, 3, 1, "", "fields"], [408, 3, 1, "", "from_bytes"], [408, 3, 1, "", "sortedFields"], [408, 3, 1, "", "to_bytes"], [408, 3, 1, "", "width"]], "armi.utils.hexagon": [[410, 1, 1, "", "area"], [410, 1, 1, "", "corners"], [410, 1, 1, "", "getIndexOfRotatedCell"], [410, 1, 1, "", "numPositionsInRing"], [410, 1, 1, "", "numRingsToHoldNumCells"], [410, 1, 1, "", "pitch"], [410, 1, 1, "", "side"], [410, 1, 1, "", "totalPositionsUpToRing"]], "armi.utils.iterables": [[411, 2, 1, "", "Sequence"], [411, 1, 1, "", "chunk"], [411, 1, 1, "", "flatten"], [411, 1, 1, "", "packBinaryStrings"], [411, 1, 1, "", "packHexStrings"], [411, 1, 1, "", "pivot"], [411, 1, 1, "", "split"], [411, 1, 1, "", "unpackBinaryStrings"], [411, 1, 1, "", "unpackHexStrings"]], "armi.utils.iterables.Sequence": [[411, 3, 1, "", "append"], [411, 3, 1, "", "copy"], [411, 3, 1, "", "drop"], [411, 3, 1, "", "extend"], [411, 3, 1, "", "select"], [411, 3, 1, "", "transform"]], "armi.utils.mathematics": [[412, 1, 1, "", "average1DWithinTolerance"], [412, 1, 1, "", "convertToSlice"], [412, 1, 1, "", "efmt"], [412, 1, 1, "", "expandRepeatedFloats"], [412, 1, 1, "", "findClosest"], [412, 1, 1, "", "findNearestValue"], [412, 1, 1, "", "findNearestValueAndIndex"], [412, 1, 1, "", "fixThreeDigitExp"], [412, 1, 1, "", "getFloat"], [412, 1, 1, "", "getStepsFromValues"], [412, 1, 1, "", "isMonotonic"], [412, 1, 1, "", "linearInterpolation"], [412, 1, 1, "", "minimizeScalarFunc"], [412, 1, 1, "", "newtonsMethod"], [412, 1, 1, "", "parabolaFromPoints"], [412, 1, 1, "", "parabolicInterpolation"], [412, 1, 1, "", "relErr"], [412, 1, 1, "", "resampleStepwise"], [412, 1, 1, "", "rotateXY"]], "armi.utils.outputCache": [[413, 1, 1, "", "cacheCall"], [413, 1, 1, "", "deleteCache"], [413, 1, 1, "", "retrieveOutput"], [413, 1, 1, "", "store"]], "armi.utils.parsing": [[414, 1, 1, "", "datetimeFromStr"], [414, 1, 1, "", "parseValue"], [414, 1, 1, "", "tryLiteralEval"]], "armi.utils.pathTools": [[415, 1, 1, "", "armiAbsPath"], [415, 1, 1, "", "cleanPath"], [415, 1, 1, "", "copyOrWarn"], [415, 1, 1, "", "importCustomPyModule"], [415, 1, 1, "", "isAccessible"], [415, 1, 1, "", "isFilePathNewer"], [415, 1, 1, "", "moduleAndAttributeExist"], [415, 1, 1, "", "separateModuleAndAttribute"]], "armi.utils.plotting": [[416, 2, 1, "", "DepthSlider"], [416, 1, 1, "", "close"], [416, 1, 1, "", "colorGenerator"], [416, 1, 1, "", "makeHistogram"], [416, 1, 1, "", "plotAssemblyTypes"], [416, 1, 1, "", "plotBlockDepthMap"], [416, 1, 1, "", "plotBlockDiagram"], [416, 1, 1, "", "plotBlockFlux"], [416, 1, 1, "", "plotFaceMap"], [416, 1, 1, "", "plotNucXs"]], "armi.utils.plotting.DepthSlider": [[416, 3, 1, "", "next"], [416, 3, 1, "", "previous"], [416, 3, 1, "", "set_val"], [416, 3, 1, "", "updatePageDepthColor"]], "armi.utils.properties": [[417, 7, 1, "", "ImmutablePropertyError"], [417, 1, 1, "", "areEqual"], [417, 1, 1, "", "createImmutableProperty"], [417, 1, 1, "", "lockImmutableProperties"], [417, 1, 1, "", "numpyHackForEqual"], [417, 1, 1, "", "unlockImmutableProperties"]], "armi.utils.reportPlotting": [[418, 1, 1, "", "createPlotMetaData"], [418, 1, 1, "", "keffVsTime"], [418, 1, 1, "", "movesVsCycle"], [418, 1, 1, "", "plotAxialProfile"], [418, 1, 1, "", "plotCoreOverviewRadar"], [418, 1, 1, "", "plotReactorPerformance"], [418, 1, 1, "", "valueVsTime"], [418, 1, 1, "", "xsHistoryVsTime"]], "armi.utils.tabulate": [[419, 2, 1, "", "DataRow"], [419, 2, 1, "", "Iterable"], [419, 2, 1, "", "Line"], [419, 2, 1, "", "Sized"], [419, 2, 1, "", "TableFormat"], [419, 2, 1, "", "TextWrapper"], [419, 2, 1, "", "chain"], [419, 1, 1, "", "namedtuple"], [419, 2, 1, "", "partial"], [419, 1, 1, "", "reduce"], [419, 1, 1, "", "tabulate"], [419, 2, 1, "", "zip_longest"]], "armi.utils.tabulate.DataRow": [[419, 4, 1, "", "begin"], [419, 4, 1, "", "end"], [419, 4, 1, "", "sep"]], "armi.utils.tabulate.Line": [[419, 4, 1, "", "begin"], [419, 4, 1, "", "end"], [419, 4, 1, "", "hline"], [419, 4, 1, "", "sep"]], "armi.utils.tabulate.TableFormat": [[419, 4, 1, "", "datarow"], [419, 4, 1, "", "headerrow"], [419, 4, 1, "", "lineabove"], [419, 4, 1, "", "linebelow"], [419, 4, 1, "", "linebelowheader"], [419, 4, 1, "", "linebetweenrows"], [419, 4, 1, "", "padding"], [419, 4, 1, "", "withHeaderHide"]], "armi.utils.tabulate.TextWrapper": [[419, 3, 1, "", "fill"], [419, 4, 1, "", "sentence_end_re"], [419, 4, 1, "", "unicode_whitespace_trans"], [419, 4, 1, "", "uspace"], [419, 4, 1, "", "wordsep_re"], [419, 4, 1, "", "wordsep_simple_re"], [419, 3, 1, "", "wrap"], [419, 4, 1, "", "x"]], "armi.utils.tabulate.chain": [[419, 3, 1, "", "from_iterable"]], "armi.utils.tabulate.partial": [[419, 4, 1, "", "args"], [419, 4, 1, "", "func"], [419, 4, 1, "", "keywords"]], "armi.utils.tests": [[421, 0, 0, "-", "test_asciimaps"], [422, 0, 0, "-", "test_codeTiming"], [423, 0, 0, "-", "test_custom_exceptions"], [424, 0, 0, "-", "test_densityTools"], [425, 0, 0, "-", "test_directoryChangers"], [426, 0, 0, "-", "test_directoryChangersMpi"], [427, 0, 0, "-", "test_flags"], [428, 0, 0, "-", "test_hexagon"], [429, 0, 0, "-", "test_iterables"], [430, 0, 0, "-", "test_mathematics"], [431, 0, 0, "-", "test_outputCache"], [432, 0, 0, "-", "test_parsing"], [433, 0, 0, "-", "test_pathTools"], [434, 0, 0, "-", "test_plotting"], [435, 0, 0, "-", "test_properties"], [436, 0, 0, "-", "test_reportPlotting"], [437, 0, 0, "-", "test_tabulate"], [438, 0, 0, "-", "test_textProcessors"], [439, 0, 0, "-", "test_triangle"], [440, 0, 0, "-", "test_units"], [441, 0, 0, "-", "test_utils"]], "armi.utils.tests.test_asciimaps": [[421, 2, 1, "", "TestAsciiMaps"]], "armi.utils.tests.test_asciimaps.TestAsciiMaps": [[421, 3, 1, "", "test_cartesian"], [421, 3, 1, "", "test_flatHexBases"], [421, 3, 1, "", "test_hexFullCornersUp"], [421, 3, 1, "", "test_hexFullCornersUpSpotCheck"], [421, 3, 1, "", "test_hexFullFlat"], [421, 3, 1, "", "test_hexFullFlatsUp"], [421, 3, 1, "", "test_hexSmallFlat"], [421, 3, 1, "", "test_hexThird"], [421, 3, 1, "", "test_hexWithEmptyRow"], [421, 3, 1, "", "test_hexWithHoles"], [421, 3, 1, "", "test_troublesomeHexThird"]], "armi.utils.tests.test_codeTiming": [[422, 2, 1, "", "CodeTimingTest"]], "armi.utils.tests.test_codeTiming.CodeTimingTest": [[422, 3, 1, "", "test_alternate_usages"], [422, 3, 1, "", "test_master"], [422, 3, 1, "", "test_messy_starts_and_stops"], [422, 3, 1, "", "test_method_definitions"], [422, 3, 1, "", "test_property_access"]], "armi.utils.tests.test_custom_exceptions": [[423, 2, 1, "", "CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions.CustomExceptionTests": [[423, 3, 1, "", "exampleImportantMessage"], [423, 3, 1, "", "exampleInfoMessage"], [423, 3, 1, "", "exampleWarnMessage"], [423, 3, 1, "", "exampleWarnWhenRootMessage"], [423, 3, 1, "", "test_important_decorator"], [423, 3, 1, "", "test_info_decorator"], [423, 3, 1, "", "test_warn_decorator"], [423, 3, 1, "", "test_warn_when_root_decorator"]], "armi.utils.tests.test_densityTools": [[424, 2, 1, "", "TestDensityTools"], [424, 2, 1, "", "UraniumOxide"]], "armi.utils.tests.test_densityTools.TestDensityTools": [[424, 3, 1, "", "test_applyIsotopicsMix"], [424, 3, 1, "", "test_calculateNumberDensity"], [424, 3, 1, "", "test_expandElement"], [424, 3, 1, "", "test_expandElementalMassFracsToNuclides"], [424, 3, 1, "", "test_expandElementalZeroMassFrac"], [424, 3, 1, "", "test_formatMaterialCard"], [424, 3, 1, "", "test_getChemicals"], [424, 3, 1, "", "test_getMassFractions"], [424, 3, 1, "", "test_getMassInGrams"], [424, 3, 1, "", "test_getNDensFromMasses"], [424, 3, 1, "", "test_normalizeNuclideList"]], "armi.utils.tests.test_densityTools.UraniumOxide": [[424, 3, 1, "", "density"], [424, 3, 1, "", "pseudoDensity"]], "armi.utils.tests.test_directoryChangers": [[425, 7, 1, "", "ExpectedException"], [425, 2, 1, "", "TestDirectoryChangers"]], "armi.utils.tests.test_directoryChangers.TestDirectoryChangers": [[425, 3, 1, "", "test_change_to_nonexisting_fails"], [425, 3, 1, "", "test_change_to_nonexisting_works_forced"], [425, 3, 1, "", "test_exception"], [425, 3, 1, "", "test_exception_disabled"], [425, 3, 1, "", "test_file_retrieval"], [425, 3, 1, "", "test_file_retrieval_missing_file"], [425, 3, 1, "", "test_mpiAction"], [425, 3, 1, "", "test_mpiActionFailsOnNonexistentPath"], [425, 3, 1, "", "test_temporary_cleans"]], "armi.utils.tests.test_directoryChangersMpi": [[426, 2, 1, "", "RevealYourDirectory"], [426, 2, 1, "", "TestMPI"]], "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory": [[426, 3, 1, "", "invokeHook"]], "armi.utils.tests.test_directoryChangersMpi.TestMPI": [[426, 3, 1, "", "test_MpiDirectoryChanger"]], "armi.utils.tests.test_flags": [[427, 2, 1, "", "ExampleFlag"], [427, 2, 1, "", "TestFlag"]], "armi.utils.tests.test_flags.ExampleFlag": [[427, 4, 1, "", "BAR"], [427, 4, 1, "", "BAZ"], [427, 4, 1, "", "FOO"]], "armi.utils.tests.test_flags.TestFlag": [[427, 3, 1, "", "test_auto"], [427, 3, 1, "", "test_bitwise"], [427, 3, 1, "", "test_bool"], [427, 3, 1, "", "test_collision_creation"], [427, 3, 1, "", "test_collision_extension"], [427, 3, 1, "", "test_extend"], [427, 3, 1, "", "test_getitem"], [427, 3, 1, "", "test_hashable"], [427, 3, 1, "", "test_inclusion"], [427, 3, 1, "", "test_iteration"]], "armi.utils.tests.test_hexagon": [[428, 2, 1, "", "TestHexagon"]], "armi.utils.tests.test_hexagon.TestHexagon": [[428, 4, 1, "", "N_FUZZY_DRAWS"], [428, 3, 1, "", "test_hexagon_area"], [428, 3, 1, "", "test_indexWithNoRotation"], [428, 3, 1, "", "test_numPositionsInRing"], [428, 3, 1, "", "test_positionsUpToRing"], [428, 3, 1, "", "test_rotateFuzzy"], [428, 3, 1, "", "test_rotatedCellCenter"], [428, 3, 1, "", "test_rotatedCellIndexErrors"], [428, 3, 1, "", "test_rotatedCellOrientationErrors"], [428, 3, 1, "", "test_rotatedFirstRing"]], "armi.utils.tests.test_iterables": [[429, 2, 1, "", "TestIterables"]], "armi.utils.tests.test_iterables.TestIterables": [[429, 3, 1, "", "test_addingSequences"], [429, 3, 1, "", "test_appendSequence"], [429, 3, 1, "", "test_arrayPivot"], [429, 3, 1, "", "test_chunk"], [429, 3, 1, "", "test_copySequence"], [429, 3, 1, "", "test_extendSequence"], [429, 3, 1, "", "test_flatten"], [429, 3, 1, "", "test_listPivot"], [429, 3, 1, "", "test_packingAndUnpackingBinaryStrings"], [429, 3, 1, "", "test_packingAndUnpackingHexStrings"], [429, 3, 1, "", "test_sequence"], [429, 3, 1, "", "test_sequenceInit"], [429, 3, 1, "", "test_split"]], "armi.utils.tests.test_mathematics": [[430, 2, 1, "", "TestMath"]], "armi.utils.tests.test_mathematics.TestMath": [[430, 3, 1, "", "test_average1DWithinTolerance"], [430, 3, 1, "", "test_average1DWithinToleranceInvalid"], [430, 3, 1, "", "test_convertToSlice"], [430, 3, 1, "", "test_efmt"], [430, 3, 1, "", "test_expandRepeatedFloats"], [430, 3, 1, "", "test_findClosest"], [430, 3, 1, "", "test_findNearestValue"], [430, 3, 1, "", "test_fixThreeDigitExp"], [430, 3, 1, "", "test_getFloat"], [430, 3, 1, "", "test_getStepsFromValues"], [430, 3, 1, "", "test_isMonotonic"], [430, 3, 1, "", "test_linearInterpolation"], [430, 3, 1, "", "test_minimizeScalarFunc"], [430, 3, 1, "", "test_newtonsMethod"], [430, 3, 1, "", "test_parabola"], [430, 3, 1, "", "test_parabolicInterpolation"], [430, 3, 1, "", "test_relErr"], [430, 3, 1, "", "test_resampleStepwiseAvg0"], [430, 3, 1, "", "test_resampleStepwiseAvg1"], [430, 3, 1, "", "test_resampleStepwiseAvg2"], [430, 3, 1, "", "test_resampleStepwiseAvg3"], [430, 3, 1, "", "test_resampleStepwiseAvg4"], [430, 3, 1, "", "test_resampleStepwiseAvg5"], [430, 3, 1, "", "test_resampleStepwiseAvg6"], [430, 3, 1, "", "test_resampleStepwiseAvg7"], [430, 3, 1, "", "test_resampleStepwiseAvgAllNones"], [430, 3, 1, "", "test_resampleStepwiseAvgComplicatedNone"], [430, 3, 1, "", "test_resampleStepwiseAvgNpArray"], [430, 3, 1, "", "test_resampleStepwiseAvgNpArrayAverage"], [430, 3, 1, "", "test_resampleStepwiseAvgOneNone"], [430, 3, 1, "", "test_resampleStepwiseSum0"], [430, 3, 1, "", "test_resampleStepwiseSum1"], [430, 3, 1, "", "test_resampleStepwiseSum2"], [430, 3, 1, "", "test_resampleStepwiseSum3"], [430, 3, 1, "", "test_resampleStepwiseSum4"], [430, 3, 1, "", "test_resampleStepwiseSum5"], [430, 3, 1, "", "test_resampleStepwiseSum6"], [430, 3, 1, "", "test_resampleStepwiseSum7"], [430, 3, 1, "", "test_resampleStepwiseSumAllNones"], [430, 3, 1, "", "test_resampleStepwiseSumOneNone"], [430, 3, 1, "", "test_rotateXY"]], "armi.utils.tests.test_outputCache": [[431, 2, 1, "", "TestOutputCache"]], "armi.utils.tests.test_outputCache.TestOutputCache": [[431, 3, 1, "", "test_deleteCache"], [431, 3, 1, "", "test_getCachedFolder"], [431, 3, 1, "", "test_hashFiles"], [431, 3, 1, "", "test_makeOutputManifest"], [431, 3, 1, "", "test_retrieveOutput"]], "armi.utils.tests.test_parsing": [[432, 2, 1, "", "LiteralEvalTest"]], "armi.utils.tests.test_parsing.LiteralEvalTest": [[432, 3, 1, "", "test_parseValue"], [432, 3, 1, "", "test_tryLiteralEval"]], "armi.utils.tests.test_pathTools": [[433, 2, 1, "", "PathToolsTests"]], "armi.utils.tests.test_pathTools.PathToolsTests": [[433, 3, 1, "", "test_cleanPathNoMpi"], [433, 3, 1, "", "test_copyOrWarnDir"], [433, 3, 1, "", "test_copyOrWarnFile"], [433, 3, 1, "", "test_importCustomModule"], [433, 3, 1, "", "test_isAccessible"], [433, 3, 1, "", "test_isFilePathNewer"], [433, 3, 1, "", "test_moduleAndAttributeExist"], [433, 3, 1, "", "test_separateModuleAndAttribute"]], "armi.utils.tests.test_plotting": [[434, 2, 1, "", "TestPatches"], [434, 2, 1, "", "TestPlotting"]], "armi.utils.tests.test_plotting.TestPatches": [[434, 3, 1, "", "test_makeAssemPatches"]], "armi.utils.tests.test_plotting.TestPlotting": [[434, 3, 1, "", "test_plotAssemblyTypes"], [434, 3, 1, "", "test_plotBlockFlux"], [434, 3, 1, "", "test_plotCartesianBlock"], [434, 3, 1, "", "test_plotDepthMap"], [434, 3, 1, "", "test_plotHexBlock"]], "armi.utils.tests.test_properties": [[435, 2, 1, "", "ImmutableClass"], [435, 2, 1, "", "ImmutablePropertyTests"]], "armi.utils.tests.test_properties.ImmutableClass": [[435, 3, 1, "", "initialize"], [435, 5, 1, "", "myNum"]], "armi.utils.tests.test_properties.ImmutablePropertyTests": [[435, 3, 1, "", "test_cannotAssignValueToImmutableProperty"], [435, 3, 1, "", "test_retreivingUnassignedValueRaisesError"], [435, 3, 1, "", "test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "armi.utils.tests.test_reportPlotting": [[436, 2, 1, "", "TestRadar"]], "armi.utils.tests.test_reportPlotting.TestRadar": [[436, 3, 1, "", "test_createPlotMetaData"], [436, 3, 1, "", "test_keffVsTime"], [436, 3, 1, "", "test_movesVsCycle"], [436, 3, 1, "", "test_plotAxialProfile"], [436, 3, 1, "", "test_radar"], [436, 3, 1, "", "test_valueVsTime"], [436, 3, 1, "", "test_xsHistoryVsTime"]], "armi.utils.tests.test_tabulate": [[437, 2, 1, "", "TestTabulateAPI"], [437, 2, 1, "", "TestTabulateInputs"], [437, 2, 1, "", "TestTabulateInternal"], [437, 2, 1, "", "TestTabulateOutput"]], "armi.utils.tests.test_tabulate.TestTabulateAPI": [[437, 3, 1, "", "test_tabulateFormats"]], "armi.utils.tests.test_tabulate.TestTabulateInputs": [[437, 3, 1, "", "test_dictLike"], [437, 3, 1, "", "test_iterableOfEmpties"], [437, 3, 1, "", "test_iterableOfIterables"], [437, 3, 1, "", "test_iterableOfIterablesFirstrow"], [437, 3, 1, "", "test_iterableOfIterablesHeaders"], [437, 3, 1, "", "test_listBytes"], [437, 3, 1, "", "test_listOfDicts"], [437, 3, 1, "", "test_listOfDictsFirstrow"], [437, 3, 1, "", "test_listOfDictsKeys"], [437, 3, 1, "", "test_listOfDictsWithDictOfHeaders"], [437, 3, 1, "", "test_listOfDictsWithListOfHeaders"], [437, 3, 1, "", "test_listOfDictsWithMissingKeys"], [437, 3, 1, "", "test_listOfLists"], [437, 3, 1, "", "test_listOfListsFirstrow"], [437, 3, 1, "", "test_listOfListsKeys"], [437, 3, 1, "", "test_listOfNamedtuples"], [437, 3, 1, "", "test_listOfNamedtuplesKeys"], [437, 3, 1, "", "test_listOfOrdereddicts"], [437, 3, 1, "", "test_listOfUserdicts"], [437, 3, 1, "", "test_listOfUserdictsKeys"], [437, 3, 1, "", "test_numpy2d"], [437, 3, 1, "", "test_numpy2dFirstrow"], [437, 3, 1, "", "test_numpy2dKeys"], [437, 3, 1, "", "test_numpyRecordArray"], [437, 3, 1, "", "test_numpyRecordArrayHeaders"], [437, 3, 1, "", "test_numpyRecordArrayKeys"], [437, 3, 1, "", "test_tightCouplingExample"]], "armi.utils.tests.test_tabulate.TestTabulateInternal": [[437, 3, 1, "", "test_alignCellVeriticallyBottomMultiTextMultiplePad"], [437, 3, 1, "", "test_alignCellVeriticallyBottomSingleTextMultiplePad"], [437, 3, 1, "", "test_alignCellVeriticallyCenterMultiTextMultiplePad"], [437, 3, 1, "", "test_alignCellVeriticallyCenterSingleTextMultiplePad"], [437, 3, 1, "", "test_alignCellVeriticallyOneLineOnly"], [437, 3, 1, "", "test_alignCellVeriticallyTopMultiTextMultiplePad"], [437, 3, 1, "", "test_alignCellVeriticallyTopSingleTextMultiplePad"], [437, 3, 1, "", "test_alignColumnDecimal"], [437, 3, 1, "", "test_alignColumnDecimalWithIncorrectThousandSeparators"], [437, 3, 1, "", "test_alignColumnDecimalWithThousandSeparators"], [437, 3, 1, "", "test_alignColumnMultiline"], [437, 3, 1, "", "test_alignColumnNone"], [437, 3, 1, "", "test_assortedRareEdgeCases"], [437, 3, 1, "", "test_bool"], [437, 3, 1, "", "test_buildLine"], [437, 3, 1, "", "test_buildRow"], [437, 3, 1, "", "test_format"], [437, 3, 1, "", "test_isMultiline"], [437, 3, 1, "", "test_multilineWidth"], [437, 3, 1, "", "test_normalizeTabularData"], [437, 3, 1, "", "test_type"], [437, 3, 1, "", "test_visibleWidth"], [437, 3, 1, "", "test_wrapTextToColWidths"]], "armi.utils.tests.test_tabulate.TestTabulateOutput": [[437, 3, 1, "", "test_colAlignMulti"], [437, 3, 1, "", "test_colAlignMultiWithSepLine"], [437, 3, 1, "", "test_colAlignOrheadersAlignTooLong"], [437, 3, 1, "", "test_columnAlignment"], [437, 3, 1, "", "test_columnGlobalAndSpecificAlignment"], [437, 3, 1, "", "test_dictLikeWithIndex"], [437, 3, 1, "", "test_disableNumParseDefault"], [437, 3, 1, "", "test_disableNumParseList"], [437, 3, 1, "", "test_disableNumParseTrue"], [437, 3, 1, "", "test_emptyData"], [437, 3, 1, "", "test_emptyDataWithHeaders"], [437, 3, 1, "", "test_emptyDataWithoutHeaders"], [437, 3, 1, "", "test_floatConversions"], [437, 3, 1, "", "test_floatFmt"], [437, 3, 1, "", "test_floatFmtMulti"], [437, 3, 1, "", "test_github"], [437, 3, 1, "", "test_grid"], [437, 3, 1, "", "test_gridHeaderless"], [437, 3, 1, "", "test_gridMultiline"], [437, 3, 1, "", "test_gridMultilineHeaderless"], [437, 3, 1, "", "test_gridMultilineWithEmptyCells"], [437, 3, 1, "", "test_gridMultilineWithEmptyCellsHeaderless"], [437, 3, 1, "", "test_headersGlobalAndSpecificAlignment"], [437, 3, 1, "", "test_intFmt"], [437, 3, 1, "", "test_listOfListsWithIndex"], [437, 3, 1, "", "test_listOfListsWithIndexFirstrow"], [437, 3, 1, "", "test_listOfListsWithIndexWithSepLine"], [437, 3, 1, "", "test_listOfListsWithSuppliedIndex"], [437, 3, 1, "", "test_maxColWidthsingleValue"], [437, 3, 1, "", "test_maxcolwidthHonorDisableParsenum"], [437, 3, 1, "", "test_maxcolwidthPadTailingWidths"], [437, 3, 1, "", "test_missingVal"], [437, 3, 1, "", "test_missingValMulti"], [437, 3, 1, "", "test_noData"], [437, 3, 1, "", "test_noDataWithoutHeaders"], [437, 3, 1, "", "test_plain"], [437, 3, 1, "", "test_plainHeaderless"], [437, 3, 1, "", "test_plainMaxcolwidthAutowraps"], [437, 3, 1, "", "test_plainMaxcolwidthAutowrapsWithSep"], [437, 3, 1, "", "test_plainMultiline"], [437, 3, 1, "", "test_plainMultilineHeaderless"], [437, 3, 1, "", "test_plainMultilineWithEmptyCells"], [437, 3, 1, "", "test_plainMultilineWithEmptyCellsHeaderless"], [437, 3, 1, "", "test_plainMultilineWithLinks"], [437, 3, 1, "", "test_plainmaxHeaderColWidthsAutowraps"], [437, 3, 1, "", "test_pretty"], [437, 3, 1, "", "test_prettyHeaderless"], [437, 3, 1, "", "test_prettyMultiline"], [437, 3, 1, "", "test_prettyMultilineHeaderless"], [437, 3, 1, "", "test_prettyMultilineWithEmptyCells"], [437, 3, 1, "", "test_prettyMultilineWithEmptyCellsHeaderless"], [437, 3, 1, "", "test_prettyMultilineWithLinks"], [437, 3, 1, "", "test_readmeExampleWithSep"], [437, 3, 1, "", "test_rst"], [437, 3, 1, "", "test_rstHeaderless"], [437, 3, 1, "", "test_rstMultiline"], [437, 3, 1, "", "test_rstMultilineWithEmptyCells"], [437, 3, 1, "", "test_rstMultilineWithEmptyCellsHeaderless"], [437, 3, 1, "", "test_rstMultilineWithLinks"], [437, 3, 1, "", "test_rstWithEmptyValuesInFirstColumn"], [437, 3, 1, "", "test_simple"], [437, 3, 1, "", "test_simpleHeaderless"], [437, 3, 1, "", "test_simpleHeaderlessWithSepLine"], [437, 3, 1, "", "test_simpleMultiline"], [437, 3, 1, "", "test_simpleMultiline2"], [437, 3, 1, "", "test_simpleMultiline2WithSepLine"], [437, 3, 1, "", "test_simpleMultilineHeaderless"], [437, 3, 1, "", "test_simpleMultilineWithEmptyCells"], [437, 3, 1, "", "test_simpleMultilineWithEmptyCellsHeaderless"], [437, 3, 1, "", "test_simpleMultilineWithLinks"], [437, 3, 1, "", "test_simpleWithSepLine"]], "armi.utils.tests.test_textProcessors": [[438, 2, 1, "", "SequentialReaderTests"], [438, 2, 1, "", "TestTextProcessor"], [438, 2, 1, "", "YamlIncludeTest"]], "armi.utils.tests.test_textProcessors.SequentialReaderTests": [[438, 3, 1, "", "test_consumeLine"], [438, 3, 1, "", "test_issueWarningOnFindingText"], [438, 3, 1, "", "test_raiseErrorOnFindingText"], [438, 3, 1, "", "test_readFile"], [438, 3, 1, "", "test_readFileWithPattern"], [438, 4, 1, "", "textStream"]], "armi.utils.tests.test_textProcessors.TestTextProcessor": [[438, 3, 1, "", "test_fsearch"], [438, 3, 1, "", "test_fsearchText"]], "armi.utils.tests.test_textProcessors.YamlIncludeTest": [[438, 3, 1, "", "test_findIncludes"], [438, 3, 1, "", "test_resolveIncludes"], [438, 3, 1, "", "test_resolveIncludes_StringIO"]], "armi.utils.tests.test_triangle": [[439, 2, 1, "", "TestTriangle"]], "armi.utils.tests.test_triangle.TestTriangle": [[439, 3, 1, "", "test_checkIfPointIsInTriangle"], [439, 3, 1, "", "test_checkIfPointIsInTriangle2"], [439, 3, 1, "", "test_getTriangleArea"]], "armi.utils.tests.test_units": [[440, 2, 1, "", "TestUnits"]], "armi.utils.tests.test_units.TestUnits": [[440, 3, 1, "", "test_convertXtoPascal"], [440, 3, 1, "", "test_getTc"], [440, 3, 1, "", "test_getTemperature"], [440, 3, 1, "", "test_getTf"], [440, 3, 1, "", "test_getTk"], [440, 3, 1, "", "test_getTmev"], [440, 3, 1, "", "test_getXYLineParameters"], [440, 3, 1, "", "test_pressure_converter"], [440, 3, 1, "", "test_sanitizeAngle"]], "armi.utils.tests.test_utils": [[441, 2, 1, "", "CyclesSettingsTests"], [441, 2, 1, "", "TestGeneralUtils"]], "armi.utils.tests.test_utils.CyclesSettingsTests": [[441, 4, 1, "", "availabilityFactorsDetailedSolution"], [441, 4, 1, "", "availabilityFactorsSimpleSolution"], [441, 4, 1, "", "burnStepsDetailedSolution"], [441, 4, 1, "", "burnStepsSimpleSolution"], [441, 4, 1, "", "cycleLengthsDetailedSolution"], [441, 4, 1, "", "cycleLengthsSimpleSolution"], [441, 4, 1, "", "cycleNamesDetailedSolution"], [441, 4, 1, "", "cycleNamesSimpleSolution"], [441, 4, 1, "", "detailedCyclesSettings"], [441, 4, 1, "", "maxBurnStepsDetailedSolution"], [441, 4, 1, "", "maxBurnStepsSimpleSolution"], [441, 4, 1, "", "nodesPerCycleDetailedSolution"], [441, 4, 1, "", "nodesPerCycleSimpleSolution"], [441, 4, 1, "", "powerFractionsDetailedSolution"], [441, 4, 1, "", "powerFractionsSimpleSolution"], [441, 4, 1, "", "simpleCyclesSettings"], [441, 4, 1, "", "stepLengthsDetailedSolution"], [441, 4, 1, "", "stepLengthsSimpleSolution"], [441, 3, 1, "", "test_getAvailabilityFactors"], [441, 3, 1, "", "test_getBurnSteps"], [441, 3, 1, "", "test_getCumulativeNodeNum"], [441, 3, 1, "", "test_getCycleLengths"], [441, 3, 1, "", "test_getCycleNames"], [441, 3, 1, "", "test_getCycleNodeFromCumulativeNode"], [441, 3, 1, "", "test_getCycleNodeFromCumulativeStep"], [441, 3, 1, "", "test_getMaxBurnSteps"], [441, 3, 1, "", "test_getNodesPerCycle"], [441, 3, 1, "", "test_getPowerFractions"], [441, 3, 1, "", "test_getPreviousTimeNode"], [441, 3, 1, "", "test_getStepLengths"], [441, 3, 1, "", "test_hasBurnup"]], "armi.utils.tests.test_utils.TestGeneralUtils": [[441, 3, 1, "", "test_capStrLen"], [441, 3, 1, "", "test_classesInHierarchy"], [441, 3, 1, "", "test_codeTiming"], [441, 3, 1, "", "test_createFormattedStrWithDelimiter"], [441, 3, 1, "", "test_getFileSHA1Hash"], [441, 3, 1, "", "test_getFileSHA1HashDir"], [441, 3, 1, "", "test_list2str"], [441, 3, 1, "", "test_mergeableDictionary"], [441, 3, 1, "", "test_plotMatrix"], [441, 3, 1, "", "test_prependToList"], [441, 3, 1, "", "test_safeCopy"], [441, 3, 1, "", "test_safeMove"], [441, 3, 1, "", "test_safeMoveDir"], [441, 3, 1, "", "test_slantSplit"]], "armi.utils.textProcessors": [[442, 6, 1, "", "DECIMAL_PATTERN"], [442, 6, 1, "", "FLOATING_PATTERN"], [442, 2, 1, "", "FileMark"], [442, 6, 1, "", "SCIENTIFIC_PATTERN"], [442, 2, 1, "", "SequentialReader"], [442, 2, 1, "", "SequentialStringIOReader"], [442, 2, 1, "", "TextProcessor"], [442, 1, 1, "", "findYamlInclusions"], [442, 1, 1, "", "resolveMarkupInclusions"]], "armi.utils.textProcessors.SequentialReader": [[442, 3, 1, "", "consumeLine"], [442, 3, 1, "", "issueWarningOnFindingText"], [442, 3, 1, "", "raiseErrorOnFindingPattern"], [442, 3, 1, "", "raiseErrorOnFindingText"], [442, 3, 1, "", "searchForPattern"], [442, 3, 1, "", "searchForPatternOnNextLine"], [442, 3, 1, "", "searchForText"]], "armi.utils.textProcessors.TextProcessor": [[442, 3, 1, "", "checkErrors"], [442, 4, 1, "", "decimal"], [442, 3, 1, "", "errorChecking"], [442, 3, 1, "", "fsearch"], [442, 4, 1, "", "number"], [442, 3, 1, "", "reset"], [442, 4, 1, "", "scipat"]], "armi.utils.triangle": [[443, 1, 1, "", "checkIfPointIsInTriangle"], [443, 1, 1, "", "getTriangleArea"], [443, 1, 1, "", "getTriangleCentroid"]], "armi.utils.units": [[444, 1, 1, "", "convertAtmToPascal"], [444, 1, 1, "", "convertBarToPascal"], [444, 1, 1, "", "convertMmhgToPascal"], [444, 1, 1, "", "getTc"], [444, 1, 1, "", "getTemperature"], [444, 1, 1, "", "getTf"], [444, 1, 1, "", "getTk"], [444, 1, 1, "", "getTmev"], [444, 1, 1, "", "getXYLineParameters"], [444, 1, 1, "", "sanitizeAngle"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"armi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 451, 452, 453, 454, 455, 456, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 507, 508], "packag": [0, 2, 3, 13, 23, 30, 34, 38, 41, 47, 49, 53, 58, 61, 74, 80, 119, 145, 149, 153, 157, 165, 166, 181, 197, 204, 210, 213, 216, 223, 229, 234, 239, 245, 249, 252, 254, 256, 259, 266, 273, 274, 276, 281, 285, 290, 297, 306, 313, 314, 321, 324, 336, 345, 354, 369, 371, 379, 383, 400, 420, 446, 456, 496], "note": [0, 1, 3, 5, 7, 8, 10, 11, 16, 20, 21, 29, 48, 50, 51, 55, 56, 57, 75, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 103, 104, 105, 106, 111, 112, 113, 115, 116, 117, 140, 141, 142, 143, 152, 154, 155, 156, 160, 161, 164, 166, 167, 168, 172, 173, 174, 175, 176, 177, 180, 185, 192, 198, 199, 201, 202, 203, 205, 206, 208, 209, 212, 214, 215, 216, 217, 220, 221, 224, 225, 228, 238, 239, 241, 242, 244, 246, 250, 253, 255, 257, 260, 267, 268, 284, 286, 289, 290, 293, 294, 295, 296, 306, 307, 308, 309, 311, 312, 315, 316, 317, 318, 319, 320, 323, 325, 327, 331, 332, 338, 340, 341, 342, 343, 348, 350, 351, 353, 356, 357, 364, 367, 370, 375, 376, 381, 383, 390, 400, 401, 404, 405, 406, 410, 412, 413, 415, 416, 434, 442, 443, 444, 456, 486, 487, 488, 489, 490, 491], "subpackag": [0, 2, 3, 23, 38, 47, 49, 61, 80, 145, 153, 165, 166, 204, 213, 216, 229, 239, 245, 252, 256, 276, 285, 290, 313, 369, 400], "submodul": [0, 2, 3, 13, 23, 30, 34, 38, 41, 47, 49, 53, 58, 61, 74, 80, 119, 145, 149, 153, 157, 165, 166, 181, 197, 204, 210, 213, 216, 223, 229, 234, 239, 245, 249, 252, 254, 256, 259, 266, 274, 276, 281, 285, 290, 297, 306, 313, 314, 321, 324, 336, 345, 354, 369, 371, 379, 383, 400, 420, 494], "app": [1, 451, 494], "modul": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 253, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 456], "bookkeep": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "db": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "when": 3, "updat": [3, 446, 485, 514], "version": [3, 456], "databas": [3, 5, 20, 66, 492, 509], "revis": 3, "changelog": 3, "comparedb3": 4, "database3": 6, "databaseinterfac": 7, "factori": [8, 497], "jaggedarrai": 9, "layout": 10, "passivedbloadplugin": 11, "permiss": 12, "test": [13, 14, 15, 16, 17, 18, 30, 31, 32, 34, 35, 36, 37, 41, 42, 43, 53, 54, 55, 58, 59, 60, 74, 75, 76, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 149, 150, 151, 157, 158, 159, 160, 161, 162, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 210, 211, 212, 223, 224, 225, 226, 227, 234, 235, 236, 237, 249, 250, 251, 254, 255, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 274, 275, 281, 282, 297, 298, 299, 300, 301, 302, 303, 304, 305, 324, 325, 326, 327, 328, 329, 330, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 448, 455, 456], "test_comparedb3": 14, "test_database3": 15, "test_databaseinterfac": 16, "test_jaggedarrai": 17, "test_layout": 18, "typedef": 19, "historytrack": 20, "get": [20, 449, 484, 485, 514], "histori": [20, 484, 507, 509], "inform": 20, "us": [20, 166, 446, 452, 455, 484], "base": [20, 146, 153, 451, 494], "tracker": 20, "specifi": [20, 498], "paramet": [20, 231, 263, 278, 289, 345, 346, 347, 348, 349, 449, 455, 497, 502, 503, 504, 505, 512, 513], "add": [20, 456], "eol": 20, "report": [20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 264, 454, 501, 507], "block": [20, 289, 456, 463, 468, 470, 498, 499, 503, 507, 510, 513], "assembli": [20, 286, 498, 499, 502, 507], "track": 20, "maininterfac": 21, "memoryprofil": 22, "data": [24, 449, 455, 496, 508, 513], "html": [25, 454], "newreportutil": 26, "newreport": 27, "reportinterfac": 28, "reportingutil": 29, "test_newreport": 31, "test_report": 32, "snapshotinterfac": 33, "test_historytrack": 35, "test_memoryprofil": 36, "test_snapshot": 37, "visual": [38, 39, 40, 41, 42, 43, 44, 45, 46], "dumper": 39, "entrypoint": [40, 67], "test_vi": 42, "test_xdmf": 43, "util": [44, 228, 238, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444], "vtk": 45, "limit": 45, "xdmf": [46, 494], "case": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 484, 507], "inputmodifi": [49, 50, 51, 52, 53, 54, 55], "neutronicsmodifi": 51, "pintypeinputmodifi": 52, "test_inputmodifi": 54, "test_pintypeinputmodifi": 55, "suit": 56, "suitebuild": 57, "test_cas": 59, "test_suitebuild": 60, "cli": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "checkinput": 62, "cleantemp": 63, "clone": 64, "comparecas": 65, "gridgui": 68, "migrateinput": 69, "modifi": [70, 492, 497], "reportsentrypoint": 71, "run": [72, 455, 494, 507], "runsuit": 73, "test_runentrypoint": 75, "test_runsuit": 76, "conftest": 77, "context": 78, "interfac": [79, 449, 494, 510], "materi": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 462, 477, 494, 495], "air": 81, "alloy200": 82, "b4c": 83, "be9": 84, "cah2": 85, "californium": 86, "concret": 87, "copper": 88, "c": 89, "custom": [90, 494, 499, 507], "graphit": 91, "hafnium": 92, "hastelloyn": 93, "ht9": 94, "inconel": 95, "inconel600": 96, "inconel625": 97, "inconel800": 98, "inconelpe16": 99, "inconelx750": 100, "lead": 101, "leadbismuth": 102, "lithium": [103, 496], "magnesium": 104, "mgo": 106, "mixtur": 107, "molybdenum": 108, "mox": [109, 499], "nz": 110, "potassium": 111, "scandiumoxid": 112, "sic": 113, "sodium": 114, "sodiumchlorid": 115, "sulfur": 116, "tzm": 117, "tantalum": 118, "test__init__": 120, "test_air": 121, "test_b4c": 122, "test_be9": 123, "test_graphit": 124, "test_lithium": 125, "test_materi": 126, "test_sic": 127, "test_sulfur": 128, "test_thoriumoxid": 129, "test_uzr": 130, "test_wat": 131, "thu": 132, "thorium": 133, "thoriumoxid": 134, "uthzr": 135, "uzr": 136, "uranium": 137, "uraniumoxid": 138, "void": 139, "water": 140, "yttriumoxid": 141, "zincoxid": 142, "zr": 143, "meta": 144, "migrat": [145, 146, 147, 148, 149, 150, 151], "m0_1_3": 147, "m0_1_6": 148, "test_m0_1_6": 150, "test_migration_bas": 151, "mpiaction": 152, "sampl": 152, "mpi": [152, 452], "action": 152, "workflow": 152, "nucdirectori": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "element": [153, 154, 454, 496], "nuclid": [153, 469, 496, 499, 507], "name": [153, 455, 507], "label": [153, 175], "id": 153, "indic": 153, "rapid": 153, "access": [153, 496, 501, 508], "list": [154, 477, 494], "nucdir": 155, "nuclidebas": 156, "test_el": 158, "test_nucdirectori": 159, "test_nuclidebas": 160, "test_thermalscatt": 161, "test_transmut": 162, "thermalscatt": 163, "transmut": [164, 480], "nucleardataio": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "cccc": [166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "system": [166, 484, 499, 507], "implement": [166, 451], "detail": [166, 451, 469, 507], "discuss": 166, "compx": 168, "dif3d": 169, "dlayx": 170, "fixsrc": 171, "gamiso": 172, "geodst": 173, "isotx": [174, 475], "nhflux": 176, "pmatrx": 177, "pwdint": 178, "rtflux": 179, "rzflux": 180, "test_cccc": 182, "test_compx": 183, "test_dif3d": 184, "test_dlayx": 185, "test_fixsrc": 186, "test_gamiso": 187, "test_geodst": 188, "test_isotx": 189, "test_label": 190, "test_nhflux": 191, "test_pmatrx": 192, "test_pwdint": 193, "test_rtflux": 194, "test_rzflux": 195, "nuclearfilemetadata": 196, "test_xscollect": 198, "test_xslibrari": 199, "test_xsnuclid": 200, "xscollect": 201, "xslibrari": 202, "xsnuclid": 203, "oper": [204, 205, 206, 207, 208, 209, 210, 211, 212, 449, 484, 507], "operatormpi": 206, "runtyp": 207, "settingsvalid": [208, 378], "snapshot": [209, 449], "test_operatorsnapshot": 211, "test_oper": 212, "physic": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 484, 494, 510], "histor": 213, "fun": 213, "fact": 213, "constant": [214, 339], "execut": [215, 230], "fuelcycl": [216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "assemblyrotationalgorithm": 217, "fuelhandlerfactori": 218, "fuelhandlerinterfac": 219, "fuelhandl": 220, "hexassemblyfuelmgmtutil": 221, "set": [222, 233, 265, 280, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 494, 498, 499, 507, 508, 509], "test_assemblyrotationalgorithm": 224, "test_fuelhandl": 225, "test_hexassemblyfuelmgmtutil": 226, "test_util": [227, 441], "fuelperform": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "plugin": [232, 279, 284, 446, 449, 451, 494, 507], "test_execut": [235, 275], "test_fuelperformanceplugin": 236, "test_fuelperformanceutil": 237, "neutron": [239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "const": [240, 277], "crosssectiongroupmanag": 241, "crosssectionset": 242, "diffisotx": 243, "energygroup": 244, "fissionproductmodel": [245, 246, 247, 248, 249, 250, 251], "fissionproductmodelset": 247, "lumpedfissionproduct": 248, "test_fissionproductmodel": 250, "test_lumpedfissionproduct": 251, "globalflux": [252, 253, 254, 255], "globalfluxinterfac": 253, "test_globalfluxinterfac": 255, "latticephys": [256, 257, 258, 259, 260, 261], "latticephysicsinterfac": 257, "latticephysicswrit": 258, "test_latticeinterfac": 260, "test_latticewrit": 261, "macroxsgenerationinterfac": 262, "test_crosssectionmanag": 267, "test_crosssectionset": 268, "test_crosssectiont": 269, "test_energygroup": 270, "test_macroxsgenerationinterfac": 271, "test_neutronicsplugin": 272, "safeti": 273, "thermalhydraul": [276, 277, 278, 279, 280, 281, 282], "test_thermalhydraulicsplugin": 282, "pluginmanag": 283, "reactor": [285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 449, 464, 478, 479, 492, 497, 498, 499, 509, 512], "assemblyparamet": 287, "blockparamet": 288, "blueprint": [290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 449, 498, 499, 507, 509, 513], "assemblyblueprint": 291, "blockblueprint": 292, "componentblueprint": 293, "gridblueprint": 294, "isotopicopt": 295, "reactorblueprint": 296, "test_assemblyblueprint": 298, "test_blockblueprint": 299, "test_blueprint": 300, "test_componentblueprint": 301, "test_customisotop": 302, "test_gridblueprint": 303, "test_materialmodif": 304, "test_reactorblueprint": 305, "compon": [306, 307, 308, 309, 310, 311, 468, 504, 507, 513], "basicshap": 307, "complexshap": 308, "componentparamet": 310, "volumetricshap": 311, "composit": 312, "convert": [313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 449], "axialexpansionchang": [314, 315, 316, 317], "assemblyaxiallinkag": 315, "expansiondata": 317, "blockconvert": 318, "geometryconvert": 319, "meshconvert": 320, "parametersweep": [321, 322], "generalparametersweepconvert": 322, "pintypeblockconvert": 323, "test_axialexpansionchang": 325, "test_blockconvert": 326, "test_geometryconvert": 327, "test_meshconvert": 328, "test_pintypeblockconvert": 329, "test_uniformmesh": 330, "uniformmesh": 331, "requir": [331, 456, 484, 489], "core": [332, 498, 505], "excorestructur": 333, "flag": [334, 408, 499, 507], "geometri": [335, 463, 464], "grid": [336, 337, 338, 339, 340, 341, 342, 343, 344, 472, 473, 474, 499, 507, 513], "axial": [337, 511], "cartesian": [338, 473], "hexagon": [341, 410], "locat": [342, 513], "structuredgrid": 343, "thetarz": 344, "exampl": [345, 452, 507], "basic": 345, "usag": [345, 413, 419], "design": [345, 497], "consider": 345, "except": [346, 455], "parametercollect": 347, "parameterdefinit": 348, "resolvecollect": 349, "reactorparamet": 350, "spentfuelpool": 352, "systemlayoutinput": 353, "test_assembli": 355, "test_block": 356, "test_compon": 357, "test_composit": 358, "test_excorestructur": 359, "test_flag": [360, 427], "test_geometri": 361, "test_hexblockrot": 362, "test_paramet": 363, "test_reactor": 364, "test_rz_reactor": 365, "test_zon": 366, "zone": 367, "runlog": [368, 456], "caseset": 370, "fwset": [371, 372, 373, 374, 375], "databaseset": 372, "globalset": 373, "reportset": 374, "tightcouplingset": 375, "settingsio": 377, "test_inspector": 380, "test_set": 381, "test_settingsio": 382, "mockrunlog": 384, "refsmallreactorshufflelog": 385, "test_app": 386, "test_armitesthelp": 387, "test_cartesian": 388, "test_context": 389, "test_interfac": 390, "test_lwrinput": 391, "test_mpiact": 392, "test_mpifeatur": 393, "test_mpiparamet": 394, "test_notebook": 395, "test_plugin": 396, "test_runlog": 397, "test_test": 398, "test_user_plugin": 399, "asciimap": 401, "codetim": 402, "customexcept": 403, "densitytool": 404, "directorychang": 405, "directorychangersmpi": 406, "dynamicimport": 407, "grideditor": 409, "iter": 411, "mathemat": 412, "outputcach": 413, "api": [413, 486, 489, 490], "pars": [414, 419], "pathtool": 415, "plot": [416, 469, 475, 476, 479, 496], "properti": 417, "reportplot": 418, "tabul": 419, "tabl": [419, 454], "header": 419, "column": 419, "align": 419, "format": [419, 455, 494, 509], "number": [419, 492], "width": 419, "auto": [419, 513], "line": 419, "wrap": 419, "test_asciimap": 421, "test_codetim": 422, "test_custom_except": 423, "test_densitytool": 424, "test_directorychang": 425, "test_directorychangersmpi": 426, "test_hexagon": 428, "test_iter": 429, "test_mathemat": 430, "test_outputcach": 431, "test_pars": 432, "test_pathtool": 433, "test_plot": 434, "test_properti": 435, "test_reportplot": 436, "test_tabul": 437, "test_textprocessor": 438, "test_triangl": 439, "test_unit": 440, "textprocessor": 442, "triangl": 443, "unit": [444, 455], "document": [446, 456], "build": [446, 478, 487, 498, 499], "link": [446, 484, 507], "from": [446, 475, 492, 502, 503, 504, 505, 512], "automat": [446, 468], "apidoc": 446, "namespac": 446, "galleri": [446, 457, 482, 500], "jupyt": 446, "notebook": 446, "entri": [447, 449, 494, 501], "point": [447, 449, 494, 501], "first": [448, 494], "time": [448, 465, 481], "contributor": 448, "guid": 448, "help": [448, 484], "want": 448, "submit": 448, "chang": [448, 486, 487, 489, 490], "licens": [448, 456, 484], "tool": [448, 456], "framework": [449, 460, 467, 482, 496, 500, 502, 503, 504, 505, 512], "architectur": 449, "The": [449, 454, 484, 485, 495, 496, 499, 507, 509, 510, 514], "model": [449, 455, 492], "find": 449, "object": 449, "standard": [449, 455, 509], "stack": 449, "interact": [449, 513], "hook": [449, 454], "ad": [449, 494], "new": [449, 456, 484, 487, 488, 489, 490, 494], "how": [449, 496, 498], "call": 449, "develop": [450, 485, 514], "doc": [450, 506], "make": [451, 472, 473, 474, 494, 507], "head": 451, "up": [451, 496, 498, 499], "some": [451, 507, 508], "your": [451, 494], "own": 451, "applic": [451, 459, 466, 482, 500], "parallel": 452, "code": [452, 455, 485, 514], "commun": [452, 484], "crash": 452, "cours": 452, "within": [452, 455], "bcast": 452, "scatter": [452, 476], "A": [452, 497], "simplifi": 452, "approach": 452, "profil": 453, "getreportcont": 454, "what": [454, 487, 488, 494, 499], "i": [454, 456], "reportcont": 454, "section": [454, 507], "imag": 454, "timeseri": 454, "summari": 454, "practic": 455, "black": 455, "address": 455, "ruff": 455, "warn": 455, "remov": 455, "comment": 455, "out": 455, "avoid": 455, "hard": 455, "global": [455, 510], "keyword": 455, "convent": 455, "meaning": 455, "gener": 455, "quick": [455, 484], "refer": 455, "common": 455, "prefer": 455, "shorter": 455, "method": 455, "repeat": 455, "public": 455, "should": 455, "have": 455, "docstr": 455, "import": 455, "statement": 455, "order": 455, "don": [455, 456], "t": [455, 456], "creat": [455, 494], "nake": 455, "input": [455, 478, 485, 498, 499, 507, 514], "file": [455, 494, 498, 499, 507, 509], "do": 455, "": [455, 487, 488], "infrastructur": 456, "good": 456, "commit": 456, "messag": 456, "pull": 456, "request": 456, "One": 456, "idea": 456, "pr": 456, "open": 456, "until": 456, "readi": 456, "It": 456, "watch": 456, "releas": [456, 486, 487, 488, 489, 490, 491], "depend": 456, "manag": [456, 492, 498, 499, 507], "pyproject": 456, "toml": 456, "third": 456, "parti": 456, "log": 456, "duplic": 456, "level": 456, "analysi": [458, 461, 482, 484, 500], "write": 462, "mcnp": 462, "card": 462, "hex": [463, 464, 472], "rz": [463, 464], "convers": [463, 464], "comput": [465, 468, 470, 481], "volum": 468, "fraction": 468, "thermal": [468, 494, 499, 511], "expans": [468, 511], "chart": [469, 496], "more": 469, "reaction": [470, 480], "rate": 470, "theta": 474, "r": 474, "z": 474, "multi": [475, 476], "group": [475, 476], "x": 475, "matrix": 476, "librari": [477, 485, 495, 514], "programmat": 478, "facemap": 479, "decai": 480, "glossari": 483, "start": [484, 494], "background": 484, "coupl": [484, 510], "autom": 484, "capabl": 484, "research": 484, "scientist": 484, "nuclear": 484, "startup": 484, "engin": 484, "vendor": 484, "enthusiast": 484, "disclaim": 484, "instal": [485, 514], "prerequisit": [485, 514], "right": [485, 514], "python": [485, 494, 514], "command": [485, 514], "prepar": [485, 514], "virtual": [485, 514], "environ": [485, 507, 514], "step": [485, 514], "0": [485, 486, 487, 488, 489, 490, 514], "pip": [485, 514], "option": [485, 514], "1": [485, 486, 487, 490, 492, 514], "2": [485, 486, 487, 514], "repositori": [485, 514], "verifi": [485, 514], "setup": [485, 514], "gui": [485, 507, 514], "output": [485, 494, 509, 514], "v0": [486, 487, 488, 489, 490], "7": [486, 487, 496], "bug": [486, 487, 488, 489, 490], "fix": [486, 487, 488, 489, 490], "6": [486, 487], "deprec": 486, "bugfix": 486, "5": [486, 487, 490], "user": [486, 506], "face": 486, "enhanc": 486, "backend": 486, "4": [486, 487, 489], "3": [486, 487, 488, 499], "hotfix": 486, "9": 487, "8": 487, "backward": 487, "incompat": 487, "qualiti": [488, 489, 490], "work": [488, 489, 490], "featur": [489, 490], "affect": 489, "hand": 492, "termin": 492, "initi": 492, "explor": [492, 496], "quiz": 492, "question": 492, "state": [492, 508, 509], "densiti": 492, "save": 492, "disk": 492, "fuel": [492, 498, 499, 507], "load": [492, 509], "tutori": 493, "regist": 494, "defin": [494, 496, 498, 499, 507], "class": 494, "v": 494, "ar": [494, 496, 498], "again": 494, "kernel": 494, "dummi": 494, "flux": [494, 510], "hydraul": 494, "debug": 494, "window": 494, "tip": [494, 507], "yet": 494, "anoth": 494, "wai": 494, "why": 494, "__main__": 494, "py": 494, "check": 494, "fanci": 494, "bonu": 494, "hoc": 494, "userplugin": 494, "individu": 496, "attribut": 496, "mani": 496, "total": 496, "look": 496, "u": 496, "235": 496, "li": 496, "sweep": 497, "simpl": 497, "one": 497, "dimension": 497, "full": 497, "post": 497, "process": 497, "result": 497, "fast": 498, "non": 498, "radial": [498, 511], "shield": 498, "reflector": 498, "control": 498, "plenum": 498, "arrang": 498, "map": 498, "isotop": [499, 507], "vector": 499, "uo2": 499, "moder": 499, "d": 499, "definit": 499, "ok": 499, "so": 499, "now": 499, "thermalhydraulicsplugin": 503, "fuelperformanceplugin": 503, "neutronicsplugin": [503, 505], "yaml": 507, "clicker": 507, "tab": 507, "special": 507, "kinet": 507, "cycl": 507, "restart": 507, "type": 507, "pin": [507, 513], "lattic": 507, "behavior": 507, "advanc": 507, "topic": 507, "overlap": 507, "shape": 507, "area": 507, "modif": 507, "put": 507, "all": 507, "togeth": 507, "unshap": 507, "swapassembli": 507, "dischargeswap": 507, "swapcascad": 507, "choos": 507, "move": 507, "converg": 507, "diverg": 507, "branch": 507, "search": 507, "variabl": 508, "interest": 508, "info": 508, "extract": 509, "structur": 509, "read": 509, "onli": 509, "loos": 510, "tight": 510, "eigenvalu": 510, "wise": 510, "power": 510, "contract": 511, "spatial": 513, "sub": 513, "rotat": 513, "corner": 513, "edg": 513, "other": 513}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"armi package": [[0, "module-armi"]], "Notes": [[0, null], [1, null], [1, null], [1, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [5, null], [5, null], [5, null], [5, null], [5, null], [7, null], [7, null], [7, null], [7, null], [7, null], [8, null], [10, null], [10, null], [11, null], [16, null], [20, null], [20, null], [20, null], [21, null], [29, null], [48, null], [48, null], [48, null], [48, null], [48, null], [48, null], [50, null], [51, null], [55, null], [56, null], [56, null], [57, null], [75, null], [78, null], [78, null], [78, null], [79, null], [79, null], [79, null], [79, null], [79, null], [79, null], [79, null], [79, null], [79, null], [80, null], [81, null], [81, null], [82, null], [82, null], [83, null], [83, null], [83, null], [84, null], [88, null], [89, null], [90, null], [91, null], [93, null], [94, null], [96, null], [97, null], [98, null], [100, null], [103, null], [104, null], [105, null], [105, null], [105, null], [105, null], [105, null], [105, null], [105, null], [105, null], [105, null], [105, null], [105, null], [106, null], [111, null], [112, null], [112, null], [113, null], [115, null], [115, null], [116, null], [117, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [141, null], [141, null], [142, null], [143, null], [152, null], [152, null], [152, null], [152, null], [152, null], [152, null], [152, null], [152, null], [154, null], [154, null], [154, null], [155, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [160, null], [161, null], [164, null], [164, null], [164, null], [164, null], [166, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [168, null], [168, null], [172, null], [173, null], [174, null], [174, null], [174, null], [174, null], [175, null], [176, null], [176, null], [176, null], [177, null], [180, null], [185, null], [192, null], [198, null], [198, null], [199, null], [201, null], [201, null], [201, null], [201, null], [201, null], [202, null], [202, null], [203, null], [203, null], [203, null], [203, null], [205, null], [205, null], [205, null], [205, null], [205, null], [205, null], [205, null], [206, null], [206, null], [208, null], [209, null], [212, null], [214, null], [215, null], [216, null], [217, null], [217, null], [220, null], [220, null], [220, null], [220, null], [220, null], [220, null], [220, null], [220, null], [221, null], [221, null], [224, null], [224, null], [225, null], [228, null], [238, null], [239, null], [241, null], [241, null], [241, null], [241, null], [241, null], [241, null], [241, null], [241, null], [241, null], [242, null], [242, null], [242, null], [242, null], [242, null], [242, null], [244, null], [246, null], [246, null], [246, null], [250, null], [253, null], [255, null], [257, null], [257, null], [257, null], [260, null], [260, null], [267, null], [267, null], [268, null], [284, null], [284, null], [284, null], [284, null], [284, null], [284, null], [284, null], [284, null], [284, null], [284, null], [286, null], [286, null], [286, null], [286, null], [286, null], [286, null], [286, null], [289, null], [289, null], [289, null], [289, null], [289, null], [289, null], [289, null], [289, null], [289, null], [289, null], [289, null], [289, null], [289, null], [289, null], [289, null], [290, null], [290, null], [293, null], [294, null], [294, null], [295, null], [295, null], [295, null], [296, null], [296, null], [306, null], [306, null], [306, null], [306, null], [307, null], [307, null], [307, null], [307, null], [307, null], [308, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [311, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [315, null], [315, null], [316, null], [316, null], [316, null], [316, null], [316, null], [316, null], [317, null], [317, null], [317, null], [317, null], [318, null], [318, null], [318, null], [318, null], [318, null], [319, null], [319, null], [319, null], [319, null], [319, null], [320, null], [323, null], [323, null], [325, null], [325, null], [325, null], [325, null], [325, null], [325, null], [325, null], [325, null], [325, null], [325, null], [327, null], [331, null], [331, null], [331, null], [331, null], [331, null], [331, null], [331, null], [332, null], [332, null], [332, null], [332, null], [332, null], [332, null], [332, null], [332, null], [332, null], [332, null], [332, null], [332, null], [332, null], [338, null], [338, null], [338, null], [340, null], [341, null], [341, null], [341, null], [341, null], [341, null], [341, null], [342, null], [343, null], [343, null], [348, null], [348, null], [348, null], [348, null], [348, null], [350, null], [351, null], [353, null], [353, null], [356, null], [356, null], [356, null], [356, null], [357, null], [357, null], [364, null], [364, null], [367, null], [367, null], [370, null], [370, null], [370, null], [370, null], [370, null], [375, null], [375, null], [375, null], [376, null], [376, null], [381, null], [383, null], [390, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [400, null], [401, null], [404, null], [405, null], [406, null], [410, null], [410, null], [410, null], [410, null], [412, null], [412, null], [413, null], [413, null], [413, null], [413, null], [415, null], [415, null], [416, null], [416, null], [416, null], [434, null], [442, null], [442, null], [442, null], [442, null], [442, null], [442, null], [443, null], [443, null], [444, null]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [3, "subpackages"], [23, "subpackages"], [38, "subpackages"], [47, "subpackages"], [49, "subpackages"], [61, "subpackages"], [80, "subpackages"], [145, "subpackages"], [153, "subpackages"], [165, "subpackages"], [166, "subpackages"], [204, "subpackages"], [213, "subpackages"], [216, "subpackages"], [229, "subpackages"], [239, "subpackages"], [245, "subpackages"], [252, "subpackages"], [256, "subpackages"], [276, "subpackages"], [285, "subpackages"], [290, "subpackages"], [313, "subpackages"], [369, "subpackages"], [400, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [13, "submodules"], [23, "submodules"], [30, "submodules"], [34, "submodules"], [38, "submodules"], [41, "submodules"], [47, "submodules"], [49, "submodules"], [53, "submodules"], [58, "submodules"], [61, "submodules"], [74, "submodules"], [80, "submodules"], [119, "submodules"], [145, "submodules"], [149, "submodules"], [153, "submodules"], [157, "submodules"], [165, "submodules"], [166, "submodules"], [181, "submodules"], [197, "submodules"], [204, "submodules"], [210, "submodules"], [213, "submodules"], [216, "submodules"], [223, "submodules"], [229, "submodules"], [234, "submodules"], [239, "submodules"], [245, "submodules"], [249, "submodules"], [252, "submodules"], [254, "submodules"], [256, "submodules"], [259, "submodules"], [266, "submodules"], [274, "submodules"], [276, "submodules"], [281, "submodules"], [285, "submodules"], [290, "submodules"], [297, "submodules"], [306, "submodules"], [313, "submodules"], [314, "submodules"], [321, "submodules"], [324, "submodules"], [336, "submodules"], [345, "submodules"], [354, "submodules"], [369, "submodules"], [371, "submodules"], [379, "submodules"], [383, "submodules"], [400, "submodules"], [420, "submodules"]], "armi.apps module": [[1, "module-armi.apps"]], "armi.bookkeeping package": [[2, "module-armi.bookkeeping"]], "armi.bookkeeping.db package": [[3, "module-armi.bookkeeping.db"]], "When updating a db version": [[3, "when-updating-a-db-version"]], "Database revision changelog": [[3, "database-revision-changelog"]], "armi.bookkeeping.db.compareDB3 module": [[4, "module-armi.bookkeeping.db.compareDB3"]], "armi.bookkeeping.db.database module": [[5, "module-armi.bookkeeping.db.database"]], "armi.bookkeeping.db.database3 module": [[6, "module-armi.bookkeeping.db.database3"]], "armi.bookkeeping.db.databaseInterface module": [[7, "module-armi.bookkeeping.db.databaseInterface"]], "armi.bookkeeping.db.factory module": [[8, "module-armi.bookkeeping.db.factory"]], "armi.bookkeeping.db.jaggedArray module": [[9, "module-armi.bookkeeping.db.jaggedArray"]], "armi.bookkeeping.db.layout module": [[10, "module-armi.bookkeeping.db.layout"]], "armi.bookkeeping.db.passiveDBLoadPlugin module": [[11, "module-armi.bookkeeping.db.passiveDBLoadPlugin"]], "armi.bookkeeping.db.permissions module": [[12, "module-armi.bookkeeping.db.permissions"]], "armi.bookkeeping.db.tests package": [[13, "module-armi.bookkeeping.db.tests"]], "armi.bookkeeping.db.tests.test_comparedb3 module": [[14, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "armi.bookkeeping.db.tests.test_database3 module": [[15, "module-armi.bookkeeping.db.tests.test_database3"]], "armi.bookkeeping.db.tests.test_databaseInterface module": [[16, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "armi.bookkeeping.db.tests.test_jaggedArray module": [[17, "module-armi.bookkeeping.db.tests.test_jaggedArray"]], "armi.bookkeeping.db.tests.test_layout module": [[18, "module-armi.bookkeeping.db.tests.test_layout"]], "armi.bookkeeping.db.typedefs module": [[19, "module-armi.bookkeeping.db.typedefs"]], "armi.bookkeeping.historyTracker module": [[20, "module-armi.bookkeeping.historyTracker"]], "Getting history information": [[20, "getting-history-information"]], "Using the database-based history trackers": [[20, "using-the-database-based-history-trackers"]], "Specifying parameters to add to the EOL history report": [[20, "specifying-parameters-to-add-to-the-eol-history-report"]], "Specifying blocks and assemblies to track": [[20, "specifying-blocks-and-assemblies-to-track"]], "armi.bookkeeping.mainInterface module": [[21, "module-armi.bookkeeping.mainInterface"]], "armi.bookkeeping.memoryProfiler module": [[22, "module-armi.bookkeeping.memoryProfiler"]], "armi.bookkeeping.report package": [[23, "module-armi.bookkeeping.report"]], "armi.bookkeeping.report.data module": [[24, "module-armi.bookkeeping.report.data"]], "armi.bookkeeping.report.html module": [[25, "module-armi.bookkeeping.report.html"]], "armi.bookkeeping.report.newReportUtils module": [[26, "module-armi.bookkeeping.report.newReportUtils"]], "armi.bookkeeping.report.newReports module": [[27, "module-armi.bookkeeping.report.newReports"]], "armi.bookkeeping.report.reportInterface module": [[28, "module-armi.bookkeeping.report.reportInterface"]], "armi.bookkeeping.report.reportingUtils module": [[29, "module-armi.bookkeeping.report.reportingUtils"]], "armi.bookkeeping.report.tests package": [[30, "module-armi.bookkeeping.report.tests"]], "armi.bookkeeping.report.tests.test_newReport module": [[31, "module-armi.bookkeeping.report.tests.test_newReport"]], "armi.bookkeeping.report.tests.test_report module": [[32, "module-armi.bookkeeping.report.tests.test_report"]], "armi.bookkeeping.snapshotInterface module": [[33, "module-armi.bookkeeping.snapshotInterface"]], "armi.bookkeeping.tests package": [[34, "module-armi.bookkeeping.tests"]], "armi.bookkeeping.tests.test_historyTracker module": [[35, "module-armi.bookkeeping.tests.test_historyTracker"]], "armi.bookkeeping.tests.test_memoryProfiler module": [[36, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "armi.bookkeeping.tests.test_snapshot module": [[37, "module-armi.bookkeeping.tests.test_snapshot"]], "armi.bookkeeping.visualization package": [[38, "module-armi.bookkeeping.visualization"]], "armi.bookkeeping.visualization.dumper module": [[39, "module-armi.bookkeeping.visualization.dumper"]], "armi.bookkeeping.visualization.entryPoint module": [[40, "module-armi.bookkeeping.visualization.entryPoint"]], "armi.bookkeeping.visualization.tests package": [[41, "module-armi.bookkeeping.visualization.tests"]], "armi.bookkeeping.visualization.tests.test_vis module": [[42, "module-armi.bookkeeping.visualization.tests.test_vis"]], "armi.bookkeeping.visualization.tests.test_xdmf module": [[43, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "armi.bookkeeping.visualization.utils module": [[44, "module-armi.bookkeeping.visualization.utils"]], "armi.bookkeeping.visualization.vtk module": [[45, "module-armi.bookkeeping.visualization.vtk"]], "Limitations": [[45, "limitations"]], "armi.bookkeeping.visualization.xdmf module": [[46, "module-armi.bookkeeping.visualization.xdmf"]], "armi.cases package": [[47, "module-armi.cases"]], "armi.cases.case module": [[48, "module-armi.cases.case"]], "armi.cases.inputModifiers package": [[49, "module-armi.cases.inputModifiers"]], "armi.cases.inputModifiers.inputModifiers module": [[50, "module-armi.cases.inputModifiers.inputModifiers"]], "armi.cases.inputModifiers.neutronicsModifiers module": [[51, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "armi.cases.inputModifiers.pinTypeInputModifiers module": [[52, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests package": [[53, "module-armi.cases.inputModifiers.tests"]], "armi.cases.inputModifiers.tests.test_inputModifiers module": [[54, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module": [[55, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "armi.cases.suite module": [[56, "module-armi.cases.suite"]], "armi.cases.suiteBuilder module": [[57, "module-armi.cases.suiteBuilder"]], "armi.cases.tests package": [[58, "module-armi.cases.tests"]], "armi.cases.tests.test_cases module": [[59, "module-armi.cases.tests.test_cases"]], "armi.cases.tests.test_suiteBuilder module": [[60, "module-armi.cases.tests.test_suiteBuilder"]], "armi.cli package": [[61, "module-armi.cli"]], "armi.cli.checkInputs module": [[62, "module-armi.cli.checkInputs"]], "armi.cli.cleanTemps module": [[63, "module-armi.cli.cleanTemps"]], "armi.cli.clone module": [[64, "module-armi.cli.clone"]], "armi.cli.compareCases module": [[65, "module-armi.cli.compareCases"]], "armi.cli.database module": [[66, "module-armi.cli.database"]], "armi.cli.entryPoint module": [[67, "module-armi.cli.entryPoint"]], "armi.cli.gridGui module": [[68, "module-armi.cli.gridGui"]], "armi.cli.migrateInputs module": [[69, "module-armi.cli.migrateInputs"]], "armi.cli.modify module": [[70, "module-armi.cli.modify"]], "armi.cli.reportsEntryPoint module": [[71, "module-armi.cli.reportsEntryPoint"]], "armi.cli.run module": [[72, "module-armi.cli.run"]], "armi.cli.runSuite module": [[73, "module-armi.cli.runSuite"]], "armi.cli.tests package": [[74, "module-armi.cli.tests"]], "armi.cli.tests.test_runEntryPoint module": [[75, "module-armi.cli.tests.test_runEntryPoint"]], "armi.cli.tests.test_runSuite module": [[76, "module-armi.cli.tests.test_runSuite"]], "armi.conftest module": [[77, "module-armi.conftest"]], "armi.context module": [[78, "module-armi.context"]], "armi.interfaces module": [[79, "module-armi.interfaces"]], "armi.materials package": [[80, "module-armi.materials"]], "armi.materials.air module": [[81, "module-armi.materials.air"]], "armi.materials.alloy200 module": [[82, "module-armi.materials.alloy200"]], "armi.materials.b4c module": [[83, "module-armi.materials.b4c"]], "armi.materials.be9 module": [[84, "module-armi.materials.be9"]], "armi.materials.caH2 module": [[85, "module-armi.materials.caH2"]], "armi.materials.californium module": [[86, "module-armi.materials.californium"]], "armi.materials.concrete module": [[87, "module-armi.materials.concrete"]], "armi.materials.copper module": [[88, "module-armi.materials.copper"]], "armi.materials.cs module": [[89, "module-armi.materials.cs"]], "armi.materials.custom module": [[90, "module-armi.materials.custom"]], "armi.materials.graphite module": [[91, "module-armi.materials.graphite"]], "armi.materials.hafnium module": [[92, "module-armi.materials.hafnium"]], "armi.materials.hastelloyN module": [[93, "module-armi.materials.hastelloyN"]], "armi.materials.ht9 module": [[94, "module-armi.materials.ht9"]], "armi.materials.inconel module": [[95, "module-armi.materials.inconel"]], "armi.materials.inconel600 module": [[96, "module-armi.materials.inconel600"]], "armi.materials.inconel625 module": [[97, "module-armi.materials.inconel625"]], "armi.materials.inconel800 module": [[98, "module-armi.materials.inconel800"]], "armi.materials.inconelPE16 module": [[99, "module-armi.materials.inconelPE16"]], "armi.materials.inconelX750 module": [[100, "module-armi.materials.inconelX750"]], "armi.materials.lead module": [[101, "module-armi.materials.lead"]], "armi.materials.leadBismuth module": [[102, "module-armi.materials.leadBismuth"]], "armi.materials.lithium module": [[103, "module-armi.materials.lithium"]], "armi.materials.magnesium module": [[104, "module-armi.materials.magnesium"]], "armi.materials.material module": [[105, "module-armi.materials.material"]], "armi.materials.mgO module": [[106, "module-armi.materials.mgO"]], "armi.materials.mixture module": [[107, "module-armi.materials.mixture"]], "armi.materials.molybdenum module": [[108, "module-armi.materials.molybdenum"]], "armi.materials.mox module": [[109, "module-armi.materials.mox"]], "armi.materials.nZ module": [[110, "module-armi.materials.nZ"]], "armi.materials.potassium module": [[111, "module-armi.materials.potassium"]], "armi.materials.scandiumOxide module": [[112, "module-armi.materials.scandiumOxide"]], "armi.materials.siC module": [[113, "module-armi.materials.siC"]], "armi.materials.sodium module": [[114, "module-armi.materials.sodium"]], "armi.materials.sodiumChloride module": [[115, "module-armi.materials.sodiumChloride"]], "armi.materials.sulfur module": [[116, "module-armi.materials.sulfur"]], "armi.materials.tZM module": [[117, "module-armi.materials.tZM"]], "armi.materials.tantalum module": [[118, "module-armi.materials.tantalum"]], "armi.materials.tests package": [[119, "module-armi.materials.tests"]], "armi.materials.tests.test__init__ module": [[120, "module-armi.materials.tests.test__init__"]], "armi.materials.tests.test_air module": [[121, "module-armi.materials.tests.test_air"]], "armi.materials.tests.test_b4c module": [[122, "module-armi.materials.tests.test_b4c"]], "armi.materials.tests.test_be9 module": [[123, "module-armi.materials.tests.test_be9"]], "armi.materials.tests.test_graphite module": [[124, "module-armi.materials.tests.test_graphite"]], "armi.materials.tests.test_lithium module": [[125, "module-armi.materials.tests.test_lithium"]], "armi.materials.tests.test_materials module": [[126, "module-armi.materials.tests.test_materials"]], "armi.materials.tests.test_sic module": [[127, "module-armi.materials.tests.test_sic"]], "armi.materials.tests.test_sulfur module": [[128, "module-armi.materials.tests.test_sulfur"]], "armi.materials.tests.test_thoriumOxide module": [[129, "module-armi.materials.tests.test_thoriumOxide"]], "armi.materials.tests.test_uZr module": [[130, "module-armi.materials.tests.test_uZr"]], "armi.materials.tests.test_water module": [[131, "module-armi.materials.tests.test_water"]], "armi.materials.thU module": [[132, "module-armi.materials.thU"]], "armi.materials.thorium module": [[133, "module-armi.materials.thorium"]], "armi.materials.thoriumOxide module": [[134, "module-armi.materials.thoriumOxide"]], "armi.materials.uThZr module": [[135, "module-armi.materials.uThZr"]], "armi.materials.uZr module": [[136, "module-armi.materials.uZr"]], "armi.materials.uranium module": [[137, "module-armi.materials.uranium"]], "armi.materials.uraniumOxide module": [[138, "module-armi.materials.uraniumOxide"]], "armi.materials.void module": [[139, "module-armi.materials.void"]], "armi.materials.water module": [[140, "module-armi.materials.water"]], "armi.materials.yttriumOxide module": [[141, "module-armi.materials.yttriumOxide"]], "armi.materials.zincOxide module": [[142, "module-armi.materials.zincOxide"]], "armi.materials.zr module": [[143, "module-armi.materials.zr"]], "armi.meta module": [[144, "module-armi.meta"]], "armi.migration package": [[145, "module-armi.migration"]], "armi.migration.base module": [[146, "module-armi.migration.base"]], "armi.migration.m0_1_3 module": [[147, "module-armi.migration.m0_1_3"]], "armi.migration.m0_1_6 module": [[148, "module-armi.migration.m0_1_6"]], "armi.migration.tests package": [[149, "module-armi.migration.tests"]], "armi.migration.tests.test_m0_1_6 module": [[150, "module-armi.migration.tests.test_m0_1_6"]], "armi.migration.tests.test_migration_base module": [[151, "module-armi.migration.tests.test_migration_base"]], "armi.mpiActions module": [[152, "module-armi.mpiActions"]], "Sample MPI Action Workflow": [[152, "id1"]], "armi.nucDirectory package": [[153, "module-armi.nucDirectory"]], "Elements": [[153, "elements"]], "Nuclide Bases": [[153, "nuclide-bases"]], "Nuclide names, labels, and IDs": [[153, "nuclide-names-labels-and-ids"]], "Indices - rapid access": [[153, "indices-rapid-access"]], "armi.nucDirectory.elements module": [[154, "module-armi.nucDirectory.elements"]], "List of elements": [[154, "nuclide-bases-table"]], "armi.nucDirectory.nucDir module": [[155, "module-armi.nucDirectory.nucDir"]], "armi.nucDirectory.nuclideBases module": [[156, "module-armi.nucDirectory.nuclideBases"]], "armi.nucDirectory.tests package": [[157, "module-armi.nucDirectory.tests"]], "armi.nucDirectory.tests.test_elements module": [[158, "module-armi.nucDirectory.tests.test_elements"]], "armi.nucDirectory.tests.test_nucDirectory module": [[159, "module-armi.nucDirectory.tests.test_nucDirectory"]], "armi.nucDirectory.tests.test_nuclideBases module": [[160, "module-armi.nucDirectory.tests.test_nuclideBases"]], "armi.nucDirectory.tests.test_thermalScattering module": [[161, "module-armi.nucDirectory.tests.test_thermalScattering"]], "armi.nucDirectory.tests.test_transmutations module": [[162, "module-armi.nucDirectory.tests.test_transmutations"]], "armi.nucDirectory.thermalScattering module": [[163, "module-armi.nucDirectory.thermalScattering"]], "armi.nucDirectory.transmutations module": [[164, "module-armi.nucDirectory.transmutations"]], "armi.nuclearDataIO package": [[165, "module-armi.nuclearDataIO"]], "armi.nuclearDataIO.cccc package": [[166, "module-armi.nuclearDataIO.cccc"]], "Using the system": [[166, "using-the-system"]], "Implementation details": [[166, "implementation-details"]], "Discussion": [[166, "discussion"]], "armi.nuclearDataIO.cccc.cccc module": [[167, "module-armi.nuclearDataIO.cccc.cccc"]], "armi.nuclearDataIO.cccc.compxs module": [[168, "module-armi.nuclearDataIO.cccc.compxs"]], "armi.nuclearDataIO.cccc.dif3d module": [[169, "module-armi.nuclearDataIO.cccc.dif3d"]], "armi.nuclearDataIO.cccc.dlayxs module": [[170, "module-armi.nuclearDataIO.cccc.dlayxs"]], "armi.nuclearDataIO.cccc.fixsrc module": [[171, "module-armi.nuclearDataIO.cccc.fixsrc"]], "armi.nuclearDataIO.cccc.gamiso module": [[172, "module-armi.nuclearDataIO.cccc.gamiso"]], "armi.nuclearDataIO.cccc.geodst module": [[173, "module-armi.nuclearDataIO.cccc.geodst"]], "armi.nuclearDataIO.cccc.isotxs module": [[174, "module-armi.nuclearDataIO.cccc.isotxs"]], "armi.nuclearDataIO.cccc.labels module": [[175, "module-armi.nuclearDataIO.cccc.labels"]], "armi.nuclearDataIO.cccc.nhflux module": [[176, "module-armi.nuclearDataIO.cccc.nhflux"]], "armi.nuclearDataIO.cccc.pmatrx module": [[177, "module-armi.nuclearDataIO.cccc.pmatrx"]], "armi.nuclearDataIO.cccc.pwdint module": [[178, "module-armi.nuclearDataIO.cccc.pwdint"]], "armi.nuclearDataIO.cccc.rtflux module": [[179, "module-armi.nuclearDataIO.cccc.rtflux"]], "armi.nuclearDataIO.cccc.rzflux module": [[180, "module-armi.nuclearDataIO.cccc.rzflux"]], "armi.nuclearDataIO.cccc.tests package": [[181, "module-armi.nuclearDataIO.cccc.tests"]], "armi.nuclearDataIO.cccc.tests.test_cccc module": [[182, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "armi.nuclearDataIO.cccc.tests.test_compxs module": [[183, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "armi.nuclearDataIO.cccc.tests.test_dif3d module": [[184, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs module": [[185, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc module": [[186, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"]], "armi.nuclearDataIO.cccc.tests.test_gamiso module": [[187, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "armi.nuclearDataIO.cccc.tests.test_geodst module": [[188, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs module": [[189, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "armi.nuclearDataIO.cccc.tests.test_labels module": [[190, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "armi.nuclearDataIO.cccc.tests.test_nhflux module": [[191, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx module": [[192, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "armi.nuclearDataIO.cccc.tests.test_pwdint module": [[193, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "armi.nuclearDataIO.cccc.tests.test_rtflux module": [[194, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux module": [[195, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "armi.nuclearDataIO.nuclearFileMetadata module": [[196, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "armi.nuclearDataIO.tests package": [[197, "module-armi.nuclearDataIO.tests"]], "armi.nuclearDataIO.tests.test_xsCollections module": [[198, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "armi.nuclearDataIO.tests.test_xsLibraries module": [[199, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "armi.nuclearDataIO.tests.test_xsNuclides module": [[200, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "armi.nuclearDataIO.xsCollections module": [[201, "module-armi.nuclearDataIO.xsCollections"]], "armi.nuclearDataIO.xsLibraries module": [[202, "module-armi.nuclearDataIO.xsLibraries"]], "armi.nuclearDataIO.xsNuclides module": [[203, "module-armi.nuclearDataIO.xsNuclides"]], "armi.operators package": [[204, "module-armi.operators"]], "armi.operators.operator module": [[205, "module-armi.operators.operator"]], "armi.operators.operatorMPI module": [[206, "module-armi.operators.operatorMPI"]], "armi.operators.runTypes module": [[207, "module-armi.operators.runTypes"]], "armi.operators.settingsValidation module": [[208, "module-armi.operators.settingsValidation"]], "armi.operators.snapshots module": [[209, "module-armi.operators.snapshots"]], "armi.operators.tests package": [[210, "module-armi.operators.tests"]], "armi.operators.tests.test_operatorSnapshots module": [[211, "module-armi.operators.tests.test_operatorSnapshots"]], "armi.operators.tests.test_operators module": [[212, "module-armi.operators.tests.test_operators"]], "armi.physics package": [[213, "module-armi.physics"]], "Historical fun fact": [[213, null]], "armi.physics.constants module": [[214, "module-armi.physics.constants"]], "armi.physics.executers module": [[215, "module-armi.physics.executers"]], "armi.physics.fuelCycle package": [[216, "module-armi.physics.fuelCycle"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms module": [[217, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.fuelHandlerFactory module": [[218, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface module": [[219, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlers module": [[220, "module-armi.physics.fuelCycle.fuelHandlers"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module": [[221, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.settings module": [[222, "module-armi.physics.fuelCycle.settings"]], "armi.physics.fuelCycle.tests package": [[223, "module-armi.physics.fuelCycle.tests"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module": [[224, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.tests.test_fuelHandlers module": [[225, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module": [[226, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.tests.test_utils module": [[227, "module-armi.physics.fuelCycle.tests.test_utils"]], "armi.physics.fuelCycle.utils module": [[228, "module-armi.physics.fuelCycle.utils"]], "armi.physics.fuelPerformance package": [[229, "module-armi.physics.fuelPerformance"]], "armi.physics.fuelPerformance.executers module": [[230, "module-armi.physics.fuelPerformance.executers"]], "armi.physics.fuelPerformance.parameters module": [[231, "module-armi.physics.fuelPerformance.parameters"]], "armi.physics.fuelPerformance.plugin module": [[232, "module-armi.physics.fuelPerformance.plugin"]], "armi.physics.fuelPerformance.settings module": [[233, "module-armi.physics.fuelPerformance.settings"]], "armi.physics.fuelPerformance.tests package": [[234, "module-armi.physics.fuelPerformance.tests"]], "armi.physics.fuelPerformance.tests.test_executers module": [[235, "module-armi.physics.fuelPerformance.tests.test_executers"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module": [[236, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module": [[237, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.utils module": [[238, "module-armi.physics.fuelPerformance.utils"]], "armi.physics.neutronics package": [[239, "module-armi.physics.neutronics"]], "armi.physics.neutronics.const module": [[240, "module-armi.physics.neutronics.const"]], "armi.physics.neutronics.crossSectionGroupManager module": [[241, "module-armi.physics.neutronics.crossSectionGroupManager"]], "armi.physics.neutronics.crossSectionSettings module": [[242, "module-armi.physics.neutronics.crossSectionSettings"]], "armi.physics.neutronics.diffIsotxs module": [[243, "module-armi.physics.neutronics.diffIsotxs"]], "armi.physics.neutronics.energyGroups module": [[244, "module-armi.physics.neutronics.energyGroups"]], "armi.physics.neutronics.fissionProductModel package": [[245, "module-armi.physics.neutronics.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel module": [[246, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module": [[247, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module": [[248, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests package": [[249, "module-armi.physics.neutronics.fissionProductModel.tests"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module": [[250, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module": [[251, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "armi.physics.neutronics.globalFlux package": [[252, "module-armi.physics.neutronics.globalFlux"]], "armi.physics.neutronics.globalFlux.globalFluxInterface module": [[253, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests package": [[254, "module-armi.physics.neutronics.globalFlux.tests"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module": [[255, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "armi.physics.neutronics.latticePhysics package": [[256, "module-armi.physics.neutronics.latticePhysics"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module": [[257, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module": [[258, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests package": [[259, "module-armi.physics.neutronics.latticePhysics.tests"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module": [[260, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module": [[261, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "armi.physics.neutronics.macroXSGenerationInterface module": [[262, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "armi.physics.neutronics.parameters module": [[263, "module-armi.physics.neutronics.parameters"]], "armi.physics.neutronics.reports module": [[264, "module-armi.physics.neutronics.reports"]], "armi.physics.neutronics.settings module": [[265, "module-armi.physics.neutronics.settings"]], "armi.physics.neutronics.tests package": [[266, "module-armi.physics.neutronics.tests"]], "armi.physics.neutronics.tests.test_crossSectionManager module": [[267, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "armi.physics.neutronics.tests.test_crossSectionSettings module": [[268, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "armi.physics.neutronics.tests.test_crossSectionTable module": [[269, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "armi.physics.neutronics.tests.test_energyGroups module": [[270, "module-armi.physics.neutronics.tests.test_energyGroups"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface module": [[271, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_neutronicsPlugin module": [[272, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "armi.physics.safety package": [[273, "module-armi.physics.safety"]], "armi.physics.tests package": [[274, "module-armi.physics.tests"]], "armi.physics.tests.test_executers module": [[275, "module-armi.physics.tests.test_executers"]], "armi.physics.thermalHydraulics package": [[276, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalHydraulics.const module": [[277, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalHydraulics.parameters module": [[278, "module-armi.physics.thermalHydraulics.parameters"]], "armi.physics.thermalHydraulics.plugin module": [[279, "module-armi.physics.thermalHydraulics.plugin"]], "armi.physics.thermalHydraulics.settings module": [[280, "module-armi.physics.thermalHydraulics.settings"]], "armi.physics.thermalHydraulics.tests package": [[281, "module-armi.physics.thermalHydraulics.tests"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin module": [[282, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"]], "armi.pluginManager module": [[283, "module-armi.pluginManager"]], "armi.plugins module": [[284, "module-armi.plugins"]], "armi.reactor package": [[285, "module-armi.reactor"]], "armi.reactor.assemblies module": [[286, "module-armi.reactor.assemblies"]], "armi.reactor.assemblyParameters module": [[287, "module-armi.reactor.assemblyParameters"]], "armi.reactor.blockParameters module": [[288, "module-armi.reactor.blockParameters"]], "armi.reactor.blocks module": [[289, "module-armi.reactor.blocks"]], "Parameter": [[289, "parameter"]], "armi.reactor.blueprints package": [[290, "module-armi.reactor.blueprints"]], "armi.reactor.blueprints.assemblyBlueprint module": [[291, "module-armi.reactor.blueprints.assemblyBlueprint"]], "armi.reactor.blueprints.blockBlueprint module": [[292, "module-armi.reactor.blueprints.blockBlueprint"]], "armi.reactor.blueprints.componentBlueprint module": [[293, "module-armi.reactor.blueprints.componentBlueprint"]], "armi.reactor.blueprints.gridBlueprint module": [[294, "module-armi.reactor.blueprints.gridBlueprint"]], "armi.reactor.blueprints.isotopicOptions module": [[295, "module-armi.reactor.blueprints.isotopicOptions"]], "armi.reactor.blueprints.reactorBlueprint module": [[296, "module-armi.reactor.blueprints.reactorBlueprint"]], "armi.reactor.blueprints.tests package": [[297, "module-armi.reactor.blueprints.tests"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints module": [[298, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "armi.reactor.blueprints.tests.test_blockBlueprints module": [[299, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "armi.reactor.blueprints.tests.test_blueprints module": [[300, "module-armi.reactor.blueprints.tests.test_blueprints"]], "armi.reactor.blueprints.tests.test_componentBlueprint module": [[301, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "armi.reactor.blueprints.tests.test_customIsotopics module": [[302, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "armi.reactor.blueprints.tests.test_gridBlueprints module": [[303, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "armi.reactor.blueprints.tests.test_materialModifications module": [[304, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "armi.reactor.blueprints.tests.test_reactorBlueprints module": [[305, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "armi.reactor.components package": [[306, "module-armi.reactor.components"]], "armi.reactor.components.basicShapes module": [[307, "module-armi.reactor.components.basicShapes"]], "armi.reactor.components.complexShapes module": [[308, "module-armi.reactor.components.complexShapes"]], "armi.reactor.components.component module": [[309, "module-armi.reactor.components.component"]], "armi.reactor.components.componentParameters module": [[310, "module-armi.reactor.components.componentParameters"]], "armi.reactor.components.volumetricShapes module": [[311, "module-armi.reactor.components.volumetricShapes"]], "armi.reactor.composites module": [[312, "module-armi.reactor.composites"]], "armi.reactor.converters package": [[313, "module-armi.reactor.converters"]], "armi.reactor.converters.axialExpansionChanger package": [[314, "module-armi.reactor.converters.axialExpansionChanger"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage module": [[315, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger module": [[316, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"]], "armi.reactor.converters.axialExpansionChanger.expansionData module": [[317, "module-armi.reactor.converters.axialExpansionChanger.expansionData"]], "armi.reactor.converters.blockConverters module": [[318, "module-armi.reactor.converters.blockConverters"]], "armi.reactor.converters.geometryConverters module": [[319, "module-armi.reactor.converters.geometryConverters"]], "armi.reactor.converters.meshConverters module": [[320, "module-armi.reactor.converters.meshConverters"]], "armi.reactor.converters.parameterSweeps package": [[321, "module-armi.reactor.converters.parameterSweeps"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module": [[322, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "armi.reactor.converters.pinTypeBlockConverters module": [[323, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests package": [[324, "module-armi.reactor.converters.tests"]], "armi.reactor.converters.tests.test_axialExpansionChanger module": [[325, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "armi.reactor.converters.tests.test_blockConverter module": [[326, "module-armi.reactor.converters.tests.test_blockConverter"]], "armi.reactor.converters.tests.test_geometryConverters module": [[327, "module-armi.reactor.converters.tests.test_geometryConverters"]], "armi.reactor.converters.tests.test_meshConverters module": [[328, "module-armi.reactor.converters.tests.test_meshConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters module": [[329, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "armi.reactor.converters.tests.test_uniformMesh module": [[330, "module-armi.reactor.converters.tests.test_uniformMesh"]], "armi.reactor.converters.uniformMesh module": [[331, "module-armi.reactor.converters.uniformMesh"]], "Requirements": [[331, "requirements"]], "armi.reactor.cores module": [[332, "module-armi.reactor.cores"]], "armi.reactor.excoreStructure module": [[333, "module-armi.reactor.excoreStructure"]], "armi.reactor.flags module": [[334, "module-armi.reactor.flags"]], "armi.reactor.geometry module": [[335, "module-armi.reactor.geometry"]], "armi.reactor.grids package": [[336, "module-armi.reactor.grids"]], "armi.reactor.grids.axial module": [[337, "module-armi.reactor.grids.axial"]], "armi.reactor.grids.cartesian module": [[338, "module-armi.reactor.grids.cartesian"]], "armi.reactor.grids.constants module": [[339, "module-armi.reactor.grids.constants"]], "armi.reactor.grids.grid module": [[340, "module-armi.reactor.grids.grid"]], "armi.reactor.grids.hexagonal module": [[341, "module-armi.reactor.grids.hexagonal"]], "armi.reactor.grids.locations module": [[342, "module-armi.reactor.grids.locations"]], "armi.reactor.grids.structuredGrid module": [[343, "module-armi.reactor.grids.structuredGrid"]], "armi.reactor.grids.thetarz module": [[344, "module-armi.reactor.grids.thetarz"]], "armi.reactor.parameters package": [[345, "module-armi.reactor.parameters"]], "Example Parameters": [[345, "id1"]], "Basic Usage": [[345, "basic-usage"]], "Design Considerations": [[345, "design-considerations"]], "Design considerations": [[345, "id2"]], "armi.reactor.parameters.exceptions module": [[346, "module-armi.reactor.parameters.exceptions"]], "armi.reactor.parameters.parameterCollections module": [[347, "module-armi.reactor.parameters.parameterCollections"]], "armi.reactor.parameters.parameterDefinitions module": [[348, "module-armi.reactor.parameters.parameterDefinitions"]], "armi.reactor.parameters.resolveCollections module": [[349, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorParameters module": [[350, "module-armi.reactor.reactorParameters"]], "armi.reactor.reactors module": [[351, "module-armi.reactor.reactors"]], "armi.reactor.spentFuelPool module": [[352, "module-armi.reactor.spentFuelPool"]], "armi.reactor.systemLayoutInput module": [[353, "module-armi.reactor.systemLayoutInput"]], "armi.reactor.tests package": [[354, "module-armi.reactor.tests"]], "armi.reactor.tests.test_assemblies module": [[355, "module-armi.reactor.tests.test_assemblies"]], "armi.reactor.tests.test_blocks module": [[356, "module-armi.reactor.tests.test_blocks"]], "armi.reactor.tests.test_components module": [[357, "module-armi.reactor.tests.test_components"]], "armi.reactor.tests.test_composites module": [[358, "module-armi.reactor.tests.test_composites"]], "armi.reactor.tests.test_excoreStructures module": [[359, "module-armi.reactor.tests.test_excoreStructures"]], "armi.reactor.tests.test_flags module": [[360, "module-armi.reactor.tests.test_flags"]], "armi.reactor.tests.test_geometry module": [[361, "module-armi.reactor.tests.test_geometry"]], "armi.reactor.tests.test_hexBlockRotate module": [[362, "module-armi.reactor.tests.test_hexBlockRotate"]], "armi.reactor.tests.test_parameters module": [[363, "module-armi.reactor.tests.test_parameters"]], "armi.reactor.tests.test_reactors module": [[364, "module-armi.reactor.tests.test_reactors"]], "armi.reactor.tests.test_rz_reactors module": [[365, "module-armi.reactor.tests.test_rz_reactors"]], "armi.reactor.tests.test_zones module": [[366, "module-armi.reactor.tests.test_zones"]], "armi.reactor.zones module": [[367, "module-armi.reactor.zones"]], "armi.runLog module": [[368, "module-armi.runLog"]], "armi.settings package": [[369, "module-armi.settings"]], "armi.settings.caseSettings module": [[370, "module-armi.settings.caseSettings"]], "armi.settings.fwSettings package": [[371, "module-armi.settings.fwSettings"]], "armi.settings.fwSettings.databaseSettings module": [[372, "module-armi.settings.fwSettings.databaseSettings"]], "armi.settings.fwSettings.globalSettings module": [[373, "module-armi.settings.fwSettings.globalSettings"]], "armi.settings.fwSettings.reportSettings module": [[374, "module-armi.settings.fwSettings.reportSettings"]], "armi.settings.fwSettings.tightCouplingSettings module": [[375, "module-armi.settings.fwSettings.tightCouplingSettings"]], "armi.settings.setting module": [[376, "module-armi.settings.setting"]], "armi.settings.settingsIO module": [[377, "module-armi.settings.settingsIO"]], "armi.settings.settingsValidation module": [[378, "module-armi.settings.settingsValidation"]], "armi.settings.tests package": [[379, "module-armi.settings.tests"]], "armi.settings.tests.test_inspectors module": [[380, "module-armi.settings.tests.test_inspectors"]], "armi.settings.tests.test_settings module": [[381, "module-armi.settings.tests.test_settings"]], "armi.settings.tests.test_settingsIO module": [[382, "module-armi.settings.tests.test_settingsIO"]], "armi.tests package": [[383, "module-armi.tests"]], "armi.tests.mockRunLogs module": [[384, "module-armi.tests.mockRunLogs"]], "armi.tests.refSmallReactorShuffleLogic module": [[385, "module-armi.tests.refSmallReactorShuffleLogic"]], "armi.tests.test_apps module": [[386, "module-armi.tests.test_apps"]], "armi.tests.test_armiTestHelper module": [[387, "module-armi.tests.test_armiTestHelper"]], "armi.tests.test_cartesian module": [[388, "module-armi.tests.test_cartesian"]], "armi.tests.test_context module": [[389, "module-armi.tests.test_context"]], "armi.tests.test_interfaces module": [[390, "module-armi.tests.test_interfaces"]], "armi.tests.test_lwrInputs module": [[391, "module-armi.tests.test_lwrInputs"]], "armi.tests.test_mpiActions module": [[392, "module-armi.tests.test_mpiActions"]], "armi.tests.test_mpiFeatures module": [[393, "module-armi.tests.test_mpiFeatures"]], "armi.tests.test_mpiParameters module": [[394, "module-armi.tests.test_mpiParameters"]], "armi.tests.test_notebooks module": [[395, "module-armi.tests.test_notebooks"]], "armi.tests.test_plugins module": [[396, "module-armi.tests.test_plugins"]], "armi.tests.test_runLog module": [[397, "module-armi.tests.test_runLog"]], "armi.tests.test_tests module": [[398, "module-armi.tests.test_tests"]], "armi.tests.test_user_plugins module": [[399, "module-armi.tests.test_user_plugins"]], "armi.utils package": [[400, "module-armi.utils"]], "armi.utils.asciimaps module": [[401, "module-armi.utils.asciimaps"]], "armi.utils.codeTiming module": [[402, "module-armi.utils.codeTiming"]], "armi.utils.customExceptions module": [[403, "module-armi.utils.customExceptions"]], "armi.utils.densityTools module": [[404, "module-armi.utils.densityTools"]], "armi.utils.directoryChangers module": [[405, "module-armi.utils.directoryChangers"]], "armi.utils.directoryChangersMpi module": [[406, "module-armi.utils.directoryChangersMpi"]], "armi.utils.dynamicImporter module": [[407, "module-armi.utils.dynamicImporter"]], "armi.utils.flags module": [[408, "module-armi.utils.flags"]], "armi.utils.gridEditor module": [[409, "armi-utils-grideditor-module"]], "armi.utils.hexagon module": [[410, "module-armi.utils.hexagon"]], "armi.utils.iterables module": [[411, "module-armi.utils.iterables"]], "armi.utils.mathematics module": [[412, "module-armi.utils.mathematics"]], "armi.utils.outputCache module": [[413, "module-armi.utils.outputCache"]], "API usage": [[413, "api-usage"]], "armi.utils.parsing module": [[414, "module-armi.utils.parsing"]], "armi.utils.pathTools module": [[415, "module-armi.utils.pathTools"]], "armi.utils.plotting module": [[416, "module-armi.utils.plotting"]], "armi.utils.properties module": [[417, "module-armi.utils.properties"]], "armi.utils.reportPlotting module": [[418, "module-armi.utils.reportPlotting"]], "armi.utils.tabulate module": [[419, "module-armi.utils.tabulate"]], "Usage": [[419, "usage"]], "Table headers": [[419, "table-headers"]], "Column and Headers alignment": [[419, "column-and-headers-alignment"]], "Table formats": [[419, "table-formats"]], "Number parsing": [[419, "number-parsing"]], "Column Widths and Auto Line Wrapping": [[419, "column-widths-and-auto-line-wrapping"]], "armi.utils.tests package": [[420, "module-armi.utils.tests"]], "armi.utils.tests.test_asciimaps module": [[421, "module-armi.utils.tests.test_asciimaps"]], "armi.utils.tests.test_codeTiming module": [[422, "module-armi.utils.tests.test_codeTiming"]], "armi.utils.tests.test_custom_exceptions module": [[423, "module-armi.utils.tests.test_custom_exceptions"]], "armi.utils.tests.test_densityTools module": [[424, "module-armi.utils.tests.test_densityTools"]], "armi.utils.tests.test_directoryChangers module": [[425, "module-armi.utils.tests.test_directoryChangers"]], "armi.utils.tests.test_directoryChangersMpi module": [[426, "module-armi.utils.tests.test_directoryChangersMpi"]], "armi.utils.tests.test_flags module": [[427, "module-armi.utils.tests.test_flags"]], "armi.utils.tests.test_hexagon module": [[428, "module-armi.utils.tests.test_hexagon"]], "armi.utils.tests.test_iterables module": [[429, "module-armi.utils.tests.test_iterables"]], "armi.utils.tests.test_mathematics module": [[430, "module-armi.utils.tests.test_mathematics"]], "armi.utils.tests.test_outputCache module": [[431, "module-armi.utils.tests.test_outputCache"]], "armi.utils.tests.test_parsing module": [[432, "module-armi.utils.tests.test_parsing"]], "armi.utils.tests.test_pathTools module": [[433, "module-armi.utils.tests.test_pathTools"]], "armi.utils.tests.test_plotting module": [[434, "module-armi.utils.tests.test_plotting"]], "armi.utils.tests.test_properties module": [[435, "module-armi.utils.tests.test_properties"]], "armi.utils.tests.test_reportPlotting module": [[436, "module-armi.utils.tests.test_reportPlotting"]], "armi.utils.tests.test_tabulate module": [[437, "module-armi.utils.tests.test_tabulate"]], "armi.utils.tests.test_textProcessors module": [[438, "module-armi.utils.tests.test_textProcessors"]], "armi.utils.tests.test_triangle module": [[439, "module-armi.utils.tests.test_triangle"]], "armi.utils.tests.test_units module": [[440, "module-armi.utils.tests.test_units"]], "armi.utils.tests.test_utils module": [[441, "module-armi.utils.tests.test_utils"]], "armi.utils.textProcessors module": [[442, "module-armi.utils.textProcessors"]], "armi.utils.triangle module": [[443, "module-armi.utils.triangle"]], "armi.utils.units module": [[444, "module-armi.utils.units"]], "armi": [[445, "armi"]], "Documenting ARMI": [[446, "documenting-armi"]], "Building the documentation": [[446, "building-the-documentation"]], "Documentation for ARMI plugins": [[446, "documentation-for-armi-plugins"]], "Linking to ARMI documentation from plugins": [[446, "linking-to-armi-documentation-from-plugins"]], "Automatically building apidocs of namespace packages": [[446, "automatically-building-apidocs-of-namespace-packages"]], "Updating the Gallery": [[446, "updating-the-gallery"]], "Using Jupyter notebooks": [[446, "using-jupyter-notebooks"]], "Entry Points": [[447, "entry-points"], [449, "entry-points"]], "First Time Contributors Guide": [[448, "first-time-contributors-guide"]], "Help Wanted": [[448, "help-wanted"]], "Testing": [[448, "testing"]], "Submitting Changes": [[448, "submitting-changes"]], "Licensing of Tools": [[448, "licensing-of-tools"]], "Framework Architecture": [[449, "framework-architecture"]], "The Reactor Data Model": [[449, "the-reactor-data-model"]], "Finding objects in a model": [[449, "finding-objects-in-a-model"]], "Parameters": [[449, "parameters"]], "Converters": [[449, "converters"]], "Blueprints": [[449, "blueprints"], [513, "blueprints"]], "Operators": [[449, "operators"]], "The Standard Operator": [[449, "the-standard-operator"]], "The Snapshots Operator": [[449, "the-snapshots-operator"]], "The Interface Stack": [[449, "the-interface-stack"]], "Interface Interaction Hooks": [[449, "interface-interaction-hooks"]], "Adding a new interface": [[449, "adding-a-new-interface"]], "How interfaces get called": [[449, "how-interfaces-get-called"]], "Plugins": [[449, "plugins"]], "Developer Docs": [[450, "developer-docs"]], "Making ARMI-based Apps": [[451, "making-armi-based-apps"]], "Heads up": [[451, null]], "ARMI Plugins": [[451, "armi-plugins"]], "Some implementation details": [[451, "some-implementation-details"]], "Making your own Plugin": [[451, "making-your-own-plugin"]], "ARMI-Based Applications": [[451, "armi-based-applications"]], "Parallel Code in ARMI": [[452, "parallel-code-in-armi"]], "MPI communication crash course": [[452, "mpi-communication-crash-course"]], "MPI Communication within ARMI": [[452, "mpi-communication-within-armi"]], "Example using bcast": [[452, "example-using-bcast"]], "Example using scatter": [[452, "example-using-scatter"]], "A simplified approach": [[452, "a-simplified-approach"]], "Profiling ARMI": [[453, "profiling-armi"]], "Reports in ARMI": [[454, "reports-in-armi"]], "The Hook: getReportContents()": [[454, "the-hook-getreportcontents"]], "What is ReportContent?": [[454, "what-is-reportcontent"]], "Sections": [[454, "sections"]], "Tables": [[454, "tables"]], "Images": [[454, "images"]], "TimeSeries": [[454, "timeseries"]], "HTML Elements": [[454, "html-elements"]], "Summary": [[454, "summary"]], "Standards and Practices for Coding": [[455, "standards-and-practices-for-coding"]], "Code formatting with Black": [[455, "code-formatting-with-black"]], "Address the ruff warnings": [[455, "address-the-ruff-warnings"]], "Remove commented-out code": [[455, "remove-commented-out-code"]], "Avoid hard-coding run parameters": [[455, "avoid-hard-coding-run-parameters"]], "Avoid the global keyword": [[455, "avoid-the-global-keyword"]], "Naming conventions": [[455, "naming-conventions"]], "Use meaningful names": [[455, "use-meaningful-names"]], "General conventions": [[455, "general-conventions"]], "Naming quick-reference": [[455, "naming-quick-reference"]], "Common naming conventions within ARMI": [[455, "common-naming-conventions-within-armi"]], "Prefer shorter methods": [[455, "prefer-shorter-methods"]], "Avoid repeating code": [[455, "avoid-repeating-code"]], "Public methods should have docstrings": [[455, "public-methods-should-have-docstrings"]], "Unit tests": [[455, "unit-tests"]], "Import statements": [[455, "import-statements"]], "Import ordering": [[455, "import-ordering"]], "Don\u2019t create naked exceptions.": [[455, "don-t-create-naked-exceptions"]], "Data model": [[455, "data-model"]], "Input files": [[455, "input-files"]], "General do\u2019s and don\u2019ts": [[455, "general-do-s-and-don-ts"]], "Tooling and Infrastructure": [[456, "tooling-and-infrastructure"]], "Good Commit Messages": [[456, "good-commit-messages"]], "Good Pull Requests": [[456, "good-pull-requests"]], "One Idea = One PR": [[456, "one-idea-one-pr"]], "Don\u2019t open until it is ready": [[456, "don-t-open-until-it-is-ready"]], "Test It": [[456, "test-it"]], "Document It": [[456, "document-it"]], "Watch for Requirements": [[456, "watch-for-requirements"]], "Add Release Notes": [[456, "add-release-notes"]], "Packaging and dependency management": [[456, "packaging-and-dependency-management"]], "pyproject.toml": [[456, "pyproject-toml"]], "Third-Party Licensing": [[456, "third-party-licensing"]], "Releasing a New Version of ARMI": [[456, "releasing-a-new-version-of-armi"]], "Logging with runLog": [[456, "logging-with-runlog"]], "Blocking Duplicate Logs": [[456, "blocking-duplicate-logs"]], "Module-Level Logging": [[456, "module-level-logging"]], "Gallery": [[457, "gallery"], [482, "gallery"], [500, "gallery"]], "Analysis": [[458, "analysis"], [461, "analysis"], [482, "analysis"], [500, "analysis"]], "Applications": [[459, "applications"], [466, "applications"], [482, "applications"], [500, "applications"]], "Framework": [[460, "framework"], [467, "framework"], [482, "framework"], [500, "framework"]], "Write MCNP Material Cards": [[462, "write-mcnp-material-cards"]], "Hex block to RZ geometry conversion": [[463, "hex-block-to-rz-geometry-conversion"]], "Hex reactor to RZ geometry conversion": [[464, "hex-reactor-to-rz-geometry-conversion"]], "Computation times": [[465, "computation-times"], [481, "computation-times"]], "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion": [[468, "computing-component-volume-fractions-on-a-block-with-automatic-thermal-expansion"]], "Plot a chart of the nuclides.": [[469, "plot-a-chart-of-the-nuclides"]], "More details": [[469, null]], "Computing Reaction Rates on a Block.": [[470, "computing-reaction-rates-on-a-block"]], "Make a hex grid.": [[472, "make-a-hex-grid"]], "Make a Cartesian grid.": [[473, "make-a-cartesian-grid"]], "Make a Theta-R-Z grid.": [[474, "make-a-theta-r-z-grid"]], "Plotting Multi-group XS from ISOTXS.": [[475, "plotting-multi-group-xs-from-isotxs"]], "Plotting a multi-group scatter matrix.": [[476, "plotting-a-multi-group-scatter-matrix"]], "Listing of Material Library.": [[477, "listing-of-material-library"]], "Build Reactor Inputs Programmatically.": [[478, "build-reactor-inputs-programmatically"]], "Plot a reactor facemap.": [[479, "plot-a-reactor-facemap"]], "Transmutation and decay reactions.": [[480, "transmutation-and-decay-reactions"]], "Glossary": [[483, "glossary"]], "ARMI": [[484, "armi"]], "Quick links": [[484, "id3"]], "Quick start": [[484, "quick-start"]], "Background": [[484, "background"]], "Communication and coupling": [[484, "communication-and-coupling"]], "Automation": [[484, "automation"]], "New analysis and physics capabilities": [[484, "new-analysis-and-physics-capabilities"]], "Use cases": [[484, "use-cases"]], "The Research Scientist": [[484, "the-research-scientist"]], "The Nuclear Startup Engineer": [[484, "the-nuclear-startup-engineer"]], "Operating and Vendor Engineers": [[484, "operating-and-vendor-engineers"]], "The Enthusiast": [[484, "the-enthusiast"]], "History of ARMI": [[484, "history-of-armi"]], "System Requirements": [[484, "system-requirements"]], "Getting help": [[484, "getting-help"]], "Disclaimers": [[484, "disclaimers"]], "License": [[484, "license"]], "Installation": [[485, "installation"], [514, "installation"]], "Prerequisites": [[485, "prerequisites"], [514, "prerequisites"]], "The right Python command": [[485, null], [514, null]], "Preparing a Virtual Environment": [[485, "preparing-a-virtual-environment"], [514, "preparing-a-virtual-environment"]], "Getting the code": [[485, "getting-the-code"], [514, "getting-the-code"]], "Step 0: Update PIP": [[485, "step-0-update-pip"], [514, "step-0-update-pip"]], "Option 1: Install as a library": [[485, "option-1-install-as-a-library"], [514, "option-1-install-as-a-library"]], "Option 2: Install as a repository (for developers)": [[485, "option-2-install-as-a-repository-for-developers"], [514, "option-2-install-as-a-repository-for-developers"]], "Verifying installation": [[485, "verifying-installation"], [514, "verifying-installation"]], "Optional Setup": [[485, "optional-setup"], [514, "optional-setup"]], "GUI input": [[485, "gui-input"], [514, "gui-input"]], "GUI output": [[485, "gui-output"], [514, "gui-output"]], "ARMI v0.1 Release Notes": [[486, "armi-v0-1-release-notes"]], "ARMI v0.1.7": [[486, "armi-v0-1-7"]], "API changes": [[486, "api-changes"]], "Bug fixes": [[486, "bug-fixes"], [487, "bug-fixes"], [487, "id6"], [487, "id9"], [487, "id13"], [487, "id16"], [487, "id18"], [487, "id22"], [487, "id24"], [487, "id26"], [487, "id29"]], "ARMI v0.1.6": [[486, "armi-v0-1-6"]], "Deprecations": [[486, "deprecations"]], "Bugfixes": [[486, "bugfixes"], [486, "id1"], [486, "id2"], [486, "id4"]], "ARMI v0.1.5": [[486, "armi-v0-1-5"]], "User-facing enhancements": [[486, "user-facing-enhancements"], [486, "id3"], [486, "id6"]], "Backend changes": [[486, "backend-changes"], [486, "id5"], [486, "id7"]], "ARMI v0.1.4": [[486, "armi-v0-1-4"]], "ARMI v0.1.3": [[486, "armi-v0-1-3"]], "ARMI v0.1.2": [[486, "armi-v0-1-2"]], "Hotfixes": [[486, "hotfixes"]], "ARMI v0.1.1": [[486, "armi-v0-1-1"]], "ARMI v0.1.0": [[486, "armi-v0-1-0"]], "ARMI v0.2 Release Notes": [[487, "armi-v0-2-release-notes"]], "ARMI v0.2.9": [[487, "armi-v0-2-9"]], "What\u2019s new in ARMI": [[487, "what-s-new-in-armi"], [487, "id5"], [487, "id7"], [487, "id11"], [487, "id15"], [487, "id17"], [487, "id21"]], "Build changes": [[487, "build-changes"]], "ARMI v0.2.8": [[487, "armi-v0-2-8"]], "ARMI v0.2.7": [[487, "armi-v0-2-7"]], "ARMI v0.2.6": [[487, "armi-v0-2-6"]], "ARMI v0.2.5": [[487, "armi-v0-2-5"]], "ARMI v0.2.4": [[487, "armi-v0-2-4"]], "ARMI v0.2.3": [[487, "armi-v0-2-3"]], "ARMI v0.2.2": [[487, "armi-v0-2-2"]], "What\u2019s new in ARMI v0.2.2": [[487, "what-s-new-in-armi-v0-2-2"]], "ARMI v0.2.1": [[487, "armi-v0-2-1"]], "What\u2019s new in ARMI v0.2.1": [[487, "what-s-new-in-armi-v0-2-1"]], "ARMI v0.2.0": [[487, "armi-v0-2-0"]], "What\u2019s new in ARMI v0.2.0": [[487, "what-s-new-in-armi-v0-2-0"]], "Backwards incompatible changes": [[487, "backwards-incompatible-changes"]], "ARMI v0.3 Release Notes": [[488, "armi-v0-3-release-notes"]], "ARMI v0.3.0": [[488, "armi-v0-3-0"]], "What\u2019s new in ARMI?": [[488, "what-s-new-in-armi"]], "Bug Fixes": [[488, "bug-fixes"], [489, "bug-fixes"], [490, "bug-fixes"], [490, "id13"]], "Quality Work": [[488, "quality-work"], [489, "quality-work"], [490, "quality-work"], [490, "id16"]], "ARMI v0.4 Release Notes": [[489, "armi-v0-4-release-notes"]], "ARMI v0.4.0": [[489, "armi-v0-4-0"]], "New Features": [[489, "new-features"], [490, "new-features"], [490, "id1"]], "API Changes": [[489, "api-changes"], [490, "api-changes"], [490, "id4"]], "Changes that Affect Requirements": [[489, "changes-that-affect-requirements"]], "ARMI v0.5 Release Notes": [[490, "armi-v0-5-release-notes"]], "ARMI v0.5.1": [[490, "armi-v0-5-1"]], "ARMI v0.5.0": [[490, "armi-v0-5-0"]], "Release Notes": [[491, "release-notes"]], "Hands-on at the ARMI Terminal": [[492, "Hands-on-at-the-ARMI-Terminal"]], "Initializing and Exploring the ARMI Model": [[492, "Initializing-and-Exploring-the-ARMI-Model"]], "Quiz Question 1": [[492, null]], "Exploring the state of the reactor": [[492, "Exploring-the-state-of-the-reactor"]], "Modifying the state of the reactor": [[492, "Modifying-the-state-of-the-reactor"]], "Modifying number densities": [[492, "Modifying-number-densities"]], "Saving state to disk": [[492, "Saving-state-to-disk"]], "Fuel management": [[492, "Fuel-management"]], "Loading from the database": [[492, "Loading-from-the-database"]], "Tutorials": [[493, "tutorials"]], "Making your first ARMI-based App": [[494, "making-your-first-armi-based-app"]], "Starting a new app": [[494, "starting-a-new-app"]], "Registering the app with ARMI": [[494, "registering-the-app-with-armi"]], "Defining the app class": [[494, "defining-the-app-class"]], "Apps vs. plugins vs. interfaces": [[494, null]], "Defining the physics plugin": [[494, "defining-the-physics-plugin"]], "What are plugins again?": [[494, null]], "Defining custom settings": [[494, "defining-custom-settings"]], "Creating the physics kernels": [[494, "creating-the-physics-kernels"]], "Making the (dummy) flux kernel": [[494, "making-the-dummy-flux-kernel"]], "Making the thermal/hydraulics kernel": [[494, "making-the-thermal-hydraulics-kernel"]], "Adding entry points": [[494, "adding-entry-points"]], "Running the app and debugging": [[494, "running-the-app-and-debugging"]], "Windows tip": [[494, null]], "Submodule tip": [[494, null]], "Yet another way": [[494, null]], "Adding a new material": [[494, "adding-a-new-material"]], "Why __main__.py?": [[494, null]], "Checking the output": [[494, "checking-the-output"]], "Fancy XDMF format": [[494, null]], "Bonus: Ad-hoc UserPlugins": [[494, "bonus-ad-hoc-userplugins"]], "Define the UserPlugin in Python": [[494, "define-the-userplugin-in-python"]], "Define a list of UserPlugins in the Settings File": [[494, "define-a-list-of-userplugins-in-the-settings-file"]], "The ARMI Material Library": [[495, "The-ARMI-Material-Library"]], "The ARMI Nuclide and Element Packages": [[496, "The-ARMI-Nuclide-and-Element-Packages"]], "Accessing Individual Nuclide Data/Attributes": [[496, "Accessing-Individual-Nuclide-Data/Attributes"]], "How many total nuclides and elements are defined in the framework?": [[496, "How-many-total-nuclides-and-elements-are-defined-in-the-framework?"]], "Looking up nuclide and elemental data for U-235": [[496, "Looking-up-nuclide-and-elemental-data-for-U-235"]], "Looking up nuclide and elemental data for Li-7": [[496, "Looking-up-nuclide-and-elemental-data-for-Li-7"]], "Exploring elemental Lithium data": [[496, "Exploring-elemental-Lithium-data"]], "Plotting the Chart of the Nuclides": [[496, "Plotting-the-Chart-of-the-Nuclides"]], "Parameter sweeps": [[497, "Parameter-sweeps"]], "A simple one-dimensional parameter sweep": [[497, "A-simple-one-dimensional-parameter-sweep"]], "Modifying the reactor design": [[497, "Modifying-the-reactor-design"]], "A full factorial parameter sweep": [[497, "A-full-factorial-parameter-sweep"]], "Post-processing the results of the sweep": [[497, "Post-processing-the-results-of-the-sweep"]], "Building input files for a fast reactor": [[498, "building-input-files-for-a-fast-reactor"]], "Setting up the blueprints": [[498, "setting-up-the-blueprints"], [499, "setting-up-the-blueprints"]], "Defining non-fuel blocks": [[498, "defining-non-fuel-blocks"]], "Radial Shields": [[498, "radial-shields"]], "Reflectors": [[498, "reflectors"]], "Control": [[498, "control"]], "Plenum": [[498, "plenum"]], "Defining how the blocks are arranged into assemblies": [[498, "defining-how-the-blocks-are-arranged-into-assemblies"]], "Defining the fuel assemblies": [[498, "defining-the-fuel-assemblies"]], "Defining the non-fuel assemblies": [[498, "defining-the-non-fuel-assemblies"]], "Specifying the core map": [[498, "specifying-the-core-map"]], "Specifying settings": [[498, "specifying-settings"]], "Defining fuel management": [[498, "defining-fuel-management"], [499, "defining-fuel-management"]], "Building input files for a thermal reactor": [[499, "building-input-files-for-a-thermal-reactor"]], "Custom isotopic vectors": [[499, "custom-isotopic-vectors"]], "The UO2 block": [[499, "the-uo2-block"]], "The MOX block": [[499, "the-mox-block"]], "The moderator block": [[499, "the-moderator-block"]], "The 3-D Assembly definitions": [[499, "the-3-d-assembly-definitions"]], "The Systems definition": [[499, "the-systems-definition"]], "The Grids definitions": [[499, "the-grids-definitions"]], "Nuclide Flags": [[499, "nuclide-flags"], [507, "nuclide-flags"]], "The settings file": [[499, "the-settings-file"]], "Ok, so now what?": [[499, "ok-so-now-what"]], "Accessing Entry Points": [[501, "accessing-entry-points"]], "Reports Entry Point": [[501, "reports-entry-point"]], "Assembly Parameters": [[502, "assembly-parameters"]], "Assembly Parameters from Framework": [[502, "id1"]], "Block Parameters": [[503, "block-parameters"]], "Block Parameters from Framework": [[503, "id1"]], "Block Parameters from ThermalHydraulicsPlugin": [[503, "id2"]], "Block Parameters from FuelPerformancePlugin": [[503, "id3"]], "Block Parameters from NeutronicsPlugin": [[503, "id4"]], "Component Parameters": [[504, "component-parameters"]], "Component Parameters from Framework": [[504, "id1"]], "Core Parameters": [[505, "core-parameters"]], "Core Parameters from Framework": [[505, "id1"]], "Core Parameters from NeutronicsPlugin": [[505, "id2"]], "User Docs": [[506, "user-docs"]], "Inputs": [[507, "inputs"]], "YAML Files": [[507, "yaml-files"]], "The Settings Input File": [[507, "the-settings-input-file"]], "The ARMI GUI": [[507, "the-armi-gui"]], "The assembly clicker": [[507, "the-assembly-clicker"]], "The ARMI Environment Tab": [[507, "the-armi-environment-tab"]], "Some special settings": [[507, "some-special-settings"]], "Detail assemblies": [[507, "detail-assemblies"]], "Kinetics settings": [[507, "kinetics-settings"]], "Cycle history": [[507, "cycle-history"]], "Restart cases": [[507, "restart-cases"]], "The Blueprints Input File": [[507, "the-blueprints-input-file"]], "Blueprint sections": [[507, "blueprint-sections"]], "Blocks and Components": [[507, "blocks-and-components"]], "Defining a Component": [[507, "defining-a-component"]], "Component Types": [[507, "component-types"]], "Component Links": [[507, "component-links"]], "Pin lattices": [[507, "pin-lattices"]], "Flags and naming": [[507, "flags-and-naming"]], "Assemblies": [[507, "assemblies"]], "Systems": [[507, "systems"]], "Plugin Behavior": [[507, "plugin-behavior"]], "Grids": [[507, "grids"]], "Custom Isotopics": [[507, "custom-isotopics"]], "Advanced topics": [[507, "advanced-topics"]], "Overlapping shapes": [[507, "overlapping-shapes"]], "Component area modifications": [[507, "component-area-modifications"]], "Putting it all together to make a Block": [[507, "putting-it-all-together-to-make-a-block"]], "Making blocks with unshaped components": [[507, "making-blocks-with-unshaped-components"]], "Fuel Management Input": [[507, "fuel-management-input"]], "Fuel Management Operations": [[507, "fuel-management-operations"]], "swapAssemblies": [[507, "swapassemblies"]], "dischargeSwap": [[507, "dischargeswap"]], "swapCascade": [[507, "swapcascade"]], "Choosing Assemblies to Move": [[507, "choosing-assemblies-to-move"]], "Fuel Management Examples": [[507, "fuel-management-examples"]], "Convergent-Divergent": [[507, "convergent-divergent"]], "Fuel Management Tips": [[507, "fuel-management-tips"]], "Running a branch search": [[507, "running-a-branch-search"]], "Settings Report": [[507, "settings-report"]], "ARMI Settings": [[507, "id15"]], "Accessing Data in ARMI": [[508, "accessing-data-in-armi"]], "Settings and State Variables": [[508, "settings-and-state-variables"]], "Accessing Some Interesting Info": [[508, "accessing-some-interesting-info"]], "Outputs": [[509, "outputs"]], "The Standard Output": [[509, "the-standard-output"]], "The Database File": [[509, "the-database-file"]], "Loading Reactor State": [[509, "loading-reactor-state"]], "Extracting Reactor History": [[509, "extracting-reactor-history"]], "Extracting Settings and Blueprints": [[509, "extracting-settings-and-blueprints"]], "File format": [[509, "file-format"]], "Database Structure": [[509, "database-structure"]], "Database structure": [[509, "id1"]], "Loading Reactor State as Read-Only": [[509, "loading-reactor-state-as-read-only"]], "Physics Coupling": [[510, "physics-coupling"]], "Loose Coupling": [[510, "loose-coupling"]], "Tight Coupling": [[510, "tight-coupling"]], "Eigenvalue": [[510, "eigenvalue"]], "Block-wise Power": [[510, "block-wise-power"]], "The Global Flux Interface": [[510, "the-global-flux-interface"]], "Radial and Axial Expansion and Contraction": [[511, "radial-and-axial-expansion-and-contraction"]], "Thermal Expansion": [[511, "thermal-expansion"]], "Reactor Parameters": [[512, "reactor-parameters"]], "Reactor Parameters from Framework": [[512, "id1"]], "Spatial block parameters": [[513, "spatial-block-parameters"]], "Sub-block spatial grid": [[513, "sub-block-spatial-grid"]], "Auto grid": [[513, "auto-grid"]], "Interacting with spatial data": [[513, "interacting-with-spatial-data"]], "Component locations": [[513, "component-locations"]], "Pin locations": [[513, "pin-locations"]], "Pin parameter data": [[513, "pin-parameter-data"]], "Block rotation": [[513, "block-rotation"]], "Spatial locators": [[513, "spatial-locators"]], "Pin parameters": [[513, "pin-parameters"]], "Corners and edges": [[513, "corners-and-edges"]], "Other rotated parameters": [[513, "other-rotated-parameters"]]}, "indexentries": {"applyasynciowindowsworkaround() (in module armi)": [[0, "armi.applyAsyncioWindowsWorkaround"]], "armi": [[0, "module-armi"], [483, "term-ARMI"]], "configure() (in module armi)": [[0, "armi.configure"]], "disablefutureconfigures() (in module armi)": [[0, "armi.disableFutureConfigures"]], "getapp() (in module armi)": [[0, "armi.getApp"]], "getdefaultpluginmanager() (in module armi)": [[0, "armi.getDefaultPluginManager"]], "getdefaultplugins() (in module armi)": [[0, "armi.getDefaultPlugins"]], "getpluginmanager() (in module armi)": [[0, "armi.getPluginManager"]], "getpluginmanagerorfail() (in module armi)": [[0, "armi.getPluginManagerOrFail"]], "init() (in module armi)": [[0, "armi.init"]], "isconfigured() (in module armi)": [[0, "armi.isConfigured"]], "isstablereleaseversion() (in module armi)": [[0, "armi.isStableReleaseVersion"]], "module": [[0, "module-armi"], [1, "module-armi.apps"], [2, "module-armi.bookkeeping"], [3, "module-armi.bookkeeping.db"], [4, "module-armi.bookkeeping.db.compareDB3"], [5, "module-armi.bookkeeping.db.database"], [6, "module-armi.bookkeeping.db.database3"], [7, "module-armi.bookkeeping.db.databaseInterface"], [8, "module-armi.bookkeeping.db.factory"], [9, "module-armi.bookkeeping.db.jaggedArray"], [10, "module-armi.bookkeeping.db.layout"], [11, "module-armi.bookkeeping.db.passiveDBLoadPlugin"], [12, "module-armi.bookkeeping.db.permissions"], [13, "module-armi.bookkeeping.db.tests"], [14, "module-armi.bookkeeping.db.tests.test_comparedb3"], [15, "module-armi.bookkeeping.db.tests.test_database3"], [16, "module-armi.bookkeeping.db.tests.test_databaseInterface"], [17, "module-armi.bookkeeping.db.tests.test_jaggedArray"], [18, "module-armi.bookkeeping.db.tests.test_layout"], [19, "module-armi.bookkeeping.db.typedefs"], [20, "module-armi.bookkeeping.historyTracker"], [21, "module-armi.bookkeeping.mainInterface"], [22, "module-armi.bookkeeping.memoryProfiler"], [23, "module-armi.bookkeeping.report"], [24, "module-armi.bookkeeping.report.data"], [25, "module-armi.bookkeeping.report.html"], [26, "module-armi.bookkeeping.report.newReportUtils"], [27, "module-armi.bookkeeping.report.newReports"], [28, "module-armi.bookkeeping.report.reportInterface"], [29, "module-armi.bookkeeping.report.reportingUtils"], [30, "module-armi.bookkeeping.report.tests"], [31, "module-armi.bookkeeping.report.tests.test_newReport"], [32, "module-armi.bookkeeping.report.tests.test_report"], [33, "module-armi.bookkeeping.snapshotInterface"], [34, "module-armi.bookkeeping.tests"], [35, "module-armi.bookkeeping.tests.test_historyTracker"], [36, "module-armi.bookkeeping.tests.test_memoryProfiler"], [37, "module-armi.bookkeeping.tests.test_snapshot"], [38, "module-armi.bookkeeping.visualization"], [39, "module-armi.bookkeeping.visualization.dumper"], [40, "module-armi.bookkeeping.visualization.entryPoint"], [41, "module-armi.bookkeeping.visualization.tests"], [42, "module-armi.bookkeeping.visualization.tests.test_vis"], [43, "module-armi.bookkeeping.visualization.tests.test_xdmf"], [44, "module-armi.bookkeeping.visualization.utils"], [45, "module-armi.bookkeeping.visualization.vtk"], [46, "module-armi.bookkeeping.visualization.xdmf"], [47, "module-armi.cases"], [48, "module-armi.cases.case"], [49, "module-armi.cases.inputModifiers"], [50, "module-armi.cases.inputModifiers.inputModifiers"], [51, "module-armi.cases.inputModifiers.neutronicsModifiers"], [52, "module-armi.cases.inputModifiers.pinTypeInputModifiers"], [53, "module-armi.cases.inputModifiers.tests"], [54, "module-armi.cases.inputModifiers.tests.test_inputModifiers"], [55, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"], [56, "module-armi.cases.suite"], [57, "module-armi.cases.suiteBuilder"], [58, "module-armi.cases.tests"], [59, "module-armi.cases.tests.test_cases"], [60, "module-armi.cases.tests.test_suiteBuilder"], [61, "module-armi.cli"], [62, "module-armi.cli.checkInputs"], [63, "module-armi.cli.cleanTemps"], [64, "module-armi.cli.clone"], [65, "module-armi.cli.compareCases"], [66, "module-armi.cli.database"], [67, "module-armi.cli.entryPoint"], [68, "module-armi.cli.gridGui"], [69, "module-armi.cli.migrateInputs"], [70, "module-armi.cli.modify"], [71, "module-armi.cli.reportsEntryPoint"], [72, "module-armi.cli.run"], [73, "module-armi.cli.runSuite"], [74, "module-armi.cli.tests"], [75, "module-armi.cli.tests.test_runEntryPoint"], [76, "module-armi.cli.tests.test_runSuite"], [77, "module-armi.conftest"], [78, "module-armi.context"], [79, "module-armi.interfaces"], [80, "module-armi.materials"], [81, "module-armi.materials.air"], [82, "module-armi.materials.alloy200"], [83, "module-armi.materials.b4c"], [84, "module-armi.materials.be9"], [85, "module-armi.materials.caH2"], [86, "module-armi.materials.californium"], [87, "module-armi.materials.concrete"], [88, "module-armi.materials.copper"], [89, "module-armi.materials.cs"], [90, "module-armi.materials.custom"], [91, "module-armi.materials.graphite"], [92, "module-armi.materials.hafnium"], [93, "module-armi.materials.hastelloyN"], [94, "module-armi.materials.ht9"], [95, "module-armi.materials.inconel"], [96, "module-armi.materials.inconel600"], [97, "module-armi.materials.inconel625"], [98, "module-armi.materials.inconel800"], [99, "module-armi.materials.inconelPE16"], [100, "module-armi.materials.inconelX750"], [101, "module-armi.materials.lead"], [102, "module-armi.materials.leadBismuth"], [103, "module-armi.materials.lithium"], [104, "module-armi.materials.magnesium"], [105, "module-armi.materials.material"], [106, "module-armi.materials.mgO"], [107, "module-armi.materials.mixture"], [108, "module-armi.materials.molybdenum"], [109, "module-armi.materials.mox"], [110, "module-armi.materials.nZ"], [111, "module-armi.materials.potassium"], [112, "module-armi.materials.scandiumOxide"], [113, "module-armi.materials.siC"], [114, "module-armi.materials.sodium"], [115, "module-armi.materials.sodiumChloride"], [116, "module-armi.materials.sulfur"], [117, "module-armi.materials.tZM"], [118, "module-armi.materials.tantalum"], [119, "module-armi.materials.tests"], [120, "module-armi.materials.tests.test__init__"], [121, "module-armi.materials.tests.test_air"], [122, "module-armi.materials.tests.test_b4c"], [123, "module-armi.materials.tests.test_be9"], [124, "module-armi.materials.tests.test_graphite"], [125, "module-armi.materials.tests.test_lithium"], [126, "module-armi.materials.tests.test_materials"], [127, "module-armi.materials.tests.test_sic"], [128, "module-armi.materials.tests.test_sulfur"], [129, "module-armi.materials.tests.test_thoriumOxide"], [130, "module-armi.materials.tests.test_uZr"], [131, "module-armi.materials.tests.test_water"], [132, "module-armi.materials.thU"], [133, "module-armi.materials.thorium"], [134, "module-armi.materials.thoriumOxide"], [135, "module-armi.materials.uThZr"], [136, "module-armi.materials.uZr"], [137, "module-armi.materials.uranium"], [138, "module-armi.materials.uraniumOxide"], [139, "module-armi.materials.void"], [140, "module-armi.materials.water"], [141, "module-armi.materials.yttriumOxide"], [142, "module-armi.materials.zincOxide"], [143, "module-armi.materials.zr"], [144, "module-armi.meta"], [145, "module-armi.migration"], [146, "module-armi.migration.base"], [147, "module-armi.migration.m0_1_3"], [148, "module-armi.migration.m0_1_6"], [149, "module-armi.migration.tests"], [150, "module-armi.migration.tests.test_m0_1_6"], [151, "module-armi.migration.tests.test_migration_base"], [152, "module-armi.mpiActions"], [153, "module-armi.nucDirectory"], [154, "module-armi.nucDirectory.elements"], [155, "module-armi.nucDirectory.nucDir"], [156, "module-armi.nucDirectory.nuclideBases"], [157, "module-armi.nucDirectory.tests"], [158, "module-armi.nucDirectory.tests.test_elements"], [159, "module-armi.nucDirectory.tests.test_nucDirectory"], [160, "module-armi.nucDirectory.tests.test_nuclideBases"], [161, "module-armi.nucDirectory.tests.test_thermalScattering"], [162, "module-armi.nucDirectory.tests.test_transmutations"], [163, "module-armi.nucDirectory.thermalScattering"], [164, "module-armi.nucDirectory.transmutations"], [165, "module-armi.nuclearDataIO"], [166, "module-armi.nuclearDataIO.cccc"], [167, "module-armi.nuclearDataIO.cccc.cccc"], [168, "module-armi.nuclearDataIO.cccc.compxs"], [169, "module-armi.nuclearDataIO.cccc.dif3d"], [170, "module-armi.nuclearDataIO.cccc.dlayxs"], [171, "module-armi.nuclearDataIO.cccc.fixsrc"], [172, "module-armi.nuclearDataIO.cccc.gamiso"], [173, "module-armi.nuclearDataIO.cccc.geodst"], [174, "module-armi.nuclearDataIO.cccc.isotxs"], [175, "module-armi.nuclearDataIO.cccc.labels"], [176, "module-armi.nuclearDataIO.cccc.nhflux"], [177, "module-armi.nuclearDataIO.cccc.pmatrx"], [178, "module-armi.nuclearDataIO.cccc.pwdint"], [179, "module-armi.nuclearDataIO.cccc.rtflux"], [180, "module-armi.nuclearDataIO.cccc.rzflux"], [181, "module-armi.nuclearDataIO.cccc.tests"], [182, "module-armi.nuclearDataIO.cccc.tests.test_cccc"], [183, "module-armi.nuclearDataIO.cccc.tests.test_compxs"], [184, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"], [185, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"], [186, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"], [187, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"], [188, "module-armi.nuclearDataIO.cccc.tests.test_geodst"], [189, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"], [190, "module-armi.nuclearDataIO.cccc.tests.test_labels"], [191, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"], [192, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"], [193, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"], [194, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"], [195, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"], [196, "module-armi.nuclearDataIO.nuclearFileMetadata"], [197, "module-armi.nuclearDataIO.tests"], [198, "module-armi.nuclearDataIO.tests.test_xsCollections"], [199, "module-armi.nuclearDataIO.tests.test_xsLibraries"], [200, "module-armi.nuclearDataIO.tests.test_xsNuclides"], [201, "module-armi.nuclearDataIO.xsCollections"], [202, "module-armi.nuclearDataIO.xsLibraries"], [203, "module-armi.nuclearDataIO.xsNuclides"], [204, "module-armi.operators"], [205, "module-armi.operators.operator"], [206, "module-armi.operators.operatorMPI"], [207, "module-armi.operators.runTypes"], [208, "module-armi.operators.settingsValidation"], [209, "module-armi.operators.snapshots"], [210, "module-armi.operators.tests"], [211, "module-armi.operators.tests.test_operatorSnapshots"], [212, "module-armi.operators.tests.test_operators"], [213, "module-armi.physics"], [214, "module-armi.physics.constants"], [215, "module-armi.physics.executers"], [216, "module-armi.physics.fuelCycle"], [217, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"], [218, "module-armi.physics.fuelCycle.fuelHandlerFactory"], [219, "module-armi.physics.fuelCycle.fuelHandlerInterface"], [220, "module-armi.physics.fuelCycle.fuelHandlers"], [221, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"], [222, "module-armi.physics.fuelCycle.settings"], [223, "module-armi.physics.fuelCycle.tests"], [224, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"], [225, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"], [226, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"], [227, "module-armi.physics.fuelCycle.tests.test_utils"], [228, "module-armi.physics.fuelCycle.utils"], [229, "module-armi.physics.fuelPerformance"], [230, "module-armi.physics.fuelPerformance.executers"], [231, "module-armi.physics.fuelPerformance.parameters"], [232, "module-armi.physics.fuelPerformance.plugin"], [233, "module-armi.physics.fuelPerformance.settings"], [234, "module-armi.physics.fuelPerformance.tests"], [235, "module-armi.physics.fuelPerformance.tests.test_executers"], [236, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"], [237, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"], [238, "module-armi.physics.fuelPerformance.utils"], [239, "module-armi.physics.neutronics"], [240, "module-armi.physics.neutronics.const"], [241, "module-armi.physics.neutronics.crossSectionGroupManager"], [242, "module-armi.physics.neutronics.crossSectionSettings"], [243, "module-armi.physics.neutronics.diffIsotxs"], [244, "module-armi.physics.neutronics.energyGroups"], [245, "module-armi.physics.neutronics.fissionProductModel"], [246, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"], [247, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"], [248, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"], [249, "module-armi.physics.neutronics.fissionProductModel.tests"], [250, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"], [251, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"], [252, "module-armi.physics.neutronics.globalFlux"], [253, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"], [254, "module-armi.physics.neutronics.globalFlux.tests"], [255, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"], [256, "module-armi.physics.neutronics.latticePhysics"], [257, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"], [258, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"], [259, "module-armi.physics.neutronics.latticePhysics.tests"], [260, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"], [261, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"], [262, "module-armi.physics.neutronics.macroXSGenerationInterface"], [263, "module-armi.physics.neutronics.parameters"], [264, "module-armi.physics.neutronics.reports"], [265, "module-armi.physics.neutronics.settings"], [266, "module-armi.physics.neutronics.tests"], [267, "module-armi.physics.neutronics.tests.test_crossSectionManager"], [268, "module-armi.physics.neutronics.tests.test_crossSectionSettings"], [269, "module-armi.physics.neutronics.tests.test_crossSectionTable"], [270, "module-armi.physics.neutronics.tests.test_energyGroups"], [271, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"], [272, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"], [273, "module-armi.physics.safety"], [274, "module-armi.physics.tests"], [275, "module-armi.physics.tests.test_executers"], [276, "module-armi.physics.thermalHydraulics"], [277, "module-armi.physics.thermalHydraulics.const"], [278, "module-armi.physics.thermalHydraulics.parameters"], [279, "module-armi.physics.thermalHydraulics.plugin"], [280, "module-armi.physics.thermalHydraulics.settings"], [281, "module-armi.physics.thermalHydraulics.tests"], [282, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"], [283, "module-armi.pluginManager"], [284, "module-armi.plugins"], [285, "module-armi.reactor"], [286, "module-armi.reactor.assemblies"], [287, "module-armi.reactor.assemblyParameters"], [288, "module-armi.reactor.blockParameters"], [289, "module-armi.reactor.blocks"], [290, "module-armi.reactor.blueprints"], [291, "module-armi.reactor.blueprints.assemblyBlueprint"], [292, "module-armi.reactor.blueprints.blockBlueprint"], [293, "module-armi.reactor.blueprints.componentBlueprint"], [294, "module-armi.reactor.blueprints.gridBlueprint"], [295, "module-armi.reactor.blueprints.isotopicOptions"], [296, "module-armi.reactor.blueprints.reactorBlueprint"], [297, "module-armi.reactor.blueprints.tests"], [298, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"], [299, "module-armi.reactor.blueprints.tests.test_blockBlueprints"], [300, "module-armi.reactor.blueprints.tests.test_blueprints"], [301, "module-armi.reactor.blueprints.tests.test_componentBlueprint"], [302, "module-armi.reactor.blueprints.tests.test_customIsotopics"], [303, "module-armi.reactor.blueprints.tests.test_gridBlueprints"], [304, "module-armi.reactor.blueprints.tests.test_materialModifications"], [305, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"], [306, "module-armi.reactor.components"], [307, "module-armi.reactor.components.basicShapes"], [308, "module-armi.reactor.components.complexShapes"], [309, "module-armi.reactor.components.component"], [310, "module-armi.reactor.components.componentParameters"], [311, "module-armi.reactor.components.volumetricShapes"], [312, "module-armi.reactor.composites"], [313, "module-armi.reactor.converters"], [314, "module-armi.reactor.converters.axialExpansionChanger"], [315, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"], [316, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"], [317, "module-armi.reactor.converters.axialExpansionChanger.expansionData"], [318, "module-armi.reactor.converters.blockConverters"], [319, "module-armi.reactor.converters.geometryConverters"], [320, "module-armi.reactor.converters.meshConverters"], [321, "module-armi.reactor.converters.parameterSweeps"], [322, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"], [323, "module-armi.reactor.converters.pinTypeBlockConverters"], [324, "module-armi.reactor.converters.tests"], [325, "module-armi.reactor.converters.tests.test_axialExpansionChanger"], [326, "module-armi.reactor.converters.tests.test_blockConverter"], [327, "module-armi.reactor.converters.tests.test_geometryConverters"], [328, "module-armi.reactor.converters.tests.test_meshConverters"], [329, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"], [330, "module-armi.reactor.converters.tests.test_uniformMesh"], [331, "module-armi.reactor.converters.uniformMesh"], [332, "module-armi.reactor.cores"], [333, "module-armi.reactor.excoreStructure"], [334, "module-armi.reactor.flags"], [335, "module-armi.reactor.geometry"], [336, "module-armi.reactor.grids"], [337, "module-armi.reactor.grids.axial"], [338, "module-armi.reactor.grids.cartesian"], [339, "module-armi.reactor.grids.constants"], [340, "module-armi.reactor.grids.grid"], [341, "module-armi.reactor.grids.hexagonal"], [342, "module-armi.reactor.grids.locations"], [343, "module-armi.reactor.grids.structuredGrid"], [344, "module-armi.reactor.grids.thetarz"], [345, "module-armi.reactor.parameters"], [346, "module-armi.reactor.parameters.exceptions"], [347, "module-armi.reactor.parameters.parameterCollections"], [348, "module-armi.reactor.parameters.parameterDefinitions"], [349, "module-armi.reactor.parameters.resolveCollections"], [350, "module-armi.reactor.reactorParameters"], [351, "module-armi.reactor.reactors"], [352, "module-armi.reactor.spentFuelPool"], [353, "module-armi.reactor.systemLayoutInput"], [354, "module-armi.reactor.tests"], [355, "module-armi.reactor.tests.test_assemblies"], [356, "module-armi.reactor.tests.test_blocks"], [357, "module-armi.reactor.tests.test_components"], [358, "module-armi.reactor.tests.test_composites"], [359, "module-armi.reactor.tests.test_excoreStructures"], [360, "module-armi.reactor.tests.test_flags"], [361, "module-armi.reactor.tests.test_geometry"], [362, "module-armi.reactor.tests.test_hexBlockRotate"], [363, "module-armi.reactor.tests.test_parameters"], [364, "module-armi.reactor.tests.test_reactors"], [365, "module-armi.reactor.tests.test_rz_reactors"], [366, "module-armi.reactor.tests.test_zones"], [367, "module-armi.reactor.zones"], [368, "module-armi.runLog"], [369, "module-armi.settings"], [370, "module-armi.settings.caseSettings"], [371, "module-armi.settings.fwSettings"], [372, "module-armi.settings.fwSettings.databaseSettings"], [373, "module-armi.settings.fwSettings.globalSettings"], [374, "module-armi.settings.fwSettings.reportSettings"], [375, "module-armi.settings.fwSettings.tightCouplingSettings"], [376, "module-armi.settings.setting"], [377, "module-armi.settings.settingsIO"], [378, "module-armi.settings.settingsValidation"], [379, "module-armi.settings.tests"], [380, "module-armi.settings.tests.test_inspectors"], [381, "module-armi.settings.tests.test_settings"], [382, "module-armi.settings.tests.test_settingsIO"], [383, "module-armi.tests"], [384, "module-armi.tests.mockRunLogs"], [385, "module-armi.tests.refSmallReactorShuffleLogic"], [386, "module-armi.tests.test_apps"], [387, "module-armi.tests.test_armiTestHelper"], [388, "module-armi.tests.test_cartesian"], [389, "module-armi.tests.test_context"], [390, "module-armi.tests.test_interfaces"], [391, "module-armi.tests.test_lwrInputs"], [392, "module-armi.tests.test_mpiActions"], [393, "module-armi.tests.test_mpiFeatures"], [394, "module-armi.tests.test_mpiParameters"], [395, "module-armi.tests.test_notebooks"], [396, "module-armi.tests.test_plugins"], [397, "module-armi.tests.test_runLog"], [398, "module-armi.tests.test_tests"], [399, "module-armi.tests.test_user_plugins"], [400, "module-armi.utils"], [401, "module-armi.utils.asciimaps"], [402, "module-armi.utils.codeTiming"], [403, "module-armi.utils.customExceptions"], [404, "module-armi.utils.densityTools"], [405, "module-armi.utils.directoryChangers"], [406, "module-armi.utils.directoryChangersMpi"], [407, "module-armi.utils.dynamicImporter"], [408, "module-armi.utils.flags"], [410, "module-armi.utils.hexagon"], [411, "module-armi.utils.iterables"], [412, "module-armi.utils.mathematics"], [413, "module-armi.utils.outputCache"], [414, "module-armi.utils.parsing"], [415, "module-armi.utils.pathTools"], [416, "module-armi.utils.plotting"], [417, "module-armi.utils.properties"], [418, "module-armi.utils.reportPlotting"], [419, "module-armi.utils.tabulate"], [420, "module-armi.utils.tests"], [421, "module-armi.utils.tests.test_asciimaps"], [422, "module-armi.utils.tests.test_codeTiming"], [423, "module-armi.utils.tests.test_custom_exceptions"], [424, "module-armi.utils.tests.test_densityTools"], [425, "module-armi.utils.tests.test_directoryChangers"], [426, "module-armi.utils.tests.test_directoryChangersMpi"], [427, "module-armi.utils.tests.test_flags"], [428, "module-armi.utils.tests.test_hexagon"], [429, "module-armi.utils.tests.test_iterables"], [430, "module-armi.utils.tests.test_mathematics"], [431, "module-armi.utils.tests.test_outputCache"], [432, "module-armi.utils.tests.test_parsing"], [433, "module-armi.utils.tests.test_pathTools"], [434, "module-armi.utils.tests.test_plotting"], [435, "module-armi.utils.tests.test_properties"], [436, "module-armi.utils.tests.test_reportPlotting"], [437, "module-armi.utils.tests.test_tabulate"], [438, "module-armi.utils.tests.test_textProcessors"], [439, "module-armi.utils.tests.test_triangle"], [440, "module-armi.utils.tests.test_units"], [441, "module-armi.utils.tests.test_utils"], [442, "module-armi.utils.textProcessors"], [443, "module-armi.utils.triangle"], [444, "module-armi.utils.units"]], "app (class in armi.apps)": [[1, "armi.apps.App"]], "armi.apps": [[1, "module-armi.apps"]], "getparamrenames() (armi.apps.app method)": [[1, "armi.apps.App.getParamRenames"]], "getsettings() (armi.apps.app method)": [[1, "armi.apps.App.getSettings"]], "name (armi.apps.app attribute)": [[1, "armi.apps.App.name"]], "pluginmanager (armi.apps.app property)": [[1, "armi.apps.App.pluginManager"]], "registerpluginflags() (armi.apps.app method)": [[1, "armi.apps.App.registerPluginFlags"]], "registeruserplugins() (armi.apps.app method)": [[1, "armi.apps.App.registerUserPlugins"]], "splashtext (armi.apps.app property)": [[1, "armi.apps.App.splashText"]], "version (armi.apps.app property)": [[1, "armi.apps.App.version"]], "bookkeepingplugin (class in armi.bookkeeping)": [[2, "armi.bookkeeping.BookkeepingPlugin"]], "armi.bookkeeping": [[2, "module-armi.bookkeeping"]], "definecasedependencies() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineEntryPoints"]], "exposeinterfaces() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.exposeInterfaces"]], "getreportcontents() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.mpiActionRequiresReset"]], "database (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.Database"]], "database3 (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.Database3"]], "databaseinterface (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.DatabaseInterface"]], "armi.bookkeeping.db": [[3, "module-armi.bookkeeping.db"]], "close() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.close"]], "closedb() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.closeDB"]], "comparedatabases() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.compareDatabases"]], "database (armi.bookkeeping.db.databaseinterface property)": [[3, "armi.bookkeeping.db.DatabaseInterface.database"]], "databasefactory() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.databaseFactory"]], "distributable() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.distributable"]], "filename (armi.bookkeeping.db.database property)": [[3, "armi.bookkeeping.db.Database.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database static method)": [[3, "armi.bookkeeping.db.Database.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getH5Group"]], "gethistories() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getHistories"]], "gethistories() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getHistory"]], "gethistory() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database static method)": [[3, "armi.bookkeeping.db.Database.grabLocalCommitHash"]], "h5db (armi.bookkeeping.db.database3 attribute)": [[3, "armi.bookkeeping.db.Database3.h5db"]], "hastimestep() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.hasTimeStep"]], "initdb() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEveryNode"]], "isopen() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.isOpen"]], "keys() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.keys"]], "load() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.load"]], "loadblueprints() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.loadGeometry"]], "loadoperator() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.loadOperator"]], "loadreadonly() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.loadReadOnly"]], "loadstate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.loadState"]], "mergehistory() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.mergeHistory"]], "name (armi.bookkeeping.db.databaseinterface attribute)": [[3, "armi.bookkeeping.db.DatabaseInterface.name"]], "open() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.open"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.prepRestartRun"]], "readinputsfromdb() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database attribute)": [[3, "armi.bookkeeping.db.Database.timeNodeGroupPattern"]], "version (armi.bookkeeping.db.database property)": [[3, "armi.bookkeeping.db.Database.version"]], "versionmajor (armi.bookkeeping.db.database property)": [[3, "armi.bookkeeping.db.Database.versionMajor"]], "versionminor (armi.bookkeeping.db.database property)": [[3, "armi.bookkeeping.db.Database.versionMinor"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.writeDBEveryNode"]], "writeinputstodb() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.writeInputsToDB"]], "writesystemattributes() (armi.bookkeeping.db.database static method)": [[3, "armi.bookkeeping.db.Database.writeSystemAttributes"]], "writetodb() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.writeToDB"]], "diffresults (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults"]], "outputwriter (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter"]], "adddiff() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addDiff"]], "addstructurediffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addStructureDiffs"]], "addtimestep() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addTimeStep"]], "armi.bookkeeping.db.comparedb3": [[4, "module-armi.bookkeeping.db.compareDB3"]], "comparedatabases() (in module armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.compareDatabases"]], "ndiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.nDiffs"]], "reportdiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.reportDiffs"]], "writeln() (armi.bookkeeping.db.comparedb3.outputwriter method)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter.writeln"]], "database (class in armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.Database"]], "armi.bookkeeping.db.database": [[5, "module-armi.bookkeeping.db.database"]], "close() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.close"]], "collectblocknumberdensities() (in module armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.collectBlockNumberDensities"]], "filename (armi.bookkeeping.db.database.database property)": [[5, "armi.bookkeeping.db.database.Database.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database.database static method)": [[5, "armi.bookkeeping.db.database.Database.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getH5Group"]], "geth5groupname() (in module armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.getH5GroupName"]], "gethistories() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database.database static method)": [[5, "armi.bookkeeping.db.database.Database.grabLocalCommitHash"]], "h5db (armi.bookkeeping.db.database.database attribute)": [[5, "armi.bookkeeping.db.database.Database.h5db"]], "hastimestep() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.hasTimeStep"]], "isopen() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.isOpen"]], "keys() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.keys"]], "load() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.load"]], "loadblueprints() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.loadGeometry"]], "loadreadonly() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.loadReadOnly"]], "mergehistory() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.mergeHistory"]], "open() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.open"]], "packspecialdata() (in module armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.packSpecialData"]], "readinputsfromdb() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database.database attribute)": [[5, "armi.bookkeeping.db.database.Database.timeNodeGroupPattern"]], "unpackspecialdata() (in module armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.unpackSpecialData"]], "version (armi.bookkeeping.db.database.database property)": [[5, "armi.bookkeeping.db.database.Database.version"]], "versionmajor (armi.bookkeeping.db.database.database property)": [[5, "armi.bookkeeping.db.database.Database.versionMajor"]], "versionminor (armi.bookkeeping.db.database.database property)": [[5, "armi.bookkeeping.db.database.Database.versionMinor"]], "writeinputstodb() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.writeInputsToDB"]], "writesystemattributes() (armi.bookkeeping.db.database.database static method)": [[5, "armi.bookkeeping.db.database.Database.writeSystemAttributes"]], "writetodb() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.writeToDB"]], "database3 (class in armi.bookkeeping.db.database3)": [[6, "armi.bookkeeping.db.database3.Database3"]], "armi.bookkeeping.db.database3": [[6, "module-armi.bookkeeping.db.database3"]], "h5db (armi.bookkeeping.db.database3.database3 attribute)": [[6, "armi.bookkeeping.db.database3.Database3.h5db"]], "databaseinterface (class in armi.bookkeeping.db.databaseinterface)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface"]], "armi.bookkeeping.db.databaseinterface": [[7, "module-armi.bookkeeping.db.databaseInterface"]], "closedb() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.closeDB"]], "database (armi.bookkeeping.db.databaseinterface.databaseinterface property)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.database"]], "describeinterfaces() (in module armi.bookkeeping.db.databaseinterface)": [[7, "armi.bookkeeping.db.databaseInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.distributable"]], "gethistories() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistories"]], "gethistory() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistory"]], "initdb() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEveryNode"]], "loadstate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.loadState"]], "name (armi.bookkeeping.db.databaseinterface.databaseinterface attribute)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.name"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.prepRestartRun"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[8, "module-armi.bookkeeping.db.factory"]], "databasefactory() (in module armi.bookkeeping.db.factory)": [[8, "armi.bookkeeping.db.factory.databaseFactory"]], "jaggedarray (class in armi.bookkeeping.db.jaggedarray)": [[9, "armi.bookkeeping.db.jaggedArray.JaggedArray"]], "armi.bookkeeping.db.jaggedarray": [[9, "module-armi.bookkeeping.db.jaggedArray"]], "flatten() (armi.bookkeeping.db.jaggedarray.jaggedarray static method)": [[9, "armi.bookkeeping.db.jaggedArray.JaggedArray.flatten"]], "fromh5() (armi.bookkeeping.db.jaggedarray.jaggedarray class method)": [[9, "armi.bookkeeping.db.jaggedArray.JaggedArray.fromH5"]], "tolist() (armi.bookkeeping.db.jaggedarray.jaggedarray method)": [[9, "armi.bookkeeping.db.jaggedArray.JaggedArray.tolist"]], "unpack() (armi.bookkeeping.db.jaggedarray.jaggedarray method)": [[9, "armi.bookkeeping.db.jaggedArray.JaggedArray.unpack"]], "layout (class in armi.bookkeeping.db.layout)": [[10, "armi.bookkeeping.db.layout.Layout"]], "allsubclasses() (armi.bookkeeping.db.layout.layout static method)": [[10, "armi.bookkeeping.db.layout.Layout.allSubclasses"]], "armi.bookkeeping.db.layout": [[10, "module-armi.bookkeeping.db.layout"]], "computeancestors() (armi.bookkeeping.db.layout.layout static method)": [[10, "armi.bookkeeping.db.layout.Layout.computeAncestors"]], "replacenoneswithnonsense() (in module armi.bookkeeping.db.layout)": [[10, "armi.bookkeeping.db.layout.replaceNonesWithNonsense"]], "replacenonsensewithnones() (in module armi.bookkeeping.db.layout)": [[10, "armi.bookkeeping.db.layout.replaceNonsenseWithNones"]], "writetodb() (armi.bookkeeping.db.layout.layout method)": [[10, "armi.bookkeeping.db.layout.Layout.writeToDB"]], "passthroughyamlize (class in armi.bookkeeping.db.passivedbloadplugin)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize"]], "passivedbloadplugin (class in armi.bookkeeping.db.passivedbloadplugin)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin"]], "skip_bp_sections (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin attribute)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.SKIP_BP_SECTIONS"]], "unknown_params (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin attribute)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.UNKNOWN_PARAMS"]], "armi.bookkeeping.db.passivedbloadplugin": [[11, "module-armi.bookkeeping.db.passiveDBLoadPlugin"]], "attributes (armi.bookkeeping.db.passivedbloadplugin.passthroughyamlize attribute)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize.attributes"]], "buildparamcoll() (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin static method)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.buildParamColl"]], "defineblueprintssections() (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin static method)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.defineBlueprintsSections"]], "defineparameters() (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin static method)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.defineParameters"]], "from_yaml() (armi.bookkeeping.db.passivedbloadplugin.passthroughyamlize class method)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize.from_yaml"]], "create_file_fie (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE"]], "create_file_fie2 (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE2"]], "create_file_tie (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_TIE"]], "default (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.DEFAULT"]], "permissions (class in armi.bookkeeping.db.permissions)": [[12, "armi.bookkeeping.db.permissions.Permissions"]], "read_only_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.READ_ONLY_FME"]], "read_write_create (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_CREATE"]], "read_write_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_FME"]], "all (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.all"]], "armi.bookkeeping.db.permissions": [[12, "module-armi.bookkeeping.db.permissions"]], "create (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.create"]], "read (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.read"]], "write (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.write"]], "armi.bookkeeping.db.tests": [[13, "module-armi.bookkeeping.db.tests"]], "testcomparedb3 (class in armi.bookkeeping.db.tests.test_comparedb3)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3": [[14, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "test_compareauxdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareAuxData"]], "test_comparedatabaseduplicate() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseDuplicate"]], "test_comparedatabasesim() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseSim"]], "test_comparesets() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareSets"]], "test_diffresultsbasic() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffResultsBasic"]], "test_diffsimpledata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSimpleData"]], "test_diffspecialdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSpecialData"]], "test_outputwriter() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_outputWriter"]], "small_yaml (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase attribute)": [[15, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.SMALL_YAML"]], "testdatabase (class in armi.bookkeeping.db.tests.test_database3)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabase"]], "testdatabasesmaller (class in armi.bookkeeping.db.tests.test_database3)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller"]], "testwritereaddatabase (class in armi.bookkeeping.db.tests.test_database3)": [[15, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase"]], "armi.bookkeeping.db.tests.test_database3": [[15, "module-armi.bookkeeping.db.tests.test_database3"]], "makehistory() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.makeHistory"]], "makeshufflehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabase.makeShuffleHistory"]], "test_auxdata() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_auxData"]], "test_baddata() (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.test_badData"]], "test_computeparents() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_computeParents"]], "test_deleting() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_deleting"]], "test_filename() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_fileName"]], "test_geth5file() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_getH5File"]], "test_grablocalcommithash() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_grabLocalCommitHash"]], "test_history() (armi.bookkeeping.db.tests.test_database3.testdatabase method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabase.test_history"]], "test_load() (armi.bookkeeping.db.tests.test_database3.testdatabase method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabase.test_load"]], "test_loadblueprints() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_loadBlueprints"]], "test_loadcs() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_loadCS"]], "test_loadoperator() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_loadOperator"]], "test_loadsortsetting() (armi.bookkeeping.db.tests.test_database3.testdatabase method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabase.test_loadSortSetting"]], "test_mergehistory() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_mergeHistory"]], "test_open() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_open"]], "test_preprestartrun() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_prepRestartRun"]], "test_readinputsfromdb() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_readInputsFromDB"]], "test_readwriteroundtrip() (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.test_readWriteRoundTrip"]], "test_replacenones() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_replaceNones"]], "test_splitdatabase() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_splitDatabase"]], "test_writetodb() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_writeToDB"]], "mockinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface"]], "testbadname (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName"]], "testdatabaseinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface"]], "testdatabaseinterfacebol (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL"]], "testdatabasereading (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading"]], "testdatabasewriter (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter"]], "teststandardfollowon (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn"]], "armi.bookkeeping.db.tests.test_databaseinterface": [[16, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "getsimpledboperator() (in module armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.getSimpleDBOperator"]], "interacteverynode() (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.interactEveryNode"]], "name (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface attribute)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.name"]], "test_baddbname() (armi.bookkeeping.db.tests.test_databaseinterface.testbadname method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName.test_badDBName"]], "test_demonstratewritinginteractions() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_demonstrateWritingInteractions"]], "test_distributable() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_distributable"]], "test_gethistory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistory"]], "test_gethistorybylocation() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistoryByLocation"]], "test_growtofullcore() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCore"]], "test_growtofullcorefromfactory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactory"]], "test_growtofullcorefromfactorywithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactoryWithCS"]], "test_growtofullcorewithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreWithCS"]], "test_interactbol() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterfacebol method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL.test_interactBOL"]], "test_interacteverynodereturntightcoupling() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_interactEveryNodeReturnTightCoupling"]], "test_loadreadonly() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_loadReadOnly"]], "test_metadataendfail() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaDataEndFail"]], "test_metadata_endsuccessfully() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaData_endSuccessfully"]], "test_nosyncdbafterwrite() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_noSyncDbAfterWrite"]], "test_readwithoutinputs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWithoutInputs"]], "test_readwritten() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWritten"]], "test_standardrestart() (armi.bookkeeping.db.tests.test_databaseinterface.teststandardfollowon method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn.test_standardRestart"]], "test_syncdbafterwrite() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_syncDbAfterWrite"]], "test_timenodeloop_tightcoupling() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_timeNodeLoop_tightCoupling"]], "test_timesteps() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_timesteps"]], "test_varioustypeswork() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_variousTypesWork"]], "test_writesystemattributes() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_writeSystemAttributes"]], "testjaggedarray (class in armi.bookkeeping.db.tests.test_jaggedarray)": [[17, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray"]], "armi.bookkeeping.db.tests.test_jaggedarray": [[17, "module-armi.bookkeeping.db.tests.test_jaggedArray"]], "test_backwardscompatible() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[17, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_backwardsCompatible"]], "test_flatten() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[17, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_flatten"]], "test_roundtrip() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[17, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_roundTrip"]], "test_roundtripbool() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[17, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_roundTripBool"]], "testlocationpacking (class in armi.bookkeeping.db.tests.test_layout)": [[18, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout": [[18, "module-armi.bookkeeping.db.tests.test_layout"]], "test_close() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[18, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_close"]], "test_locationpacking() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[18, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPacking"]], "test_locationpackingoldversion() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[18, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOldVersion"]], "test_locationpackingolderversions() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[18, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOlderVersions"]], "armi.bookkeeping.db.typedefs": [[19, "module-armi.bookkeeping.db.typedefs"]], "detailed_assembly_flags (armi.bookkeeping.historytracker.historytrackerinterface attribute)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.DETAILED_ASSEMBLY_FLAGS"]], "historytrackerinterface (class in armi.bookkeeping.historytracker)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface"]], "addalldetailedassems() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addAllDetailedAssems"]], "adddetailassembliesbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembliesBOL"]], "adddetailassembly() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembly"]], "adddetailassemsbyassemnums() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssemsByAssemNums"]], "armi.bookkeeping.historytracker": [[20, "module-armi.bookkeeping.historyTracker"]], "describeinterfaces() (in module armi.bookkeeping.historytracker)": [[20, "armi.bookkeeping.historyTracker.describeInterfaces"]], "filtertimeindices() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.filterTimeIndices"]], "getblockhistoryval() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getBlockHistoryVal"]], "getdetailassemblies() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailAssemblies"]], "getdetailblocks() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailBlocks"]], "gettimesteps() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTimeSteps"]], "gettrackedparams() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTrackedParams"]], "interactboc() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOC"]], "interactbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOL"]], "interacteol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactEOL"]], "name (armi.bookkeeping.historytracker.historytrackerinterface attribute)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.name"]], "preloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.preloadBlockHistoryVals"]], "unloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.unloadBlockHistoryVals"]], "writeassemhistory() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.writeAssemHistory"]], "maininterface (class in armi.bookkeeping.maininterface)": [[21, "armi.bookkeeping.mainInterface.MainInterface"]], "armi.bookkeeping.maininterface": [[21, "module-armi.bookkeeping.mainInterface"]], "cleanarmifiles() (armi.bookkeeping.maininterface.maininterface method)": [[21, "armi.bookkeeping.mainInterface.MainInterface.cleanARMIFiles"]], "cleanlastcyclefiles() (armi.bookkeeping.maininterface.maininterface method)": [[21, "armi.bookkeeping.mainInterface.MainInterface.cleanLastCycleFiles"]], "describeinterfaces() (in module armi.bookkeeping.maininterface)": [[21, "armi.bookkeeping.mainInterface.describeInterfaces"]], "interactboc() (armi.bookkeeping.maininterface.maininterface method)": [[21, "armi.bookkeeping.mainInterface.MainInterface.interactBOC"]], "interactbol() (armi.bookkeeping.maininterface.maininterface method)": [[21, "armi.bookkeeping.mainInterface.MainInterface.interactBOL"]], "interacteol() (armi.bookkeeping.maininterface.maininterface method)": [[21, "armi.bookkeeping.mainInterface.MainInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.maininterface.maininterface method)": [[21, "armi.bookkeeping.mainInterface.MainInterface.interactEveryNode"]], "name (armi.bookkeeping.maininterface.maininterface attribute)": [[21, "armi.bookkeeping.mainInterface.MainInterface.name"]], "instancecounter (class in armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.InstanceCounter"]], "klasscounter (class in armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.KlassCounter"]], "memoryprofiler (class in armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler"]], "printsystemmemoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction"]], "profilememoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction"]], "systemandprocessmemoryusage (class in armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.SystemAndProcessMemoryUsage"]], "add() (armi.bookkeeping.memoryprofiler.instancecounter method)": [[22, "armi.bookkeeping.memoryProfiler.InstanceCounter.add"]], "armi.bookkeeping.memoryprofiler": [[22, "module-armi.bookkeeping.memoryProfiler"]], "checkforduplicateobjectsonarmimodel() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.checkForDuplicateObjectsOnArmiModel"]], "countobjects() (armi.bookkeeping.memoryprofiler.klasscounter method)": [[22, "armi.bookkeeping.memoryProfiler.KlassCounter.countObjects"]], "describeinterfaces() (in module armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.describeInterfaces"]], "displaymemoryusage() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.displayMemoryUsage"]], "getcurrentmemoryusage() (in module armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.getCurrentMemoryUsage"]], "getreferrers() (armi.bookkeeping.memoryprofiler.memoryprofiler static method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.getReferrers"]], "gettotaljobmemory() (in module armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.getTotalJobMemory"]], "interactbol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactBOL"]], "interacteol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEOL"]], "interacteverynode() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEveryNode"]], "invokehook() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[22, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.invokeHook"]], "invokehook() (armi.bookkeeping.memoryprofiler.profilememoryusageaction method)": [[22, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction.invokeHook"]], "maxprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[22, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.maxProcessMemoryInMB"]], "minprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[22, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.minProcessMemoryInMB"]], "name (armi.bookkeeping.memoryprofiler.memoryprofiler attribute)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.name"]], "printcurrentmemorystate() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.printCurrentMemoryState"]], "printusage() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[22, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.printUsage"]], "armi.bookkeeping.report": [[23, "module-armi.bookkeeping.report"]], "setdata() (in module armi.bookkeeping.report)": [[23, "armi.bookkeeping.report.setData"]], "group (class in armi.bookkeeping.report.data)": [[24, "armi.bookkeeping.report.data.Group"]], "image (class in armi.bookkeeping.report.data)": [[24, "armi.bookkeeping.report.data.Image"]], "report (class in armi.bookkeeping.report.data)": [[24, "armi.bookkeeping.report.data.Report"]], "table (class in armi.bookkeeping.report.data)": [[24, "armi.bookkeeping.report.data.Table"]], "addtoreport() (armi.bookkeeping.report.data.report method)": [[24, "armi.bookkeeping.report.data.Report.addToReport"]], "armi.bookkeeping.report.data": [[24, "module-armi.bookkeeping.report.data"]], "componentwellgroups (armi.bookkeeping.report.data.report attribute)": [[24, "armi.bookkeeping.report.data.Report.componentWellGroups"]], "count (armi.bookkeeping.report.data.image attribute)": [[24, "armi.bookkeeping.report.data.Image.count"]], "groupsorderfirst (armi.bookkeeping.report.data.report attribute)": [[24, "armi.bookkeeping.report.data.Report.groupsOrderFirst"]], "writegroupshtml() (armi.bookkeeping.report.data.report method)": [[24, "armi.bookkeeping.report.data.Report.writeGroupsHTML"]], "writehtml() (armi.bookkeeping.report.data.group method)": [[24, "armi.bookkeeping.report.data.Group.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.image method)": [[24, "armi.bookkeeping.report.data.Image.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.report method)": [[24, "armi.bookkeeping.report.data.Report.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.table method)": [[24, "armi.bookkeeping.report.data.Table.writeHTML"]], "a (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.A"]], "b (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.B"]], "body (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Body"]], "caption (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Caption"]], "div (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Div"]], "footer (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Footer"]], "h1 (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.H1"]], "h2 (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.H2"]], "h3 (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.H3"]], "h4 (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.H4"]], "htmlfile (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.HTMLFile"]], "head (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Head"]], "html (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Html"]], "img (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Img"]], "li (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.LI"]], "link (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Link"]], "p (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.P"]], "script (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Script"]], "span (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Span"]], "style (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Style"]], "tbody (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.TBody"]], "td (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.TD"]], "th (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.TH"]], "thead (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.THead"]], "tr (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.TR"]], "table (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Table"]], "tag (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Tag"]], "title (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Title"]], "ul (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.UL"]], "armi.bookkeeping.report.html": [[25, "module-armi.bookkeeping.report.html"]], "encode64() (in module armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.encode64"]], "tag (armi.bookkeeping.report.html.a attribute)": [[25, "armi.bookkeeping.report.html.A.tag"]], "tag (armi.bookkeeping.report.html.b attribute)": [[25, "armi.bookkeeping.report.html.B.tag"]], "tag (armi.bookkeeping.report.html.body attribute)": [[25, "armi.bookkeeping.report.html.Body.tag"]], "tag (armi.bookkeeping.report.html.caption attribute)": [[25, "armi.bookkeeping.report.html.Caption.tag"]], "tag (armi.bookkeeping.report.html.div attribute)": [[25, "armi.bookkeeping.report.html.Div.tag"]], "tag (armi.bookkeeping.report.html.footer attribute)": [[25, "armi.bookkeeping.report.html.Footer.tag"]], "tag (armi.bookkeeping.report.html.h1 attribute)": [[25, "armi.bookkeeping.report.html.H1.tag"]], "tag (armi.bookkeeping.report.html.h2 attribute)": [[25, "armi.bookkeeping.report.html.H2.tag"]], "tag (armi.bookkeeping.report.html.h3 attribute)": [[25, "armi.bookkeeping.report.html.H3.tag"]], "tag (armi.bookkeeping.report.html.h4 attribute)": [[25, "armi.bookkeeping.report.html.H4.tag"]], "tag (armi.bookkeeping.report.html.head attribute)": [[25, "armi.bookkeeping.report.html.Head.tag"]], "tag (armi.bookkeeping.report.html.html attribute)": [[25, "armi.bookkeeping.report.html.Html.tag"]], "tag (armi.bookkeeping.report.html.img attribute)": [[25, "armi.bookkeeping.report.html.Img.tag"]], "tag (armi.bookkeeping.report.html.li attribute)": [[25, "armi.bookkeeping.report.html.LI.tag"]], "tag (armi.bookkeeping.report.html.link attribute)": [[25, "armi.bookkeeping.report.html.Link.tag"]], "tag (armi.bookkeeping.report.html.p attribute)": [[25, "armi.bookkeeping.report.html.P.tag"]], "tag (armi.bookkeeping.report.html.script attribute)": [[25, "armi.bookkeeping.report.html.Script.tag"]], "tag (armi.bookkeeping.report.html.span attribute)": [[25, "armi.bookkeeping.report.html.Span.tag"]], "tag (armi.bookkeeping.report.html.style attribute)": [[25, "armi.bookkeeping.report.html.Style.tag"]], "tag (armi.bookkeeping.report.html.tbody attribute)": [[25, "armi.bookkeeping.report.html.TBody.tag"]], "tag (armi.bookkeeping.report.html.td attribute)": [[25, "armi.bookkeeping.report.html.TD.tag"]], "tag (armi.bookkeeping.report.html.th attribute)": [[25, "armi.bookkeeping.report.html.TH.tag"]], "tag (armi.bookkeeping.report.html.thead attribute)": [[25, "armi.bookkeeping.report.html.THead.tag"]], "tag (armi.bookkeeping.report.html.tr attribute)": [[25, "armi.bookkeeping.report.html.TR.tag"]], "tag (armi.bookkeeping.report.html.table attribute)": [[25, "armi.bookkeeping.report.html.Table.tag"]], "tag (armi.bookkeeping.report.html.tag attribute)": [[25, "armi.bookkeeping.report.html.Tag.tag"]], "tag (armi.bookkeeping.report.html.title attribute)": [[25, "armi.bookkeeping.report.html.Title.tag"]], "tag (armi.bookkeeping.report.html.ul attribute)": [[25, "armi.bookkeeping.report.html.UL.tag"]], "write() (armi.bookkeeping.report.html.htmlfile method)": [[25, "armi.bookkeeping.report.html.HTMLFile.write"]], "writeescaped() (armi.bookkeeping.report.html.htmlfile method)": [[25, "armi.bookkeeping.report.html.HTMLFile.writeEscaped"]], "writestandardreporttemplate() (in module armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.writeStandardReportTemplate"]], "design (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.DESIGN"]], "armi.bookkeeping.report.newreportutils": [[26, "module-armi.bookkeeping.report.newReportUtils"]], "comprehensivebolcontent() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.comprehensiveBOLContent"]], "createdimensionreport() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.createDimensionReport"]], "getpindesigntable() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.getPinDesignTable"]], "insertareafractionsreport() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertAreaFractionsReport"]], "insertblockdesignreport() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertBlockDesignReport"]], "insertblockdiagrams() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertBlockDiagrams"]], "insertblueprintcontent() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertBlueprintContent"]], "insertcoreandassemblymaps() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertCoreAndAssemblyMaps"]], "insertcoredesignreport() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertCoreDesignReport"]], "insertdesigncontent() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertDesignContent"]], "insertendoflifecontent() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertEndOfLifeContent"]], "insertgeneralreportcontent() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertGeneralReportContent"]], "insertmetatable() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertMetaTable"]], "insertsettingsdata() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertSettingsData"]], "begin (armi.bookkeeping.report.newreports.reportstage attribute)": [[27, "armi.bookkeeping.report.newReports.ReportStage.Begin"]], "end (armi.bookkeeping.report.newreports.reportstage attribute)": [[27, "armi.bookkeeping.report.newReports.ReportStage.End"]], "image (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.Image"]], "reportcontent (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.ReportContent"]], "reportnode (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.ReportNode"]], "reportstage (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.ReportStage"]], "section (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.Section"]], "standard (armi.bookkeeping.report.newreports.reportstage attribute)": [[27, "armi.bookkeeping.report.newReports.ReportStage.Standard"]], "table (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.Table"]], "timeseries (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.TimeSeries"]], "add() (armi.bookkeeping.report.newreports.timeseries method)": [[27, "armi.bookkeeping.report.newReports.TimeSeries.add"]], "addchildelement() (armi.bookkeeping.report.newreports.section method)": [[27, "armi.bookkeeping.report.newReports.Section.addChildElement"]], "addrow() (armi.bookkeeping.report.newreports.table method)": [[27, "armi.bookkeeping.report.newReports.Table.addRow"]], "armi.bookkeeping.report.newreports": [[27, "module-armi.bookkeeping.report.newReports"]], "encode64() (in module armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.encode64"]], "get() (armi.bookkeeping.report.newreports.reportcontent method)": [[27, "armi.bookkeeping.report.newReports.ReportContent.get"]], "get() (armi.bookkeeping.report.newreports.section method)": [[27, "armi.bookkeeping.report.newReports.Section.get"]], "items() (armi.bookkeeping.report.newreports.section method)": [[27, "armi.bookkeeping.report.newReports.Section.items"]], "leveldict (armi.bookkeeping.report.newreports.reportnode attribute)": [[27, "armi.bookkeeping.report.newReports.ReportNode.levelDict"]], "plot() (armi.bookkeeping.report.newreports.timeseries method)": [[27, "armi.bookkeeping.report.newReports.TimeSeries.plot"]], "render() (armi.bookkeeping.report.newreports.image method)": [[27, "armi.bookkeeping.report.newReports.Image.render"]], "render() (armi.bookkeeping.report.newreports.reportnode method)": [[27, "armi.bookkeeping.report.newReports.ReportNode.render"]], "render() (armi.bookkeeping.report.newreports.section method)": [[27, "armi.bookkeeping.report.newReports.Section.render"]], "render() (armi.bookkeeping.report.newreports.table method)": [[27, "armi.bookkeeping.report.newReports.Table.render"]], "render() (armi.bookkeeping.report.newreports.timeseries method)": [[27, "armi.bookkeeping.report.newReports.TimeSeries.render"]], "tableofcontents() (armi.bookkeeping.report.newreports.reportcontent method)": [[27, "armi.bookkeeping.report.newReports.ReportContent.tableOfContents"]], "writereports() (armi.bookkeeping.report.newreports.reportcontent method)": [[27, "armi.bookkeeping.report.newReports.ReportContent.writeReports"]], "reportinterface (class in armi.bookkeeping.report.reportinterface)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface"]], "armi.bookkeeping.report.reportinterface": [[28, "module-armi.bookkeeping.report.reportInterface"]], "countassembliessfp() (armi.bookkeeping.report.reportinterface.reportinterface static method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.countAssembliesSFP"]], "describeinterfaces() (in module armi.bookkeeping.report.reportinterface)": [[28, "armi.bookkeeping.report.reportInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.distributable"]], "generatedesignreport() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.generateDesignReport"]], "interactboc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOC"]], "interactbol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOL"]], "interacteoc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOC"]], "interacteol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEveryNode"]], "name (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.name"]], "printreports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.printReports"]], "reportsfp() (armi.bookkeeping.report.reportinterface.reportinterface static method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.reportSFP"]], "reports (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.reports"]], "writereports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.writeReports"]], "writerunsummary() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.writeRunSummary"]], "armi.bookkeeping.report.reportingutils": [[29, "module-armi.bookkeeping.report.reportingUtils"]], "getinterfacestacksummary() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.getInterfaceStackSummary"]], "getnodename() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.getNodeName"]], "getsysteminfo() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.getSystemInfo"]], "makeblockdesignreport() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.makeBlockDesignReport"]], "makecoreandassemblymaps() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.makeCoreAndAssemblyMaps"]], "makecoredesignreport() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.makeCoreDesignReport"]], "setneutronbalancesreport() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.setNeutronBalancesReport"]], "summarizepindesign() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.summarizePinDesign"]], "summarizepower() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.summarizePower"]], "summarizepowerpeaking() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.summarizePowerPeaking"]], "writeassemblymasssummary() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.writeAssemblyMassSummary"]], "writecyclesummary() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.writeCycleSummary"]], "writetightcouplingconvergencesummary() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.writeTightCouplingConvergenceSummary"]], "writewelcomeheaders() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[30, "module-armi.bookkeeping.report.tests"]], "testreportcontentcreation (class in armi.bookkeeping.report.tests.test_newreport)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newreport": [[31, "module-armi.bookkeeping.report.tests.test_newReport"]], "test_neutronicsplotfunctions() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_neutronicsPlotFunctions"]], "test_reportbasics() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportBasics"]], "test_reportcontents() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContents"]], "test_reportcontentsend() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContentsEnd"]], "test_reportlogs() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportLogs"]], "test_tablecreation() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_tableCreation"]], "test_timeseries() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_timeSeries"]], "test_writereports() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_writeReports"]], "testreport (class in armi.bookkeeping.report.tests.test_report)": [[32, "armi.bookkeeping.report.tests.test_report.TestReport"]], "testreportinterface (class in armi.bookkeeping.report.tests.test_report)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface"]], "testreportingutils (class in armi.bookkeeping.report.tests.test_report)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportingUtils"]], "armi.bookkeeping.report.tests.test_report": [[32, "module-armi.bookkeeping.report.tests.test_report"]], "test_distributablereportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_distributableReportInt"]], "test_getdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReport.test_getData"]], "test_getnodename() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getNodeName"]], "test_getsysteminfo() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfo"]], "test_getsysteminfolinux() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoLinux"]], "test_getsysteminfomac() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoMac"]], "test_getsysteminfowindows() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoWindows"]], "test_interactboc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOC"]], "test_interactbolreportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOLReportInt"]], "test_interacteoc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOC"]], "test_interacteol() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOL"]], "test_interacteverynode() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEveryNode"]], "test_printreports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_printReports"]], "test_reactorspecificreporting() (armi.bookkeeping.report.tests.test_report.testreport method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReport.test_reactorSpecificReporting"]], "test_setdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReport.test_setData"]], "test_writereports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_writeReports"]], "test_writewelcomeheaders() (armi.bookkeeping.report.tests.test_report.testreport method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReport.test_writeWelcomeHeaders"]], "snapshotinterface (class in armi.bookkeeping.snapshotinterface)": [[33, "armi.bookkeeping.snapshotInterface.SnapshotInterface"]], "activatedefaultsnapshots() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[33, "armi.bookkeeping.snapshotInterface.SnapshotInterface.activateDefaultSnapshots"]], "armi.bookkeeping.snapshotinterface": [[33, "module-armi.bookkeeping.snapshotInterface"]], "describeinterfaces() (in module armi.bookkeeping.snapshotinterface)": [[33, "armi.bookkeeping.snapshotInterface.describeInterfaces"]], "extractcyclenodefromstamp() (in module armi.bookkeeping.snapshotinterface)": [[33, "armi.bookkeeping.snapshotInterface.extractCycleNodeFromStamp"]], "getcyclenodestamp() (in module armi.bookkeeping.snapshotinterface)": [[33, "armi.bookkeeping.snapshotInterface.getCycleNodeStamp"]], "interactbol() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[33, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactBOL"]], "interactcoupled() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[33, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactCoupled"]], "interacteverynode() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[33, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactEveryNode"]], "name (armi.bookkeeping.snapshotinterface.snapshotinterface attribute)": [[33, "armi.bookkeeping.snapshotInterface.SnapshotInterface.name"]], "armi.bookkeeping.tests": [[34, "module-armi.bookkeeping.tests"]], "testhistorytracker (class in armi.bookkeeping.tests.test_historytracker)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker"]], "testhistorytrackernomodel (class in armi.bookkeeping.tests.test_historytracker)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel"]], "armi.bookkeeping.tests.test_historytracker": [[35, "module-armi.bookkeeping.tests.test_historyTracker"]], "runtutorialnotebook() (in module armi.bookkeeping.tests.test_historytracker)": [[35, "armi.bookkeeping.tests.test_historyTracker.runTutorialNotebook"]], "test_blockname() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_blockName"]], "test_calcmgfluence() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_calcMGFluence"]], "test_getblockinassembly() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_getBlockInAssembly"]], "test_historyparameters() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyParameters"]], "test_historyreport() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyReport"]], "test_timestepfiltering() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFiltering"]], "test_timestepfilteringwithgap() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFilteringWithGap"]], "klasscountertests (class in armi.bookkeeping.tests.test_memoryprofiler)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests"]], "testmemoryprofiler (class in armi.bookkeeping.tests.test_memoryprofiler)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryprofiler": [[36, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "get_containers() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.get_containers"]], "test_checkforduplicateobjectsonarmimodel() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_checkForDuplicateObjectsOnArmiModel"]], "test_counthandlesrecursion() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_countHandlesRecursion"]], "test_displaymemoryusage() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_displayMemoryUsage"]], "test_expandcontainer() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_expandContainer"]], "test_fullbreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_fullBreakdown"]], "test_getcurrentmemoryusage() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_getCurrentMemoryUsage"]], "test_getreferrers() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_getReferrers"]], "test_gettotaljobmemory() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_getTotalJobMemory"]], "test_printcurrentmemorystate() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_printCurrentMemoryState"]], "test_printcurrentmemorystate_nosetting() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_printCurrentMemoryState_noSetting"]], "test_printfullmemorybreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_printFullMemoryBreakdown"]], "test_profilememoryusageaction() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_profileMemoryUsageAction"]], "mockreactor (class in armi.bookkeeping.tests.test_snapshot)": [[37, "armi.bookkeeping.tests.test_snapshot.MockReactor"]], "mockreactorparams (class in armi.bookkeeping.tests.test_snapshot)": [[37, "armi.bookkeeping.tests.test_snapshot.MockReactorParams"]], "testsnapshotinterface (class in armi.bookkeeping.tests.test_snapshot)": [[37, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot": [[37, "module-armi.bookkeeping.tests.test_snapshot"]], "test_activeatedefaultsnapshots_17cycles5burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[37, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_17cycles5BurnSteps"]], "test_activeatedefaultsnapshots_30cycles2burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[37, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_30cycles2BurnSteps"]], "test_interactcoupled() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[37, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactCoupled"]], "test_interacteverynode() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[37, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactEveryNode"]], "armi.bookkeeping.visualization": [[38, "module-armi.bookkeeping.visualization"]], "visfiledumper (class in armi.bookkeeping.visualization.dumper)": [[39, "armi.bookkeeping.visualization.dumper.VisFileDumper"]], "armi.bookkeeping.visualization.dumper": [[39, "module-armi.bookkeeping.visualization.dumper"]], "dumpstate() (armi.bookkeeping.visualization.dumper.visfiledumper method)": [[39, "armi.bookkeeping.visualization.dumper.VisFileDumper.dumpState"]], "visfileentrypoint (class in armi.bookkeeping.visualization.entrypoint)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint"]], "addoptions() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.addOptions"]], "armi.bookkeeping.visualization.entrypoint": [[40, "module-armi.bookkeeping.visualization.entryPoint"]], "description (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.description"]], "invoke() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.invoke"]], "name (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.name"]], "parse() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.parse"]], "settingsargument (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.settingsArgument"]], "armi.bookkeeping.visualization.tests": [[41, "module-armi.bookkeeping.visualization.tests"]], "testvisdump (class in armi.bookkeeping.visualization.tests.test_vis)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump"]], "testvtkmesh (class in armi.bookkeeping.visualization.tests.test_vis)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis": [[42, "module-armi.bookkeeping.visualization.tests.test_vis"]], "test_cartesianmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_cartesianMesh"]], "test_dumpreactorvtk() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorVtk"]], "test_dumpreactorxdmf() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorXdmf"]], "test_hexmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_hexMesh"]], "test_testvtkmesh() (armi.bookkeeping.visualization.tests.test_vis.testvtkmesh method)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh.test_testVtkMesh"]], "testxdmf (class in armi.bookkeeping.visualization.tests.test_xdmf)": [[43, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[43, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "test_deduptimes() (armi.bookkeeping.visualization.tests.test_xdmf.testxdmf method)": [[43, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf.test_dedupTimes"]], "vtkmesh (class in armi.bookkeeping.visualization.utils)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh"]], "append() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh.append"]], "armi.bookkeeping.visualization.utils": [[44, "module-armi.bookkeeping.visualization.utils"]], "createassemmesh() (in module armi.bookkeeping.visualization.utils)": [[44, "armi.bookkeeping.visualization.utils.createAssemMesh"]], "createblockmesh() (in module armi.bookkeeping.visualization.utils)": [[44, "armi.bookkeeping.visualization.utils.createBlockMesh"]], "createreactorassemmesh() (in module armi.bookkeeping.visualization.utils)": [[44, "armi.bookkeeping.visualization.utils.createReactorAssemMesh"]], "createreactorblockmesh() (in module armi.bookkeeping.visualization.utils)": [[44, "armi.bookkeeping.visualization.utils.createReactorBlockMesh"]], "empty() (armi.bookkeeping.visualization.utils.vtkmesh static method)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh.empty"]], "write() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh.write"]], "x (armi.bookkeeping.visualization.utils.vtkmesh property)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh.x"]], "y (armi.bookkeeping.visualization.utils.vtkmesh property)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh.y"]], "z (armi.bookkeeping.visualization.utils.vtkmesh property)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh.z"]], "vtkdumper (class in armi.bookkeeping.visualization.vtk)": [[45, "armi.bookkeeping.visualization.vtk.VtkDumper"]], "armi.bookkeeping.visualization.vtk": [[45, "module-armi.bookkeeping.visualization.vtk"]], "dumpstate() (armi.bookkeeping.visualization.vtk.vtkdumper method)": [[45, "armi.bookkeeping.visualization.vtk.VtkDumper.dumpState"]], "xdmfdumper (class in armi.bookkeeping.visualization.xdmf)": [[46, "armi.bookkeeping.visualization.xdmf.XdmfDumper"]], "armi.bookkeeping.visualization.xdmf": [[46, "module-armi.bookkeeping.visualization.xdmf"]], "dumpstate() (armi.bookkeeping.visualization.xdmf.xdmfdumper method)": [[46, "armi.bookkeeping.visualization.xdmf.XdmfDumper.dumpState"]], "armi.cases": [[47, "module-armi.cases"]], "case (class in armi.cases.case)": [[48, "armi.cases.case.Case"]], "addexplicitdependency() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.addExplicitDependency"]], "armi.cases.case": [[48, "module-armi.cases.case"]], "bp (armi.cases.case.case property)": [[48, "armi.cases.case.Case.bp"]], "checkinputs() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.checkInputs"]], "clone() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.clone"]], "compare() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.compare"]], "copyinterfaceinputs() (in module armi.cases.case)": [[48, "armi.cases.case.copyInterfaceInputs"]], "dbname (armi.cases.case.case property)": [[48, "armi.cases.case.Case.dbName"]], "dependencies (armi.cases.case.case property)": [[48, "armi.cases.case.Case.dependencies"]], "directory (armi.cases.case.case property)": [[48, "armi.cases.case.Case.directory"]], "geom (armi.cases.case.case property)": [[48, "armi.cases.case.Case.geom"]], "getpotentialparentfromsettingvalue() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.getPotentialParentFromSettingValue"]], "independentvariables (armi.cases.case.case property)": [[48, "armi.cases.case.Case.independentVariables"]], "initializeoperator() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.initializeOperator"]], "run() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.run"]], "setuptaskdependence() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.setUpTaskDependence"]], "summarizedesign() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.summarizeDesign"]], "title (armi.cases.case.case property)": [[48, "armi.cases.case.Case.title"]], "writeinputs() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.writeInputs"]], "armi.cases.inputmodifiers": [[49, "module-armi.cases.inputModifiers"]], "blueprintblockmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[50, "armi.cases.inputModifiers.inputModifiers.BluePrintBlockModifier"]], "fail_if_after (armi.cases.inputmodifiers.inputmodifiers.inputmodifier attribute)": [[50, "armi.cases.inputModifiers.inputModifiers.InputModifier.FAIL_IF_AFTER"]], "fullcoremodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[50, "armi.cases.inputModifiers.inputModifiers.FullCoreModifier"]], "inputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[50, "armi.cases.inputModifiers.inputModifiers.InputModifier"]], "multisettingmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[50, "armi.cases.inputModifiers.inputModifiers.MultiSettingModifier"]], "samplinginputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[50, "armi.cases.inputModifiers.inputModifiers.SamplingInputModifier"]], "settingsmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[50, "armi.cases.inputModifiers.inputModifiers.SettingsModifier"]], "armi.cases.inputmodifiers.inputmodifiers": [[50, "module-armi.cases.inputModifiers.inputModifiers"]], "neutronicconvergencemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[51, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicConvergenceModifier"]], "neutronicmeshssizemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[51, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicMeshsSizeModifier"]], "armi.cases.inputmodifiers.neutronicsmodifiers": [[51, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "cladthicknessbyidmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[52, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier"]], "cladthicknessbyodmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[52, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyidmodifier attribute)": [[52, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier.FAIL_IF_AFTER"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyodmodifier attribute)": [[52, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier.FAIL_IF_AFTER"]], "smeardensitymodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[52, "armi.cases.inputModifiers.pinTypeInputModifiers.SmearDensityModifier"]], "armi.cases.inputmodifiers.pintypeinputmodifiers": [[52, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputmodifiers.tests": [[53, "module-armi.cases.inputModifiers.tests"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom"]], "neutronicskernelopts (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.NeutronicsKernelOpts"]], "testfullcoremodifier (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier"]], "testsettingsmodifiers (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers"]], "testsuitebuilderintegrations (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations"]], "armi.cases.inputmodifiers.tests.test_inputmodifiers": [[54, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_inputmodifiers.mockgeom attribute)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom.geomType"]], "test_neutronicconvergencemodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsettingsmodifiers method)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers.test_NeutronicConvergenceModifier"]], "test_blueprintblockmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_bluePrintBlockModifier"]], "test_fullcoreconversion() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testfullcoremodifier method)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier.test_fullCoreConversion"]], "test_settingsmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_settingsModifier"]], "test_smeardensityfail() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_smearDensityFail"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[55, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom"]], "testblueprintmodifiers (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[55, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers"]], "armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers": [[55, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.mockgeom attribute)": [[55, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom.geomType"]], "test_adjustsmeardensity() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[55, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_AdjustSmearDensity"]], "test_cladthickenessbyidmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[55, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByIDModifier"]], "test_cladthickenessbyodmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[55, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByODModifier"]], "casesuite (class in armi.cases.suite)": [[56, "armi.cases.suite.CaseSuite"]], "add() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.add"]], "armi.cases.suite": [[56, "module-armi.cases.suite"]], "clone() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.clone"]], "compare() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.compare"]], "discover() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.discover"]], "echoconfiguration() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.echoConfiguration"]], "remove() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.remove"]], "run() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.run"]], "writeinputs() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.writeInputs"]], "writetable() (armi.cases.suite.casesuite static method)": [[56, "armi.cases.suite.CaseSuite.writeTable"]], "fullfactorialsuitebuilder (class in armi.cases.suitebuilder)": [[57, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder"]], "fullfactorialsuitebuildernoisy (class in armi.cases.suitebuilder)": [[57, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy"]], "latinhypercubesuitebuilder (class in armi.cases.suitebuilder)": [[57, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder"]], "separateeffectssuitebuilder (class in armi.cases.suitebuilder)": [[57, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder"]], "suitebuilder (class in armi.cases.suitebuilder)": [[57, "armi.cases.suiteBuilder.SuiteBuilder"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuilder method)": [[57, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuildernoisy method)": [[57, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[57, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.separateeffectssuitebuilder method)": [[57, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.suitebuilder method)": [[57, "armi.cases.suiteBuilder.SuiteBuilder.addDegreeOfFreedom"]], "addmodifierset() (armi.cases.suitebuilder.suitebuilder method)": [[57, "armi.cases.suiteBuilder.SuiteBuilder.addModifierSet"]], "armi.cases.suitebuilder": [[57, "module-armi.cases.suiteBuilder"]], "buildsuite() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[57, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.buildSuite"]], "buildsuite() (armi.cases.suitebuilder.suitebuilder method)": [[57, "armi.cases.suiteBuilder.SuiteBuilder.buildSuite"]], "getinputmodifiers() (in module armi.cases.suitebuilder)": [[57, "armi.cases.suiteBuilder.getInputModifiers"]], "armi.cases.tests": [[58, "module-armi.cases.tests"]], "multifilesinterfaces (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.MultiFilesInterfaces"]], "testarmicase (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestArmiCase"]], "testcasesuitecomparison (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteComparison"]], "testcasesuitedependencies (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies"]], "testcopyinterfaceinputs (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs"]], "testextrainputwriting (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestExtraInputWriting"]], "testpluginforcopyinterfacesmultiplefiles (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles"]], "testpluginwithduplicatesetting (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting"]], "armi.cases.tests.test_cases": [[59, "module-armi.cases.tests.test_cases"]], "definesettings() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[59, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.defineSettings"]], "definesettings() (armi.cases.tests.test_cases.testpluginwithduplicatesetting static method)": [[59, "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting.defineSettings"]], "exposeinterfaces() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[59, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.exposeInterfaces"]], "name (armi.cases.tests.test_cases.multifilesinterfaces attribute)": [[59, "armi.cases.tests.test_cases.MultiFilesInterfaces.name"]], "specifyinputs() (armi.cases.tests.test_cases.multifilesinterfaces static method)": [[59, "armi.cases.tests.test_cases.MultiFilesInterfaces.specifyInputs"]], "test_checkinputs() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_checkInputs"]], "test_clone() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_clone"]], "test_clone() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_clone"]], "test_comparenodiffs() (armi.cases.tests.test_cases.testcasesuitecomparison method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteComparison.test_compareNoDiffs"]], "test_copyinputshelper() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInputsHelper"]], "test_copyinterfaceinputs_abspath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_absPath"]], "test_copyinterfaceinputs_multiplefiles() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_multipleFiles"]], "test_copyinterfaceinputs_nonfilepath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_nonFilePath"]], "test_copyinterfaceinputs_relpath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_relPath"]], "test_copyinterfaceinputs_singlefile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_singleFile"]], "test_copyinterfaceinputs_wildcardfile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_wildcardFile"]], "test_dependencieswithobscurepaths() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependenciesWithObscurePaths"]], "test_dependencyfromdbname() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromDBName"]], "test_dependencyfromexplictrepeatshuffles() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromExplictRepeatShuffles"]], "test_endcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_endCoverage"]], "test_endprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_endProfiling"]], "test_explicitdependency() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_explicitDependency"]], "test_failonduplicatesetting() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_failOnDuplicateSetting"]], "test_getcoveragercfile() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_getCoverageRcFile"]], "test_independentvariables() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_independentVariables"]], "test_run() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_run"]], "test_setuptaskdependence() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_setUpTaskDependence"]], "test_startcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_startCoverage"]], "test_startprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_startProfiling"]], "test_summarizedesign() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_summarizeDesign"]], "test_titlesettergetter() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_titleSetterGetter"]], "test_writeinput() (armi.cases.tests.test_cases.testextrainputwriting method)": [[59, "armi.cases.tests.test_cases.TestExtraInputWriting.test_writeInput"]], "latinhypercubemodifier (class in armi.cases.tests.test_suitebuilder)": [[60, "armi.cases.tests.test_suiteBuilder.LatinHyperCubeModifier"]], "settingmodifier (class in armi.cases.tests.test_suitebuilder)": [[60, "armi.cases.tests.test_suiteBuilder.SettingModifier"]], "testfullfactorialsuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[60, "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder"]], "testlatinhypercubesuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[60, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder"]], "testseparateeffectsbuilder (class in armi.cases.tests.test_suitebuilder)": [[60, "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder"]], "armi.cases.tests.test_suitebuilder": [[60, "module-armi.cases.tests.test_suiteBuilder"]], "test_adddegreeoffreedom() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[60, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_addDegreeOfFreedom"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testfullfactorialsuitebuilder method)": [[60, "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder.test_buildSuite"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[60, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_buildSuite"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testseparateeffectsbuilder method)": [[60, "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder.test_buildSuite"]], "test_initialize() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[60, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_initialize"]], "armicli (class in armi.cli)": [[61, "armi.cli.ArmiCLI"]], "armiparser (class in armi.cli)": [[61, "armi.cli.ArmiParser"]], "entrypointsplugin (class in armi.cli)": [[61, "armi.cli.EntryPointsPlugin"]], "armi.cli": [[61, "module-armi.cli"]], "defineentrypoints() (armi.cli.entrypointsplugin static method)": [[61, "armi.cli.EntryPointsPlugin.defineEntryPoints"]], "executecommand() (armi.cli.armicli method)": [[61, "armi.cli.ArmiCLI.executeCommand"]], "listcommands() (armi.cli.armicli method)": [[61, "armi.cli.ArmiCLI.listCommands"]], "print_help() (armi.cli.armiparser method)": [[61, "armi.cli.ArmiParser.print_help"]], "run() (armi.cli.armicli method)": [[61, "armi.cli.ArmiCLI.run"]], "showversion() (armi.cli.armicli static method)": [[61, "armi.cli.ArmiCLI.showVersion"]], "splash() (in module armi.cli)": [[61, "armi.cli.splash"]], "checkinputentrypoint (class in armi.cli.checkinputs)": [[62, "armi.cli.checkInputs.CheckInputEntryPoint"]], "expandblueprints (class in armi.cli.checkinputs)": [[62, "armi.cli.checkInputs.ExpandBlueprints"]], "addoptions() (armi.cli.checkinputs.checkinputentrypoint method)": [[62, "armi.cli.checkInputs.CheckInputEntryPoint.addOptions"]], "addoptions() (armi.cli.checkinputs.expandblueprints method)": [[62, "armi.cli.checkInputs.ExpandBlueprints.addOptions"]], "armi.cli.checkinputs": [[62, "module-armi.cli.checkInputs"]], "invoke() (armi.cli.checkinputs.checkinputentrypoint method)": [[62, "armi.cli.checkInputs.CheckInputEntryPoint.invoke"]], "invoke() (armi.cli.checkinputs.expandblueprints method)": [[62, "armi.cli.checkInputs.ExpandBlueprints.invoke"]], "name (armi.cli.checkinputs.checkinputentrypoint attribute)": [[62, "armi.cli.checkInputs.CheckInputEntryPoint.name"]], "name (armi.cli.checkinputs.expandblueprints attribute)": [[62, "armi.cli.checkInputs.ExpandBlueprints.name"]], "settingsargument (armi.cli.checkinputs.checkinputentrypoint attribute)": [[62, "armi.cli.checkInputs.CheckInputEntryPoint.settingsArgument"]], "settingsargument (armi.cli.checkinputs.expandblueprints attribute)": [[62, "armi.cli.checkInputs.ExpandBlueprints.settingsArgument"]], "splash (armi.cli.checkinputs.expandblueprints attribute)": [[62, "armi.cli.checkInputs.ExpandBlueprints.splash"]], "cleantemps (class in armi.cli.cleantemps)": [[63, "armi.cli.cleanTemps.CleanTemps"]], "armi.cli.cleantemps": [[63, "module-armi.cli.cleanTemps"]], "invoke() (armi.cli.cleantemps.cleantemps method)": [[63, "armi.cli.cleanTemps.CleanTemps.invoke"]], "name (armi.cli.cleantemps.cleantemps attribute)": [[63, "armi.cli.cleanTemps.CleanTemps.name"]], "settingsargument (armi.cli.cleantemps.cleantemps attribute)": [[63, "armi.cli.cleanTemps.CleanTemps.settingsArgument"]], "clonearmiruncommandbatch (class in armi.cli.clone)": [[64, "armi.cli.clone.CloneArmiRunCommandBatch"]], "clonearmiruncommandinteractive (class in armi.cli.clone)": [[64, "armi.cli.clone.CloneArmiRunCommandInteractive"]], "clonesuitecommand (class in armi.cli.clone)": [[64, "armi.cli.clone.CloneSuiteCommand"]], "addoptions() (armi.cli.clone.clonearmiruncommandbatch method)": [[64, "armi.cli.clone.CloneArmiRunCommandBatch.addOptions"]], "addoptions() (armi.cli.clone.clonesuitecommand method)": [[64, "armi.cli.clone.CloneSuiteCommand.addOptions"]], "armi.cli.clone": [[64, "module-armi.cli.clone"]], "invoke() (armi.cli.clone.clonearmiruncommandbatch method)": [[64, "armi.cli.clone.CloneArmiRunCommandBatch.invoke"]], "invoke() (armi.cli.clone.clonesuitecommand method)": [[64, "armi.cli.clone.CloneSuiteCommand.invoke"]], "name (armi.cli.clone.clonearmiruncommandbatch attribute)": [[64, "armi.cli.clone.CloneArmiRunCommandBatch.name"]], "name (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[64, "armi.cli.clone.CloneArmiRunCommandInteractive.name"]], "name (armi.cli.clone.clonesuitecommand attribute)": [[64, "armi.cli.clone.CloneSuiteCommand.name"]], "settingsargument (armi.cli.clone.clonearmiruncommandbatch attribute)": [[64, "armi.cli.clone.CloneArmiRunCommandBatch.settingsArgument"]], "settingsargument (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[64, "armi.cli.clone.CloneArmiRunCommandInteractive.settingsArgument"]], "settingsargument (armi.cli.clone.clonesuitecommand attribute)": [[64, "armi.cli.clone.CloneSuiteCommand.settingsArgument"]], "comparecases (class in armi.cli.comparecases)": [[65, "armi.cli.compareCases.CompareCases"]], "comparesuites (class in armi.cli.comparecases)": [[65, "armi.cli.compareCases.CompareSuites"]], "addoptions() (armi.cli.comparecases.comparecases method)": [[65, "armi.cli.compareCases.CompareCases.addOptions"]], "addoptions() (armi.cli.comparecases.comparesuites method)": [[65, "armi.cli.compareCases.CompareSuites.addOptions"]], "armi.cli.comparecases": [[65, "module-armi.cli.compareCases"]], "invoke() (armi.cli.comparecases.comparecases method)": [[65, "armi.cli.compareCases.CompareCases.invoke"]], "invoke() (armi.cli.comparecases.comparesuites method)": [[65, "armi.cli.compareCases.CompareSuites.invoke"]], "name (armi.cli.comparecases.comparecases attribute)": [[65, "armi.cli.compareCases.CompareCases.name"]], "name (armi.cli.comparecases.comparesuites attribute)": [[65, "armi.cli.compareCases.CompareSuites.name"]], "parse() (armi.cli.comparecases.comparecases method)": [[65, "armi.cli.compareCases.CompareCases.parse"]], "settingsargument (armi.cli.comparecases.comparecases attribute)": [[65, "armi.cli.compareCases.CompareCases.settingsArgument"]], "settingsargument (armi.cli.comparecases.comparesuites attribute)": [[65, "armi.cli.compareCases.CompareSuites.settingsArgument"]], "extractinputs (class in armi.cli.database)": [[66, "armi.cli.database.ExtractInputs"]], "injectinputs (class in armi.cli.database)": [[66, "armi.cli.database.InjectInputs"]], "addoptions() (armi.cli.database.extractinputs method)": [[66, "armi.cli.database.ExtractInputs.addOptions"]], "addoptions() (armi.cli.database.injectinputs method)": [[66, "armi.cli.database.InjectInputs.addOptions"]], "armi.cli.database": [[66, "module-armi.cli.database"]], "invoke() (armi.cli.database.extractinputs method)": [[66, "armi.cli.database.ExtractInputs.invoke"]], "invoke() (armi.cli.database.injectinputs method)": [[66, "armi.cli.database.InjectInputs.invoke"]], "mode (armi.cli.database.extractinputs attribute)": [[66, "armi.cli.database.ExtractInputs.mode"]], "mode (armi.cli.database.injectinputs attribute)": [[66, "armi.cli.database.InjectInputs.mode"]], "name (armi.cli.database.extractinputs attribute)": [[66, "armi.cli.database.ExtractInputs.name"]], "name (armi.cli.database.injectinputs attribute)": [[66, "armi.cli.database.InjectInputs.name"]], "parse_args() (armi.cli.database.extractinputs method)": [[66, "armi.cli.database.ExtractInputs.parse_args"]], "settingsargument (armi.cli.database.extractinputs attribute)": [[66, "armi.cli.database.ExtractInputs.settingsArgument"]], "settingsargument (armi.cli.database.injectinputs attribute)": [[66, "armi.cli.database.InjectInputs.settingsArgument"]], "entrypoint (class in armi.cli.entrypoint)": [[67, "armi.cli.entryPoint.EntryPoint"]], "addoptions() (armi.cli.entrypoint.entrypoint method)": [[67, "armi.cli.entryPoint.EntryPoint.addOptions"]], "armi.cli.entrypoint": [[67, "module-armi.cli.entryPoint"]], "createoptionfromsetting() (armi.cli.entrypoint.entrypoint method)": [[67, "armi.cli.entryPoint.EntryPoint.createOptionFromSetting"]], "description (armi.cli.entrypoint.entrypoint attribute)": [[67, "armi.cli.entryPoint.EntryPoint.description"]], "invoke() (armi.cli.entrypoint.entrypoint method)": [[67, "armi.cli.entryPoint.EntryPoint.invoke"]], "loadsettings() (in module armi.cli.entrypoint)": [[67, "armi.cli.entryPoint.loadSettings"]], "mode (armi.cli.entrypoint.entrypoint attribute)": [[67, "armi.cli.entryPoint.EntryPoint.mode"]], "name (armi.cli.entrypoint.entrypoint attribute)": [[67, "armi.cli.entryPoint.EntryPoint.name"]], "parse() (armi.cli.entrypoint.entrypoint method)": [[67, "armi.cli.entryPoint.EntryPoint.parse"]], "parse_args() (armi.cli.entrypoint.entrypoint method)": [[67, "armi.cli.entryPoint.EntryPoint.parse_args"]], "setcasetitle() (in module armi.cli.entrypoint)": [[67, "armi.cli.entryPoint.setCaseTitle"]], "setsetting() (in module armi.cli.entrypoint)": [[67, "armi.cli.entryPoint.setSetting"]], "settingsargument (armi.cli.entrypoint.entrypoint attribute)": [[67, "armi.cli.entryPoint.EntryPoint.settingsArgument"]], "splash (armi.cli.entrypoint.entrypoint attribute)": [[67, "armi.cli.entryPoint.EntryPoint.splash"]], "storebool() (in module armi.cli.entrypoint)": [[67, "armi.cli.entryPoint.storeBool"]], "gridguientrypoint (class in armi.cli.gridgui)": [[68, "armi.cli.gridGui.GridGuiEntryPoint"]], "addoptions() (armi.cli.gridgui.gridguientrypoint method)": [[68, "armi.cli.gridGui.GridGuiEntryPoint.addOptions"]], "armi.cli.gridgui": [[68, "module-armi.cli.gridGui"]], "invoke() (armi.cli.gridgui.gridguientrypoint method)": [[68, "armi.cli.gridGui.GridGuiEntryPoint.invoke"]], "name (armi.cli.gridgui.gridguientrypoint attribute)": [[68, "armi.cli.gridGui.GridGuiEntryPoint.name"]], "settingsargument (armi.cli.gridgui.gridguientrypoint attribute)": [[68, "armi.cli.gridGui.GridGuiEntryPoint.settingsArgument"]], "migrateinputs (class in armi.cli.migrateinputs)": [[69, "armi.cli.migrateInputs.MigrateInputs"]], "addoptions() (armi.cli.migrateinputs.migrateinputs method)": [[69, "armi.cli.migrateInputs.MigrateInputs.addOptions"]], "armi.cli.migrateinputs": [[69, "module-armi.cli.migrateInputs"]], "invoke() (armi.cli.migrateinputs.migrateinputs method)": [[69, "armi.cli.migrateInputs.MigrateInputs.invoke"]], "name (armi.cli.migrateinputs.migrateinputs attribute)": [[69, "armi.cli.migrateInputs.MigrateInputs.name"]], "settingsargument (armi.cli.migrateinputs.migrateinputs attribute)": [[69, "armi.cli.migrateInputs.MigrateInputs.settingsArgument"]], "modifycasesettingscommand (class in armi.cli.modify)": [[70, "armi.cli.modify.ModifyCaseSettingsCommand"]], "addoptions() (armi.cli.modify.modifycasesettingscommand method)": [[70, "armi.cli.modify.ModifyCaseSettingsCommand.addOptions"]], "armi.cli.modify": [[70, "module-armi.cli.modify"]], "invoke() (armi.cli.modify.modifycasesettingscommand method)": [[70, "armi.cli.modify.ModifyCaseSettingsCommand.invoke"]], "name (armi.cli.modify.modifycasesettingscommand attribute)": [[70, "armi.cli.modify.ModifyCaseSettingsCommand.name"]], "settingsargument (armi.cli.modify.modifycasesettingscommand attribute)": [[70, "armi.cli.modify.ModifyCaseSettingsCommand.settingsArgument"]], "reportsentrypoint (class in armi.cli.reportsentrypoint)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint"]], "addoptions() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.addOptions"]], "armi.cli.reportsentrypoint": [[71, "module-armi.cli.reportsEntryPoint"]], "createreportfromsettings() (in module armi.cli.reportsentrypoint)": [[71, "armi.cli.reportsEntryPoint.createReportFromSettings"]], "description (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.description"]], "invoke() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.invoke"]], "name (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.name"]], "report_out_dir (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.report_out_dir"]], "settingsargument (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.settingsArgument"]], "totwotuple() (armi.cli.reportsentrypoint.reportsentrypoint static method)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.toTwoTuple"]], "runentrypoint (class in armi.cli.run)": [[72, "armi.cli.run.RunEntryPoint"]], "addoptions() (armi.cli.run.runentrypoint method)": [[72, "armi.cli.run.RunEntryPoint.addOptions"]], "armi.cli.run": [[72, "module-armi.cli.run"]], "invoke() (armi.cli.run.runentrypoint method)": [[72, "armi.cli.run.RunEntryPoint.invoke"]], "name (armi.cli.run.runentrypoint attribute)": [[72, "armi.cli.run.RunEntryPoint.name"]], "settingsargument (armi.cli.run.runentrypoint attribute)": [[72, "armi.cli.run.RunEntryPoint.settingsArgument"]], "runsuitecommand (class in armi.cli.runsuite)": [[73, "armi.cli.runSuite.RunSuiteCommand"]], "addoptions() (armi.cli.runsuite.runsuitecommand method)": [[73, "armi.cli.runSuite.RunSuiteCommand.addOptions"]], "armi.cli.runsuite": [[73, "module-armi.cli.runSuite"]], "invoke() (armi.cli.runsuite.runsuitecommand method)": [[73, "armi.cli.runSuite.RunSuiteCommand.invoke"]], "name (armi.cli.runsuite.runsuitecommand attribute)": [[73, "armi.cli.runSuite.RunSuiteCommand.name"]], "settingsargument (armi.cli.runsuite.runsuitecommand attribute)": [[73, "armi.cli.runSuite.RunSuiteCommand.settingsArgument"]], "armi.cli.tests": [[74, "module-armi.cli.tests"]], "testcheckinputentrypoint (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint"]], "testclonearmiruncommandbatch (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch"]], "testclonesuitecommand (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand"]], "testcomparecases (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestCompareCases"]], "testcompareisotxslibsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint"]], "testcomparesuites (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestCompareSuites"]], "testexpandblueprints (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints"]], "testextractinputs (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestExtractInputs"]], "testinitializationentrypoints (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints"]], "testinjectinputs (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestInjectInputs"]], "testmigrateinputs (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs"]], "testmodifycasesettingscommand (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand"]], "testreportsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint"]], "testrunentrypoint (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint"]], "testrunsuitecommand (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand"]], "testvisfileentrypointcommand (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand"]], "armi.cli.tests.test_runentrypoint": [[75, "module-armi.cli.tests.test_runEntryPoint"]], "buildtestdb() (in module armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.buildTestDB"]], "test_checkinputentrypointbasics() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointBasics"]], "test_checkinputentrypointinvoke() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointInvoke"]], "test_cleanargs() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_cleanArgs"]], "test_clonearmiruncommandbatchbasics() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchBasics"]], "test_clonearmiruncommandbatchinvokemedium() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeMedium"]], "test_clonearmiruncommandbatchinvokeshort() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeShort"]], "test_clonesuitecommandbasics() (armi.cli.tests.test_runentrypoint.testclonesuitecommand method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand.test_cloneSuiteCommandBasics"]], "test_comparecasesbasics() (armi.cli.tests.test_runentrypoint.testcomparecases method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCompareCases.test_compareCasesBasics"]], "test_compareisotxslibsbasics() (armi.cli.tests.test_runentrypoint.testcompareisotxslibsentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint.test_compareIsotxsLibsBasics"]], "test_comparesuitesbasics() (armi.cli.tests.test_runentrypoint.testcomparesuites method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCompareSuites.test_compareSuitesBasics"]], "test_entrypointinitialization() (armi.cli.tests.test_runentrypoint.testinitializationentrypoints method)": [[75, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints.test_entryPointInitialization"]], "test_executecommand() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_executeCommand"]], "test_expandblueprintsbasics() (armi.cli.tests.test_runentrypoint.testexpandblueprints method)": [[75, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints.test_expandBlueprintsBasics"]], "test_extractinputsbasics() (armi.cli.tests.test_runentrypoint.testextractinputs method)": [[75, "armi.cli.tests.test_runEntryPoint.TestExtractInputs.test_extractInputsBasics"]], "test_injectinputsbasics() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[75, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsBasics"]], "test_injectinputsinvokeignore() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[75, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeIgnore"]], "test_injectinputsinvokenodata() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[75, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeNoData"]], "test_migrateinputsbasics() (armi.cli.tests.test_runentrypoint.testmigrateinputs method)": [[75, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs.test_migrateInputsBasics"]], "test_modifycasesettingscommandbasics() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[75, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandBasics"]], "test_modifycasesettingscommandinvoke() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[75, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandInvoke"]], "test_reportsentrypointbasics() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_reportsEntryPointBasics"]], "test_runcommandhelp() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runCommandHelp"]], "test_runentrypointbasics() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runEntryPointBasics"]], "test_runsuitecommandbasics() (armi.cli.tests.test_runentrypoint.testrunsuitecommand method)": [[75, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand.test_runSuiteCommandBasics"]], "test_totwotuple() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_toTwoTuple"]], "test_visfileentrypointbasics() (armi.cli.tests.test_runentrypoint.testvisfileentrypointcommand method)": [[75, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand.test_visFileEntryPointBasics"]], "testrunsuitesuite (class in armi.cli.tests.test_runsuite)": [[76, "armi.cli.tests.test_runSuite.TestRunSuiteSuite"]], "armi.cli.tests.test_runsuite": [[76, "module-armi.cli.tests.test_runSuite"]], "test_listcommand() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[76, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_listCommand"]], "test_run() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[76, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_run"]], "test_showversion() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[76, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_showVersion"]], "armi.conftest": [[77, "module-armi.conftest"]], "bootstraparmitestenv() (in module armi.conftest)": [[77, "armi.conftest.bootstrapArmiTestEnv"]], "pytest_sessionstart() (in module armi.conftest)": [[77, "armi.conftest.pytest_sessionstart"]], "batch (armi.context.mode attribute)": [[78, "armi.context.Mode.BATCH"]], "gui (armi.context.mode attribute)": [[78, "armi.context.Mode.GUI"]], "interactive (armi.context.mode attribute)": [[78, "armi.context.Mode.INTERACTIVE"]], "mode (class in armi.context)": [[78, "armi.context.Mode"]], "activatelocalfastpath() (in module armi.context)": [[78, "armi.context.activateLocalFastPath"]], "armi.context": [[78, "module-armi.context"]], "cleanallarmitempdirs() (in module armi.context)": [[78, "armi.context.cleanAllArmiTempDirs"]], "cleantempdirs() (in module armi.context)": [[78, "armi.context.cleanTempDirs"]], "disconnectallhdfdbs() (in module armi.context)": [[78, "armi.context.disconnectAllHdfDBs"]], "getfastpath() (in module armi.context)": [[78, "armi.context.getFastPath"]], "setmode() (armi.context.mode class method)": [[78, "armi.context.Mode.setMode"]], "after (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.AFTER"]], "before (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.BEFORE"]], "bookkeeping (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.BOOKKEEPING"]], "critical_control (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.CRITICAL_CONTROL"]], "cross_sections (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.CROSS_SECTIONS"]], "depletion (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.DEPLETION"]], "duplicate (armi.interfaces.interface.distribute attribute)": [[79, "armi.interfaces.Interface.Distribute.DUPLICATE"]], "flux (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.FLUX"]], "fuel_management (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.FUEL_MANAGEMENT"]], "fuel_performance (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.FUEL_PERFORMANCE"]], "inputwriter (class in armi.interfaces)": [[79, "armi.interfaces.InputWriter"]], "interface (class in armi.interfaces)": [[79, "armi.interfaces.Interface"]], "interface.distribute (class in armi.interfaces)": [[79, "armi.interfaces.Interface.Distribute"]], "interfaceinfo (class in armi.interfaces)": [[79, "armi.interfaces.InterfaceInfo"]], "new (armi.interfaces.interface.distribute attribute)": [[79, "armi.interfaces.Interface.Distribute.NEW"]], "outputreader (class in armi.interfaces)": [[79, "armi.interfaces.OutputReader"]], "postprocessing (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.POSTPROCESSING"]], "preprocessing (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.PREPROCESSING"]], "reactivity_coeffs (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.REACTIVITY_COEFFS"]], "skip (armi.interfaces.interface.distribute attribute)": [[79, "armi.interfaces.Interface.Distribute.SKIP"]], "stack_order (class in armi.interfaces)": [[79, "armi.interfaces.STACK_ORDER"]], "thermal_hydraulics (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.THERMAL_HYDRAULICS"]], "transient (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.TRANSIENT"]], "tightcoupler (class in armi.interfaces)": [[79, "armi.interfaces.TightCoupler"]], "apply() (armi.interfaces.outputreader method)": [[79, "armi.interfaces.OutputReader.apply"]], "armi.interfaces": [[79, "module-armi.interfaces"]], "attachreactor() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.attachReactor"]], "bolforce() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.bolForce"]], "detachreactor() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.detachReactor"]], "distributable() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.distributable"]], "duplicate() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.duplicate"]], "enabled() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.enabled"]], "function (armi.interfaces.interface attribute)": [[79, "armi.interfaces.Interface.function"]], "getactiveinterfaceinfo() (in module armi.interfaces)": [[79, "armi.interfaces.getActiveInterfaceInfo"]], "getdependencies() (armi.interfaces.interface class method)": [[79, "armi.interfaces.Interface.getDependencies"]], "gethistoryparams() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.getHistoryParams"]], "getinputfiles() (armi.interfaces.interface class method)": [[79, "armi.interfaces.Interface.getInputFiles"]], "getinterface() (armi.interfaces.inputwriter method)": [[79, "armi.interfaces.InputWriter.getInterface"]], "getinterface() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.getInterface"]], "getinterface() (armi.interfaces.outputreader method)": [[79, "armi.interfaces.OutputReader.getInterface"]], "getlistdimension() (armi.interfaces.tightcoupler static method)": [[79, "armi.interfaces.TightCoupler.getListDimension"]], "gettightcouplingvalue() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.getTightCouplingValue"]], "interactboc() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactBOC"]], "interactbol() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactBOL"]], "interactcoupled() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactCoupled"]], "interactdistributestate() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactDistributeState"]], "interacteoc() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactEOC"]], "interacteol() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactEOL"]], "interacterror() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactError"]], "interacteverynode() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactEveryNode"]], "interactinit() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactInit"]], "interfacecls (armi.interfaces.interfaceinfo attribute)": [[79, "armi.interfaces.InterfaceInfo.interfaceCls"]], "isconverged() (armi.interfaces.tightcoupler method)": [[79, "armi.interfaces.TightCoupler.isConverged"]], "isinterfaceactive() (in module armi.interfaces)": [[79, "armi.interfaces.isInterfaceActive"]], "isrequesteddetailpoint() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.isRequestedDetailPoint"]], "kwargs (armi.interfaces.interfaceinfo attribute)": [[79, "armi.interfaces.InterfaceInfo.kwargs"]], "name (armi.interfaces.interface attribute)": [[79, "armi.interfaces.Interface.name"]], "namecontains() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.nameContains"]], "order (armi.interfaces.interfaceinfo attribute)": [[79, "armi.interfaces.InterfaceInfo.order"]], "postdistributestate() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.postDistributeState"]], "predistributestate() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.preDistributeState"]], "read() (armi.interfaces.outputreader method)": [[79, "armi.interfaces.OutputReader.read"]], "readoutput() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.readOutput"]], "specifyinputs() (armi.interfaces.interface static method)": [[79, "armi.interfaces.Interface.specifyInputs"]], "storepreviousiterationvalue() (armi.interfaces.tightcoupler method)": [[79, "armi.interfaces.TightCoupler.storePreviousIterationValue"]], "updatephysicscouplingcontrol() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.updatePhysicsCouplingControl"]], "workeroperate() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.workerOperate"]], "write() (armi.interfaces.inputwriter method)": [[79, "armi.interfaces.InputWriter.write"]], "writeinput() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.writeInput"]], "armi.materials": [[80, "module-armi.materials"]], "importmaterialsintomodulenamespace() (in module armi.materials)": [[80, "armi.materials.importMaterialsIntoModuleNamespace"]], "iterallmaterialclassesinnamespace() (in module armi.materials)": [[80, "armi.materials.iterAllMaterialClassesInNamespace"]], "resolvematerialclassbyname() (in module armi.materials)": [[80, "armi.materials.resolveMaterialClassByName"]], "setmaterialnamespaceorder() (in module armi.materials)": [[80, "armi.materials.setMaterialNamespaceOrder"]], "air (class in armi.materials.air)": [[81, "armi.materials.air.Air"]], "armi.materials.air": [[81, "module-armi.materials.air"]], "heatcapacity() (armi.materials.air.air method)": [[81, "armi.materials.air.Air.heatCapacity"]], "propertyvalidtemperature (armi.materials.air.air attribute)": [[81, "armi.materials.air.Air.propertyValidTemperature"]], "pseudodensity() (armi.materials.air.air method)": [[81, "armi.materials.air.Air.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.air.air method)": [[81, "armi.materials.air.Air.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.air.air method)": [[81, "armi.materials.air.Air.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.air.air method)": [[81, "armi.materials.air.Air.thermalConductivity"]], "alloy200 (class in armi.materials.alloy200)": [[82, "armi.materials.alloy200.Alloy200"]], "armi.materials.alloy200": [[82, "module-armi.materials.alloy200"]], "density() (armi.materials.alloy200.alloy200 method)": [[82, "armi.materials.alloy200.Alloy200.density"]], "linearexpansion() (armi.materials.alloy200.alloy200 method)": [[82, "armi.materials.alloy200.Alloy200.linearExpansion"]], "linearexpansiontable (armi.materials.alloy200.alloy200 attribute)": [[82, "armi.materials.alloy200.Alloy200.linearExpansionTable"]], "linearexpansiontablek (armi.materials.alloy200.alloy200 attribute)": [[82, "armi.materials.alloy200.Alloy200.linearExpansionTableK"]], "modelconst (armi.materials.alloy200.alloy200 attribute)": [[82, "armi.materials.alloy200.Alloy200.modelConst"]], "propertyvalidtemperature (armi.materials.alloy200.alloy200 attribute)": [[82, "armi.materials.alloy200.Alloy200.propertyValidTemperature"]], "referencemaxpercentimpurites (armi.materials.alloy200.alloy200 attribute)": [[82, "armi.materials.alloy200.Alloy200.referenceMaxPercentImpurites"]], "references (armi.materials.alloy200.alloy200 attribute)": [[82, "armi.materials.alloy200.Alloy200.references"]], "setdefaultmassfracs() (armi.materials.alloy200.alloy200 method)": [[82, "armi.materials.alloy200.Alloy200.setDefaultMassFracs"]], "b4c (class in armi.materials.b4c)": [[83, "armi.materials.b4c.B4C"]], "applyinputparams() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.applyInputParams"]], "armi.materials.b4c": [[83, "module-armi.materials.b4c"]], "density() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.density"]], "enrichednuclide (armi.materials.b4c.b4c attribute)": [[83, "armi.materials.b4c.B4C.enrichedNuclide"]], "getmassenrichmentfromnumenrich() (armi.materials.b4c.b4c static method)": [[83, "armi.materials.b4c.B4C.getMassEnrichmentFromNumEnrich"]], "linearexpansionpercent() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.b4c.b4c attribute)": [[83, "armi.materials.b4c.B4C.propertyValidTemperature"]], "pseudodensity() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.setDefaultMassFracs"]], "setnewmassfracsfrommassenrich() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.setNewMassFracsFromMassEnrich"]], "updatetd() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.updateTD"]], "be9 (class in armi.materials.be9)": [[84, "armi.materials.be9.Be9"]], "armi.materials.be9": [[84, "module-armi.materials.be9"]], "density() (armi.materials.be9.be9 method)": [[84, "armi.materials.be9.Be9.density"]], "linearexpansionpercent() (armi.materials.be9.be9 method)": [[84, "armi.materials.be9.Be9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.be9.be9 attribute)": [[84, "armi.materials.be9.Be9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.be9.be9 method)": [[84, "armi.materials.be9.Be9.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.be9.be9 attribute)": [[84, "armi.materials.be9.Be9.thermalScatteringLaws"]], "cah2 (class in armi.materials.cah2)": [[85, "armi.materials.caH2.CaH2"]], "armi.materials.cah2": [[85, "module-armi.materials.caH2"]], "density() (armi.materials.cah2.cah2 method)": [[85, "armi.materials.caH2.CaH2.density"]], "setdefaultmassfracs() (armi.materials.cah2.cah2 method)": [[85, "armi.materials.caH2.CaH2.setDefaultMassFracs"]], "californium (class in armi.materials.californium)": [[86, "armi.materials.californium.Californium"]], "armi.materials.californium": [[86, "module-armi.materials.californium"]], "density() (armi.materials.californium.californium method)": [[86, "armi.materials.californium.Californium.density"]], "setdefaultmassfracs() (armi.materials.californium.californium method)": [[86, "armi.materials.californium.Californium.setDefaultMassFracs"]], "concrete (class in armi.materials.concrete)": [[87, "armi.materials.concrete.Concrete"]], "armi.materials.concrete": [[87, "module-armi.materials.concrete"]], "density() (armi.materials.concrete.concrete method)": [[87, "armi.materials.concrete.Concrete.density"]], "setdefaultmassfracs() (armi.materials.concrete.concrete method)": [[87, "armi.materials.concrete.Concrete.setDefaultMassFracs"]], "cu (class in armi.materials.copper)": [[88, "armi.materials.copper.Cu"]], "armi.materials.copper": [[88, "module-armi.materials.copper"]], "density() (armi.materials.copper.cu method)": [[88, "armi.materials.copper.Cu.density"]], "linearexpansionpercent() (armi.materials.copper.cu method)": [[88, "armi.materials.copper.Cu.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.copper.cu attribute)": [[88, "armi.materials.copper.Cu.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.copper.cu method)": [[88, "armi.materials.copper.Cu.setDefaultMassFracs"]], "cs (class in armi.materials.cs)": [[89, "armi.materials.cs.Cs"]], "armi.materials.cs": [[89, "module-armi.materials.cs"]], "meltingpoint() (armi.materials.cs.cs method)": [[89, "armi.materials.cs.Cs.meltingPoint"]], "pseudodensity() (armi.materials.cs.cs method)": [[89, "armi.materials.cs.Cs.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.cs.cs method)": [[89, "armi.materials.cs.Cs.setDefaultMassFracs"]], "custom (class in armi.materials.custom)": [[90, "armi.materials.custom.Custom"]], "armi.materials.custom": [[90, "module-armi.materials.custom"]], "density() (armi.materials.custom.custom method)": [[90, "armi.materials.custom.Custom.density"]], "enrichednuclide (armi.materials.custom.custom attribute)": [[90, "armi.materials.custom.Custom.enrichedNuclide"]], "pseudodensity() (armi.materials.custom.custom method)": [[90, "armi.materials.custom.Custom.pseudoDensity"]], "setmassfrac() (armi.materials.custom.custom method)": [[90, "armi.materials.custom.Custom.setMassFrac"]], "graphite (class in armi.materials.graphite)": [[91, "armi.materials.graphite.Graphite"]], "armi.materials.graphite": [[91, "module-armi.materials.graphite"]], "density() (armi.materials.graphite.graphite method)": [[91, "armi.materials.graphite.Graphite.density"]], "linearexpansionpercent() (armi.materials.graphite.graphite method)": [[91, "armi.materials.graphite.Graphite.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.graphite.graphite method)": [[91, "armi.materials.graphite.Graphite.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.graphite.graphite attribute)": [[91, "armi.materials.graphite.Graphite.thermalScatteringLaws"]], "hafnium (class in armi.materials.hafnium)": [[92, "armi.materials.hafnium.Hafnium"]], "armi.materials.hafnium": [[92, "module-armi.materials.hafnium"]], "density() (armi.materials.hafnium.hafnium method)": [[92, "armi.materials.hafnium.Hafnium.density"]], "setdefaultmassfracs() (armi.materials.hafnium.hafnium method)": [[92, "armi.materials.hafnium.Hafnium.setDefaultMassFracs"]], "hastelloyn (class in armi.materials.hastelloyn)": [[93, "armi.materials.hastelloyN.HastelloyN"]], "armi.materials.hastelloyn": [[93, "module-armi.materials.hastelloyN"]], "density() (armi.materials.hastelloyn.hastelloyn method)": [[93, "armi.materials.hastelloyN.HastelloyN.density"]], "heatcapacity() (armi.materials.hastelloyn.hastelloyn method)": [[93, "armi.materials.hastelloyN.HastelloyN.heatCapacity"]], "linearexpansionpercent() (armi.materials.hastelloyn.hastelloyn method)": [[93, "armi.materials.hastelloyN.HastelloyN.linearExpansionPercent"]], "materialintro (armi.materials.hastelloyn.hastelloyn attribute)": [[93, "armi.materials.hastelloyN.HastelloyN.materialIntro"]], "meancoefficientthermalexpansion() (armi.materials.hastelloyn.hastelloyn method)": [[93, "armi.materials.hastelloyN.HastelloyN.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.hastelloyn.hastelloyn attribute)": [[93, "armi.materials.hastelloyN.HastelloyN.propertyValidTemperature"]], "reftempk (armi.materials.hastelloyn.hastelloyn attribute)": [[93, "armi.materials.hastelloyN.HastelloyN.refTempK"]], "setdefaultmassfracs() (armi.materials.hastelloyn.hastelloyn method)": [[93, "armi.materials.hastelloyN.HastelloyN.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.hastelloyn.hastelloyn method)": [[93, "armi.materials.hastelloyN.HastelloyN.thermalConductivity"]], "ht9 (class in armi.materials.ht9)": [[94, "armi.materials.ht9.HT9"]], "armi.materials.ht9": [[94, "module-armi.materials.ht9"]], "density() (armi.materials.ht9.ht9 method)": [[94, "armi.materials.ht9.HT9.density"]], "linearexpansionpercent() (armi.materials.ht9.ht9 method)": [[94, "armi.materials.ht9.HT9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.ht9.ht9 attribute)": [[94, "armi.materials.ht9.HT9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.ht9.ht9 method)": [[94, "armi.materials.ht9.HT9.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.ht9.ht9 method)": [[94, "armi.materials.ht9.HT9.thermalConductivity"]], "inconel (class in armi.materials.inconel)": [[95, "armi.materials.inconel.Inconel"]], "inconel617 (class in armi.materials.inconel)": [[95, "armi.materials.inconel.Inconel617"]], "armi.materials.inconel": [[95, "module-armi.materials.inconel"]], "density() (armi.materials.inconel.inconel method)": [[95, "armi.materials.inconel.Inconel.density"]], "references (armi.materials.inconel.inconel attribute)": [[95, "armi.materials.inconel.Inconel.references"]], "setdefaultmassfracs() (armi.materials.inconel.inconel method)": [[95, "armi.materials.inconel.Inconel.setDefaultMassFracs"]], "inconel600 (class in armi.materials.inconel600)": [[96, "armi.materials.inconel600.Inconel600"]], "armi.materials.inconel600": [[96, "module-armi.materials.inconel600"]], "density() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.density"]], "heatcapacity() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.heatCapacity"]], "linearexpansion() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel600.inconel600 attribute)": [[96, "armi.materials.inconel600.Inconel600.propertyValidTemperature"]], "reftempk (armi.materials.inconel600.inconel600 attribute)": [[96, "armi.materials.inconel600.Inconel600.refTempK"]], "references (armi.materials.inconel600.inconel600 attribute)": [[96, "armi.materials.inconel600.Inconel600.references"]], "setdefaultmassfracs() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.thermalConductivity"]], "inconel625 (class in armi.materials.inconel625)": [[97, "armi.materials.inconel625.Inconel625"]], "armi.materials.inconel625": [[97, "module-armi.materials.inconel625"]], "density() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.density"]], "heatcapacity() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.heatCapacity"]], "linearexpansion() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel625.inconel625 attribute)": [[97, "armi.materials.inconel625.Inconel625.propertyValidTemperature"]], "reftempk (armi.materials.inconel625.inconel625 attribute)": [[97, "armi.materials.inconel625.Inconel625.refTempK"]], "references (armi.materials.inconel625.inconel625 attribute)": [[97, "armi.materials.inconel625.Inconel625.references"]], "setdefaultmassfracs() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.thermalConductivity"]], "inconel800 (class in armi.materials.inconel800)": [[98, "armi.materials.inconel800.Inconel800"]], "armi.materials.inconel800": [[98, "module-armi.materials.inconel800"]], "density() (armi.materials.inconel800.inconel800 method)": [[98, "armi.materials.inconel800.Inconel800.density"]], "linearexpansionpercent() (armi.materials.inconel800.inconel800 method)": [[98, "armi.materials.inconel800.Inconel800.linearExpansionPercent"]], "meancoefficientthermalexpansion() (armi.materials.inconel800.inconel800 method)": [[98, "armi.materials.inconel800.Inconel800.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.inconel800.inconel800 attribute)": [[98, "armi.materials.inconel800.Inconel800.propertyValidTemperature"]], "reftempk (armi.materials.inconel800.inconel800 attribute)": [[98, "armi.materials.inconel800.Inconel800.refTempK"]], "setdefaultmassfracs() (armi.materials.inconel800.inconel800 method)": [[98, "armi.materials.inconel800.Inconel800.setDefaultMassFracs"]], "inconelpe16 (class in armi.materials.inconelpe16)": [[99, "armi.materials.inconelPE16.InconelPE16"]], "armi.materials.inconelpe16": [[99, "module-armi.materials.inconelPE16"]], "density() (armi.materials.inconelpe16.inconelpe16 method)": [[99, "armi.materials.inconelPE16.InconelPE16.density"]], "references (armi.materials.inconelpe16.inconelpe16 attribute)": [[99, "armi.materials.inconelPE16.InconelPE16.references"]], "setdefaultmassfracs() (armi.materials.inconelpe16.inconelpe16 method)": [[99, "armi.materials.inconelPE16.InconelPE16.setDefaultMassFracs"]], "inconelx750 (class in armi.materials.inconelx750)": [[100, "armi.materials.inconelX750.InconelX750"]], "armi.materials.inconelx750": [[100, "module-armi.materials.inconelX750"]], "density() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.density"]], "heatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.heatCapacity"]], "linearexpansion() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconelx750.inconelx750 attribute)": [[100, "armi.materials.inconelX750.InconelX750.propertyValidTemperature"]], "reftempk (armi.materials.inconelx750.inconelx750 attribute)": [[100, "armi.materials.inconelX750.InconelX750.refTempK"]], "references (armi.materials.inconelx750.inconelx750 attribute)": [[100, "armi.materials.inconelX750.InconelX750.references"]], "setdefaultmassfracs() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.thermalConductivity"]], "lead (class in armi.materials.lead)": [[101, "armi.materials.lead.Lead"]], "armi.materials.lead": [[101, "module-armi.materials.lead"]], "heatcapacity() (armi.materials.lead.lead method)": [[101, "armi.materials.lead.Lead.heatCapacity"]], "propertyvalidtemperature (armi.materials.lead.lead attribute)": [[101, "armi.materials.lead.Lead.propertyValidTemperature"]], "pseudodensity() (armi.materials.lead.lead method)": [[101, "armi.materials.lead.Lead.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.lead.lead method)": [[101, "armi.materials.lead.Lead.setDefaultMassFracs"]], "volumetricexpansion() (armi.materials.lead.lead method)": [[101, "armi.materials.lead.Lead.volumetricExpansion"]], "leadbismuth (class in armi.materials.leadbismuth)": [[102, "armi.materials.leadBismuth.LeadBismuth"]], "armi.materials.leadbismuth": [[102, "module-armi.materials.leadBismuth"]], "dynamicvisc() (armi.materials.leadbismuth.leadbismuth method)": [[102, "armi.materials.leadBismuth.LeadBismuth.dynamicVisc"]], "heatcapacity() (armi.materials.leadbismuth.leadbismuth method)": [[102, "armi.materials.leadBismuth.LeadBismuth.heatCapacity"]], "propertyvalidtemperature (armi.materials.leadbismuth.leadbismuth attribute)": [[102, "armi.materials.leadBismuth.LeadBismuth.propertyValidTemperature"]], "pseudodensity() (armi.materials.leadbismuth.leadbismuth method)": [[102, "armi.materials.leadBismuth.LeadBismuth.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.leadbismuth.leadbismuth method)": [[102, "armi.materials.leadBismuth.LeadBismuth.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.leadbismuth.leadbismuth method)": [[102, "armi.materials.leadBismuth.LeadBismuth.thermalConductivity"]], "volumetricexpansion() (armi.materials.leadbismuth.leadbismuth method)": [[102, "armi.materials.leadBismuth.LeadBismuth.volumetricExpansion"]], "lithium (class in armi.materials.lithium)": [[103, "armi.materials.lithium.Lithium"]], "applyinputparams() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.applyInputParams"]], "armi.materials.lithium": [[103, "module-armi.materials.lithium"]], "boilingpoint() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.boilingPoint"]], "enrichednuclide (armi.materials.lithium.lithium attribute)": [[103, "armi.materials.lithium.Lithium.enrichedNuclide"]], "heatcapacity() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.heatCapacity"]], "meltingpoint() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.meltingPoint"]], "pseudodensity() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.pseudoDensity"]], "references (armi.materials.lithium.lithium attribute)": [[103, "armi.materials.lithium.Lithium.references"]], "setdefaultmassfracs() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.thermalConductivity"]], "magnesium (class in armi.materials.magnesium)": [[104, "armi.materials.magnesium.Magnesium"]], "armi.materials.magnesium": [[104, "module-armi.materials.magnesium"]], "propertyvalidtemperature (armi.materials.magnesium.magnesium attribute)": [[104, "armi.materials.magnesium.Magnesium.propertyValidTemperature"]], "pseudodensity() (armi.materials.magnesium.magnesium method)": [[104, "armi.materials.magnesium.Magnesium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.magnesium.magnesium method)": [[104, "armi.materials.magnesium.Magnesium.setDefaultMassFracs"]], "data_source (armi.materials.material.material attribute)": [[105, "armi.materials.material.Material.DATA_SOURCE"]], "fluid (class in armi.materials.material)": [[105, "armi.materials.material.Fluid"]], "fuelmaterial (class in armi.materials.material)": [[105, "armi.materials.material.FuelMaterial"]], "material (class in armi.materials.material)": [[105, "armi.materials.material.Material"]], "simplesolid (class in armi.materials.material)": [[105, "armi.materials.material.SimpleSolid"]], "adjustmassenrichment() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.adjustMassEnrichment"]], "adjustmassfrac() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.adjustMassFrac"]], "adjusttd() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.adjustTD"]], "applyinputparams() (armi.materials.material.fuelmaterial method)": [[105, "armi.materials.material.FuelMaterial.applyInputParams"]], "applyinputparams() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.applyInputParams"]], "armi.materials.material": [[105, "module-armi.materials.material"]], "backup() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.backUp"]], "checkpropertytemprange() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.checkPropertyTempRange"]], "checktemprange() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.checkTempRange"]], "class1_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[105, "armi.materials.material.FuelMaterial.class1_custom_isotopics"]], "class1_wt_frac (armi.materials.material.fuelmaterial attribute)": [[105, "armi.materials.material.FuelMaterial.class1_wt_frac"]], "class2_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[105, "armi.materials.material.FuelMaterial.class2_custom_isotopics"]], "clearcache() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.clearCache"]], "clearmassfrac() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.clearMassFrac"]], "density() (armi.materials.material.fluid method)": [[105, "armi.materials.material.Fluid.density"]], "density() (armi.materials.material.fuelmaterial method)": [[105, "armi.materials.material.FuelMaterial.density"]], "density() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.density"]], "density() (armi.materials.material.simplesolid method)": [[105, "armi.materials.material.SimpleSolid.density"]], "densitykgm3() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.densityKgM3"]], "densitytimesheatcapacity() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.densityTimesHeatCapacity"]], "duplicate() (armi.materials.material.fuelmaterial method)": [[105, "armi.materials.material.FuelMaterial.duplicate"]], "duplicate() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.duplicate"]], "enrichednuclide (armi.materials.material.material attribute)": [[105, "armi.materials.material.Material.enrichedNuclide"]], "gasporosity (armi.materials.material.material property)": [[105, "armi.materials.material.Material.gasPorosity"]], "getchildren() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getChildren"]], "getchildrenwithflags() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getChildrenWithFlags"]], "getcorrosionrate() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getCorrosionRate"]], "getmassfrac() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getMassFrac"]], "getname() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getName"]], "getnuclides() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getNuclides"]], "getproperty() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getProperty"]], "gettd() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getTD"]], "gettempchangefordensitychange() (armi.materials.material.fluid method)": [[105, "armi.materials.material.Fluid.getTempChangeForDensityChange"]], "gettempchangefordensitychange() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getTempChangeForDensityChange"]], "gettemperatureatdensity() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getTemperatureAtDensity"]], "getthermalexpansiondensityreduction() (armi.materials.material.fluid method)": [[105, "armi.materials.material.Fluid.getThermalExpansionDensityReduction"]], "getthermalexpansiondensityreduction() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getThermalExpansionDensityReduction"]], "heatcapacity() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.heatCapacity"]], "linearexpansion() (armi.materials.material.fluid method)": [[105, "armi.materials.material.Fluid.linearExpansion"]], "linearexpansion() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.linearExpansion"]], "linearexpansionfactor() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.linearExpansionFactor"]], "linearexpansionpercent() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.linearExpansionPercent"]], "linearexpansionpercent() (armi.materials.material.simplesolid method)": [[105, "armi.materials.material.SimpleSolid.linearExpansionPercent"]], "liquidporosity (armi.materials.material.material property)": [[105, "armi.materials.material.Material.liquidPorosity"]], "modelconst (armi.materials.material.material attribute)": [[105, "armi.materials.material.Material.modelConst"]], "name (armi.materials.material.material property)": [[105, "armi.materials.material.Material.name"]], "parentawaredensityredirect() (in module armi.materials.material)": [[105, "armi.materials.material.parentAwareDensityRedirect"]], "propertyvalidtemperature (armi.materials.material.material attribute)": [[105, "armi.materials.material.Material.propertyValidTemperature"]], "pseudodensity() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.pseudoDensity"]], "pseudodensity() (armi.materials.material.simplesolid method)": [[105, "armi.materials.material.SimpleSolid.pseudoDensity"]], "pseudodensitykgm3() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.pseudoDensityKgM3"]], "pufrac (armi.materials.material.fuelmaterial attribute)": [[105, "armi.materials.material.FuelMaterial.puFrac"]], "reftempk (armi.materials.material.simplesolid attribute)": [[105, "armi.materials.material.SimpleSolid.refTempK"]], "references (armi.materials.material.material attribute)": [[105, "armi.materials.material.Material.references"]], "removenucmassfrac() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.removeNucMassFrac"]], "restorebackup() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.restoreBackup"]], "setdefaultmassfracs() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.setDefaultMassFracs"]], "setmassfrac() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.setMassFrac"]], "thermalconductivity() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.thermalConductivity"]], "thermalscatteringlaws (armi.materials.material.material attribute)": [[105, "armi.materials.material.Material.thermalScatteringLaws"]], "ufrac (armi.materials.material.fuelmaterial attribute)": [[105, "armi.materials.material.FuelMaterial.uFrac"]], "volumetricexpansion() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.volumetricExpansion"]], "yieldstrength() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.yieldStrength"]], "zrfrac (armi.materials.material.fuelmaterial attribute)": [[105, "armi.materials.material.FuelMaterial.zrFrac"]], "mgo (class in armi.materials.mgo)": [[106, "armi.materials.mgO.MgO"]], "armi.materials.mgo": [[106, "module-armi.materials.mgO"]], "density() (armi.materials.mgo.mgo method)": [[106, "armi.materials.mgO.MgO.density"]], "linearexpansionpercent() (armi.materials.mgo.mgo method)": [[106, "armi.materials.mgO.MgO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.mgo.mgo attribute)": [[106, "armi.materials.mgO.MgO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.mgo.mgo method)": [[106, "armi.materials.mgO.MgO.setDefaultMassFracs"]], "armi.materials.mixture": [[107, "module-armi.materials.mixture"]], "molybdenum (class in armi.materials.molybdenum)": [[108, "armi.materials.molybdenum.Molybdenum"]], "armi.materials.molybdenum": [[108, "module-armi.materials.molybdenum"]], "density() (armi.materials.molybdenum.molybdenum method)": [[108, "armi.materials.molybdenum.Molybdenum.density"]], "setdefaultmassfracs() (armi.materials.molybdenum.molybdenum method)": [[108, "armi.materials.molybdenum.Molybdenum.setDefaultMassFracs"]], "mox (class in armi.materials.mox)": [[109, "armi.materials.mox.MOX"]], "applyinputparams() (armi.materials.mox.mox method)": [[109, "armi.materials.mox.MOX.applyInputParams"]], "armi.materials.mox": [[109, "module-armi.materials.mox"]], "enrichednuclide (armi.materials.mox.mox attribute)": [[109, "armi.materials.mox.MOX.enrichedNuclide"]], "getmassfracpuo2() (armi.materials.mox.mox method)": [[109, "armi.materials.mox.MOX.getMassFracPuO2"]], "getmolfracpuo2() (armi.materials.mox.mox method)": [[109, "armi.materials.mox.MOX.getMolFracPuO2"]], "meltingpoint() (armi.materials.mox.mox method)": [[109, "armi.materials.mox.MOX.meltingPoint"]], "setdefaultmassfracs() (armi.materials.mox.mox method)": [[109, "armi.materials.mox.MOX.setDefaultMassFracs"]], "setmassfracpuo2() (armi.materials.mox.mox method)": [[109, "armi.materials.mox.MOX.setMassFracPuO2"]], "nz (class in armi.materials.nz)": [[110, "armi.materials.nZ.NZ"]], "armi.materials.nz": [[110, "module-armi.materials.nZ"]], "density() (armi.materials.nz.nz method)": [[110, "armi.materials.nZ.NZ.density"]], "setdefaultmassfracs() (armi.materials.nz.nz method)": [[110, "armi.materials.nZ.NZ.setDefaultMassFracs"]], "potassium (class in armi.materials.potassium)": [[111, "armi.materials.potassium.Potassium"]], "armi.materials.potassium": [[111, "module-armi.materials.potassium"]], "propertyvalidtemperature (armi.materials.potassium.potassium attribute)": [[111, "armi.materials.potassium.Potassium.propertyValidTemperature"]], "pseudodensity() (armi.materials.potassium.potassium method)": [[111, "armi.materials.potassium.Potassium.pseudoDensity"]], "sc2o3 (class in armi.materials.scandiumoxide)": [[112, "armi.materials.scandiumOxide.Sc2O3"]], "armi.materials.scandiumoxide": [[112, "module-armi.materials.scandiumOxide"]], "density() (armi.materials.scandiumoxide.sc2o3 method)": [[112, "armi.materials.scandiumOxide.Sc2O3.density"]], "linearexpansionpercent() (armi.materials.scandiumoxide.sc2o3 method)": [[112, "armi.materials.scandiumOxide.Sc2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.scandiumoxide.sc2o3 attribute)": [[112, "armi.materials.scandiumOxide.Sc2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.scandiumoxide.sc2o3 method)": [[112, "armi.materials.scandiumOxide.Sc2O3.setDefaultMassFracs"]], "sic (class in armi.materials.sic)": [[113, "armi.materials.siC.SiC"]], "armi.materials.sic": [[113, "module-armi.materials.siC"]], "cumulativelinearexpansion() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.cumulativeLinearExpansion"]], "density() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.density"]], "heatcapacity() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.heatCapacity"]], "meltingpoint() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.meltingPoint"]], "propertyequation (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.propertyEquation"]], "propertynotes (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.propertyNotes"]], "propertyunits (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.propertyUnits"]], "propertyvalidtemperature (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.propertyValidTemperature"]], "pseudodensity() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.pseudoDensity"]], "reftempk (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.refTempK"]], "references (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.references"]], "setdefaultmassfracs() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.thermalConductivity"]], "thermalscatteringlaws (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.thermalScatteringLaws"]], "sodium (class in armi.materials.sodium)": [[114, "armi.materials.sodium.Sodium"]], "armi.materials.sodium": [[114, "module-armi.materials.sodium"]], "enthalpy() (armi.materials.sodium.sodium method)": [[114, "armi.materials.sodium.Sodium.enthalpy"]], "propertyvalidtemperature (armi.materials.sodium.sodium attribute)": [[114, "armi.materials.sodium.Sodium.propertyValidTemperature"]], "pseudodensity() (armi.materials.sodium.sodium method)": [[114, "armi.materials.sodium.Sodium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sodium.sodium method)": [[114, "armi.materials.sodium.Sodium.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.sodium.sodium method)": [[114, "armi.materials.sodium.Sodium.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.sodium.sodium method)": [[114, "armi.materials.sodium.Sodium.thermalConductivity"]], "nacl (class in armi.materials.sodiumchloride)": [[115, "armi.materials.sodiumChloride.NaCl"]], "armi.materials.sodiumchloride": [[115, "module-armi.materials.sodiumChloride"]], "density() (armi.materials.sodiumchloride.nacl method)": [[115, "armi.materials.sodiumChloride.NaCl.density"]], "setdefaultmassfracs() (armi.materials.sodiumchloride.nacl method)": [[115, "armi.materials.sodiumChloride.NaCl.setDefaultMassFracs"]], "sulfur (class in armi.materials.sulfur)": [[116, "armi.materials.sulfur.Sulfur"]], "applyinputparams() (armi.materials.sulfur.sulfur method)": [[116, "armi.materials.sulfur.Sulfur.applyInputParams"]], "armi.materials.sulfur": [[116, "module-armi.materials.sulfur"]], "propertyvalidtemperature (armi.materials.sulfur.sulfur attribute)": [[116, "armi.materials.sulfur.Sulfur.propertyValidTemperature"]], "pseudodensity() (armi.materials.sulfur.sulfur method)": [[116, "armi.materials.sulfur.Sulfur.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sulfur.sulfur method)": [[116, "armi.materials.sulfur.Sulfur.setDefaultMassFracs"]], "updatetd() (armi.materials.sulfur.sulfur method)": [[116, "armi.materials.sulfur.Sulfur.updateTD"]], "volumetricexpansion() (armi.materials.sulfur.sulfur method)": [[116, "armi.materials.sulfur.Sulfur.volumetricExpansion"]], "tzm (class in armi.materials.tzm)": [[117, "armi.materials.tZM.TZM"]], "armi.materials.tzm": [[117, "module-armi.materials.tZM"]], "density() (armi.materials.tzm.tzm method)": [[117, "armi.materials.tZM.TZM.density"]], "linearexpansionpercent() (armi.materials.tzm.tzm method)": [[117, "armi.materials.tZM.TZM.linearExpansionPercent"]], "percentthermalexpansion (armi.materials.tzm.tzm attribute)": [[117, "armi.materials.tZM.TZM.percentThermalExpansion"]], "propertyvalidtemperature (armi.materials.tzm.tzm attribute)": [[117, "armi.materials.tZM.TZM.propertyValidTemperature"]], "references (armi.materials.tzm.tzm attribute)": [[117, "armi.materials.tZM.TZM.references"]], "setdefaultmassfracs() (armi.materials.tzm.tzm method)": [[117, "armi.materials.tZM.TZM.setDefaultMassFracs"]], "temperaturec (armi.materials.tzm.tzm attribute)": [[117, "armi.materials.tZM.TZM.temperatureC"]], "tantalum (class in armi.materials.tantalum)": [[118, "armi.materials.tantalum.Tantalum"]], "armi.materials.tantalum": [[118, "module-armi.materials.tantalum"]], "density() (armi.materials.tantalum.tantalum method)": [[118, "armi.materials.tantalum.Tantalum.density"]], "setdefaultmassfracs() (armi.materials.tantalum.tantalum method)": [[118, "armi.materials.tantalum.Tantalum.setDefaultMassFracs"]], "armi.materials.tests": [[119, "module-armi.materials.tests"]], "materials__init__tests (class in armi.materials.tests.test__init__)": [[120, "armi.materials.tests.test__init__.Materials__init__Tests"]], "armi.materials.tests.test__init__": [[120, "module-armi.materials.tests.test__init__"]], "bettersubclasscheck() (in module armi.materials.tests.test__init__)": [[120, "armi.materials.tests.test__init__.betterSubClassCheck"]], "test_canaccessclassesfrompackage() (armi.materials.tests.test__init__.materials__init__tests method)": [[120, "armi.materials.tests.test__init__.Materials__init__Tests.test_canAccessClassesFromPackage"]], "test_packageclassesequalmoduleclasses() (armi.materials.tests.test__init__.materials__init__tests method)": [[120, "armi.materials.tests.test__init__.Materials__init__Tests.test_packageClassesEqualModuleClasses"]], "test_air (class in armi.materials.tests.test_air)": [[121, "armi.materials.tests.test_air.Test_Air"]], "armi.materials.tests.test_air": [[121, "module-armi.materials.tests.test_air"]], "test_heatcapacity() (armi.materials.tests.test_air.test_air method)": [[121, "armi.materials.tests.test_air.Test_Air.test_heatCapacity"]], "test_massfrac() (armi.materials.tests.test_air.test_air method)": [[121, "armi.materials.tests.test_air.Test_Air.test_massFrac"]], "test_pseudodensity() (armi.materials.tests.test_air.test_air method)": [[121, "armi.materials.tests.test_air.Test_Air.test_pseudoDensity"]], "test_thermalconductivity() (armi.materials.tests.test_air.test_air method)": [[121, "armi.materials.tests.test_air.Test_Air.test_thermalConductivity"]], "test_validranges() (armi.materials.tests.test_air.test_air method)": [[121, "armi.materials.tests.test_air.Test_Air.test_validRanges"]], "b4c_testcase (class in armi.materials.tests.test_b4c)": [[122, "armi.materials.tests.test_b4c.B4C_TestCase"]], "mat_class (armi.materials.tests.test_b4c.b4c_testcase attribute)": [[122, "armi.materials.tests.test_b4c.B4C_TestCase.MAT_CLASS"]], "armi.materials.tests.test_b4c": [[122, "module-armi.materials.tests.test_b4c"]], "test_propertyvalidtemperature() (armi.materials.tests.test_b4c.b4c_testcase method)": [[122, "armi.materials.tests.test_b4c.B4C_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_b4c.b4c_testcase method)": [[122, "armi.materials.tests.test_b4c.B4C_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_be9.test_be9 attribute)": [[123, "armi.materials.tests.test_be9.Test_Be9.MAT_CLASS"]], "test_be9 (class in armi.materials.tests.test_be9)": [[123, "armi.materials.tests.test_be9.Test_Be9"]], "armi.materials.tests.test_be9": [[123, "module-armi.materials.tests.test_be9"]], "test_propertyvalidtemperature() (armi.materials.tests.test_be9.test_be9 method)": [[123, "armi.materials.tests.test_be9.Test_Be9.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_be9.test_be9 method)": [[123, "armi.materials.tests.test_be9.Test_Be9.test_pseudoDensity"]], "graphite_testcase (class in armi.materials.tests.test_graphite)": [[124, "armi.materials.tests.test_graphite.Graphite_TestCase"]], "mat_class (armi.materials.tests.test_graphite.graphite_testcase attribute)": [[124, "armi.materials.tests.test_graphite.Graphite_TestCase.MAT_CLASS"]], "armi.materials.tests.test_graphite": [[124, "module-armi.materials.tests.test_graphite"]], "test_density() (armi.materials.tests.test_graphite.graphite_testcase method)": [[124, "armi.materials.tests.test_graphite.Graphite_TestCase.test_density"]], "test_linearexpansionpercent() (armi.materials.tests.test_graphite.graphite_testcase method)": [[124, "armi.materials.tests.test_graphite.Graphite_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_graphite.graphite_testcase method)": [[124, "armi.materials.tests.test_graphite.Graphite_TestCase.test_propertyValidTemperature"]], "lithium_testcase (class in armi.materials.tests.test_lithium)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase"]], "mat_class (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.MAT_CLASS"]], "armi.materials.tests.test_lithium": [[125, "module-armi.materials.tests.test_lithium"]], "defaultmassfrac (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.defaultMassFrac"]], "test_lithium_material_modifications() (armi.materials.tests.test_lithium.lithium_testcase method)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.test_Lithium_material_modifications"]], "test_boilingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.test_boilingPoint"]], "test_heatcapacity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_lithium.lithium_testcase method)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.test_pseudoDensity"]], "alloy200_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Alloy200_TestCase"]], "cah2_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.CaH2_TestCase"]], "californium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Californium_TestCase"]], "cesium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Cesium_TestCase"]], "copper_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Copper_TestCase"]], "fuelmaterial_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.FuelMaterial_TestCase"]], "hafnium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Hafnium_TestCase"]], "hastelloyn_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase"]], "inconel600_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase"]], "inconel625_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase"]], "inconelx750_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase"]], "inconel_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Inconel_TestCase"]], "leadbismuth_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase"]], "lead_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Lead_TestCase"]], "mat_class (armi.materials.tests.test_materials.alloy200_testcase attribute)": [[126, "armi.materials.tests.test_materials.Alloy200_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cah2_testcase attribute)": [[126, "armi.materials.tests.test_materials.CaH2_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.californium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Californium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cesium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Cesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.copper_testcase attribute)": [[126, "armi.materials.tests.test_materials.Copper_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hafnium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Hafnium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hastelloyn_testcase attribute)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel600_testcase attribute)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel625_testcase attribute)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconelx750_testcase attribute)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.leadbismuth_testcase attribute)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.lead_testcase attribute)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mox_testcase attribute)": [[126, "armi.materials.tests.test_materials.MOX_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesiumoxide_testcase attribute)": [[126, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Magnesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mixture_testcase attribute)": [[126, "armi.materials.tests.test_materials.Mixture_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.molybdenum_testcase attribute)": [[126, "armi.materials.tests.test_materials.Molybdenum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.nacl_testcase attribute)": [[126, "armi.materials.tests.test_materials.NaCl_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.niobiumzirconium_testcase attribute)": [[126, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.potassium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Potassium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.scandiumoxide_testcase attribute)": [[126, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sodium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sulfur_testcase attribute)": [[126, "armi.materials.tests.test_materials.Sulfur_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tzm_testcase attribute)": [[126, "armi.materials.tests.test_materials.TZM_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tantalum_testcase attribute)": [[126, "armi.materials.tests.test_materials.Tantalum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumoxide_testcase attribute)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumuraniummetal_testcase attribute)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thorium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uraniumoxide_testcase attribute)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uranium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Uranium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.void_testcase attribute)": [[126, "armi.materials.tests.test_materials.Void_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.yttriumoxide_testcase attribute)": [[126, "armi.materials.tests.test_materials.YttriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zincoxide_testcase attribute)": [[126, "armi.materials.tests.test_materials.ZincOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zr_testcase attribute)": [[126, "armi.materials.tests.test_materials.Zr_TestCase.MAT_CLASS"]], "mox_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.MOX_TestCase"]], "magnesiumoxide_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase"]], "magnesium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Magnesium_TestCase"]], "materialconstructiontests (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.MaterialConstructionTests"]], "materialfindingtests (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.MaterialFindingTests"]], "mixture_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Mixture_TestCase"]], "molybdenum_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Molybdenum_TestCase"]], "nacl_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.NaCl_TestCase"]], "niobiumzirconium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase"]], "potassium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Potassium_TestCase"]], "scandiumoxide_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.ScandiumOxide_TestCase"]], "sodium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase"]], "sulfur_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Sulfur_TestCase"]], "tzm_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.TZM_TestCase"]], "tantalum_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Tantalum_TestCase"]], "thoriumoxide_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase"]], "thoriumuraniummetal_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase"]], "thorium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase"]], "uraniumoxide_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase"]], "uranium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Uranium_TestCase"]], "void_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Void_TestCase"]], "yttriumoxide_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.YttriumOxide_TestCase"]], "zincoxide_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.ZincOxide_TestCase"]], "zr_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Zr_TestCase"]], "armi.materials.tests.test_materials": [[126, "module-armi.materials.tests.test_materials"]], "baseinput (armi.materials.tests.test_materials.fuelmaterial_testcase attribute)": [[126, "armi.materials.tests.test_materials.FuelMaterial_TestCase.baseInput"]], "loadassembly() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[126, "armi.materials.tests.test_materials.FuelMaterial_TestCase.loadAssembly"]], "test_00_applyinputparams() (armi.materials.tests.test_materials.tzm_testcase method)": [[126, "armi.materials.tests.test_materials.TZM_TestCase.test_00_applyInputParams"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_00_setDefaultMassFracs"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_01_linearExpansionPercent"]], "test_01_pseudodensity() (armi.materials.tests.test_materials.tzm_testcase method)": [[126, "armi.materials.tests.test_materials.TZM_TestCase.test_01_pseudoDensity"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_02_linearExpansion"]], "test_02_linearexpansionpercent() (armi.materials.tests.test_materials.tzm_testcase method)": [[126, "armi.materials.tests.test_materials.TZM_TestCase.test_02_linearExpansionPercent"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_03_pseudoDensity"]], "test_iconel800_linearexpansion() (armi.materials.tests.test_materials.inconel_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel_TestCase.test_Iconel800_linearExpansion"]], "test_adjustmassenrichment() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_adjustMassEnrichment"]], "test_applyinputparams() (armi.materials.tests.test_materials.mox_testcase method)": [[126, "armi.materials.tests.test_materials.MOX_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uranium_testcase method)": [[126, "armi.materials.tests.test_materials.Uranium_TestCase.test_applyInputParams"]], "test_class1class2_class1_wt_frac() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[126, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_class1_wt_frac"]], "test_class1class2_classx_custom_isotopics() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[126, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_classX_custom_isotopics"]], "test_density() (armi.materials.tests.test_materials.mox_testcase method)": [[126, "armi.materials.tests.test_materials.MOX_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.mixture_testcase method)": [[126, "armi.materials.tests.test_materials.Mixture_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.nacl_testcase method)": [[126, "armi.materials.tests.test_materials.NaCl_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.void_testcase method)": [[126, "armi.materials.tests.test_materials.Void_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_density"]], "test_densityneverchanges() (armi.materials.tests.test_materials.copper_testcase method)": [[126, "armi.materials.tests.test_materials.Copper_TestCase.test_densityNeverChanges"]], "test_densitytimesheatcapactiy() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_densityTimesHeatCapactiy"]], "test_duplicate() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_duplicate"]], "test_dynamicvisc() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_dynamicVisc"]], "test_enthalpy() (armi.materials.tests.test_materials.sodium_testcase method)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase.test_enthalpy"]], "test_findmaterial() (armi.materials.tests.test_materials.materialfindingtests method)": [[126, "armi.materials.tests.test_materials.MaterialFindingTests.test_findMaterial"]], "test_getchildren() (armi.materials.tests.test_materials.copper_testcase method)": [[126, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildren"]], "test_getchildrenwithflags() (armi.materials.tests.test_materials.copper_testcase method)": [[126, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildrenWithFlags"]], "test_getcorrosionrate() (armi.materials.tests.test_materials.californium_testcase method)": [[126, "armi.materials.tests.test_materials.Californium_TestCase.test_getCorrosionRate"]], "test_getdensityexpansion3d() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getDensityExpansion3D"]], "test_getmassfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[126, "armi.materials.tests.test_materials.MOX_TestCase.test_getMassFracPuO2"]], "test_getmeltingpoint() (armi.materials.tests.test_materials.mox_testcase method)": [[126, "armi.materials.tests.test_materials.MOX_TestCase.test_getMeltingPoint"]], "test_getmolfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[126, "armi.materials.tests.test_materials.MOX_TestCase.test_getMolFracPuO2"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_getTempChangeForDensityChange"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTempChangeForDensityChange"]], "test_gettemperatureatdensity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTemperatureAtDensity"]], "test_heatcapacity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.lead_testcase method)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_heatCapacity"]], "test_linearexpansion() (armi.materials.tests.test_materials.alloy200_testcase method)": [[126, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.mixture_testcase method)": [[126, "armi.materials.tests.test_materials.Mixture_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thorium_testcase method)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.void_testcase method)": [[126, "armi.materials.tests.test_materials.Void_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.zr_testcase method)": [[126, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansion"]], "test_linearexpansionhotter() (armi.materials.tests.test_materials.alloy200_testcase method)": [[126, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansionHotter"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.copper_testcase method)": [[126, "armi.materials.tests.test_materials.Copper_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zr_testcase method)": [[126, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansionPercent"]], "test_material_initialization() (armi.materials.tests.test_materials.materialconstructiontests method)": [[126, "armi.materials.tests.test_materials.MaterialConstructionTests.test_material_initialization"]], "test_meancoefficientthermalexpansion() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_meanCoefficientThermalExpansion"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thorium_testcase method)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_meltingPoint"]], "test_namespacing() (armi.materials.tests.test_materials.materialfindingtests method)": [[126, "armi.materials.tests.test_materials.MaterialFindingTests.test_namespacing"]], "test_nicklecontent() (armi.materials.tests.test_materials.alloy200_testcase method)": [[126, "armi.materials.tests.test_materials.Alloy200_TestCase.test_nickleContent"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitHeatCapacity"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitThermalConductivity"]], "test_porosities() (armi.materials.tests.test_materials.californium_testcase method)": [[126, "armi.materials.tests.test_materials.Californium_TestCase.test_porosities"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.alloy200_testcase method)": [[126, "armi.materials.tests.test_materials.Alloy200_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cah2_testcase method)": [[126, "armi.materials.tests.test_materials.CaH2_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.californium_testcase method)": [[126, "armi.materials.tests.test_materials.Californium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cesium_testcase method)": [[126, "armi.materials.tests.test_materials.Cesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hafnium_testcase method)": [[126, "armi.materials.tests.test_materials.Hafnium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.lead_testcase method)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesium_testcase method)": [[126, "armi.materials.tests.test_materials.Magnesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.mixture_testcase method)": [[126, "armi.materials.tests.test_materials.Mixture_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[126, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.nacl_testcase method)": [[126, "armi.materials.tests.test_materials.NaCl_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[126, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.potassium_testcase method)": [[126, "armi.materials.tests.test_materials.Potassium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sodium_testcase method)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sulfur_testcase method)": [[126, "armi.materials.tests.test_materials.Sulfur_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tzm_testcase method)": [[126, "armi.materials.tests.test_materials.TZM_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tantalum_testcase method)": [[126, "armi.materials.tests.test_materials.Tantalum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thorium_testcase method)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uranium_testcase method)": [[126, "armi.materials.tests.test_materials.Uranium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.void_testcase method)": [[126, "armi.materials.tests.test_materials.Void_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zr_testcase method)": [[126, "armi.materials.tests.test_materials.Zr_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_materials.cah2_testcase method)": [[126, "armi.materials.tests.test_materials.CaH2_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.californium_testcase method)": [[126, "armi.materials.tests.test_materials.Californium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.cesium_testcase method)": [[126, "armi.materials.tests.test_materials.Cesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.hafnium_testcase method)": [[126, "armi.materials.tests.test_materials.Hafnium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.inconel_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.lead_testcase method)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesium_testcase method)": [[126, "armi.materials.tests.test_materials.Magnesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[126, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[126, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.potassium_testcase method)": [[126, "armi.materials.tests.test_materials.Potassium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sodium_testcase method)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sulfur_testcase method)": [[126, "armi.materials.tests.test_materials.Sulfur_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.tantalum_testcase method)": [[126, "armi.materials.tests.test_materials.Tantalum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thorium_testcase method)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.void_testcase method)": [[126, "armi.materials.tests.test_materials.Void_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.zr_testcase method)": [[126, "armi.materials.tests.test_materials.Zr_TestCase.test_pseudoDensity"]], "test_removenucmassfrac() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_removeNucMassFrac"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.copper_testcase method)": [[126, "armi.materials.tests.test_materials.Copper_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.lead_testcase method)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.mixture_testcase method)": [[126, "armi.materials.tests.test_materials.Mixture_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.sulfur_testcase method)": [[126, "armi.materials.tests.test_materials.Sulfur_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.thorium_testcase method)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.test_setDefaultMassFracs"]], "test_specificvolumeliquid() (armi.materials.tests.test_materials.sodium_testcase method)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase.test_specificVolumeLiquid"]], "test_thermalconductivity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.sodium_testcase method)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thorium_testcase method)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uranium_testcase method)": [[126, "armi.materials.tests.test_materials.Uranium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.zr_testcase method)": [[126, "armi.materials.tests.test_materials.Zr_TestCase.test_thermalConductivity"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.sulfur_testcase method)": [[126, "armi.materials.tests.test_materials.Sulfur_TestCase.test_volumetricExpansion"]], "mat_class (armi.materials.tests.test_sic.test_sic attribute)": [[127, "armi.materials.tests.test_sic.Test_SiC.MAT_CLASS"]], "test_sic (class in armi.materials.tests.test_sic)": [[127, "armi.materials.tests.test_sic.Test_SiC"]], "armi.materials.tests.test_sic": [[127, "module-armi.materials.tests.test_sic"]], "test_heatcapacity() (armi.materials.tests.test_sic.test_sic method)": [[127, "armi.materials.tests.test_sic.Test_SiC.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_sic.test_sic method)": [[127, "armi.materials.tests.test_sic.Test_SiC.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sic.test_sic method)": [[127, "armi.materials.tests.test_sic.Test_SiC.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_sic.test_sic method)": [[127, "armi.materials.tests.test_sic.Test_SiC.test_pseudoDensity"]], "mat_class (armi.materials.tests.test_sulfur.sulfur_testcase attribute)": [[128, "armi.materials.tests.test_sulfur.Sulfur_TestCase.MAT_CLASS"]], "sulfur_testcase (class in armi.materials.tests.test_sulfur)": [[128, "armi.materials.tests.test_sulfur.Sulfur_TestCase"]], "armi.materials.tests.test_sulfur": [[128, "module-armi.materials.tests.test_sulfur"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[128, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_propertyValidTemperature"]], "test_sulfur_density_frac() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[128, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_sulfur_density_frac"]], "mat_class (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase attribute)": [[129, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.MAT_CLASS"]], "thoriumoxide_testcase (class in armi.materials.tests.test_thoriumoxide)": [[129, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumoxide": [[129, "module-armi.materials.tests.test_thoriumOxide"]], "test_linearexpansionpercent() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[129, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[129, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[129, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_uzr.uzr_testcase attribute)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.MAT_CLASS"]], "uzr_testcase (class in armi.materials.tests.test_uzr)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase"]], "armi.materials.tests.test_uzr": [[130, "module-armi.materials.tests.test_uZr"]], "test_td() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_TD"]], "test_cache() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_cache"]], "test_density() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_density"]], "test_densitykgm3() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_densityKgM3"]], "test_duplicate() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_duplicate"]], "test_ispicklable() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_isPicklable"]], "test_propertyvalidtemperature() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_propertyValidTemperature"]], "test_pseudodensitykgm3() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_pseudoDensityKgM3"]], "test_water (class in armi.materials.tests.test_water)": [[131, "armi.materials.tests.test_water.Test_Water"]], "armi.materials.tests.test_water": [[131, "module-armi.materials.tests.test_water"]], "test_massfrac() (armi.materials.tests.test_water.test_water method)": [[131, "armi.materials.tests.test_water.Test_Water.test_massFrac"]], "test_propertyvalidtemperature() (armi.materials.tests.test_water.test_water method)": [[131, "armi.materials.tests.test_water.Test_Water.test_propertyValidTemperature"]], "test_validatenames() (armi.materials.tests.test_water.test_water method)": [[131, "armi.materials.tests.test_water.Test_Water.test_validateNames"]], "test_water_at_boiling() (armi.materials.tests.test_water.test_water method)": [[131, "armi.materials.tests.test_water.Test_Water.test_water_at_boiling"]], "test_water_at_critcalpoint() (armi.materials.tests.test_water.test_water method)": [[131, "armi.materials.tests.test_water.Test_Water.test_water_at_critcalPoint"]], "test_water_at_freezing() (armi.materials.tests.test_water.test_water method)": [[131, "armi.materials.tests.test_water.Test_Water.test_water_at_freezing"]], "thu (class in armi.materials.thu)": [[132, "armi.materials.thU.ThU"]], "applyinputparams() (armi.materials.thu.thu method)": [[132, "armi.materials.thU.ThU.applyInputParams"]], "armi.materials.thu": [[132, "module-armi.materials.thU"]], "enrichednuclide (armi.materials.thu.thu attribute)": [[132, "armi.materials.thU.ThU.enrichedNuclide"]], "getenrichment() (armi.materials.thu.thu method)": [[132, "armi.materials.thU.ThU.getEnrichment"]], "linearexpansion() (armi.materials.thu.thu method)": [[132, "armi.materials.thU.ThU.linearExpansion"]], "meltingpoint() (armi.materials.thu.thu method)": [[132, "armi.materials.thU.ThU.meltingPoint"]], "propertyvalidtemperature (armi.materials.thu.thu attribute)": [[132, "armi.materials.thU.ThU.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thu.thu method)": [[132, "armi.materials.thU.ThU.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thu.thu method)": [[132, "armi.materials.thU.ThU.thermalConductivity"]], "thorium (class in armi.materials.thorium)": [[133, "armi.materials.thorium.Thorium"]], "armi.materials.thorium": [[133, "module-armi.materials.thorium"]], "linearexpansion() (armi.materials.thorium.thorium method)": [[133, "armi.materials.thorium.Thorium.linearExpansion"]], "meltingpoint() (armi.materials.thorium.thorium method)": [[133, "armi.materials.thorium.Thorium.meltingPoint"]], "propertyvalidtemperature (armi.materials.thorium.thorium attribute)": [[133, "armi.materials.thorium.Thorium.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thorium.thorium method)": [[133, "armi.materials.thorium.Thorium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thorium.thorium method)": [[133, "armi.materials.thorium.Thorium.thermalConductivity"]], "tho2 (class in armi.materials.thoriumoxide)": [[134, "armi.materials.thoriumOxide.ThO2"]], "thoriumoxide (class in armi.materials.thoriumoxide)": [[134, "armi.materials.thoriumOxide.ThoriumOxide"]], "applyinputparams() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.applyInputParams"]], "armi.materials.thoriumoxide": [[134, "module-armi.materials.thoriumOxide"]], "density() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.density"]], "linearexpansion() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.meltingPoint"]], "propertyvalidtemperature (armi.materials.thoriumoxide.thoriumoxide attribute)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.thermalConductivity"]], "uthzr (class in armi.materials.uthzr)": [[135, "armi.materials.uThZr.UThZr"]], "applyinputparams() (armi.materials.uthzr.uthzr method)": [[135, "armi.materials.uThZr.UThZr.applyInputParams"]], "armi.materials.uthzr": [[135, "module-armi.materials.uThZr"]], "enrichednuclide (armi.materials.uthzr.uthzr attribute)": [[135, "armi.materials.uThZr.UThZr.enrichedNuclide"]], "pseudodensity() (armi.materials.uthzr.uthzr method)": [[135, "armi.materials.uThZr.UThZr.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.uthzr.uthzr method)": [[135, "armi.materials.uThZr.UThZr.setDefaultMassFracs"]], "uzr (class in armi.materials.uzr)": [[136, "armi.materials.uZr.UZr"]], "applyinputparams() (armi.materials.uzr.uzr method)": [[136, "armi.materials.uZr.UZr.applyInputParams"]], "armi.materials.uzr": [[136, "module-armi.materials.uZr"]], "enrichednuclide (armi.materials.uzr.uzr attribute)": [[136, "armi.materials.uZr.UZr.enrichedNuclide"]], "linearexpansionpercent() (armi.materials.uzr.uzr method)": [[136, "armi.materials.uZr.UZr.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.uzr.uzr method)": [[136, "armi.materials.uZr.UZr.setDefaultMassFracs"]], "ufracdefault (armi.materials.uzr.uzr attribute)": [[136, "armi.materials.uZr.UZr.uFracDefault"]], "zrfracdefault (armi.materials.uzr.uzr attribute)": [[136, "armi.materials.uZr.UZr.zrFracDefault"]], "uranium (class in armi.materials.uranium)": [[137, "armi.materials.uranium.Uranium"]], "applyinputparams() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.applyInputParams"]], "armi.materials.uranium": [[137, "module-armi.materials.uranium"]], "density() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.density"]], "enrichednuclide (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.enrichedNuclide"]], "heatcapacity() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.heatCapacity"]], "linearexpansion() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.linearExpansion"]], "linearexpansionpercent() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.linearExpansionPercent"]], "materialintro (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.materialIntro"]], "meltingpoint() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.meltingPoint"]], "propertyequation (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.propertyEquation"]], "propertynotes (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.propertyNotes"]], "propertyrawdata (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.propertyRawData"]], "propertyunits (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.propertyUnits"]], "propertyvalidtemperature (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.propertyValidTemperature"]], "pseudodensity() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.pseudoDensity"]], "refdens (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.refDens"]], "references (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.references"]], "setdefaultmassfracs() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.thermalConductivity"]], "ea (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[138, "armi.materials.uraniumOxide.HeatCapacityConstants.Ea"]], "heatcapacityconstants (class in armi.materials.uraniumoxide)": [[138, "armi.materials.uraniumOxide.HeatCapacityConstants"]], "reference_temperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.REFERENCE_TEMPERATURE"]], "uo2 (class in armi.materials.uraniumoxide)": [[138, "armi.materials.uraniumOxide.UO2"]], "uraniumoxide (class in armi.materials.uraniumoxide)": [[138, "armi.materials.uraniumOxide.UraniumOxide"]], "applyinputparams() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.applyInputParams"]], "armi.materials.uraniumoxide": [[138, "module-armi.materials.uraniumOxide"]], "c1 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[138, "armi.materials.uraniumOxide.HeatCapacityConstants.c1"]], "c2 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[138, "armi.materials.uraniumOxide.HeatCapacityConstants.c2"]], "c3 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[138, "armi.materials.uraniumOxide.HeatCapacityConstants.c3"]], "density() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.density"]], "enrichednuclide (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.enrichedNuclide"]], "heatcapacity() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.heatCapacity"]], "heatcapacityconstants (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.heatCapacityConstants"]], "linearexpansion() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.meltingPoint"]], "propertyunits (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.propertyUnits"]], "propertyvalidtemperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.propertyValidTemperature"]], "references (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.references"]], "setdefaultmassfracs() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivity"]], "thermalconductivitytable (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTable"]], "thermalconductivitytablek (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTableK"]], "thermalscatteringlaws (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.thermalScatteringLaws"]], "theta (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[138, "armi.materials.uraniumOxide.HeatCapacityConstants.theta"]], "void (class in armi.materials.void)": [[139, "armi.materials.void.Void"]], "armi.materials.void": [[139, "module-armi.materials.void"]], "density() (armi.materials.void.void method)": [[139, "armi.materials.void.Void.density"]], "pseudodensity() (armi.materials.void.void method)": [[139, "armi.materials.void.Void.pseudoDensity"]], "alpha_0 (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.ALPHA_0"]], "density_critical_gpercubiccentimeter (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.DENSITY_CRITICAL_GPERCUBICCENTIMETER"]], "density_critical_kgpercubicmeter (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.DENSITY_CRITICAL_KGPERCUBICMETER"]], "phi_0 (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.PHI_0"]], "saturatedsteam (class in armi.materials.water)": [[140, "armi.materials.water.SaturatedSteam"]], "saturatedwater (class in armi.materials.water)": [[140, "armi.materials.water.SaturatedWater"]], "temperature_critical_k (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.TEMPERATURE_CRITICAL_K"]], "vapor_pressure_critical_mpa (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_MPA"]], "vapor_pressure_critical_pa (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_PA"]], "water (class in armi.materials.water)": [[140, "armi.materials.water.Water"]], "armi.materials.water": [[140, "module-armi.materials.water"]], "auxiliaryquantityspecificenthalpy() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.auxiliaryQuantitySpecificEnthalpy"]], "auxiliaryquantityspecificentropy() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.auxiliaryQuantitySpecificEntropy"]], "d (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.d"]], "enthalpy() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.enthalpy"]], "entropy() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.entropy"]], "pseudodensity() (armi.materials.water.saturatedsteam method)": [[140, "armi.materials.water.SaturatedSteam.pseudoDensity"]], "pseudodensity() (armi.materials.water.saturatedwater method)": [[140, "armi.materials.water.SaturatedWater.pseudoDensity"]], "pseudodensity() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.pseudoDensity"]], "references (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.references"]], "setdefaultmassfracs() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.setDefaultMassFracs"]], "tau() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.tau"]], "thermalscatteringlaws (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.thermalScatteringLaws"]], "theta() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.theta"]], "vaporpressure() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.vaporPressure"]], "vaporpressureprime() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.vaporPressurePrime"]], "y2o3 (class in armi.materials.yttriumoxide)": [[141, "armi.materials.yttriumOxide.Y2O3"]], "armi.materials.yttriumoxide": [[141, "module-armi.materials.yttriumOxide"]], "density() (armi.materials.yttriumoxide.y2o3 method)": [[141, "armi.materials.yttriumOxide.Y2O3.density"]], "linearexpansionpercent() (armi.materials.yttriumoxide.y2o3 method)": [[141, "armi.materials.yttriumOxide.Y2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.yttriumoxide.y2o3 attribute)": [[141, "armi.materials.yttriumOxide.Y2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.yttriumoxide.y2o3 method)": [[141, "armi.materials.yttriumOxide.Y2O3.setDefaultMassFracs"]], "zno (class in armi.materials.zincoxide)": [[142, "armi.materials.zincOxide.ZnO"]], "armi.materials.zincoxide": [[142, "module-armi.materials.zincOxide"]], "density() (armi.materials.zincoxide.zno method)": [[142, "armi.materials.zincOxide.ZnO.density"]], "linearexpansionpercent() (armi.materials.zincoxide.zno method)": [[142, "armi.materials.zincOxide.ZnO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.zincoxide.zno attribute)": [[142, "armi.materials.zincOxide.ZnO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.zincoxide.zno method)": [[142, "armi.materials.zincOxide.ZnO.setDefaultMassFracs"]], "zr (class in armi.materials.zr)": [[143, "armi.materials.zr.Zr"]], "armi.materials.zr": [[143, "module-armi.materials.zr"]], "density() (armi.materials.zr.zr method)": [[143, "armi.materials.zr.Zr.density"]], "linearexpansion() (armi.materials.zr.zr method)": [[143, "armi.materials.zr.Zr.linearExpansion"]], "linearexpansionpercent() (armi.materials.zr.zr method)": [[143, "armi.materials.zr.Zr.linearExpansionPercent"]], "linearexpansiontable (armi.materials.zr.zr attribute)": [[143, "armi.materials.zr.Zr.linearExpansionTable"]], "linearexpansiontablek (armi.materials.zr.zr attribute)": [[143, "armi.materials.zr.Zr.linearExpansionTableK"]], "propertyvalidtemperature (armi.materials.zr.zr attribute)": [[143, "armi.materials.zr.Zr.propertyValidTemperature"]], "reftempk (armi.materials.zr.zr attribute)": [[143, "armi.materials.zr.Zr.refTempK"]], "references (armi.materials.zr.zr attribute)": [[143, "armi.materials.zr.Zr.references"]], "setdefaultmassfracs() (armi.materials.zr.zr method)": [[143, "armi.materials.zr.Zr.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.zr.zr method)": [[143, "armi.materials.zr.Zr.thermalConductivity"]], "armi.meta": [[144, "module-armi.meta"]], "armi.migration": [[145, "module-armi.migration"]], "blueprintsmigration (class in armi.migration.base)": [[146, "armi.migration.base.BlueprintsMigration"]], "databasemigration (class in armi.migration.base)": [[146, "armi.migration.base.DatabaseMigration"]], "migration (class in armi.migration.base)": [[146, "armi.migration.base.Migration"]], "settingsmigration (class in armi.migration.base)": [[146, "armi.migration.base.SettingsMigration"]], "apply() (armi.migration.base.migration method)": [[146, "armi.migration.base.Migration.apply"]], "armi.migration.base": [[146, "module-armi.migration.base"]], "fromversion (armi.migration.base.migration attribute)": [[146, "armi.migration.base.Migration.fromVersion"]], "toversion (armi.migration.base.migration attribute)": [[146, "armi.migration.base.Migration.toVersion"]], "removecentersfromblueprints (class in armi.migration.m0_1_3)": [[147, "armi.migration.m0_1_3.RemoveCentersFromBlueprints"]], "updateelementalnuclides (class in armi.migration.m0_1_3)": [[147, "armi.migration.m0_1_3.UpdateElementalNuclides"]], "armi.migration.m0_1_3": [[147, "module-armi.migration.m0_1_3"]], "deletions (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[147, "armi.migration.m0_1_3.UpdateElementalNuclides.deletions"]], "fromversion (armi.migration.m0_1_3.removecentersfromblueprints attribute)": [[147, "armi.migration.m0_1_3.RemoveCentersFromBlueprints.fromVersion"]], "fromversion (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[147, "armi.migration.m0_1_3.UpdateElementalNuclides.fromVersion"]], "swaps (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[147, "armi.migration.m0_1_3.UpdateElementalNuclides.swaps"]], "toversion (armi.migration.m0_1_3.removecentersfromblueprints attribute)": [[147, "armi.migration.m0_1_3.RemoveCentersFromBlueprints.toVersion"]], "toversion (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[147, "armi.migration.m0_1_3.UpdateElementalNuclides.toVersion"]], "convertalphanumlocationsettingstonum (class in armi.migration.m0_1_6)": [[148, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum"]], "armi.migration.m0_1_6": [[148, "module-armi.migration.m0_1_6"]], "fromversion (armi.migration.m0_1_6.convertalphanumlocationsettingstonum attribute)": [[148, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum.fromVersion"]], "getindicesfromdif3dstylelocatorlabel() (in module armi.migration.m0_1_6)": [[148, "armi.migration.m0_1_6.getIndicesFromDIF3DStyleLocatorLabel"]], "toversion (armi.migration.m0_1_6.convertalphanumlocationsettingstonum attribute)": [[148, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum.toVersion"]], "armi.migration.tests": [[149, "module-armi.migration.tests"]], "testmigration (class in armi.migration.tests.test_m0_1_6)": [[150, "armi.migration.tests.test_m0_1_6.TestMigration"]], "armi.migration.tests.test_m0_1_6": [[150, "module-armi.migration.tests.test_m0_1_6"]], "test_locationlabelmigration() (armi.migration.tests.test_m0_1_6.testmigration method)": [[150, "armi.migration.tests.test_m0_1_6.TestMigration.test_locationLabelMigration"]], "testmigrationbases (class in armi.migration.tests.test_migration_base)": [[151, "armi.migration.tests.test_migration_base.TestMigrationBases"]], "testsettingsmigration (class in armi.migration.tests.test_migration_base)": [[151, "armi.migration.tests.test_migration_base.TestSettingsMigration"]], "armi.migration.tests.test_migration_base": [[151, "module-armi.migration.tests.test_migration_base"]], "test_basic_validation() (armi.migration.tests.test_migration_base.testmigrationbases method)": [[151, "armi.migration.tests.test_migration_base.TestMigrationBases.test_basic_validation"]], "test_loadstreamfrompath() (armi.migration.tests.test_migration_base.testsettingsmigration method)": [[151, "armi.migration.tests.test_migration_base.TestSettingsMigration.test_loadStreamFromPath"]], "distributestateaction (class in armi.mpiactions)": [[152, "armi.mpiActions.DistributeStateAction"]], "distributionaction (class in armi.mpiactions)": [[152, "armi.mpiActions.DistributionAction"]], "mpiaction (class in armi.mpiactions)": [[152, "armi.mpiActions.MpiAction"]], "mpiactionerror": [[152, "armi.mpiActions.MpiActionError"]], "armi.mpiactions": [[152, "module-armi.mpiActions"]], "broadcast() (armi.mpiactions.mpiaction method)": [[152, "armi.mpiActions.MpiAction.broadcast"]], "gather() (armi.mpiactions.mpiaction method)": [[152, "armi.mpiActions.MpiAction.gather"]], "invoke() (armi.mpiactions.mpiaction method)": [[152, "armi.mpiActions.MpiAction.invoke"]], "invokeasmaster() (armi.mpiactions.mpiaction class method)": [[152, "armi.mpiActions.MpiAction.invokeAsMaster"]], "invokehook() (armi.mpiactions.distributestateaction method)": [[152, "armi.mpiActions.DistributeStateAction.invokeHook"]], "invokehook() (armi.mpiactions.distributionaction method)": [[152, "armi.mpiActions.DistributionAction.invokeHook"]], "invokehook() (armi.mpiactions.mpiaction method)": [[152, "armi.mpiActions.MpiAction.invokeHook"]], "mpiflatten() (armi.mpiactions.mpiaction static method)": [[152, "armi.mpiActions.MpiAction.mpiFlatten"]], "mpiiter() (armi.mpiactions.mpiaction static method)": [[152, "armi.mpiActions.MpiAction.mpiIter"]], "parallel (armi.mpiactions.mpiaction property)": [[152, "armi.mpiActions.MpiAction.parallel"]], "runactions() (in module armi.mpiactions)": [[152, "armi.mpiActions.runActions"]], "runactionsinserial() (in module armi.mpiactions)": [[152, "armi.mpiActions.runActionsInSerial"]], "armi.nucdirectory": [[153, "module-armi.nucDirectory"]], "actinide (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.ACTINIDE"]], "alkaline_earth_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.ALKALINE_EARTH_METAL"]], "alkali_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.ALKALI_METAL"]], "chemicalgroup (class in armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.ChemicalGroup"]], "chemicalphase (class in armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.ChemicalPhase"]], "element (class in armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.Element"]], "gas (armi.nucdirectory.elements.chemicalphase attribute)": [[154, "armi.nucDirectory.elements.ChemicalPhase.GAS"]], "halogen (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.HALOGEN"]], "lanthanide (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.LANTHANIDE"]], "liquid (armi.nucdirectory.elements.chemicalphase attribute)": [[154, "armi.nucDirectory.elements.ChemicalPhase.LIQUID"]], "metalloid (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.METALLOID"]], "noble_gas (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.NOBLE_GAS"]], "nonmetal (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.NONMETAL"]], "post_transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.POST_TRANSITION_METAL"]], "solid (armi.nucdirectory.elements.chemicalphase attribute)": [[154, "armi.nucDirectory.elements.ChemicalPhase.SOLID"]], "transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.TRANSITION_METAL"]], "unknown (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.UNKNOWN"]], "unknown (armi.nucdirectory.elements.chemicalphase attribute)": [[154, "armi.nucDirectory.elements.ChemicalPhase.UNKNOWN"]], "addglobalelement() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.addGlobalElement"]], "append() (armi.nucdirectory.elements.element method)": [[154, "armi.nucDirectory.elements.Element.append"]], "armi.nucdirectory.elements": [[154, "module-armi.nucDirectory.elements"]], "destroyglobalelements() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.destroyGlobalElements"]], "factory() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.factory"]], "getelementz() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.getElementZ"]], "getelementsbychemicalgroup() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.getElementsByChemicalGroup"]], "getelementsbychemicalphase() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.getElementsByChemicalPhase"]], "getname() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.getName"]], "getnaturalisotopics() (armi.nucdirectory.elements.element method)": [[154, "armi.nucDirectory.elements.Element.getNaturalIsotopics"]], "getsymbol() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.getSymbol"]], "isheavymetal() (armi.nucdirectory.elements.element method)": [[154, "armi.nucDirectory.elements.Element.isHeavyMetal"]], "isnaturallyoccurring() (armi.nucdirectory.elements.element method)": [[154, "armi.nucDirectory.elements.Element.isNaturallyOccurring"]], "armi.nucdirectory.nucdir": [[155, "module-armi.nucDirectory.nucDir"]], "getatomicweight() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getAtomicWeight"]], "getelementname() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getElementName"]], "getelementsymbol() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getElementSymbol"]], "getmc2label() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getMc2Label"]], "getnaturalisotopics() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getNaturalIsotopics"]], "getnaturalmassisotopics() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getNaturalMassIsotopics"]], "getnuclide() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getNuclide"]], "getnuclidefromname() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getNuclideFromName"]], "getnuclidenames() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getNuclideNames"]], "getnuclides() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getNuclides"]], "getthresholddisplacementenergy() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getThresholdDisplacementEnergy"]], "isfissile() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.isFissile"]], "isheavymetal() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.isHeavyMetal"]], "decay (armi.nucdirectory.nuclidebases.inuclide attribute)": [[156, "armi.nucDirectory.nuclideBases.INuclide.DECAY"]], "dummynuclidebase (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.DummyNuclideBase"]], "imcnpnuclide (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.IMcnpNuclide"]], "inuclide (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.INuclide"]], "lumpnuclidebase (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.LumpNuclideBase"]], "naturalnuclidebase (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase"]], "nuclidebase (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase"]], "nuclideinterface (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface"]], "nuclidewrapper (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper"]], "spontaneous_fission (armi.nucdirectory.nuclidebases.inuclide attribute)": [[156, "armi.nucDirectory.nuclideBases.INuclide.SPONTANEOUS_FISSION"]], "transmutation (armi.nucdirectory.nuclidebases.inuclide attribute)": [[156, "armi.nucDirectory.nuclideBases.INuclide.TRANSMUTATION"]], "addglobalnuclide() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.addGlobalNuclide"]], "addnuclidebases() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.addNuclideBases"]], "armi.nucdirectory.nuclidebases": [[156, "module-armi.nucDirectory.nuclideBases"]], "changelabel() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.changeLabel"]], "destroyglobalnuclides() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.destroyGlobalNuclides"]], "factory() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.factory"]], "fissile (armi.nucdirectory.nuclidebases.inuclide attribute)": [[156, "armi.nucDirectory.nuclideBases.INuclide.fissile"]], "fromname() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.fromName"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[156, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getAAAZZZSId"]], "getdatabasename() (armi.nucdirectory.nuclidebases.inuclide method)": [[156, "armi.nucDirectory.nuclideBases.INuclide.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDatabaseName"]], "getdecay() (armi.nucdirectory.nuclidebases.inuclide method)": [[156, "armi.nucDirectory.nuclideBases.INuclide.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDecay"]], "getdepletablenuclides() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.getDepletableNuclides"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getEndfMatNum"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getEndfMatNum"]], "getisotopics() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.getIsotopics"]], "getmcc2id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc2Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc3Id"]], "getmcc3idendfbvii0() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc3IdEndfbVII0"]], "getmcc3idendfbvii0() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc3IdEndfbVII0"]], "getmcc3idendfbvii0() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc3IdEndfbVII0"]], "getmcc3idendfbvii0() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc3IdEndfbVII0"]], "getmcc3idendfbvii0() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc3IdEndfbVII0"]], "getmcc3idendfbvii0() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc3IdEndfbVII0"]], "getmcc3idendfbvii1() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc3IdEndfbVII1"]], "getmcc3idendfbvii1() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc3IdEndfbVII1"]], "getmcc3idendfbvii1() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc3IdEndfbVII1"]], "getmcc3idendfbvii1() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc3IdEndfbVII1"]], "getmcc3idendfbvii1() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc3IdEndfbVII1"]], "getmcc3idendfbvii1() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc3IdEndfbVII1"]], "getmcnpid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[156, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getMcnpId"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.inuclide method)": [[156, "armi.nucDirectory.nuclideBases.INuclide.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.getNaturalIsotopics"]], "getserpentid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getSerpentId"]], "imposeburnchain() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.imposeBurnChain"]], "initreachableactivenuclidesthroughburnchain() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.initReachableActiveNuclidesThroughBurnChain"]], "isfissile() (armi.nucdirectory.nuclidebases.inuclide method)": [[156, "armi.nucDirectory.nuclideBases.INuclide.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.isFissile"]], "isheavymetal() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.DummyNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.inuclide method)": [[156, "armi.nucDirectory.nuclideBases.INuclide.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.LumpNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.isHeavyMetal"]], "ismonoisotopicelement() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.isMonoIsotopicElement"]], "isotopes() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.isotopes"]], "name (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.name"]], "readmccnuclidedata() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.readMCCNuclideData"]], "single() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.single"]], "updatenuclidebasesforspecialcases() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.updateNuclideBasesForSpecialCases"]], "weight (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.weight"]], "where() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.where"]], "armi.nucdirectory.tests": [[157, "module-armi.nucDirectory.tests"]], "testelement (class in armi.nucdirectory.tests.test_elements)": [[158, "armi.nucDirectory.tests.test_elements.TestElement"]], "armi.nucdirectory.tests.test_elements": [[158, "module-armi.nucDirectory.tests.test_elements"]], "test_abundancesaddtoone() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_abundancesAddToOne"]], "test_element_addexistingelementfails() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addExistingElementFails"]], "test_element_addedelementappearsinelementlist() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addedElementAppearsInElementList"]], "test_element_elementbynamereturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByNameReturnsElement"]], "test_element_elementbysymbolreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementBySymbolReturnsElement"]], "test_element_elementbyzreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByZReturnsElement"]], "test_element_getnatrualisotpicsonlyretrievesabundacegt0() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"]], "test_element_isnaturallyoccurring() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_isNaturallyOccurring"]], "test_elements_elementbulkproperties() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_elements_elementBulkProperties"]], "test_isheavymetal() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_isHeavyMetal"]], "testnucdirectory (class in armi.nucdirectory.tests.test_nucdirectory)": [[159, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory"]], "armi.nucdirectory.tests.test_nucdirectory": [[159, "module-armi.nucDirectory.tests.test_nucDirectory"]], "test_getdisplacementenergy() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[159, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_getDisplacementEnergy"]], "test_nucdir_getnameforolddashednames() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[159, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNameForOldDashedNames"]], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclide() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[159, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"]], "test_nucdir_getnuclidesfromforbadname() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[159, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclidesFromForBadName"]], "testaaazzzsid (class in armi.nucdirectory.tests.test_nuclidebases)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId"]], "testnuclide (class in armi.nucdirectory.tests.test_nuclidebases)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide"]], "armi.nucdirectory.tests.test_nuclidebases": [[160, "module-armi.nucDirectory.tests.test_nuclideBases"]], "test_aaazzzsnamegenerator() (armi.nucdirectory.tests.test_nuclidebases.testaaazzzsid method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId.test_AAAZZZSNameGenerator"]], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"]], "test_naturalnuclidebase_getnatrualisotpics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclideBase_getNatrualIsotpics"]], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotopes() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"]], "test_nonmc2nuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NonMc2Nuclide"]], "test_curiedefinitionwithra226() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_curieDefinitionWithRa226"]], "test_getdecay() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getDecay"]], "test_getendfmatnum() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getEndfMatNum"]], "test_kryptondecayconstants() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_kryptonDecayConstants"]], "test_loadmcc2data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc2Data"]], "test_loadmcc3endfvii0data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc3EndfVII0Data"]], "test_loadmcc3endfvii1data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc3EndfVII1Data"]], "test_nucbase_allabundancesaddtoone() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBase_AllAbundancesAddToOne"]], "test_nucbases_alldatabasenamesareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllDatabaseNamesAreUnique"]], "test_nucbases_alllabelsareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllLabelsAreUnique"]], "test_nucbases_am242m() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Am242m"]], "test_nucbases_mc2elementals() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Mc2Elementals"]], "test_nucbases_negativezraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_NegativeZRaisesException"]], "test_nucbases_z295raisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Z295RaisesException"]], "test_nucbases_databasenamesstartwith_n() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_databaseNamesStartWith_n"]], "test_nucbases_fromnamebadnameraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_fromNameBadNameRaisesException"]], "test_nucbases_imposeburnchaindecaybulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainDecayBulkStatistics"]], "test_nucbases_imposeburnchaintransmutationbulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainTransmutationBulkStatistics"]], "test_nucbases_imposeburn_nusf() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurn_nuSF"]], "test_nucbases_isheavymetal() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_isHeavyMetal"]], "test_nucbases_labelandnamecollsionsareforsamenuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_labelAndNameCollsionsAreForSameNuclide"]], "test_nucbases_singlefailswithmultiplematches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithMultipleMatches"]], "test_nucbases_singlefailswithnomatches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithNoMatches"]], "test_nucbases_singleisprettyspecific() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleIsPrettySpecific"]], "testthermalscattering (class in armi.nucdirectory.tests.test_thermalscattering)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering"]], "armi.nucdirectory.tests.test_thermalscattering": [[161, "module-armi.nucDirectory.tests.test_thermalScattering"]], "buildblockwithtsl() (in module armi.nucdirectory.tests.test_thermalscattering)": [[161, "armi.nucDirectory.tests.test_thermalScattering.buildBlockWithTSL"]], "getnuclidethermalscatteringdata() (in module armi.nucdirectory.tests.test_thermalscattering)": [[161, "armi.nucDirectory.tests.test_thermalScattering.getNuclideThermalScatteringData"]], "test_acecompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACECompound"]], "test_aceelementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEElementInCompound"]], "test_aceisotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEIsotope"]], "test_endf8compound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Compound"]], "test_endf8elementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8ElementInCompound"]], "test_endf8isotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Isotope"]], "test_failonmultiple() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_failOnMultiple"]], "test_graphiteonreactor() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_graphiteOnReactor"]], "decaymodetests (class in armi.nucdirectory.tests.test_transmutations)": [[162, "armi.nucDirectory.tests.test_transmutations.DecayModeTests"]], "transmutationtests (class in armi.nucdirectory.tests.test_transmutations)": [[162, "armi.nucDirectory.tests.test_transmutations.TransmutationTests"]], "armi.nucdirectory.tests.test_transmutations": [[162, "module-armi.nucDirectory.tests.test_transmutations"]], "randomstring() (in module armi.nucdirectory.tests.test_transmutations)": [[162, "armi.nucDirectory.tests.test_transmutations.randomString"]], "test_decaymode_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[162, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_invalidReactionTypes"]], "test_decaymode_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[162, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_validReactionTypes"]], "test_transmutation_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[162, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_invalidReactionTypes"]], "test_transmutation_productparticle() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[162, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_productParticle"]], "test_transmutation_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[162, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_validReactionTypes"]], "thermalscattering (class in armi.nucdirectory.thermalscattering)": [[163, "armi.nucDirectory.thermalScattering.ThermalScattering"]], "armi.nucdirectory.thermalscattering": [[163, "module-armi.nucDirectory.thermalScattering"]], "factory() (in module armi.nucdirectory.thermalscattering)": [[163, "armi.nucDirectory.thermalScattering.factory"]], "getsubjectnuclidebases() (armi.nucdirectory.thermalscattering.thermalscattering method)": [[163, "armi.nucDirectory.thermalScattering.ThermalScattering.getSubjectNuclideBases"]], "decaymode (class in armi.nucdirectory.transmutations)": [[164, "armi.nucDirectory.transmutations.DecayMode"]], "transmutable (class in armi.nucdirectory.transmutations)": [[164, "armi.nucDirectory.transmutations.Transmutable"]], "transmutation (class in armi.nucdirectory.transmutations)": [[164, "armi.nucDirectory.transmutations.Transmutation"]], "armi.nucdirectory.transmutations": [[164, "module-armi.nucDirectory.transmutations"]], "getpreferredproduct() (armi.nucdirectory.transmutations.transmutable method)": [[164, "armi.nucDirectory.transmutations.Transmutable.getPreferredProduct"]], "armi.nucleardataio": [[165, "module-armi.nuclearDataIO"]], "getexpectedcompxsfilename() (in module armi.nucleardataio)": [[165, "armi.nuclearDataIO.getExpectedCOMPXSFileName"]], "getexpectedgamisofilename() (in module armi.nucleardataio)": [[165, "armi.nuclearDataIO.getExpectedGAMISOFileName"]], "getexpectedisotxsfilename() (in module armi.nucleardataio)": [[165, "armi.nuclearDataIO.getExpectedISOTXSFileName"]], "getexpectedpmatrxfilename() (in module armi.nucleardataio)": [[165, "armi.nuclearDataIO.getExpectedPMATRXFileName"]], "armi.nucleardataio.cccc": [[166, "module-armi.nuclearDataIO.cccc"]], "asciirecordreader (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader"]], "asciirecordwriter (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter"]], "binaryrecordreader (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader"]], "binaryrecordwriter (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter"]], "datacontainer (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.DataContainer"]], "implicit_int (in module armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.IMPLICIT_INT"]], "iorecord (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord"]], "stream (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream"]], "streamwithdatacontainer (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.StreamWithDataContainer"]], "armi.nucleardataio.cccc.cccc": [[167, "module-armi.nuclearDataIO.cccc.cccc"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.close"]], "count (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.count"]], "createrecord() (armi.nucleardataio.cccc.cccc.stream method)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream.createRecord"]], "getblockbandwidth() (in module armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.getBlockBandwidth"]], "maxsize (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.maxsize"]], "open() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.open"]], "readascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream.readAscii"]], "readbinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream.readBinary"]], "readwrite() (armi.nucleardataio.cccc.cccc.stream method)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream.readWrite"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwBool"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDouble"]], "rwdoublematrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDoubleMatrix"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwFloat"]], "rwimplicitlytypedmap() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwImplicitlyTypedMap"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwInt"]], "rwintmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwIntMatrix"]], "rwlist() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwList"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwLong"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwLong"]], "rwmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwMatrix"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwString"]], "writeascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream.writeAscii"]], "writebinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream.writeBinary"]], "compxsregion (class in armi.nucleardataio.cccc.compxs)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion"]], "allocatexs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.allocateXS"]], "armi.nucleardataio.cccc.compxs": [[168, "module-armi.nuclearDataIO.cccc.compxs"]], "compare() (in module armi.nucleardataio.cccc.compxs)": [[168, "armi.nuclearDataIO.cccc.compxs.compare"]], "getxs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.getXS"]], "initmetadata() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.initMetadata"]], "isfissile (armi.nucleardataio.cccc.compxs.compxsregion property)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.isFissile"]], "makescatteringmatrices() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.makeScatteringMatrices"]], "merge() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.merge"]], "dif3ddata (class in armi.nucleardataio.cccc.dif3d)": [[169, "armi.nuclearDataIO.cccc.dif3d.Dif3dData"]], "dif3dstream (class in armi.nucleardataio.cccc.dif3d)": [[169, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream"]], "armi.nucleardataio.cccc.dif3d": [[169, "module-armi.nuclearDataIO.cccc.dif3d"]], "readwrite() (armi.nucleardataio.cccc.dif3d.dif3dstream method)": [[169, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream.readWrite"]], "delayedneutrondata (class in armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.DelayedNeutronData"]], "dlayxs (class in armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs"]], "dlayxsio (class in armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO"]], "g (armi.nucleardataio.cccc.dlayxs.dlayxs property)": [[170, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.G"]], "armi.nucleardataio.cccc.dlayxs": [[170, "module-armi.nuclearDataIO.cccc.dlayxs"]], "compare() (in module armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.compare"]], "generateaveragedelayedneutronconstants() (armi.nucleardataio.cccc.dlayxs.dlayxs method)": [[170, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.generateAverageDelayedNeutronConstants"]], "readascii() (in module armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.readBinary"]], "readwrite() (armi.nucleardataio.cccc.dlayxs.dlayxsio method)": [[170, "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO.readWrite"]], "writeascii() (in module armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.writeBinary"]], "fixsrc (class in armi.nucleardataio.cccc.fixsrc)": [[171, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC"]], "armi.nucleardataio.cccc.fixsrc": [[171, "module-armi.nuclearDataIO.cccc.fixsrc"]], "readbinary() (in module armi.nucleardataio.cccc.fixsrc)": [[171, "armi.nuclearDataIO.cccc.fixsrc.readBinary"]], "readwrite() (armi.nucleardataio.cccc.fixsrc.fixsrc method)": [[171, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC.readWrite"]], "writebinary() (in module armi.nucleardataio.cccc.fixsrc)": [[171, "armi.nuclearDataIO.cccc.fixsrc.writeBinary"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.gamiso)": [[172, "armi.nuclearDataIO.cccc.gamiso.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.gamiso": [[172, "module-armi.nuclearDataIO.cccc.gamiso"]], "compare() (in module armi.nucleardataio.cccc.gamiso)": [[172, "armi.nuclearDataIO.cccc.gamiso.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.gamiso)": [[172, "armi.nuclearDataIO.cccc.gamiso.compareNuclideXS"]], "geodstdata (class in armi.nucleardataio.cccc.geodst)": [[173, "armi.nuclearDataIO.cccc.geodst.GeodstData"]], "geodststream (class in armi.nucleardataio.cccc.geodst)": [[173, "armi.nuclearDataIO.cccc.geodst.GeodstStream"]], "armi.nucleardataio.cccc.geodst": [[173, "module-armi.nuclearDataIO.cccc.geodst"]], "readwrite() (armi.nucleardataio.cccc.geodst.geodststream method)": [[173, "armi.nuclearDataIO.cccc.geodst.GeodstStream.readWrite"]], "isotxsio (class in armi.nucleardataio.cccc.isotxs)": [[174, "armi.nuclearDataIO.cccc.isotxs.IsotxsIO"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.isotxs)": [[174, "armi.nuclearDataIO.cccc.isotxs.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.isotxs": [[174, "module-armi.nuclearDataIO.cccc.isotxs"]], "compare() (in module armi.nucleardataio.cccc.isotxs)": [[174, "armi.nuclearDataIO.cccc.isotxs.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.isotxs)": [[174, "armi.nuclearDataIO.cccc.isotxs.compareNuclideXS"]], "compareset() (in module armi.nucleardataio.cccc.isotxs)": [[174, "armi.nuclearDataIO.cccc.isotxs.compareSet"]], "readwrite() (armi.nucleardataio.cccc.isotxs.isotxsio method)": [[174, "armi.nuclearDataIO.cccc.isotxs.IsotxsIO.readWrite"]], "labelsdata (class in armi.nucleardataio.cccc.labels)": [[175, "armi.nuclearDataIO.cccc.labels.LabelsData"]], "labelsstream (class in armi.nucleardataio.cccc.labels)": [[175, "armi.nuclearDataIO.cccc.labels.LabelsStream"]], "armi.nucleardataio.cccc.labels": [[175, "module-armi.nuclearDataIO.cccc.labels"]], "readwrite() (armi.nucleardataio.cccc.labels.labelsstream method)": [[175, "armi.nuclearDataIO.cccc.labels.LabelsStream.readWrite"]], "nhflux (class in armi.nucleardataio.cccc.nhflux)": [[176, "armi.nuclearDataIO.cccc.nhflux.NHFLUX"]], "nafluxstream (class in armi.nucleardataio.cccc.nhflux)": [[176, "armi.nuclearDataIO.cccc.nhflux.NafluxStream"]], "nafluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[176, "armi.nuclearDataIO.cccc.nhflux.NafluxStreamVariant"]], "nhfluxstream (class in armi.nucleardataio.cccc.nhflux)": [[176, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream"]], "nhfluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[176, "armi.nuclearDataIO.cccc.nhflux.NhfluxStreamVariant"]], "armi.nucleardataio.cccc.nhflux": [[176, "module-armi.nuclearDataIO.cccc.nhflux"]], "fluxmoments (armi.nucleardataio.cccc.nhflux.nhflux property)": [[176, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.fluxMoments"]], "getnhfluxreader() (in module armi.nucleardataio.cccc.nhflux)": [[176, "armi.nuclearDataIO.cccc.nhflux.getNhfluxReader"]], "partialcurrentshex (armi.nucleardataio.cccc.nhflux.nhflux property)": [[176, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex"]], "partialcurrentshex_ext (armi.nucleardataio.cccc.nhflux.nhflux property)": [[176, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex_ext"]], "partialcurrentsz (armi.nucleardataio.cccc.nhflux.nhflux property)": [[176, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsZ"]], "readwrite() (armi.nucleardataio.cccc.nhflux.nhfluxstream method)": [[176, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream.readWrite"]], "pmatrxio (class in armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.pmatrx": [[177, "module-armi.nuclearDataIO.cccc.pmatrx"]], "compare() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.compareNuclideXS"]], "readascii() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.readBinary"]], "readwrite() (armi.nucleardataio.cccc.pmatrx.pmatrxio method)": [[177, "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO.readWrite"]], "writeascii() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.writeBinary"]], "pwdintdata (class in armi.nucleardataio.cccc.pwdint)": [[178, "armi.nuclearDataIO.cccc.pwdint.PwdintData"]], "pwdintstream (class in armi.nucleardataio.cccc.pwdint)": [[178, "armi.nuclearDataIO.cccc.pwdint.PwdintStream"]], "armi.nucleardataio.cccc.pwdint": [[178, "module-armi.nuclearDataIO.cccc.pwdint"]], "readwrite() (armi.nucleardataio.cccc.pwdint.pwdintstream method)": [[178, "armi.nuclearDataIO.cccc.pwdint.PwdintStream.readWrite"]], "atfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[179, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream"]], "rtfluxdata (class in armi.nucleardataio.cccc.rtflux)": [[179, "armi.nuclearDataIO.cccc.rtflux.RtfluxData"]], "rtfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[179, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream"]], "armi.nucleardataio.cccc.rtflux": [[179, "module-armi.nuclearDataIO.cccc.rtflux"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.atfluxstream method)": [[179, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream.getEnergyGroupIndex"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[179, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.getEnergyGroupIndex"]], "getfdfluxreader() (in module armi.nucleardataio.cccc.rtflux)": [[179, "armi.nuclearDataIO.cccc.rtflux.getFDFluxReader"]], "groupfluxes (armi.nucleardataio.cccc.rtflux.rtfluxdata attribute)": [[179, "armi.nuclearDataIO.cccc.rtflux.RtfluxData.groupFluxes"]], "readwrite() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[179, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.readWrite"]], "converged (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[180, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGED"]], "converging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[180, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGING"]], "convergence (class in armi.nucleardataio.cccc.rzflux)": [[180, "armi.nuclearDataIO.cccc.rzflux.Convergence"]], "diverging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[180, "armi.nuclearDataIO.cccc.rzflux.Convergence.DIVERGING"]], "no_iterations (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[180, "armi.nuclearDataIO.cccc.rzflux.Convergence.NO_ITERATIONS"]], "rzfluxdata (class in armi.nucleardataio.cccc.rzflux)": [[180, "armi.nuclearDataIO.cccc.rzflux.RzfluxData"]], "rzfluxstream (class in armi.nucleardataio.cccc.rzflux)": [[180, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream"]], "armi.nucleardataio.cccc.rzflux": [[180, "module-armi.nuclearDataIO.cccc.rzflux"]], "readwrite() (armi.nucleardataio.cccc.rzflux.rzfluxstream method)": [[180, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream.readWrite"]], "armi.nucleardataio.cccc.tests": [[181, "module-armi.nuclearDataIO.cccc.tests"]], "ccccasciirecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccAsciiRecordTests"]], "ccccbinaryrecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests"]], "cccciostreamtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests"]], "armi.nucleardataio.cccc.tests.test_cccc": [[182, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "test_initwithfilemode() (armi.nucleardataio.cccc.tests.test_cccc.cccciostreamtests method)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests.test_initWithFileMode"]], "test_notreadinganentirerecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_notReadingAnEntireRecordRaisesException"]], "test_readingbeyondrecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_readingBeyondRecordRaisesException"]], "test_writeandreadsimplefloatrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleFloatRecord"]], "test_writeandreadsimpleintegerrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleIntegerRecord"]], "test_writeandreadsimplestringrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleStringRecord"]], "testcompxs (class in armi.nucleardataio.cccc.tests.test_compxs)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs"]], "armi.nucleardataio.cccc.tests.test_compxs": [[183, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "asciiwritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.asciiWritePath"]], "binarywritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.binaryWritePath"]], "test_asciirw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_asciiRW"]], "test_binaryrw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_binaryRW"]], "test_getcompxsfilename() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_getCOMPXSFileName"]], "test_librarydata() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_libraryData"]], "test_mergecompxslibraries() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_mergeCompxsLibraries"]], "test_regionprimaryxs() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_regionPrimaryXS"]], "test_totalscattermatrix() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_totalScatterMatrix"]], "testdif3demptyrecords (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords"]], "testdif3dsimplehexz (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz"]], "armi.nucleardataio.cccc.tests.test_dif3d": [[184, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "test__rw2drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw2DRecord"]], "test__rw3drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw3DRecord"]], "test__rw4drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw4DRecord"]], "test__rw5drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw5DRecord"]], "test__rwfile1drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFile1DRecord"]], "test__rwfileid() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFileID"]], "test_empty4and5records() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3demptyrecords method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords.test_empty4and5Records"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test_writeBinary"]], "dlayxstests (class in armi.nucleardataio.cccc.tests.test_dlayxs)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests"]], "armi.nucleardataio.cccc.tests.test_dlayxs": [[185, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "test_endfvii1decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1DecayConstants"]], "test_endfvii1neutronsperfission() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1NeutronsPerFission"]], "test_nudelay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_NuDelay"]], "test_avg() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_avg"]], "test_chi_delay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delay"]], "test_chi_delaysumsto1() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delaySumsTo1"]], "test_compare() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_compare"]], "test_decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_decayConstants"]], "test_nuclides() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_nuclides"]], "test_writebinary_mcc3() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_writeBinary_mcc3"]], "testfixsrc (class in armi.nucleardataio.cccc.tests.test_fixsrc)": [[186, "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc"]], "armi.nucleardataio.cccc.tests.test_fixsrc": [[186, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"]], "test_writereadbinaryloop() (armi.nucleardataio.cccc.tests.test_fixsrc.testfixsrc method)": [[186, "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc.test_writeReadBinaryLoop"]], "testgamiso (class in armi.nucleardataio.cccc.tests.test_gamiso)": [[187, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso"]], "armi.nucleardataio.cccc.tests.test_gamiso": [[187, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "test_adddummynuclidestolibrary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[187, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_addDummyNuclidesToLibrary"]], "test_compare() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[187, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_compare"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[187, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_writeBinary"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_geodst)": [[188, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_geodst": [[188, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[188, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[188, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_writeGeodst"]], "isotxs_merge_tests (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests"]], "testisotxs (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs"]], "armi.nucleardataio.cccc.tests.test_isotxs": [[189, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "test_getgamisofilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getGAMISOFileName"]], "test_getisotxsfilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getISOTXSFileName"]], "test_getnuclide() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getNuclide"]], "test_getscatterweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatterWeights"]], "test_getscatteringweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatteringWeights"]], "test_isotxsdetaileddata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsDetailedData"]], "test_isotxsgeneraldata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsGeneralData"]], "test_mergemccv2filesremovesthefilewidechi() (armi.nucleardataio.cccc.tests.test_isotxs.isotxs_merge_tests method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests.test_mergeMccV2FilesRemovesTheFileWideChi"]], "test_n2nisreactionbased() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_n2nIsReactionBased"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_writeBinary"]], "testlabels (class in armi.nucleardataio.cccc.tests.test_labels)": [[190, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels"]], "armi.nucleardataio.cccc.tests.test_labels": [[190, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "test_readlabelsbinary() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[190, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_readLabelsBinary"]], "test_writelabelsascii() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[190, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_writeLabelsAscii"]], "testnhflux (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux"]], "testnhfluxvariant (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant"]], "armi.nucleardataio.cccc.tests.test_nhflux": [[191, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fc"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fc"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fluxMoments"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fluxMoments"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_write"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_write"]], "test_xypartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_xyPartialCurrents"]], "test_zpartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_zPartialCurrents"]], "testpmatrx (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx"]], "testpmatrxnuclides (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides"]], "testproductionmatrix_fromwritten (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten"]], "testproductionmatrix_fromwrittenascii (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWrittenAscii"]], "armi.nucleardataio.cccc.tests.test_pmatrx": [[192, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "test_getpmatrxfilename() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_getPMATRXFileName"]], "test_nuclidedataisdifferent() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_nuclideDataIsDifferent"]], "test_pmatrxdoesnthavedoseconversionfactors() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxDoesntHaveDoseConversionFactors"]], "test_pmatrxgammaenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxGammaEnergies"]], "test_pmatrxneutronenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNeutronEnergies"]], "test_pmatrxnuclidedataaa() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAA"]], "test_pmatrxnuclidedataab() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAB"]], "test_pmatrxnuclidenames() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNuclideNames"]], "test_writtenisidenticaltooriginal() (armi.nucleardataio.cccc.tests.test_pmatrx.testproductionmatrix_fromwritten method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten.test_writtenIsIdenticalToOriginal"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_pwdint)": [[193, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_pwdint": [[193, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[193, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[193, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_writeGeodst"]], "testrtflux (class in armi.nucleardataio.cccc.tests.test_rtflux)": [[194, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux"]], "armi.nucleardataio.cccc.tests.test_rtflux": [[194, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "test_adjoint() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_adjoint"]], "test_readrtflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_readrtflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_rwAscii"]], "test_writertflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_writertflux"]], "testrzflux (class in armi.nucleardataio.cccc.tests.test_rzflux)": [[195, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux"]], "armi.nucleardataio.cccc.tests.test_rzflux": [[195, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "binaryfilesequal() (in module armi.nucleardataio.cccc.tests.test_rzflux)": [[195, "armi.nuclearDataIO.cccc.tests.test_rzflux.binaryFilesEqual"]], "test_readrzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[195, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_readRzflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[195, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_rwAscii"]], "test_writerzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[195, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_writeRzflux"]], "filemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[196, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata"]], "nuclidemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[196, "armi.nuclearDataIO.nuclearFileMetadata.NuclideMetadata"]], "nuclidexsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[196, "armi.nuclearDataIO.nuclearFileMetadata.NuclideXSMetadata"]], "regionxsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[196, "armi.nuclearDataIO.nuclearFileMetadata.RegionXSMetadata"]], "armi.nucleardataio.nuclearfilemetadata": [[196, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "update() (armi.nucleardataio.nuclearfilemetadata.filemetadata method)": [[196, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata.update"]], "armi.nucleardataio.tests": [[197, "module-armi.nuclearDataIO.tests"]], "mockblock (class in armi.nucleardataio.tests.test_xscollections)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock"]], "mockblueprints (class in armi.nucleardataio.tests.test_xscollections)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlueprints"]], "mockreactor (class in armi.nucleardataio.tests.test_xscollections)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockReactor"]], "testxscollections (class in armi.nucleardataio.tests.test_xscollections)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections"]], "armi.nucleardataio.tests.test_xscollections": [[198, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "getnuclidenumberdensities() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclideNumberDensities"]], "getnuclides() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclides"]], "getvolume() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getVolume"]], "paramcollectiontype (armi.nucleardataio.tests.test_xscollections.mockblock attribute)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.paramCollectionType"]], "r (armi.nucleardataio.tests.test_xscollections.mockblock property)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.r"]], "setnumberdensity() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.setNumberDensity"]], "test_collapsecrosssection() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_collapseCrossSection"]], "test_createmacrosfrommicros() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_createMacrosFromMicros"]], "test_generatetotalscatteringmatrix() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrix"]], "test_generatetotalscatteringmatrixwithmissingdata() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrixWithMissingData"]], "test_plotnucxs() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_plotNucXs"]], "abstracttestxslibrarymerging (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging"]], "combined_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests"]], "gamiso_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests"]], "isotxs_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests"]], "pmatrx_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests"]], "tempfilemixin (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin"]], "testgetisotxsfilesinworkingdirectory (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory"]], "testxslibrary (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary"]], "armi.nucleardataio.tests.test_xslibraries": [[199, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "assert_contains_only() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.assert_contains_only"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getErrorType"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibAAPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibAA_ABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibABPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibLumpedPath"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getReadFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getWriteFunc"]], "testfilename (armi.nucleardataio.tests.test_xslibraries.tempfilemixin property)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin.testFileName"]], "test_canpickleandunpicklegamiso() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleGAMISO"]], "test_canpickleandunpickleisotxs() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleISOTXS"]], "test_canpickleandunpicklepmatrx() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpicklePMATRX"]], "test_canremoveisotopes() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_canRemoveIsotopes"]], "test_canremoveisotopes() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.test_canRemoveIsotopes"]], "test_canwritegamisofromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteGamisoFromCombinedXSLibrary"]], "test_canwriteisotxsfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteIsotxsFromCombinedXSLibrary"]], "test_canwritepmatrxfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWritePmatrxFromCombinedXSLibrary"]], "test_cannotmergexslibwithsamenuclidenames() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_cannotMergeXSLibWithSameNuclideNames"]], "test_cannotmergexslibswithdifferentgammagroupstructures() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "test_cannotmergexslibxwithdifferentgroupstructure() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_cannotMergeXSLibxWithDifferentGroupStructure"]], "test_comparedifferentcomponentsofanxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareDifferentComponentsOfAnXSLibrary"]], "test_compareworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareWorks"]], "test_gamisolibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_gamisoLibraryAttributes"]], "test_getisotxsfileswithlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithLibrarySuffix"]], "test_getisotxsfileswithoutlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithoutLibrarySuffix"]], "test_isotxslibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_isotxsLibraryAttributes"]], "test_mergeallxslibfiles() (armi.nucleardataio.tests.test_xslibraries.combined_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests.test_mergeAllXSLibFiles"]], "test_mergeemptyxslibwithotheressentiallyclonestheother() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_mergeEmptyXSLibWithOtherEssentiallyClonesTheOther"]], "test_mergefailswithnonisotxsfiles() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeFailsWithNonIsotxsFiles"]], "test_mergetwoxslibfiles() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_mergeTwoXSLibFiles"]], "test_mergexslibrarieswithdifferentdataworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeXSLibrariesWithDifferentDataWorks"]], "test_pmatrxlibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_pmatrxLibraryAttributes"]], "nuclidetests (class in armi.nucleardataio.tests.test_xsnuclides)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests"]], "armi.nucleardataio.tests.test_xsnuclides": [[200, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "test_getmicroxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getMicroXS"]], "test_getxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getXS"]], "test_nuclide_2dxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_2dXsArrangementIsCorrect"]], "test_nuclide_createfromlabelfailsonbadname() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_createFromLabelFailsOnBadName"]], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"]], "test_nuclide_isoaadetails() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_isoaaDetails"]], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclide() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"]], "test_nuclide_newlabelsdontcausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_newLabelsDontCauseWarnings"]], "test_nuclide_nuclidebasemethodsshouldnotfail() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_nuclideBaseMethodsShouldNotFail"]], "test_nuclide_oldlabelscausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_oldLabelsCauseWarnings"]], "test_nuclide_scatterxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_scatterXsArrangementIsCorrect"]], "macroscopiccrosssectioncreator (class in armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator"]], "xscollection (class in armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection"]], "armi.nucleardataio.xscollections": [[201, "module-armi.nuclearDataIO.xsCollections"]], "clear() (armi.nucleardataio.xscollections.xscollection method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.clear"]], "collapsecrosssection() (armi.nucleardataio.xscollections.xscollection static method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.collapseCrossSection"]], "compare() (armi.nucleardataio.xscollections.xscollection method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.compare"]], "computeblockaveragechi() (in module armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.computeBlockAverageChi"]], "computecaptureenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.computeCaptureEnergyGenerationConstants"]], "computefissionenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.computeFissionEnergyGenerationConstants"]], "computegammaenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.computeGammaEnergyDepositionConstants"]], "computemacroscopicgroupconstants() (in module armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.computeMacroscopicGroupConstants"]], "computeneutronenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.computeNeutronEnergyDepositionConstants"]], "createmacrosfrommicros() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[201, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosFromMicros"]], "createmacrosonblocklist() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[201, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosOnBlocklist"]], "get() (armi.nucleardataio.xscollections.xscollection method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.get"]], "getabsorptionxs() (armi.nucleardataio.xscollections.xscollection method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.getAbsorptionXS"]], "getdefaultxs() (armi.nucleardataio.xscollections.xscollection class method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.getDefaultXs"]], "gettotalscattermatrix() (armi.nucleardataio.xscollections.xscollection method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.getTotalScatterMatrix"]], "merge() (armi.nucleardataio.xscollections.xscollection method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.merge"]], "compxslibrary (class in armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.CompxsLibrary"]], "isotxslibrary (class in armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary"]], "armi.nucleardataio.xslibraries": [[202, "module-armi.nuclearDataIO.xsLibraries"]], "compare() (in module armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.compare"]], "comparelibraryneutronenergies() (in module armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.compareLibraryNeutronEnergies"]], "comparexslibraryattribute() (in module armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.compareXSLibraryAttribute"]], "gammadoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaDoseConversionFactors"]], "gammaenergyupperbounds (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaEnergyUpperBounds"]], "get() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.get"]], "getisotxslibrariestomerge() (in module armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.getISOTXSLibrariesToMerge"]], "getnuclide() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclide"]], "getnuclides() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclides"]], "getscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getScatterWeights"]], "getsuffixfromnuclidelabel() (in module armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.getSuffixFromNuclideLabel"]], "merge() (armi.nucleardataio.xslibraries.compxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.merge"]], "merge() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.merge"]], "mergexslibrariesinworkingdirectory() (in module armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.mergeXSLibrariesInWorkingDirectory"]], "neutrondoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.neutronDoseConversionFactors"]], "nuclidelabels (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclideLabels"]], "nuclides (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclides"]], "numgroups (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroups"]], "numgroupsgamma (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroupsGamma"]], "purgefissionproducts() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.purgeFissionProducts"]], "regionlabels (armi.nucleardataio.xslibraries.compxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regionLabels"]], "regions (armi.nucleardataio.xslibraries.compxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regions"]], "resetscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.resetScatterWeights"]], "xsids (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.xsIDs"]], "xsnuclide (class in armi.nucleardataio.xsnuclides)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide"]], "armi.nucleardataio.xsnuclides": [[203, "module-armi.nuclearDataIO.xsNuclides"]], "buildnormalizedscattercolumns() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.buildNormalizedScatterColumns"]], "decays (armi.nucleardataio.xsnuclides.xsnuclide property)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.decays"]], "getmicroxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.getMicroXS"]], "getxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.getXS"]], "merge() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.merge"]], "plotcomparescattermatrix() (in module armi.nucleardataio.xsnuclides)": [[203, "armi.nuclearDataIO.xsNuclides.plotCompareScatterMatrix"]], "plotscattermatrix() (in module armi.nucleardataio.xsnuclides)": [[203, "armi.nuclearDataIO.xsNuclides.plotScatterMatrix"]], "trans (armi.nucleardataio.xsnuclides.xsnuclide property)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.trans"]], "updatebasenuclide() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.updateBaseNuclide"]], "armi.operators": [[204, "module-armi.operators"]], "factory() (in module armi.operators)": [[204, "armi.operators.factory"]], "getoperatorclassfromsettings() (in module armi.operators)": [[204, "armi.operators.getOperatorClassFromSettings"]], "operator (class in armi.operators.operator)": [[205, "armi.operators.operator.Operator"]], "addinterface() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.addInterface"]], "armi.operators.operator": [[205, "module-armi.operators.operator"]], "ateol (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.atEOL"]], "availabilityfactors (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.availabilityFactors"]], "burnsteps (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.burnSteps"]], "couplingisactive() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.couplingIsActive"]], "createinterfaces() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.createInterfaces"]], "cyclelengths (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.cycleLengths"]], "cyclenames (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.cycleNames"]], "detach() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.detach"]], "getactiveinterfaces() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.getActiveInterfaces"]], "getinterface() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.getInterface"]], "getinterfaces() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.getInterfaces"]], "initializeinterfaces() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.initializeInterfaces"]], "inspector (armi.operators.operator.operator attribute)": [[205, "armi.operators.operator.Operator.inspector"]], "interactallboc() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllBOC"]], "interactallbol() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllBOL"]], "interactallcoupled() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllCoupled"]], "interactalleoc() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllEOC"]], "interactalleol() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllEOL"]], "interactallerror() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllError"]], "interactalleverynode() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllEveryNode"]], "interactallinit() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllInit"]], "interfaceisactive() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interfaceIsActive"]], "loadstate() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.loadState"]], "maxburnsteps (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.maxBurnSteps"]], "operate() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.operate"]], "powerfractions (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.powerFractions"]], "printinterfacesummary() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.printInterfaceSummary"]], "reattach() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.reattach"]], "removeallinterfaces() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.removeAllInterfaces"]], "removeinterface() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.removeInterface"]], "setstatetodefault() (armi.operators.operator.operator static method)": [[205, "armi.operators.operator.Operator.setStateToDefault"]], "snapshotrequest() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.snapshotRequest"]], "steplengths (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.stepLengths"]], "operatormpi (class in armi.operators.operatormpi)": [[206, "armi.operators.operatorMPI.OperatorMPI"]], "armi.operators.operatormpi": [[206, "module-armi.operators.operatorMPI"]], "collapseallstderrs() (armi.operators.operatormpi.operatormpi method)": [[206, "armi.operators.operatorMPI.OperatorMPI.collapseAllStderrs"]], "operate() (armi.operators.operatormpi.operatormpi method)": [[206, "armi.operators.operatorMPI.OperatorMPI.operate"]], "workeroperate() (armi.operators.operatormpi.operatormpi method)": [[206, "armi.operators.operatorMPI.OperatorMPI.workerOperate"]], "workerquit() (armi.operators.operatormpi.operatormpi static method)": [[206, "armi.operators.operatorMPI.OperatorMPI.workerQuit"]], "equilibrium (armi.operators.runtypes.runtypes attribute)": [[207, "armi.operators.runTypes.RunTypes.EQUILIBRIUM"]], "runtypes (class in armi.operators.runtypes)": [[207, "armi.operators.runTypes.RunTypes"]], "snapshots (armi.operators.runtypes.runtypes attribute)": [[207, "armi.operators.runTypes.RunTypes.SNAPSHOTS"]], "standard (armi.operators.runtypes.runtypes attribute)": [[207, "armi.operators.runTypes.RunTypes.STANDARD"]], "armi.operators.runtypes": [[207, "module-armi.operators.runTypes"]], "armi.operators.settingsvalidation": [[208, "module-armi.operators.settingsValidation"]], "operatorsnapshots (class in armi.operators.snapshots)": [[209, "armi.operators.snapshots.OperatorSnapshots"]], "armi.operators.snapshots": [[209, "module-armi.operators.snapshots"]], "ateol (armi.operators.snapshots.operatorsnapshots property)": [[209, "armi.operators.snapshots.OperatorSnapshots.atEOL"]], "createinterfaces() (armi.operators.snapshots.operatorsnapshots method)": [[209, "armi.operators.snapshots.OperatorSnapshots.createInterfaces"]], "setstatetodefault() (armi.operators.snapshots.operatorsnapshots static method)": [[209, "armi.operators.snapshots.OperatorSnapshots.setStateToDefault"]], "armi.operators.tests": [[210, "module-armi.operators.tests"]], "testoperatorsnapshots (class in armi.operators.tests.test_operatorsnapshots)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots"]], "testoperatorsnapshotssettings (class in armi.operators.tests.test_operatorsnapshots)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorsnapshots": [[211, "module-armi.operators.tests.test_operatorSnapshots"]], "test_ateol() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_atEOL"]], "test_createinterfaces() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfaces"]], "test_createinterfacesdisabled() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfacesDisabled"]], "test_getoperatorclassfromsettings() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshotssettings method)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings.test_getOperatorClassFromSettings"]], "test_mainoperate() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_mainOperate"]], "test_setstatetodefault() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_setStateToDefault"]], "cyclessettingstests (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests"]], "interfacea (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.InterfaceA"]], "interfaceb (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.InterfaceB"]], "interfacec (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.InterfaceC"]], "operatortests (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.OperatorTests"]], "testcreateoperator (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.TestCreateOperator"]], "testinterfaceandeventheaders (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders"]], "testtightcoupling (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.TestTightCoupling"]], "armi.operators.tests.test_operators": [[212, "module-armi.operators.tests.test_operators"]], "availabilityfactorssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.availabilityFactorsSolution"]], "burnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.burnStepsSolution"]], "cyclelengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleLengthsSolution"]], "cyclenamessolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleNamesSolution"]], "dbwriteforcoupling() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.dbWriteForCoupling"]], "detailedcyclessettings (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.detailedCyclesSettings"]], "function (armi.operators.tests.test_operators.interfacea attribute)": [[212, "armi.operators.tests.test_operators.InterfaceA.function"]], "function (armi.operators.tests.test_operators.interfaceb attribute)": [[212, "armi.operators.tests.test_operators.InterfaceB.function"]], "function (armi.operators.tests.test_operators.interfacec attribute)": [[212, "armi.operators.tests.test_operators.InterfaceC.function"]], "maxburnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.maxBurnStepsSolution"]], "name (armi.operators.tests.test_operators.interfacea attribute)": [[212, "armi.operators.tests.test_operators.InterfaceA.name"]], "name (armi.operators.tests.test_operators.interfaceb attribute)": [[212, "armi.operators.tests.test_operators.InterfaceB.name"]], "name (armi.operators.tests.test_operators.interfacec attribute)": [[212, "armi.operators.tests.test_operators.InterfaceC.name"]], "powerfractionssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.powerFractionsSolution"]], "steplengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.stepLengthsSolution"]], "test_addinterfacesubclasscollision() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_addInterfaceSubclassCollision"]], "test_computetightcouplingconvergence() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_computeTightCouplingConvergence"]], "test_couplingisactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_couplingIsActive"]], "test_createoperator() (armi.operators.tests.test_operators.testcreateoperator method)": [[212, "armi.operators.tests.test_operators.TestCreateOperator.test_createOperator"]], "test_expandcycleandtimenodeargs_coupled() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[212, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Coupled"]], "test_expandcycleandtimenodeargs_cycle() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[212, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Cycle"]], "test_expandcycleandtimenodeargs_empty() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[212, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Empty"]], "test_expandcycleandtimenodeargs_everynode() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[212, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_EveryNode"]], "test_getactiveinterfaces() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_getActiveInterfaces"]], "test_getavailabilityfactors() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getBurnSteps"]], "test_getcyclelengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleNames"]], "test_getmaxburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getpowerfractions() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getPowerFractions"]], "test_getsteplengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getStepLengths"]], "test_getsteplengths() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_getStepLengths"]], "test_interfaceisactive() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_interfaceIsActive"]], "test_loadstateerror() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_loadStateError"]], "test_operatordata() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_operatorData"]], "test_orderedinterfaces() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_orderedInterfaces"]], "test_performtightcoupling_inactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_Inactive"]], "test_performtightcoupling_nowritedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_NoWriteDB"]], "test_performtightcoupling_writedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_WriteDB"]], "test_performtightcoupling_notconverged() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_notConverged"]], "test_performtightcoupling_skip() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_skip"]], "test_setstatetodefault() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_setStateToDefault"]], "test_snapshotrequest() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_snapshotRequest"]], "armi.physics": [[213, "module-armi.physics"]], "dpa_cross_sections (in module armi.physics.constants)": [[214, "armi.physics.constants.DPA_CROSS_SECTIONS"]], "armi.physics.constants": [[214, "module-armi.physics.constants"]], "defaultexecuter (class in armi.physics.executers)": [[215, "armi.physics.executers.DefaultExecuter"]], "executer (class in armi.physics.executers)": [[215, "armi.physics.executers.Executer"]], "executionoptions (class in armi.physics.executers)": [[215, "armi.physics.executers.ExecutionOptions"]], "armi.physics.executers": [[215, "module-armi.physics.executers"]], "describe() (armi.physics.executers.executionoptions method)": [[215, "armi.physics.executers.ExecutionOptions.describe"]], "fromreactor() (armi.physics.executers.executionoptions method)": [[215, "armi.physics.executers.ExecutionOptions.fromReactor"]], "fromusersettings() (armi.physics.executers.executionoptions method)": [[215, "armi.physics.executers.ExecutionOptions.fromUserSettings"]], "resolvederivedoptions() (armi.physics.executers.executionoptions method)": [[215, "armi.physics.executers.ExecutionOptions.resolveDerivedOptions"]], "run() (armi.physics.executers.defaultexecuter method)": [[215, "armi.physics.executers.DefaultExecuter.run"]], "run() (armi.physics.executers.executer method)": [[215, "armi.physics.executers.Executer.run"]], "setrundirfromcasetitle() (armi.physics.executers.executionoptions method)": [[215, "armi.physics.executers.ExecutionOptions.setRunDirFromCaseTitle"]], "writeinput() (armi.physics.executers.defaultexecuter method)": [[215, "armi.physics.executers.DefaultExecuter.writeInput"]], "fuelhandlerplugin (class in armi.physics.fuelcycle)": [[216, "armi.physics.fuelCycle.FuelHandlerPlugin"]], "armi.physics.fuelcycle": [[216, "module-armi.physics.fuelCycle"]], "definesettings() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[216, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[216, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[216, "armi.physics.fuelCycle.FuelHandlerPlugin.exposeInterfaces"]], "armi.physics.fuelcycle.assemblyrotationalgorithms": [[217, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "bureducingassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[217, "armi.physics.fuelCycle.assemblyRotationAlgorithms.buReducingAssemblyRotation"]], "simpleassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[217, "armi.physics.fuelCycle.assemblyRotationAlgorithms.simpleAssemblyRotation"]], "armi.physics.fuelcycle.fuelhandlerfactory": [[218, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "fuelhandlerfactory() (in module armi.physics.fuelcycle.fuelhandlerfactory)": [[218, "armi.physics.fuelCycle.fuelHandlerFactory.fuelHandlerFactory"]], "fuelhandlerinterface (class in armi.physics.fuelcycle.fuelhandlerinterface)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface"]], "armi.physics.fuelcycle.fuelhandlerinterface": [[219, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "interactboc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactBOC"]], "interacteoc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOC"]], "interacteol() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOL"]], "makeshufflereport() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.makeShuffleReport"]], "managefuel() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.manageFuel"]], "name (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface attribute)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.name"]], "specifyinputs() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface static method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.specifyInputs"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.workerOperate"]], "fuelhandler (class in armi.physics.fuelcycle.fuelhandlers)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler"]], "armi.physics.fuelcycle.fuelhandlers": [[220, "module-armi.physics.fuelCycle.fuelHandlers"]], "chooseswaps() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.chooseSwaps"]], "cs (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cs"]], "cycle (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cycle"]], "dischargeswap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.dischargeSwap"]], "dorepeatshuffle() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.doRepeatShuffle"]], "findassembly() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.findAssembly"]], "getfactorlist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.getFactorList"]], "isassemblyinazone() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.isAssemblyInAZone"]], "makeshufflearrows() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.makeShuffleArrows"]], "outage() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.outage"]], "prepcore() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepCore"]], "prepshufflemap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepShuffleMap"]], "processmovelist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.processMoveList"]], "r (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.r"]], "readmoves() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.readMoves"]], "repeatshufflepattern() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.repeatShufflePattern"]], "swapassemblies() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapAssemblies"]], "swapcascade() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapCascade"]], "trackchain() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.trackChain"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.workerOperate"]], "armi.physics.fuelcycle.hexassemblyfuelmgmtutils": [[221, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "buildconvergentringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[221, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildConvergentRingSchedule"]], "buildringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[221, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildRingSchedule"]], "getoptimalassemblyorientation() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[221, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.getOptimalAssemblyOrientation"]], "armi.physics.fuelcycle.settings": [[222, "module-armi.physics.fuelCycle.settings"]], "getfuelcyclesettingvalidators() (in module armi.physics.fuelcycle.settings)": [[222, "armi.physics.fuelCycle.settings.getFuelCycleSettingValidators"]], "getfuelcyclesettings() (in module armi.physics.fuelcycle.settings)": [[222, "armi.physics.fuelCycle.settings.getFuelCycleSettings"]], "armi.physics.fuelcycle.tests": [[223, "module-armi.physics.fuelCycle.tests"]], "mockfuelhandler (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.MockFuelHandler"]], "n_pins (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper attribute)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.N_PINS"]], "shuffleandrotatetesthelper (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper"]], "simplerotationtests (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.SimpleRotationTests"]], "testfuelhandlermgmttools (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools"]], "testoptimalassemblyrotation (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation"]], "armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms": [[224, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "burnupwithmaxvalue() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.burnupWithMaxValue"]], "chooseswaps() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.mockfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.MockFuelHandler.chooseSwaps"]], "comparemockedtoexpectedrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.compareMockedToExpectedRotation"]], "ensureblockhasspatialgrid() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper static method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.ensureBlockHasSpatialGrid"]], "powerwithminvalue() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.powerWithMinValue"]], "setassemblypinburnups() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.setAssemblyPinBurnups"]], "setassemblypinpowers() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.shuffleandrotatetesthelper method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.ShuffleAndRotateTestHelper.setAssemblyPinPowers"]], "test_burotationwithfreshfeed() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_buRotationWithFreshFeed"]], "test_burotationwithstationaryrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_buRotationWithStationaryRotation"]], "test_flatpowernorotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testoptimalassemblyrotation method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation.test_flatPowerNoRotation"]], "test_maxburnupatcenternorotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testoptimalassemblyrotation method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation.test_maxBurnupAtCenterNoRotation"]], "test_mismatchpinpowersandlocations() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testoptimalassemblyrotation method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation.test_mismatchPinPowersAndLocations"]], "test_noblockswithburnup() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testoptimalassemblyrotation method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation.test_noBlocksWithBurnup"]], "test_oppositerotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testoptimalassemblyrotation method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestOptimalAssemblyRotation.test_oppositeRotation"]], "test_rotateinshufflequeue() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_rotateInShuffleQueue"]], "test_simpleassemblyrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.simplerotationtests method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.SimpleRotationTests.test_simpleAssemblyRotation"]], "fuelhandlertesthelper (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.FuelHandlerTestHelper"]], "mocklatticephysicsinterface (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface"]], "mockxsgm (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM"]], "testfuelhandler (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler"]], "testfuelplugin (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin"]], "addsomedetailassemblies() (in module armi.physics.fuelcycle.tests.test_fuelhandlers)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.addSomeDetailAssemblies"]], "armi.physics.fuelcycle.tests.test_fuelhandlers": [[225, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.interactBOC"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mockxsgm method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM.interactBOC"]], "name (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface attribute)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.name"]], "runshuffling() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.runShuffling"]], "test_dischargeswap() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwap"]], "test_dischargeswapincompatiblestationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwapIncompatibleStationaryBlocks"]], "test_findbycoords() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findByCoords"]], "test_findhighbu() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findHighBu"]], "test_findinsfp() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findInSFP"]], "test_findmany() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findMany"]], "test_findwithminmax() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findWithMinMax"]], "test_getassembliesinrings() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getAssembliesInRings"]], "test_getfactorlist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getFactorList"]], "test_getparammax() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getParamMax"]], "test_interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_interactBOC"]], "test_isassemblyinazone() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_isAssemblyInAZone"]], "test_linpowbypin() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPin"]], "test_linpowbypingamma() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinGamma"]], "test_linpowbypinneutron() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinNeutron"]], "test_outage() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_outage"]], "test_outageedgecase() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_outageEdgeCase"]], "test_processmovelist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_processMoveList"]], "test_readmoves() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_readMoves"]], "test_repeatshuffles() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_repeatShuffles"]], "test_settingsarediscovered() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelplugin method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin.test_settingsAreDiscovered"]], "test_transferdifferentnumberstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferDifferentNumberStationaryBlocks"]], "test_transferincompatibleheightstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferIncompatibleHeightStationaryBlocks"]], "test_transferstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferStationaryBlocks"]], "test_transferunalignedlocationstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferUnalignedLocationStationaryBlocks"]], "test_width() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_width"]], "testhexassemmgmttools (class in armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils)": [[226, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools"]], "armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils": [[226, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "test_buildconvergentringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[226, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildConvergentRingSchedule"]], "test_buildringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[226, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildRingSchedule"]], "fuelcycleutilstests (class in armi.physics.fuelcycle.tests.test_utils)": [[227, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests"]], "n_pins (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests attribute)": [[227, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.N_PINS"]], "armi.physics.fuelcycle.tests.test_utils": [[227, "module-armi.physics.fuelCycle.tests.test_utils"]], "test_assemblyhaspinburnups() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[227, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_assemblyHasPinBurnups"]], "test_assemblyhaspinpower() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[227, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_assemblyHasPinPower"]], "test_maxburnupblock() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[227, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_maxBurnupBlock"]], "test_maxburnupblocknoblocks() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[227, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_maxBurnupBlockNoBlocks"]], "test_maxburnupblocknoburnup() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[227, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_maxBurnupBlockNoBurnup"]], "test_maxburnuplocationfromcomponents() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[227, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_maxBurnupLocationFromComponents"]], "test_maxburnuplocatormismatcheddata() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[227, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_maxBurnupLocatorMismatchedData"]], "test_maxburnuplocatorwithnoburnup() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[227, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_maxBurnupLocatorWithNoBurnup"]], "test_singlelocatorwithburnup() (armi.physics.fuelcycle.tests.test_utils.fuelcycleutilstests method)": [[227, "armi.physics.fuelCycle.tests.test_utils.FuelCycleUtilsTests.test_singleLocatorWithBurnup"]], "armi.physics.fuelcycle.utils": [[228, "module-armi.physics.fuelCycle.utils"]], "assemblyhasfuelpinburnup() (in module armi.physics.fuelcycle.utils)": [[228, "armi.physics.fuelCycle.utils.assemblyHasFuelPinBurnup"]], "assemblyhasfuelpinpowers() (in module armi.physics.fuelcycle.utils)": [[228, "armi.physics.fuelCycle.utils.assemblyHasFuelPinPowers"]], "maxburnupblock() (in module armi.physics.fuelcycle.utils)": [[228, "armi.physics.fuelCycle.utils.maxBurnupBlock"]], "maxburnuplocator() (in module armi.physics.fuelcycle.utils)": [[228, "armi.physics.fuelCycle.utils.maxBurnupLocator"]], "armi.physics.fuelperformance": [[229, "module-armi.physics.fuelPerformance"]], "fuelperformanceexecuter (class in armi.physics.fuelperformance.executers)": [[230, "armi.physics.fuelPerformance.executers.FuelPerformanceExecuter"]], "fuelperformanceoptions (class in armi.physics.fuelperformance.executers)": [[230, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions"]], "armi.physics.fuelperformance.executers": [[230, "module-armi.physics.fuelPerformance.executers"]], "fromreactor() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[230, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromReactor"]], "fromusersettings() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[230, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromUserSettings"]], "armi.physics.fuelperformance.parameters": [[231, "module-armi.physics.fuelPerformance.parameters"]], "getfuelperformanceparameterdefinitions() (in module armi.physics.fuelperformance.parameters)": [[231, "armi.physics.fuelPerformance.parameters.getFuelPerformanceParameterDefinitions"]], "fuelperformanceplugin (class in armi.physics.fuelperformance.plugin)": [[232, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin"]], "armi.physics.fuelperformance.plugin": [[232, "module-armi.physics.fuelPerformance.plugin"]], "defineparameters() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[232, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineParameters"]], "definesettings() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[232, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[232, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[232, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.exposeInterfaces"]], "armi.physics.fuelperformance.settings": [[233, "module-armi.physics.fuelPerformance.settings"]], "definesettings() (in module armi.physics.fuelperformance.settings)": [[233, "armi.physics.fuelPerformance.settings.defineSettings"]], "definevalidators() (in module armi.physics.fuelperformance.settings)": [[233, "armi.physics.fuelPerformance.settings.defineValidators"]], "armi.physics.fuelperformance.tests": [[234, "module-armi.physics.fuelPerformance.tests"]], "testfuelperformanceoptions (class in armi.physics.fuelperformance.tests.test_executers)": [[235, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions"]], "armi.physics.fuelperformance.tests.test_executers": [[235, "module-armi.physics.fuelPerformance.tests.test_executers"]], "test_fuelperformanceoptions() (armi.physics.fuelperformance.tests.test_executers.testfuelperformanceoptions method)": [[235, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions.test_fuelPerformanceOptions"]], "testfuelperformanceplugin (class in armi.physics.fuelperformance.tests.test_fuelperformanceplugin)": [[236, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin"]], "armi.physics.fuelperformance.tests.test_fuelperformanceplugin": [[236, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "plugin (armi.physics.fuelperformance.tests.test_fuelperformanceplugin.testfuelperformanceplugin attribute)": [[236, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin.plugin"]], "testfuelperformanceutils (class in armi.physics.fuelperformance.tests.test_fuelperformanceutils)": [[237, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils"]], "armi.physics.fuelperformance.tests.test_fuelperformanceutils": [[237, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "test_applyfueldisplacement() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[237, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_applyFuelDisplacement"]], "test_gasconductivitycorrection_morph0() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[237, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph0"]], "test_gasconductivitycorrection_morph1() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[237, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph1"]], "test_gasconductivitycorrection_morph2() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[237, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph2"]], "test_gasconductivitycorrection_morph3() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[237, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph3"]], "test_gasconductivitycorrection_morph4() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[237, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph4"]], "applyfueldisplacement() (in module armi.physics.fuelperformance.utils)": [[238, "armi.physics.fuelPerformance.utils.applyFuelDisplacement"]], "armi.physics.fuelperformance.utils": [[238, "module-armi.physics.fuelPerformance.utils"]], "gasconductivitycorrection() (in module armi.physics.fuelperformance.utils)": [[238, "armi.physics.fuelPerformance.utils.gasConductivityCorrection"]], "boc (armi.physics.neutronics.latticephysicsfrequency attribute)": [[239, "armi.physics.neutronics.LatticePhysicsFrequency.BOC"]], "bol (armi.physics.neutronics.latticephysicsfrequency attribute)": [[239, "armi.physics.neutronics.LatticePhysicsFrequency.BOL"]], "latticephysicsfrequency (class in armi.physics.neutronics)": [[239, "armi.physics.neutronics.LatticePhysicsFrequency"]], "neutronicsplugin (class in armi.physics.neutronics)": [[239, "armi.physics.neutronics.NeutronicsPlugin"]], "adjointcalculationrequested() (in module armi.physics.neutronics)": [[239, "armi.physics.neutronics.adjointCalculationRequested"]], "all (armi.physics.neutronics.latticephysicsfrequency attribute)": [[239, "armi.physics.neutronics.LatticePhysicsFrequency.all"]], "applyeffectivedelayedneutronfractiontocore() (in module armi.physics.neutronics)": [[239, "armi.physics.neutronics.applyEffectiveDelayedNeutronFractionToCore"]], "armi.physics.neutronics": [[239, "module-armi.physics.neutronics"]], "defineentrypoints() (armi.physics.neutronics.neutronicsplugin static method)": [[239, "armi.physics.neutronics.NeutronicsPlugin.defineEntryPoints"]], "defineparameterrenames() (armi.physics.neutronics.neutronicsplugin static method)": [[239, "armi.physics.neutronics.NeutronicsPlugin.defineParameterRenames"]], "defineparameters() (armi.physics.neutronics.neutronicsplugin static method)": [[239, "armi.physics.neutronics.NeutronicsPlugin.defineParameters"]], "definesettings() (armi.physics.neutronics.neutronicsplugin static method)": [[239, "armi.physics.neutronics.NeutronicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.neutronics.neutronicsplugin static method)": [[239, "armi.physics.neutronics.NeutronicsPlugin.defineSettingsValidators"]], "everynode (armi.physics.neutronics.latticephysicsfrequency attribute)": [[239, "armi.physics.neutronics.LatticePhysicsFrequency.everyNode"]], "exposeinterfaces() (armi.physics.neutronics.neutronicsplugin static method)": [[239, "armi.physics.neutronics.NeutronicsPlugin.exposeInterfaces"]], "firstcouplediteration (armi.physics.neutronics.latticephysicsfrequency attribute)": [[239, "armi.physics.neutronics.LatticePhysicsFrequency.firstCoupledIteration"]], "gammatransportisrequested() (in module armi.physics.neutronics)": [[239, "armi.physics.neutronics.gammaTransportIsRequested"]], "gammaxsarerequested() (in module armi.physics.neutronics)": [[239, "armi.physics.neutronics.gammaXsAreRequested"]], "getreportcontents() (armi.physics.neutronics.neutronicsplugin static method)": [[239, "armi.physics.neutronics.NeutronicsPlugin.getReportContents"]], "never (armi.physics.neutronics.latticephysicsfrequency attribute)": [[239, "armi.physics.neutronics.LatticePhysicsFrequency.never"]], "onprocesscoreloading() (armi.physics.neutronics.neutronicsplugin static method)": [[239, "armi.physics.neutronics.NeutronicsPlugin.onProcessCoreLoading"]], "realcalculationrequested() (in module armi.physics.neutronics)": [[239, "armi.physics.neutronics.realCalculationRequested"]], "armi.physics.neutronics.const": [[240, "module-armi.physics.neutronics.const"]], "averageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.AverageBlockCollection"]], "blockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection"]], "crosssectiongroupmanager (class in armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager"]], "cylindricalcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CylindricalComponentsAverageBlockCollection"]], "cylindricalcomponentsducthetaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CylindricalComponentsDuctHetAverageBlockCollection"]], "fluxweightedaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.FluxWeightedAverageBlockCollection"]], "medianblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.MedianBlockCollection"]], "slabcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.SlabComponentsAverageBlockCollection"]], "armi.physics.neutronics.crosssectiongroupmanager": [[241, "module-armi.physics.neutronics.crossSectionGroupManager"]], "blockcollectionfactory() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.blockCollectionFactory"]], "calcavgnuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.calcAvgNuclideTemperatures"]], "clearrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.clearRepresentativeBlocks"]], "createrepresentativeblock() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.createRepresentativeBlock"]], "createrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocks"]], "createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocksUsingExistingBlocks"]], "describeinterfaces() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.describeInterfaces"]], "disableenvgroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.disableEnvGroupUpdates"]], "enableenvgroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.enableEnvGroupUpdates"]], "fluxsolutionispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.fluxSolutionIsPregenerated"]], "getblocknuclidetemperature() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.getBlockNuclideTemperature"]], "getblocknuclidetemperatureavgterms() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.getBlockNuclideTemperatureAvgTerms"]], "getcandidateblocks() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getCandidateBlocks"]], "getnextavailablexstypes() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNextAvailableXsTypes"]], "getnuctemperature() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNucTemperature"]], "getweight() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getWeight"]], "getxstypelabelfromnumber() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeLabelFromNumber"]], "getxstypenumberfromlabel() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[241, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeNumberFromLabel"]], "interactboc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOC"]], "interactbol() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOL"]], "interactcoupled() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactCoupled"]], "interacteoc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEOC"]], "interacteverynode() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEveryNode"]], "makecrosssectiongroups() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.makeCrossSectionGroups"]], "name (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager attribute)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.name"]], "updatenuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.updateNuclideTemperatures"]], "xstypeispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[241, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.xsTypeIsPregenerated"]], "one_dimensional_cylinder (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[242, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_CYLINDER"]], "one_dimensional_slab (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[242, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_SLAB"]], "two_dimensional_hex (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[242, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.TWO_DIMENSIONAL_HEX"]], "xsgeometrytypes (class in armi.physics.neutronics.crosssectionsettings)": [[242, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes"]], "xsmodelingoptions (class in armi.physics.neutronics.crosssectionsettings)": [[242, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions"]], "xssettingdef (class in armi.physics.neutronics.crosssectionsettings)": [[242, "armi.physics.neutronics.crossSectionSettings.XSSettingDef"]], "xssettings (class in armi.physics.neutronics.crosssectionsettings)": [[242, "armi.physics.neutronics.crossSectionSettings.XSSettings"]], "zero_dimensional (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[242, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ZERO_DIMENSIONAL"]], "armi.physics.neutronics.crosssectionsettings": [[242, "module-armi.physics.neutronics.crossSectionSettings"]], "dump() (armi.physics.neutronics.crosssectionsettings.xssettingdef method)": [[242, "armi.physics.neutronics.crossSectionSettings.XSSettingDef.dump"]], "envgroup (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[242, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.envGroup"]], "fluxispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[242, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.fluxIsPregenerated"]], "getstr() (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes class method)": [[242, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.getStr"]], "serialize() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[242, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.serialize"]], "serializexssettings() (in module armi.physics.neutronics.crosssectionsettings)": [[242, "armi.physics.neutronics.crossSectionSettings.serializeXSSettings"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[242, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.setDefaults"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xssettings method)": [[242, "armi.physics.neutronics.crossSectionSettings.XSSettings.setDefaults"]], "validate() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[242, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.validate"]], "xsispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[242, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsIsPregenerated"]], "xssettingsvalidator() (in module armi.physics.neutronics.crosssectionsettings)": [[242, "armi.physics.neutronics.crossSectionSettings.xsSettingsValidator"]], "xstype (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[242, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsType"]], "compareisotxslibraries (class in armi.physics.neutronics.diffisotxs)": [[243, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries"]], "addoptions() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[243, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.addOptions"]], "armi.physics.neutronics.diffisotxs": [[243, "module-armi.physics.neutronics.diffIsotxs"]], "invoke() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[243, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.invoke"]], "name (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[243, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.name"]], "settingsargument (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[243, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.settingsArgument"]], "group_structure (in module armi.physics.neutronics.energygroups)": [[244, "armi.physics.neutronics.energyGroups.GROUP_STRUCTURE"]], "armi.physics.neutronics.energygroups": [[244, "module-armi.physics.neutronics.energyGroups"]], "getfastfluxgroupcutoff() (in module armi.physics.neutronics.energygroups)": [[244, "armi.physics.neutronics.energyGroups.getFastFluxGroupCutoff"]], "getgroupstructure() (in module armi.physics.neutronics.energygroups)": [[244, "armi.physics.neutronics.energyGroups.getGroupStructure"]], "getgroupstructuretype() (in module armi.physics.neutronics.energygroups)": [[244, "armi.physics.neutronics.energyGroups.getGroupStructureType"]], "armi.physics.neutronics.fissionproductmodel": [[245, "module-armi.physics.neutronics.fissionProductModel"]], "fissionproductmodel (class in armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodel": [[246, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "describeinterfaces() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModel.describeInterfaces"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getAllFissionProductNames"]], "getgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getGlobalLumpedFissionProducts"]], "interactboc() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOC"]], "interactbol() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOL"]], "interactdistributestate() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactDistributeState"]], "name (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel attribute)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.name"]], "removefissiongasesfromblocks() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.removeFissionGasesFromBlocks"]], "setallblocklfps() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllBlockLFPs"]], "setallcomponentfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllComponentFissionProducts"]], "setgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[246, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings": [[247, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "definesettings() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[247, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.defineSettings"]], "getfissionproductmodelsettingvalidators() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[247, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.getFissionProductModelSettingValidators"]], "fissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile"]], "lumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct"]], "lumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection"]], "armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct": [[248, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "createlfpsfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createLFPsFromFile"]], "createsinglelfpfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createSingleLFPFromFile"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.duplicate"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.duplicate"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNames"]], "getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNuclideBases"]], "getgaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getGaseousYieldFraction"]], "getlumpedfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getLumpedFissionProductNames"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFrac"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getMassFrac"]], "getmassfracdenom() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracDenom"]], "getmassfracs() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracs"]], "getnumberdensities() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getNumberDensities"]], "gettotalyield() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getTotalYield"]], "isgas() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.isGas"]], "items() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.items"]], "keys() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.keys"]], "lumpedfissionproductfactory() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.lumpedFissionProductFactory"]], "values() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[248, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.values"]], "armi.physics.neutronics.fissionproductmodel.tests": [[249, "module-armi.physics.neutronics.fissionProductModel.tests"]], "testfissionproductmodelexplicitmc2library (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library"]], "testfissionproductmodelexplicitmc2libraryslower (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower"]], "testfissionproductmodellumpedfissionproducts (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel": [[250, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "test_fpapplication() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_fpApplication"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_getAllFissionProductNames"]], "test_loadgloballfpsfromfile() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_loadGlobalLFPsFromFile"]], "test_nuclideflags() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclideFlags"]], "test_nuclidesinmodelalldepletableblocks() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2libraryslower method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower.test_nuclidesInModelAllDepletableBlocks"]], "test_nuclidesinmodelfuel() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[250, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclidesInModelFuel"]], "testfissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile"]], "testlumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct"]], "testlumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection"]], "testlumpedfissionproductsexplicit (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit"]], "testlumpedfissionproductsfromreferencefile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile"]], "testmo99lfp (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP"]], "armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct": [[251, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "getdummylfpfile() (in module armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.getDummyLFPFile"]], "test_createlfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createLFPs"]], "test_createreferencelfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createReferenceLFPs"]], "test_duplicate() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_duplicate"]], "test_explicitfissionproducts() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsexplicit method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit.test_explicitFissionProducts"]], "test_fissionproductyields() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsfromreferencefile method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile.test_fissionProductYields"]], "test_gaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_gaseousYieldFraction"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNames"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testmo99lfp method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP.test_getAllFissionProductNames"]], "test_getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNuclideBases"]], "test_getmassfrac() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getMassFrac"]], "test_getnumberdensities() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getNumberDensities"]], "test_getyield() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_getYield"]], "test_isgas() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[251, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_isGas"]], "armi.physics.neutronics.globalflux": [[252, "module-armi.physics.neutronics.globalFlux"]], "globalfluxexecuter (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter"]], "globalfluxinterface (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface"]], "globalfluxinterfaceusingexecuters (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters"]], "globalfluxoptions (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions"]], "globalfluxresultmapper (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper"]], "armi.physics.neutronics.globalflux.globalfluxinterface": [[253, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "calcreactionrates() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.calcReactionRates"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.calculateKeff"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.calculateKeff"]], "checkenergybalance() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.checkEnergyBalance"]], "clearflux() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.clearFlux"]], "computedparate() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.computeDpaRate"]], "edgeassembliesareneeded() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxexecuter method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter.edgeAssembliesAreNeeded"]], "fromreactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromReactor"]], "fromusersettings() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromUserSettings"]], "function (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.function"]], "getburnuppeakingfactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getBurnupPeakingFactor"]], "getdpaxs() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getDpaXs"]], "getexecuter() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuter"]], "getexecutercls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterOptions"]], "gethistoryparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface static method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getHistoryParams"]], "getiofilenames() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getIOFileNames"]], "getkeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getKeff"]], "getlabel() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getLabel"]], "getoptionscls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getOptionsCls"]], "gettightcouplingvalue() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getTightCouplingValue"]], "interactboc() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactBOC"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactCoupled"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactCoupled"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactEveryNode"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactEveryNode"]], "name (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.name"]], "updatedparate() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateDpaRate"]], "updatemaxdpaparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[253, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateMaxDpaParams"]], "armi.physics.neutronics.globalflux.tests": [[254, "module-armi.physics.neutronics.globalFlux.tests"]], "mockcore (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCore"]], "mockcoreparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCoreParams"]], "mockglobalfluxexecuter (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxExecuter"]], "mockglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface"]], "mockglobalfluxwithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters"]], "mockglobalfluxwithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform"]], "mockreactor (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactor"]], "mockreactorparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactorParams"]], "testglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface"]], "testglobalfluxinterfacewithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters"]], "testglobalfluxinterfacewithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform"]], "testglobalfluxoptions (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions"]], "testglobalfluxresultmapper (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper"]], "testglobalfluxutils (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils"]], "applydummyflux() (in module armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.applyDummyFlux"]], "armi.physics.neutronics.globalflux.tests.test_globalfluxinterface": [[255, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecuters method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecutersnonuniform method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform.getExecuterOptions"]], "interactboc() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactBOC"]], "interacteverynode() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactEveryNode"]], "test_calcreactionrates() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxutils method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils.test_calcReactionRates"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_calculateKeff"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_calculateKeff"]], "test_checkenergybalance() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_checkEnergyBalance"]], "test_computedparate() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_computeDpaRate"]], "test_executerinteraction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_executerInteraction"]], "test_executerinteractionnonuniformassems() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_executerInteractionNonUniformAssems"]], "test_getburnuppeakingfactor() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactor"]], "test_getburnuppeakingfactorzero() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactorZero"]], "test_getdpaxs() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getDpaXs"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getExecuterCls"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_getExecuterCls"]], "test_gethistoryparams() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getHistoryParams"]], "test_getiofilenames() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getIOFileNames"]], "test_gettightcouplingvalue() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getTightCouplingValue"]], "test_interaction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_interaction"]], "test_mapper() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_mapper"]], "test_readfromreactors() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromReactors"]], "test_readfromsettings() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromSettings"]], "test_savephysicsfiles() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_savePhysicsFiles"]], "test_settightcouplingdefaults() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[255, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_setTightCouplingDefaults"]], "armi.physics.neutronics.latticephysics": [[256, "module-armi.physics.neutronics.latticePhysics"]], "latticephysicsinterface (class in armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface"]], "armi.physics.neutronics.latticephysics.latticephysicsinterface": [[257, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "clearxs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.clearXS"]], "computecrosssections() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.computeCrossSections"]], "function (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface attribute)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.function"]], "generatelatticephysicsinputs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.generateLatticePhysicsInputs"]], "getreader() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getReader"]], "getrepresentativeblocks() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getRepresentativeBlocks"]], "getwriters() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getWriters"]], "interactboc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOC"]], "interactbol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOL"]], "interactcoupled() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactCoupled"]], "interacteoc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEOC"]], "interacteverynode() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEveryNode"]], "makecyclexsfilesasbasefiles() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.makeCycleXSFilesAsBaseFiles"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.readExistingXSLibraries"]], "setblockneutronvelocities() (in module armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.setBlockNeutronVelocities"]], "updatephysicscouplingcontrol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updatePhysicsCouplingControl"]], "updatexslibrary() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updateXSLibrary"]], "coolant_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[258, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.COOLANT_CATEGORY"]], "depletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[258, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.DEPLETABLE"]], "fission_product_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[258, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FISSION_PRODUCT_CATEGORY"]], "fuel_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[258, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FUEL_CATEGORY"]], "inf_dilute (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[258, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.INF_DILUTE"]], "latticephysicswriter (class in armi.physics.neutronics.latticephysics.latticephysicswriter)": [[258, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter"]], "represented (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[258, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.REPRESENTED"]], "structure_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[258, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.STRUCTURE_CATEGORY"]], "undepletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[258, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNDEPLETABLE"]], "unused_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[258, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNUSED_CATEGORY"]], "armi.physics.neutronics.latticephysics.latticephysicswriter": [[258, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "write() (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.write"]], "armi.physics.neutronics.latticephysics.tests": [[259, "module-armi.physics.neutronics.latticePhysics.tests"]], "latticeinterfacetester (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester"]], "latticeinterfacetesterlibfalse (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTesterLibFalse"]], "testlatticephysicsinterface (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface"]], "testlatticephysicsinterfacebase (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterfaceBase"]], "testlatticephysicslibrarycreation (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticephysics.tests.test_latticeinterface": [[260, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.latticeinterfacetester method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester.readExistingXSLibraries"]], "test_getsuffix() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_getSuffix"]], "test_includegammaxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_includeGammaXS"]], "test_interactall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactAll"]], "test_interactboc() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNode"]], "test_interacteverynodeall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeAll"]], "test_interacteverynodefirstcoupled() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeFirstCoupled"]], "test_interacteverynodewhencoupled() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeWhenCoupled"]], "test_interacteverynodewhencoupledbutnot() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeWhenCoupledButNot"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactFirstCoupledIteration"]], "test_latticephysicsinterface() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_latticePhysicsInterface"]], "test_libcreation_genxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS"]], "test_libcreation_genxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_2"]], "test_libcreation_genxs_3() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_3"]], "test_libcreation_nogenxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS"]], "test_libcreation_nogenxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[260, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS_2"]], "fakelatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter"]], "testlatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticephysics.tests.test_latticewriter": [[261, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "test_getallnuclidesbytemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInC"]], "test_getallnuclidesbytemperatureincexplicitfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCExplicitFissionProducts"]], "test_getallnuclidesbytemperatureincnone() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCNone"]], "test_getavgnuclidetemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAvgNuclideTemperatureInC"]], "test_getdetailedfpdensities() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFPDensities"]], "test_getdetailedfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProducts"]], "test_getdetailedfissionproductspass() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProductsPass"]], "test_getdriverblock() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDriverBlock"]], "test_getfueltemperature() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getFuelTemperature"]], "test_iscriticalbucklingsearchactive() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isCriticalBucklingSearchActive"]], "test_isgammaxsgenerationenabled() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isGammaXSGenerationEnabled"]], "test_issourcedriven() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isSourceDriven"]], "test_latticephysicswriter() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_latticePhysicsWriter"]], "test_setblockneutronvelocities() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_setBlockNeutronVelocities"]], "test_writetitle() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_writeTitle"]], "write() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.fakelatticephysicswriter method)": [[261, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter.write"]], "macroxsgenerationinterface (class in armi.physics.neutronics.macroxsgenerationinterface)": [[262, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface"]], "macroxsgenerator (class in armi.physics.neutronics.macroxsgenerationinterface)": [[262, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator"]], "armi.physics.neutronics.macroxsgenerationinterface": [[262, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "buildmacros() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface method)": [[262, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.buildMacros"]], "invokehook() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerator method)": [[262, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator.invokeHook"]], "name (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface attribute)": [[262, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.name"]], "armi.physics.neutronics.parameters": [[263, "module-armi.physics.neutronics.parameters"]], "getneutronicsparameterdefinitions() (in module armi.physics.neutronics.parameters)": [[263, "armi.physics.neutronics.parameters.getNeutronicsParameterDefinitions"]], "pd_plot (in module armi.physics.neutronics.reports)": [[264, "armi.physics.neutronics.reports.PD_PLOT"]], "armi.physics.neutronics.reports": [[264, "module-armi.physics.neutronics.reports"]], "generatelineplot() (in module armi.physics.neutronics.reports)": [[264, "armi.physics.neutronics.reports.generateLinePlot"]], "insertinitialcorefuelassem() (in module armi.physics.neutronics.reports)": [[264, "armi.physics.neutronics.reports.insertInitialCoreFuelAssem"]], "insertneutronicsbolcontent() (in module armi.physics.neutronics.reports)": [[264, "armi.physics.neutronics.reports.insertNeutronicsBOLContent"]], "insertneutronicsreport() (in module armi.physics.neutronics.reports)": [[264, "armi.physics.neutronics.reports.insertNeutronicsReport"]], "neutronicsplotting() (in module armi.physics.neutronics.reports)": [[264, "armi.physics.neutronics.reports.neutronicsPlotting"]], "armi.physics.neutronics.settings": [[265, "module-armi.physics.neutronics.settings"]], "definesettings() (in module armi.physics.neutronics.settings)": [[265, "armi.physics.neutronics.settings.defineSettings"]], "getneutronicssettingvalidators() (in module armi.physics.neutronics.settings)": [[265, "armi.physics.neutronics.settings.getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[266, "module-armi.physics.neutronics.tests"]], "testblockcollection (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection"]], "testblockcollectionaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage"]], "testblockcollectioncomponentaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage"]], "testblockcollectioncomponentaverage1dcylinder (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder"]], "testblockcollectionfluxweightedaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage"]], "testblockcollectionmedian (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian"]], "testcomponentaveraging (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging"]], "testcrosssectiongroupmanager (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager"]], "testcrosssectiongroupmanagerwithtempgrouping (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManagerWithTempGrouping"]], "testxsnumberconverters (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters"]], "armi.physics.neutronics.tests.test_crosssectionmanager": [[267, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "makeblocks() (in module armi.physics.neutronics.tests.test_crosssectionmanager)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.makeBlocks"]], "test_componentaverage1dcylinder() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_ComponentAverage1DCylinder"]], "test_componentaverageducthet1dcylinder() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_ComponentAverageDuctHet1DCylinder"]], "test_componentaveragerepblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage.test_ComponentAverageRepBlock"]], "test_add() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_add"]], "test_addxsgroupsfromblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_addXsGroupsFromBlocks"]], "test_calcweightedburnup() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_calcWeightedBurnup"]], "test_checkblocksimilarity() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_checkBlockSimilarity"]], "test_checkcomponentconsistency() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_checkComponentConsistency"]], "test_conversion() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion"]], "test_conversion_2digit() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion_2digit"]], "test_copypregeneratedfiles() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_copyPregeneratedFiles"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionmedian method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian.test_createRepresentativeBlock"]], "test_createrepresentativeblockdissimilar() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlockDissimilar"]], "test_createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_createRepresentativeBlocksUsingExistingBlocks"]], "test_createrepresentativeblocksusingexistingblocksdisablevalidblocktypes() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_createRepresentativeBlocksUsingExistingBlocksDisableValidBlockTypes"]], "test_disableenvgroupupdates() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_disableEnvGroupUpdates"]], "test_enableenvgroupupdates() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_enableEnvGroupUpdates"]], "test_getaveragecomponentnumberdensities() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentNumberDensities"]], "test_getaveragecomponenttemperature() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperature"]], "test_getaveragecomponenttemperaturenomass() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperatureNoMass"]], "test_getaveragecomponenttemperaturevariedweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperatureVariedWeights"]], "test_getblocknuclidetemperature() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionmedian method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian.test_getBlockNuclideTemperature"]], "test_getblocksingroup() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_getBlocksInGroup"]], "test_getnextavailablexstype() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_getNextAvailableXsType"]], "test_getrepresentativeblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_getRepresentativeBlocks"]], "test_interactallcoupled() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactAllCoupled"]], "test_interactboc() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactEveryNode"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactFirstCoupledIteration"]], "test_invalidweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_invalidWeights"]], "test_is_pickleable() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_is_pickleable"]], "test_performaveragebycomponent() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_performAverageByComponent"]], "test_setbugroupbounds() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_setBuGroupBounds"]], "test_settempgroupbounds() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_setTempGroupBounds"]], "test_updateburnupgroups() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_updateBurnupGroups"]], "test_updateenvironmentgroups() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanagerwithtempgrouping method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManagerWithTempGrouping.test_updateEnvironmentGroups"]], "test_xsgmisrunbeforexs() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[267, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_xsgmIsRunBeforeXS"]], "testcrosssectionsettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings"]], "testxssettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings"]], "armi.physics.neutronics.tests.test_crosssectionsettings": [[268, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "test_badcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_badCrossSections"]], "test_casesettings() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_caseSettings"]], "test_crosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_crossSections"]], "test_csblockrepresentation() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_csBlockRepresentation"]], "test_csblockrepresentationfilelocation() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_csBlockRepresentationFileLocation"]], "test_homogeneousxsdefaultsettingassignment() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_homogeneousXsDefaultSettingAssignment"]], "test_optionalkey() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_optionalKey"]], "test_pregeneratedcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedCrossSections"]], "test_pregeneratedfluxinputs() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedFluxInputs"]], "test_prioritization() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_prioritization"]], "test_setdefaultsettingsbylowestenvgrouphomogeneous() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestEnvGroupHomogeneous"]], "test_setdefaultsettingsbylowestenvgrouponedimensional() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestEnvGroupOneDimensional"]], "test_xssettingssetdefault() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_xsSettingsSetDefault"]], "test_yamlio() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[268, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_yamlIO"]], "testcrosssectiontable (class in armi.physics.neutronics.tests.test_crosssectiontable)": [[269, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crosssectiontable": [[269, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "test_isotopicdepletioninterface() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[269, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_isotopicDepletionInterface"]], "test_maketable() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[269, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_makeTable"]], "testenergygroups (class in armi.physics.neutronics.tests.test_energygroups)": [[270, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energygroups": [[270, "module-armi.physics.neutronics.tests.test_energyGroups"]], "test_consistenciesbetweengroupstructureandgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[270, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_consistenciesBetweenGroupStructureAndGroupStructureType"]], "test_getfastfluxgroupcutoff() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[270, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_getFastFluxGroupCutoff"]], "test_invalidgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[270, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_invalidGroupStructureType"]], "testmacroxsgenerationinterface (class in armi.physics.neutronics.tests.test_macroxsgenerationinterface)": [[271, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroxsgenerationinterface": [[271, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "test_macroxsgenerationinterfacebasics() (armi.physics.neutronics.tests.test_macroxsgenerationinterface.testmacroxsgenerationinterface method)": [[271, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface.test_macroXSGenerationInterfaceBasics"]], "neutronicsreactortests (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[272, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests"]], "testneutronicsplugin (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[272, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsplugin": [[272, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "plugin (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin attribute)": [[272, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.plugin"]], "test_customsettingobjectio() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[272, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_customSettingObjectIO"]], "test_customsettingroundtrip() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[272, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_customSettingRoundTrip"]], "test_kineticsparameterassignment() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[272, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_kineticsParameterAssignment"]], "test_neutronicssettingsloaded() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[272, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_neutronicsSettingsLoaded"]], "test_neutronicssettingsvalidators() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[272, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_neutronicsSettingsValidators"]], "safetyplugin (class in armi.physics.safety)": [[273, "armi.physics.safety.SafetyPlugin"]], "armi.physics.safety": [[273, "module-armi.physics.safety"]], "definesettings() (armi.physics.safety.safetyplugin static method)": [[273, "armi.physics.safety.SafetyPlugin.defineSettings"]], "armi.physics.tests": [[274, "module-armi.physics.tests"]], "mockcore (class in armi.physics.tests.test_executers)": [[275, "armi.physics.tests.test_executers.MockCore"]], "mockparams (class in armi.physics.tests.test_executers)": [[275, "armi.physics.tests.test_executers.MockParams"]], "mockreactor (class in armi.physics.tests.test_executers)": [[275, "armi.physics.tests.test_executers.MockReactor"]], "testexecuters (class in armi.physics.tests.test_executers)": [[275, "armi.physics.tests.test_executers.TestExecuters"]], "testexecutionoptions (class in armi.physics.tests.test_executers)": [[275, "armi.physics.tests.test_executers.TestExecutionOptions"]], "armi.physics.tests.test_executers": [[275, "module-armi.physics.tests.test_executers"]], "test_collectinputsandoutputs() (armi.physics.tests.test_executers.testexecuters method)": [[275, "armi.physics.tests.test_executers.TestExecuters.test_collectInputsAndOutputs"]], "test_runexternalexecutable() (armi.physics.tests.test_executers.testexecuters method)": [[275, "armi.physics.tests.test_executers.TestExecuters.test_runExternalExecutable"]], "test_runningdirectorypath() (armi.physics.tests.test_executers.testexecutionoptions method)": [[275, "armi.physics.tests.test_executers.TestExecutionOptions.test_runningDirectoryPath"]], "test_updaterundir() (armi.physics.tests.test_executers.testexecuters method)": [[275, "armi.physics.tests.test_executers.TestExecuters.test_updateRunDir"]], "armi.physics.thermalhydraulics": [[276, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalhydraulics.const": [[277, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalhydraulics.parameters": [[278, "module-armi.physics.thermalHydraulics.parameters"]], "getparameterdefinitions() (in module armi.physics.thermalhydraulics.parameters)": [[278, "armi.physics.thermalHydraulics.parameters.getParameterDefinitions"]], "thermalhydraulicsplugin (class in armi.physics.thermalhydraulics.plugin)": [[279, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin"]], "afterconstructionofassemblies() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[279, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.afterConstructionOfAssemblies"]], "armi.physics.thermalhydraulics.plugin": [[279, "module-armi.physics.thermalHydraulics.plugin"]], "defineparameters() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[279, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineParameters"]], "definesettings() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[279, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[279, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[279, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.exposeInterfaces"]], "armi.physics.thermalhydraulics.settings": [[280, "module-armi.physics.thermalHydraulics.settings"]], "definesettings() (in module armi.physics.thermalhydraulics.settings)": [[280, "armi.physics.thermalHydraulics.settings.defineSettings"]], "definevalidators() (in module armi.physics.thermalhydraulics.settings)": [[280, "armi.physics.thermalHydraulics.settings.defineValidators"]], "armi.physics.thermalhydraulics.tests": [[281, "module-armi.physics.thermalHydraulics.tests"]], "testthermalhydraulicsplugin (class in armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin)": [[282, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin"]], "armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin": [[282, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"]], "plugin (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin attribute)": [[282, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.plugin"]], "test_thermalhydraulicssettingsloaded() (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin method)": [[282, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.test_thermalHydraulicsSettingsLoaded"]], "test_thermalhydraulicssettingsset() (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin method)": [[282, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.test_thermalHydraulicsSettingsSet"]], "armipluginmanager (class in armi.pluginmanager)": [[283, "armi.pluginManager.ArmiPluginManager"]], "armi.pluginmanager": [[283, "module-armi.pluginManager"]], "counter (armi.pluginmanager.armipluginmanager property)": [[283, "armi.pluginManager.ArmiPluginManager.counter"]], "register() (armi.pluginmanager.armipluginmanager method)": [[283, "armi.pluginManager.ArmiPluginManager.register"]], "unregister() (armi.pluginmanager.armipluginmanager method)": [[283, "armi.pluginManager.ArmiPluginManager.unregister"]], "armiplugin (class in armi.plugins)": [[284, "armi.plugins.ArmiPlugin"]], "pluginerror": [[284, "armi.plugins.PluginError"]], "userplugin (class in armi.plugins)": [[284, "armi.plugins.UserPlugin"]], "afterconstructionofassemblies() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.afterConstructionOfAssemblies"]], "armi.plugins": [[284, "module-armi.plugins"]], "beforereactorconstruction() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.beforeReactorConstruction"]], "collectinterfacedescriptions() (in module armi.plugins)": [[284, "armi.plugins.collectInterfaceDescriptions"]], "defineassemblytypes() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.defineBlockTypes"]], "defineblueprintssections() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.defineBlueprintsSections"]], "definecasedependencies() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.defineEntryPoints"]], "defineflags() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.defineFlags"]], "defineguiwidgets() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.defineGuiWidgets"]], "defineparameterrenames() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.defineParameterRenames"]], "defineparameterrenames() (armi.plugins.userplugin static method)": [[284, "armi.plugins.UserPlugin.defineParameterRenames"]], "defineparameters() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.defineParameters"]], "defineparameters() (armi.plugins.userplugin static method)": [[284, "armi.plugins.UserPlugin.defineParameters"]], "definesettings() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.defineSettings"]], "definesettings() (armi.plugins.userplugin static method)": [[284, "armi.plugins.UserPlugin.defineSettings"]], "definesettingsvalidators() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.defineSettingsValidators"]], "definesettingsvalidators() (armi.plugins.userplugin static method)": [[284, "armi.plugins.UserPlugin.defineSettingsValidators"]], "definesystembuilders() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.defineSystemBuilders"]], "exposeinterfaces() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.exposeInterfaces"]], "getaxialexpansionchanger() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.getAxialExpansionChanger"]], "getnewpluginmanager() (in module armi.plugins)": [[284, "armi.plugins.getNewPluginManager"]], "getoperatorclassfromruntype() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.getOperatorClassFromRunType"]], "getreportcontents() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.mpiActionRequiresReset"]], "onprocesscoreloading() (armi.plugins.armiplugin static method)": [[284, "armi.plugins.ArmiPlugin.onProcessCoreLoading"]], "reactorplugin (class in armi.reactor)": [[285, "armi.reactor.ReactorPlugin"]], "armi.reactor": [[285, "module-armi.reactor"]], "beforereactorconstruction() (armi.reactor.reactorplugin static method)": [[285, "armi.reactor.ReactorPlugin.beforeReactorConstruction"]], "defineassemblytypes() (armi.reactor.reactorplugin static method)": [[285, "armi.reactor.ReactorPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.reactor.reactorplugin static method)": [[285, "armi.reactor.ReactorPlugin.defineBlockTypes"]], "definesystembuilders() (armi.reactor.reactorplugin static method)": [[285, "armi.reactor.ReactorPlugin.defineSystemBuilders"]], "getaxialexpansionchanger() (armi.reactor.reactorplugin static method)": [[285, "armi.reactor.ReactorPlugin.getAxialExpansionChanger"]], "assembly (class in armi.reactor.assemblies)": [[286, "armi.reactor.assemblies.Assembly"]], "cartesianassembly (class in armi.reactor.assemblies)": [[286, "armi.reactor.assemblies.CartesianAssembly"]], "database (armi.reactor.assemblies.assembly attribute)": [[286, "armi.reactor.assemblies.Assembly.DATABASE"]], "hexassembly (class in armi.reactor.assemblies)": [[286, "armi.reactor.assemblies.HexAssembly"]], "load_queue (armi.reactor.assemblies.assembly attribute)": [[286, "armi.reactor.assemblies.Assembly.LOAD_QUEUE"]], "not_in_core (armi.reactor.assemblies.assembly attribute)": [[286, "armi.reactor.assemblies.Assembly.NOT_IN_CORE"]], "rzassembly (class in armi.reactor.assemblies)": [[286, "armi.reactor.assemblies.RZAssembly"]], "spent_fuel_pool (armi.reactor.assemblies.assembly attribute)": [[286, "armi.reactor.assemblies.Assembly.SPENT_FUEL_POOL"]], "thrzassembly (class in armi.reactor.assemblies)": [[286, "armi.reactor.assemblies.ThRZAssembly"]], "add() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.add"]], "adjustresolution() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.adjustResolution"]], "armi.reactor.assemblies": [[286, "module-armi.reactor.assemblies"]], "calculatezcoords() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.calculateZCoords"]], "coords() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.coords"]], "countblockswithflags() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.countBlocksWithFlags"]], "dump() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.dump"]], "getage() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getAge"]], "getarea() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getArea"]], "getaverageplenumtemperature() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getAveragePlenumTemperature"]], "getaxialmesh() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getAxialMesh"]], "getbindexfromzindex() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getBIndexFromZIndex"]], "getblockatelevation() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getBlockAtElevation"]], "getblocks() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getBlocks"]], "getblocksandz() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getBlocksAndZ"]], "getblocksbetweenelevations() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getBlocksBetweenElevations"]], "getdim() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getDim"]], "getelevationboundariesbyblocktype() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getElevationBoundariesByBlockType"]], "getelevationsmatchingparamvalue() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getElevationsMatchingParamValue"]], "getfirstblock() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getFirstBlock"]], "getfirstblockbytype() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getFirstBlockByType"]], "getheight() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getHeight"]], "getlocation() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getLocation"]], "getnum() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getNum"]], "getparamofzfunction() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getParamOfZFunction"]], "getparamvaluesatz() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getParamValuesAtZ"]], "getpinplenumvolumeincubicmeters() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getPinPlenumVolumeInCubicMeters"]], "getreactiveheight() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getReactiveHeight"]], "getsymmetryfactor() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getSymmetryFactor"]], "gettotalheight() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getTotalHeight"]], "getvolume() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.getVolume"]], "hascontinuouscoolantchannel() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.hasContinuousCoolantChannel"]], "insert() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.insert"]], "isonwhichsymmetryline() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.isOnWhichSymmetryLine"]], "makeaxialsnaplist() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.makeAxialSnapList"]], "makenamefromassemnum() (armi.reactor.assemblies.assembly static method)": [[286, "armi.reactor.assemblies.Assembly.makeNameFromAssemNum"]], "makeunique() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.makeUnique"]], "moveto() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.moveTo"]], "orientblocks() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.orientBlocks"]], "pdefs (armi.reactor.assemblies.assembly attribute)": [[286, "armi.reactor.assemblies.Assembly.pDefs"]], "paramcollectiontype (armi.reactor.assemblies.assembly attribute)": [[286, "armi.reactor.assemblies.Assembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.cartesianassembly attribute)": [[286, "armi.reactor.assemblies.CartesianAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.hexassembly attribute)": [[286, "armi.reactor.assemblies.HexAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.rzassembly attribute)": [[286, "armi.reactor.assemblies.RZAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.thrzassembly attribute)": [[286, "armi.reactor.assemblies.ThRZAssembly.paramCollectionType"]], "radialinner() (armi.reactor.assemblies.rzassembly method)": [[286, "armi.reactor.assemblies.RZAssembly.radialInner"]], "radialouter() (armi.reactor.assemblies.rzassembly method)": [[286, "armi.reactor.assemblies.RZAssembly.radialOuter"]], "reestablishblockorder() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.reestablishBlockOrder"]], "renameblocksaccordingtoassemblynum() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.renameBlocksAccordingToAssemblyNum"]], "renumber() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.renumber"]], "rotate() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.rotate"]], "rotate() (armi.reactor.assemblies.hexassembly method)": [[286, "armi.reactor.assemblies.HexAssembly.rotate"]], "scaleparamstonewsymmetryfactor() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.scaleParamsToNewSymmetryFactor"]], "setblockheights() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.setBlockHeights"]], "setblockmesh() (armi.reactor.assemblies.assembly method)": [[286, "armi.reactor.assemblies.Assembly.setBlockMesh"]], "thetainner() (armi.reactor.assemblies.rzassembly method)": [[286, "armi.reactor.assemblies.RZAssembly.thetaInner"]], "thetaouter() (armi.reactor.assemblies.rzassembly method)": [[286, "armi.reactor.assemblies.RZAssembly.thetaOuter"]], "armi.reactor.assemblyparameters": [[287, "module-armi.reactor.assemblyParameters"]], "getassemblyparameterdefinitions() (in module armi.reactor.assemblyparameters)": [[287, "armi.reactor.assemblyParameters.getAssemblyParameterDefinitions"]], "armi.reactor.blockparameters": [[288, "module-armi.reactor.blockParameters"]], "getblockparameterdefinitions() (in module armi.reactor.blockparameters)": [[288, "armi.reactor.blockParameters.getBlockParameterDefinitions"]], "block (class in armi.reactor.blocks)": [[289, "armi.reactor.blocks.Block"]], "cartesianblock (class in armi.reactor.blocks)": [[289, "armi.reactor.blocks.CartesianBlock"]], "hexblock (class in armi.reactor.blocks)": [[289, "armi.reactor.blocks.HexBlock"]], "pitch_component_type (armi.reactor.blocks.block attribute)": [[289, "armi.reactor.blocks.Block.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.cartesianblock attribute)": [[289, "armi.reactor.blocks.CartesianBlock.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.hexblock attribute)": [[289, "armi.reactor.blocks.HexBlock.PITCH_COMPONENT_TYPE"]], "pitch_dimension (armi.reactor.blocks.block attribute)": [[289, "armi.reactor.blocks.Block.PITCH_DIMENSION"]], "pitch_dimension (armi.reactor.blocks.cartesianblock attribute)": [[289, "armi.reactor.blocks.CartesianBlock.PITCH_DIMENSION"]], "thrzblock (class in armi.reactor.blocks)": [[289, "armi.reactor.blocks.ThRZBlock"]], "add() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.add"]], "adjustdensity() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.adjustDensity"]], "adjustuenrich() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.adjustUEnrich"]], "armi.reactor.blocks": [[289, "module-armi.reactor.blocks"]], "autocreatespatialgrids() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.autoCreateSpatialGrids"]], "autocreatespatialgrids() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.autoCreateSpatialGrids"]], "axialinner() (armi.reactor.blocks.thrzblock method)": [[289, "armi.reactor.blocks.ThRZBlock.axialInner"]], "axialouter() (armi.reactor.blocks.thrzblock method)": [[289, "armi.reactor.blocks.ThRZBlock.axialOuter"]], "completeinitialloading() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.completeInitialLoading"]], "coords() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.coords"]], "coords() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.coords"]], "core (armi.reactor.blocks.block property)": [[289, "armi.reactor.blocks.Block.core"]], "createhomogenizedcopy() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.createHomogenizedCopy"]], "createhomogenizedcopy() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.createHomogenizedCopy"]], "getarea() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getArea"]], "getblocks() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getBlocks"]], "getboronmassenrich() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getBoronMassEnrich"]], "getcaptureenergygenerationconstants() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getCaptureEnergyGenerationConstants"]], "getcomponentareafrac() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getComponentAreaFrac"]], "getcomponentsinlinkedorder() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getComponentsInLinkedOrder"]], "getcomponentsthatarelinkedto() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getComponentsThatAreLinkedTo"]], "getdim() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getDim"]], "getdimensions() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getDimensions"]], "getductip() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.getDuctIP"]], "getductop() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.getDuctOP"]], "getfissionenergygenerationconstants() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getFissionEnergyGenerationConstants"]], "getflowarea() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.getFlowArea"]], "getflowareaperpin() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getFlowAreaPerPin"]], "getgammaenergydepositionconstants() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getGammaEnergyDepositionConstants"]], "getheight() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getHeight"]], "gethydraulicdiameter() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getHydraulicDiameter"]], "gethydraulicdiameter() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.getHydraulicDiameter"]], "getinputheight() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getInputHeight"]], "getintegratedmgflux() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getIntegratedMgFlux"]], "getlargestcomponent() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getLargestComponent"]], "getlocation() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getLocation"]], "getlumpedfissionproductcollection() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getLumpedFissionProductCollection"]], "getmaxarea() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.cartesianblock method)": [[289, "armi.reactor.blocks.CartesianBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.thrzblock method)": [[289, "armi.reactor.blocks.ThRZBlock.getMaxArea"]], "getmfp() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getMfp"]], "getmgflux() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getMgFlux"]], "getmicrosuffix() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getMicroSuffix"]], "getneutronenergydepositionconstants() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getNeutronEnergyDepositionConstants"]], "getnumpins() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getNumPins"]], "getpincenterflattoflat() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.cartesianblock method)": [[289, "armi.reactor.blocks.CartesianBlock.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.getPinCenterFlatToFlat"]], "getpincoordinates() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getPinCoordinates"]], "getpinlocations() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getPinLocations"]], "getpinpitch() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getPinPitch"]], "getpinpitch() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.getPinPitch"]], "getpintoductgap() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.getPinToDuctGap"]], "getpitch() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getPitch"]], "getplenumpin() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getPlenumPin"]], "getrotationnum() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.getRotationNum"]], "getsmeardensity() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getSmearDensity"]], "getsortedcomponentsinsideofcomponent() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getSortedComponentsInsideOfComponent"]], "getsymmetryfactor() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.cartesianblock method)": [[289, "armi.reactor.blocks.CartesianBlock.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.getSymmetryFactor"]], "gettotalenergygenerationconstants() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getTotalEnergyGenerationConstants"]], "geturaniummassenrich() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getUraniumMassEnrich"]], "getvolume() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getVolume"]], "getwettedperimeter() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getWettedPerimeter"]], "getwettedperimeter() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.getWettedPerimeter"]], "getwirewrapcladgap() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.getWireWrapCladGap"]], "haspinpitch() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.hasPinPitch"]], "haspinpitch() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.hasPinPitch"]], "initializepinlocations() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.initializePinLocations"]], "isplenumpin() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.isPlenumPin"]], "makename() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.makeName"]], "mergewithblock() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.mergeWithBlock"]], "pdefs (armi.reactor.blocks.block attribute)": [[289, "armi.reactor.blocks.Block.pDefs"]], "paramcollectiontype (armi.reactor.blocks.block attribute)": [[289, "armi.reactor.blocks.Block.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.cartesianblock attribute)": [[289, "armi.reactor.blocks.CartesianBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.hexblock attribute)": [[289, "armi.reactor.blocks.HexBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.thrzblock attribute)": [[289, "armi.reactor.blocks.ThRZBlock.paramCollectionType"]], "plotflux() (armi.reactor.blocks.block static method)": [[289, "armi.reactor.blocks.Block.plotFlux"]], "radialinner() (armi.reactor.blocks.thrzblock method)": [[289, "armi.reactor.blocks.ThRZBlock.radialInner"]], "radialouter() (armi.reactor.blocks.thrzblock method)": [[289, "armi.reactor.blocks.ThRZBlock.radialOuter"]], "remove() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.remove"]], "removeall() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.removeAll"]], "replaceblockwithblock() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.replaceBlockWithBlock"]], "rotate() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.rotate"]], "rotate() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.rotate"]], "setareafractionsreport() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.setAreaFractionsReport"]], "setaxialexptargetcomp() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.setAxialExpTargetComp"]], "setb10volparam() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.setB10VolParam"]], "setbulimitinfo() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.setBuLimitInfo"]], "setheight() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.setHeight"]], "setpinmgfluxes() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.setPinMgFluxes"]], "setpinpowers() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.setPinPowers"]], "setpitch() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.setPitch"]], "setpitch() (armi.reactor.blocks.cartesianblock method)": [[289, "armi.reactor.blocks.CartesianBlock.setPitch"]], "setrotationnum() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.setRotationNum"]], "thetainner() (armi.reactor.blocks.thrzblock method)": [[289, "armi.reactor.blocks.ThRZBlock.thetaInner"]], "thetaouter() (armi.reactor.blocks.thrzblock method)": [[289, "armi.reactor.blocks.ThRZBlock.thetaOuter"]], "uniqid (armi.reactor.blocks.block attribute)": [[289, "armi.reactor.blocks.Block.uniqID"]], "updatecomponentdims() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.updateComponentDims"]], "verifyblockdims() (armi.reactor.blocks.block method)": [[289, "armi.reactor.blocks.Block.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.hexblock method)": [[289, "armi.reactor.blocks.HexBlock.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.thrzblock method)": [[289, "armi.reactor.blocks.ThRZBlock.verifyBlockDims"]], "blueprints (class in armi.reactor.blueprints)": [[290, "armi.reactor.blueprints.Blueprints"]], "adddefaultsfp() (armi.reactor.blueprints.blueprints method)": [[290, "armi.reactor.blueprints.Blueprints.addDefaultSFP"]], "armi.reactor.blueprints": [[290, "module-armi.reactor.blueprints"]], "attributes (armi.reactor.blueprints.blueprints attribute)": [[290, "armi.reactor.blueprints.Blueprints.attributes"]], "constructassem() (armi.reactor.blueprints.blueprints method)": [[290, "armi.reactor.blueprints.Blueprints.constructAssem"]], "load() (armi.reactor.blueprints.blueprints class method)": [[290, "armi.reactor.blueprints.Blueprints.load"]], "loadfromcs() (in module armi.reactor.blueprints)": [[290, "armi.reactor.blueprints.loadFromCs"]], "migrate() (armi.reactor.blueprints.blueprints class method)": [[290, "armi.reactor.blueprints.Blueprints.migrate"]], "migrate() (in module armi.reactor.blueprints)": [[290, "armi.reactor.blueprints.migrate"]], "assemblyblueprint (class in armi.reactor.blueprints.assemblyblueprint)": [[291, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint"]], "assemblykeyedlist (class in armi.reactor.blueprints.assemblyblueprint)": [[291, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList"]], "bycomponentmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[291, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications"]], "materialmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[291, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications"]], "modifications (class in armi.reactor.blueprints.assemblyblueprint)": [[291, "armi.reactor.blueprints.assemblyBlueprint.Modifications"]], "armi.reactor.blueprints.assemblyblueprint": [[291, "module-armi.reactor.blueprints.assemblyBlueprint"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint attribute)": [[291, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[291, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[291, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[291, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[291, "armi.reactor.blueprints.assemblyBlueprint.Modifications.attributes"]], "byspecifier (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist property)": [[291, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.bySpecifier"]], "construct() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint method)": [[291, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.construct"]], "getassemclass() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint class method)": [[291, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.getAssemClass"]], "item_type (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[291, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.item_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[291, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[291, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[291, "armi.reactor.blueprints.assemblyBlueprint.Modifications.key_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[291, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[291, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[291, "armi.reactor.blueprints.assemblyBlueprint.Modifications.value_type"]], "blockblueprint (class in armi.reactor.blueprints.blockblueprint)": [[292, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint"]], "blockkeyedlist (class in armi.reactor.blueprints.blockblueprint)": [[292, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList"]], "blocklist (class in armi.reactor.blueprints.blockblueprint)": [[292, "armi.reactor.blueprints.blockBlueprint.BlockList"]], "armi.reactor.blueprints.blockblueprint": [[292, "module-armi.reactor.blueprints.blockBlueprint"]], "attributes (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[292, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.attributes"]], "attributes (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[292, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.attributes"]], "construct() (armi.reactor.blueprints.blockblueprint.blockblueprint method)": [[292, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.construct"]], "item_type (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[292, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[292, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blocklist attribute)": [[292, "armi.reactor.blueprints.blockBlueprint.BlockList.item_type"]], "componentblueprint (class in armi.reactor.blueprints.componentblueprint)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint"]], "componentdimension (class in armi.reactor.blueprints.componentblueprint)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentDimension"]], "componentgroup (class in armi.reactor.blueprints.componentblueprint)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentGroup"]], "componentgroups (class in armi.reactor.blueprints.componentblueprint)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentGroups"]], "componentkeyedlist (class in armi.reactor.blueprints.componentblueprint)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList"]], "groupedcomponent (class in armi.reactor.blueprints.componentblueprint)": [[293, "armi.reactor.blueprints.componentBlueprint.GroupedComponent"]], "armi.reactor.blueprints.componentblueprint": [[293, "module-armi.reactor.blueprints.componentBlueprint"]], "attributes (armi.reactor.blueprints.componentblueprint.componentblueprint attribute)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentdimension attribute)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.groupedcomponent attribute)": [[293, "armi.reactor.blueprints.componentBlueprint.GroupedComponent.attributes"]], "construct() (armi.reactor.blueprints.componentblueprint.componentblueprint method)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.construct"]], "expandelementals() (in module armi.reactor.blueprints.componentblueprint)": [[293, "armi.reactor.blueprints.componentBlueprint.expandElementals"]], "from_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.from_yaml"]], "insertdepletablenuclidekeys() (in module armi.reactor.blueprints.componentblueprint)": [[293, "armi.reactor.blueprints.componentBlueprint.insertDepletableNuclideKeys"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.item_type"]], "to_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[293, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.to_yaml"]], "gridblueprint (class in armi.reactor.blueprints.gridblueprint)": [[294, "armi.reactor.blueprints.gridBlueprint.GridBlueprint"]], "grids (class in armi.reactor.blueprints.gridblueprint)": [[294, "armi.reactor.blueprints.gridBlueprint.Grids"]], "triplet (class in armi.reactor.blueprints.gridblueprint)": [[294, "armi.reactor.blueprints.gridBlueprint.Triplet"]], "armi.reactor.blueprints.gridblueprint": [[294, "module-armi.reactor.blueprints.gridBlueprint"]], "attributes (armi.reactor.blueprints.gridblueprint.gridblueprint attribute)": [[294, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.grids attribute)": [[294, "armi.reactor.blueprints.gridBlueprint.Grids.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.triplet attribute)": [[294, "armi.reactor.blueprints.gridBlueprint.Triplet.attributes"]], "construct() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[294, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.construct"]], "expandtofull() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[294, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.expandToFull"]], "getlocators() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[294, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getLocators"]], "getmultilocator() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[294, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getMultiLocator"]], "item_type (armi.reactor.blueprints.gridblueprint.grids attribute)": [[294, "armi.reactor.blueprints.gridBlueprint.Grids.item_type"]], "readfromlatticemap (armi.reactor.blueprints.gridblueprint.gridblueprint property)": [[294, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.readFromLatticeMap"]], "savetostream() (in module armi.reactor.blueprints.gridblueprint)": [[294, "armi.reactor.blueprints.gridBlueprint.saveToStream"]], "customisotopic (class in armi.reactor.blueprints.isotopicoptions)": [[295, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic"]], "customisotopics (class in armi.reactor.blueprints.isotopicoptions)": [[295, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics"]], "nuclideflag (class in armi.reactor.blueprints.isotopicoptions)": [[295, "armi.reactor.blueprints.isotopicOptions.NuclideFlag"]], "nuclideflags (class in armi.reactor.blueprints.isotopicoptions)": [[295, "armi.reactor.blueprints.isotopicOptions.NuclideFlags"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopic method)": [[295, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.apply"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopics method)": [[295, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.apply"]], "armi.reactor.blueprints.isotopicoptions": [[295, "module-armi.reactor.blueprints.isotopicOptions"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[295, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[295, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflag attribute)": [[295, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[295, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.attributes"]], "autoupdatenuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[295, "armi.reactor.blueprints.isotopicOptions.autoUpdateNuclideFlags"]], "density (armi.reactor.blueprints.isotopicoptions.customisotopic property)": [[295, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.density"]], "eleexpandinfobasedoncodeendf() (in module armi.reactor.blueprints.isotopicoptions)": [[295, "armi.reactor.blueprints.isotopicOptions.eleExpandInfoBasedOnCodeENDF"]], "fileasactiveorinert() (armi.reactor.blueprints.isotopicoptions.nuclideflag method)": [[295, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.fileAsActiveOrInert"]], "from_yaml() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[295, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml"]], "from_yaml_key_val() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[295, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml_key_val"]], "gendefaultnucflags() (in module armi.reactor.blueprints.isotopicoptions)": [[295, "armi.reactor.blueprints.isotopicOptions.genDefaultNucFlags"]], "getallnuclidebasesbylibrary() (in module armi.reactor.blueprints.isotopicoptions)": [[295, "armi.reactor.blueprints.isotopicOptions.getAllNuclideBasesByLibrary"]], "getdefaultnuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[295, "armi.reactor.blueprints.isotopicOptions.getDefaultNuclideFlags"]], "item_type (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[295, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.item_type"]], "item_type (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[295, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.item_type"]], "key_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[295, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.key_type"]], "value_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[295, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.value_type"]], "systemblueprint (class in armi.reactor.blueprints.reactorblueprint)": [[296, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint"]], "systems (class in armi.reactor.blueprints.reactorblueprint)": [[296, "armi.reactor.blueprints.reactorBlueprint.Systems"]], "armi.reactor.blueprints.reactorblueprint": [[296, "module-armi.reactor.blueprints.reactorBlueprint"]], "attributes (armi.reactor.blueprints.reactorblueprint.systemblueprint attribute)": [[296, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.attributes"]], "attributes (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[296, "armi.reactor.blueprints.reactorBlueprint.Systems.attributes"]], "construct() (armi.reactor.blueprints.reactorblueprint.systemblueprint method)": [[296, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.construct"]], "item_type (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[296, "armi.reactor.blueprints.reactorBlueprint.Systems.item_type"]], "summarizematerialdata() (in module armi.reactor.blueprints.reactorblueprint)": [[296, "armi.reactor.blueprints.reactorBlueprint.summarizeMaterialData"]], "armi.reactor.blueprints.tests": [[297, "module-armi.reactor.blueprints.tests"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_assemblyblueprints)": [[298, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyblueprints": [[298, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "loadcustomassembly() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[298, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.loadCustomAssembly"]], "test_checkparamconsistency() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[298, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.test_checkParamConsistency"]], "twoblockinput_correct (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[298, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_correct"]], "twoblockinput_wrongheights (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[298, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongHeights"]], "twoblockinput_wrongmatmods (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[298, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMatMods"]], "twoblockinput_wrongmeshpoints (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[298, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMeshPoints"]], "twoblockinput_wrongxstypes (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[298, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongXSTypes"]], "testgriddedblock (class in armi.reactor.blueprints.tests.test_blockblueprints)": [[299, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockblueprints": [[299, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "test_blocklattice() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[299, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_blockLattice"]], "test_constructspatialgrid() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[299, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_constructSpatialGrid"]], "test_densityconsistentwithcomponentconstructor() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[299, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_densityConsistentWithComponentConstructor"]], "test_explicitflags() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[299, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_explicitFlags"]], "test_getlocatorsatlatticepositions() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[299, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_getLocatorsAtLatticePositions"]], "test_nonlatticecomponenthasrightmult() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[299, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_nonLatticeComponentHasRightMult"]], "testblueprints (class in armi.reactor.blueprints.tests.test_blueprints)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints"]], "testblueprintsschema (class in armi.reactor.blueprints.tests.test_blueprints)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints": [[300, "module-armi.reactor.blueprints.tests.test_blueprints"]], "test_assemblyparameters() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_assemblyParameters"]], "test_cladding_invalid() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_cladding_invalid"]], "test_componentdimensions() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_componentDimensions"]], "test_componentgroupinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_componentGroupInput"]], "test_components() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_components"]], "test_customisotopics() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_customIsotopics"]], "test_getassemblytypebyspecifier() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_getAssemblyTypeBySpecifier"]], "test_merge() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_merge"]], "test_noduplicatekeysinyamlblueprints() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_noDuplicateKeysInYamlBlueprints"]], "test_nuclideflags() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclideFlags"]], "test_nuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_nuclides"]], "test_nuclidesmc2v2() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v2"]], "test_nuclidesmc2v3() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v3"]], "test_roundtripcompletebp() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_roundTripCompleteBP"]], "test_specialisotopicvectors() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_specialIsotopicVectors"]], "test_toplevelcomponentinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_topLevelComponentInput"]], "test_tracenuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_traceNuclides"]], "test_withoutblocks() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[300, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_withoutBlocks"]], "testcomponentblueprint (class in armi.reactor.blueprints.tests.test_componentblueprint)": [[301, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentblueprint": [[301, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "componentstring (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint attribute)": [[301, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.componentString"]], "test_autodepletable() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[301, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_autoDepletable"]], "test_componentinitializationamericiumcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[301, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationAmericiumCustomIsotopics"]], "test_componentinitializationcontrolcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[301, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationControlCustomIsotopics"]], "test_componentinitializationincompleteburnchain() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[301, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationIncompleteBurnChain"]], "test_componentinitializationthoriumburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[301, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumBurnCustomIsotopics"]], "test_componentinitializationthoriumnoburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[301, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumNoBurnCustomIsotopics"]], "testcustomisotopics (class in armi.reactor.blueprints.tests.test_customisotopics)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics"]], "testcustomisotopics_errorconditions (class in armi.reactor.blueprints.tests.test_customisotopics)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions"]], "testnuclideflagsexpansion (class in armi.reactor.blueprints.tests.test_customisotopics)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customisotopics": [[302, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "test_customdensitylogsanderrors() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_customDensityLogsAndErrors"]], "test_densitiesappliedtononcustommaterials() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_densitiesAppliedToNonCustomMaterials"]], "test_densitymustbepositive() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_densityMustBePositive"]], "test_eleexpandinfobasedoncodeendf() (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.test_eleExpandInfoBasedOnCodeENDF"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_expandedNatural"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.test_expandedNatural"]], "test_infdiluteareonlynatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_infDiluteAreOnlyNatural"]], "test_massfractionsareapplied() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_massFractionsAreApplied"]], "test_nonconformantelementname() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_nonConformantElementName"]], "test_numberdensities() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensities"]], "test_numberdensitiesanchor() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensitiesAnchor"]], "test_numberdensitiescannotspecifydensity() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_numberDensitiesCannotSpecifyDensity"]], "test_numberfractions() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberFractions"]], "test_unmodified() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_unmodified"]], "yamlbadblocks (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlBadBlocks"]], "yamlgoodblocks (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlGoodBlocks"]], "yamlpreamble (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlPreamble"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlString"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion attribute)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.yamlString"]], "yamlstringwitherror (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[302, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlStringWithError"]], "testgridbproundtrip (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[303, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip"]], "testgridblueprintssection (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[303, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection"]], "testrztgridblueprint (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[303, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint"]], "armi.reactor.blueprints.tests.test_gridblueprints": [[303, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[303, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_construct"]], "test_contents() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[303, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_contents"]], "test_geomfile() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[303, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_geomFile"]], "test_roundtrip() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[303, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_roundTrip"]], "test_simpleread() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[303, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleRead"]], "test_simplereadlatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[303, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadLatticeMap"]], "test_simplereadnolatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[303, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadNoLatticeMap"]], "test_tinymap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[303, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_tinyMap"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_materialmodifications)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialmodifications": [[304, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "b4cinput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.b4cInput"]], "loadb4cassembly() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.loadB4CAssembly"]], "loaduzrassembly() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.loadUZrAssembly"]], "test_bothu235zrwtfracmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_bothU235ZrWtFracModification"]], "test_checkbycomponentmaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_checkByComponentMaterialInput"]], "test_filtermaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_filterMaterialInput"]], "test_invalidcomponentmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalidComponentModification"]], "test_invalidmatmodname() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalidMatModName"]], "test_matmodsupthemro() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_matModsUpTheMRO"]], "test_materialmodificationlength() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_materialModificationLength"]], "test_nomaterialmodifications() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_noMaterialModifications"]], "test_theoreticaldensity() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_theoreticalDensity"]], "test_u235_wt_frac_bycomponent_modification1() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification1"]], "test_u235_wt_frac_bycomponent_modification2() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification2"]], "test_u235_wt_frac_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_modification"]], "test_zrwtfracmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_zrWtFracModification"]], "uzrinput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[304, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.uZrInput"]], "testreactorblueprints (class in armi.reactor.blueprints.tests.test_reactorblueprints)": [[305, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorblueprints": [[305, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[305, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_construct"]], "test_excorestructure() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[305, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_excoreStructure"]], "test_materialdatasummary() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[305, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_materialDataSummary"]], "test_simpleread() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[305, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_simpleRead"]], "test_spentfuelpool() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[305, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_spentFuelPool"]], "dimension_names (armi.reactor.components.derivedshape attribute)": [[306, "armi.reactor.components.DerivedShape.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.nullcomponent attribute)": [[306, "armi.reactor.components.NullComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[306, "armi.reactor.components.PositiveOrNegativeVolumeComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedcomponent attribute)": [[306, "armi.reactor.components.UnshapedComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[306, "armi.reactor.components.UnshapedVolumetricComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.zeromasscomponent attribute)": [[306, "armi.reactor.components.ZeroMassComponent.DIMENSION_NAMES"]], "derivedshape (class in armi.reactor.components)": [[306, "armi.reactor.components.DerivedShape"]], "init_signature (armi.reactor.components.derivedshape attribute)": [[306, "armi.reactor.components.DerivedShape.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.nullcomponent attribute)": [[306, "armi.reactor.components.NullComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[306, "armi.reactor.components.PositiveOrNegativeVolumeComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedcomponent attribute)": [[306, "armi.reactor.components.UnshapedComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[306, "armi.reactor.components.UnshapedVolumetricComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.zeromasscomponent attribute)": [[306, "armi.reactor.components.ZeroMassComponent.INIT_SIGNATURE"]], "nullcomponent (class in armi.reactor.components)": [[306, "armi.reactor.components.NullComponent"]], "positiveornegativevolumecomponent (class in armi.reactor.components)": [[306, "armi.reactor.components.PositiveOrNegativeVolumeComponent"]], "unshapedcomponent (class in armi.reactor.components)": [[306, "armi.reactor.components.UnshapedComponent"]], "unshapedvolumetriccomponent (class in armi.reactor.components)": [[306, "armi.reactor.components.UnshapedVolumetricComponent"]], "zeromasscomponent (class in armi.reactor.components)": [[306, "armi.reactor.components.ZeroMassComponent"]], "armi.reactor.components": [[306, "module-armi.reactor.components"]], "computevolume() (armi.reactor.components.derivedshape method)": [[306, "armi.reactor.components.DerivedShape.computeVolume"]], "factory() (in module armi.reactor.components)": [[306, "armi.reactor.components.factory"]], "fromcomponent() (armi.reactor.components.unshapedcomponent static method)": [[306, "armi.reactor.components.UnshapedComponent.fromComponent"]], "getboundingcircleouterdiameter() (armi.reactor.components.derivedshape method)": [[306, "armi.reactor.components.DerivedShape.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.nullcomponent method)": [[306, "armi.reactor.components.NullComponent.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.unshapedcomponent method)": [[306, "armi.reactor.components.UnshapedComponent.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.derivedshape method)": [[306, "armi.reactor.components.DerivedShape.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedcomponent method)": [[306, "armi.reactor.components.UnshapedComponent.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedvolumetriccomponent method)": [[306, "armi.reactor.components.UnshapedVolumetricComponent.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[306, "armi.reactor.components.UnshapedVolumetricComponent.getComponentVolume"]], "getdimension() (armi.reactor.components.nullcomponent method)": [[306, "armi.reactor.components.NullComponent.getDimension"]], "getmaxvolume() (armi.reactor.components.derivedshape method)": [[306, "armi.reactor.components.DerivedShape.getMaxVolume"]], "getnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[306, "armi.reactor.components.ZeroMassComponent.getNumberDensity"]], "getvolume() (armi.reactor.components.derivedshape method)": [[306, "armi.reactor.components.DerivedShape.getVolume"]], "is3d (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[306, "armi.reactor.components.UnshapedVolumetricComponent.is3D"]], "material (armi.reactor.components.derivedshape attribute)": [[306, "armi.reactor.components.DerivedShape.material"]], "material (armi.reactor.components.nullcomponent attribute)": [[306, "armi.reactor.components.NullComponent.material"]], "material (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[306, "armi.reactor.components.PositiveOrNegativeVolumeComponent.material"]], "material (armi.reactor.components.unshapedcomponent attribute)": [[306, "armi.reactor.components.UnshapedComponent.material"]], "material (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[306, "armi.reactor.components.UnshapedVolumetricComponent.material"]], "material (armi.reactor.components.zeromasscomponent attribute)": [[306, "armi.reactor.components.ZeroMassComponent.material"]], "pdefs (armi.reactor.components.unshapedcomponent attribute)": [[306, "armi.reactor.components.UnshapedComponent.pDefs"]], "paramcollectiontype (armi.reactor.components.derivedshape attribute)": [[306, "armi.reactor.components.DerivedShape.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.nullcomponent attribute)": [[306, "armi.reactor.components.NullComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[306, "armi.reactor.components.PositiveOrNegativeVolumeComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedcomponent attribute)": [[306, "armi.reactor.components.UnshapedComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[306, "armi.reactor.components.UnshapedVolumetricComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.zeromasscomponent attribute)": [[306, "armi.reactor.components.ZeroMassComponent.paramCollectionType"]], "setnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[306, "armi.reactor.components.ZeroMassComponent.setNumberDensity"]], "setvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[306, "armi.reactor.components.UnshapedVolumetricComponent.setVolume"]], "circle (class in armi.reactor.components.basicshapes)": [[307, "armi.reactor.components.basicShapes.Circle"]], "dimension_names (armi.reactor.components.basicshapes.circle attribute)": [[307, "armi.reactor.components.basicShapes.Circle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.hexagon attribute)": [[307, "armi.reactor.components.basicShapes.Hexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.rectangle attribute)": [[307, "armi.reactor.components.basicShapes.Rectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.solidrectangle attribute)": [[307, "armi.reactor.components.basicShapes.SolidRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.square attribute)": [[307, "armi.reactor.components.basicShapes.Square.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.triangle attribute)": [[307, "armi.reactor.components.basicShapes.Triangle.DIMENSION_NAMES"]], "hexagon (class in armi.reactor.components.basicshapes)": [[307, "armi.reactor.components.basicShapes.Hexagon"]], "init_signature (armi.reactor.components.basicshapes.circle attribute)": [[307, "armi.reactor.components.basicShapes.Circle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.hexagon attribute)": [[307, "armi.reactor.components.basicShapes.Hexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.rectangle attribute)": [[307, "armi.reactor.components.basicShapes.Rectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.solidrectangle attribute)": [[307, "armi.reactor.components.basicShapes.SolidRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.square attribute)": [[307, "armi.reactor.components.basicShapes.Square.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.triangle attribute)": [[307, "armi.reactor.components.basicShapes.Triangle.INIT_SIGNATURE"]], "rectangle (class in armi.reactor.components.basicshapes)": [[307, "armi.reactor.components.basicShapes.Rectangle"]], "solidrectangle (class in armi.reactor.components.basicshapes)": [[307, "armi.reactor.components.basicShapes.SolidRectangle"]], "square (class in armi.reactor.components.basicshapes)": [[307, "armi.reactor.components.basicShapes.Square"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.circle attribute)": [[307, "armi.reactor.components.basicShapes.Circle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.hexagon attribute)": [[307, "armi.reactor.components.basicShapes.Hexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.rectangle attribute)": [[307, "armi.reactor.components.basicShapes.Rectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.solidrectangle attribute)": [[307, "armi.reactor.components.basicShapes.SolidRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.triangle attribute)": [[307, "armi.reactor.components.basicShapes.Triangle.THERMAL_EXPANSION_DIMS"]], "triangle (class in armi.reactor.components.basicshapes)": [[307, "armi.reactor.components.basicShapes.Triangle"]], "armi.reactor.components.basicshapes": [[307, "module-armi.reactor.components.basicShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.circle method)": [[307, "armi.reactor.components.basicShapes.Circle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[307, "armi.reactor.components.basicShapes.Hexagon.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[307, "armi.reactor.components.basicShapes.Rectangle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.square method)": [[307, "armi.reactor.components.basicShapes.Square.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.circle method)": [[307, "armi.reactor.components.basicShapes.Circle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[307, "armi.reactor.components.basicShapes.Hexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[307, "armi.reactor.components.basicShapes.Rectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.square method)": [[307, "armi.reactor.components.basicShapes.Square.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.basicshapes.circle method)": [[307, "armi.reactor.components.basicShapes.Circle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.hexagon method)": [[307, "armi.reactor.components.basicShapes.Hexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.rectangle method)": [[307, "armi.reactor.components.basicShapes.Rectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.solidrectangle method)": [[307, "armi.reactor.components.basicShapes.SolidRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.square method)": [[307, "armi.reactor.components.basicShapes.Square.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.triangle method)": [[307, "armi.reactor.components.basicShapes.Triangle.getComponentArea"]], "getperimeter() (armi.reactor.components.basicshapes.hexagon method)": [[307, "armi.reactor.components.basicShapes.Hexagon.getPerimeter"]], "getpitchdata() (armi.reactor.components.basicshapes.hexagon method)": [[307, "armi.reactor.components.basicShapes.Hexagon.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.rectangle method)": [[307, "armi.reactor.components.basicShapes.Rectangle.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.square method)": [[307, "armi.reactor.components.basicShapes.Square.getPitchData"]], "is3d (armi.reactor.components.basicshapes.circle attribute)": [[307, "armi.reactor.components.basicShapes.Circle.is3D"]], "is3d (armi.reactor.components.basicshapes.hexagon attribute)": [[307, "armi.reactor.components.basicShapes.Hexagon.is3D"]], "is3d (armi.reactor.components.basicshapes.rectangle attribute)": [[307, "armi.reactor.components.basicShapes.Rectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.solidrectangle attribute)": [[307, "armi.reactor.components.basicShapes.SolidRectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.square attribute)": [[307, "armi.reactor.components.basicShapes.Square.is3D"]], "is3d (armi.reactor.components.basicshapes.triangle attribute)": [[307, "armi.reactor.components.basicShapes.Triangle.is3D"]], "isencapsulatedby() (armi.reactor.components.basicshapes.circle method)": [[307, "armi.reactor.components.basicShapes.Circle.isEncapsulatedBy"]], "islatticecomponent() (armi.reactor.components.basicshapes.rectangle method)": [[307, "armi.reactor.components.basicShapes.Rectangle.isLatticeComponent"]], "material (armi.reactor.components.basicshapes.circle attribute)": [[307, "armi.reactor.components.basicShapes.Circle.material"]], "material (armi.reactor.components.basicshapes.hexagon attribute)": [[307, "armi.reactor.components.basicShapes.Hexagon.material"]], "material (armi.reactor.components.basicshapes.rectangle attribute)": [[307, "armi.reactor.components.basicShapes.Rectangle.material"]], "material (armi.reactor.components.basicshapes.solidrectangle attribute)": [[307, "armi.reactor.components.basicShapes.SolidRectangle.material"]], "material (armi.reactor.components.basicshapes.square attribute)": [[307, "armi.reactor.components.basicShapes.Square.material"]], "material (armi.reactor.components.basicshapes.triangle attribute)": [[307, "armi.reactor.components.basicShapes.Triangle.material"]], "pdefs (armi.reactor.components.basicshapes.circle attribute)": [[307, "armi.reactor.components.basicShapes.Circle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.hexagon attribute)": [[307, "armi.reactor.components.basicShapes.Hexagon.pDefs"]], "pdefs (armi.reactor.components.basicshapes.rectangle attribute)": [[307, "armi.reactor.components.basicShapes.Rectangle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.triangle attribute)": [[307, "armi.reactor.components.basicShapes.Triangle.pDefs"]], "paramcollectiontype (armi.reactor.components.basicshapes.circle attribute)": [[307, "armi.reactor.components.basicShapes.Circle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.hexagon attribute)": [[307, "armi.reactor.components.basicShapes.Hexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.rectangle attribute)": [[307, "armi.reactor.components.basicShapes.Rectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.solidrectangle attribute)": [[307, "armi.reactor.components.basicShapes.SolidRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.square attribute)": [[307, "armi.reactor.components.basicShapes.Square.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.triangle attribute)": [[307, "armi.reactor.components.basicShapes.Triangle.paramCollectionType"]], "dimension_names (armi.reactor.components.complexshapes.helix attribute)": [[308, "armi.reactor.components.complexShapes.Helix.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[308, "armi.reactor.components.complexShapes.HexHoledCircle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedhexagon attribute)": [[308, "armi.reactor.components.complexShapes.HoledHexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedrectangle attribute)": [[308, "armi.reactor.components.complexShapes.HoledRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedsquare attribute)": [[308, "armi.reactor.components.complexShapes.HoledSquare.DIMENSION_NAMES"]], "helix (class in armi.reactor.components.complexshapes)": [[308, "armi.reactor.components.complexShapes.Helix"]], "hexholedcircle (class in armi.reactor.components.complexshapes)": [[308, "armi.reactor.components.complexShapes.HexHoledCircle"]], "holedhexagon (class in armi.reactor.components.complexshapes)": [[308, "armi.reactor.components.complexShapes.HoledHexagon"]], "holedrectangle (class in armi.reactor.components.complexshapes)": [[308, "armi.reactor.components.complexShapes.HoledRectangle"]], "holedsquare (class in armi.reactor.components.complexshapes)": [[308, "armi.reactor.components.complexShapes.HoledSquare"]], "init_signature (armi.reactor.components.complexshapes.helix attribute)": [[308, "armi.reactor.components.complexShapes.Helix.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[308, "armi.reactor.components.complexShapes.HexHoledCircle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedhexagon attribute)": [[308, "armi.reactor.components.complexShapes.HoledHexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedrectangle attribute)": [[308, "armi.reactor.components.complexShapes.HoledRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedsquare attribute)": [[308, "armi.reactor.components.complexShapes.HoledSquare.INIT_SIGNATURE"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.helix attribute)": [[308, "armi.reactor.components.complexShapes.Helix.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[308, "armi.reactor.components.complexShapes.HexHoledCircle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedhexagon attribute)": [[308, "armi.reactor.components.complexShapes.HoledHexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedrectangle attribute)": [[308, "armi.reactor.components.complexShapes.HoledRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedsquare attribute)": [[308, "armi.reactor.components.complexShapes.HoledSquare.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.complexshapes": [[308, "module-armi.reactor.components.complexShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.complexshapes.helix method)": [[308, "armi.reactor.components.complexShapes.Helix.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.helix method)": [[308, "armi.reactor.components.complexShapes.Helix.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.hexholedcircle method)": [[308, "armi.reactor.components.complexShapes.HexHoledCircle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedhexagon method)": [[308, "armi.reactor.components.complexShapes.HoledHexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedrectangle method)": [[308, "armi.reactor.components.complexShapes.HoledRectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedsquare method)": [[308, "armi.reactor.components.complexShapes.HoledSquare.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.complexshapes.helix method)": [[308, "armi.reactor.components.complexShapes.Helix.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.hexholedcircle method)": [[308, "armi.reactor.components.complexShapes.HexHoledCircle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedhexagon method)": [[308, "armi.reactor.components.complexShapes.HoledHexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedrectangle method)": [[308, "armi.reactor.components.complexShapes.HoledRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedsquare method)": [[308, "armi.reactor.components.complexShapes.HoledSquare.getComponentArea"]], "is3d (armi.reactor.components.complexshapes.helix attribute)": [[308, "armi.reactor.components.complexShapes.Helix.is3D"]], "material (armi.reactor.components.complexshapes.helix attribute)": [[308, "armi.reactor.components.complexShapes.Helix.material"]], "material (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[308, "armi.reactor.components.complexShapes.HexHoledCircle.material"]], "material (armi.reactor.components.complexshapes.holedhexagon attribute)": [[308, "armi.reactor.components.complexShapes.HoledHexagon.material"]], "material (armi.reactor.components.complexshapes.holedrectangle attribute)": [[308, "armi.reactor.components.complexShapes.HoledRectangle.material"]], "material (armi.reactor.components.complexshapes.holedsquare attribute)": [[308, "armi.reactor.components.complexShapes.HoledSquare.material"]], "pdefs (armi.reactor.components.complexshapes.helix attribute)": [[308, "armi.reactor.components.complexShapes.Helix.pDefs"]], "pdefs (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[308, "armi.reactor.components.complexShapes.HexHoledCircle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedhexagon attribute)": [[308, "armi.reactor.components.complexShapes.HoledHexagon.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedrectangle attribute)": [[308, "armi.reactor.components.complexShapes.HoledRectangle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedsquare attribute)": [[308, "armi.reactor.components.complexShapes.HoledSquare.pDefs"]], "paramcollectiontype (armi.reactor.components.complexshapes.helix attribute)": [[308, "armi.reactor.components.complexShapes.Helix.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[308, "armi.reactor.components.complexShapes.HexHoledCircle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedhexagon attribute)": [[308, "armi.reactor.components.complexShapes.HoledHexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedrectangle attribute)": [[308, "armi.reactor.components.complexShapes.HoledRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedsquare attribute)": [[308, "armi.reactor.components.complexShapes.HoledSquare.paramCollectionType"]], "component (class in armi.reactor.components.component)": [[309, "armi.reactor.components.component.Component"]], "componenttype (class in armi.reactor.components.component)": [[309, "armi.reactor.components.component.ComponentType"]], "dimension_names (armi.reactor.components.component.component attribute)": [[309, "armi.reactor.components.component.Component.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.component.shapedcomponent attribute)": [[309, "armi.reactor.components.component.ShapedComponent.DIMENSION_NAMES"]], "init_signature (armi.reactor.components.component.component attribute)": [[309, "armi.reactor.components.component.Component.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.component.shapedcomponent attribute)": [[309, "armi.reactor.components.component.ShapedComponent.INIT_SIGNATURE"]], "non_dimension_names (armi.reactor.components.component.componenttype attribute)": [[309, "armi.reactor.components.component.ComponentType.NON_DIMENSION_NAMES"]], "shapedcomponent (class in armi.reactor.components.component)": [[309, "armi.reactor.components.component.ShapedComponent"]], "thermal_expansion_dims (armi.reactor.components.component.component attribute)": [[309, "armi.reactor.components.component.Component.THERMAL_EXPANSION_DIMS"]], "types (armi.reactor.components.component.componenttype attribute)": [[309, "armi.reactor.components.component.ComponentType.TYPES"]], "adjustdensityforheightexpansion() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.adjustDensityForHeightExpansion"]], "adjustmassenrichment() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.adjustMassEnrichment"]], "applymaterialmassfracstonumberdensities() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.applyMaterialMassFracsToNumberDensities"]], "armi.reactor.components.component": [[309, "module-armi.reactor.components.component"]], "backup() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.backUp"]], "clearcache() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.clearCache"]], "clearlinkedcache() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.clearLinkedCache"]], "componenttypeisvalid() (in module armi.reactor.components.component)": [[309, "armi.reactor.components.component.componentTypeIsValid"]], "computevolume() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.computeVolume"]], "containssolidmaterial() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.containsSolidMaterial"]], "containsvoidmaterial() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.containsVoidMaterial"]], "density() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.density"]], "dimensionislinked() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.dimensionIsLinked"]], "finalizeloadingfromdb() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.finalizeLoadingFromDB"]], "gasporosity (armi.reactor.components.component.component property)": [[309, "armi.reactor.components.component.Component.gasPorosity"]], "getarea() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getArea"]], "getboundingcircleouterdiameter() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getComponentVolume"]], "getdimension() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getDimension"]], "getdimensionnameslinkedto() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getDimensionNamesLinkedTo"]], "getenrichment() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getEnrichment"]], "getfuelmass() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getFuelMass"]], "getheightfactor() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getHeightFactor"]], "getintegratedmgflux() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getIntegratedMgFlux"]], "getlinkedcomponents() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getLinkedComponents"]], "getlumpedfissionproductcollection() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getLumpedFissionProductCollection"]], "getmass() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getMass"]], "getmassenrichment() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getMassEnrichment"]], "getmicrosuffix() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getMicroSuffix"]], "getnuclidenumberdensities() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getNuclides"]], "getnumberdensity() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getNumberDensity"]], "getpinmgfluxes() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getPinMgFluxes"]], "getpitchdata() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getPitchData"]], "getproperties() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getProperties"]], "getthermalexpansionfactor() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getThermalExpansionFactor"]], "getvolume() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.getVolume"]], "is3d (armi.reactor.components.component.component attribute)": [[309, "armi.reactor.components.component.Component.is3D"]], "itercomponents() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.iterComponents"]], "liquidporosity (armi.reactor.components.component.component property)": [[309, "armi.reactor.components.component.Component.liquidPorosity"]], "material (armi.reactor.components.component.component attribute)": [[309, "armi.reactor.components.component.Component.material"]], "material (armi.reactor.components.component.shapedcomponent attribute)": [[309, "armi.reactor.components.component.ShapedComponent.material"]], "mergenuclidesinto() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.mergeNuclidesInto"]], "pdefs (armi.reactor.components.component.component attribute)": [[309, "armi.reactor.components.component.Component.pDefs"]], "paramcollectiontype (armi.reactor.components.component.component attribute)": [[309, "armi.reactor.components.component.Component.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.component.shapedcomponent attribute)": [[309, "armi.reactor.components.component.ShapedComponent.paramCollectionType"]], "printcontents() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.printContents"]], "resolvelinkeddims() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.resolveLinkedDims"]], "restorebackup() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.restoreBackup"]], "setarea() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.setArea"]], "setdimension() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.setDimension"]], "setdimensionreport() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.setDimensionReport"]], "setlink() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.setLink"]], "setlumpedfissionproducts() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.setLumpedFissionProducts"]], "setname() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.setName"]], "setnumberdensities() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.setNumberDensities"]], "setnumberdensity() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.setNumberDensity"]], "setproperties() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.setProperties"]], "settemperature() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.setTemperature"]], "setvolume() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.setVolume"]], "temperatureinc (armi.reactor.components.component.component property)": [[309, "armi.reactor.components.component.Component.temperatureInC"]], "temperatureink (armi.reactor.components.component.component property)": [[309, "armi.reactor.components.component.Component.temperatureInK"]], "updatedims() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.updateDims"]], "updatenumberdensities() (armi.reactor.components.component.component method)": [[309, "armi.reactor.components.component.Component.updateNumberDensities"]], "armi.reactor.components.componentparameters": [[310, "module-armi.reactor.components.componentParameters"]], "getcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[310, "armi.reactor.components.componentParameters.getCircleParameterDefinitions"]], "getcomponentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[310, "armi.reactor.components.componentParameters.getComponentParameterDefinitions"]], "getcubeparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[310, "armi.reactor.components.componentParameters.getCubeParameterDefinitions"]], "gethelixparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[310, "armi.reactor.components.componentParameters.getHelixParameterDefinitions"]], "gethexholedcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[310, "armi.reactor.components.componentParameters.getHexHoledCircleParameterDefinitions"]], "gethexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[310, "armi.reactor.components.componentParameters.getHexagonParameterDefinitions"]], "getholedhexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[310, "armi.reactor.components.componentParameters.getHoledHexagonParameterDefinitions"]], "getholedrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[310, "armi.reactor.components.componentParameters.getHoledRectangleParameterDefinitions"]], "getradialsegmentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[310, "armi.reactor.components.componentParameters.getRadialSegmentParameterDefinitions"]], "getrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[310, "armi.reactor.components.componentParameters.getRectangleParameterDefinitions"]], "gettriangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[310, "armi.reactor.components.componentParameters.getTriangleParameterDefinitions"]], "getunshapedparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[310, "armi.reactor.components.componentParameters.getUnshapedParameterDefinitions"]], "cube (class in armi.reactor.components.volumetricshapes)": [[311, "armi.reactor.components.volumetricShapes.Cube"]], "dimension_names (armi.reactor.components.volumetricshapes.cube attribute)": [[311, "armi.reactor.components.volumetricShapes.Cube.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.RadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.sphere attribute)": [[311, "armi.reactor.components.volumetricShapes.Sphere.DIMENSION_NAMES"]], "differentialradialsegment (class in armi.reactor.components.volumetricshapes)": [[311, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment"]], "init_signature (armi.reactor.components.volumetricshapes.cube attribute)": [[311, "armi.reactor.components.volumetricShapes.Cube.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.RadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.sphere attribute)": [[311, "armi.reactor.components.volumetricShapes.Sphere.INIT_SIGNATURE"]], "radialsegment (class in armi.reactor.components.volumetricshapes)": [[311, "armi.reactor.components.volumetricShapes.RadialSegment"]], "sphere (class in armi.reactor.components.volumetricshapes)": [[311, "armi.reactor.components.volumetricShapes.Sphere"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.cube attribute)": [[311, "armi.reactor.components.volumetricShapes.Cube.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.RadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.sphere attribute)": [[311, "armi.reactor.components.volumetricShapes.Sphere.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.volumetricshapes": [[311, "module-armi.reactor.components.volumetricShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.radialsegment method)": [[311, "armi.reactor.components.volumetricShapes.RadialSegment.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.sphere method)": [[311, "armi.reactor.components.volumetricShapes.Sphere.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.cube method)": [[311, "armi.reactor.components.volumetricShapes.Cube.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[311, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.radialsegment method)": [[311, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.sphere method)": [[311, "armi.reactor.components.volumetricShapes.Sphere.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.cube method)": [[311, "armi.reactor.components.volumetricShapes.Cube.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[311, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.radialsegment method)": [[311, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.sphere method)": [[311, "armi.reactor.components.volumetricShapes.Sphere.getComponentVolume"]], "is3d (armi.reactor.components.volumetricshapes.cube attribute)": [[311, "armi.reactor.components.volumetricShapes.Cube.is3D"]], "is3d (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.RadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.sphere attribute)": [[311, "armi.reactor.components.volumetricShapes.Sphere.is3D"]], "material (armi.reactor.components.volumetricshapes.cube attribute)": [[311, "armi.reactor.components.volumetricShapes.Cube.material"]], "material (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.material"]], "material (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.RadialSegment.material"]], "material (armi.reactor.components.volumetricshapes.sphere attribute)": [[311, "armi.reactor.components.volumetricShapes.Sphere.material"]], "pdefs (armi.reactor.components.volumetricshapes.cube attribute)": [[311, "armi.reactor.components.volumetricShapes.Cube.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.RadialSegment.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.sphere attribute)": [[311, "armi.reactor.components.volumetricShapes.Sphere.pDefs"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.cube attribute)": [[311, "armi.reactor.components.volumetricShapes.Cube.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[311, "armi.reactor.components.volumetricShapes.RadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.sphere attribute)": [[311, "armi.reactor.components.volumetricShapes.Sphere.paramCollectionType"]], "updatedims() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[311, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.updateDims"]], "armiobject (class in armi.reactor.composites)": [[312, "armi.reactor.composites.ArmiObject"]], "composite (class in armi.reactor.composites)": [[312, "armi.reactor.composites.Composite"]], "compositemodeltype (class in armi.reactor.composites)": [[312, "armi.reactor.composites.CompositeModelType"]], "flagserializer (class in armi.reactor.composites)": [[312, "armi.reactor.composites.FlagSerializer"]], "stateretainer (class in armi.reactor.composites)": [[312, "armi.reactor.composites.StateRetainer"]], "types (armi.reactor.composites.compositemodeltype attribute)": [[312, "armi.reactor.composites.CompositeModelType.TYPES"]], "add() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.add"]], "addmass() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.addMass"]], "addmasses() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.addMasses"]], "adjustmassenrichment() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.adjustMassEnrichment"]], "adjustmassfrac() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.adjustMassFrac"]], "append() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.append"]], "armi.reactor.composites": [[312, "module-armi.reactor.composites"]], "backup() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.backUp"]], "calcavgparam() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.calcAvgParam"]], "calctotalparam() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.calcTotalParam"]], "changendensbyfactor() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.changeNDensByFactor"]], "clearcache() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.clearCache"]], "clearnumberdensities() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.clearNumberDensities"]], "constituentreport() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.constituentReport"]], "containsatleastonechildwithflags() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.containsAtLeastOneChildWithFlags"]], "containsheavymetal() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.containsHeavyMetal"]], "containsonlychildrenwithflags() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.containsOnlyChildrenWithFlags"]], "copyparamsfrom() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.copyParamsFrom"]], "copyparamstochildren() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.copyParamsToChildren"]], "density() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.density"]], "dochildrenhaveflags() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.doChildrenHaveFlags"]], "duplicate() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.duplicate"]], "expandallelementalstoisotopics() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.expandAllElementalsToIsotopics"]], "expandelementaltoisotopics() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.expandElementalToIsotopics"]], "extend() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.extend"]], "gathermaterialsbyvolume() (in module armi.reactor.composites)": [[312, "armi.reactor.composites.gatherMaterialsByVolume"]], "getancestor() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getAncestor"]], "getancestoranddistance() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getAncestorAndDistance"]], "getancestorwithflags() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getAncestorWithFlags"]], "getarea() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getArea"]], "getatomicweight() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getAtomicWeight"]], "getaveragetempinc() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getAverageTempInC"]], "getboundingcircleouterdiameter() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.getBoundingCircleOuterDiameter"]], "getboundingindices() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getBoundingIndices"]], "getchildparamvalues() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getChildParamValues"]], "getchildren() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getChildren"]], "getchildren() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.getChildren"]], "getchildrenoftype() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.getChildrenOfType"]], "getchildrenwithflags() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getChildrenWithFlags"]], "getchildrenwithflags() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.getChildrenWithFlags"]], "getchildrenwithnuclides() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getChildrenWithNuclides"]], "getcomponent() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getComponent"]], "getcomponentbyname() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getComponentByName"]], "getcomponentnames() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getComponentNames"]], "getcomponents() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getComponents"]], "getcomponents() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.getComponents"]], "getcomponentsofmaterial() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getComponentsOfMaterial"]], "getcomponentsofshape() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getComponentsOfShape"]], "getdominantmaterial() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getDominantMaterial"]], "getdominantmaterial() (in module armi.reactor.composites)": [[312, "armi.reactor.composites.getDominantMaterial"]], "getfpmass() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getFPMass"]], "getfissilemass() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getFissileMass"]], "getfissilemassenrich() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getFissileMassEnrich"]], "getfuelmass() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getFuelMass"]], "gethmdens() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getHMDens"]], "gethmmass() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getHMMass"]], "gethmmoles() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getHMMoles"]], "getintegratedmgflux() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getIntegratedMgFlux"]], "getintegratedmgflux() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.getIntegratedMgFlux"]], "getlumpedfissionproductcollection() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getLumpedFissionProductCollection"]], "getlumpedfissionproductcollection() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.getLumpedFissionProductCollection"]], "getlumpedfissionproductsifnecessary() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.getLumpedFissionProductsIfNecessary"]], "getmass() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getMass"]], "getmassfrac() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getMassFrac"]], "getmassfracs() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getMassFracs"]], "getmasses() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getMasses"]], "getmaxarea() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getMaxArea"]], "getmaxparam() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getMaxParam"]], "getmgflux() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getMgFlux"]], "getmicrosuffix() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getMicroSuffix"]], "getminparam() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getMinParam"]], "getname() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getName"]], "getnuclidenumberdensities() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getNuclides"]], "getnumcomponents() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getNumComponents"]], "getnumberdensities() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getNumberDensities"]], "getnumberdensity() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getNumberDensity"]], "getnumberofatoms() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getNumberOfAtoms"]], "getparamnames() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getParamNames"]], "getparametercollection() (armi.reactor.composites.armiobject class method)": [[312, "armi.reactor.composites.ArmiObject.getParameterCollection"]], "getpumoles() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.getPuMoles"]], "getreactionratedict() (in module armi.reactor.composites)": [[312, "armi.reactor.composites.getReactionRateDict"]], "getreactionrates() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.getReactionRates"]], "getsymmetryfactor() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getSymmetryFactor"]], "gettotalndens() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getTotalNDens"]], "gettype() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getType"]], "geturaniumnumenrich() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getUraniumNumEnrich"]], "getvolume() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getVolume"]], "getvolumefraction() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getVolumeFraction"]], "getvolumefractions() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.getVolumeFractions"]], "hascomponents() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.hasComponents"]], "hasflags() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.hasFlags"]], "index() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.index"]], "insert() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.insert"]], "isfuel() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.isFuel"]], "itercomponents() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.iterComponents"]], "itercomponents() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.iterComponents"]], "moveto() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.moveTo"]], "namecontains() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.nameContains"]], "pdefs (armi.reactor.composites.armiobject attribute)": [[312, "armi.reactor.composites.ArmiObject.pDefs"]], "pack() (armi.reactor.composites.flagserializer static method)": [[312, "armi.reactor.composites.FlagSerializer.pack"]], "paramcollectiontype (armi.reactor.composites.armiobject attribute)": [[312, "armi.reactor.composites.ArmiObject.paramCollectionType"]], "paramcollectiontype (armi.reactor.composites.composite attribute)": [[312, "armi.reactor.composites.Composite.paramCollectionType"]], "printcontents() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.printContents"]], "remove() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.remove"]], "removeall() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.removeAll"]], "removemass() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.removeMass"]], "requireslumpedfissionproducts() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.requiresLumpedFissionProducts"]], "resolvelinkeddims() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.resolveLinkedDims"]], "restorebackup() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.restoreBackup"]], "retainstate() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.retainState"]], "setchildren() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.setChildren"]], "setchildrenlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.setChildrenLumpedFissionProducts"]], "setcomponentdimensionsreport() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.setComponentDimensionsReport"]], "setlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.setLumpedFissionProducts"]], "setmass() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.setMass"]], "setmassfrac() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.setMassFrac"]], "setmassfracs() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.setMassFracs"]], "setmasses() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.setMasses"]], "setname() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.setName"]], "setnumberdensities() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.setNumberDensities"]], "setnumberdensity() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.setNumberDensity"]], "settype() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.setType"]], "sort() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.sort"]], "syncmpistate() (armi.reactor.composites.composite method)": [[312, "armi.reactor.composites.Composite.syncMpiState"]], "unpack() (armi.reactor.composites.flagserializer class method)": [[312, "armi.reactor.composites.FlagSerializer.unpack"]], "updatenumberdensities() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.updateNumberDensities"]], "updateparamsfrom() (armi.reactor.composites.armiobject method)": [[312, "armi.reactor.composites.ArmiObject.updateParamsFrom"]], "version (armi.reactor.composites.flagserializer attribute)": [[312, "armi.reactor.composites.FlagSerializer.version"]], "armi.reactor.converters": [[313, "module-armi.reactor.converters"]], "armi.reactor.converters.axialexpansionchanger": [[314, "module-armi.reactor.converters.axialExpansionChanger"]], "assemblyaxiallinkage (class in armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage)": [[315, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage"]], "axiallink (class in armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage)": [[315, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AxialLink"]], "areaxiallylinked() (armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage.assemblyaxiallinkage static method)": [[315, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage.areAxiallyLinked"]], "areaxiallylinked() (in module armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage)": [[315, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.areAxiallyLinked"]], "armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage": [[315, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"]], "getlinkedblocks() (armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage.assemblyaxiallinkage class method)": [[315, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage.getLinkedBlocks"]], "linkedblocks (armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage.assemblyaxiallinkage attribute)": [[315, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage.linkedBlocks"]], "linkedcomponents (armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage.assemblyaxiallinkage attribute)": [[315, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage.linkedComponents"]], "lower (armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage.axiallink attribute)": [[315, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AxialLink.lower"]], "upper (armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage.axiallink attribute)": [[315, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AxialLink.upper"]], "axialexpansionchanger (class in armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger"]], "applycoldheightmassincrease() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.applyColdHeightMassIncrease"]], "armi.reactor.converters.axialexpansionchanger.axialexpansionchanger": [[316, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"]], "axiallyexpandassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.axiallyExpandAssembly"]], "expandcolddimstohot() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger class method)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.expandColdDimsToHot"]], "expansiondata (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger attribute)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.expansionData"]], "getdefaultreferenceassem() (in module armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.getDefaultReferenceAssem"]], "linked (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger attribute)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.linked"]], "makeassemsabletosnaptouniformmesh() (in module armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.makeAssemsAbleToSnapToUniformMesh"]], "managecoremesh() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.manageCoreMesh"]], "performprescribedaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.performPrescribedAxialExpansion"]], "performthermalaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.performThermalAxialExpansion"]], "reset() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.reset"]], "setassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[316, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.setAssembly"]], "expansiondata (class in armi.reactor.converters.axialexpansionchanger.expansiondata)": [[317, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData"]], "armi.reactor.converters.axialexpansionchanger.expansiondata": [[317, "module-armi.reactor.converters.axialExpansionChanger.expansionData"]], "componentreferencetemperature (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata attribute)": [[317, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.componentReferenceTemperature"]], "computethermalexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[317, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.computeThermalExpansionFactors"]], "determinetargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[317, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.determineTargetComponent"]], "getexpansionfactor() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[317, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.getExpansionFactor"]], "getsolidcomponents() (in module armi.reactor.converters.axialexpansionchanger.expansiondata)": [[317, "armi.reactor.converters.axialExpansionChanger.expansionData.getSolidComponents"]], "istargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[317, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.isTargetComponent"]], "itersolidcomponents() (in module armi.reactor.converters.axialexpansionchanger.expansiondata)": [[317, "armi.reactor.converters.axialExpansionChanger.expansionData.iterSolidComponents"]], "setexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[317, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.setExpansionFactors"]], "updatecomponenttemp() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[317, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.updateComponentTemp"]], "updatecomponenttempsby1dtempfield() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[317, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.updateComponentTempsBy1DTempField"]], "blockavgtocylconverter (class in armi.reactor.converters.blockconverters)": [[318, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter"]], "blockconverter (class in armi.reactor.converters.blockconverters)": [[318, "armi.reactor.converters.blockConverters.BlockConverter"]], "componentmerger (class in armi.reactor.converters.blockconverters)": [[318, "armi.reactor.converters.blockConverters.ComponentMerger"]], "hexcomponentstocylconverter (class in armi.reactor.converters.blockconverters)": [[318, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter"]], "multiplecomponentmerger (class in armi.reactor.converters.blockconverters)": [[318, "armi.reactor.converters.blockConverters.MultipleComponentMerger"]], "armi.reactor.converters.blockconverters": [[318, "module-armi.reactor.converters.blockConverters"]], "convert() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[318, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.blockconverter method)": [[318, "armi.reactor.converters.blockConverters.BlockConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.componentmerger method)": [[318, "armi.reactor.converters.blockConverters.ComponentMerger.convert"]], "convert() (armi.reactor.converters.blockconverters.hexcomponentstocylconverter method)": [[318, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.multiplecomponentmerger method)": [[318, "armi.reactor.converters.blockConverters.MultipleComponentMerger.convert"]], "dissolvecomponentintocomponent() (armi.reactor.converters.blockconverters.blockconverter method)": [[318, "armi.reactor.converters.blockConverters.BlockConverter.dissolveComponentIntoComponent"]], "getouterdiamfromidandarea() (in module armi.reactor.converters.blockconverters)": [[318, "armi.reactor.converters.blockConverters.getOuterDiamFromIDAndArea"]], "plotconvertedblock() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[318, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.plotConvertedBlock"]], "radiifromhexpitches() (in module armi.reactor.converters.blockconverters)": [[318, "armi.reactor.converters.blockConverters.radiiFromHexPitches"]], "radiifromhexsides() (in module armi.reactor.converters.blockconverters)": [[318, "armi.reactor.converters.blockConverters.radiiFromHexSides"]], "radiifromringofrods() (in module armi.reactor.converters.blockconverters)": [[318, "armi.reactor.converters.blockConverters.radiiFromRingOfRods"]], "restablishlinks() (armi.reactor.converters.blockconverters.blockconverter method)": [[318, "armi.reactor.converters.blockConverters.BlockConverter.restablishLinks"]], "stripcomponents() (in module armi.reactor.converters.blockconverters)": [[318, "armi.reactor.converters.blockConverters.stripComponents"]], "expected_input_symmetry (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger attribute)": [[319, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.EXPECTED_INPUT_SYMMETRY"]], "edgeassemblychanger (class in armi.reactor.converters.geometryconverters)": [[319, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger"]], "fuelassemnummodifier (class in armi.reactor.converters.geometryconverters)": [[319, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier"]], "geometrychanger (class in armi.reactor.converters.geometryconverters)": [[319, "armi.reactor.converters.geometryConverters.GeometryChanger"]], "geometryconverter (class in armi.reactor.converters.geometryconverters)": [[319, "armi.reactor.converters.geometryConverters.GeometryConverter"]], "hextorzconverter (class in armi.reactor.converters.geometryconverters)": [[319, "armi.reactor.converters.geometryConverters.HexToRZConverter"]], "hextorzthetaconverter (class in armi.reactor.converters.geometryconverters)": [[319, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter"]], "thirdcorehextofullcorechanger (class in armi.reactor.converters.geometryconverters)": [[319, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger"]], "addedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[319, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.addEdgeAssemblies"]], "addring() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[319, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.addRing"]], "armi.reactor.converters.geometryconverters": [[319, "module-armi.reactor.converters.geometryConverters"]], "convert() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[319, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.convert"]], "convert() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[319, "armi.reactor.converters.geometryConverters.GeometryChanger.convert"]], "convert() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[319, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.convert"]], "convert() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[319, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.convert"]], "createhomogenizedrztblock() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[319, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.createHomogenizedRZTBlock"]], "plotconvertedreactor() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[319, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.plotConvertedReactor"]], "removeedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[319, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.removeEdgeAssemblies"]], "reset() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[319, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.reset"]], "reset() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[319, "armi.reactor.converters.geometryConverters.GeometryChanger.reset"]], "reset() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[319, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.reset"]], "restorepreviousgeometry() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[319, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.restorePreviousGeometry"]], "scaleparamsrelatedtosymmetry() (armi.reactor.converters.geometryconverters.edgeassemblychanger static method)": [[319, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.scaleParamsRelatedToSymmetry"]], "meshconverter (class in armi.reactor.converters.meshconverters)": [[320, "armi.reactor.converters.meshConverters.MeshConverter"]], "rzthetareactormeshconverter (class in armi.reactor.converters.meshconverters)": [[320, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter"]], "rzthetareactormeshconverterbyringcompositionaxialbins (class in armi.reactor.converters.meshconverters)": [[320, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialBins"]], "rzthetareactormeshconverterbyringcompositionaxialcoordinates (class in armi.reactor.converters.meshconverters)": [[320, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"]], "rzthetareactormeshconverterbyringcompositionaxialflags (class in armi.reactor.converters.meshconverters)": [[320, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialFlags"]], "armi.reactor.converters.meshconverters": [[320, "module-armi.reactor.converters.meshConverters"]], "checklastvalueinlist() (in module armi.reactor.converters.meshconverters)": [[320, "armi.reactor.converters.meshConverters.checkLastValueInList"]], "checklistbounds() (in module armi.reactor.converters.meshconverters)": [[320, "armi.reactor.converters.meshConverters.checkListBounds"]], "generatebins() (in module armi.reactor.converters.meshconverters)": [[320, "armi.reactor.converters.meshConverters.generateBins"]], "generatemesh() (armi.reactor.converters.meshconverters.meshconverter method)": [[320, "armi.reactor.converters.meshConverters.MeshConverter.generateMesh"]], "generatemesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[320, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.generateMesh"]], "setaxialmesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[320, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setAxialMesh"]], "setringstoconvert() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[320, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setRingsToConvert"]], "setthetamesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[320, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setThetaMesh"]], "writemeshdata() (armi.reactor.converters.meshconverters.meshconverter method)": [[320, "armi.reactor.converters.meshConverters.MeshConverter.writeMeshData"]], "writemeshdata() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[320, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.writeMeshData"]], "armi.reactor.converters.parametersweeps": [[321, "module-armi.reactor.converters.parameterSweeps"]], "neutronicconvergencemodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[322, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier"]], "priority (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter attribute)": [[322, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.PRIORITY"]], "parametersweepconverter (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[322, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter"]], "settingsmodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[322, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier"]], "armi.reactor.converters.parametersweeps.generalparametersweepconverters": [[322, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.neutronicconvergencemodifier method)": [[322, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter method)": [[322, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.settingsmodifier method)": [[322, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier.convert"]], "adjustcladthicknessbyid() (in module armi.reactor.converters.pintypeblockconverters)": [[323, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByID"]], "adjustcladthicknessbyod() (in module armi.reactor.converters.pintypeblockconverters)": [[323, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByOD"]], "adjustsmeardensity() (in module armi.reactor.converters.pintypeblockconverters)": [[323, "armi.reactor.converters.pinTypeBlockConverters.adjustSmearDensity"]], "armi.reactor.converters.pintypeblockconverters": [[323, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests": [[324, "module-armi.reactor.converters.tests"]], "axialexpansiontestbase (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase"]], "fakemat (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat"]], "fakematexception (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException"]], "steel_component_lst (armi.reactor.converters.tests.test_axialexpansionchanger.axialexpansiontestbase attribute)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase.Steel_Component_Lst"]], "temperature (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.Temperature"]], "testaxialexpansionheight (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight"]], "testaxiallinkhelper (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialLinkHelper"]], "testblocklink (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestBlockLink"]], "testcomponentlinks (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks"]], "testconservation (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation"]], "testdeterminetargetcomponent (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent"]], "testexceptions (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions"]], "testgetsolidcomponents (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents"]], "testinputheightsconsideredhot (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot"]], "testmanagecoremesh (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh"]], "armi.reactor.converters.tests.test_axialexpansionchanger": [[325, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "buildtestassemblywithfakematerial() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.buildTestAssemblyWithFakeMaterial"]], "checkcoldblockheight() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.checkColdBlockHeight"]], "checkcoldheightblockmass() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.checkColdHeightBlockMass"]], "complexconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.complexConservationTest"]], "expandassemformassconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.expandAssemForMassConservationTest"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.linearExpansionPercent"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.linearExpansionPercent"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat attribute)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.name"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception attribute)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.name"]], "runtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.runTest"]], "test_annularhexoverlappingthickannularhex() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_AnnularHexOverlappingThickAnnularHex"]], "test_assemblyaxialexpansionexception() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_AssemblyAxialExpansionException"]], "test_assemblyaxialexpansionheight() (armi.reactor.converters.tests.test_axialexpansionchanger.testaxialexpansionheight method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight.test_AssemblyAxialExpansionHeight"]], "test_annularpinnotoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_annularPinNotOverlappingWithAnnulus"]], "test_annularpinoverlappingwithannuls() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_annularPinOverlappingWithAnnuls"]], "test_coldassemblyexpansion() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.test_coldAssemblyExpansion"]], "test_componentconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testmanagecoremesh method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh.test_componentConservation"]], "test_computethermalexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_computeThermalExpansionFactors"]], "test_construct() (armi.reactor.converters.tests.test_axialexpansionchanger.testaxiallinkhelper method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialLinkHelper.test_construct"]], "test_determinelinked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_determineLinked"]], "test_determinetargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponent"]], "test_determinetargetcomponentblockwithmultipleflags() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponentBlockWithMultipleFlags"]], "test_differentmultnotoverlapping() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_differentMultNotOverlapping"]], "test_emptyblocks() (armi.reactor.converters.tests.test_axialexpansionchanger.testblocklink method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestBlockLink.test_emptyBlocks"]], "test_getlinkedcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_getLinkedComponents"]], "test_getsolidcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testgetsolidcomponents method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents.test_getSolidComponents"]], "test_isfuellocked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isFuelLocked"]], "test_istopdummyblockpresent() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isTopDummyBlockPresent"]], "test_liquids() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_liquids"]], "test_managecoremesh() (armi.reactor.converters.tests.test_axialexpansionchanger.testmanagecoremesh method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh.test_manageCoreMesh"]], "test_manuallysettargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_manuallySetTargetComponent"]], "test_multiblock() (armi.reactor.converters.tests.test_axialexpansionchanger.testblocklink method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestBlockLink.test_multiBlock"]], "test_nomovementaclp() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_noMovementACLP"]], "test_onassembly() (armi.reactor.converters.tests.test_axialexpansionchanger.testblocklink method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestBlockLink.test_onAssembly"]], "test_overlappingsolidpins() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_overlappingSolidPins"]], "test_override() (armi.reactor.converters.tests.test_axialexpansionchanger.testaxiallinkhelper method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialLinkHelper.test_override"]], "test_prescribedexpansioncontractionconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_prescribedExpansionContractionConservation"]], "test_reset() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_reset"]], "test_setexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_setExpansionFactors"]], "test_singleblock() (armi.reactor.converters.tests.test_axialexpansionchanger.testblocklink method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestBlockLink.test_singleBlock"]], "test_solidpinnotoverlappingannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_solidPinNotOverlappingAnnulus"]], "test_solidpinoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_solidPinOverlappingWithAnnulus"]], "test_specifytargetcomponent_notfound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_NotFound"]], "test_specifytargetcomponent_singlesolid() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_singleSolid"]], "test_specifytargetcomponet_multiplefound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponet_MultipleFound"]], "test_targetcomponentmassconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_targetComponentMassConservation"]], "test_thermalexpansioncontractionconservation_complex() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_thermalExpansionContractionConservation_complex"]], "test_thermalexpansioncontractionconservation_simple() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_thermalExpansionContractionConservation_simple"]], "test_thinannularpinoverlappingwiththickannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_thinAnnularPinOverlappingWithThickAnnulus"]], "test_unshapedcomponentandcircle() (armi.reactor.converters.tests.test_axialexpansionchanger.testcomponentlinks method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestComponentLinks.test_unshapedComponentAndCircle"]], "test_updatecomponenttempsby1dtempfieldruntimeerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldRuntimeError"]], "test_updatecomponenttempsby1dtempfieldvalueerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[325, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldValueError"]], "testblockconverter (class in armi.reactor.converters.tests.test_blockconverter)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter"]], "testtocircles (class in armi.reactor.converters.tests.test_blockconverter)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestToCircles"]], "armi.reactor.converters.tests.test_blockconverter": [[326, "module-armi.reactor.converters.tests.test_blockConverter"]], "buildcontrolblockwithlinkednegativeareacomponent() (in module armi.reactor.converters.tests.test_blockconverter)": [[326, "armi.reactor.converters.tests.test_blockConverter.buildControlBlockWithLinkedNegativeAreaComponent"]], "buildsimplefuelblocknegativearea() (in module armi.reactor.converters.tests.test_blockconverter)": [[326, "armi.reactor.converters.tests.test_blockConverter.buildSimpleFuelBlockNegativeArea"]], "test_buildinsideduct() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_buildInsideDuct"]], "test_build_nthring() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_build_NthRing"]], "test_convert() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convert"]], "test_convertcartesianlatticewithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertCartesianLatticeWithFuelDriver"]], "test_converthexwithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriver"]], "test_converthexwithfueldriveronnegativecomponentareablock() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"]], "test_dissolveintonegativearea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveIntoNegativeArea"]], "test_dissolveintozeroarea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveIntoZeroArea"]], "test_dissolvelinerintoclad() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveLinerIntoClad"]], "test_dissolvemultiple() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveMultiple"]], "test_dissolvenegativearea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveNegativeArea"]], "test_dissolvewireintocoolant() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveWireIntoCoolant"]], "test_dissolvezeroarea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveZeroArea"]], "test_fromhex() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromHex"]], "test_fromringofrods() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[326, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromRingOfRods"]], "testedgeassemblychanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger"]], "testgeometryconverters (class in armi.reactor.converters.tests.test_geometryconverters)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters"]], "testhextorzconverter (class in armi.reactor.converters.tests.test_geometryconverters)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter"]], "testthirdcorehextofullcorechanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryconverters": [[327, "module-armi.reactor.converters.tests.test_geometryConverters"]], "test_addring() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_addRing"]], "test_convert() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_convert"]], "test_createhomogenizedrztblock() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_createHomogenizedRZTBlock"]], "test_edgeassemblies() (armi.reactor.converters.tests.test_geometryconverters.testedgeassemblychanger method)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger.test_edgeAssemblies"]], "test_getassembliesinsector() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_getAssembliesInSector"]], "test_growtofullcorefromthirdcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_growToFullCoreFromThirdCore"]], "test_initnewfullreactor() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_initNewFullReactor"]], "test_setnumberoffuelassems() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_setNumberOfFuelAssems"]], "test_skipgrowtofullcorewhenalreadyfullcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[327, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_skipGrowToFullCoreWhenAlreadyFullCore"]], "testrzreactormeshconverter (class in armi.reactor.converters.tests.test_meshconverters)": [[328, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshconverters": [[328, "module-armi.reactor.converters.tests.test_meshConverters"]], "test_meshbyringcompositionaxialbinslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[328, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsLargeCore"]], "test_meshbyringcompositionaxialbinssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[328, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsSmallCore"]], "test_meshbyringcompositionaxialcoordinateslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[328, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesLargeCore"]], "test_meshbyringcompositionaxialcoordinatessmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[328, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesSmallCore"]], "test_meshbyringcompositionaxialflagslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[328, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsLargeCore"]], "test_meshbyringcompositionaxialflagssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[328, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsSmallCore"]], "massconservationtests (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[329, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests"]], "testpintypeconverters (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[329, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pintypeblockconverters": [[329, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "test_adjustcladthicknessbyid() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[329, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByID"]], "test_adjustcladthicknessbyod() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[329, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByOD"]], "test_adjustsmeardensity() (armi.reactor.converters.tests.test_pintypeblockconverters.massconservationtests method)": [[329, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests.test_adjustSmearDensity"]], "dummyfluxoptions (class in armi.reactor.converters.tests.test_uniformmesh)": [[330, "armi.reactor.converters.tests.test_uniformMesh.DummyFluxOptions"]], "testassemblyuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh"]], "testcalcreationrates (class in armi.reactor.converters.tests.test_uniformmesh)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestCalcReationRates"]], "testconverterfactory (class in armi.reactor.converters.tests.test_uniformmesh)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory"]], "testgammauniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh"]], "testparamconversion (class in armi.reactor.converters.tests.test_uniformmesh)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion"]], "testuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh"]], "testuniformmeshcomponents (class in armi.reactor.converters.tests.test_uniformmesh)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents"]], "testuniformmeshgenerator (class in armi.reactor.converters.tests.test_uniformmesh)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator"]], "testuniformmeshnonuniformassemflags (class in armi.reactor.converters.tests.test_uniformmesh)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags"]], "applynonuniformheightdistribution() (in module armi.reactor.converters.tests.test_uniformmesh)": [[330, "armi.reactor.converters.tests.test_uniformMesh.applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformmesh": [[330, "module-armi.reactor.converters.tests.test_uniformMesh"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_applyStateToOriginal"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_applyStateToOriginal"]], "test_blueprintcopy() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshcomponents method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents.test_blueprintCopy"]], "test_calcreactionratesblocklist() (armi.reactor.converters.tests.test_uniformmesh.testcalcreationrates method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestCalcReationRates.test_calcReactionRatesBlockList"]], "test_clearassemblystate() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_clearAssemblyState"]], "test_computeaverageaxialmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_computeAverageAxialMesh"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_convertNumberDensities"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_convertNumberDensities"]], "test_converterfactory() (armi.reactor.converters.tests.test_uniformmesh.testconverterfactory method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory.test_converterFactory"]], "test_filtermesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filterMesh"]], "test_filteredtopandbottom() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filteredTopAndBottom"]], "test_generatecommonmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_generateCommonMesh"]], "test_makeassemuniformmeshparammappingsamemesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemUniformMeshParamMappingSameMesh"]], "test_makeassemwithuniformmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMesh"]], "test_makeassemwithuniformmeshsubmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMeshSubmesh"]], "test_reactorconversion() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshnonuniformassemflags method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags.test_reactorConversion"]], "test_setstatefromoverlaps() (armi.reactor.converters.tests.test_uniformmesh.testparamconversion method)": [[330, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion.test_setStateFromOverlaps"]], "gammauniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[331, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter"]], "neutronicsuniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[331, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter"]], "parammapper (class in armi.reactor.converters.uniformmesh)": [[331, "armi.reactor.converters.uniformMesh.ParamMapper"]], "uniformmeshgenerator (class in armi.reactor.converters.uniformmesh)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGenerator"]], "uniformmeshgeometryconverter (class in armi.reactor.converters.uniformmesh)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter"]], "applystatetooriginal() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.applyStateToOriginal"]], "armi.reactor.converters.uniformmesh": [[331, "module-armi.reactor.converters.uniformMesh"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[331, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[331, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.blockParamMappingCategories"]], "clearstateonassemblies() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.clearStateOnAssemblies"]], "convert() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.convert"]], "converterfactory() (in module armi.reactor.converters.uniformmesh)": [[331, "armi.reactor.converters.uniformMesh.converterFactory"]], "generatecommonmesh() (armi.reactor.converters.uniformmesh.uniformmeshgenerator method)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGenerator.generateCommonMesh"]], "initnewreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.initNewReactor"]], "makeassemwithuniformmesh() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.makeAssemWithUniformMesh"]], "paramgetter() (armi.reactor.converters.uniformmesh.parammapper method)": [[331, "armi.reactor.converters.uniformMesh.ParamMapper.paramGetter"]], "paramsetter() (armi.reactor.converters.uniformmesh.parammapper static method)": [[331, "armi.reactor.converters.uniformMesh.ParamMapper.paramSetter"]], "plotconvertedreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.plotConvertedReactor"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[331, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[331, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reactorParamMappingCategories"]], "reset() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reset"]], "setassemblystatefromoverlaps() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.setAssemblyStateFromOverlaps"]], "setnumberdensitiesfromoverlaps() (in module armi.reactor.converters.uniformmesh)": [[331, "armi.reactor.converters.uniformMesh.setNumberDensitiesFromOverlaps"]], "updatereactionrates() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[331, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.updateReactionRates"]], "core (class in armi.reactor.cores)": [[332, "armi.reactor.cores.Core"]], "add() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.add"]], "addmorenodes() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.addMoreNodes"]], "armi.reactor.cores": [[332, "module-armi.reactor.cores"]], "buildcircularringdictionary() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.buildCircularRingDictionary"]], "buildmanualzones() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.buildManualZones"]], "calcblockmaxes() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.calcBlockMaxes"]], "countblockswithflags() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.countBlocksWithFlags"]], "countfuelaxialblocks() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.countFuelAxialBlocks"]], "createassemblyoftype() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.createAssemblyOfType"]], "createfreshfeed() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.createFreshFeed"]], "findallaxialmeshpoints() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.findAllAxialMeshPoints"]], "findallazimeshpoints() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.findAllAziMeshPoints"]], "findallmeshpoints() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.findAllMeshPoints"]], "findallradmeshpoints() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.findAllRadMeshPoints"]], "findaxialmeshindexof() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.findAxialMeshIndexOf"]], "findneighbors() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.findNeighbors"]], "genassembliesaddedthiscycle() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.genAssembliesAddedThisCycle"]], "genblocksbylocname() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.genBlocksByLocName"]], "geomtype (armi.reactor.cores.core property)": [[332, "armi.reactor.cores.Core.geomType"]], "getallxssuffixes() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAllXsSuffixes"]], "getassemblies() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAssemblies"]], "getassembliesincircularring() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAssembliesInCircularRing"]], "getassembliesinring() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAssembliesInRing"]], "getassembliesinsquareorhexring() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAssembliesInSquareOrHexRing"]], "getassembliesoftype() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAssembliesOfType"]], "getassembliesonsymmetryline() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAssembliesOnSymmetryLine"]], "getassembly() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAssembly"]], "getassemblybyname() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAssemblyByName"]], "getassemblypitch() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAssemblyPitch"]], "getassemblywithassemnum() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAssemblyWithAssemNum"]], "getassemblywithstringlocation() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAssemblyWithStringLocation"]], "getavgtemp() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getAvgTemp"]], "getblockbyname() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getBlockByName"]], "getblocks() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getBlocks"]], "getblocksbyindices() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getBlocksByIndices"]], "getcoreradius() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getCoreRadius"]], "getfirstassembly() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getFirstAssembly"]], "getfirstblock() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getFirstBlock"]], "getfirstfuelblockaxialnode() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getFirstFuelBlockAxialNode"]], "getfluxvector() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getFluxVector"]], "getfuelbottomheight() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getFuelBottomHeight"]], "getlocationcontents() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getLocationContents"]], "getmaxassembliesinhexring() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getMaxAssembliesInHexRing"]], "getmaxblockparam() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getMaxBlockParam"]], "getmaxnumpins() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getMaxNumPins"]], "getminimumpercentfluxinfuel() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getMinimumPercentFluxInFuel"]], "getnozzletypes() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getNozzleTypes"]], "getnuclidecategories() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getNuclideCategories"]], "getnumassemblieswithallringsfilledout() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getNumAssembliesWithAllRingsFilledOut"]], "getnumenergygroups() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getNumEnergyGroups"]], "getnumhexrings() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getNumHexRings"]], "getnumrings() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getNumRings"]], "getscalarevolution() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getScalarEvolution"]], "gettotalblockparam() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.getTotalBlockParam"]], "growtofullcore() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.growToFullCore"]], "isfullcore (armi.reactor.cores.core property)": [[332, "armi.reactor.cores.Core.isFullCore"]], "lib (armi.reactor.cores.core property)": [[332, "armi.reactor.cores.Core.lib"]], "locateallassemblies() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.locateAllAssemblies"]], "makelocationlookup() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.makeLocationLookup"]], "normalizeinternalbookeeping() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.normalizeInternalBookeeping"]], "normalizenames() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.normalizeNames"]], "pdefs (armi.reactor.cores.core attribute)": [[332, "armi.reactor.cores.Core.pDefs"]], "paramcollectiontype (armi.reactor.cores.core attribute)": [[332, "armi.reactor.cores.Core.paramCollectionType"]], "powermultiplier (armi.reactor.cores.core property)": [[332, "armi.reactor.cores.Core.powerMultiplier"]], "processloading() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.processLoading"]], "r (armi.reactor.cores.core property)": [[332, "armi.reactor.cores.Core.r"]], "refassem (armi.reactor.cores.core property)": [[332, "armi.reactor.cores.Core.refAssem"]], "regenassemblylists() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.regenAssemblyLists"]], "removeassembliesinring() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.removeAssembliesInRing"]], "removeassembly() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.removeAssembly"]], "saveallflux() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.saveAllFlux"]], "setblockmassparams() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.setBlockMassParams"]], "setmovelist() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.setMoveList"]], "setoptionsfromcs() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.setOptionsFromCs"]], "setpitchuniform() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.setPitchUniform"]], "setpowerfromdensity() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.setPowerFromDensity"]], "setpowerifnecessary() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.setPowerIfNecessary"]], "sortassemsbyring() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.sortAssemsByRing"]], "summarizenuclidecategories() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.summarizeNuclideCategories"]], "summarizereactorstats() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.summarizeReactorStats"]], "symmetry (armi.reactor.cores.core property)": [[332, "armi.reactor.cores.Core.symmetry"]], "updateaxialmesh() (armi.reactor.cores.core method)": [[332, "armi.reactor.cores.Core.updateAxialMesh"]], "excorecollection (class in armi.reactor.excorestructure)": [[333, "armi.reactor.excoreStructure.ExcoreCollection"]], "excorestructure (class in armi.reactor.excorestructure)": [[333, "armi.reactor.excoreStructure.ExcoreStructure"]], "add() (armi.reactor.excorestructure.excorestructure method)": [[333, "armi.reactor.excoreStructure.ExcoreStructure.add"]], "armi.reactor.excorestructure": [[333, "module-armi.reactor.excoreStructure"]], "paramcollectiontype (armi.reactor.excorestructure.excorestructure attribute)": [[333, "armi.reactor.excoreStructure.ExcoreStructure.paramCollectionType"]], "r (armi.reactor.excorestructure.excorestructure property)": [[333, "armi.reactor.excoreStructure.ExcoreStructure.r"]], "a (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.A"]], "aclp (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.ACLP"]], "annular (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.ANNULAR"]], "axial (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.AXIAL"]], "b (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.B"]], "batchmassaddition (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.BATCHMASSADDITION"]], "blanket (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.BLANKET"]], "bond (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.BOND"]], "booster (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.BOOSTER"]], "c (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.C"]], "clad (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.CLAD"]], "control (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.CONTROL"]], "coolant (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.COOLANT"]], "core_barrel (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.CORE_BARREL"]], "d (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.D"]], "depletable (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.DEPLETABLE"]], "driver (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.DRIVER"]], "dspacerinside (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.DSPACERINSIDE"]], "duct (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.DUCT"]], "dummy (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.DUMMY"]], "e (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.E"]], "feed (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.FEED"]], "fission_chamber (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.FISSION_CHAMBER"]], "fuel (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.FUEL"]], "flags (class in armi.reactor.flags)": [[334, "armi.reactor.flags.Flags"]], "gap (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.GAP"]], "grid_plate (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.GRID_PLATE"]], "guide_tube (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.GUIDE_TUBE"]], "handling_socket (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.HANDLING_SOCKET"]], "high (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.HIGH"]], "igniter (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.IGNITER"]], "inlet_nozzle (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.INLET_NOZZLE"]], "inner (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.INNER"]], "intercoolant (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.INTERCOOLANT"]], "interductcoolant (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.INTERDUCTCOOLANT"]], "invalidflagserror": [[334, "armi.reactor.flags.InvalidFlagsError"]], "liner (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.LINER"]], "load_pad (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.LOAD_PAD"]], "low (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.LOW"]], "lower (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.LOWER"]], "material (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.MATERIAL"]], "medium (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.MEDIUM"]], "middle (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.MIDDLE"]], "moderator (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.MODERATOR"]], "moveable (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.MOVEABLE"]], "mox (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.MOX"]], "outer (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.OUTER"]], "pin (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.PIN"]], "plenum (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.PLENUM"]], "poison (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.POISON"]], "primary (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.PRIMARY"]], "radial (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.RADIAL"]], "reflector (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.REFLECTOR"]], "secondary (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.SECONDARY"]], "shield (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.SHIELD"]], "shield_block (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.SHIELD_BLOCK"]], "shutdown (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.SHUTDOWN"]], "skid (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.SKID"]], "slug (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.SLUG"]], "starter (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.STARTER"]], "structure (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.STRUCTURE"]], "target (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.TARGET"]], "tertiary (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.TERTIARY"]], "test (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.TEST"]], "ultimate (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.ULTIMATE"]], "upper (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.UPPER"]], "void (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.VOID"]], "wire (armi.reactor.flags.flags attribute)": [[334, "armi.reactor.flags.Flags.WIRE"]], "armi.reactor.flags": [[334, "module-armi.reactor.flags"]], "fromstring() (armi.reactor.flags.flags class method)": [[334, "armi.reactor.flags.Flags.fromString"]], "fromstringignoreerrors() (armi.reactor.flags.flags class method)": [[334, "armi.reactor.flags.Flags.fromStringIgnoreErrors"]], "tostring() (armi.reactor.flags.flags class method)": [[334, "armi.reactor.flags.Flags.toString"]], "boundarytype (class in armi.reactor.geometry)": [[335, "armi.reactor.geometry.BoundaryType"]], "cartesian (armi.reactor.geometry.geomtype attribute)": [[335, "armi.reactor.geometry.GeomType.CARTESIAN"]], "domaintype (class in armi.reactor.geometry)": [[335, "armi.reactor.geometry.DomainType"]], "eighth_core (armi.reactor.geometry.domaintype attribute)": [[335, "armi.reactor.geometry.DomainType.EIGHTH_CORE"]], "full_core (armi.reactor.geometry.domaintype attribute)": [[335, "armi.reactor.geometry.DomainType.FULL_CORE"]], "geomtype (class in armi.reactor.geometry)": [[335, "armi.reactor.geometry.GeomType"]], "hex (armi.reactor.geometry.geomtype attribute)": [[335, "armi.reactor.geometry.GeomType.HEX"]], "no_symmetry (armi.reactor.geometry.boundarytype attribute)": [[335, "armi.reactor.geometry.BoundaryType.NO_SYMMETRY"]], "null (armi.reactor.geometry.domaintype attribute)": [[335, "armi.reactor.geometry.DomainType.NULL"]], "periodic (armi.reactor.geometry.boundarytype attribute)": [[335, "armi.reactor.geometry.BoundaryType.PERIODIC"]], "quarter_core (armi.reactor.geometry.domaintype attribute)": [[335, "armi.reactor.geometry.DomainType.QUARTER_CORE"]], "reflective (armi.reactor.geometry.boundarytype attribute)": [[335, "armi.reactor.geometry.BoundaryType.REFLECTIVE"]], "rz (armi.reactor.geometry.geomtype attribute)": [[335, "armi.reactor.geometry.GeomType.RZ"]], "rzt (armi.reactor.geometry.geomtype attribute)": [[335, "armi.reactor.geometry.GeomType.RZT"]], "sixteenth_core (armi.reactor.geometry.domaintype attribute)": [[335, "armi.reactor.geometry.DomainType.SIXTEENTH_CORE"]], "symmetrytype (class in armi.reactor.geometry)": [[335, "armi.reactor.geometry.SymmetryType"]], "third_core (armi.reactor.geometry.domaintype attribute)": [[335, "armi.reactor.geometry.DomainType.THIRD_CORE"]], "valid_symmetry (armi.reactor.geometry.symmetrytype attribute)": [[335, "armi.reactor.geometry.SymmetryType.VALID_SYMMETRY"]], "armi.reactor.geometry": [[335, "module-armi.reactor.geometry"]], "checkvalidgeomsymmetrycombo() (in module armi.reactor.geometry)": [[335, "armi.reactor.geometry.checkValidGeomSymmetryCombo"]], "checkvalidsymmetry() (armi.reactor.geometry.symmetrytype method)": [[335, "armi.reactor.geometry.SymmetryType.checkValidSymmetry"]], "createvalidsymmetrystrings() (armi.reactor.geometry.symmetrytype class method)": [[335, "armi.reactor.geometry.SymmetryType.createValidSymmetryStrings"]], "fromany() (armi.reactor.geometry.boundarytype class method)": [[335, "armi.reactor.geometry.BoundaryType.fromAny"]], "fromany() (armi.reactor.geometry.domaintype class method)": [[335, "armi.reactor.geometry.DomainType.fromAny"]], "fromany() (armi.reactor.geometry.geomtype class method)": [[335, "armi.reactor.geometry.GeomType.fromAny"]], "fromany() (armi.reactor.geometry.symmetrytype class method)": [[335, "armi.reactor.geometry.SymmetryType.fromAny"]], "fromstr() (armi.reactor.geometry.boundarytype class method)": [[335, "armi.reactor.geometry.BoundaryType.fromStr"]], "fromstr() (armi.reactor.geometry.domaintype class method)": [[335, "armi.reactor.geometry.DomainType.fromStr"]], "fromstr() (armi.reactor.geometry.geomtype class method)": [[335, "armi.reactor.geometry.GeomType.fromStr"]], "fromstr() (armi.reactor.geometry.symmetrytype class method)": [[335, "armi.reactor.geometry.SymmetryType.fromStr"]], "hassymmetry() (armi.reactor.geometry.boundarytype method)": [[335, "armi.reactor.geometry.BoundaryType.hasSymmetry"]], "label (armi.reactor.geometry.boundarytype property)": [[335, "armi.reactor.geometry.BoundaryType.label"]], "label (armi.reactor.geometry.domaintype property)": [[335, "armi.reactor.geometry.DomainType.label"]], "label (armi.reactor.geometry.geomtype property)": [[335, "armi.reactor.geometry.GeomType.label"]], "symmetryfactor() (armi.reactor.geometry.domaintype method)": [[335, "armi.reactor.geometry.DomainType.symmetryFactor"]], "symmetryfactor() (armi.reactor.geometry.symmetrytype method)": [[335, "armi.reactor.geometry.SymmetryType.symmetryFactor"]], "armi.reactor.grids": [[336, "module-armi.reactor.grids"]], "locatorlabeltoindices() (in module armi.reactor.grids)": [[336, "armi.reactor.grids.locatorLabelToIndices"]], "axialgrid (class in armi.reactor.grids.axial)": [[337, "armi.reactor.grids.axial.AxialGrid"]], "armi.reactor.grids.axial": [[337, "module-armi.reactor.grids.axial"]], "armiobject (armi.reactor.grids.axial.axialgrid attribute)": [[337, "armi.reactor.grids.axial.AxialGrid.armiObject"]], "fromncells() (armi.reactor.grids.axial.axialgrid class method)": [[337, "armi.reactor.grids.axial.AxialGrid.fromNCells"]], "getindicesfromringandpos() (armi.reactor.grids.axial.axialgrid static method)": [[337, "armi.reactor.grids.axial.AxialGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.axial.axialgrid static method)": [[337, "armi.reactor.grids.axial.AxialGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.axial.axialgrid static method)": [[337, "armi.reactor.grids.axial.AxialGrid.getPositionsInRing"]], "getsymmetricequivalents() (armi.reactor.grids.axial.axialgrid static method)": [[337, "armi.reactor.grids.axial.AxialGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.axial.axialgrid static method)": [[337, "armi.reactor.grids.axial.AxialGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.axial.axialgrid static method)": [[337, "armi.reactor.grids.axial.AxialGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.axial.axialgrid property)": [[337, "armi.reactor.grids.axial.AxialGrid.pitch"]], "cartesiangrid (class in armi.reactor.grids.cartesian)": [[338, "armi.reactor.grids.cartesian.CartesianGrid"]], "armi.reactor.grids.cartesian": [[338, "module-armi.reactor.grids.cartesian"]], "armiobject (armi.reactor.grids.cartesian.cartesiangrid attribute)": [[338, "armi.reactor.grids.cartesian.CartesianGrid.armiObject"]], "changepitch() (armi.reactor.grids.cartesian.cartesiangrid method)": [[338, "armi.reactor.grids.cartesian.CartesianGrid.changePitch"]], "fromrectangle() (armi.reactor.grids.cartesian.cartesiangrid class method)": [[338, "armi.reactor.grids.cartesian.CartesianGrid.fromRectangle"]], "getindicesfromringandpos() (armi.reactor.grids.cartesian.cartesiangrid static method)": [[338, "armi.reactor.grids.cartesian.CartesianGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.cartesian.cartesiangrid method)": [[338, "armi.reactor.grids.cartesian.CartesianGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.cartesian.cartesiangrid method)": [[338, "armi.reactor.grids.cartesian.CartesianGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.cartesian.cartesiangrid method)": [[338, "armi.reactor.grids.cartesian.CartesianGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.cartesian.cartesiangrid method)": [[338, "armi.reactor.grids.cartesian.CartesianGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.cartesian.cartesiangrid method)": [[338, "armi.reactor.grids.cartesian.CartesianGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.cartesian.cartesiangrid method)": [[338, "armi.reactor.grids.cartesian.CartesianGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.cartesian.cartesiangrid property)": [[338, "armi.reactor.grids.cartesian.CartesianGrid.pitch"]], "armi.reactor.grids.constants": [[339, "module-armi.reactor.grids.constants"]], "grid (class in armi.reactor.grids.grid)": [[340, "armi.reactor.grids.grid.Grid"]], "armi.reactor.grids.grid": [[340, "module-armi.reactor.grids.grid"]], "armiobject (armi.reactor.grids.grid.grid attribute)": [[340, "armi.reactor.grids.grid.Grid.armiObject"]], "backup() (armi.reactor.grids.grid.grid method)": [[340, "armi.reactor.grids.grid.Grid.backUp"]], "geomtype (armi.reactor.grids.grid.grid property)": [[340, "armi.reactor.grids.grid.Grid.geomType"]], "getcellbase() (armi.reactor.grids.grid.grid method)": [[340, "armi.reactor.grids.grid.Grid.getCellBase"]], "getcelltop() (armi.reactor.grids.grid.grid method)": [[340, "armi.reactor.grids.grid.Grid.getCellTop"]], "getcoordinates() (armi.reactor.grids.grid.grid method)": [[340, "armi.reactor.grids.grid.Grid.getCoordinates"]], "getlabel() (armi.reactor.grids.grid.grid static method)": [[340, "armi.reactor.grids.grid.Grid.getLabel"]], "getsymmetricequivalents() (armi.reactor.grids.grid.grid method)": [[340, "armi.reactor.grids.grid.Grid.getSymmetricEquivalents"]], "isaxialonly (armi.reactor.grids.grid.grid property)": [[340, "armi.reactor.grids.grid.Grid.isAxialOnly"]], "items() (armi.reactor.grids.grid.grid method)": [[340, "armi.reactor.grids.grid.Grid.items"]], "locatorindomain() (armi.reactor.grids.grid.grid method)": [[340, "armi.reactor.grids.grid.Grid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.grid.grid method)": [[340, "armi.reactor.grids.grid.Grid.overlapsWhichSymmetryLine"]], "reduce() (armi.reactor.grids.grid.grid method)": [[340, "armi.reactor.grids.grid.Grid.reduce"]], "restorebackup() (armi.reactor.grids.grid.grid method)": [[340, "armi.reactor.grids.grid.Grid.restoreBackup"]], "symmetry (armi.reactor.grids.grid.grid property)": [[340, "armi.reactor.grids.grid.Grid.symmetry"]], "hexgrid (class in armi.reactor.grids.hexagonal)": [[341, "armi.reactor.grids.hexagonal.HexGrid"]], "armi.reactor.grids.hexagonal": [[341, "module-armi.reactor.grids.hexagonal"]], "armiobject (armi.reactor.grids.hexagonal.hexgrid attribute)": [[341, "armi.reactor.grids.hexagonal.HexGrid.armiObject"]], "changepitch() (armi.reactor.grids.hexagonal.hexgrid method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.changePitch"]], "cornersup (armi.reactor.grids.hexagonal.hexgrid property)": [[341, "armi.reactor.grids.hexagonal.HexGrid.cornersUp"]], "frompitch() (armi.reactor.grids.hexagonal.hexgrid static method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.fromPitch"]], "generatesortedhexlocationlist() (armi.reactor.grids.hexagonal.hexgrid method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.generateSortedHexLocationList"]], "getindicesfromringandpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.getIndicesFromRingAndPos"]], "getlabel() (armi.reactor.grids.hexagonal.hexgrid method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.getLabel"]], "getminimumrings() (armi.reactor.grids.hexagonal.hexgrid static method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.hexagonal.hexgrid method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.hexagonal.hexgrid static method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.hexagonal.hexgrid method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.hexagonal.hexgrid method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.getSymmetricEquivalents"]], "indicestoringpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.indicesToRingPos"]], "isinfirstthird() (armi.reactor.grids.hexagonal.hexgrid method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.isInFirstThird"]], "locatorindomain() (armi.reactor.grids.hexagonal.hexgrid method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.hexagonal.hexgrid method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.hexagonal.hexgrid property)": [[341, "armi.reactor.grids.hexagonal.HexGrid.pitch"]], "rotateindex() (armi.reactor.grids.hexagonal.hexgrid method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.rotateIndex"]], "trianglecoords() (armi.reactor.grids.hexagonal.hexgrid method)": [[341, "armi.reactor.grids.hexagonal.HexGrid.triangleCoords"]], "coordinatelocation (class in armi.reactor.grids.locations)": [[342, "armi.reactor.grids.locations.CoordinateLocation"]], "indexlocation (class in armi.reactor.grids.locations)": [[342, "armi.reactor.grids.locations.IndexLocation"]], "locationbase (class in armi.reactor.grids.locations)": [[342, "armi.reactor.grids.locations.LocationBase"]], "multiindexlocation (class in armi.reactor.grids.locations)": [[342, "armi.reactor.grids.locations.MultiIndexLocation"]], "addingisvalid() (in module armi.reactor.grids.locations)": [[342, "armi.reactor.grids.locations.addingIsValid"]], "append() (armi.reactor.grids.locations.multiindexlocation method)": [[342, "armi.reactor.grids.locations.MultiIndexLocation.append"]], "armi.reactor.grids.locations": [[342, "module-armi.reactor.grids.locations"]], "associate() (armi.reactor.grids.locations.locationbase method)": [[342, "armi.reactor.grids.locations.LocationBase.associate"]], "associate() (armi.reactor.grids.locations.multiindexlocation method)": [[342, "armi.reactor.grids.locations.MultiIndexLocation.associate"]], "detachedcopy() (armi.reactor.grids.locations.indexlocation method)": [[342, "armi.reactor.grids.locations.IndexLocation.detachedCopy"]], "detachedcopy() (armi.reactor.grids.locations.multiindexlocation method)": [[342, "armi.reactor.grids.locations.MultiIndexLocation.detachedCopy"]], "distanceto() (armi.reactor.grids.locations.indexlocation method)": [[342, "armi.reactor.grids.locations.IndexLocation.distanceTo"]], "extend() (armi.reactor.grids.locations.multiindexlocation method)": [[342, "armi.reactor.grids.locations.MultiIndexLocation.extend"]], "getcompleteindices() (armi.reactor.grids.locations.coordinatelocation method)": [[342, "armi.reactor.grids.locations.CoordinateLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.indexlocation method)": [[342, "armi.reactor.grids.locations.IndexLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.multiindexlocation method)": [[342, "armi.reactor.grids.locations.MultiIndexLocation.getCompleteIndices"]], "getglobalcellbase() (armi.reactor.grids.locations.coordinatelocation method)": [[342, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellBase"]], "getglobalcellbase() (armi.reactor.grids.locations.indexlocation method)": [[342, "armi.reactor.grids.locations.IndexLocation.getGlobalCellBase"]], "getglobalcelltop() (armi.reactor.grids.locations.coordinatelocation method)": [[342, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellTop"]], "getglobalcelltop() (armi.reactor.grids.locations.indexlocation method)": [[342, "armi.reactor.grids.locations.IndexLocation.getGlobalCellTop"]], "getglobalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[342, "armi.reactor.grids.locations.IndexLocation.getGlobalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.coordinatelocation method)": [[342, "armi.reactor.grids.locations.CoordinateLocation.getLocalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[342, "armi.reactor.grids.locations.IndexLocation.getLocalCoordinates"]], "getringpos() (armi.reactor.grids.locations.indexlocation method)": [[342, "armi.reactor.grids.locations.IndexLocation.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.locations.indexlocation method)": [[342, "armi.reactor.grids.locations.IndexLocation.getSymmetricEquivalents"]], "grid (armi.reactor.grids.locations.locationbase property)": [[342, "armi.reactor.grids.locations.LocationBase.grid"]], "i (armi.reactor.grids.locations.locationbase property)": [[342, "armi.reactor.grids.locations.LocationBase.i"]], "indices (armi.reactor.grids.locations.indexlocation property)": [[342, "armi.reactor.grids.locations.IndexLocation.indices"]], "indices (armi.reactor.grids.locations.locationbase property)": [[342, "armi.reactor.grids.locations.LocationBase.indices"]], "indices (armi.reactor.grids.locations.multiindexlocation property)": [[342, "armi.reactor.grids.locations.MultiIndexLocation.indices"]], "j (armi.reactor.grids.locations.locationbase property)": [[342, "armi.reactor.grids.locations.LocationBase.j"]], "k (armi.reactor.grids.locations.locationbase property)": [[342, "armi.reactor.grids.locations.LocationBase.k"]], "parentlocation (armi.reactor.grids.locations.indexlocation property)": [[342, "armi.reactor.grids.locations.IndexLocation.parentLocation"]], "pop() (armi.reactor.grids.locations.multiindexlocation method)": [[342, "armi.reactor.grids.locations.MultiIndexLocation.pop"]], "gridparameters (class in armi.reactor.grids.structuredgrid)": [[343, "armi.reactor.grids.structuredGrid.GridParameters"]], "structuredgrid (class in armi.reactor.grids.structuredgrid)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid"]], "armi.reactor.grids.structuredgrid": [[343, "module-armi.reactor.grids.structuredGrid"]], "armiobject (armi.reactor.grids.structuredgrid.structuredgrid attribute)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.armiObject"]], "backup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.backUp"]], "bounds (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[343, "armi.reactor.grids.structuredGrid.GridParameters.bounds"]], "geomtype (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[343, "armi.reactor.grids.structuredGrid.GridParameters.geomType"]], "getaboveandbelowcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getAboveAndBelowCellIndices"]], "getallindices() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getAllIndices"]], "getbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getBounds"]], "getcellbase() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getCellBase"]], "getcelltop() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getCellTop"]], "getcoordinates() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getCoordinates"]], "getindexbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getIndexBounds"]], "getindicesfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getIndicesFromRingAndPos"]], "getlocatorfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getLocatorFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.getRingPos"]], "isaxialonly (armi.reactor.grids.structuredgrid.structuredgrid property)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.isAxialOnly"]], "items() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.items"]], "offset (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[343, "armi.reactor.grids.structuredGrid.GridParameters.offset"]], "offset (armi.reactor.grids.structuredgrid.structuredgrid property)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.offset"]], "pitch (armi.reactor.grids.structuredgrid.structuredgrid property)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.pitch"]], "reduce() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.reduce"]], "restorebackup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[343, "armi.reactor.grids.structuredGrid.StructuredGrid.restoreBackup"]], "symmetry (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[343, "armi.reactor.grids.structuredGrid.GridParameters.symmetry"]], "unitsteplimits (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[343, "armi.reactor.grids.structuredGrid.GridParameters.unitStepLimits"]], "unitsteps (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[343, "armi.reactor.grids.structuredGrid.GridParameters.unitSteps"]], "thetarzgrid (class in armi.reactor.grids.thetarz)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid"]], "armi.reactor.grids.thetarz": [[344, "module-armi.reactor.grids.thetarz"]], "armiobject (armi.reactor.grids.thetarz.thetarzgrid attribute)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid.armiObject"]], "fromgeom() (armi.reactor.grids.thetarz.thetarzgrid class method)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid.fromGeom"]], "getcoordinates() (armi.reactor.grids.thetarz.thetarzgrid method)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid.getCoordinates"]], "getindicesfromringandpos() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.thetarz.thetarzgrid method)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.thetarz.thetarzgrid method)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid.getSymmetricEquivalents"]], "indicesofbounds() (armi.reactor.grids.thetarz.thetarzgrid method)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid.indicesOfBounds"]], "locatorindomain() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid.overlapsWhichSymmetryLine"]], "pitch() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[344, "armi.reactor.grids.thetarz.ThetaRZGrid.pitch"]], "armi.reactor.parameters": [[345, "module-armi.reactor.parameters"]], "reset() (in module armi.reactor.parameters)": [[345, "armi.reactor.parameters.reset"]], "parameterdefinitionerror": [[346, "armi.reactor.parameters.exceptions.ParameterDefinitionError"]], "parametererror": [[346, "armi.reactor.parameters.exceptions.ParameterError"]], "unknownparametererror": [[346, "armi.reactor.parameters.exceptions.UnknownParameterError"]], "armi.reactor.parameters.exceptions": [[346, "module-armi.reactor.parameters.exceptions"]], "global_serial_num (in module armi.reactor.parameters.parametercollections)": [[347, "armi.reactor.parameters.parameterCollections.GLOBAL_SERIAL_NUM"]], "parametercollection (class in armi.reactor.parameters.parametercollections)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection"]], "applyallparameters() (in module armi.reactor.parameters.parametercollections)": [[347, "armi.reactor.parameters.parameterCollections.applyAllParameters"]], "applyparameters() (armi.reactor.parameters.parametercollections.parametercollection class method)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.applyParameters"]], "armi.reactor.parameters.parametercollections": [[347, "module-armi.reactor.parameters.parameterCollections"]], "backup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.backUp"]], "collectpluginparameters() (in module armi.reactor.parameters.parametercollections)": [[347, "armi.reactor.parameters.parameterCollections.collectPluginParameters"]], "get() (armi.reactor.parameters.parametercollections.parametercollection method)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.get"]], "getsyncdata() (armi.reactor.parameters.parametercollections.parametercollection method)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.getSyncData"]], "items() (armi.reactor.parameters.parametercollections.parametercollection method)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.items"]], "keys() (armi.reactor.parameters.parametercollections.parametercollection method)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.keys"]], "pdefs (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.pDefs"]], "paramdefs (armi.reactor.parameters.parametercollections.parametercollection property)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.paramDefs"]], "restorebackup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.restoreBackup"]], "serialnum (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.serialNum"]], "update() (armi.reactor.parameters.parametercollections.parametercollection method)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.update"]], "values() (armi.reactor.parameters.parametercollections.parametercollection method)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.values"]], "where() (armi.reactor.parameters.parametercollections.parametercollection method)": [[347, "armi.reactor.parameters.parameterCollections.ParameterCollection.where"]], "average (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.ParamLocation.AVERAGE"]], "bottom (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.ParamLocation.BOTTOM"]], "centroid (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CENTROID"]], "children (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CHILDREN"]], "corners (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CORNERS"]], "category (class in armi.reactor.parameters.parameterdefinitions)": [[348, "armi.reactor.parameters.parameterDefinitions.Category"]], "edges (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.ParamLocation.EDGES"]], "max (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.ParamLocation.MAX"]], "nodefault (class in armi.reactor.parameters.parameterdefinitions)": [[348, "armi.reactor.parameters.parameterDefinitions.NoDefault"]], "paramlocation (class in armi.reactor.parameters.parameterdefinitions)": [[348, "armi.reactor.parameters.parameterDefinitions.ParamLocation"]], "parameter (class in armi.reactor.parameters.parameterdefinitions)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter"]], "parameterbuilder (class in armi.reactor.parameters.parameterdefinitions)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder"]], "parameterdefinitioncollection (class in armi.reactor.parameters.parameterdefinitions)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection"]], "serializer (class in armi.reactor.parameters.parameterdefinitions)": [[348, "armi.reactor.parameters.parameterDefinitions.Serializer"]], "top (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.ParamLocation.TOP"]], "volume_integrated (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.ParamLocation.VOLUME_INTEGRATED"]], "add() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.add"]], "armi.reactor.parameters.parameterdefinitions": [[348, "module-armi.reactor.parameters.parameterDefinitions"]], "assigninblueprints (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.assignInBlueprints"]], "assigned (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.assigned"]], "associateparameterdefinitioncollection() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.associateParameterDefinitionCollection"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.atLocation"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.atLocation"]], "backup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.backUp"]], "bynameandcollectiontype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndCollectionType"]], "bynameandtype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndType"]], "categories (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.categories"]], "categories (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.categories"]], "collectiontype (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.collectionType"]], "createbuilder() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.createBuilder"]], "cumulative (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.cumulative"]], "cumulativeovercycle (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.cumulativeOverCycle"]], "defparam() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.defParam"]], "default (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.default"]], "depletion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.depletion"]], "description (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.description"]], "detailedaxialexpansion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.detailedAxialExpansion"]], "extend() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.extend"]], "fieldname (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.fieldName"]], "fluxquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.fluxQuantities"]], "fortype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.forType"]], "gamma (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.gamma"]], "hascategory() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.hasCategory"]], "incategory() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.inCategory"]], "isnumpyarray() (in module armi.reactor.parameters.parameterdefinitions)": [[348, "armi.reactor.parameters.parameterDefinitions.isNumpyArray"]], "isnumpyf32array() (in module armi.reactor.parameters.parameterdefinitions)": [[348, "armi.reactor.parameters.parameterDefinitions.isNumpyF32Array"]], "items() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.items"]], "location (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.location"]], "lock() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.lock"]], "locked (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.locked"]], "multigroupquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.multiGroupQuantities"]], "name (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.name"]], "names (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.names"]], "neutronics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.neutronics"]], "pack() (armi.reactor.parameters.parameterdefinitions.serializer static method)": [[348, "armi.reactor.parameters.parameterDefinitions.Serializer.pack"]], "pinquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.pinQuantities"]], "reactivitycoefficients (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.reactivityCoefficients"]], "resetassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.resetAssignmentFlag"]], "restorebackup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.restoreBackup"]], "retainonreplacement (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.retainOnReplacement"]], "savetodb (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.saveToDB"]], "serializer (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.serializer"]], "setassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.setAssignmentFlag"]], "setter() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.setter"]], "since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.since"]], "thermalhydraulics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Category.thermalHydraulics"]], "towritetodb() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.toWriteToDB"]], "unchanged_since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[348, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.unchanged_since"]], "units (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Parameter.units"]], "unpack() (armi.reactor.parameters.parameterdefinitions.serializer class method)": [[348, "armi.reactor.parameters.parameterDefinitions.Serializer.unpack"]], "version (armi.reactor.parameters.parameterdefinitions.serializer attribute)": [[348, "armi.reactor.parameters.parameterDefinitions.Serializer.version"]], "resolveparametersmeta (class in armi.reactor.parameters.resolvecollections)": [[349, "armi.reactor.parameters.resolveCollections.ResolveParametersMeta"]], "armi.reactor.parameters.resolvecollections": [[349, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorparameters": [[350, "module-armi.reactor.reactorParameters"]], "definecoreparameters() (in module armi.reactor.reactorparameters)": [[350, "armi.reactor.reactorParameters.defineCoreParameters"]], "definereactorparameters() (in module armi.reactor.reactorparameters)": [[350, "armi.reactor.reactorParameters.defineReactorParameters"]], "makeparametersreadonly() (in module armi.reactor.reactorparameters)": [[350, "armi.reactor.reactorParameters.makeParametersReadOnly"]], "reactor (class in armi.reactor.reactors)": [[351, "armi.reactor.reactors.Reactor"]], "add() (armi.reactor.reactors.reactor method)": [[351, "armi.reactor.reactors.Reactor.add"]], "armi.reactor.reactors": [[351, "module-armi.reactor.reactors"]], "factory() (in module armi.reactor.reactors)": [[351, "armi.reactor.reactors.factory"]], "incrementassemnum() (armi.reactor.reactors.reactor method)": [[351, "armi.reactor.reactors.Reactor.incrementAssemNum"]], "loadfromcs() (in module armi.reactor.reactors)": [[351, "armi.reactor.reactors.loadFromCs"]], "normalizenames() (armi.reactor.reactors.reactor method)": [[351, "armi.reactor.reactors.Reactor.normalizeNames"]], "pdefs (armi.reactor.reactors.reactor attribute)": [[351, "armi.reactor.reactors.Reactor.pDefs"]], "paramcollectiontype (armi.reactor.reactors.reactor attribute)": [[351, "armi.reactor.reactors.Reactor.paramCollectionType"]], "spentfuelpool (class in armi.reactor.spentfuelpool)": [[352, "armi.reactor.spentFuelPool.SpentFuelPool"]], "add() (armi.reactor.spentfuelpool.spentfuelpool method)": [[352, "armi.reactor.spentFuelPool.SpentFuelPool.add"]], "armi.reactor.spentfuelpool": [[352, "module-armi.reactor.spentFuelPool"]], "getassembly() (armi.reactor.spentfuelpool.spentfuelpool method)": [[352, "armi.reactor.spentFuelPool.SpentFuelPool.getAssembly"]], "normalizenames() (armi.reactor.spentfuelpool.spentfuelpool method)": [[352, "armi.reactor.spentFuelPool.SpentFuelPool.normalizeNames"]], "paramcollectiontype (armi.reactor.spentfuelpool.spentfuelpool attribute)": [[352, "armi.reactor.spentFuelPool.SpentFuelPool.paramCollectionType"]], "root_tag (armi.reactor.systemlayoutinput.systemlayoutinput attribute)": [[353, "armi.reactor.systemLayoutInput.SystemLayoutInput.ROOT_TAG"]], "systemlayoutinput (class in armi.reactor.systemlayoutinput)": [[353, "armi.reactor.systemLayoutInput.SystemLayoutInput"]], "armi.reactor.systemlayoutinput": [[353, "module-armi.reactor.systemLayoutInput"]], "fromreactor() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[353, "armi.reactor.systemLayoutInput.SystemLayoutInput.fromReactor"]], "growtofullcore() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[353, "armi.reactor.systemLayoutInput.SystemLayoutInput.growToFullCore"]], "loadfromcs() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[353, "armi.reactor.systemLayoutInput.SystemLayoutInput.loadFromCs"]], "modifyeqpaths() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[353, "armi.reactor.systemLayoutInput.SystemLayoutInput.modifyEqPaths"]], "readgeomfromfile() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[353, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromFile"]], "readgeomfromstream() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[353, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromStream"]], "togridblueprints() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[353, "armi.reactor.systemLayoutInput.SystemLayoutInput.toGridBlueprints"]], "writegeom() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[353, "armi.reactor.systemLayoutInput.SystemLayoutInput.writeGeom"]], "armi.reactor.tests": [[354, "module-armi.reactor.tests"]], "annularfueltestcase (class in armi.reactor.tests.test_assemblies)": [[355, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase"]], "assemblyinreactor_testcase (class in armi.reactor.tests.test_assemblies)": [[355, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase"]], "assembly_testcase (class in armi.reactor.tests.test_assemblies)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase"]], "materialinassembly_testcase (class in armi.reactor.tests.test_assemblies)": [[355, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase"]], "armi.reactor.tests.test_assemblies": [[355, "module-armi.reactor.tests.test_assemblies"]], "buildtestassemblies() (in module armi.reactor.tests.test_assemblies)": [[355, "armi.reactor.tests.test_assemblies.buildTestAssemblies"]], "maketestassembly() (in module armi.reactor.tests.test_assemblies)": [[355, "armi.reactor.tests.test_assemblies.makeTestAssembly"]], "test_uthzrmaterial() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_UThZrMaterial"]], "test_add() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_add"]], "test_adjustresolution() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_adjustResolution"]], "test_append() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_append"]], "test_areacheck() (armi.reactor.tests.test_assemblies.annularfueltestcase method)": [[355, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase.test_areaCheck"]], "test_assem_block_types() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_assem_block_types"]], "test_assem_hex_type() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_assem_hex_type"]], "test_averageplenumtemperature() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_averagePlenumTemperature"]], "test_calcavgparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcAvgParam"]], "test_calctotalparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcTotalParam"]], "test_calculatezcoords() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calculateZCoords"]], "test_carestiancoordinates() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_carestianCoordinates"]], "test_countblocksoftype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_countBlocksOfType"]], "test_duplicate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_duplicate"]], "test_extend() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_extend"]], "test_getage() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAge"]], "test_getarea() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getArea"]], "test_getaxialmesh() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAxialMesh"]], "test_getbindexfromzindex() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBIndexFromZIndex"]], "test_getblockdata() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlockData"]], "test_getblocks() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocks"]], "test_getblocksandz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksAndZ"]], "test_getblocksbetweenelevations() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksBetweenElevations"]], "test_getdim() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDim"]], "test_getdominantmaterial() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDominantMaterial"]], "test_getelevationboundariesbyblocktype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getElevationBoundariesByBlockType"]], "test_getelevationsmatchingparamvalue() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getElevationsMatchingParamValue"]], "test_getfirstblock() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlock"]], "test_getfirstblockbytype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlockByType"]], "test_getfissilemass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFissileMass"]], "test_getheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getHeight"]], "test_getlocation() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getLocation"]], "test_getmass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMass"]], "test_getmaxparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMaxParam"]], "test_getname() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getName"]], "test_getnum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getNum"]], "test_getparamvaluesatz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getParamValuesAtZ"]], "test_getreactiveheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getReactiveHeight"]], "test_gettotalheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getTotalHeight"]], "test_getvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getVolume"]], "test_hascontinuouscoolantchannel() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasContinuousCoolantChannel"]], "test_hasflags() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasFlags"]], "test_isonwhichsymmetryline() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_isOnWhichSymmetryLine"]], "test_iter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iter"]], "test_iteration() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iteration"]], "test_len() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_len"]], "test_makeaxialsnaplist() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_makeAxialSnapList"]], "test_moveto() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_moveTo"]], "test_notesparameter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_notesParameter"]], "test_pinplenumvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_pinPlenumVolume"]], "test_reattach() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reattach"]], "test_reestablishblockorder() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reestablishBlockOrder"]], "test_renameblocksaccordingtoassemblynum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_renameBlocksAccordingToAssemblyNum"]], "test_rotate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_rotate"]], "test_scaleparamswhenmoved() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_scaleParamsWhenMoved"]], "test_snapaxialmeshtoreference() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_snapAxialMeshToReference"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockigniter() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[355, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[355, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "test_sortnolocator() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_sortNoLocator"]], "test_updatefromassembly() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[355, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_updateFromAssembly"]], "blockenergydepositionconstants (class in armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants"]], "blockinputheightstests (class in armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.BlockInputHeightsTests"]], "block_testcase (class in armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase"]], "cartesianblock_testcase (class in armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase"]], "hexblock_testcase (class in armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase"]], "massconservationtests (class in armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.MassConservationTests"]], "pitch (armi.reactor.tests.test_blocks.cartesianblock_testcase attribute)": [[356, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.PITCH"]], "testdetailedndensupdate (class in armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate"]], "testhexblockorientation (class in armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.TestHexBlockOrientation"]], "testnegativevolume (class in armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.TestNegativeVolume"]], "thrzblock_testcase (class in armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase"]], "applydummydata() (in module armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.applyDummyData"]], "armi.reactor.tests.test_blocks": [[356, "module-armi.reactor.tests.test_blocks"]], "buildsimplefuelblock() (in module armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.buildSimpleFuelBlock"]], "getcomponentdata() (in module armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.getComponentData"]], "getlocalcoordinatesblockbounds() (armi.reactor.tests.test_blocks.testhexblockorientation static method)": [[356, "armi.reactor.tests.test_blocks.TestHexBlockOrientation.getLocalCoordinatesBlockBounds"]], "loadtestblock() (in module armi.reactor.tests.test_blocks)": [[356, "armi.reactor.tests.test_blocks.loadTestBlock"]], "test_100_getpinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_100_getPinPitch"]], "test_101_getpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_101_getPitch"]], "test_102_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_102_setPitch"]], "test_106_getareafractions() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_106_getAreaFractions"]], "test_27b_setenvgroup() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_27b_setEnvGroup"]], "test_add() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_add"]], "test_adjustdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustDensity"]], "test_adjustuenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustUEnrich"]], "test_axial() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_axial"]], "test_block_dims() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_block_dims"]], "test_cleardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_clearDensity"]], "test_coldmass() (armi.reactor.tests.test_blocks.massconservationtests method)": [[356, "armi.reactor.tests.test_blocks.MassConservationTests.test_coldMass"]], "test_completeinitialloading() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_completeInitialLoading"]], "test_component_type() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_component_type"]], "test_consistentareawithoverlappingcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentAreaWithOverlappingComponents"]], "test_consistentmassdensityvolumebetweencoldblockandcoldcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"]], "test_consistentmassdensityvolumebetweenhotblockandhotcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"]], "test_coords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_coords"]], "test_dimensionductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[356, "armi.reactor.tests.test_blocks.MassConservationTests.test_dimensionDuctHeatup"]], "test_duplicate() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_duplicate"]], "test_expandallelementalstoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandAllElementalsToIsotopics"]], "test_expandelementaltoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandElementalToIsotopics"]], "test_foundreactor() (armi.reactor.tests.test_blocks.blockinputheightstests method)": [[356, "armi.reactor.tests.test_blocks.BlockInputHeightsTests.test_foundReactor"]], "test_getarea() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getArea"]], "test_getcaptureenergygenerationconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[356, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getCaptureEnergyGenerationConstants"]], "test_getcartesiangrid() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getCartesianGrid"]], "test_getcomponent() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponent"]], "test_getcomponentareafrac() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentAreaFrac"]], "test_getcomponentbyname() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentByName"]], "test_getcomponentnames() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentNames"]], "test_getcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponents"]], "test_getcomponentsinlinkedorder() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsInLinkedOrder"]], "test_getcomponentsofmaterial() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfMaterial"]], "test_getcomponentsofshape() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfShape"]], "test_getdimensions() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getDimensions"]], "test_getductpitch() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getDuctPitch"]], "test_getfissilemassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFissileMassEnrich"]], "test_getfissionenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[356, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getFissionEnergyDepositionConstants"]], "test_getflowarea() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowArea"]], "test_getflowareaperpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowAreaPerPin"]], "test_getgammaenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[356, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getGammaEnergyDepositionConstants"]], "test_gethmdens() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHMDens"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getHydraulicDiameter"]], "test_getmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMass"]], "test_getmasses() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMasses"]], "test_getmfp() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMfp"]], "test_getmicrosuffix() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMicroSuffix"]], "test_getneutronenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[356, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getNeutronEnergyDepositionConstants"]], "test_getnumcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumComponents"]], "test_getnumpins() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumPins"]], "test_getnumpins() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getNumPins"]], "test_getnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberDensity"]], "test_getnumberofatoms() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberOfAtoms"]], "test_getpincenterflattoflat() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCenterFlatToFlat"]], "test_getpincoords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCoords"]], "test_getpincoordsandlocsagree() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCoordsAndLocsAgree"]], "test_getpinlocations() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinLocations"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchsquare() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchSquare"]], "test_getplenumpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPlenumPin"]], "test_getpu() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPu"]], "test_getreactionrates() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getReactionRates"]], "test_getsmeardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensity"]], "test_getsmeardensityedgecases() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensityEdgeCases"]], "test_getsmeardensitymultipleliner() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensityMultipleLiner"]], "test_getsortedcomponentsinsideofcomponentclad() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentClad"]], "test_getsortedcomponentsinsideofcomponentduct() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentDuct"]], "test_getthetarzgrid() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getThetaRZGrid"]], "test_gettotalenergygenerationconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[356, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getTotalEnergyGenerationConstants"]], "test_gettotalmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalMass"]], "test_gettotalndens() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalNDens"]], "test_gettype() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getType"]], "test_geturaniummassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumMassEnrich"]], "test_geturaniumnumenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumNumEnrich"]], "test_getvolumefractionwithoutparent() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionWithoutParent"]], "test_getvolumefractionswithzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionsWithZeroHeight"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getWettedPerimeter"]], "test_getwettedperimetercircularinnerduct() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getWettedPerimeterCircularInnerDuct"]], "test_getwettedperimeterhexinnerduct() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getWettedPerimeterHexInnerDuct"]], "test_getxstype() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_getXsType"]], "test_gridcreation() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridCreation"]], "test_gridnotcreatedmultiplemultiplicities() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNotCreatedMultipleMultiplicities"]], "test_gridnumpinsandlocations() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNumPinsAndLocations"]], "test_hascomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasComponents"]], "test_hasflags() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasFlags"]], "test_haspinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasPinPitch"]], "test_heightexpansiondifferences() (armi.reactor.tests.test_blocks.massconservationtests method)": [[356, "armi.reactor.tests.test_blocks.MassConservationTests.test_heightExpansionDifferences"]], "test_homogenizedmixture() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_homogenizedMixture"]], "test_masscladheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[356, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCladHeatup"]], "test_massconsistency() (armi.reactor.tests.test_blocks.massconservationtests method)": [[356, "armi.reactor.tests.test_blocks.MassConservationTests.test_massConsistency"]], "test_masscoolheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[356, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCoolHeatup"]], "test_massductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[356, "armi.reactor.tests.test_blocks.MassConservationTests.test_massDuctHeatup"]], "test_massfuelheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[356, "armi.reactor.tests.test_blocks.MassConservationTests.test_massFuelHeatup"]], "test_mergewithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_mergeWithBlock"]], "test_negativevolume() (armi.reactor.tests.test_blocks.testnegativevolume method)": [[356, "armi.reactor.tests.test_blocks.TestNegativeVolume.test_negativeVolume"]], "test_noblueprints() (armi.reactor.tests.test_blocks.blockinputheightstests method)": [[356, "armi.reactor.tests.test_blocks.BlockInputHeightsTests.test_noBlueprints"]], "test_pinmgfluxes() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_pinMgFluxes"]], "test_radii() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_radii"]], "test_removemass() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_removeMass"]], "test_replaceblockwithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_replaceBlockWithBlock"]], "test_retainstate() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_retainState"]], "test_setbulimitinfo() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_setBuLimitInfo"]], "test_setimportantparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_setImportantParams"]], "test_setlinpowbypin() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLinPowByPin"]], "test_setlocation() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLocation"]], "test_setmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_setMass"]], "test_setnumberdensities() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensity"]], "test_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_setPitch"]], "test_settype() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_setType"]], "test_setzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_setZeroHeight"]], "test_symmetryfactor() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_symmetryFactor"]], "test_theta() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_theta"]], "test_timenodeparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[356, "armi.reactor.tests.test_blocks.Block_TestCase.test_timeNodeParams"]], "test_updatedetailedndens() (armi.reactor.tests.test_blocks.testdetailedndensupdate method)": [[356, "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate.test_updateDetailedNdens"]], "test_validatereactorcornersup() (armi.reactor.tests.test_blocks.testhexblockorientation method)": [[356, "armi.reactor.tests.test_blocks.TestHexBlockOrientation.test_validateReactorCornersUp"]], "test_validatereactorflatsup() (armi.reactor.tests.test_blocks.testhexblockorientation method)": [[356, "armi.reactor.tests.test_blocks.TestHexBlockOrientation.test_validateReactorFlatsUp"]], "test_verifyblockdims() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[356, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_verifyBlockDims"]], "testcircle (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestCircle"]], "testcomponent (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestComponent"]], "testcomponentexpansion (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestComponentExpansion"]], "testcomponentfactory (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestComponentFactory"]], "testcube (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestCube"]], "testderivedshape (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestDerivedShape"]], "testderivedshapegetarea (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestDerivedShapeGetArea"]], "testdifferentialradialsegment (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestDifferentialRadialSegment"]], "testgeneralcomponents (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestGeneralComponents"]], "testhelix (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestHelix"]], "testhexholedcircle (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestHexHoledCircle"]], "testhexagon (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestHexagon"]], "testholedhexagon (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestHoledHexagon"]], "testholedrectangle (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestHoledRectangle"]], "testholedsquare (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestHoledSquare"]], "testmaterialadjustments (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestMaterialAdjustments"]], "testnullcomponent (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestNullComponent"]], "testpinquantities (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestPinQuantities"]], "testradialsegment (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestRadialSegment"]], "testrectangle (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestRectangle"]], "testshapedcomponent (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestShapedComponent"]], "testsolidrectangle (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestSolidRectangle"]], "testsphere (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestSphere"]], "testsquare (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestSquare"]], "testtriangle (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestTriangle"]], "testunshapedcomponent (class in armi.reactor.tests.test_components)": [[357, "armi.reactor.tests.test_components.TestUnshapedComponent"]], "armi.reactor.tests.test_components": [[357, "module-armi.reactor.tests.test_components"]], "coldouterdiameter (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[357, "armi.reactor.tests.test_components.TestComponentExpansion.coldOuterDiameter"]], "componentcls (armi.reactor.tests.test_components.testcircle attribute)": [[357, "armi.reactor.tests.test_components.TestCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcomponent attribute)": [[357, "armi.reactor.tests.test_components.TestComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcube attribute)": [[357, "armi.reactor.tests.test_components.TestCube.componentCls"]], "componentcls (armi.reactor.tests.test_components.testderivedshape attribute)": [[357, "armi.reactor.tests.test_components.TestDerivedShape.componentCls"]], "componentcls (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[357, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[357, "armi.reactor.tests.test_components.TestGeneralComponents.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhelix attribute)": [[357, "armi.reactor.tests.test_components.TestHelix.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[357, "armi.reactor.tests.test_components.TestHexHoledCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexagon attribute)": [[357, "armi.reactor.tests.test_components.TestHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedhexagon attribute)": [[357, "armi.reactor.tests.test_components.TestHoledHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedrectangle attribute)": [[357, "armi.reactor.tests.test_components.TestHoledRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedsquare attribute)": [[357, "armi.reactor.tests.test_components.TestHoledSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testnullcomponent attribute)": [[357, "armi.reactor.tests.test_components.TestNullComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testradialsegment attribute)": [[357, "armi.reactor.tests.test_components.TestRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testrectangle attribute)": [[357, "armi.reactor.tests.test_components.TestRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[357, "armi.reactor.tests.test_components.TestSolidRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsphere attribute)": [[357, "armi.reactor.tests.test_components.TestSphere.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsquare attribute)": [[357, "armi.reactor.tests.test_components.TestSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testtriangle attribute)": [[357, "armi.reactor.tests.test_components.TestTriangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[357, "armi.reactor.tests.test_components.TestUnshapedComponent.componentCls"]], "componentdims (armi.reactor.tests.test_components.testcircle attribute)": [[357, "armi.reactor.tests.test_components.TestCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testcube attribute)": [[357, "armi.reactor.tests.test_components.TestCube.componentDims"]], "componentdims (armi.reactor.tests.test_components.testderivedshape attribute)": [[357, "armi.reactor.tests.test_components.TestDerivedShape.componentDims"]], "componentdims (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[357, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[357, "armi.reactor.tests.test_components.TestGeneralComponents.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhelix attribute)": [[357, "armi.reactor.tests.test_components.TestHelix.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[357, "armi.reactor.tests.test_components.TestHexHoledCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexagon attribute)": [[357, "armi.reactor.tests.test_components.TestHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedhexagon attribute)": [[357, "armi.reactor.tests.test_components.TestHoledHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedrectangle attribute)": [[357, "armi.reactor.tests.test_components.TestHoledRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedsquare attribute)": [[357, "armi.reactor.tests.test_components.TestHoledSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testradialsegment attribute)": [[357, "armi.reactor.tests.test_components.TestRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testrectangle attribute)": [[357, "armi.reactor.tests.test_components.TestRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[357, "armi.reactor.tests.test_components.TestSolidRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsphere attribute)": [[357, "armi.reactor.tests.test_components.TestSphere.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsquare attribute)": [[357, "armi.reactor.tests.test_components.TestSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testtriangle attribute)": [[357, "armi.reactor.tests.test_components.TestTriangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[357, "armi.reactor.tests.test_components.TestUnshapedComponent.componentDims"]], "componentmassindependentofinputtemp() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[357, "armi.reactor.tests.test_components.TestComponentExpansion.componentMassIndependentOfInputTemp"]], "componentmaterial (armi.reactor.tests.test_components.testderivedshape attribute)": [[357, "armi.reactor.tests.test_components.TestDerivedShape.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[357, "armi.reactor.tests.test_components.TestGeneralComponents.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[357, "armi.reactor.tests.test_components.TestUnshapedComponent.componentMaterial"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedrectangle attribute)": [[357, "armi.reactor.tests.test_components.TestHoledRectangle.dimsToTestExpansion"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedsquare attribute)": [[357, "armi.reactor.tests.test_components.TestHoledSquare.dimsToTestExpansion"]], "expansionconservationcoldheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[357, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationColdHeightDefined"]], "expansionconservationhotheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[357, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationHotHeightDefined"]], "getcirclefueldict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[357, "armi.reactor.tests.test_components.TestComponentFactory.getCircleFuelDict"]], "getcirclevoiddict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[357, "armi.reactor.tests.test_components.TestComponentFactory.getCircleVoidDict"]], "runexpansiontests() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[357, "armi.reactor.tests.test_components.TestComponentExpansion.runExpansionTests"]], "setclassdims() (armi.reactor.tests.test_components.testholedrectangle method)": [[357, "armi.reactor.tests.test_components.TestHoledRectangle.setClassDims"]], "setclassdims() (armi.reactor.tests.test_components.testholedsquare method)": [[357, "armi.reactor.tests.test_components.TestHoledSquare.setClassDims"]], "tcold (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[357, "armi.reactor.tests.test_components.TestComponentExpansion.tCold"]], "thot (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[357, "armi.reactor.tests.test_components.TestComponentExpansion.tHot"]], "twarm (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[357, "armi.reactor.tests.test_components.TestComponentExpansion.tWarm"]], "test_b4cexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[357, "armi.reactor.tests.test_components.TestComponentExpansion.test_B4CExpansion"]], "test_ht9expansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[357, "armi.reactor.tests.test_components.TestComponentExpansion.test_HT9Expansion"]], "test_uzrexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[357, "armi.reactor.tests.test_components.TestComponentExpansion.test_UZrExpansion"]], "test_adjustmassenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[357, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassEnrichment"]], "test_adjustmassfrac_u() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[357, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U"]], "test_adjustmassfrac_u235() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[357, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U235"]], "test_adjustmassfrac_clear_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[357, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_clear_ZR"]], "test_adjustmassfrac_invalid() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[357, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_invalid"]], "test_adjustmassfrac_leave_same() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[357, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_leave_same"]], "test_adjustmassfrac_set_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[357, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_set_ZR"]], "test_badcomponentname() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_badComponentName"]], "test_changenumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_changeNumberDensities"]], "test_cmp() (armi.reactor.tests.test_components.testnullcomponent method)": [[357, "armi.reactor.tests.test_components.TestNullComponent.test_cmp"]], "test_componentinitializationandduplication() (armi.reactor.tests.test_components.testcomponentfactory method)": [[357, "armi.reactor.tests.test_components.TestComponentFactory.test_componentInitializationAndDuplication"]], "test_componentinteractionslinkingbydimensions() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingByDimensions"]], "test_componentinteractionslinkingbysubtraction() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingBySubtraction"]], "test_component_less_than() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[357, "armi.reactor.tests.test_components.TestUnshapedComponent.test_component_less_than"]], "test_computevolume() (armi.reactor.tests.test_components.testderivedshape method)": [[357, "armi.reactor.tests.test_components.TestDerivedShape.test_computeVolume"]], "test_density() (armi.reactor.tests.test_components.testshapedcomponent method)": [[357, "armi.reactor.tests.test_components.TestShapedComponent.test_density"]], "test_densityconsistent() (armi.reactor.tests.test_components.testshapedcomponent method)": [[357, "armi.reactor.tests.test_components.TestShapedComponent.test_densityConsistent"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[357, "armi.reactor.tests.test_components.TestHelix.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[357, "armi.reactor.tests.test_components.TestHexHoledCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[357, "armi.reactor.tests.test_components.TestHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[357, "armi.reactor.tests.test_components.TestHoledHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[357, "armi.reactor.tests.test_components.TestHoledRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[357, "armi.reactor.tests.test_components.TestRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[357, "armi.reactor.tests.test_components.TestSolidRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[357, "armi.reactor.tests.test_components.TestSquare.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[357, "armi.reactor.tests.test_components.TestTriangle.test_dimensionThermallyExpands"]], "test_factory() (armi.reactor.tests.test_components.testcomponentfactory method)": [[357, "armi.reactor.tests.test_components.TestComponentFactory.test_factory"]], "test_factorybadshapename() (armi.reactor.tests.test_components.testcomponentfactory method)": [[357, "armi.reactor.tests.test_components.TestComponentFactory.test_factoryBadShapeName"]], "test_finalizeloaddbadjuststd() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[357, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_finalizeLoadDBAdjustsTD"]], "test_fromcomponent() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[357, "armi.reactor.tests.test_components.TestUnshapedComponent.test_fromComponent"]], "test_fuelmass() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_fuelMass"]], "test_getarea() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhelix method)": [[357, "armi.reactor.tests.test_components.TestHelix.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexholedcircle method)": [[357, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexagon method)": [[357, "armi.reactor.tests.test_components.TestHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedhexagon method)": [[357, "armi.reactor.tests.test_components.TestHoledHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedrectangle method)": [[357, "armi.reactor.tests.test_components.TestHoledRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testrectangle method)": [[357, "armi.reactor.tests.test_components.TestRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsolidrectangle method)": [[357, "armi.reactor.tests.test_components.TestSolidRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsquare method)": [[357, "armi.reactor.tests.test_components.TestSquare.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testtriangle method)": [[357, "armi.reactor.tests.test_components.TestTriangle.test_getArea"]], "test_getareacoldtrue() (armi.reactor.tests.test_components.testderivedshapegetarea method)": [[357, "armi.reactor.tests.test_components.TestDerivedShapeGetArea.test_getAreaColdTrue"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testderivedshape method)": [[357, "armi.reactor.tests.test_components.TestDerivedShape.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[357, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhelix method)": [[357, "armi.reactor.tests.test_components.TestHelix.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[357, "armi.reactor.tests.test_components.TestHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[357, "armi.reactor.tests.test_components.TestHoledHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[357, "armi.reactor.tests.test_components.TestHoledRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testradialsegment method)": [[357, "armi.reactor.tests.test_components.TestRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[357, "armi.reactor.tests.test_components.TestRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsolidrectangle method)": [[357, "armi.reactor.tests.test_components.TestSolidRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsquare method)": [[357, "armi.reactor.tests.test_components.TestSquare.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[357, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getBoundingCircleOuterDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhelix method)": [[357, "armi.reactor.tests.test_components.TestHelix.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexholedcircle method)": [[357, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[357, "armi.reactor.tests.test_components.TestHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[357, "armi.reactor.tests.test_components.TestHoledHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[357, "armi.reactor.tests.test_components.TestHoledRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedsquare method)": [[357, "armi.reactor.tests.test_components.TestHoledSquare.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[357, "armi.reactor.tests.test_components.TestRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testsquare method)": [[357, "armi.reactor.tests.test_components.TestSquare.test_getCircleInnerDiameter"]], "test_getcomponentarea() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[357, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getComponentArea"]], "test_getdimension() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_getDimension"]], "test_getdimension() (armi.reactor.tests.test_components.testnullcomponent method)": [[357, "armi.reactor.tests.test_components.TestNullComponent.test_getDimension"]], "test_getenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[357, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_getEnrichment"]], "test_getnumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_getNumberDensities"]], "test_getperimeter() (armi.reactor.tests.test_components.testhexagon method)": [[357, "armi.reactor.tests.test_components.TestHexagon.test_getPerimeter"]], "test_getpinmgfluxes() (armi.reactor.tests.test_components.testpinquantities method)": [[357, "armi.reactor.tests.test_components.TestPinQuantities.test_getPinMgFluxes"]], "test_getthermalexpansionfactorconservedmassbylinearexpansionpercent() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"]], "test_getvolume() (armi.reactor.tests.test_components.testcube method)": [[357, "armi.reactor.tests.test_components.TestCube.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[357, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testradialsegment method)": [[357, "armi.reactor.tests.test_components.TestRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testsphere method)": [[357, "armi.reactor.tests.test_components.TestSphere.test_getVolume"]], "test_initializecomponentmaterial() (armi.reactor.tests.test_components.testcomponent method)": [[357, "armi.reactor.tests.test_components.TestComponent.test_initializeComponentMaterial"]], "test_invalidcoolantcomponentassignment() (armi.reactor.tests.test_components.testcomponentfactory method)": [[357, "armi.reactor.tests.test_components.TestComponentFactory.test_invalidCoolantComponentAssignment"]], "test_negativearea() (armi.reactor.tests.test_components.testrectangle method)": [[357, "armi.reactor.tests.test_components.TestRectangle.test_negativeArea"]], "test_negativearea() (armi.reactor.tests.test_components.testsquare method)": [[357, "armi.reactor.tests.test_components.TestSquare.test_negativeArea"]], "test_negativevolume() (armi.reactor.tests.test_components.testcube method)": [[357, "armi.reactor.tests.test_components.TestCube.test_negativeVolume"]], "test_nonzero() (armi.reactor.tests.test_components.testnullcomponent method)": [[357, "armi.reactor.tests.test_components.TestNullComponent.test_nonzero"]], "test_preservemassduringthermalexpansion() (armi.reactor.tests.test_components.testshapedcomponent method)": [[357, "armi.reactor.tests.test_components.TestShapedComponent.test_preserveMassDuringThermalExpansion"]], "test_setmassfrac() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[357, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFrac"]], "test_setmassfraconcomponentmaterial() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[357, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFracOnComponentMaterial"]], "test_setnumberdensities() (armi.reactor.tests.test_components.testcomponent method)": [[357, "armi.reactor.tests.test_components.TestComponent.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_components.testcomponent method)": [[357, "armi.reactor.tests.test_components.TestComponent.test_setNumberDensity"]], "test_solid_material() (armi.reactor.tests.test_components.testcomponent method)": [[357, "armi.reactor.tests.test_components.TestComponent.test_solid_material"]], "test_theoreticaldensitysetter() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_theoreticalDensitySetter"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[357, "armi.reactor.tests.test_components.TestCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcube method)": [[357, "armi.reactor.tests.test_components.TestCube.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[357, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[357, "armi.reactor.tests.test_components.TestHelix.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[357, "armi.reactor.tests.test_components.TestHexHoledCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[357, "armi.reactor.tests.test_components.TestHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[357, "armi.reactor.tests.test_components.TestHoledHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[357, "armi.reactor.tests.test_components.TestHoledRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedsquare method)": [[357, "armi.reactor.tests.test_components.TestHoledSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testradialsegment method)": [[357, "armi.reactor.tests.test_components.TestRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[357, "armi.reactor.tests.test_components.TestRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[357, "armi.reactor.tests.test_components.TestSolidRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsphere method)": [[357, "armi.reactor.tests.test_components.TestSphere.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[357, "armi.reactor.tests.test_components.TestSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[357, "armi.reactor.tests.test_components.TestTriangle.test_thermallyExpands"]], "test_updatedims() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[357, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_updateDims"]], "test_validparameters() (armi.reactor.tests.test_components.testhelix method)": [[357, "armi.reactor.tests.test_components.TestHelix.test_validParameters"]], "test_volumeafterclearcache() (armi.reactor.tests.test_components.testshapedcomponent method)": [[357, "armi.reactor.tests.test_components.TestShapedComponent.test_volumeAfterClearCache"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.A"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.A"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.B"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.B"]], "bprime (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.BPRIME"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.C"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.C"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.D"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.D"]], "dummycomposite (class in armi.reactor.tests.test_composites)": [[358, "armi.reactor.tests.test_composites.DummyComposite"]], "dummyleaf (class in armi.reactor.tests.test_composites)": [[358, "armi.reactor.tests.test_composites.DummyLeaf"]], "mockbp (class in armi.reactor.tests.test_composites)": [[358, "armi.reactor.tests.test_composites.MockBP"]], "testcompositepattern (class in armi.reactor.tests.test_composites)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern"]], "testcompositetree (class in armi.reactor.tests.test_composites)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree"]], "testflagserializer (class in armi.reactor.tests.test_composites)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer"]], "testflagserializer.testflagsa (class in armi.reactor.tests.test_composites)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA"]], "testflagserializer.testflagsb (class in armi.reactor.tests.test_composites)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB"]], "testgetreactionratedict (class in armi.reactor.tests.test_composites)": [[358, "armi.reactor.tests.test_composites.TestGetReactionRateDict"]], "testmiscmethods (class in armi.reactor.tests.test_composites)": [[358, "armi.reactor.tests.test_composites.TestMiscMethods"]], "activenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[358, "armi.reactor.tests.test_composites.MockBP.activeNuclides"]], "allnuclidesinproblem (armi.reactor.tests.test_composites.mockbp attribute)": [[358, "armi.reactor.tests.test_composites.MockBP.allNuclidesInProblem"]], "armi.reactor.tests.test_composites": [[358, "module-armi.reactor.tests.test_composites"]], "blueprintyaml (armi.reactor.tests.test_composites.testcompositetree attribute)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree.blueprintYaml"]], "customisotopics (armi.reactor.tests.test_composites.mockbp attribute)": [[358, "armi.reactor.tests.test_composites.MockBP.customIsotopics"]], "elementstoexpand (armi.reactor.tests.test_composites.mockbp attribute)": [[358, "armi.reactor.tests.test_composites.MockBP.elementsToExpand"]], "getboundingcircleouterdiameter() (armi.reactor.tests.test_composites.dummyleaf method)": [[358, "armi.reactor.tests.test_composites.DummyLeaf.getBoundingCircleOuterDiameter"]], "getchildren() (armi.reactor.tests.test_composites.dummyleaf method)": [[358, "armi.reactor.tests.test_composites.DummyLeaf.getChildren"]], "getchildrenwithflags() (armi.reactor.tests.test_composites.dummyleaf method)": [[358, "armi.reactor.tests.test_composites.DummyLeaf.getChildrenWithFlags"]], "getdummyparamdefs() (in module armi.reactor.tests.test_composites)": [[358, "armi.reactor.tests.test_composites.getDummyParamDefs"]], "inactivenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[358, "armi.reactor.tests.test_composites.MockBP.inactiveNuclides"]], "itercomponents() (armi.reactor.tests.test_composites.dummyleaf method)": [[358, "armi.reactor.tests.test_composites.DummyLeaf.iterComponents"]], "pdefs (armi.reactor.tests.test_composites.dummycomposite attribute)": [[358, "armi.reactor.tests.test_composites.DummyComposite.pDefs"]], "pdefs (armi.reactor.tests.test_composites.dummyleaf attribute)": [[358, "armi.reactor.tests.test_composites.DummyLeaf.pDefs"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummycomposite attribute)": [[358, "armi.reactor.tests.test_composites.DummyComposite.paramCollectionType"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummyleaf attribute)": [[358, "armi.reactor.tests.test_composites.DummyLeaf.paramCollectionType"]], "test_arechildernoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_areChildernOfType"]], "test_composite() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_composite"]], "test_constituentreport() (armi.reactor.tests.test_composites.testcompositetree method)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree.test_constituentReport"]], "test_containsatleastonechildoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsAtLeastOneChildOfType"]], "test_containsheavymetal() (armi.reactor.tests.test_composites.testmiscmethods method)": [[358, "armi.reactor.tests.test_composites.TestMiscMethods.test_containsHeavyMetal"]], "test_containsonlychildrenoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsOnlyChildrenOfType"]], "test_copyparamsfrom() (armi.reactor.tests.test_composites.testmiscmethods method)": [[358, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsFrom"]], "test_copyparamstochildren() (armi.reactor.tests.test_composites.testmiscmethods method)": [[358, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsToChildren"]], "test_dimensionreport() (armi.reactor.tests.test_composites.testmiscmethods method)": [[358, "armi.reactor.tests.test_composites.TestMiscMethods.test_dimensionReport"]], "test_expandlfps() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_expandLFPs"]], "test_flagconversion() (armi.reactor.tests.test_composites.testflagserializer method)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagConversion"]], "test_flagserialization() (armi.reactor.tests.test_composites.testflagserializer method)": [[358, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagSerialization"]], "test_getatomicweight() (armi.reactor.tests.test_composites.testmiscmethods method)": [[358, "armi.reactor.tests.test_composites.TestMiscMethods.test_getAtomicWeight"]], "test_getboundingcirlceouterdiameter() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_getBoundingCirlceOuterDiameter"]], "test_getchildren() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_getChildren"]], "test_getchildrenincludematerials() (armi.reactor.tests.test_composites.testcompositetree method)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree.test_getChildrenIncludeMaterials"]], "test_getfpmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFPMass"]], "test_getfissilemass() (armi.reactor.tests.test_composites.testcompositetree method)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFissileMass"]], "test_getfuelmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFuelMass"]], "test_gethmmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree.test_getHMMass"]], "test_getintegratedmgflux() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_getIntegratedMgFlux"]], "test_getlumpedfissionproductsifnecessarynullcase() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_getLumpedFissionProductsIfNecessaryNullCase"]], "test_getmaxparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMaxParam"]], "test_getminparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMinParam"]], "test_getname() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_getName"]], "test_getnuclides() (armi.reactor.tests.test_composites.testcompositetree method)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree.test_getNuclides"]], "test_getnumberdensities() (armi.reactor.tests.test_composites.testmiscmethods method)": [[358, "armi.reactor.tests.test_composites.TestMiscMethods.test_getNumberDensities"]], "test_getnumberdensitieswithexpandedfissionproducts() (armi.reactor.tests.test_composites.testmiscmethods method)": [[358, "armi.reactor.tests.test_composites.TestMiscMethods.test_getNumberDensitiesWithExpandedFissionProducts"]], "test_getparamnames() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_getParamNames"]], "test_getreactionratedict() (armi.reactor.tests.test_composites.testgetreactionratedict method)": [[358, "armi.reactor.tests.test_composites.TestGetReactionRateDict.test_getReactionRateDict"]], "test_getreactionrates() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_getReactionRates"]], "test_hasflags() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlags"]], "test_hasflagsnotypespecified() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsNoTypeSpecified"]], "test_hasflagssubstring() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsSubstring"]], "test_itercomponents() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_iterComponents"]], "test_namecontains() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_nameContains"]], "test_nucspec() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_nucSpec"]], "test_ordering() (armi.reactor.tests.test_composites.testcompositetree method)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree.test_ordering"]], "test_requireslumpedfissionproducts() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_requiresLumpedFissionProducts"]], "test_setchildrenlumpedfissionproducts() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_setChildrenLumpedFissionProducts"]], "test_setmass() (armi.reactor.tests.test_composites.testmiscmethods method)": [[358, "armi.reactor.tests.test_composites.TestMiscMethods.test_setMass"]], "test_sort() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_sort"]], "test_summing() (armi.reactor.tests.test_composites.testcompositetree method)": [[358, "armi.reactor.tests.test_composites.TestCompositeTree.test_summing"]], "test_syncparameters() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_syncParameters"]], "test_updatevolume() (armi.reactor.tests.test_composites.testcompositepattern method)": [[358, "armi.reactor.tests.test_composites.TestCompositePattern.test_updateVolume"]], "testexcorecollection (class in armi.reactor.tests.test_excorestructures)": [[359, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection"]], "testexcorestructure (class in armi.reactor.tests.test_excorestructures)": [[359, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure"]], "testspentfuelpool (class in armi.reactor.tests.test_excorestructures)": [[359, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool"]], "armi.reactor.tests.test_excorestructures": [[359, "module-armi.reactor.tests.test_excoreStructures"]], "test_add() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[359, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_add"]], "test_add() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[359, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_add"]], "test_addlikeattribute() (armi.reactor.tests.test_excorestructures.testexcorecollection method)": [[359, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection.test_addLikeAttribute"]], "test_addlikedict() (armi.reactor.tests.test_excorestructures.testexcorecollection method)": [[359, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection.test_addLikeDict"]], "test_constructor() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[359, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_constructor"]], "test_constructor() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[359, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_constructor"]], "test_getassembly() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[359, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_getAssembly"]], "test_getnextlocation() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[359, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_getNextLocation"]], "test_normalizenames() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[359, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_normalizeNames"]], "test_parentreactor() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[359, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_parentReactor"]], "test_representation() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[359, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_representation"]], "test_representation() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[359, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_representation"]], "test_updatenumberofcolumns() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[359, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_updateNumberOfColumns"]], "testflags (class in armi.reactor.tests.test_flags)": [[360, "armi.reactor.tests.test_flags.TestFlags"]], "armi.reactor.tests.test_flags": [[360, "module-armi.reactor.tests.test_flags"]], "test_convertsstringswithnonflags() (armi.reactor.tests.test_flags.testflags method)": [[360, "armi.reactor.tests.test_flags.TestFlags.test_convertsStringsWithNonFlags"]], "test_defaultisfalse() (armi.reactor.tests.test_flags.testflags method)": [[360, "armi.reactor.tests.test_flags.TestFlags.test_defaultIsFalse"]], "test_flagsdefinedwithnumbers() (armi.reactor.tests.test_flags.testflags method)": [[360, "armi.reactor.tests.test_flags.TestFlags.test_flagsDefinedWithNumbers"]], "test_flagstoandfromstring() (armi.reactor.tests.test_flags.testflags method)": [[360, "armi.reactor.tests.test_flags.TestFlags.test_flagsToAndFromString"]], "test_fromstring() (armi.reactor.tests.test_flags.testflags method)": [[360, "armi.reactor.tests.test_flags.TestFlags.test_fromString"]], "test_fromstringstrict() (armi.reactor.tests.test_flags.testflags method)": [[360, "armi.reactor.tests.test_flags.TestFlags.test_fromStringStrict"]], "test_fromstringwithnumbers() (armi.reactor.tests.test_flags.testflags method)": [[360, "armi.reactor.tests.test_flags.TestFlags.test_fromStringWithNumbers"]], "test_ispickleable() (armi.reactor.tests.test_flags.testflags method)": [[360, "armi.reactor.tests.test_flags.TestFlags.test_isPickleable"]], "test_lookup() (armi.reactor.tests.test_flags.testflags method)": [[360, "armi.reactor.tests.test_flags.TestFlags.test_lookup"]], "test_tostringalphabetical() (armi.reactor.tests.test_flags.testflags method)": [[360, "armi.reactor.tests.test_flags.TestFlags.test_toStringAlphabetical"]], "testgeomtype (class in armi.reactor.tests.test_geometry)": [[361, "armi.reactor.tests.test_geometry.TestGeomType"]], "testsymmetrytype (class in armi.reactor.tests.test_geometry)": [[361, "armi.reactor.tests.test_geometry.TestSymmetryType"]], "testsystemlayoutinput (class in armi.reactor.tests.test_geometry)": [[361, "armi.reactor.tests.test_geometry.TestSystemLayoutInput"]], "testsystemlayoutinputtrz (class in armi.reactor.tests.test_geometry)": [[361, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry": [[361, "module-armi.reactor.tests.test_geometry"]], "test_symmetryfactor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[361, "armi.reactor.tests.test_geometry.TestSymmetryType.test_SymmetryFactor"]], "test_trzyamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[361, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_TRZyamlIO"]], "test_asciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[361, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_asciimap"]], "test_baseconstructor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[361, "armi.reactor.tests.test_geometry.TestSymmetryType.test_baseConstructor"]], "test_checkvalidgeomsymmetrycombo() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[361, "armi.reactor.tests.test_geometry.TestSymmetryType.test_checkValidGeomSymmetryCombo"]], "test_domaintypenulls() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[361, "armi.reactor.tests.test_geometry.TestSymmetryType.test_domainTypeNulls"]], "test_fromany() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[361, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromAny"]], "test_fromstr() (armi.reactor.tests.test_geometry.testgeomtype method)": [[361, "armi.reactor.tests.test_geometry.TestGeomType.test_fromStr"]], "test_fromstr() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[361, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromStr"]], "test_growtofullcore() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[361, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_growToFullCore"]], "test_label() (armi.reactor.tests.test_geometry.testgeomtype method)": [[361, "armi.reactor.tests.test_geometry.TestGeomType.test_label"]], "test_label() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[361, "armi.reactor.tests.test_geometry.TestSymmetryType.test_label"]], "test_readasciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[361, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readAsciimap"]], "test_readhexgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[361, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readHexGeomXML"]], "test_readreactor() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[361, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readReactor"]], "test_readtrzgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[361, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_readTRZGeomXML"]], "test_str() (armi.reactor.tests.test_geometry.testgeomtype method)": [[361, "armi.reactor.tests.test_geometry.TestGeomType.test_str"]], "test_yamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[361, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_yamlIO"]], "boundary_data (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests attribute)": [[362, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.BOUNDARY_DATA"]], "boundary_params (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests attribute)": [[362, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.BOUNDARY_PARAMS"]], "emptyblockrotatetest (class in armi.reactor.tests.test_hexblockrotate)": [[362, "armi.reactor.tests.test_hexBlockRotate.EmptyBlockRotateTest"]], "hexblockrotatetests (class in armi.reactor.tests.test_hexblockrotate)": [[362, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests"]], "pin_data (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests attribute)": [[362, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.PIN_DATA"]], "pin_params (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests attribute)": [[362, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.PIN_PARAMS"]], "armi.reactor.tests.test_hexblockrotate": [[362, "module-armi.reactor.tests.test_hexBlockRotate"]], "assertindexlocationequivalent() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[362, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.assertIndexLocationEquivalent"]], "test_orientation() (armi.reactor.tests.test_hexblockrotate.emptyblockrotatetest method)": [[362, "armi.reactor.tests.test_hexBlockRotate.EmptyBlockRotateTest.test_orientation"]], "test_orientationvector() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[362, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.test_orientationVector"]], "test_pinparametersunmodified() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[362, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.test_pinParametersUnmodified"]], "test_pinrotationcoordinates() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[362, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.test_pinRotationCoordinates"]], "test_pinrotationlocations() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[362, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.test_pinRotationLocations"]], "test_rotateboundaryparameters() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[362, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.test_rotateBoundaryParameters"]], "test_updatechildlocations() (armi.reactor.tests.test_hexblockrotate.hexblockrotatetests method)": [[362, "armi.reactor.tests.test_hexBlockRotate.HexBlockRotateTests.test_updateChildLocations"]], "mockcomposite (class in armi.reactor.tests.test_parameters)": [[363, "armi.reactor.tests.test_parameters.MockComposite"]], "mockcompositechild (class in armi.reactor.tests.test_parameters)": [[363, "armi.reactor.tests.test_parameters.MockCompositeChild"]], "mockcompositegrandparent (class in armi.reactor.tests.test_parameters)": [[363, "armi.reactor.tests.test_parameters.MockCompositeGrandParent"]], "mockcompositeparent (class in armi.reactor.tests.test_parameters)": [[363, "armi.reactor.tests.test_parameters.MockCompositeParent"]], "paramcollectionwhere (class in armi.reactor.tests.test_parameters)": [[363, "armi.reactor.tests.test_parameters.ParamCollectionWhere"]], "paramcollectionwhere.scopeparamcollection (class in armi.reactor.tests.test_parameters)": [[363, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection"]], "parametertests (class in armi.reactor.tests.test_parameters)": [[363, "armi.reactor.tests.test_parameters.ParameterTests"]], "testmakeparametersreadonly (class in armi.reactor.tests.test_parameters)": [[363, "armi.reactor.tests.test_parameters.TestMakeParametersReadOnly"]], "armi.reactor.tests.test_parameters": [[363, "module-armi.reactor.tests.test_parameters"]], "pdefs (armi.reactor.tests.test_parameters.paramcollectionwhere.scopeparamcollection attribute)": [[363, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection.pDefs"]], "pb (armi.reactor.tests.test_parameters.paramcollectionwhere.scopeparamcollection attribute)": [[363, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection.pb"]], "test_attemptingtosetparamwithoutsetterfails() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_attemptingToSetParamWithoutSetterFails"]], "test_cannotcreateattrbuteonparametercollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateAttrbuteOnParameterCollectionSubclass"]], "test_cannotcreateinstanceof_nodefault() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_NoDefault"]], "test_cannotcreateinstanceof_undefined() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_Undefined"]], "test_cannotdefineparameterwithsamename() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameName"]], "test_cannotdefineparameterwithsamenameforcollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameNameForCollectionSubclass"]], "test_categories() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_categories"]], "test_complicated() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[363, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_complicated"]], "test_defaultlocation() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_defaultLocation"]], "test_getwithoutdefaultraisesparametererror() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_getWithoutDefaultRaisesParameterError"]], "test_makeparametersreadonly() (armi.reactor.tests.test_parameters.testmakeparametersreadonly method)": [[363, "armi.reactor.tests.test_parameters.TestMakeParametersReadOnly.test_makeParametersReadOnly"]], "test_mutabledefaultsnotsupported() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_mutableDefaultsNotSupported"]], "test_oncategory() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[363, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_onCategory"]], "test_onlocation() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[363, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_onLocation"]], "test_paramdefinitionscompose() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_paramDefinitionsCompose"]], "test_parampropertydoesnotconflict() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflict"]], "test_parampropertydoesnotconflictwithnonedefault() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflictWithNoneDefault"]], "test_parametercollectionshave__slots__() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_parameterCollectionsHave__slots__"]], "test_serializer_pack_unpack() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_serializer_pack_unpack"]], "test_setter() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_setter"]], "test_settergetterbasics() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_setterGetterBasics"]], "test_writesomeparamstodb() (armi.reactor.tests.test_parameters.parametertests method)": [[363, "armi.reactor.tests.test_parameters.ParameterTests.test_writeSomeParamsToDB"]], "cartesianreactorneighbortests (class in armi.reactor.tests.test_reactors)": [[364, "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests"]], "cartesianreactortests (class in armi.reactor.tests.test_reactors)": [[364, "armi.reactor.tests.test_reactors.CartesianReactorTests"]], "hexreactortests (class in armi.reactor.tests.test_reactors)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests"]], "reactortests (class in armi.reactor.tests.test_reactors)": [[364, "armi.reactor.tests.test_reactors.ReactorTests"]], "armi.reactor.tests.test_reactors": [[364, "module-armi.reactor.tests.test_reactors"]], "buildoperatorofemptycartesianblocks() (in module armi.reactor.tests.test_reactors)": [[364, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyCartesianBlocks"]], "buildoperatorofemptyhexblocks() (in module armi.reactor.tests.test_reactors)": [[364, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyHexBlocks"]], "loadtestreactor() (in module armi.reactor.tests.test_reactors)": [[364, "armi.reactor.tests.test_reactors.loadTestReactor"]], "reducetestreactorrings() (in module armi.reactor.tests.test_reactors)": [[364, "armi.reactor.tests.test_reactors.reduceTestReactorRings"]], "test_add() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[364, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_add"]], "test_addmorenodes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_addMoreNodes"]], "test_addmultiplecores() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_addMultipleCores"]], "test_applythermalexpansion_coreconstruct() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_applyThermalExpansion_CoreConstruct"]], "test_buildmanualzones() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZones"]], "test_buildmanualzonesempty() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZonesEmpty"]], "test_coresfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_coreSfp"]], "test_countblocksoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_countBlocksOfType"]], "test_countfuelaxialblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_countFuelAxialBlocks"]], "test_createassemblyoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfType"]], "test_createassemblyoftypeexpandedcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfTypeExpandedCore"]], "test_createfreshfeed() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_createFreshFeed"]], "test_differentnuclidemodels() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_differentNuclideModels"]], "test_factorysortsetting() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_factorySortSetting"]], "test_findallaxialmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints"]], "test_findallaxialmeshpoints_wsubmesh() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints_wSubmesh"]], "test_findallazimeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAziMeshPoints"]], "test_findallmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllMeshPoints"]], "test_findallradmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllRadMeshPoints"]], "test_findaxialmeshindexof() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAxialMeshIndexOf"]], "test_findneighbors() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_findNeighbors"]], "test_findneighborscartesian() (armi.reactor.tests.test_reactors.cartesianreactorneighbortests method)": [[364, "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests.test_findNeighborsCartesian"]], "test_genassembliesaddedthiscycle() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_genAssembliesAddedThisCycle"]], "test_genblocksbylocname() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_genBlocksByLocName"]], "test_geomtype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_geomType"]], "test_getallxssuffixes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAllXsSuffixes"]], "test_getassembliesincircularring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInCircularRing"]], "test_getassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInHexRing"]], "test_getassembliesinsquarering() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[364, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssembliesInSquareRing"]], "test_getassembliesonsymmetryline() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesOnSymmetryLine"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[364, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssemblyPitch"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyPitch"]], "test_getassemblywithloc() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyWithLoc"]], "test_getassemblywithname() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyWithName"]], "test_getavgtemp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAvgTemp"]], "test_getblocksbyindices() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getBlocksByIndices"]], "test_getdominantmaterial() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getDominantMaterial"]], "test_getfirstfuelblockaxialnode() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFirstFuelBlockAxialNode"]], "test_getfluxvector() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFluxVector"]], "test_getfuelbottomheight() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFuelBottomHeight"]], "test_getgridbounds() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getGridBounds"]], "test_getmass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMass"]], "test_getmaxassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxAssembliesInHexRing"]], "test_getmaxnumpins() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxNumPins"]], "test_getminimumpercentfluxinfuel() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMinimumPercentFluxInFuel"]], "test_getnozzletypes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNozzleTypes"]], "test_getnuclidecategories() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNuclideCategories"]], "test_getnuclidecategorieslogging() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[364, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getNuclideCategoriesLogging"]], "test_getnumassemblieswithallringsfilledout() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOut"]], "test_getnumassemblieswithallringsfilledoutbipass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOutBipass"]], "test_getnumenergygroups() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumEnergyGroups"]], "test_getnumrings() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumRings"]], "test_getreactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getReactor"]], "test_getscalarevolution() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getScalarEvolution"]], "test_getsetparameters() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSetParameters"]], "test_getsymmetryfactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSymmetryFactor"]], "test_gettotalparam() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_getTotalParam"]], "test_growtofullcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_growToFullCore"]], "test_ifmissingspatialgrid() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_ifMissingSpatialGrid"]], "test_ispickleable() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_isPickleable"]], "test_locations() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_locations"]], "test_nonuniformassems() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_nonUniformAssems"]], "test_normalizenames() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_normalizeNames"]], "test_pincoordsallblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_pinCoordsAllBlocks"]], "test_removeassembliesinring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRing"]], "test_removeassembliesinringbycount() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingByCount"]], "test_removeassembliesinringhex() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingHex"]], "test_removeassembly() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembly"]], "test_removeassemblynosfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssemblyNoSfp"]], "test_restorereactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_restoreReactor"]], "test_saveallflux() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_saveAllFlux"]], "test_setb10voloncreation() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_setB10VolOnCreation"]], "test_setpitchuniform() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_setPitchUniform"]], "test_setpowerifnecessary() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_setPowerIfNecessary"]], "test_sortassembyring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortAssemByRing"]], "test_sortchildren() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortChildren"]], "test_updateblockbolheights_dbload() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_updateBlockBOLHeights_DBLoad"]], "test_whennoassemblies() (armi.reactor.tests.test_reactors.hexreactortests method)": [[364, "armi.reactor.tests.test_reactors.HexReactorTests.test_whenNoAssemblies"]], "testrztreactor (class in armi.reactor.tests.test_rz_reactors)": [[365, "armi.reactor.tests.test_rz_reactors.TestRZTReactor"]], "testrztreactormodern (class in armi.reactor.tests.test_rz_reactors)": [[365, "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern"]], "armi.reactor.tests.test_rz_reactors": [[365, "module-armi.reactor.tests.test_rz_reactors"]], "test_findallmeshpoints() (armi.reactor.tests.test_rz_reactors.testrztreactor method)": [[365, "armi.reactor.tests.test_rz_reactors.TestRZTReactor.test_findAllMeshPoints"]], "test_loadrzt() (armi.reactor.tests.test_rz_reactors.testrztreactor method)": [[365, "armi.reactor.tests.test_rz_reactors.TestRZTReactor.test_loadRZT"]], "test_loadrzt_reactor() (armi.reactor.tests.test_rz_reactors.testrztreactormodern method)": [[365, "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern.test_loadRZT_reactor"]], "testzone (class in armi.reactor.tests.test_zones)": [[366, "armi.reactor.tests.test_zones.TestZone"]], "testzones (class in armi.reactor.tests.test_zones)": [[366, "armi.reactor.tests.test_zones.TestZones"]], "armi.reactor.tests.test_zones": [[366, "module-armi.reactor.tests.test_zones"]], "test_additem() (armi.reactor.tests.test_zones.testzone method)": [[366, "armi.reactor.tests.test_zones.TestZone.test_addItem"]], "test_additems() (armi.reactor.tests.test_zones.testzone method)": [[366, "armi.reactor.tests.test_zones.TestZone.test_addItems"]], "test_addloc() (armi.reactor.tests.test_zones.testzone method)": [[366, "armi.reactor.tests.test_zones.TestZone.test_addLoc"]], "test_addlocs() (armi.reactor.tests.test_zones.testzone method)": [[366, "armi.reactor.tests.test_zones.TestZone.test_addLocs"]], "test_blocks() (armi.reactor.tests.test_zones.testzone method)": [[366, "armi.reactor.tests.test_zones.TestZone.test_blocks"]], "test_dictionaryinterface() (armi.reactor.tests.test_zones.testzones method)": [[366, "armi.reactor.tests.test_zones.TestZones.test_dictionaryInterface"]], "test_findzoneitisin() (armi.reactor.tests.test_zones.testzones method)": [[366, "armi.reactor.tests.test_zones.TestZones.test_findZoneItIsIn"]], "test_getalllocations() (armi.reactor.tests.test_zones.testzones method)": [[366, "armi.reactor.tests.test_zones.TestZones.test_getAllLocations"]], "test_getzonelocations() (armi.reactor.tests.test_zones.testzones method)": [[366, "armi.reactor.tests.test_zones.TestZones.test_getZoneLocations"]], "test_iteration() (armi.reactor.tests.test_zones.testzone method)": [[366, "armi.reactor.tests.test_zones.TestZone.test_iteration"]], "test_removeitem() (armi.reactor.tests.test_zones.testzone method)": [[366, "armi.reactor.tests.test_zones.TestZone.test_removeItem"]], "test_removeitems() (armi.reactor.tests.test_zones.testzone method)": [[366, "armi.reactor.tests.test_zones.TestZone.test_removeItems"]], "test_removeloc() (armi.reactor.tests.test_zones.testzone method)": [[366, "armi.reactor.tests.test_zones.TestZone.test_removeLoc"]], "test_removelocs() (armi.reactor.tests.test_zones.testzone method)": [[366, "armi.reactor.tests.test_zones.TestZone.test_removeLocs"]], "test_repr() (armi.reactor.tests.test_zones.testzone method)": [[366, "armi.reactor.tests.test_zones.TestZone.test_repr"]], "test_sortzones() (armi.reactor.tests.test_zones.testzones method)": [[366, "armi.reactor.tests.test_zones.TestZones.test_sortZones"]], "test_summary() (armi.reactor.tests.test_zones.testzones method)": [[366, "armi.reactor.tests.test_zones.TestZones.test_summary"]], "valid_types (armi.reactor.zones.zone attribute)": [[367, "armi.reactor.zones.Zone.VALID_TYPES"]], "zone (class in armi.reactor.zones)": [[367, "armi.reactor.zones.Zone"]], "zones (class in armi.reactor.zones)": [[367, "armi.reactor.zones.Zones"]], "additem() (armi.reactor.zones.zone method)": [[367, "armi.reactor.zones.Zone.addItem"]], "additems() (armi.reactor.zones.zone method)": [[367, "armi.reactor.zones.Zone.addItems"]], "addloc() (armi.reactor.zones.zone method)": [[367, "armi.reactor.zones.Zone.addLoc"]], "addlocs() (armi.reactor.zones.zone method)": [[367, "armi.reactor.zones.Zone.addLocs"]], "addzone() (armi.reactor.zones.zones method)": [[367, "armi.reactor.zones.Zones.addZone"]], "addzones() (armi.reactor.zones.zones method)": [[367, "armi.reactor.zones.Zones.addZones"]], "armi.reactor.zones": [[367, "module-armi.reactor.zones"]], "checkduplicates() (armi.reactor.zones.zones method)": [[367, "armi.reactor.zones.Zones.checkDuplicates"]], "findzoneitisin() (armi.reactor.zones.zones method)": [[367, "armi.reactor.zones.Zones.findZoneItIsIn"]], "getalllocations() (armi.reactor.zones.zones method)": [[367, "armi.reactor.zones.Zones.getAllLocations"]], "getzonelocations() (armi.reactor.zones.zones method)": [[367, "armi.reactor.zones.Zones.getZoneLocations"]], "names (armi.reactor.zones.zones property)": [[367, "armi.reactor.zones.Zones.names"]], "removeitem() (armi.reactor.zones.zone method)": [[367, "armi.reactor.zones.Zone.removeItem"]], "removeitems() (armi.reactor.zones.zone method)": [[367, "armi.reactor.zones.Zone.removeItems"]], "removeloc() (armi.reactor.zones.zone method)": [[367, "armi.reactor.zones.Zone.removeLoc"]], "removelocs() (armi.reactor.zones.zone method)": [[367, "armi.reactor.zones.Zone.removeLocs"]], "removezone() (armi.reactor.zones.zones method)": [[367, "armi.reactor.zones.Zones.removeZone"]], "removezones() (armi.reactor.zones.zones method)": [[367, "armi.reactor.zones.Zones.removeZones"]], "sortzones() (armi.reactor.zones.zones method)": [[367, "armi.reactor.zones.Zones.sortZones"]], "summary() (armi.reactor.zones.zones method)": [[367, "armi.reactor.zones.Zones.summary"]], "deduplicationfilter (class in armi.runlog)": [[368, "armi.runLog.DeduplicationFilter"]], "fmt (armi.runlog.runlogger attribute)": [[368, "armi.runLog.RunLogger.FMT"]], "nulllogger (class in armi.runlog)": [[368, "armi.runLog.NullLogger"]], "runlogger (class in armi.runlog)": [[368, "armi.runLog.RunLogger"]], "addhandler() (armi.runlog.nulllogger method)": [[368, "armi.runLog.NullLogger.addHandler"]], "allowstopduplicates() (armi.runlog.runlogger method)": [[368, "armi.runLog.RunLogger.allowStopDuplicates"]], "armi.runlog": [[368, "module-armi.runLog"]], "close() (armi.runlog.runlogger method)": [[368, "armi.runLog.RunLogger.close"]], "close() (in module armi.runlog)": [[368, "armi.runLog.close"]], "concatenatelogs() (in module armi.runlog)": [[368, "armi.runLog.concatenateLogs"]], "createlogdir() (in module armi.runlog)": [[368, "armi.runLog.createLogDir"]], "debug() (in module armi.runlog)": [[368, "armi.runLog.debug"]], "error() (in module armi.runlog)": [[368, "armi.runLog.error"]], "extra() (in module armi.runlog)": [[368, "armi.runLog.extra"]], "filter() (armi.runlog.deduplicationfilter method)": [[368, "armi.runLog.DeduplicationFilter.filter"]], "flush() (armi.runlog.runlogger method)": [[368, "armi.runLog.RunLogger.flush"]], "getduplicatesfilter() (armi.runlog.runlogger method)": [[368, "armi.runLog.RunLogger.getDuplicatesFilter"]], "getverbosity() (in module armi.runlog)": [[368, "armi.runLog.getVerbosity"]], "header() (in module armi.runlog)": [[368, "armi.runLog.header"]], "important() (in module armi.runlog)": [[368, "armi.runLog.important"]], "info() (in module armi.runlog)": [[368, "armi.runLog.info"]], "log() (armi.runlog.runlogger method)": [[368, "armi.runLog.RunLogger.log"]], "logfactory() (in module armi.runlog)": [[368, "armi.runLog.logFactory"]], "raw() (in module armi.runlog)": [[368, "armi.runLog.raw"]], "setverbosity() (armi.runlog.runlogger method)": [[368, "armi.runLog.RunLogger.setVerbosity"]], "setverbosity() (in module armi.runlog)": [[368, "armi.runLog.setVerbosity"]], "warning() (in module armi.runlog)": [[368, "armi.runLog.warning"]], "warningreport() (armi.runlog.runlogger method)": [[368, "armi.runLog.RunLogger.warningReport"]], "warningreport() (in module armi.runlog)": [[368, "armi.runLog.warningReport"]], "write() (armi.runlog.runlogger method)": [[368, "armi.runLog.RunLogger.write"]], "armi.settings": [[369, "module-armi.settings"]], "isboolsetting() (in module armi.settings)": [[369, "armi.settings.isBoolSetting"]], "promptforsettingsfile() (in module armi.settings)": [[369, "armi.settings.promptForSettingsFile"]], "recursivelyloadsettingsfiles() (in module armi.settings)": [[369, "armi.settings.recursivelyLoadSettingsFiles"]], "settings (class in armi.settings.casesettings)": [[370, "armi.settings.caseSettings.Settings"]], "armi.settings.casesettings": [[370, "module-armi.settings.caseSettings"]], "casetitle (armi.settings.casesettings.settings property)": [[370, "armi.settings.caseSettings.Settings.caseTitle"]], "defaultcasetitle (armi.settings.casesettings.settings attribute)": [[370, "armi.settings.caseSettings.Settings.defaultCaseTitle"]], "duplicate() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.duplicate"]], "environmentsettings (armi.settings.casesettings.settings property)": [[370, "armi.settings.caseSettings.Settings.environmentSettings"]], "failonload() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.failOnLoad"]], "getsetting() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.getSetting"]], "getsettingssetbyuser() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.getSettingsSetByUser"]], "initlogverbosity() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.initLogVerbosity"]], "inputdirectory (armi.settings.casesettings.settings property)": [[370, "armi.settings.caseSettings.Settings.inputDirectory"]], "items() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.items"]], "keys() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.keys"]], "loadfrominputfile() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.loadFromInputFile"]], "loadfromstring() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.loadFromString"]], "modified() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.modified"]], "registeruserplugins() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.registerUserPlugins"]], "reverttodefaults() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.revertToDefaults"]], "setmoduleverbosities() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.setModuleVerbosities"]], "updateenvironmentsettingsfrom() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.updateEnvironmentSettingsFrom"]], "values() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.values"]], "writetoyamlfile() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.writeToYamlFile"]], "writetoyamlstream() (armi.settings.casesettings.settings method)": [[370, "armi.settings.caseSettings.Settings.writeToYamlStream"]], "armi.settings.fwsettings": [[371, "module-armi.settings.fwSettings"]], "getframeworksettings() (in module armi.settings.fwsettings)": [[371, "armi.settings.fwSettings.getFrameworkSettings"]], "armi.settings.fwsettings.databasesettings": [[372, "module-armi.settings.fwSettings.databaseSettings"]], "definesettings() (in module armi.settings.fwsettings.databasesettings)": [[372, "armi.settings.fwSettings.databaseSettings.defineSettings"]], "armi.settings.fwsettings.globalsettings": [[373, "module-armi.settings.fwSettings.globalSettings"]], "definesettings() (in module armi.settings.fwsettings.globalsettings)": [[373, "armi.settings.fwSettings.globalSettings.defineSettings"]], "armi.settings.fwsettings.reportsettings": [[374, "module-armi.settings.fwSettings.reportSettings"]], "definesettings() (in module armi.settings.fwsettings.reportsettings)": [[374, "armi.settings.fwSettings.reportSettings.defineSettings"]], "tightcouplingsettingdef (class in armi.settings.fwsettings.tightcouplingsettings)": [[375, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef"]], "tightcouplingsettings (class in armi.settings.fwsettings.tightcouplingsettings)": [[375, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettings"]], "armi.settings.fwsettings.tightcouplingsettings": [[375, "module-armi.settings.fwSettings.tightCouplingSettings"]], "dump() (armi.settings.fwsettings.tightcouplingsettings.tightcouplingsettingdef method)": [[375, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef.dump"]], "serializetightcouplingsettings() (in module armi.settings.fwsettings.tightcouplingsettings)": [[375, "armi.settings.fwSettings.tightCouplingSettings.serializeTightCouplingSettings"]], "tightcouplingsettingsvalidator() (in module armi.settings.fwsettings.tightcouplingsettings)": [[375, "armi.settings.fwSettings.tightCouplingSettings.tightCouplingSettingsValidator"]], "default (class in armi.settings.setting)": [[376, "armi.settings.setting.Default"]], "flaglistsetting (class in armi.settings.setting)": [[376, "armi.settings.setting.FlagListSetting"]], "option (class in armi.settings.setting)": [[376, "armi.settings.setting.Option"]], "setting (class in armi.settings.setting)": [[376, "armi.settings.setting.Setting"]], "addoption() (armi.settings.setting.setting method)": [[376, "armi.settings.setting.Setting.addOption"]], "addoptions() (armi.settings.setting.setting method)": [[376, "armi.settings.setting.Setting.addOptions"]], "armi.settings.setting": [[376, "module-armi.settings.setting"]], "changedefault() (armi.settings.setting.setting method)": [[376, "armi.settings.setting.Setting.changeDefault"]], "containedtype (armi.settings.setting.setting property)": [[376, "armi.settings.setting.Setting.containedType"]], "default (armi.settings.setting.setting property)": [[376, "armi.settings.setting.Setting.default"]], "dump() (armi.settings.setting.flaglistsetting method)": [[376, "armi.settings.setting.FlagListSetting.dump"]], "dump() (armi.settings.setting.setting method)": [[376, "armi.settings.setting.Setting.dump"]], "getcustomattributes() (armi.settings.setting.setting method)": [[376, "armi.settings.setting.Setting.getCustomAttributes"]], "getdefaultattributes() (armi.settings.setting.setting method)": [[376, "armi.settings.setting.Setting.getDefaultAttributes"]], "isdefault() (armi.settings.setting.setting method)": [[376, "armi.settings.setting.Setting.isDefault"]], "offdefault (armi.settings.setting.setting property)": [[376, "armi.settings.setting.Setting.offDefault"]], "option (armi.settings.setting.option attribute)": [[376, "armi.settings.setting.Option.option"]], "reverttodefault() (armi.settings.setting.setting method)": [[376, "armi.settings.setting.Setting.revertToDefault"]], "schema() (armi.settings.setting.flaglistsetting static method)": [[376, "armi.settings.setting.FlagListSetting.schema"]], "setvalue() (armi.settings.setting.setting method)": [[376, "armi.settings.setting.Setting.setValue"]], "settingname (armi.settings.setting.default attribute)": [[376, "armi.settings.setting.Default.settingName"]], "settingname (armi.settings.setting.option attribute)": [[376, "armi.settings.setting.Option.settingName"]], "underlyingtype (armi.settings.setting.setting property)": [[376, "armi.settings.setting.Setting.underlyingType"]], "value (armi.settings.setting.default attribute)": [[376, "armi.settings.setting.Default.value"]], "value (armi.settings.setting.setting property)": [[376, "armi.settings.setting.Setting.value"]], "custom (armi.settings.settingsio.roots attribute)": [[377, "armi.settings.settingsIO.Roots.CUSTOM"]], "roots (class in armi.settings.settingsio)": [[377, "armi.settings.settingsIO.Roots"]], "runlogpromptcancel": [[377, "armi.settings.settingsIO.RunLogPromptCancel"]], "runlogpromptunresolvable": [[377, "armi.settings.settingsIO.RunLogPromptUnresolvable"]], "settingrenamer (class in armi.settings.settingsio)": [[377, "armi.settings.settingsIO.SettingRenamer"]], "settingsreader (class in armi.settings.settingsio)": [[377, "armi.settings.settingsIO.SettingsReader"]], "settingsreader.settingsinputformat (class in armi.settings.settingsio)": [[377, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat"]], "settingswriter (class in armi.settings.settingsio)": [[377, "armi.settings.settingsIO.SettingsWriter"]], "version (armi.settings.settingsio.roots attribute)": [[377, "armi.settings.settingsIO.Roots.VERSION"]], "yaml (armi.settings.settingsio.settingsreader.settingsinputformat attribute)": [[377, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.YAML"]], "armi.settings.settingsio": [[377, "module-armi.settings.settingsIO"]], "fromext() (armi.settings.settingsio.settingsreader.settingsinputformat class method)": [[377, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.fromExt"]], "prompt() (in module armi.settings.settingsio)": [[377, "armi.settings.settingsIO.prompt"]], "readfromfile() (armi.settings.settingsio.settingsreader method)": [[377, "armi.settings.settingsIO.SettingsReader.readFromFile"]], "readfromstream() (armi.settings.settingsio.settingsreader method)": [[377, "armi.settings.settingsIO.SettingsReader.readFromStream"]], "renamesetting() (armi.settings.settingsio.settingrenamer method)": [[377, "armi.settings.settingsIO.SettingRenamer.renameSetting"]], "writeyaml() (armi.settings.settingsio.settingswriter method)": [[377, "armi.settings.settingsIO.SettingsWriter.writeYaml"]], "inspector (class in armi.settings.settingsvalidation)": [[378, "armi.settings.settingsValidation.Inspector"]], "no_action() (armi.settings.settingsvalidation.inspector static method)": [[378, "armi.settings.settingsValidation.Inspector.NO_ACTION"]], "query (class in armi.settings.settingsvalidation)": [[378, "armi.settings.settingsValidation.Query"]], "addquery() (armi.settings.settingsvalidation.inspector method)": [[378, "armi.settings.settingsValidation.Inspector.addQuery"]], "addquerybadlocationwilllikelyfail() (armi.settings.settingsvalidation.inspector method)": [[378, "armi.settings.settingsValidation.Inspector.addQueryBadLocationWillLikelyFail"]], "addquerycurrentsettingmaynotsupportfeatures() (armi.settings.settingsvalidation.inspector method)": [[378, "armi.settings.settingsValidation.Inspector.addQueryCurrentSettingMayNotSupportFeatures"]], "armi.settings.settingsvalidation": [[378, "module-armi.settings.settingsValidation"]], "createqueryrevertbadpathtodefault() (in module armi.settings.settingsvalidation)": [[378, "armi.settings.settingsValidation.createQueryRevertBadPathToDefault"]], "iscorrective() (armi.settings.settingsvalidation.query method)": [[378, "armi.settings.settingsValidation.Query.isCorrective"]], "resolve() (armi.settings.settingsvalidation.query method)": [[378, "armi.settings.settingsValidation.Query.resolve"]], "run() (armi.settings.settingsvalidation.inspector method)": [[378, "armi.settings.settingsValidation.Inspector.run"]], "validateversion() (in module armi.settings.settingsvalidation)": [[378, "armi.settings.settingsValidation.validateVersion"]], "armi.settings.tests": [[379, "module-armi.settings.tests"]], "testinspector (class in armi.settings.tests.test_inspectors)": [[380, "armi.settings.tests.test_inspectors.TestInspector"]], "armi.settings.tests.test_inspectors": [[380, "module-armi.settings.tests.test_inspectors"]], "test_assigncs() (armi.settings.tests.test_inspectors.testinspector method)": [[380, "armi.settings.tests.test_inspectors.TestInspector.test_assignCS"]], "test_callablecorrectioncheck() (armi.settings.tests.test_inspectors.testinspector method)": [[380, "armi.settings.tests.test_inspectors.TestInspector.test_callableCorrectionCheck"]], "test_changeofcs() (armi.settings.tests.test_inspectors.testinspector method)": [[380, "armi.settings.tests.test_inspectors.TestInspector.test_changeOfCS"]], "test_checkforbothsimpleanddetailedcyclesinputs() (armi.settings.tests.test_inspectors.testinspector method)": [[380, "armi.settings.tests.test_inspectors.TestInspector.test_checkForBothSimpleAndDetailedCyclesInputs"]], "test_correctcyclestozeroburnup() (armi.settings.tests.test_inspectors.testinspector method)": [[380, "armi.settings.tests.test_inspectors.TestInspector.test_correctCyclesToZeroBurnup"]], "test_createqueryrevertbadpathtodefault() (armi.settings.tests.test_inspectors.testinspector method)": [[380, "armi.settings.tests.test_inspectors.TestInspector.test_createQueryRevertBadPathToDefault"]], "test_noncorrectivequery() (armi.settings.tests.test_inspectors.testinspector method)": [[380, "armi.settings.tests.test_inspectors.TestInspector.test_nonCorrectiveQuery"]], "test_overwritesettingscorrectivequery() (armi.settings.tests.test_inspectors.testinspector method)": [[380, "armi.settings.tests.test_inspectors.TestInspector.test_overwriteSettingsCorrectiveQuery"]], "test_query() (armi.settings.tests.test_inspectors.testinspector method)": [[380, "armi.settings.tests.test_inspectors.TestInspector.test_query"]], "dummysettingplugin1 (class in armi.settings.tests.test_settings)": [[381, "armi.settings.tests.test_settings.DummySettingPlugin1"]], "dummysettingplugin2 (class in armi.settings.tests.test_settings)": [[381, "armi.settings.tests.test_settings.DummySettingPlugin2"]], "pluginaddsoptions (class in armi.settings.tests.test_settings)": [[381, "armi.settings.tests.test_settings.PluginAddsOptions"]], "testaddingoptions (class in armi.settings.tests.test_settings)": [[381, "armi.settings.tests.test_settings.TestAddingOptions"]], "testflaglistsetting (class in armi.settings.tests.test_settings)": [[381, "armi.settings.tests.test_settings.TestFlagListSetting"]], "testsettings (class in armi.settings.tests.test_settings)": [[381, "armi.settings.tests.test_settings.TestSettings"]], "testsettings2 (class in armi.settings.tests.test_settings)": [[381, "armi.settings.tests.test_settings.TestSettings2"]], "testsettingsutils (class in armi.settings.tests.test_settings)": [[381, "armi.settings.tests.test_settings.TestSettingsUtils"]], "testsettingsvalidationutils (class in armi.settings.tests.test_settings)": [[381, "armi.settings.tests.test_settings.TestSettingsValidationUtils"]], "armi.settings.tests.test_settings": [[381, "module-armi.settings.tests.test_settings"]], "definesettings() (armi.settings.tests.test_settings.dummysettingplugin1 static method)": [[381, "armi.settings.tests.test_settings.DummySettingPlugin1.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.dummysettingplugin2 static method)": [[381, "armi.settings.tests.test_settings.DummySettingPlugin2.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.pluginaddsoptions static method)": [[381, "armi.settings.tests.test_settings.PluginAddsOptions.defineSettings"]], "test_addingoptions() (armi.settings.tests.test_settings.testaddingoptions method)": [[381, "armi.settings.tests.test_settings.TestAddingOptions.test_addingOptions"]], "test_copysetting() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_copySetting"]], "test_copysettingnotdefault() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_copySettingNotDefault"]], "test_csworks() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_csWorks"]], "test_default() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_default"]], "test_empty() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_empty"]], "test_flaglistsetting() (armi.settings.tests.test_settings.testflaglistsetting method)": [[381, "armi.settings.tests.test_settings.TestFlagListSetting.test_flagListSetting"]], "test_getfailures() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_getFailures"]], "test_getsettingssetbyuser() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_getSettingsSetByUser"]], "test_invalidflaglisttypeerror() (armi.settings.tests.test_settings.testflaglistsetting method)": [[381, "armi.settings.tests.test_settings.TestFlagListSetting.test_invalidFlagListTypeError"]], "test_listcoercion() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_listCoercion"]], "test_listsmutable() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_listsMutable"]], "test_metadata() (armi.settings.tests.test_settings.testsettings method)": [[381, "armi.settings.tests.test_settings.TestSettings.test_metaData"]], "test_modified() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_modified"]], "test_pluginsettings() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_pluginSettings"]], "test_pluginvalidatorsarediscovered() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_pluginValidatorsAreDiscovered"]], "test_prompt() (armi.settings.tests.test_settings.testsettingsutils method)": [[381, "armi.settings.tests.test_settings.TestSettingsUtils.test_prompt"]], "test_recursivescan() (armi.settings.tests.test_settings.testsettingsutils method)": [[381, "armi.settings.tests.test_settings.TestSettingsUtils.test_recursiveScan"]], "test_schemacheckstype() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_schemaChecksType"]], "test_setmoduleverbosities() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_setModuleVerbosities"]], "test_settingisokaytograb() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_settingIsOkayToGrab"]], "test_typedetection() (armi.settings.tests.test_settings.testsettings2 method)": [[381, "armi.settings.tests.test_settings.TestSettings2.test_typeDetection"]], "test_updateenvironmentsettingsfrom() (armi.settings.tests.test_settings.testsettings method)": [[381, "armi.settings.tests.test_settings.TestSettings.test_updateEnvironmentSettingsFrom"]], "test_validateversion() (armi.settings.tests.test_settings.testsettingsvalidationutils method)": [[381, "armi.settings.tests.test_settings.TestSettingsValidationUtils.test_validateVersion"]], "mockentrypoint (class in armi.settings.tests.test_settingsio)": [[382, "armi.settings.tests.test_settingsIO.MockEntryPoint"]], "settingargstests (class in armi.settings.tests.test_settingsio)": [[382, "armi.settings.tests.test_settingsIO.SettingArgsTests"]], "settingsfailuretests (class in armi.settings.tests.test_settingsio)": [[382, "armi.settings.tests.test_settingsIO.SettingsFailureTests"]], "settingsreadertests (class in armi.settings.tests.test_settingsio)": [[382, "armi.settings.tests.test_settingsIO.SettingsReaderTests"]], "settingsrenametests (class in armi.settings.tests.test_settingsio)": [[382, "armi.settings.tests.test_settingsIO.SettingsRenameTests"]], "settingswritertests (class in armi.settings.tests.test_settingsio)": [[382, "armi.settings.tests.test_settingsIO.SettingsWriterTests"]], "armi.settings.tests.test_settingsio": [[382, "module-armi.settings.tests.test_settingsIO"]], "name (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[382, "armi.settings.tests.test_settingsIO.MockEntryPoint.name"]], "settingsargument (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[382, "armi.settings.tests.test_settingsIO.MockEntryPoint.settingsArgument"]], "testsettings (armi.settings.tests.test_settingsio.settingsrenametests attribute)": [[382, "armi.settings.tests.test_settingsIO.SettingsRenameTests.testSettings"]], "test_basicsettingsreader() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[382, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_basicSettingsReader"]], "test_cannotloadsettingsafterparsingcommandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[382, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_cannotLoadSettingsAfterParsingCommandLineSetting"]], "test_collidingrenames() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[382, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_collidingRenames"]], "test_commandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[382, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_commandLineSetting"]], "test_errorsettingswriter() (armi.settings.tests.test_settingsio.settingswritertests method)": [[382, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_errorSettingsWriter"]], "test_invalidfile() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[382, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_invalidFile"]], "test_loadfromyamlfailsonbadnames() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[382, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_loadFromYamlFailsOnBadNames"]], "test_readfromfile() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[382, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_readFromFile"]], "test_rename() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[382, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_rename"]], "test_settingsobjsetting() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[382, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_settingsObjSetting"]], "test_writefull() (armi.settings.tests.test_settingsio.settingswritertests method)": [[382, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeFull"]], "test_writemedium() (armi.settings.tests.test_settingsio.settingswritertests method)": [[382, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeMedium"]], "test_writeshort() (armi.settings.tests.test_settingsio.settingswritertests method)": [[382, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeShort"]], "test_writeyaml() (armi.settings.tests.test_settingsio.settingswritertests method)": [[382, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeYaml"]], "armitesthelper (class in armi.tests)": [[383, "armi.tests.ArmiTestHelper"]], "fixture (class in armi.tests)": [[383, "armi.tests.Fixture"]], "armi.tests": [[383, "module-armi.tests"]], "comparefileslinebyline() (armi.tests.armitesthelper method)": [[383, "armi.tests.ArmiTestHelper.compareFilesLineByLine"]], "comparelines() (armi.tests.armitesthelper static method)": [[383, "armi.tests.ArmiTestHelper.compareLines"]], "fixture() (in module armi.tests)": [[383, "armi.tests.fixture"]], "getemptycartesianreactor() (in module armi.tests)": [[383, "armi.tests.getEmptyCartesianReactor"]], "getemptyhexreactor() (in module armi.tests)": [[383, "armi.tests.getEmptyHexReactor"]], "rebaselinetextcomparisons() (in module armi.tests)": [[383, "armi.tests.rebaselineTextComparisons"]], "requires_fixture() (in module armi.tests)": [[383, "armi.tests.requires_fixture"]], "bufferlog (class in armi.tests.mockrunlogs)": [[384, "armi.tests.mockRunLogs.BufferLog"]], "logcounter (class in armi.tests.mockrunlogs)": [[384, "armi.tests.mockRunLogs.LogCounter"]], "armi.tests.mockrunlogs": [[384, "module-armi.tests.mockRunLogs"]], "clearsinglewarnings() (armi.tests.mockrunlogs.bufferlog method)": [[384, "armi.tests.mockRunLogs.BufferLog.clearSingleWarnings"]], "emptystdout() (armi.tests.mockrunlogs.bufferlog method)": [[384, "armi.tests.mockRunLogs.BufferLog.emptyStdout"]], "getstderrvalue() (armi.tests.mockrunlogs.bufferlog method)": [[384, "armi.tests.mockRunLogs.BufferLog.getStderrValue"]], "getstdout() (armi.tests.mockrunlogs.bufferlog method)": [[384, "armi.tests.mockRunLogs.BufferLog.getStdout"]], "log() (armi.tests.mockrunlogs.bufferlog method)": [[384, "armi.tests.mockRunLogs.BufferLog.log"]], "log() (armi.tests.mockrunlogs.logcounter method)": [[384, "armi.tests.mockRunLogs.LogCounter.log"]], "equilibriumshuffler (class in armi.tests.refsmallreactorshufflelogic)": [[385, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler"]], "armi.tests.refsmallreactorshufflelogic": [[385, "module-armi.tests.refSmallReactorShuffleLogic"]], "chooseswaps() (armi.tests.refsmallreactorshufflelogic.equilibriumshuffler method)": [[385, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler.chooseSwaps"]], "getfactorlist() (in module armi.tests.refsmallreactorshufflelogic)": [[385, "armi.tests.refSmallReactorShuffleLogic.getFactorList"]], "testapps (class in armi.tests.test_apps)": [[386, "armi.tests.test_apps.TestApps"]], "testarmihighlevel (class in armi.tests.test_apps)": [[386, "armi.tests.test_apps.TestArmiHighLevel"]], "testplugin1 (class in armi.tests.test_apps)": [[386, "armi.tests.test_apps.TestPlugin1"]], "testplugin2 (class in armi.tests.test_apps)": [[386, "armi.tests.test_apps.TestPlugin2"]], "testplugin3 (class in armi.tests.test_apps)": [[386, "armi.tests.test_apps.TestPlugin3"]], "testplugin4 (class in armi.tests.test_apps)": [[386, "armi.tests.test_apps.TestPlugin4"]], "armi.tests.test_apps": [[386, "module-armi.tests.test_apps"]], "defineparameterrenames() (armi.tests.test_apps.testplugin1 static method)": [[386, "armi.tests.test_apps.TestPlugin1.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin2 static method)": [[386, "armi.tests.test_apps.TestPlugin2.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin3 static method)": [[386, "armi.tests.test_apps.TestPlugin3.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin4 static method)": [[386, "armi.tests.test_apps.TestPlugin4.defineParameterRenames"]], "test_disablefutureconfigures() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_disableFutureConfigures"]], "test_getdefaultpluginmanager() (armi.tests.test_apps.testarmihighlevel method)": [[386, "armi.tests.test_apps.TestArmiHighLevel.test_getDefaultPluginManager"]], "test_getparamrenames() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_getParamRenames"]], "test_getparamrenamesinvalids() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_getParamRenamesInvalids"]], "test_getsettings() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_getSettings"]], "test_isstablereleaseversion() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_isStableReleaseVersion"]], "test_main() (armi.tests.test_apps.testarmihighlevel method)": [[386, "armi.tests.test_apps.TestArmiHighLevel.test_main"]], "test_overconfigured() (armi.tests.test_apps.testarmihighlevel method)": [[386, "armi.tests.test_apps.TestArmiHighLevel.test_overConfigured"]], "test_registerpluginflags() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_registerPluginFlags"]], "test_splashtext() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_splashText"]], "test_splashtextdifferentapp() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_splashTextDifferentApp"]], "test_version() (armi.tests.test_apps.testapps method)": [[386, "armi.tests.test_apps.TestApps.test_version"]], "testarmitesthelper (class in armi.tests.test_armitesthelper)": [[387, "armi.tests.test_armiTestHelper.TestArmiTestHelper"]], "armi.tests.test_armitesthelper": [[387, "module-armi.tests.test_armiTestHelper"]], "test_comparefilesfail() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[387, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesFail"]], "test_comparefilessucceedfalsenegative() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[387, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucceedFalseNegative"]], "test_comparefilessucess() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[387, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucess"]], "cartesianreactortests (class in armi.tests.test_cartesian)": [[388, "armi.tests.test_cartesian.CartesianReactorTests"]], "armi.tests.test_cartesian": [[388, "module-armi.tests.test_cartesian"]], "test_custom() (armi.tests.test_cartesian.cartesianreactortests method)": [[388, "armi.tests.test_cartesian.CartesianReactorTests.test_custom"]], "testcontextserial (class in armi.tests.test_context)": [[389, "armi.tests.test_context.TestContextSerial"]], "armi.tests.test_context": [[389, "module-armi.tests.test_context"]], "test_nonnonedata() (armi.tests.test_context.testcontextserial method)": [[389, "armi.tests.test_context.TestContextSerial.test_nonNoneData"]], "test_rank() (armi.tests.test_context.testcontextserial method)": [[389, "armi.tests.test_context.TestContextSerial.test_rank"]], "dummyinterface (class in armi.tests.test_interfaces)": [[390, "armi.tests.test_interfaces.DummyInterface"]], "testcodeinterface (class in armi.tests.test_interfaces)": [[390, "armi.tests.test_interfaces.TestCodeInterface"]], "testtightcoupler (class in armi.tests.test_interfaces)": [[390, "armi.tests.test_interfaces.TestTightCoupler"]], "armi.tests.test_interfaces": [[390, "module-armi.tests.test_interfaces"]], "function (armi.tests.test_interfaces.dummyinterface attribute)": [[390, "armi.tests.test_interfaces.DummyInterface.function"]], "name (armi.tests.test_interfaces.dummyinterface attribute)": [[390, "armi.tests.test_interfaces.DummyInterface.name"]], "test_coupleractive() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_couplerActive"]], "test_distributable() (armi.tests.test_interfaces.testcodeinterface method)": [[390, "armi.tests.test_interfaces.TestCodeInterface.test_distributable"]], "test_duplicate() (armi.tests.test_interfaces.testcodeinterface method)": [[390, "armi.tests.test_interfaces.TestCodeInterface.test_duplicate"]], "test_enabled() (armi.tests.test_interfaces.testcodeinterface method)": [[390, "armi.tests.test_interfaces.TestCodeInterface.test_enabled"]], "test_getlistdimension() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_getListDimension"]], "test_isconverged() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_isConverged"]], "test_isconvergedruntimeerror() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedRuntimeError"]], "test_isconvergedvalueerror() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedValueError"]], "test_isrequesteddetailpoint() (armi.tests.test_interfaces.testcodeinterface method)": [[390, "armi.tests.test_interfaces.TestCodeInterface.test_isRequestedDetailPoint"]], "test_namecontains() (armi.tests.test_interfaces.testcodeinterface method)": [[390, "armi.tests.test_interfaces.TestCodeInterface.test_nameContains"]], "test_predistributestate() (armi.tests.test_interfaces.testcodeinterface method)": [[390, "armi.tests.test_interfaces.TestCodeInterface.test_preDistributeState"]], "test_storepreviousiterationvalue() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValue"]], "test_storepreviousiterationvalueexception() (armi.tests.test_interfaces.testtightcoupler method)": [[390, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValueException"]], "c5g7reactortests (class in armi.tests.test_lwrinputs)": [[391, "armi.tests.test_lwrInputs.C5G7ReactorTests"]], "armi.tests.test_lwrinputs": [[391, "module-armi.tests.test_lwrInputs"]], "test_loadc5g7() (armi.tests.test_lwrinputs.c5g7reactortests method)": [[391, "armi.tests.test_lwrInputs.C5G7ReactorTests.test_loadC5G7"]], "mpiitertests (class in armi.tests.test_mpiactions)": [[392, "armi.tests.test_mpiActions.MpiIterTests"]], "queueactionstests (class in armi.tests.test_mpiactions)": [[392, "armi.tests.test_mpiActions.QueueActionsTests"]], "armi.tests.test_mpiactions": [[392, "module-armi.tests.test_mpiActions"]], "passer() (in module armi.tests.test_mpiactions)": [[392, "armi.tests.test_mpiActions.passer"]], "test_diagnosepickleerrortestreactor() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_diagnosePickleErrorTestReactor"]], "test_disableforexclusivetasks() (armi.tests.test_mpiactions.queueactionstests method)": [[392, "armi.tests.test_mpiActions.QueueActionsTests.test_disableForExclusiveTasks"]], "test_excessprocesses() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_excessProcesses"]], "test_makequeue() (armi.tests.test_mpiactions.queueactionstests method)": [[392, "armi.tests.test_mpiActions.QueueActionsTests.test_makeQueue"]], "test_mpiiter() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_mpiIter"]], "test_parallel() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_parallel"]], "test_perfectbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_perfectBalancing"]], "test_runactionsdistributestateaction() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributeStateAction"]], "test_runactionsdistributionaction() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributionAction"]], "test_serialgather() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_serialGather"]], "test_typicalbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[392, "armi.tests.test_mpiActions.MpiIterTests.test_typicalBalancing"]], "bcastaction1 (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.BcastAction1"]], "bcastaction2 (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.BcastAction2"]], "failinginterface1 (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.FailingInterface1"]], "failinginterface2 (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.FailingInterface2"]], "failinginterface3 (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.FailingInterface3"]], "mockinterface (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.MockInterface"]], "mpidistributestatetests (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.MpiDistributeStateTests"]], "mpioperatortests (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.MpiOperatorTests"]], "mpipathtoolstests (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.MpiPathToolsTests"]], "testcontextmpi (class in armi.tests.test_mpifeatures)": [[393, "armi.tests.test_mpiFeatures.TestContextMpi"]], "armi.tests.test_mpifeatures": [[393, "module-armi.tests.test_mpiFeatures"]], "fail() (armi.tests.test_mpifeatures.failinginterface3 method)": [[393, "armi.tests.test_mpiFeatures.FailingInterface3.fail"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface1 method)": [[393, "armi.tests.test_mpiFeatures.FailingInterface1.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface2 method)": [[393, "armi.tests.test_mpiFeatures.FailingInterface2.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface3 method)": [[393, "armi.tests.test_mpiFeatures.FailingInterface3.interactEveryNode"]], "interactinit() (armi.tests.test_mpifeatures.mockinterface method)": [[393, "armi.tests.test_mpiFeatures.MockInterface.interactInit"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction1 method)": [[393, "armi.tests.test_mpiFeatures.BcastAction1.invokeHook"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction2 method)": [[393, "armi.tests.test_mpiFeatures.BcastAction2.invokeHook"]], "name (armi.tests.test_mpifeatures.failinginterface1 attribute)": [[393, "armi.tests.test_mpiFeatures.FailingInterface1.name"]], "name (armi.tests.test_mpifeatures.failinginterface2 attribute)": [[393, "armi.tests.test_mpiFeatures.FailingInterface2.name"]], "name (armi.tests.test_mpifeatures.failinginterface3 attribute)": [[393, "armi.tests.test_mpiFeatures.FailingInterface3.name"]], "name (armi.tests.test_mpifeatures.mockinterface attribute)": [[393, "armi.tests.test_mpiFeatures.MockInterface.name"]], "test_basicoperatormpi() (armi.tests.test_mpifeatures.mpioperatortests method)": [[393, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_basicOperatorMPI"]], "test_cleanpathmpi() (armi.tests.test_mpifeatures.mpipathtoolstests method)": [[393, "armi.tests.test_mpiFeatures.MpiPathToolsTests.test_cleanPathMpi"]], "test_compileresults() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[393, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_compileResults"]], "test_distributeinterfaces() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[393, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeInterfaces"]], "test_distributereactor() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[393, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeReactor"]], "test_distributesettings() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[393, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeSettings"]], "test_distributestate() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[393, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeState"]], "test_finalizeinteract() (armi.tests.test_mpifeatures.mpioperatortests method)": [[393, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_finalizeInteract"]], "test_nonnonedata() (armi.tests.test_mpifeatures.testcontextmpi method)": [[393, "armi.tests.test_mpiFeatures.TestContextMpi.test_nonNoneData"]], "test_primarycritical() (armi.tests.test_mpifeatures.mpioperatortests method)": [[393, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryCritical"]], "test_primaryexception() (armi.tests.test_mpifeatures.mpioperatortests method)": [[393, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryException"]], "test_rank() (armi.tests.test_mpifeatures.testcontextmpi method)": [[393, "armi.tests.test_mpiFeatures.TestContextMpi.test_rank"]], "workeroperate() (armi.tests.test_mpifeatures.failinginterface3 method)": [[393, "armi.tests.test_mpiFeatures.FailingInterface3.workerOperate"]], "mocksyncpc (class in armi.tests.test_mpiparameters)": [[394, "armi.tests.test_mpiParameters.MockSyncPC"]], "synchronizationtests (class in armi.tests.test_mpiparameters)": [[394, "armi.tests.test_mpiParameters.SynchronizationTests"]], "armi.tests.test_mpiparameters": [[394, "module-armi.tests.test_mpiParameters"]], "makecomp() (in module armi.tests.test_mpiparameters)": [[394, "armi.tests.test_mpiParameters.makeComp"]], "pdefs (armi.tests.test_mpiparameters.mocksyncpc attribute)": [[394, "armi.tests.test_mpiParameters.MockSyncPC.pDefs"]], "pb (armi.tests.test_mpiparameters.mocksyncpc attribute)": [[394, "armi.tests.test_mpiParameters.MockSyncPC.pb"]], "test_conflictsmaintainwithstateretainer() (armi.tests.test_mpiparameters.synchronizationtests method)": [[394, "armi.tests.test_mpiParameters.SynchronizationTests.test_conflictsMaintainWithStateRetainer"]], "test_noconflicts() (armi.tests.test_mpiparameters.synchronizationtests method)": [[394, "armi.tests.test_mpiParameters.SynchronizationTests.test_noConflicts"]], "test_withconflicts() (armi.tests.test_mpiparameters.synchronizationtests method)": [[394, "armi.tests.test_mpiParameters.SynchronizationTests.test_withConflicts"]], "test_withconflictsbutsamevalue() (armi.tests.test_mpiparameters.synchronizationtests method)": [[394, "armi.tests.test_mpiParameters.SynchronizationTests.test_withConflictsButSameValue"]], "notebooktests (class in armi.tests.test_notebooks)": [[395, "armi.tests.test_notebooks.NotebookTests"]], "armi.tests.test_notebooks": [[395, "module-armi.tests.test_notebooks"]], "runnotebook() (in module armi.tests.test_notebooks)": [[395, "armi.tests.test_notebooks.runNotebook"]], "test_rundatamodel() (armi.tests.test_notebooks.notebooktests method)": [[395, "armi.tests.test_notebooks.NotebookTests.test_runDataModel"]], "test_runparamsweep() (armi.tests.test_notebooks.notebooktests method)": [[395, "armi.tests.test_notebooks.NotebookTests.test_runParamSweep"]], "beforereactorplugin (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.BeforeReactorPlugin"]], "pluginflags1 (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.PluginFlags1"]], "sillyaxialexpansionchanger (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.SillyAxialExpansionChanger"]], "sillyaxialplugin (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.SillyAxialPlugin"]], "testplugin (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.TestPlugin"]], "testpluginbasics (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.TestPluginBasics"]], "testpluginregistration (class in armi.tests.test_plugins)": [[396, "armi.tests.test_plugins.TestPluginRegistration"]], "armi.tests.test_plugins": [[396, "module-armi.tests.test_plugins"]], "beforereactorconstruction() (armi.tests.test_plugins.beforereactorplugin static method)": [[396, "armi.tests.test_plugins.BeforeReactorPlugin.beforeReactorConstruction"]], "defineflags() (armi.tests.test_plugins.pluginflags1 static method)": [[396, "armi.tests.test_plugins.PluginFlags1.defineFlags"]], "expansiondata (armi.tests.test_plugins.sillyaxialexpansionchanger attribute)": [[396, "armi.tests.test_plugins.SillyAxialExpansionChanger.expansionData"]], "getaxialexpansionchanger() (armi.tests.test_plugins.sillyaxialplugin static method)": [[396, "armi.tests.test_plugins.SillyAxialPlugin.getAxialExpansionChanger"]], "linked (armi.tests.test_plugins.sillyaxialexpansionchanger attribute)": [[396, "armi.tests.test_plugins.SillyAxialExpansionChanger.linked"]], "plugin (armi.tests.test_plugins.testplugin attribute)": [[396, "armi.tests.test_plugins.TestPlugin.plugin"]], "test_axialexpansionhook() (armi.tests.test_plugins.testpluginregistration method)": [[396, "armi.tests.test_plugins.TestPluginRegistration.test_axialExpansionHook"]], "test_beforereactorconstructionhook() (armi.tests.test_plugins.testpluginregistration method)": [[396, "armi.tests.test_plugins.TestPluginRegistration.test_beforeReactorConstructionHook"]], "test_defineblueprintssections() (armi.tests.test_plugins.testplugin method)": [[396, "armi.tests.test_plugins.TestPlugin.test_defineBlueprintsSections"]], "test_defineflags() (armi.tests.test_plugins.testpluginregistration method)": [[396, "armi.tests.test_plugins.TestPluginRegistration.test_defineFlags"]], "test_defineparameters() (armi.tests.test_plugins.testpluginbasics method)": [[396, "armi.tests.test_plugins.TestPluginBasics.test_defineParameters"]], "test_exposeinterfaces() (armi.tests.test_plugins.testplugin method)": [[396, "armi.tests.test_plugins.TestPlugin.test_exposeInterfaces"]], "test_exposeinterfaces() (armi.tests.test_plugins.testpluginbasics method)": [[396, "armi.tests.test_plugins.TestPluginBasics.test_exposeInterfaces"]], "test_passivedbloadplugin() (armi.tests.test_plugins.testpluginregistration method)": [[396, "armi.tests.test_plugins.TestPluginRegistration.test_passiveDBLoadPlugin"]], "test_pluginsexposeinterfaces() (armi.tests.test_plugins.testpluginbasics method)": [[396, "armi.tests.test_plugins.TestPluginBasics.test_pluginsExposeInterfaces"]], "testrunlog (class in armi.tests.test_runlog)": [[397, "armi.tests.test_runLog.TestRunLog"]], "testrunlogger (class in armi.tests.test_runlog)": [[397, "armi.tests.test_runLog.TestRunLogger"]], "armi.tests.test_runlog": [[397, "module-armi.tests.test_runLog"]], "test_allowstopduplicates() (armi.tests.test_runlog.testrunlogger method)": [[397, "armi.tests.test_runLog.TestRunLogger.test_allowStopDuplicates"]], "test_callingstartlogmultipletimes() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_callingStartLogMultipleTimes"]], "test_closelogging() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_closeLogging"]], "test_concatenatelogs() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_concatenateLogs"]], "test_createlogdir() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_createLogDir"]], "test_getduplicatesfilter() (armi.tests.test_runlog.testrunlogger method)": [[397, "armi.tests.test_runLog.TestRunLogger.test_getDuplicatesFilter"]], "test_getwhitespace() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_getWhiteSpace"]], "test_invalidsetverbositybystring() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_invalidSetVerbosityByString"]], "test_parentrunlogging() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_parentRunLogging"]], "test_setverbosity() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_setVerbosity"]], "test_setverbositybeforestartlog() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_setVerbosityBeforeStartLog"]], "test_setverbosityfrominteger() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromInteger"]], "test_setverbosityfromstring() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromString"]], "test_verbosityoutofrange() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_verbosityOutOfRange"]], "test_warningreport() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_warningReport"]], "test_warningreportinvalid() (armi.tests.test_runlog.testrunlog method)": [[397, "armi.tests.test_runLog.TestRunLog.test_warningReportInvalid"]], "test_write() (armi.tests.test_runlog.testrunlogger method)": [[397, "armi.tests.test_runLog.TestRunLogger.test_write"]], "testcomparefiles (class in armi.tests.test_tests)": [[398, "armi.tests.test_tests.TestCompareFiles"]], "armi.tests.test_tests": [[398, "module-armi.tests.test_tests"]], "test_comparefileline() (armi.tests.test_tests.testcomparefiles method)": [[398, "armi.tests.test_tests.TestCompareFiles.test_compareFileLine"]], "testuserplugins (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.TestUserPlugins"]], "upinterface (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UpInterface"]], "userpluginbaddefineparameterrenames (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames"]], "userpluginbaddefinessettings (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings"]], "userpluginflags (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginFlags"]], "userpluginflags2 (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginFlags2"]], "userpluginflags3 (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginFlags3"]], "userpluginonprocesscoreloading (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading"]], "userpluginwithinterface (class in armi.tests.test_user_plugins)": [[399, "armi.tests.test_user_plugins.UserPluginWithInterface"]], "armi.tests.test_user_plugins": [[399, "module-armi.tests.test_user_plugins"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags static method)": [[399, "armi.tests.test_user_plugins.UserPluginFlags.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags2 static method)": [[399, "armi.tests.test_user_plugins.UserPluginFlags2.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags3 static method)": [[399, "armi.tests.test_user_plugins.UserPluginFlags3.defineFlags"]], "defineparameterrenames() (armi.tests.test_user_plugins.userpluginbaddefineparameterrenames static method)": [[399, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames.defineParameterRenames"]], "definesettings() (armi.tests.test_user_plugins.userpluginbaddefinessettings static method)": [[399, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings.defineSettings"]], "exposeinterfaces() (armi.tests.test_user_plugins.userpluginwithinterface static method)": [[399, "armi.tests.test_user_plugins.UserPluginWithInterface.exposeInterfaces"]], "interacteverynode() (armi.tests.test_user_plugins.upinterface method)": [[399, "armi.tests.test_user_plugins.UpInterface.interactEveryNode"]], "name (armi.tests.test_user_plugins.upinterface attribute)": [[399, "armi.tests.test_user_plugins.UpInterface.name"]], "onprocesscoreloading() (armi.tests.test_user_plugins.userpluginonprocesscoreloading static method)": [[399, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading.onProcessCoreLoading"]], "test_registerrepeateduserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_registerRepeatedUserPlugins"]], "test_registeruserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPlugins"]], "test_registeruserpluginsabspath() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsAbsPath"]], "test_registeruserpluginsfromsettings() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsFromSettings"]], "test_userpluginonprocesscoreloading() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginOnProcessCoreLoading"]], "test_userpluginwithinterfaces() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginWithInterfaces"]], "test_userpluginsflags() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginsFlags"]], "test_validateuserpluginlimitations() (armi.tests.test_user_plugins.testuserplugins method)": [[399, "armi.tests.test_user_plugins.TestUserPlugins.test_validateUserPluginLimitations"]], "mergeabledict (class in armi.utils)": [[400, "armi.utils.MergeableDict"]], "mypickler (class in armi.utils)": [[400, "armi.utils.MyPickler"]], "armi.utils": [[400, "module-armi.utils"]], "capstrlen() (in module armi.utils)": [[400, "armi.utils.capStrLen"]], "classesinhierarchy() (in module armi.utils)": [[400, "armi.utils.classesInHierarchy"]], "createformattedstrwithdelimiter() (in module armi.utils)": [[400, "armi.utils.createFormattedStrWithDelimiter"]], "dotestpickleonallcontents2() (in module armi.utils)": [[400, "armi.utils.doTestPickleOnAllContents2"]], "getavailabilityfactors() (in module armi.utils)": [[400, "armi.utils.getAvailabilityFactors"]], "getburnsteps() (in module armi.utils)": [[400, "armi.utils.getBurnSteps"]], "getcumulativenodenum() (in module armi.utils)": [[400, "armi.utils.getCumulativeNodeNum"]], "getcyclelengths() (in module armi.utils)": [[400, "armi.utils.getCycleLengths"]], "getcyclenames() (in module armi.utils)": [[400, "armi.utils.getCycleNames"]], "getcyclenodefromcumulativenode() (in module armi.utils)": [[400, "armi.utils.getCycleNodeFromCumulativeNode"]], "getcyclenodefromcumulativestep() (in module armi.utils)": [[400, "armi.utils.getCycleNodeFromCumulativeStep"]], "getfilesha1hash() (in module armi.utils)": [[400, "armi.utils.getFileSHA1Hash"]], "getmaxburnsteps() (in module armi.utils)": [[400, "armi.utils.getMaxBurnSteps"]], "getnodespercycle() (in module armi.utils)": [[400, "armi.utils.getNodesPerCycle"]], "getpowerfractions() (in module armi.utils)": [[400, "armi.utils.getPowerFractions"]], "getprevioustimenode() (in module armi.utils)": [[400, "armi.utils.getPreviousTimeNode"]], "getsteplengths() (in module armi.utils)": [[400, "armi.utils.getStepLengths"]], "hasburnup() (in module armi.utils)": [[400, "armi.utils.hasBurnup"]], "list2str() (in module armi.utils)": [[400, "armi.utils.list2str"]], "merge() (armi.utils.mergeabledict method)": [[400, "armi.utils.MergeableDict.merge"]], "plotmatrix() (in module armi.utils)": [[400, "armi.utils.plotMatrix"]], "prependtolist() (in module armi.utils)": [[400, "armi.utils.prependToList"]], "safecopy() (in module armi.utils)": [[400, "armi.utils.safeCopy"]], "safemove() (in module armi.utils)": [[400, "armi.utils.safeMove"]], "save() (armi.utils.mypickler method)": [[400, "armi.utils.MyPickler.save"]], "slantsplit() (in module armi.utils)": [[400, "armi.utils.slantSplit"]], "trypickleonallcontents() (in module armi.utils)": [[400, "armi.utils.tryPickleOnAllContents"]], "trypickleonallcontents3() (in module armi.utils)": [[400, "armi.utils.tryPickleOnAllContents3"]], "username() (in module armi.utils)": [[400, "armi.utils.userName"]], "asciimap (class in armi.utils.asciimaps)": [[401, "armi.utils.asciimaps.AsciiMap"]], "asciimapcartesian (class in armi.utils.asciimaps)": [[401, "armi.utils.asciimaps.AsciiMapCartesian"]], "asciimaphexfullflatsup (class in armi.utils.asciimaps)": [[401, "armi.utils.asciimaps.AsciiMapHexFullFlatsUp"]], "asciimaphexfulltipsup (class in armi.utils.asciimaps)": [[401, "armi.utils.asciimaps.AsciiMapHexFullTipsUp"]], "asciimaphexthirdflatsup (class in armi.utils.asciimaps)": [[401, "armi.utils.asciimaps.AsciiMapHexThirdFlatsUp"]], "armi.utils.asciimaps": [[401, "module-armi.utils.asciimaps"]], "asciilabelbyindices (armi.utils.asciimaps.asciimap attribute)": [[401, "armi.utils.asciimaps.AsciiMap.asciiLabelByIndices"]], "asciilines (armi.utils.asciimaps.asciimap attribute)": [[401, "armi.utils.asciimaps.AsciiMap.asciiLines"]], "asciimapfromgeomanddomain() (in module armi.utils.asciimaps)": [[401, "armi.utils.asciimaps.asciiMapFromGeomAndDomain"]], "asciioffsets (armi.utils.asciimaps.asciimap attribute)": [[401, "armi.utils.asciimaps.AsciiMap.asciiOffsets"]], "fromreactor() (armi.utils.asciimaps.asciimap static method)": [[401, "armi.utils.asciimaps.AsciiMap.fromReactor"]], "gridcontentstoascii() (armi.utils.asciimaps.asciimap method)": [[401, "armi.utils.asciimaps.AsciiMap.gridContentsToAscii"]], "items() (armi.utils.asciimaps.asciimap method)": [[401, "armi.utils.asciimaps.AsciiMap.items"]], "keys() (armi.utils.asciimaps.asciimap method)": [[401, "armi.utils.asciimaps.AsciiMap.keys"]], "readascii() (armi.utils.asciimaps.asciimap method)": [[401, "armi.utils.asciimaps.AsciiMap.readAscii"]], "writeascii() (armi.utils.asciimaps.asciimap method)": [[401, "armi.utils.asciimaps.AsciiMap.writeAscii"]], "mastertimer (class in armi.utils.codetiming)": [[402, "armi.utils.codeTiming.MasterTimer"]], "armi.utils.codetiming": [[402, "module-armi.utils.codeTiming"]], "endtimer() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.endTimer"]], "getactivetimers() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.getActiveTimers"]], "getmastertimer() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.getMasterTimer"]], "getmastertimer() (in module armi.utils.codetiming)": [[402, "armi.utils.codeTiming.getMasterTimer"]], "gettimer() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.getTimer"]], "report() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.report"]], "startall() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.startAll"]], "starttimer() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.startTimer"]], "stopall() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.stopAll"]], "time() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.time"]], "timed() (in module armi.utils.codetiming)": [[402, "armi.utils.codeTiming.timed"]], "timeline() (armi.utils.codetiming.mastertimer static method)": [[402, "armi.utils.codeTiming.MasterTimer.timeline"]], "inputerror": [[403, "armi.utils.customExceptions.InputError"]], "invalidsettingsfileerror": [[403, "armi.utils.customExceptions.InvalidSettingsFileError"]], "invalidsettingsstopprocess": [[403, "armi.utils.customExceptions.InvalidSettingsStopProcess"]], "nonexistentsetting": [[403, "armi.utils.customExceptions.NonexistentSetting"]], "nonexistentsettingsfileerror": [[403, "armi.utils.customExceptions.NonexistentSettingsFileError"]], "settingexception": [[403, "armi.utils.customExceptions.SettingException"]], "armi.utils.customexceptions": [[403, "module-armi.utils.customExceptions"]], "important() (in module armi.utils.customexceptions)": [[403, "armi.utils.customExceptions.important"]], "info() (in module armi.utils.customexceptions)": [[403, "armi.utils.customExceptions.info"]], "warn() (in module armi.utils.customexceptions)": [[403, "armi.utils.customExceptions.warn"]], "warn_when_root() (in module armi.utils.customexceptions)": [[403, "armi.utils.customExceptions.warn_when_root"]], "applyisotopicsmix() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.applyIsotopicsMix"]], "armi.utils.densitytools": [[404, "module-armi.utils.densityTools"]], "calculatemassdensity() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.calculateMassDensity"]], "calculatenumberdensity() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.calculateNumberDensity"]], "expandelementalmassfracstonuclides() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.expandElementalMassFracsToNuclides"]], "expandelementalnuclidemassfracs() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.expandElementalNuclideMassFracs"]], "filternuclidelist() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.filterNuclideList"]], "formatmaterialcard() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.formatMaterialCard"]], "getchemicals() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.getChemicals"]], "getmassfractions() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.getMassFractions"]], "getmassingrams() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.getMassInGrams"]], "getndensfrommasses() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.getNDensFromMasses"]], "normalizenuclidelist() (in module armi.utils.densitytools)": [[404, "armi.utils.densityTools.normalizeNuclideList"]], "directorychanger (class in armi.utils.directorychangers)": [[405, "armi.utils.directoryChangers.DirectoryChanger"]], "forcedcreationdirectorychanger (class in armi.utils.directorychangers)": [[405, "armi.utils.directoryChangers.ForcedCreationDirectoryChanger"]], "getrandomdirectory() (armi.utils.directorychangers.temporarydirectorychanger class method)": [[405, "armi.utils.directoryChangers.TemporaryDirectoryChanger.GetRandomDirectory"]], "temporarydirectorychanger (class in armi.utils.directorychangers)": [[405, "armi.utils.directoryChangers.TemporaryDirectoryChanger"]], "armi.utils.directorychangers": [[405, "module-armi.utils.directoryChangers"]], "close() (armi.utils.directorychangers.directorychanger method)": [[405, "armi.utils.directoryChangers.DirectoryChanger.close"]], "directorychangerfactory() (in module armi.utils.directorychangers)": [[405, "armi.utils.directoryChangers.directoryChangerFactory"]], "movefiles() (armi.utils.directorychangers.directorychanger method)": [[405, "armi.utils.directoryChangers.DirectoryChanger.moveFiles"]], "open() (armi.utils.directorychangers.directorychanger method)": [[405, "armi.utils.directoryChangers.DirectoryChanger.open"]], "retrievefiles() (armi.utils.directorychangers.directorychanger method)": [[405, "armi.utils.directoryChangers.DirectoryChanger.retrieveFiles"]], "mpidirectorychanger (class in armi.utils.directorychangersmpi)": [[406, "armi.utils.directoryChangersMpi.MpiDirectoryChanger"]], "armi.utils.directorychangersmpi": [[406, "module-armi.utils.directoryChangersMpi"]], "close() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[406, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.close"]], "open() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[406, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.open"]], "armi.utils.dynamicimporter": [[407, "module-armi.utils.dynamicImporter"]], "getentirefamilytree() (in module armi.utils.dynamicimporter)": [[407, "armi.utils.dynamicImporter.getEntireFamilyTree"]], "flag (class in armi.utils.flags)": [[408, "armi.utils.flags.Flag"]], "armi.utils.flags": [[408, "module-armi.utils.flags"]], "auto (class in armi.utils.flags)": [[408, "armi.utils.flags.auto"]], "extend() (armi.utils.flags.flag class method)": [[408, "armi.utils.flags.Flag.extend"]], "fields() (armi.utils.flags.flag class method)": [[408, "armi.utils.flags.Flag.fields"]], "from_bytes() (armi.utils.flags.flag class method)": [[408, "armi.utils.flags.Flag.from_bytes"]], "sortedfields() (armi.utils.flags.flag class method)": [[408, "armi.utils.flags.Flag.sortedFields"]], "to_bytes() (armi.utils.flags.flag method)": [[408, "armi.utils.flags.Flag.to_bytes"]], "width() (armi.utils.flags.flag class method)": [[408, "armi.utils.flags.Flag.width"]], "area() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.area"]], "armi.utils.hexagon": [[410, "module-armi.utils.hexagon"]], "corners() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.corners"]], "getindexofrotatedcell() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.getIndexOfRotatedCell"]], "numpositionsinring() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.numPositionsInRing"]], "numringstoholdnumcells() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.numRingsToHoldNumCells"]], "pitch() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.pitch"]], "side() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.side"]], "totalpositionsuptoring() (in module armi.utils.hexagon)": [[410, "armi.utils.hexagon.totalPositionsUpToRing"]], "sequence (class in armi.utils.iterables)": [[411, "armi.utils.iterables.Sequence"]], "append() (armi.utils.iterables.sequence method)": [[411, "armi.utils.iterables.Sequence.append"]], "armi.utils.iterables": [[411, "module-armi.utils.iterables"]], "chunk() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.chunk"]], "copy() (armi.utils.iterables.sequence method)": [[411, "armi.utils.iterables.Sequence.copy"]], "drop() (armi.utils.iterables.sequence method)": [[411, "armi.utils.iterables.Sequence.drop"]], "extend() (armi.utils.iterables.sequence method)": [[411, "armi.utils.iterables.Sequence.extend"]], "flatten() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.flatten"]], "packbinarystrings() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.packBinaryStrings"]], "packhexstrings() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.packHexStrings"]], "pivot() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.pivot"]], "select() (armi.utils.iterables.sequence method)": [[411, "armi.utils.iterables.Sequence.select"]], "split() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.split"]], "transform() (armi.utils.iterables.sequence method)": [[411, "armi.utils.iterables.Sequence.transform"]], "unpackbinarystrings() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.unpackBinaryStrings"]], "unpackhexstrings() (in module armi.utils.iterables)": [[411, "armi.utils.iterables.unpackHexStrings"]], "armi.utils.mathematics": [[412, "module-armi.utils.mathematics"]], "average1dwithintolerance() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.average1DWithinTolerance"]], "converttoslice() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.convertToSlice"]], "efmt() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.efmt"]], "expandrepeatedfloats() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.expandRepeatedFloats"]], "findclosest() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.findClosest"]], "findnearestvalue() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.findNearestValue"]], "findnearestvalueandindex() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.findNearestValueAndIndex"]], "fixthreedigitexp() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.fixThreeDigitExp"]], "getfloat() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.getFloat"]], "getstepsfromvalues() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.getStepsFromValues"]], "ismonotonic() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.isMonotonic"]], "linearinterpolation() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.linearInterpolation"]], "minimizescalarfunc() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.minimizeScalarFunc"]], "newtonsmethod() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.newtonsMethod"]], "parabolafrompoints() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.parabolaFromPoints"]], "parabolicinterpolation() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.parabolicInterpolation"]], "relerr() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.relErr"]], "resamplestepwise() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.resampleStepwise"]], "rotatexy() (in module armi.utils.mathematics)": [[412, "armi.utils.mathematics.rotateXY"]], "armi.utils.outputcache": [[413, "module-armi.utils.outputCache"]], "cachecall() (in module armi.utils.outputcache)": [[413, "armi.utils.outputCache.cacheCall"]], "deletecache() (in module armi.utils.outputcache)": [[413, "armi.utils.outputCache.deleteCache"]], "retrieveoutput() (in module armi.utils.outputcache)": [[413, "armi.utils.outputCache.retrieveOutput"]], "store() (in module armi.utils.outputcache)": [[413, "armi.utils.outputCache.store"]], "armi.utils.parsing": [[414, "module-armi.utils.parsing"]], "datetimefromstr() (in module armi.utils.parsing)": [[414, "armi.utils.parsing.datetimeFromStr"]], "parsevalue() (in module armi.utils.parsing)": [[414, "armi.utils.parsing.parseValue"]], "tryliteraleval() (in module armi.utils.parsing)": [[414, "armi.utils.parsing.tryLiteralEval"]], "armi.utils.pathtools": [[415, "module-armi.utils.pathTools"]], "armiabspath() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.armiAbsPath"]], "cleanpath() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.cleanPath"]], "copyorwarn() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.copyOrWarn"]], "importcustompymodule() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.importCustomPyModule"]], "isaccessible() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.isAccessible"]], "isfilepathnewer() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.isFilePathNewer"]], "moduleandattributeexist() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.moduleAndAttributeExist"]], "separatemoduleandattribute() (in module armi.utils.pathtools)": [[415, "armi.utils.pathTools.separateModuleAndAttribute"]], "depthslider (class in armi.utils.plotting)": [[416, "armi.utils.plotting.DepthSlider"]], "armi.utils.plotting": [[416, "module-armi.utils.plotting"]], "close() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.close"]], "colorgenerator() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.colorGenerator"]], "makehistogram() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.makeHistogram"]], "next() (armi.utils.plotting.depthslider method)": [[416, "armi.utils.plotting.DepthSlider.next"]], "plotassemblytypes() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.plotAssemblyTypes"]], "plotblockdepthmap() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.plotBlockDepthMap"]], "plotblockdiagram() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.plotBlockDiagram"]], "plotblockflux() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.plotBlockFlux"]], "plotfacemap() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.plotFaceMap"]], "plotnucxs() (in module armi.utils.plotting)": [[416, "armi.utils.plotting.plotNucXs"]], "previous() (armi.utils.plotting.depthslider method)": [[416, "armi.utils.plotting.DepthSlider.previous"]], "set_val() (armi.utils.plotting.depthslider method)": [[416, "armi.utils.plotting.DepthSlider.set_val"]], "updatepagedepthcolor() (armi.utils.plotting.depthslider method)": [[416, "armi.utils.plotting.DepthSlider.updatePageDepthColor"]], "immutablepropertyerror": [[417, "armi.utils.properties.ImmutablePropertyError"]], "areequal() (in module armi.utils.properties)": [[417, "armi.utils.properties.areEqual"]], "armi.utils.properties": [[417, "module-armi.utils.properties"]], "createimmutableproperty() (in module armi.utils.properties)": [[417, "armi.utils.properties.createImmutableProperty"]], "lockimmutableproperties() (in module armi.utils.properties)": [[417, "armi.utils.properties.lockImmutableProperties"]], "numpyhackforequal() (in module armi.utils.properties)": [[417, "armi.utils.properties.numpyHackForEqual"]], "unlockimmutableproperties() (in module armi.utils.properties)": [[417, "armi.utils.properties.unlockImmutableProperties"]], "armi.utils.reportplotting": [[418, "module-armi.utils.reportPlotting"]], "createplotmetadata() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.createPlotMetaData"]], "keffvstime() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.keffVsTime"]], "movesvscycle() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.movesVsCycle"]], "plotaxialprofile() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.plotAxialProfile"]], "plotcoreoverviewradar() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.plotCoreOverviewRadar"]], "plotreactorperformance() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.plotReactorPerformance"]], "valuevstime() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.valueVsTime"]], "xshistoryvstime() (in module armi.utils.reportplotting)": [[418, "armi.utils.reportPlotting.xsHistoryVsTime"]], "datarow (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.DataRow"]], "iterable (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.Iterable"]], "line (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.Line"]], "sized (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.Sized"]], "tableformat (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.TableFormat"]], "textwrapper (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.TextWrapper"]], "args (armi.utils.tabulate.partial attribute)": [[419, "armi.utils.tabulate.partial.args"]], "armi.utils.tabulate": [[419, "module-armi.utils.tabulate"]], "begin (armi.utils.tabulate.datarow attribute)": [[419, "armi.utils.tabulate.DataRow.begin"]], "begin (armi.utils.tabulate.line attribute)": [[419, "armi.utils.tabulate.Line.begin"]], "chain (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.chain"]], "datarow (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.datarow"]], "end (armi.utils.tabulate.datarow attribute)": [[419, "armi.utils.tabulate.DataRow.end"]], "end (armi.utils.tabulate.line attribute)": [[419, "armi.utils.tabulate.Line.end"]], "fill() (armi.utils.tabulate.textwrapper method)": [[419, "armi.utils.tabulate.TextWrapper.fill"]], "from_iterable() (armi.utils.tabulate.chain method)": [[419, "armi.utils.tabulate.chain.from_iterable"]], "func (armi.utils.tabulate.partial attribute)": [[419, "armi.utils.tabulate.partial.func"]], "headerrow (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.headerrow"]], "hline (armi.utils.tabulate.line attribute)": [[419, "armi.utils.tabulate.Line.hline"]], "keywords (armi.utils.tabulate.partial attribute)": [[419, "armi.utils.tabulate.partial.keywords"]], "lineabove (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.lineabove"]], "linebelow (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.linebelow"]], "linebelowheader (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.linebelowheader"]], "linebetweenrows (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.linebetweenrows"]], "namedtuple() (in module armi.utils.tabulate)": [[419, "armi.utils.tabulate.namedtuple"]], "padding (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.padding"]], "partial (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.partial"]], "reduce() (in module armi.utils.tabulate)": [[419, "armi.utils.tabulate.reduce"]], "sentence_end_re (armi.utils.tabulate.textwrapper attribute)": [[419, "armi.utils.tabulate.TextWrapper.sentence_end_re"]], "sep (armi.utils.tabulate.datarow attribute)": [[419, "armi.utils.tabulate.DataRow.sep"]], "sep (armi.utils.tabulate.line attribute)": [[419, "armi.utils.tabulate.Line.sep"]], "tabulate() (in module armi.utils.tabulate)": [[419, "armi.utils.tabulate.tabulate"]], "unicode_whitespace_trans (armi.utils.tabulate.textwrapper attribute)": [[419, "armi.utils.tabulate.TextWrapper.unicode_whitespace_trans"]], "uspace (armi.utils.tabulate.textwrapper attribute)": [[419, "armi.utils.tabulate.TextWrapper.uspace"]], "withheaderhide (armi.utils.tabulate.tableformat attribute)": [[419, "armi.utils.tabulate.TableFormat.withHeaderHide"]], "wordsep_re (armi.utils.tabulate.textwrapper attribute)": [[419, "armi.utils.tabulate.TextWrapper.wordsep_re"]], "wordsep_simple_re (armi.utils.tabulate.textwrapper attribute)": [[419, "armi.utils.tabulate.TextWrapper.wordsep_simple_re"]], "wrap() (armi.utils.tabulate.textwrapper method)": [[419, "armi.utils.tabulate.TextWrapper.wrap"]], "x (armi.utils.tabulate.textwrapper attribute)": [[419, "armi.utils.tabulate.TextWrapper.x"]], "zip_longest (class in armi.utils.tabulate)": [[419, "armi.utils.tabulate.zip_longest"]], "armi.utils.tests": [[420, "module-armi.utils.tests"]], "testasciimaps (class in armi.utils.tests.test_asciimaps)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps"]], "armi.utils.tests.test_asciimaps": [[421, "module-armi.utils.tests.test_asciimaps"]], "test_cartesian() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_cartesian"]], "test_flathexbases() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_flatHexBases"]], "test_hexfullcornersup() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullCornersUp"]], "test_hexfullcornersupspotcheck() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullCornersUpSpotCheck"]], "test_hexfullflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullFlat"]], "test_hexfullflatsup() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullFlatsUp"]], "test_hexsmallflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexSmallFlat"]], "test_hexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexThird"]], "test_hexwithemptyrow() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithEmptyRow"]], "test_hexwithholes() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithHoles"]], "test_troublesomehexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[421, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_troublesomeHexThird"]], "codetimingtest (class in armi.utils.tests.test_codetiming)": [[422, "armi.utils.tests.test_codeTiming.CodeTimingTest"]], "armi.utils.tests.test_codetiming": [[422, "module-armi.utils.tests.test_codeTiming"]], "test_alternate_usages() (armi.utils.tests.test_codetiming.codetimingtest method)": [[422, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_alternate_usages"]], "test_master() (armi.utils.tests.test_codetiming.codetimingtest method)": [[422, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_master"]], "test_messy_starts_and_stops() (armi.utils.tests.test_codetiming.codetimingtest method)": [[422, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_messy_starts_and_stops"]], "test_method_definitions() (armi.utils.tests.test_codetiming.codetimingtest method)": [[422, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_method_definitions"]], "test_property_access() (armi.utils.tests.test_codetiming.codetimingtest method)": [[422, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_property_access"]], "customexceptiontests (class in armi.utils.tests.test_custom_exceptions)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions": [[423, "module-armi.utils.tests.test_custom_exceptions"]], "exampleimportantmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleImportantMessage"]], "exampleinfomessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleInfoMessage"]], "examplewarnmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnMessage"]], "examplewarnwhenrootmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnWhenRootMessage"]], "test_important_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_important_decorator"]], "test_info_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_info_decorator"]], "test_warn_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_decorator"]], "test_warn_when_root_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[423, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_when_root_decorator"]], "testdensitytools (class in armi.utils.tests.test_densitytools)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools"]], "uraniumoxide (class in armi.utils.tests.test_densitytools)": [[424, "armi.utils.tests.test_densityTools.UraniumOxide"]], "armi.utils.tests.test_densitytools": [[424, "module-armi.utils.tests.test_densityTools"]], "density() (armi.utils.tests.test_densitytools.uraniumoxide method)": [[424, "armi.utils.tests.test_densityTools.UraniumOxide.density"]], "pseudodensity() (armi.utils.tests.test_densitytools.uraniumoxide method)": [[424, "armi.utils.tests.test_densityTools.UraniumOxide.pseudoDensity"]], "test_applyisotopicsmix() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_applyIsotopicsMix"]], "test_calculatenumberdensity() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_calculateNumberDensity"]], "test_expandelement() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElement"]], "test_expandelementalmassfracstonuclides() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElementalMassFracsToNuclides"]], "test_expandelementalzeromassfrac() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElementalZeroMassFrac"]], "test_formatmaterialcard() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_formatMaterialCard"]], "test_getchemicals() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_getChemicals"]], "test_getmassfractions() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_getMassFractions"]], "test_getmassingrams() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_getMassInGrams"]], "test_getndensfrommasses() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_getNDensFromMasses"]], "test_normalizenuclidelist() (armi.utils.tests.test_densitytools.testdensitytools method)": [[424, "armi.utils.tests.test_densityTools.TestDensityTools.test_normalizeNuclideList"]], "expectedexception": [[425, "armi.utils.tests.test_directoryChangers.ExpectedException"]], "testdirectorychangers (class in armi.utils.tests.test_directorychangers)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers"]], "armi.utils.tests.test_directorychangers": [[425, "module-armi.utils.tests.test_directoryChangers"]], "test_change_to_nonexisting_fails() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_fails"]], "test_change_to_nonexisting_works_forced() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_works_forced"]], "test_exception() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception"]], "test_exception_disabled() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception_disabled"]], "test_file_retrieval() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval"]], "test_file_retrieval_missing_file() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval_missing_file"]], "test_mpiaction() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiAction"]], "test_mpiactionfailsonnonexistentpath() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiActionFailsOnNonexistentPath"]], "test_temporary_cleans() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[425, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_temporary_cleans"]], "revealyourdirectory (class in armi.utils.tests.test_directorychangersmpi)": [[426, "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory"]], "testmpi (class in armi.utils.tests.test_directorychangersmpi)": [[426, "armi.utils.tests.test_directoryChangersMpi.TestMPI"]], "armi.utils.tests.test_directorychangersmpi": [[426, "module-armi.utils.tests.test_directoryChangersMpi"]], "invokehook() (armi.utils.tests.test_directorychangersmpi.revealyourdirectory method)": [[426, "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory.invokeHook"]], "test_mpidirectorychanger() (armi.utils.tests.test_directorychangersmpi.testmpi method)": [[426, "armi.utils.tests.test_directoryChangersMpi.TestMPI.test_MpiDirectoryChanger"]], "bar (armi.utils.tests.test_flags.exampleflag attribute)": [[427, "armi.utils.tests.test_flags.ExampleFlag.BAR"]], "baz (armi.utils.tests.test_flags.exampleflag attribute)": [[427, "armi.utils.tests.test_flags.ExampleFlag.BAZ"]], "exampleflag (class in armi.utils.tests.test_flags)": [[427, "armi.utils.tests.test_flags.ExampleFlag"]], "foo (armi.utils.tests.test_flags.exampleflag attribute)": [[427, "armi.utils.tests.test_flags.ExampleFlag.FOO"]], "testflag (class in armi.utils.tests.test_flags)": [[427, "armi.utils.tests.test_flags.TestFlag"]], "armi.utils.tests.test_flags": [[427, "module-armi.utils.tests.test_flags"]], "test_auto() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_auto"]], "test_bitwise() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_bitwise"]], "test_bool() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_bool"]], "test_collision_creation() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_collision_creation"]], "test_collision_extension() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_collision_extension"]], "test_extend() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_extend"]], "test_getitem() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_getitem"]], "test_hashable() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_hashable"]], "test_inclusion() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_inclusion"]], "test_iteration() (armi.utils.tests.test_flags.testflag method)": [[427, "armi.utils.tests.test_flags.TestFlag.test_iteration"]], "n_fuzzy_draws (armi.utils.tests.test_hexagon.testhexagon attribute)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.N_FUZZY_DRAWS"]], "testhexagon (class in armi.utils.tests.test_hexagon)": [[428, "armi.utils.tests.test_hexagon.TestHexagon"]], "armi.utils.tests.test_hexagon": [[428, "module-armi.utils.tests.test_hexagon"]], "test_hexagon_area() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_hexagon_area"]], "test_indexwithnorotation() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_indexWithNoRotation"]], "test_numpositionsinring() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_numPositionsInRing"]], "test_positionsuptoring() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_positionsUpToRing"]], "test_rotatefuzzy() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_rotateFuzzy"]], "test_rotatedcellcenter() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellCenter"]], "test_rotatedcellindexerrors() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellIndexErrors"]], "test_rotatedcellorientationerrors() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellOrientationErrors"]], "test_rotatedfirstring() (armi.utils.tests.test_hexagon.testhexagon method)": [[428, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedFirstRing"]], "testiterables (class in armi.utils.tests.test_iterables)": [[429, "armi.utils.tests.test_iterables.TestIterables"]], "armi.utils.tests.test_iterables": [[429, "module-armi.utils.tests.test_iterables"]], "test_addingsequences() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_addingSequences"]], "test_appendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_appendSequence"]], "test_arraypivot() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_arrayPivot"]], "test_chunk() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_chunk"]], "test_copysequence() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_copySequence"]], "test_extendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_extendSequence"]], "test_flatten() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_flatten"]], "test_listpivot() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_listPivot"]], "test_packingandunpackingbinarystrings() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingBinaryStrings"]], "test_packingandunpackinghexstrings() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingHexStrings"]], "test_sequence() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_sequence"]], "test_sequenceinit() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_sequenceInit"]], "test_split() (armi.utils.tests.test_iterables.testiterables method)": [[429, "armi.utils.tests.test_iterables.TestIterables.test_split"]], "testmath (class in armi.utils.tests.test_mathematics)": [[430, "armi.utils.tests.test_mathematics.TestMath"]], "armi.utils.tests.test_mathematics": [[430, "module-armi.utils.tests.test_mathematics"]], "test_average1dwithintolerance() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinTolerance"]], "test_average1dwithintoleranceinvalid() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinToleranceInvalid"]], "test_converttoslice() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_convertToSlice"]], "test_efmt() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_efmt"]], "test_expandrepeatedfloats() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_expandRepeatedFloats"]], "test_findclosest() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_findClosest"]], "test_findnearestvalue() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_findNearestValue"]], "test_fixthreedigitexp() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_fixThreeDigitExp"]], "test_getfloat() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_getFloat"]], "test_getstepsfromvalues() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_getStepsFromValues"]], "test_ismonotonic() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_isMonotonic"]], "test_linearinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_linearInterpolation"]], "test_minimizescalarfunc() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_minimizeScalarFunc"]], "test_newtonsmethod() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_newtonsMethod"]], "test_parabola() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_parabola"]], "test_parabolicinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_parabolicInterpolation"]], "test_relerr() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_relErr"]], "test_resamplestepwiseavg0() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg0"]], "test_resamplestepwiseavg1() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg1"]], "test_resamplestepwiseavg2() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg2"]], "test_resamplestepwiseavg3() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg3"]], "test_resamplestepwiseavg4() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg4"]], "test_resamplestepwiseavg5() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg5"]], "test_resamplestepwiseavg6() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg6"]], "test_resamplestepwiseavg7() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg7"]], "test_resamplestepwiseavgallnones() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgAllNones"]], "test_resamplestepwiseavgcomplicatednone() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgComplicatedNone"]], "test_resamplestepwiseavgnparray() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArray"]], "test_resamplestepwiseavgnparrayaverage() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArrayAverage"]], "test_resamplestepwiseavgonenone() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgOneNone"]], "test_resamplestepwisesum0() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum0"]], "test_resamplestepwisesum1() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum1"]], "test_resamplestepwisesum2() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum2"]], "test_resamplestepwisesum3() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum3"]], "test_resamplestepwisesum4() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum4"]], "test_resamplestepwisesum5() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum5"]], "test_resamplestepwisesum6() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum6"]], "test_resamplestepwisesum7() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum7"]], "test_resamplestepwisesumallnones() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumAllNones"]], "test_resamplestepwisesumonenone() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumOneNone"]], "test_rotatexy() (armi.utils.tests.test_mathematics.testmath method)": [[430, "armi.utils.tests.test_mathematics.TestMath.test_rotateXY"]], "testoutputcache (class in armi.utils.tests.test_outputcache)": [[431, "armi.utils.tests.test_outputCache.TestOutputCache"]], "armi.utils.tests.test_outputcache": [[431, "module-armi.utils.tests.test_outputCache"]], "test_deletecache() (armi.utils.tests.test_outputcache.testoutputcache method)": [[431, "armi.utils.tests.test_outputCache.TestOutputCache.test_deleteCache"]], "test_getcachedfolder() (armi.utils.tests.test_outputcache.testoutputcache method)": [[431, "armi.utils.tests.test_outputCache.TestOutputCache.test_getCachedFolder"]], "test_hashfiles() (armi.utils.tests.test_outputcache.testoutputcache method)": [[431, "armi.utils.tests.test_outputCache.TestOutputCache.test_hashFiles"]], "test_makeoutputmanifest() (armi.utils.tests.test_outputcache.testoutputcache method)": [[431, "armi.utils.tests.test_outputCache.TestOutputCache.test_makeOutputManifest"]], "test_retrieveoutput() (armi.utils.tests.test_outputcache.testoutputcache method)": [[431, "armi.utils.tests.test_outputCache.TestOutputCache.test_retrieveOutput"]], "literalevaltest (class in armi.utils.tests.test_parsing)": [[432, "armi.utils.tests.test_parsing.LiteralEvalTest"]], "armi.utils.tests.test_parsing": [[432, "module-armi.utils.tests.test_parsing"]], "test_parsevalue() (armi.utils.tests.test_parsing.literalevaltest method)": [[432, "armi.utils.tests.test_parsing.LiteralEvalTest.test_parseValue"]], "test_tryliteraleval() (armi.utils.tests.test_parsing.literalevaltest method)": [[432, "armi.utils.tests.test_parsing.LiteralEvalTest.test_tryLiteralEval"]], "pathtoolstests (class in armi.utils.tests.test_pathtools)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests"]], "armi.utils.tests.test_pathtools": [[433, "module-armi.utils.tests.test_pathTools"]], "test_cleanpathnompi() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_cleanPathNoMpi"]], "test_copyorwarndir() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_copyOrWarnDir"]], "test_copyorwarnfile() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_copyOrWarnFile"]], "test_importcustommodule() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_importCustomModule"]], "test_isaccessible() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_isAccessible"]], "test_isfilepathnewer() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_isFilePathNewer"]], "test_moduleandattributeexist() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_moduleAndAttributeExist"]], "test_separatemoduleandattribute() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[433, "armi.utils.tests.test_pathTools.PathToolsTests.test_separateModuleAndAttribute"]], "testpatches (class in armi.utils.tests.test_plotting)": [[434, "armi.utils.tests.test_plotting.TestPatches"]], "testplotting (class in armi.utils.tests.test_plotting)": [[434, "armi.utils.tests.test_plotting.TestPlotting"]], "armi.utils.tests.test_plotting": [[434, "module-armi.utils.tests.test_plotting"]], "test_makeassempatches() (armi.utils.tests.test_plotting.testpatches method)": [[434, "armi.utils.tests.test_plotting.TestPatches.test_makeAssemPatches"]], "test_plotassemblytypes() (armi.utils.tests.test_plotting.testplotting method)": [[434, "armi.utils.tests.test_plotting.TestPlotting.test_plotAssemblyTypes"]], "test_plotblockflux() (armi.utils.tests.test_plotting.testplotting method)": [[434, "armi.utils.tests.test_plotting.TestPlotting.test_plotBlockFlux"]], "test_plotcartesianblock() (armi.utils.tests.test_plotting.testplotting method)": [[434, "armi.utils.tests.test_plotting.TestPlotting.test_plotCartesianBlock"]], "test_plotdepthmap() (armi.utils.tests.test_plotting.testplotting method)": [[434, "armi.utils.tests.test_plotting.TestPlotting.test_plotDepthMap"]], "test_plothexblock() (armi.utils.tests.test_plotting.testplotting method)": [[434, "armi.utils.tests.test_plotting.TestPlotting.test_plotHexBlock"]], "immutableclass (class in armi.utils.tests.test_properties)": [[435, "armi.utils.tests.test_properties.ImmutableClass"]], "immutablepropertytests (class in armi.utils.tests.test_properties)": [[435, "armi.utils.tests.test_properties.ImmutablePropertyTests"]], "armi.utils.tests.test_properties": [[435, "module-armi.utils.tests.test_properties"]], "initialize() (armi.utils.tests.test_properties.immutableclass method)": [[435, "armi.utils.tests.test_properties.ImmutableClass.initialize"]], "mynum (armi.utils.tests.test_properties.immutableclass property)": [[435, "armi.utils.tests.test_properties.ImmutableClass.myNum"]], "test_cannotassignvaluetoimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[435, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_cannotAssignValueToImmutableProperty"]], "test_retreivingunassignedvalueraiseserror() (armi.utils.tests.test_properties.immutablepropertytests method)": [[435, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_retreivingUnassignedValueRaisesError"]], "test_unlockdoesnotpermitsreassignmentofanimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[435, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "testradar (class in armi.utils.tests.test_reportplotting)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar"]], "armi.utils.tests.test_reportplotting": [[436, "module-armi.utils.tests.test_reportPlotting"]], "test_createplotmetadata() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_createPlotMetaData"]], "test_keffvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_keffVsTime"]], "test_movesvscycle() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_movesVsCycle"]], "test_plotaxialprofile() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_plotAxialProfile"]], "test_radar() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_radar"]], "test_valuevstime() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_valueVsTime"]], "test_xshistoryvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[436, "armi.utils.tests.test_reportPlotting.TestRadar.test_xsHistoryVsTime"]], "testtabulateapi (class in armi.utils.tests.test_tabulate)": [[437, "armi.utils.tests.test_tabulate.TestTabulateAPI"]], "testtabulateinputs (class in armi.utils.tests.test_tabulate)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs"]], "testtabulateinternal (class in armi.utils.tests.test_tabulate)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal"]], "testtabulateoutput (class in armi.utils.tests.test_tabulate)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput"]], "armi.utils.tests.test_tabulate": [[437, "module-armi.utils.tests.test_tabulate"]], "test_aligncellveriticallybottommultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyBottomMultiTextMultiplePad"]], "test_aligncellveriticallybottomsingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyBottomSingleTextMultiplePad"]], "test_aligncellveriticallycentermultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyCenterMultiTextMultiplePad"]], "test_aligncellveriticallycentersingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyCenterSingleTextMultiplePad"]], "test_aligncellveriticallyonelineonly() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyOneLineOnly"]], "test_aligncellveriticallytopmultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyTopMultiTextMultiplePad"]], "test_aligncellveriticallytopsingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyTopSingleTextMultiplePad"]], "test_aligncolumndecimal() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimal"]], "test_aligncolumndecimalwithincorrectthousandseparators() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimalWithIncorrectThousandSeparators"]], "test_aligncolumndecimalwiththousandseparators() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimalWithThousandSeparators"]], "test_aligncolumnmultiline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnMultiline"]], "test_aligncolumnnone() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnNone"]], "test_assortedrareedgecases() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_assortedRareEdgeCases"]], "test_bool() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_bool"]], "test_buildline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_buildLine"]], "test_buildrow() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_buildRow"]], "test_colalignmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignMulti"]], "test_colalignmultiwithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignMultiWithSepLine"]], "test_colalignorheadersaligntoolong() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignOrheadersAlignTooLong"]], "test_columnalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_columnAlignment"]], "test_columnglobalandspecificalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_columnGlobalAndSpecificAlignment"]], "test_dictlike() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_dictLike"]], "test_dictlikewithindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_dictLikeWithIndex"]], "test_disablenumparsedefault() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseDefault"]], "test_disablenumparselist() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseList"]], "test_disablenumparsetrue() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseTrue"]], "test_emptydata() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyData"]], "test_emptydatawithheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyDataWithHeaders"]], "test_emptydatawithoutheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyDataWithoutHeaders"]], "test_floatconversions() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatConversions"]], "test_floatfmt() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatFmt"]], "test_floatfmtmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatFmtMulti"]], "test_format() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_format"]], "test_github() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_github"]], "test_grid() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_grid"]], "test_gridheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridHeaderless"]], "test_gridmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultiline"]], "test_gridmultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineHeaderless"]], "test_gridmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineWithEmptyCells"]], "test_gridmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineWithEmptyCellsHeaderless"]], "test_headersglobalandspecificalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_headersGlobalAndSpecificAlignment"]], "test_intfmt() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_intFmt"]], "test_ismultiline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_isMultiline"]], "test_iterableofempties() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfEmpties"]], "test_iterableofiterables() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterables"]], "test_iterableofiterablesfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterablesFirstrow"]], "test_iterableofiterablesheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterablesHeaders"]], "test_listbytes() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listBytes"]], "test_listofdicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDicts"]], "test_listofdictsfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsFirstrow"]], "test_listofdictskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsKeys"]], "test_listofdictswithdictofheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithDictOfHeaders"]], "test_listofdictswithlistofheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithListOfHeaders"]], "test_listofdictswithmissingkeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithMissingKeys"]], "test_listoflists() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfLists"]], "test_listoflistsfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfListsFirstrow"]], "test_listoflistskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfListsKeys"]], "test_listoflistswithindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndex"]], "test_listoflistswithindexfirstrow() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndexFirstrow"]], "test_listoflistswithindexwithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndexWithSepLine"]], "test_listoflistswithsuppliedindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithSuppliedIndex"]], "test_listofnamedtuples() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfNamedtuples"]], "test_listofnamedtupleskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfNamedtuplesKeys"]], "test_listofordereddicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfOrdereddicts"]], "test_listofuserdicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfUserdicts"]], "test_listofuserdictskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfUserdictsKeys"]], "test_maxcolwidthsinglevalue() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxColWidthsingleValue"]], "test_maxcolwidthhonordisableparsenum() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxcolwidthHonorDisableParsenum"]], "test_maxcolwidthpadtailingwidths() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxcolwidthPadTailingWidths"]], "test_missingval() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_missingVal"]], "test_missingvalmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_missingValMulti"]], "test_multilinewidth() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_multilineWidth"]], "test_nodata() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_noData"]], "test_nodatawithoutheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_noDataWithoutHeaders"]], "test_normalizetabulardata() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_normalizeTabularData"]], "test_numpy2d() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2d"]], "test_numpy2dfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2dFirstrow"]], "test_numpy2dkeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2dKeys"]], "test_numpyrecordarray() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArray"]], "test_numpyrecordarrayheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArrayHeaders"]], "test_numpyrecordarraykeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArrayKeys"]], "test_plain() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plain"]], "test_plainheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainHeaderless"]], "test_plainmaxcolwidthautowraps() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMaxcolwidthAutowraps"]], "test_plainmaxcolwidthautowrapswithsep() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMaxcolwidthAutowrapsWithSep"]], "test_plainmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultiline"]], "test_plainmultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineHeaderless"]], "test_plainmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithEmptyCells"]], "test_plainmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithEmptyCellsHeaderless"]], "test_plainmultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithLinks"]], "test_plainmaxheadercolwidthsautowraps() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainmaxHeaderColWidthsAutowraps"]], "test_pretty() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_pretty"]], "test_prettyheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyHeaderless"]], "test_prettymultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultiline"]], "test_prettymultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineHeaderless"]], "test_prettymultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithEmptyCells"]], "test_prettymultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithEmptyCellsHeaderless"]], "test_prettymultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithLinks"]], "test_readmeexamplewithsep() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_readmeExampleWithSep"]], "test_rst() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rst"]], "test_rstheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstHeaderless"]], "test_rstmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultiline"]], "test_rstmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithEmptyCells"]], "test_rstmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithEmptyCellsHeaderless"]], "test_rstmultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithLinks"]], "test_rstwithemptyvaluesinfirstcolumn() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstWithEmptyValuesInFirstColumn"]], "test_simple() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simple"]], "test_simpleheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleHeaderless"]], "test_simpleheaderlesswithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleHeaderlessWithSepLine"]], "test_simplemultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline"]], "test_simplemultiline2() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline2"]], "test_simplemultiline2withsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline2WithSepLine"]], "test_simplemultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineHeaderless"]], "test_simplemultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithEmptyCells"]], "test_simplemultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithEmptyCellsHeaderless"]], "test_simplemultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithLinks"]], "test_simplewithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleWithSepLine"]], "test_tabulateformats() (armi.utils.tests.test_tabulate.testtabulateapi method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateAPI.test_tabulateFormats"]], "test_tightcouplingexample() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_tightCouplingExample"]], "test_type() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_type"]], "test_visiblewidth() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_visibleWidth"]], "test_wraptexttocolwidths() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[437, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_wrapTextToColWidths"]], "sequentialreadertests (class in armi.utils.tests.test_textprocessors)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests"]], "testtextprocessor (class in armi.utils.tests.test_textprocessors)": [[438, "armi.utils.tests.test_textProcessors.TestTextProcessor"]], "yamlincludetest (class in armi.utils.tests.test_textprocessors)": [[438, "armi.utils.tests.test_textProcessors.YamlIncludeTest"]], "armi.utils.tests.test_textprocessors": [[438, "module-armi.utils.tests.test_textProcessors"]], "test_consumeline() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_consumeLine"]], "test_findincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[438, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_findIncludes"]], "test_fsearch() (armi.utils.tests.test_textprocessors.testtextprocessor method)": [[438, "armi.utils.tests.test_textProcessors.TestTextProcessor.test_fsearch"]], "test_fsearchtext() (armi.utils.tests.test_textprocessors.testtextprocessor method)": [[438, "armi.utils.tests.test_textProcessors.TestTextProcessor.test_fsearchText"]], "test_issuewarningonfindingtext() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_issueWarningOnFindingText"]], "test_raiseerroronfindingtext() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_raiseErrorOnFindingText"]], "test_readfile() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFile"]], "test_readfilewithpattern() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFileWithPattern"]], "test_resolveincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[438, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes"]], "test_resolveincludes_stringio() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[438, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes_StringIO"]], "textstream (armi.utils.tests.test_textprocessors.sequentialreadertests attribute)": [[438, "armi.utils.tests.test_textProcessors.SequentialReaderTests.textStream"]], "testtriangle (class in armi.utils.tests.test_triangle)": [[439, "armi.utils.tests.test_triangle.TestTriangle"]], "armi.utils.tests.test_triangle": [[439, "module-armi.utils.tests.test_triangle"]], "test_checkifpointisintriangle() (armi.utils.tests.test_triangle.testtriangle method)": [[439, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle"]], "test_checkifpointisintriangle2() (armi.utils.tests.test_triangle.testtriangle method)": [[439, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle2"]], "test_gettrianglearea() (armi.utils.tests.test_triangle.testtriangle method)": [[439, "armi.utils.tests.test_triangle.TestTriangle.test_getTriangleArea"]], "testunits (class in armi.utils.tests.test_units)": [[440, "armi.utils.tests.test_units.TestUnits"]], "armi.utils.tests.test_units": [[440, "module-armi.utils.tests.test_units"]], "test_convertxtopascal() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_convertXtoPascal"]], "test_gettc() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_getTc"]], "test_gettemperature() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_getTemperature"]], "test_gettf() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_getTf"]], "test_gettk() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_getTk"]], "test_gettmev() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_getTmev"]], "test_getxylineparameters() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_getXYLineParameters"]], "test_pressure_converter() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_pressure_converter"]], "test_sanitizeangle() (armi.utils.tests.test_units.testunits method)": [[440, "armi.utils.tests.test_units.TestUnits.test_sanitizeAngle"]], "cyclessettingstests (class in armi.utils.tests.test_utils)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests"]], "testgeneralutils (class in armi.utils.tests.test_utils)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils"]], "armi.utils.tests.test_utils": [[441, "module-armi.utils.tests.test_utils"]], "availabilityfactorsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsDetailedSolution"]], "availabilityfactorssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsSimpleSolution"]], "burnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsDetailedSolution"]], "burnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsSimpleSolution"]], "cyclelengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsDetailedSolution"]], "cyclelengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsSimpleSolution"]], "cyclenamesdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesDetailedSolution"]], "cyclenamessimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesSimpleSolution"]], "detailedcyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.detailedCyclesSettings"]], "maxburnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsDetailedSolution"]], "maxburnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsSimpleSolution"]], "nodespercycledetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleDetailedSolution"]], "nodespercyclesimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleSimpleSolution"]], "powerfractionsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsDetailedSolution"]], "powerfractionssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsSimpleSolution"]], "simplecyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.simpleCyclesSettings"]], "steplengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsDetailedSolution"]], "steplengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsSimpleSolution"]], "test_capstrlen() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_capStrLen"]], "test_classesinhierarchy() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_classesInHierarchy"]], "test_codetiming() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_codeTiming"]], "test_createformattedstrwithdelimiter() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_createFormattedStrWithDelimiter"]], "test_getavailabilityfactors() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getBurnSteps"]], "test_getcumulativenodenum() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCumulativeNodeNum"]], "test_getcyclelengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNames"]], "test_getcyclenodefromcumulativenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeNode"]], "test_getcyclenodefromcumulativestep() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeStep"]], "test_getfilesha1hash() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_getFileSHA1Hash"]], "test_getfilesha1hashdir() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_getFileSHA1HashDir"]], "test_getmaxburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getnodespercycle() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getNodesPerCycle"]], "test_getpowerfractions() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPowerFractions"]], "test_getprevioustimenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPreviousTimeNode"]], "test_getsteplengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getStepLengths"]], "test_hasburnup() (armi.utils.tests.test_utils.cyclessettingstests method)": [[441, "armi.utils.tests.test_utils.CyclesSettingsTests.test_hasBurnup"]], "test_list2str() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_list2str"]], "test_mergeabledictionary() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_mergeableDictionary"]], "test_plotmatrix() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_plotMatrix"]], "test_prependtolist() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_prependToList"]], "test_safecopy() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_safeCopy"]], "test_safemove() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_safeMove"]], "test_safemovedir() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_safeMoveDir"]], "test_slantsplit() (armi.utils.tests.test_utils.testgeneralutils method)": [[441, "armi.utils.tests.test_utils.TestGeneralUtils.test_slantSplit"]], "decimal_pattern (in module armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.DECIMAL_PATTERN"]], "floating_pattern (in module armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.FLOATING_PATTERN"]], "filemark (class in armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.FileMark"]], "scientific_pattern (in module armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.SCIENTIFIC_PATTERN"]], "sequentialreader (class in armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.SequentialReader"]], "sequentialstringioreader (class in armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.SequentialStringIOReader"]], "textprocessor (class in armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.TextProcessor"]], "armi.utils.textprocessors": [[442, "module-armi.utils.textProcessors"]], "checkerrors() (armi.utils.textprocessors.textprocessor method)": [[442, "armi.utils.textProcessors.TextProcessor.checkErrors"]], "consumeline() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.consumeLine"]], "decimal (armi.utils.textprocessors.textprocessor attribute)": [[442, "armi.utils.textProcessors.TextProcessor.decimal"]], "errorchecking() (armi.utils.textprocessors.textprocessor method)": [[442, "armi.utils.textProcessors.TextProcessor.errorChecking"]], "findyamlinclusions() (in module armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.findYamlInclusions"]], "fsearch() (armi.utils.textprocessors.textprocessor method)": [[442, "armi.utils.textProcessors.TextProcessor.fsearch"]], "issuewarningonfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.issueWarningOnFindingText"]], "number (armi.utils.textprocessors.textprocessor attribute)": [[442, "armi.utils.textProcessors.TextProcessor.number"]], "raiseerroronfindingpattern() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingPattern"]], "raiseerroronfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingText"]], "reset() (armi.utils.textprocessors.textprocessor method)": [[442, "armi.utils.textProcessors.TextProcessor.reset"]], "resolvemarkupinclusions() (in module armi.utils.textprocessors)": [[442, "armi.utils.textProcessors.resolveMarkupInclusions"]], "scipat (armi.utils.textprocessors.textprocessor attribute)": [[442, "armi.utils.textProcessors.TextProcessor.scipat"]], "searchforpattern() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.searchForPattern"]], "searchforpatternonnextline() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.searchForPatternOnNextLine"]], "searchfortext() (armi.utils.textprocessors.sequentialreader method)": [[442, "armi.utils.textProcessors.SequentialReader.searchForText"]], "armi.utils.triangle": [[443, "module-armi.utils.triangle"]], "checkifpointisintriangle() (in module armi.utils.triangle)": [[443, "armi.utils.triangle.checkIfPointIsInTriangle"]], "gettrianglearea() (in module armi.utils.triangle)": [[443, "armi.utils.triangle.getTriangleArea"]], "gettrianglecentroid() (in module armi.utils.triangle)": [[443, "armi.utils.triangle.getTriangleCentroid"]], "armi.utils.units": [[444, "module-armi.utils.units"]], "convertatmtopascal() (in module armi.utils.units)": [[444, "armi.utils.units.convertAtmToPascal"]], "convertbartopascal() (in module armi.utils.units)": [[444, "armi.utils.units.convertBarToPascal"]], "convertmmhgtopascal() (in module armi.utils.units)": [[444, "armi.utils.units.convertMmhgToPascal"]], "gettc() (in module armi.utils.units)": [[444, "armi.utils.units.getTc"]], "gettemperature() (in module armi.utils.units)": [[444, "armi.utils.units.getTemperature"]], "gettf() (in module armi.utils.units)": [[444, "armi.utils.units.getTf"]], "gettk() (in module armi.utils.units)": [[444, "armi.utils.units.getTk"]], "gettmev() (in module armi.utils.units)": [[444, "armi.utils.units.getTmev"]], "getxylineparameters() (in module armi.utils.units)": [[444, "armi.utils.units.getXYLineParameters"]], "sanitizeangle() (in module armi.utils.units)": [[444, "armi.utils.units.sanitizeAngle"]], "anl": [[483, "term-ANL"]], "boc": [[483, "term-BOC"]], "bol": [[483, "term-BOL"]], "cli": [[483, "term-CLI"]], "fima": [[483, "term-FIMA"]], "gui": [[483, "term-GUI"]], "in-use tests": [[483, "term-In-Use-Tests"]], "lwr": [[483, "term-LWR"]], "liner": [[483, "term-Liner"]], "mpi": [[483, "term-MPI"]], "twr": [[483, "term-TWR"]], "unit tests": [[483, "term-Unit-Tests"]], "v&v": [[483, "term-V-V"]], "xtview": [[483, "term-XTVIEW"]], "assembly": [[483, "term-assembly"]], "block": [[483, "term-block"]], "burnup": [[483, "term-burnup"]], "cladding": [[483, "term-cladding"]], "component": [[483, "term-component"]], "grid plate": [[483, "term-grid-plate"]], "interface": [[483, "term-interface"]], "material": [[483, "term-material"]], "node": [[483, "term-node"]], "operator": [[483, "term-operator"]], "parameter": [[483, "term-parameter"]], "plenum": [[483, "term-plenum"]], "reactor": [[483, "term-reactor"]], "reactor state": [[483, "term-reactor-state"]], "smear density": [[483, "term-smear-density"]]}})