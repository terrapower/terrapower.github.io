Search.setIndex({"docnames": [".apidocs/armi", ".apidocs/armi.apps", ".apidocs/armi.bookkeeping", ".apidocs/armi.bookkeeping.db", ".apidocs/armi.bookkeeping.db.compareDB3", ".apidocs/armi.bookkeeping.db.database3", ".apidocs/armi.bookkeeping.db.databaseInterface", ".apidocs/armi.bookkeeping.db.factory", ".apidocs/armi.bookkeeping.db.jaggedArray", ".apidocs/armi.bookkeeping.db.layout", ".apidocs/armi.bookkeeping.db.permissions", ".apidocs/armi.bookkeeping.db.tests", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3", ".apidocs/armi.bookkeeping.db.tests.test_database3", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface", ".apidocs/armi.bookkeeping.db.tests.test_jaggedArray", ".apidocs/armi.bookkeeping.db.tests.test_layout", ".apidocs/armi.bookkeeping.db.typedefs", ".apidocs/armi.bookkeeping.historyTracker", ".apidocs/armi.bookkeeping.mainInterface", ".apidocs/armi.bookkeeping.memoryProfiler", ".apidocs/armi.bookkeeping.report", ".apidocs/armi.bookkeeping.report.data", ".apidocs/armi.bookkeeping.report.html", ".apidocs/armi.bookkeeping.report.newReportUtils", ".apidocs/armi.bookkeeping.report.newReports", ".apidocs/armi.bookkeeping.report.reportInterface", ".apidocs/armi.bookkeeping.report.reportingUtils", ".apidocs/armi.bookkeeping.report.tests", ".apidocs/armi.bookkeeping.report.tests.test_newReport", ".apidocs/armi.bookkeeping.report.tests.test_report", ".apidocs/armi.bookkeeping.snapshotInterface", ".apidocs/armi.bookkeeping.tests", ".apidocs/armi.bookkeeping.tests.test_historyTracker", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler", ".apidocs/armi.bookkeeping.tests.test_snapshot", ".apidocs/armi.bookkeeping.visualization", ".apidocs/armi.bookkeeping.visualization.dumper", ".apidocs/armi.bookkeeping.visualization.entryPoint", ".apidocs/armi.bookkeeping.visualization.tests", ".apidocs/armi.bookkeeping.visualization.tests.test_vis", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf", ".apidocs/armi.bookkeeping.visualization.utils", ".apidocs/armi.bookkeeping.visualization.vtk", ".apidocs/armi.bookkeeping.visualization.xdmf", ".apidocs/armi.cases", ".apidocs/armi.cases.case", ".apidocs/armi.cases.inputModifiers", ".apidocs/armi.cases.inputModifiers.inputModifiers", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers", ".apidocs/armi.cases.inputModifiers.tests", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers", ".apidocs/armi.cases.suite", ".apidocs/armi.cases.suiteBuilder", ".apidocs/armi.cases.tests", ".apidocs/armi.cases.tests.test_cases", ".apidocs/armi.cases.tests.test_suiteBuilder", ".apidocs/armi.cli", ".apidocs/armi.cli.checkInputs", ".apidocs/armi.cli.cleanTemps", ".apidocs/armi.cli.clone", ".apidocs/armi.cli.compareCases", ".apidocs/armi.cli.database", ".apidocs/armi.cli.entryPoint", ".apidocs/armi.cli.gridGui", ".apidocs/armi.cli.migrateInputs", ".apidocs/armi.cli.modify", ".apidocs/armi.cli.reportsEntryPoint", ".apidocs/armi.cli.run", ".apidocs/armi.cli.runSuite", ".apidocs/armi.cli.tests", ".apidocs/armi.cli.tests.test_runEntryPoint", ".apidocs/armi.cli.tests.test_runSuite", ".apidocs/armi.conftest", ".apidocs/armi.context", ".apidocs/armi.interfaces", ".apidocs/armi.materials", ".apidocs/armi.materials.air", ".apidocs/armi.materials.alloy200", ".apidocs/armi.materials.b4c", ".apidocs/armi.materials.be9", ".apidocs/armi.materials.caH2", ".apidocs/armi.materials.californium", ".apidocs/armi.materials.concrete", ".apidocs/armi.materials.copper", ".apidocs/armi.materials.cs", ".apidocs/armi.materials.custom", ".apidocs/armi.materials.graphite", ".apidocs/armi.materials.hafnium", ".apidocs/armi.materials.hastelloyN", ".apidocs/armi.materials.ht9", ".apidocs/armi.materials.inconel", ".apidocs/armi.materials.inconel600", ".apidocs/armi.materials.inconel625", ".apidocs/armi.materials.inconel800", ".apidocs/armi.materials.inconelPE16", ".apidocs/armi.materials.inconelX750", ".apidocs/armi.materials.lead", ".apidocs/armi.materials.leadBismuth", ".apidocs/armi.materials.lithium", ".apidocs/armi.materials.magnesium", ".apidocs/armi.materials.material", ".apidocs/armi.materials.mgO", ".apidocs/armi.materials.mixture", ".apidocs/armi.materials.molybdenum", ".apidocs/armi.materials.mox", ".apidocs/armi.materials.nZ", ".apidocs/armi.materials.potassium", ".apidocs/armi.materials.scandiumOxide", ".apidocs/armi.materials.siC", ".apidocs/armi.materials.sodium", ".apidocs/armi.materials.sodiumChloride", ".apidocs/armi.materials.sulfur", ".apidocs/armi.materials.tZM", ".apidocs/armi.materials.tantalum", ".apidocs/armi.materials.tests", ".apidocs/armi.materials.tests.test__init__", ".apidocs/armi.materials.tests.test_air", ".apidocs/armi.materials.tests.test_b4c", ".apidocs/armi.materials.tests.test_be9", ".apidocs/armi.materials.tests.test_graphite", ".apidocs/armi.materials.tests.test_lithium", ".apidocs/armi.materials.tests.test_materials", ".apidocs/armi.materials.tests.test_sic", ".apidocs/armi.materials.tests.test_sulfur", ".apidocs/armi.materials.tests.test_thoriumOxide", ".apidocs/armi.materials.tests.test_uZr", ".apidocs/armi.materials.tests.test_water", ".apidocs/armi.materials.thU", ".apidocs/armi.materials.thorium", ".apidocs/armi.materials.thoriumOxide", ".apidocs/armi.materials.uThZr", ".apidocs/armi.materials.uZr", ".apidocs/armi.materials.uranium", ".apidocs/armi.materials.uraniumOxide", ".apidocs/armi.materials.void", ".apidocs/armi.materials.water", ".apidocs/armi.materials.yttriumOxide", ".apidocs/armi.materials.zincOxide", ".apidocs/armi.materials.zr", ".apidocs/armi.meta", ".apidocs/armi.migration", ".apidocs/armi.migration.base", ".apidocs/armi.migration.m0_1_3", ".apidocs/armi.migration.m0_1_6", ".apidocs/armi.migration.tests", ".apidocs/armi.migration.tests.test_m0_1_6", ".apidocs/armi.migration.tests.test_migration_base", ".apidocs/armi.mpiActions", ".apidocs/armi.nucDirectory", ".apidocs/armi.nucDirectory.elements", ".apidocs/armi.nucDirectory.nucDir", ".apidocs/armi.nucDirectory.nuclideBases", ".apidocs/armi.nucDirectory.tests", ".apidocs/armi.nucDirectory.tests.test_elements", ".apidocs/armi.nucDirectory.tests.test_nucDirectory", ".apidocs/armi.nucDirectory.tests.test_nuclideBases", ".apidocs/armi.nucDirectory.tests.test_thermalScattering", ".apidocs/armi.nucDirectory.tests.test_transmutations", ".apidocs/armi.nucDirectory.thermalScattering", ".apidocs/armi.nucDirectory.transmutations", ".apidocs/armi.nuclearDataIO", ".apidocs/armi.nuclearDataIO.cccc", ".apidocs/armi.nuclearDataIO.cccc.cccc", ".apidocs/armi.nuclearDataIO.cccc.compxs", ".apidocs/armi.nuclearDataIO.cccc.dif3d", ".apidocs/armi.nuclearDataIO.cccc.dlayxs", ".apidocs/armi.nuclearDataIO.cccc.fixsrc", ".apidocs/armi.nuclearDataIO.cccc.gamiso", ".apidocs/armi.nuclearDataIO.cccc.geodst", ".apidocs/armi.nuclearDataIO.cccc.isotxs", ".apidocs/armi.nuclearDataIO.cccc.labels", ".apidocs/armi.nuclearDataIO.cccc.nhflux", ".apidocs/armi.nuclearDataIO.cccc.pmatrx", ".apidocs/armi.nuclearDataIO.cccc.pwdint", ".apidocs/armi.nuclearDataIO.cccc.rtflux", ".apidocs/armi.nuclearDataIO.cccc.rzflux", ".apidocs/armi.nuclearDataIO.cccc.tests", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_fixsrc", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata", ".apidocs/armi.nuclearDataIO.tests", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides", ".apidocs/armi.nuclearDataIO.xsCollections", ".apidocs/armi.nuclearDataIO.xsLibraries", ".apidocs/armi.nuclearDataIO.xsNuclides", ".apidocs/armi.operators", ".apidocs/armi.operators.operator", ".apidocs/armi.operators.operatorMPI", ".apidocs/armi.operators.runTypes", ".apidocs/armi.operators.settingsValidation", ".apidocs/armi.operators.snapshots", ".apidocs/armi.operators.tests", ".apidocs/armi.operators.tests.test_operatorSnapshots", ".apidocs/armi.operators.tests.test_operators", ".apidocs/armi.physics", ".apidocs/armi.physics.constants", ".apidocs/armi.physics.executers", ".apidocs/armi.physics.fuelCycle", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface", ".apidocs/armi.physics.fuelCycle.fuelHandlers", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelCycle.settings", ".apidocs/armi.physics.fuelCycle.tests", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelPerformance", ".apidocs/armi.physics.fuelPerformance.executers", ".apidocs/armi.physics.fuelPerformance.parameters", ".apidocs/armi.physics.fuelPerformance.plugin", ".apidocs/armi.physics.fuelPerformance.settings", ".apidocs/armi.physics.fuelPerformance.tests", ".apidocs/armi.physics.fuelPerformance.tests.test_executers", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils", ".apidocs/armi.physics.fuelPerformance.utils", ".apidocs/armi.physics.neutronics", ".apidocs/armi.physics.neutronics.const", ".apidocs/armi.physics.neutronics.crossSectionGroupManager", ".apidocs/armi.physics.neutronics.crossSectionSettings", ".apidocs/armi.physics.neutronics.diffIsotxs", ".apidocs/armi.physics.neutronics.energyGroups", ".apidocs/armi.physics.neutronics.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct", ".apidocs/armi.physics.neutronics.fissionProductModel.tests", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct", ".apidocs/armi.physics.neutronics.globalFlux", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface", ".apidocs/armi.physics.neutronics.globalFlux.tests", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface", ".apidocs/armi.physics.neutronics.latticePhysics", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter", ".apidocs/armi.physics.neutronics.latticePhysics.tests", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.parameters", ".apidocs/armi.physics.neutronics.reports", ".apidocs/armi.physics.neutronics.settings", ".apidocs/armi.physics.neutronics.tests", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable", ".apidocs/armi.physics.neutronics.tests.test_energyGroups", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin", ".apidocs/armi.physics.safety", ".apidocs/armi.physics.tests", ".apidocs/armi.physics.tests.test_executers", ".apidocs/armi.physics.thermalHydraulics", ".apidocs/armi.physics.thermalHydraulics.const", ".apidocs/armi.physics.thermalHydraulics.parameters", ".apidocs/armi.physics.thermalHydraulics.plugin", ".apidocs/armi.physics.thermalHydraulics.settings", ".apidocs/armi.physics.thermalHydraulics.tests", ".apidocs/armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin", ".apidocs/armi.pluginManager", ".apidocs/armi.plugins", ".apidocs/armi.reactor", ".apidocs/armi.reactor.assemblies", ".apidocs/armi.reactor.assemblyParameters", ".apidocs/armi.reactor.blockParameters", ".apidocs/armi.reactor.blocks", ".apidocs/armi.reactor.blueprints", ".apidocs/armi.reactor.blueprints.assemblyBlueprint", ".apidocs/armi.reactor.blueprints.blockBlueprint", ".apidocs/armi.reactor.blueprints.componentBlueprint", ".apidocs/armi.reactor.blueprints.gridBlueprint", ".apidocs/armi.reactor.blueprints.isotopicOptions", ".apidocs/armi.reactor.blueprints.reactorBlueprint", ".apidocs/armi.reactor.blueprints.tests", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blueprints", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints", ".apidocs/armi.reactor.components", ".apidocs/armi.reactor.components.basicShapes", ".apidocs/armi.reactor.components.complexShapes", ".apidocs/armi.reactor.components.component", ".apidocs/armi.reactor.components.componentParameters", ".apidocs/armi.reactor.components.volumetricShapes", ".apidocs/armi.reactor.composites", ".apidocs/armi.reactor.converters", ".apidocs/armi.reactor.converters.axialExpansionChanger", ".apidocs/armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage", ".apidocs/armi.reactor.converters.axialExpansionChanger.axialExpansionChanger", ".apidocs/armi.reactor.converters.axialExpansionChanger.expansionData", ".apidocs/armi.reactor.converters.blockConverters", ".apidocs/armi.reactor.converters.geometryConverters", ".apidocs/armi.reactor.converters.meshConverters", ".apidocs/armi.reactor.converters.parameterSweeps", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters", ".apidocs/armi.reactor.converters.pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger", ".apidocs/armi.reactor.converters.tests.test_blockConverter", ".apidocs/armi.reactor.converters.tests.test_geometryConverters", ".apidocs/armi.reactor.converters.tests.test_meshConverters", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests.test_uniformMesh", ".apidocs/armi.reactor.converters.uniformMesh", ".apidocs/armi.reactor.cores", ".apidocs/armi.reactor.excoreStructure", ".apidocs/armi.reactor.flags", ".apidocs/armi.reactor.geometry", ".apidocs/armi.reactor.grids", ".apidocs/armi.reactor.grids.axial", ".apidocs/armi.reactor.grids.cartesian", ".apidocs/armi.reactor.grids.constants", ".apidocs/armi.reactor.grids.grid", ".apidocs/armi.reactor.grids.hexagonal", ".apidocs/armi.reactor.grids.locations", ".apidocs/armi.reactor.grids.structuredGrid", ".apidocs/armi.reactor.grids.thetarz", ".apidocs/armi.reactor.parameters", ".apidocs/armi.reactor.parameters.exceptions", ".apidocs/armi.reactor.parameters.parameterCollections", ".apidocs/armi.reactor.parameters.parameterDefinitions", ".apidocs/armi.reactor.parameters.resolveCollections", ".apidocs/armi.reactor.reactorParameters", ".apidocs/armi.reactor.reactors", ".apidocs/armi.reactor.spentFuelPool", ".apidocs/armi.reactor.systemLayoutInput", ".apidocs/armi.reactor.tests", ".apidocs/armi.reactor.tests.test_assemblies", ".apidocs/armi.reactor.tests.test_blocks", ".apidocs/armi.reactor.tests.test_components", ".apidocs/armi.reactor.tests.test_composites", ".apidocs/armi.reactor.tests.test_excoreStructures", ".apidocs/armi.reactor.tests.test_flags", ".apidocs/armi.reactor.tests.test_geometry", ".apidocs/armi.reactor.tests.test_parameters", ".apidocs/armi.reactor.tests.test_reactors", ".apidocs/armi.reactor.tests.test_rz_reactors", ".apidocs/armi.reactor.tests.test_zones", ".apidocs/armi.reactor.zones", ".apidocs/armi.runLog", ".apidocs/armi.settings", ".apidocs/armi.settings.caseSettings", ".apidocs/armi.settings.fwSettings", ".apidocs/armi.settings.fwSettings.databaseSettings", ".apidocs/armi.settings.fwSettings.globalSettings", ".apidocs/armi.settings.fwSettings.reportSettings", ".apidocs/armi.settings.fwSettings.tightCouplingSettings", ".apidocs/armi.settings.setting", ".apidocs/armi.settings.settingsIO", ".apidocs/armi.settings.settingsValidation", ".apidocs/armi.settings.tests", ".apidocs/armi.settings.tests.test_inspectors", ".apidocs/armi.settings.tests.test_settings", ".apidocs/armi.settings.tests.test_settingsIO", ".apidocs/armi.tests", ".apidocs/armi.tests.mockRunLogs", ".apidocs/armi.tests.refSmallReactorShuffleLogic", ".apidocs/armi.tests.test_apps", ".apidocs/armi.tests.test_armiTestHelper", ".apidocs/armi.tests.test_cartesian", ".apidocs/armi.tests.test_context", ".apidocs/armi.tests.test_interfaces", ".apidocs/armi.tests.test_lwrInputs", ".apidocs/armi.tests.test_mpiActions", ".apidocs/armi.tests.test_mpiFeatures", ".apidocs/armi.tests.test_mpiParameters", ".apidocs/armi.tests.test_notebooks", ".apidocs/armi.tests.test_plugins", ".apidocs/armi.tests.test_runLog", ".apidocs/armi.tests.test_tests", ".apidocs/armi.tests.test_user_plugins", ".apidocs/armi.utils", ".apidocs/armi.utils.asciimaps", ".apidocs/armi.utils.codeTiming", ".apidocs/armi.utils.customExceptions", ".apidocs/armi.utils.densityTools", ".apidocs/armi.utils.directoryChangers", ".apidocs/armi.utils.directoryChangersMpi", ".apidocs/armi.utils.dynamicImporter", ".apidocs/armi.utils.flags", ".apidocs/armi.utils.gridEditor", ".apidocs/armi.utils.hexagon", ".apidocs/armi.utils.iterables", ".apidocs/armi.utils.mathematics", ".apidocs/armi.utils.outputCache", ".apidocs/armi.utils.parsing", ".apidocs/armi.utils.pathTools", ".apidocs/armi.utils.plotting", ".apidocs/armi.utils.properties", ".apidocs/armi.utils.reportPlotting", ".apidocs/armi.utils.tabulate", ".apidocs/armi.utils.tests", ".apidocs/armi.utils.tests.test_asciimaps", ".apidocs/armi.utils.tests.test_codeTiming", ".apidocs/armi.utils.tests.test_custom_exceptions", ".apidocs/armi.utils.tests.test_densityTools", ".apidocs/armi.utils.tests.test_directoryChangers", ".apidocs/armi.utils.tests.test_directoryChangersMpi", ".apidocs/armi.utils.tests.test_flags", ".apidocs/armi.utils.tests.test_hexagon", ".apidocs/armi.utils.tests.test_iterables", ".apidocs/armi.utils.tests.test_mathematics", ".apidocs/armi.utils.tests.test_outputCache", ".apidocs/armi.utils.tests.test_parsing", ".apidocs/armi.utils.tests.test_pathTools", ".apidocs/armi.utils.tests.test_plotting", ".apidocs/armi.utils.tests.test_properties", ".apidocs/armi.utils.tests.test_reportPlotting", ".apidocs/armi.utils.tests.test_tabulate", ".apidocs/armi.utils.tests.test_textProcessors", ".apidocs/armi.utils.tests.test_triangle", ".apidocs/armi.utils.tests.test_units", ".apidocs/armi.utils.tests.test_utils", ".apidocs/armi.utils.textProcessors", ".apidocs/armi.utils.triangle", ".apidocs/armi.utils.units", ".apidocs/modules", "developer/documenting", "developer/entrypoints", "developer/first_time_contributors", "developer/guide", "developer/index", "developer/making_armi_based_apps", "developer/parallel_coding", "developer/profiling", "developer/reports", "developer/standards_and_practices", "developer/tooling", "gallery-src/README", "gallery-src/analysis/README", "gallery-src/applications/README", "gallery-src/framework/README", "gallery/analysis/index", "gallery/analysis/run_blockMcnpMaterialCard", "gallery/analysis/run_hexBlockToRZConversion", "gallery/analysis/run_hexReactorToRZ", "gallery/analysis/sg_execution_times", "gallery/applications/index", "gallery/framework/index", "gallery/framework/run_blockVolumeFractions", "gallery/framework/run_chartOfNuclides", "gallery/framework/run_computeReactionRates", "gallery/framework/run_fuelManagement", "gallery/framework/run_grids1_hex", "gallery/framework/run_grids2_cartesian", "gallery/framework/run_grids3_rzt", "gallery/framework/run_isotxs", "gallery/framework/run_isotxs2_matrix", "gallery/framework/run_materials", "gallery/framework/run_programmaticReactorDefinition", "gallery/framework/run_reactorFacemap", "gallery/framework/run_transmutationMatrix", "gallery/framework/sg_execution_times", "gallery/index", "glossary", "index", "installation", "release/0.1", "release/0.2", "release/0.3", "release/0.4", "release/index", "tutorials/data_model", "tutorials/index", "tutorials/making_your_first_app", "tutorials/materials_demo", "tutorials/nuclide_demo", "tutorials/param_sweep", "tutorials/walkthrough_inputs", "tutorials/walkthrough_lwr_inputs", "user/_gallery/index", "user/accessingEntryPoints", "user/assembly_parameters_report", "user/block_parameters_report", "user/component_parameters_report", "user/core_parameters_report", "user/index", "user/inputs", "user/manual_data_access", "user/outputs", "user/physics_coupling", "user/radial_and_axial_expansion", "user/reactor_parameters_report", "user/user_install"], "filenames": [".apidocs/armi.rst", ".apidocs/armi.apps.rst", ".apidocs/armi.bookkeeping.rst", ".apidocs/armi.bookkeeping.db.rst", ".apidocs/armi.bookkeeping.db.compareDB3.rst", ".apidocs/armi.bookkeeping.db.database3.rst", ".apidocs/armi.bookkeeping.db.databaseInterface.rst", ".apidocs/armi.bookkeeping.db.factory.rst", ".apidocs/armi.bookkeeping.db.jaggedArray.rst", ".apidocs/armi.bookkeeping.db.layout.rst", ".apidocs/armi.bookkeeping.db.permissions.rst", ".apidocs/armi.bookkeeping.db.tests.rst", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3.rst", ".apidocs/armi.bookkeeping.db.tests.test_database3.rst", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface.rst", ".apidocs/armi.bookkeeping.db.tests.test_jaggedArray.rst", ".apidocs/armi.bookkeeping.db.tests.test_layout.rst", ".apidocs/armi.bookkeeping.db.typedefs.rst", ".apidocs/armi.bookkeeping.historyTracker.rst", ".apidocs/armi.bookkeeping.mainInterface.rst", ".apidocs/armi.bookkeeping.memoryProfiler.rst", ".apidocs/armi.bookkeeping.report.rst", ".apidocs/armi.bookkeeping.report.data.rst", ".apidocs/armi.bookkeeping.report.html.rst", ".apidocs/armi.bookkeeping.report.newReportUtils.rst", ".apidocs/armi.bookkeeping.report.newReports.rst", ".apidocs/armi.bookkeeping.report.reportInterface.rst", ".apidocs/armi.bookkeeping.report.reportingUtils.rst", ".apidocs/armi.bookkeeping.report.tests.rst", ".apidocs/armi.bookkeeping.report.tests.test_newReport.rst", ".apidocs/armi.bookkeeping.report.tests.test_report.rst", ".apidocs/armi.bookkeeping.snapshotInterface.rst", ".apidocs/armi.bookkeeping.tests.rst", ".apidocs/armi.bookkeeping.tests.test_historyTracker.rst", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler.rst", ".apidocs/armi.bookkeeping.tests.test_snapshot.rst", ".apidocs/armi.bookkeeping.visualization.rst", ".apidocs/armi.bookkeeping.visualization.dumper.rst", ".apidocs/armi.bookkeeping.visualization.entryPoint.rst", ".apidocs/armi.bookkeeping.visualization.tests.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_vis.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf.rst", ".apidocs/armi.bookkeeping.visualization.utils.rst", ".apidocs/armi.bookkeeping.visualization.vtk.rst", ".apidocs/armi.bookkeeping.visualization.xdmf.rst", ".apidocs/armi.cases.rst", ".apidocs/armi.cases.case.rst", ".apidocs/armi.cases.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers.rst", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.rst", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.rst", ".apidocs/armi.cases.suite.rst", ".apidocs/armi.cases.suiteBuilder.rst", ".apidocs/armi.cases.tests.rst", ".apidocs/armi.cases.tests.test_cases.rst", ".apidocs/armi.cases.tests.test_suiteBuilder.rst", ".apidocs/armi.cli.rst", ".apidocs/armi.cli.checkInputs.rst", ".apidocs/armi.cli.cleanTemps.rst", ".apidocs/armi.cli.clone.rst", ".apidocs/armi.cli.compareCases.rst", ".apidocs/armi.cli.database.rst", ".apidocs/armi.cli.entryPoint.rst", ".apidocs/armi.cli.gridGui.rst", ".apidocs/armi.cli.migrateInputs.rst", ".apidocs/armi.cli.modify.rst", ".apidocs/armi.cli.reportsEntryPoint.rst", ".apidocs/armi.cli.run.rst", ".apidocs/armi.cli.runSuite.rst", ".apidocs/armi.cli.tests.rst", ".apidocs/armi.cli.tests.test_runEntryPoint.rst", ".apidocs/armi.cli.tests.test_runSuite.rst", ".apidocs/armi.conftest.rst", ".apidocs/armi.context.rst", ".apidocs/armi.interfaces.rst", ".apidocs/armi.materials.rst", ".apidocs/armi.materials.air.rst", ".apidocs/armi.materials.alloy200.rst", ".apidocs/armi.materials.b4c.rst", ".apidocs/armi.materials.be9.rst", ".apidocs/armi.materials.caH2.rst", ".apidocs/armi.materials.californium.rst", ".apidocs/armi.materials.concrete.rst", ".apidocs/armi.materials.copper.rst", ".apidocs/armi.materials.cs.rst", ".apidocs/armi.materials.custom.rst", ".apidocs/armi.materials.graphite.rst", ".apidocs/armi.materials.hafnium.rst", ".apidocs/armi.materials.hastelloyN.rst", ".apidocs/armi.materials.ht9.rst", ".apidocs/armi.materials.inconel.rst", ".apidocs/armi.materials.inconel600.rst", ".apidocs/armi.materials.inconel625.rst", ".apidocs/armi.materials.inconel800.rst", ".apidocs/armi.materials.inconelPE16.rst", ".apidocs/armi.materials.inconelX750.rst", ".apidocs/armi.materials.lead.rst", ".apidocs/armi.materials.leadBismuth.rst", ".apidocs/armi.materials.lithium.rst", ".apidocs/armi.materials.magnesium.rst", ".apidocs/armi.materials.material.rst", ".apidocs/armi.materials.mgO.rst", ".apidocs/armi.materials.mixture.rst", ".apidocs/armi.materials.molybdenum.rst", ".apidocs/armi.materials.mox.rst", ".apidocs/armi.materials.nZ.rst", ".apidocs/armi.materials.potassium.rst", ".apidocs/armi.materials.scandiumOxide.rst", ".apidocs/armi.materials.siC.rst", ".apidocs/armi.materials.sodium.rst", ".apidocs/armi.materials.sodiumChloride.rst", ".apidocs/armi.materials.sulfur.rst", ".apidocs/armi.materials.tZM.rst", ".apidocs/armi.materials.tantalum.rst", ".apidocs/armi.materials.tests.rst", ".apidocs/armi.materials.tests.test__init__.rst", ".apidocs/armi.materials.tests.test_air.rst", ".apidocs/armi.materials.tests.test_b4c.rst", ".apidocs/armi.materials.tests.test_be9.rst", ".apidocs/armi.materials.tests.test_graphite.rst", ".apidocs/armi.materials.tests.test_lithium.rst", ".apidocs/armi.materials.tests.test_materials.rst", ".apidocs/armi.materials.tests.test_sic.rst", ".apidocs/armi.materials.tests.test_sulfur.rst", ".apidocs/armi.materials.tests.test_thoriumOxide.rst", ".apidocs/armi.materials.tests.test_uZr.rst", ".apidocs/armi.materials.tests.test_water.rst", ".apidocs/armi.materials.thU.rst", ".apidocs/armi.materials.thorium.rst", ".apidocs/armi.materials.thoriumOxide.rst", ".apidocs/armi.materials.uThZr.rst", ".apidocs/armi.materials.uZr.rst", ".apidocs/armi.materials.uranium.rst", ".apidocs/armi.materials.uraniumOxide.rst", ".apidocs/armi.materials.void.rst", ".apidocs/armi.materials.water.rst", ".apidocs/armi.materials.yttriumOxide.rst", ".apidocs/armi.materials.zincOxide.rst", ".apidocs/armi.materials.zr.rst", ".apidocs/armi.meta.rst", ".apidocs/armi.migration.rst", ".apidocs/armi.migration.base.rst", ".apidocs/armi.migration.m0_1_3.rst", ".apidocs/armi.migration.m0_1_6.rst", ".apidocs/armi.migration.tests.rst", ".apidocs/armi.migration.tests.test_m0_1_6.rst", ".apidocs/armi.migration.tests.test_migration_base.rst", ".apidocs/armi.mpiActions.rst", ".apidocs/armi.nucDirectory.rst", ".apidocs/armi.nucDirectory.elements.rst", ".apidocs/armi.nucDirectory.nucDir.rst", ".apidocs/armi.nucDirectory.nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.rst", ".apidocs/armi.nucDirectory.tests.test_elements.rst", ".apidocs/armi.nucDirectory.tests.test_nucDirectory.rst", ".apidocs/armi.nucDirectory.tests.test_nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.test_thermalScattering.rst", ".apidocs/armi.nucDirectory.tests.test_transmutations.rst", ".apidocs/armi.nucDirectory.thermalScattering.rst", ".apidocs/armi.nucDirectory.transmutations.rst", ".apidocs/armi.nuclearDataIO.rst", ".apidocs/armi.nuclearDataIO.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.fixsrc.rst", ".apidocs/armi.nuclearDataIO.cccc.gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.labels.rst", ".apidocs/armi.nuclearDataIO.cccc.nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.rzflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_fixsrc.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux.rst", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata.rst", ".apidocs/armi.nuclearDataIO.tests.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides.rst", ".apidocs/armi.nuclearDataIO.xsCollections.rst", ".apidocs/armi.nuclearDataIO.xsLibraries.rst", ".apidocs/armi.nuclearDataIO.xsNuclides.rst", ".apidocs/armi.operators.rst", ".apidocs/armi.operators.operator.rst", ".apidocs/armi.operators.operatorMPI.rst", ".apidocs/armi.operators.runTypes.rst", ".apidocs/armi.operators.settingsValidation.rst", ".apidocs/armi.operators.snapshots.rst", ".apidocs/armi.operators.tests.rst", ".apidocs/armi.operators.tests.test_operatorSnapshots.rst", ".apidocs/armi.operators.tests.test_operators.rst", ".apidocs/armi.physics.rst", ".apidocs/armi.physics.constants.rst", ".apidocs/armi.physics.executers.rst", ".apidocs/armi.physics.fuelCycle.rst", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelCycle.settings.rst", ".apidocs/armi.physics.fuelCycle.tests.rst", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelPerformance.rst", ".apidocs/armi.physics.fuelPerformance.executers.rst", ".apidocs/armi.physics.fuelPerformance.parameters.rst", ".apidocs/armi.physics.fuelPerformance.plugin.rst", ".apidocs/armi.physics.fuelPerformance.settings.rst", ".apidocs/armi.physics.fuelPerformance.tests.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_executers.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.rst", ".apidocs/armi.physics.fuelPerformance.utils.rst", ".apidocs/armi.physics.neutronics.rst", ".apidocs/armi.physics.neutronics.const.rst", ".apidocs/armi.physics.neutronics.crossSectionGroupManager.rst", ".apidocs/armi.physics.neutronics.crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.diffIsotxs.rst", ".apidocs/armi.physics.neutronics.energyGroups.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.globalFlux.rst", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.rst", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.parameters.rst", ".apidocs/armi.physics.neutronics.reports.rst", ".apidocs/armi.physics.neutronics.settings.rst", ".apidocs/armi.physics.neutronics.tests.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable.rst", ".apidocs/armi.physics.neutronics.tests.test_energyGroups.rst", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin.rst", ".apidocs/armi.physics.safety.rst", ".apidocs/armi.physics.tests.rst", ".apidocs/armi.physics.tests.test_executers.rst", ".apidocs/armi.physics.thermalHydraulics.rst", ".apidocs/armi.physics.thermalHydraulics.const.rst", ".apidocs/armi.physics.thermalHydraulics.parameters.rst", ".apidocs/armi.physics.thermalHydraulics.plugin.rst", ".apidocs/armi.physics.thermalHydraulics.settings.rst", ".apidocs/armi.physics.thermalHydraulics.tests.rst", ".apidocs/armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.rst", ".apidocs/armi.pluginManager.rst", ".apidocs/armi.plugins.rst", ".apidocs/armi.reactor.rst", ".apidocs/armi.reactor.assemblies.rst", ".apidocs/armi.reactor.assemblyParameters.rst", ".apidocs/armi.reactor.blockParameters.rst", ".apidocs/armi.reactor.blocks.rst", ".apidocs/armi.reactor.blueprints.rst", ".apidocs/armi.reactor.blueprints.assemblyBlueprint.rst", ".apidocs/armi.reactor.blueprints.blockBlueprint.rst", ".apidocs/armi.reactor.blueprints.componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.gridBlueprint.rst", ".apidocs/armi.reactor.blueprints.isotopicOptions.rst", ".apidocs/armi.reactor.blueprints.reactorBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.rst", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics.rst", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications.rst", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints.rst", ".apidocs/armi.reactor.components.rst", ".apidocs/armi.reactor.components.basicShapes.rst", ".apidocs/armi.reactor.components.complexShapes.rst", ".apidocs/armi.reactor.components.component.rst", ".apidocs/armi.reactor.components.componentParameters.rst", ".apidocs/armi.reactor.components.volumetricShapes.rst", ".apidocs/armi.reactor.composites.rst", ".apidocs/armi.reactor.converters.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.expansionData.rst", ".apidocs/armi.reactor.converters.blockConverters.rst", ".apidocs/armi.reactor.converters.geometryConverters.rst", ".apidocs/armi.reactor.converters.meshConverters.rst", ".apidocs/armi.reactor.converters.parameterSweeps.rst", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.rst", ".apidocs/armi.reactor.converters.pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.rst", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.tests.test_blockConverter.rst", ".apidocs/armi.reactor.converters.tests.test_geometryConverters.rst", ".apidocs/armi.reactor.converters.tests.test_meshConverters.rst", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.test_uniformMesh.rst", ".apidocs/armi.reactor.converters.uniformMesh.rst", ".apidocs/armi.reactor.cores.rst", ".apidocs/armi.reactor.excoreStructure.rst", ".apidocs/armi.reactor.flags.rst", ".apidocs/armi.reactor.geometry.rst", ".apidocs/armi.reactor.grids.rst", ".apidocs/armi.reactor.grids.axial.rst", ".apidocs/armi.reactor.grids.cartesian.rst", ".apidocs/armi.reactor.grids.constants.rst", ".apidocs/armi.reactor.grids.grid.rst", ".apidocs/armi.reactor.grids.hexagonal.rst", ".apidocs/armi.reactor.grids.locations.rst", ".apidocs/armi.reactor.grids.structuredGrid.rst", ".apidocs/armi.reactor.grids.thetarz.rst", ".apidocs/armi.reactor.parameters.rst", ".apidocs/armi.reactor.parameters.exceptions.rst", ".apidocs/armi.reactor.parameters.parameterCollections.rst", ".apidocs/armi.reactor.parameters.parameterDefinitions.rst", ".apidocs/armi.reactor.parameters.resolveCollections.rst", ".apidocs/armi.reactor.reactorParameters.rst", ".apidocs/armi.reactor.reactors.rst", ".apidocs/armi.reactor.spentFuelPool.rst", ".apidocs/armi.reactor.systemLayoutInput.rst", ".apidocs/armi.reactor.tests.rst", ".apidocs/armi.reactor.tests.test_assemblies.rst", ".apidocs/armi.reactor.tests.test_blocks.rst", ".apidocs/armi.reactor.tests.test_components.rst", ".apidocs/armi.reactor.tests.test_composites.rst", ".apidocs/armi.reactor.tests.test_excoreStructures.rst", ".apidocs/armi.reactor.tests.test_flags.rst", ".apidocs/armi.reactor.tests.test_geometry.rst", ".apidocs/armi.reactor.tests.test_parameters.rst", ".apidocs/armi.reactor.tests.test_reactors.rst", ".apidocs/armi.reactor.tests.test_rz_reactors.rst", ".apidocs/armi.reactor.tests.test_zones.rst", ".apidocs/armi.reactor.zones.rst", ".apidocs/armi.runLog.rst", ".apidocs/armi.settings.rst", ".apidocs/armi.settings.caseSettings.rst", ".apidocs/armi.settings.fwSettings.rst", ".apidocs/armi.settings.fwSettings.databaseSettings.rst", ".apidocs/armi.settings.fwSettings.globalSettings.rst", ".apidocs/armi.settings.fwSettings.reportSettings.rst", ".apidocs/armi.settings.fwSettings.tightCouplingSettings.rst", ".apidocs/armi.settings.setting.rst", ".apidocs/armi.settings.settingsIO.rst", ".apidocs/armi.settings.settingsValidation.rst", ".apidocs/armi.settings.tests.rst", ".apidocs/armi.settings.tests.test_inspectors.rst", ".apidocs/armi.settings.tests.test_settings.rst", ".apidocs/armi.settings.tests.test_settingsIO.rst", ".apidocs/armi.tests.rst", ".apidocs/armi.tests.mockRunLogs.rst", ".apidocs/armi.tests.refSmallReactorShuffleLogic.rst", ".apidocs/armi.tests.test_apps.rst", ".apidocs/armi.tests.test_armiTestHelper.rst", ".apidocs/armi.tests.test_cartesian.rst", ".apidocs/armi.tests.test_context.rst", ".apidocs/armi.tests.test_interfaces.rst", ".apidocs/armi.tests.test_lwrInputs.rst", ".apidocs/armi.tests.test_mpiActions.rst", ".apidocs/armi.tests.test_mpiFeatures.rst", ".apidocs/armi.tests.test_mpiParameters.rst", ".apidocs/armi.tests.test_notebooks.rst", ".apidocs/armi.tests.test_plugins.rst", ".apidocs/armi.tests.test_runLog.rst", ".apidocs/armi.tests.test_tests.rst", ".apidocs/armi.tests.test_user_plugins.rst", ".apidocs/armi.utils.rst", ".apidocs/armi.utils.asciimaps.rst", ".apidocs/armi.utils.codeTiming.rst", ".apidocs/armi.utils.customExceptions.rst", ".apidocs/armi.utils.densityTools.rst", ".apidocs/armi.utils.directoryChangers.rst", ".apidocs/armi.utils.directoryChangersMpi.rst", ".apidocs/armi.utils.dynamicImporter.rst", ".apidocs/armi.utils.flags.rst", ".apidocs/armi.utils.gridEditor.rst", ".apidocs/armi.utils.hexagon.rst", ".apidocs/armi.utils.iterables.rst", ".apidocs/armi.utils.mathematics.rst", ".apidocs/armi.utils.outputCache.rst", ".apidocs/armi.utils.parsing.rst", ".apidocs/armi.utils.pathTools.rst", ".apidocs/armi.utils.plotting.rst", ".apidocs/armi.utils.properties.rst", ".apidocs/armi.utils.reportPlotting.rst", ".apidocs/armi.utils.tabulate.rst", ".apidocs/armi.utils.tests.rst", ".apidocs/armi.utils.tests.test_asciimaps.rst", ".apidocs/armi.utils.tests.test_codeTiming.rst", ".apidocs/armi.utils.tests.test_custom_exceptions.rst", ".apidocs/armi.utils.tests.test_densityTools.rst", ".apidocs/armi.utils.tests.test_directoryChangers.rst", ".apidocs/armi.utils.tests.test_directoryChangersMpi.rst", ".apidocs/armi.utils.tests.test_flags.rst", ".apidocs/armi.utils.tests.test_hexagon.rst", ".apidocs/armi.utils.tests.test_iterables.rst", ".apidocs/armi.utils.tests.test_mathematics.rst", ".apidocs/armi.utils.tests.test_outputCache.rst", ".apidocs/armi.utils.tests.test_parsing.rst", ".apidocs/armi.utils.tests.test_pathTools.rst", ".apidocs/armi.utils.tests.test_plotting.rst", ".apidocs/armi.utils.tests.test_properties.rst", ".apidocs/armi.utils.tests.test_reportPlotting.rst", ".apidocs/armi.utils.tests.test_tabulate.rst", ".apidocs/armi.utils.tests.test_textProcessors.rst", ".apidocs/armi.utils.tests.test_triangle.rst", ".apidocs/armi.utils.tests.test_units.rst", ".apidocs/armi.utils.tests.test_utils.rst", ".apidocs/armi.utils.textProcessors.rst", ".apidocs/armi.utils.triangle.rst", ".apidocs/armi.utils.units.rst", ".apidocs/modules.rst", "developer/documenting.rst", "developer/entrypoints.rst", "developer/first_time_contributors.rst", "developer/guide.rst", "developer/index.rst", "developer/making_armi_based_apps.rst", "developer/parallel_coding.rst", "developer/profiling.rst", "developer/reports.rst", "developer/standards_and_practices.rst", "developer/tooling.rst", "gallery-src/README.rst", "gallery-src/analysis/README.rst", "gallery-src/applications/README.rst", "gallery-src/framework/README.rst", "gallery/analysis/index.rst", "gallery/analysis/run_blockMcnpMaterialCard.rst", "gallery/analysis/run_hexBlockToRZConversion.rst", "gallery/analysis/run_hexReactorToRZ.rst", "gallery/analysis/sg_execution_times.rst", "gallery/applications/index.rst", "gallery/framework/index.rst", "gallery/framework/run_blockVolumeFractions.rst", "gallery/framework/run_chartOfNuclides.rst", "gallery/framework/run_computeReactionRates.rst", "gallery/framework/run_fuelManagement.rst", "gallery/framework/run_grids1_hex.rst", "gallery/framework/run_grids2_cartesian.rst", "gallery/framework/run_grids3_rzt.rst", "gallery/framework/run_isotxs.rst", "gallery/framework/run_isotxs2_matrix.rst", "gallery/framework/run_materials.rst", "gallery/framework/run_programmaticReactorDefinition.rst", "gallery/framework/run_reactorFacemap.rst", "gallery/framework/run_transmutationMatrix.rst", "gallery/framework/sg_execution_times.rst", "gallery/index.rst", "glossary.rst", "index.rst", "installation.rst", "release/0.1.rst", "release/0.2.rst", "release/0.3.rst", "release/0.4.rst", "release/index.rst", "tutorials/data_model.nblink", "tutorials/index.rst", "tutorials/making_your_first_app.rst", "tutorials/materials_demo.ipynb", "tutorials/nuclide_demo.ipynb", "tutorials/param_sweep.nblink", "tutorials/walkthrough_inputs.rst", "tutorials/walkthrough_lwr_inputs.rst", "user/_gallery/index.rst", "user/accessingEntryPoints.rst", "user/assembly_parameters_report.rst", "user/block_parameters_report.rst", "user/component_parameters_report.rst", "user/core_parameters_report.rst", "user/index.rst", "user/inputs.rst", "user/manual_data_access.rst", "user/outputs.rst", "user/physics_coupling.rst", "user/radial_and_axial_expansion.rst", "user/reactor_parameters_report.rst", "user/user_install.rst"], "titles": ["armi package", "armi.apps module", "armi.bookkeeping package", "armi.bookkeeping.db package", "armi.bookkeeping.db.compareDB3 module", "armi.bookkeeping.db.database3 module", "armi.bookkeeping.db.databaseInterface module", "armi.bookkeeping.db.factory module", "armi.bookkeeping.db.jaggedArray module", "armi.bookkeeping.db.layout module", "armi.bookkeeping.db.permissions module", "armi.bookkeeping.db.tests package", "armi.bookkeeping.db.tests.test_comparedb3 module", "armi.bookkeeping.db.tests.test_database3 module", "armi.bookkeeping.db.tests.test_databaseInterface module", "armi.bookkeeping.db.tests.test_jaggedArray module", "armi.bookkeeping.db.tests.test_layout module", "armi.bookkeeping.db.typedefs module", "armi.bookkeeping.historyTracker module", "armi.bookkeeping.mainInterface module", "armi.bookkeeping.memoryProfiler module", "armi.bookkeeping.report package", "armi.bookkeeping.report.data module", "armi.bookkeeping.report.html module", "armi.bookkeeping.report.newReportUtils module", "armi.bookkeeping.report.newReports module", "armi.bookkeeping.report.reportInterface module", "armi.bookkeeping.report.reportingUtils module", "armi.bookkeeping.report.tests package", "armi.bookkeeping.report.tests.test_newReport module", "armi.bookkeeping.report.tests.test_report module", "armi.bookkeeping.snapshotInterface module", "armi.bookkeeping.tests package", "armi.bookkeeping.tests.test_historyTracker module", "armi.bookkeeping.tests.test_memoryProfiler module", "armi.bookkeeping.tests.test_snapshot module", "armi.bookkeeping.visualization package", "armi.bookkeeping.visualization.dumper module", "armi.bookkeeping.visualization.entryPoint module", "armi.bookkeeping.visualization.tests package", "armi.bookkeeping.visualization.tests.test_vis module", "armi.bookkeeping.visualization.tests.test_xdmf module", "armi.bookkeeping.visualization.utils module", "armi.bookkeeping.visualization.vtk module", "armi.bookkeeping.visualization.xdmf module", "armi.cases package", "armi.cases.case module", "armi.cases.inputModifiers package", "armi.cases.inputModifiers.inputModifiers module", "armi.cases.inputModifiers.neutronicsModifiers module", "armi.cases.inputModifiers.pinTypeInputModifiers module", "armi.cases.inputModifiers.tests package", "armi.cases.inputModifiers.tests.test_inputModifiers module", "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module", "armi.cases.suite module", "armi.cases.suiteBuilder module", "armi.cases.tests package", "armi.cases.tests.test_cases module", "armi.cases.tests.test_suiteBuilder module", "armi.cli package", "armi.cli.checkInputs module", "armi.cli.cleanTemps module", "armi.cli.clone module", "armi.cli.compareCases module", "armi.cli.database module", "armi.cli.entryPoint module", "armi.cli.gridGui module", "armi.cli.migrateInputs module", "armi.cli.modify module", "armi.cli.reportsEntryPoint module", "armi.cli.run module", "armi.cli.runSuite module", "armi.cli.tests package", "armi.cli.tests.test_runEntryPoint module", "armi.cli.tests.test_runSuite module", "armi.conftest module", "armi.context module", "armi.interfaces module", "armi.materials package", "armi.materials.air module", "armi.materials.alloy200 module", "armi.materials.b4c module", "armi.materials.be9 module", "armi.materials.caH2 module", "armi.materials.californium module", "armi.materials.concrete module", "armi.materials.copper module", "armi.materials.cs module", "armi.materials.custom module", "armi.materials.graphite module", "armi.materials.hafnium module", "armi.materials.hastelloyN module", "armi.materials.ht9 module", "armi.materials.inconel module", "armi.materials.inconel600 module", "armi.materials.inconel625 module", "armi.materials.inconel800 module", "armi.materials.inconelPE16 module", "armi.materials.inconelX750 module", "armi.materials.lead module", "armi.materials.leadBismuth module", "armi.materials.lithium module", "armi.materials.magnesium module", "armi.materials.material module", "armi.materials.mgO module", "armi.materials.mixture module", "armi.materials.molybdenum module", "armi.materials.mox module", "armi.materials.nZ module", "armi.materials.potassium module", "armi.materials.scandiumOxide module", "armi.materials.siC module", "armi.materials.sodium module", "armi.materials.sodiumChloride module", "armi.materials.sulfur module", "armi.materials.tZM module", "armi.materials.tantalum module", "armi.materials.tests package", "armi.materials.tests.test__init__ module", "armi.materials.tests.test_air module", "armi.materials.tests.test_b4c module", "armi.materials.tests.test_be9 module", "armi.materials.tests.test_graphite module", "armi.materials.tests.test_lithium module", "armi.materials.tests.test_materials module", "armi.materials.tests.test_sic module", "armi.materials.tests.test_sulfur module", "armi.materials.tests.test_thoriumOxide module", "armi.materials.tests.test_uZr module", "armi.materials.tests.test_water module", "armi.materials.thU module", "armi.materials.thorium module", "armi.materials.thoriumOxide module", "armi.materials.uThZr module", "armi.materials.uZr module", "armi.materials.uranium module", "armi.materials.uraniumOxide module", "armi.materials.void module", "armi.materials.water module", "armi.materials.yttriumOxide module", "armi.materials.zincOxide module", "armi.materials.zr module", "armi.meta module", "armi.migration package", "armi.migration.base module", "armi.migration.m0_1_3 module", "armi.migration.m0_1_6 module", "armi.migration.tests package", "armi.migration.tests.test_m0_1_6 module", "armi.migration.tests.test_migration_base module", "armi.mpiActions module", "armi.nucDirectory package", "armi.nucDirectory.elements module", "armi.nucDirectory.nucDir module", "armi.nucDirectory.nuclideBases module", "armi.nucDirectory.tests package", "armi.nucDirectory.tests.test_elements module", "armi.nucDirectory.tests.test_nucDirectory module", "armi.nucDirectory.tests.test_nuclideBases module", "armi.nucDirectory.tests.test_thermalScattering module", "armi.nucDirectory.tests.test_transmutations module", "armi.nucDirectory.thermalScattering module", "armi.nucDirectory.transmutations module", "armi.nuclearDataIO package", "armi.nuclearDataIO.cccc package", "armi.nuclearDataIO.cccc.cccc module", "armi.nuclearDataIO.cccc.compxs module", "armi.nuclearDataIO.cccc.dif3d module", "armi.nuclearDataIO.cccc.dlayxs module", "armi.nuclearDataIO.cccc.fixsrc module", "armi.nuclearDataIO.cccc.gamiso module", "armi.nuclearDataIO.cccc.geodst module", "armi.nuclearDataIO.cccc.isotxs module", "armi.nuclearDataIO.cccc.labels module", "armi.nuclearDataIO.cccc.nhflux module", "armi.nuclearDataIO.cccc.pmatrx module", "armi.nuclearDataIO.cccc.pwdint module", "armi.nuclearDataIO.cccc.rtflux module", "armi.nuclearDataIO.cccc.rzflux module", "armi.nuclearDataIO.cccc.tests package", "armi.nuclearDataIO.cccc.tests.test_cccc module", "armi.nuclearDataIO.cccc.tests.test_compxs module", "armi.nuclearDataIO.cccc.tests.test_dif3d module", "armi.nuclearDataIO.cccc.tests.test_dlayxs module", "armi.nuclearDataIO.cccc.tests.test_fixsrc module", "armi.nuclearDataIO.cccc.tests.test_gamiso module", "armi.nuclearDataIO.cccc.tests.test_geodst module", "armi.nuclearDataIO.cccc.tests.test_isotxs module", "armi.nuclearDataIO.cccc.tests.test_labels module", "armi.nuclearDataIO.cccc.tests.test_nhflux module", "armi.nuclearDataIO.cccc.tests.test_pmatrx module", "armi.nuclearDataIO.cccc.tests.test_pwdint module", "armi.nuclearDataIO.cccc.tests.test_rtflux module", "armi.nuclearDataIO.cccc.tests.test_rzflux module", "armi.nuclearDataIO.nuclearFileMetadata module", "armi.nuclearDataIO.tests package", "armi.nuclearDataIO.tests.test_xsCollections module", "armi.nuclearDataIO.tests.test_xsLibraries module", "armi.nuclearDataIO.tests.test_xsNuclides module", "armi.nuclearDataIO.xsCollections module", "armi.nuclearDataIO.xsLibraries module", "armi.nuclearDataIO.xsNuclides module", "armi.operators package", "armi.operators.operator module", "armi.operators.operatorMPI module", "armi.operators.runTypes module", "armi.operators.settingsValidation module", "armi.operators.snapshots module", "armi.operators.tests package", "armi.operators.tests.test_operatorSnapshots module", "armi.operators.tests.test_operators module", "armi.physics package", "armi.physics.constants module", "armi.physics.executers module", "armi.physics.fuelCycle package", "armi.physics.fuelCycle.assemblyRotationAlgorithms module", "armi.physics.fuelCycle.fuelHandlerFactory module", "armi.physics.fuelCycle.fuelHandlerInterface module", "armi.physics.fuelCycle.fuelHandlers module", "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module", "armi.physics.fuelCycle.settings module", "armi.physics.fuelCycle.tests package", "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module", "armi.physics.fuelCycle.tests.test_fuelHandlers module", "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module", "armi.physics.fuelPerformance package", "armi.physics.fuelPerformance.executers module", "armi.physics.fuelPerformance.parameters module", "armi.physics.fuelPerformance.plugin module", "armi.physics.fuelPerformance.settings module", "armi.physics.fuelPerformance.tests package", "armi.physics.fuelPerformance.tests.test_executers module", "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module", "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module", "armi.physics.fuelPerformance.utils module", "armi.physics.neutronics package", "armi.physics.neutronics.const module", "armi.physics.neutronics.crossSectionGroupManager module", "armi.physics.neutronics.crossSectionSettings module", "armi.physics.neutronics.diffIsotxs module", "armi.physics.neutronics.energyGroups module", "armi.physics.neutronics.fissionProductModel package", "armi.physics.neutronics.fissionProductModel.fissionProductModel module", "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module", "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module", "armi.physics.neutronics.fissionProductModel.tests package", "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module", "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module", "armi.physics.neutronics.globalFlux package", "armi.physics.neutronics.globalFlux.globalFluxInterface module", "armi.physics.neutronics.globalFlux.tests package", "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module", "armi.physics.neutronics.latticePhysics package", "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module", "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module", "armi.physics.neutronics.latticePhysics.tests package", "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module", "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module", "armi.physics.neutronics.macroXSGenerationInterface module", "armi.physics.neutronics.parameters module", "armi.physics.neutronics.reports module", "armi.physics.neutronics.settings module", "armi.physics.neutronics.tests package", "armi.physics.neutronics.tests.test_crossSectionManager module", "armi.physics.neutronics.tests.test_crossSectionSettings module", "armi.physics.neutronics.tests.test_crossSectionTable module", "armi.physics.neutronics.tests.test_energyGroups module", "armi.physics.neutronics.tests.test_macroXSGenerationInterface module", "armi.physics.neutronics.tests.test_neutronicsPlugin module", "armi.physics.safety package", "armi.physics.tests package", "armi.physics.tests.test_executers module", "armi.physics.thermalHydraulics package", "armi.physics.thermalHydraulics.const module", "armi.physics.thermalHydraulics.parameters module", "armi.physics.thermalHydraulics.plugin module", "armi.physics.thermalHydraulics.settings module", "armi.physics.thermalHydraulics.tests package", "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin module", "armi.pluginManager module", "armi.plugins module", "armi.reactor package", "armi.reactor.assemblies module", "armi.reactor.assemblyParameters module", "armi.reactor.blockParameters module", "armi.reactor.blocks module", "armi.reactor.blueprints package", "armi.reactor.blueprints.assemblyBlueprint module", "armi.reactor.blueprints.blockBlueprint module", "armi.reactor.blueprints.componentBlueprint module", "armi.reactor.blueprints.gridBlueprint module", "armi.reactor.blueprints.isotopicOptions module", "armi.reactor.blueprints.reactorBlueprint module", "armi.reactor.blueprints.tests package", "armi.reactor.blueprints.tests.test_assemblyBlueprints module", "armi.reactor.blueprints.tests.test_blockBlueprints module", "armi.reactor.blueprints.tests.test_blueprints module", "armi.reactor.blueprints.tests.test_componentBlueprint module", "armi.reactor.blueprints.tests.test_customIsotopics module", "armi.reactor.blueprints.tests.test_gridBlueprints module", "armi.reactor.blueprints.tests.test_materialModifications module", "armi.reactor.blueprints.tests.test_reactorBlueprints module", "armi.reactor.components package", "armi.reactor.components.basicShapes module", "armi.reactor.components.complexShapes module", "armi.reactor.components.component module", "armi.reactor.components.componentParameters module", "armi.reactor.components.volumetricShapes module", "armi.reactor.composites module", "armi.reactor.converters package", "armi.reactor.converters.axialExpansionChanger package", "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage module", "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger module", "armi.reactor.converters.axialExpansionChanger.expansionData module", "armi.reactor.converters.blockConverters module", "armi.reactor.converters.geometryConverters module", "armi.reactor.converters.meshConverters module", "armi.reactor.converters.parameterSweeps package", "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module", "armi.reactor.converters.pinTypeBlockConverters module", "armi.reactor.converters.tests package", "armi.reactor.converters.tests.test_axialExpansionChanger module", "armi.reactor.converters.tests.test_blockConverter module", "armi.reactor.converters.tests.test_geometryConverters module", "armi.reactor.converters.tests.test_meshConverters module", "armi.reactor.converters.tests.test_pinTypeBlockConverters module", "armi.reactor.converters.tests.test_uniformMesh module", "armi.reactor.converters.uniformMesh module", "armi.reactor.cores module", "armi.reactor.excoreStructure module", "armi.reactor.flags module", "armi.reactor.geometry module", "armi.reactor.grids package", "armi.reactor.grids.axial module", "armi.reactor.grids.cartesian module", "armi.reactor.grids.constants module", "armi.reactor.grids.grid module", "armi.reactor.grids.hexagonal module", "armi.reactor.grids.locations module", "armi.reactor.grids.structuredGrid module", "armi.reactor.grids.thetarz module", "armi.reactor.parameters package", "armi.reactor.parameters.exceptions module", "armi.reactor.parameters.parameterCollections module", "armi.reactor.parameters.parameterDefinitions module", "armi.reactor.parameters.resolveCollections module", "armi.reactor.reactorParameters module", "armi.reactor.reactors module", "armi.reactor.spentFuelPool module", "armi.reactor.systemLayoutInput module", "armi.reactor.tests package", "armi.reactor.tests.test_assemblies module", "armi.reactor.tests.test_blocks module", "armi.reactor.tests.test_components module", "armi.reactor.tests.test_composites module", "armi.reactor.tests.test_excoreStructures module", "armi.reactor.tests.test_flags module", "armi.reactor.tests.test_geometry module", "armi.reactor.tests.test_parameters module", "armi.reactor.tests.test_reactors module", "armi.reactor.tests.test_rz_reactors module", "armi.reactor.tests.test_zones module", "armi.reactor.zones module", "armi.runLog module", "armi.settings package", "armi.settings.caseSettings module", "armi.settings.fwSettings package", "armi.settings.fwSettings.databaseSettings module", "armi.settings.fwSettings.globalSettings module", "armi.settings.fwSettings.reportSettings module", "armi.settings.fwSettings.tightCouplingSettings module", "armi.settings.setting module", "armi.settings.settingsIO module", "armi.settings.settingsValidation module", "armi.settings.tests package", "armi.settings.tests.test_inspectors module", "armi.settings.tests.test_settings module", "armi.settings.tests.test_settingsIO module", "armi.tests package", "armi.tests.mockRunLogs module", "armi.tests.refSmallReactorShuffleLogic module", "armi.tests.test_apps module", "armi.tests.test_armiTestHelper module", "armi.tests.test_cartesian module", "armi.tests.test_context module", "armi.tests.test_interfaces module", "armi.tests.test_lwrInputs module", "armi.tests.test_mpiActions module", "armi.tests.test_mpiFeatures module", "armi.tests.test_mpiParameters module", "armi.tests.test_notebooks module", "armi.tests.test_plugins module", "armi.tests.test_runLog module", "armi.tests.test_tests module", "armi.tests.test_user_plugins module", "armi.utils package", "armi.utils.asciimaps module", "armi.utils.codeTiming module", "armi.utils.customExceptions module", "armi.utils.densityTools module", "armi.utils.directoryChangers module", "armi.utils.directoryChangersMpi module", "armi.utils.dynamicImporter module", "armi.utils.flags module", "armi.utils.gridEditor module", "armi.utils.hexagon module", "armi.utils.iterables module", "armi.utils.mathematics module", "armi.utils.outputCache module", "armi.utils.parsing module", "armi.utils.pathTools module", "armi.utils.plotting module", "armi.utils.properties module", "armi.utils.reportPlotting module", "armi.utils.tabulate module", "armi.utils.tests package", "armi.utils.tests.test_asciimaps module", "armi.utils.tests.test_codeTiming module", "armi.utils.tests.test_custom_exceptions module", "armi.utils.tests.test_densityTools module", "armi.utils.tests.test_directoryChangers module", "armi.utils.tests.test_directoryChangersMpi module", "armi.utils.tests.test_flags module", "armi.utils.tests.test_hexagon module", "armi.utils.tests.test_iterables module", "armi.utils.tests.test_mathematics module", "armi.utils.tests.test_outputCache module", "armi.utils.tests.test_parsing module", "armi.utils.tests.test_pathTools module", "armi.utils.tests.test_plotting module", "armi.utils.tests.test_properties module", "armi.utils.tests.test_reportPlotting module", "armi.utils.tests.test_tabulate module", "armi.utils.tests.test_textProcessors module", "armi.utils.tests.test_triangle module", "armi.utils.tests.test_units module", "armi.utils.tests.test_utils module", "armi.utils.textProcessors module", "armi.utils.triangle module", "armi.utils.units module", "armi", "<span class=\"section-number\">4. </span>Documenting ARMI", "<span class=\"section-number\">3. </span>Entry Points", "<span class=\"section-number\">8. </span>First Time Contributors Guide", "<span class=\"section-number\">1. </span>Framework Architecture", "Developer Docs", "<span class=\"section-number\">2. </span>Making ARMI-based Apps", "<span class=\"section-number\">5. </span>Parallel Code in ARMI", "<span class=\"section-number\">6. </span>Profiling ARMI", "<span class=\"section-number\">7. </span>Reports in ARMI", "<span class=\"section-number\">9. </span>Standards and Practices for Coding", "<span class=\"section-number\">10. </span>Tooling and Infrastructure", "Gallery", "Analysis", "Applications", "Framework", "Analysis", "Write MCNP Material Cards", "Hex block to RZ geometry conversion", "Hex reactor to RZ geometry conversion", "Computation times", "Applications", "Framework", "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion", "Plot a chart of the nuclides.", "Computing Reaction Rates on a Block.", "&lt;no title&gt;", "Make a hex grid.", "Make a Cartesian grid.", "Make a Theta-R-Z grid.", "Plotting Multi-group XS from ISOTXS.", "Plotting a multi-group scatter matrix.", "Listing of Material Library.", "Build Reactor Inputs Programmatically.", "Plot a reactor facemap.", "Transmutation and decay reactions.", "Computation times", "Gallery", "Glossary", "ARMI", "Installation", "ARMI v0.1 Release Notes", "ARMI v0.2 Release Notes", "ARMI v0.3 Release Notes", "ARMI v0.4 Release Notes", "Release Notes", "<span class=\"section-number\">5. </span>Hands-on at the ARMI Terminal", "Tutorials", "<span class=\"section-number\">6. </span>Making your first ARMI-based App", "<span class=\"section-number\">2. </span>The ARMI Material Library", "<span class=\"section-number\">1. </span>The ARMI Nuclide and Element Packages", "<span class=\"section-number\">7. </span>Parameter sweeps", "<span class=\"section-number\">3. </span>Building input files for a fast reactor", "<span class=\"section-number\">4. </span>Building input files for a thermal reactor", "Gallery", "<span class=\"section-number\">12. </span>Accessing Entry Points", "<span class=\"section-number\">8. </span>Assembly Parameters", "<span class=\"section-number\">9. </span>Block Parameters", "<span class=\"section-number\">7. </span>Component Parameters", "<span class=\"section-number\">6. </span>Core Parameters", "User Docs", "<span class=\"section-number\">2. </span>Inputs", "<span class=\"section-number\">4. </span>Accessing Data in ARMI", "<span class=\"section-number\">3. </span>Outputs", "<span class=\"section-number\">10. </span>Physics Coupling", "<span class=\"section-number\">11. </span>Radial and Axial Expansion and Contraction", "<span class=\"section-number\">5. </span>Reactor Parameters", "<span class=\"section-number\">1. </span>Installation"], "terms": {"welcom": [0, 27, 309, 482], "advanc": [0, 3, 7, 91, 237, 238, 308, 309, 370, 405, 478, 479, 480, 486, 491, 507], "reactor": [0, 2, 3, 5, 6, 9, 13, 14, 18, 19, 20, 24, 25, 27, 30, 31, 33, 37, 40, 42, 43, 44, 45, 46, 47, 57, 59, 60, 69, 77, 78, 81, 84, 88, 89, 91, 100, 103, 150, 154, 159, 163, 164, 165, 168, 174, 175, 186, 191, 200, 202, 203, 210, 211, 213, 214, 215, 217, 218, 219, 223, 224, 225, 226, 237, 242, 244, 246, 249, 251, 253, 260, 263, 275, 280, 371, 378, 383, 385, 387, 388, 389, 394, 395, 396, 399, 401, 403, 405, 413, 440, 443, 445, 446, 447, 449, 450, 452, 455, 456, 457, 458, 460, 462, 463, 465, 466, 467, 468, 469, 475, 476, 477, 478, 479, 480, 481, 482, 484, 487, 488, 489, 494, 496, 497, 498, 499, 500, 501, 502, 507], "model": [0, 3, 5, 6, 9, 20, 33, 45, 46, 55, 59, 77, 79, 80, 81, 82, 86, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 109, 110, 111, 112, 114, 115, 130, 131, 132, 135, 136, 139, 140, 141, 158, 159, 162, 173, 202, 210, 211, 213, 225, 234, 235, 237, 238, 241, 242, 243, 246, 247, 264, 275, 280, 281, 285, 286, 287, 288, 289, 290, 291, 296, 302, 304, 305, 308, 309, 314, 315, 319, 328, 330, 334, 341, 343, 344, 345, 347, 358, 360, 364, 373, 389, 395, 445, 446, 453, 455, 456, 458, 462, 465, 475, 477, 478, 479, 480, 481, 482, 484, 487, 488, 489, 491, 492, 493, 494, 497, 499, 501, 503, 507], "interfac": [0, 1, 3, 4, 5, 6, 7, 9, 14, 18, 19, 20, 26, 31, 33, 46, 57, 150, 154, 164, 165, 173, 174, 177, 178, 188, 202, 203, 204, 210, 213, 214, 217, 218, 223, 228, 235, 237, 242, 246, 249, 251, 252, 253, 256, 258, 265, 267, 275, 280, 282, 308, 328, 331, 336, 341, 367, 369, 370, 381, 385, 388, 391, 394, 403, 406, 413, 414, 440, 441, 442, 446, 447, 450, 451, 466, 473, 474, 478, 479, 480, 481, 482, 484, 486, 491, 501, 503, 507], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 18, 19, 20, 22, 24, 25, 26, 27, 30, 31, 32, 33, 36, 38, 41, 42, 43, 44, 46, 48, 49, 50, 54, 55, 57, 59, 60, 61, 64, 65, 68, 69, 73, 75, 76, 77, 78, 79, 81, 88, 89, 92, 93, 100, 102, 103, 104, 107, 112, 113, 114, 115, 118, 124, 132, 133, 134, 136, 137, 138, 144, 150, 151, 152, 153, 154, 159, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 186, 187, 189, 190, 191, 194, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 213, 215, 216, 217, 218, 219, 223, 226, 234, 235, 237, 238, 239, 240, 242, 244, 246, 249, 251, 253, 256, 258, 260, 263, 264, 271, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 300, 302, 303, 305, 307, 308, 309, 312, 313, 314, 315, 316, 319, 321, 327, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 370, 371, 372, 373, 378, 379, 381, 385, 387, 388, 389, 391, 392, 394, 395, 396, 397, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 419, 431, 432, 433, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 465, 466, 467, 468, 469, 470, 472, 473, 475, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507], "modul": [0, 2, 3, 11, 21, 28, 32, 36, 39, 45, 47, 51, 56, 59, 72, 78, 117, 143, 147, 151, 155, 163, 164, 179, 195, 202, 208, 211, 214, 221, 225, 230, 235, 241, 245, 248, 250, 252, 255, 262, 270, 272, 277, 281, 286, 293, 302, 309, 310, 317, 320, 332, 341, 350, 364, 366, 374, 378, 395, 415, 440, 442, 444, 446, 447, 450, 478, 479, 481, 482, 488, 490, 491, 492, 501, 503], "initi": [0, 1, 3, 6, 46, 58, 60, 73, 77, 150, 152, 161, 165, 166, 169, 174, 200, 203, 215, 242, 252, 260, 280, 285, 287, 288, 289, 290, 291, 292, 300, 305, 308, 312, 313, 321, 327, 328, 341, 344, 353, 371, 373, 397, 399, 400, 412, 414, 415, 423, 430, 444, 463, 466, 473, 474, 478, 479, 481, 482, 484, 487, 497, 498, 501], "platform": [0, 54, 479, 480, 482, 507], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 13, 14, 15, 18, 19, 20, 24, 25, 26, 27, 31, 36, 38, 41, 43, 44, 46, 49, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 80, 81, 87, 88, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 107, 111, 115, 135, 136, 138, 141, 144, 150, 151, 152, 153, 154, 158, 161, 162, 164, 165, 166, 168, 169, 171, 172, 173, 174, 177, 178, 187, 189, 196, 199, 200, 201, 202, 203, 204, 206, 207, 210, 211, 213, 214, 216, 217, 218, 219, 223, 225, 234, 235, 237, 238, 239, 241, 242, 243, 244, 249, 253, 258, 261, 264, 279, 280, 281, 282, 285, 286, 287, 288, 290, 291, 292, 302, 303, 304, 305, 307, 308, 312, 314, 315, 322, 327, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 352, 353, 354, 359, 360, 362, 363, 364, 365, 370, 371, 372, 373, 377, 378, 385, 388, 392, 394, 395, 396, 399, 405, 406, 407, 410, 411, 412, 413, 414, 437, 439, 441, 442, 443, 445, 446, 447, 448, 450, 451, 458, 473, 475, 478, 481, 482, 483, 486, 487, 488, 491, 492, 495, 496, 497, 498, 499, 500, 502, 505, 506], "bootstrap": 0, "process": [0, 3, 4, 5, 20, 22, 38, 44, 46, 76, 103, 150, 174, 203, 213, 214, 217, 218, 223, 225, 226, 235, 238, 249, 253, 280, 308, 321, 327, 328, 343, 365, 372, 387, 388, 389, 398, 414, 437, 442, 443, 444, 447, 450, 451, 478, 479, 481, 482, 485, 486, 487, 488, 499, 501, 503, 504], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 20, 22, 24, 25, 26, 27, 30, 31, 32, 33, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104, 107, 110, 111, 112, 113, 114, 115, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 144, 150, 151, 152, 153, 154, 156, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 183, 187, 189, 194, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 223, 225, 226, 234, 235, 237, 238, 239, 240, 242, 244, 247, 249, 251, 253, 256, 257, 258, 260, 263, 264, 271, 275, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 300, 301, 302, 303, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 319, 321, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 352, 353, 354, 356, 358, 359, 360, 362, 363, 365, 370, 371, 372, 373, 375, 376, 377, 378, 379, 382, 385, 388, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 414, 419, 420, 423, 425, 428, 429, 431, 432, 433, 434, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 457, 458, 463, 465, 466, 467, 468, 469, 472, 473, 475, 478, 479, 480, 481, 482, 484, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 501, 503, 504, 505, 506, 507], "broken": [0, 150, 285, 337, 406, 414, 450, 481, 484, 488, 501], "sever": [0, 76, 164, 218, 249, 253, 280, 327, 341, 414, 441, 444, 450, 470, 479, 482, 484, 488, 490, 501], "phase": [0, 110, 139, 152, 161, 247, 501], "import": [0, 1, 3, 5, 6, 32, 43, 75, 76, 78, 151, 153, 154, 164, 166, 172, 174, 211, 214, 218, 236, 237, 242, 253, 280, 305, 315, 327, 328, 330, 339, 341, 352, 363, 376, 395, 398, 401, 402, 410, 411, 414, 437, 440, 442, 445, 446, 447, 448, 449, 451, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 479, 480, 481, 482, 486, 488, 489, 490, 491, 492, 493, 501, 503, 507], "fundament": [0, 45, 59, 78, 79, 119, 140, 151, 152, 154, 308, 344, 405, 492], "depend": [0, 18, 25, 30, 31, 36, 45, 46, 54, 55, 57, 77, 78, 103, 150, 151, 164, 167, 168, 173, 203, 204, 205, 223, 234, 237, 238, 242, 280, 282, 285, 290, 291, 305, 307, 308, 315, 327, 328, 334, 336, 337, 344, 353, 359, 376, 378, 414, 437, 441, 443, 444, 445, 449, 472, 475, 479, 480, 481, 482, 484, 488, 489, 491, 499, 501, 502, 507], "python": [0, 1, 20, 36, 38, 65, 68, 69, 77, 78, 164, 165, 211, 218, 280, 285, 338, 341, 344, 371, 388, 395, 403, 406, 409, 410, 414, 421, 432, 437, 441, 442, 443, 444, 446, 447, 448, 450, 451, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 479, 481, 482, 484, 486, 491, 492, 493, 501, 503], "librari": [0, 20, 36, 153, 154, 161, 162, 166, 168, 170, 172, 174, 175, 181, 187, 190, 194, 196, 199, 200, 201, 242, 249, 253, 258, 285, 291, 298, 305, 308, 328, 363, 403, 411, 442, 443, 446, 447, 450, 451, 462, 465, 470, 471, 476, 477, 479, 481, 482, 487, 488, 493, 494, 501], "some": [0, 2, 3, 4, 5, 7, 9, 13, 18, 19, 20, 27, 30, 31, 38, 40, 43, 45, 48, 54, 55, 76, 77, 88, 103, 107, 144, 150, 151, 153, 154, 159, 164, 165, 166, 168, 171, 174, 178, 194, 198, 199, 203, 211, 212, 213, 218, 223, 224, 225, 235, 237, 238, 242, 249, 261, 275, 280, 285, 286, 289, 290, 291, 301, 305, 308, 309, 312, 313, 326, 327, 328, 329, 330, 335, 336, 337, 339, 341, 343, 344, 345, 348, 351, 352, 359, 362, 363, 364, 365, 371, 372, 376, 378, 387, 389, 391, 396, 403, 406, 407, 410, 411, 413, 414, 416, 423, 425, 429, 432, 436, 437, 441, 443, 444, 445, 447, 449, 450, 451, 452, 458, 472, 475, 477, 479, 480, 481, 482, 486, 488, 491, 492, 493, 494, 496, 498, 500, 503, 507], "third": [0, 31, 96, 166, 177, 210, 249, 280, 282, 290, 308, 315, 323, 328, 336, 359, 407, 414, 438, 443, 450, 473, 479, 492, 501], "parti": [0, 31, 203, 443, 450, 479], "lib": [0, 82, 166, 170, 172, 175, 199, 200, 213, 249, 256, 258, 281, 308, 328, 395, 412, 450, 465, 470, 471], "investig": [0, 489], "environ": [0, 75, 76, 365, 371, 388, 421, 441, 450, 479, 481, 492, 500], "check": [0, 1, 4, 30, 35, 41, 46, 54, 60, 73, 77, 103, 124, 164, 189, 197, 198, 210, 213, 218, 235, 237, 238, 249, 251, 263, 268, 280, 285, 296, 305, 308, 313, 314, 316, 321, 323, 326, 328, 330, 331, 337, 340, 343, 351, 352, 353, 371, 373, 375, 378, 379, 386, 391, 395, 406, 407, 408, 410, 412, 416, 420, 423, 429, 436, 443, 444, 446, 449, 450, 478, 480, 481, 482, 484, 486, 487, 491, 492, 501, 507], "version": [0, 1, 2, 4, 5, 6, 7, 9, 13, 27, 43, 48, 59, 64, 67, 103, 143, 161, 164, 174, 210, 238, 279, 280, 281, 291, 308, 328, 341, 344, 364, 370, 371, 372, 373, 403, 406, 407, 411, 436, 444, 445, 479, 480, 481, 482, 484, 486, 488, 491, 492, 493, 501, 503, 507], "code": [0, 1, 3, 4, 5, 6, 7, 18, 19, 20, 26, 31, 47, 59, 65, 67, 77, 78, 143, 150, 151, 153, 154, 159, 161, 164, 165, 166, 167, 168, 172, 175, 199, 202, 203, 211, 213, 214, 217, 218, 220, 235, 237, 242, 251, 253, 254, 269, 280, 286, 288, 289, 291, 309, 319, 327, 330, 331, 336, 337, 339, 344, 349, 363, 365, 385, 394, 396, 397, 400, 403, 407, 417, 429, 437, 441, 442, 443, 444, 445, 446, 448, 449, 451, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 481, 482, 484, 488, 490, 492, 497, 500, 501, 503], "mpi": [0, 2, 3, 5, 20, 26, 77, 128, 203, 204, 217, 218, 238, 258, 280, 308, 343, 387, 388, 389, 395, 401, 410, 421, 428, 445, 478, 479, 480, 482, 501, 507], "situat": [0, 9, 289, 302, 308, 330, 331, 338, 363, 373, 392, 414, 479, 488, 501], "tty": 0, "gui": [0, 59, 64, 65, 66, 76, 280, 334, 365, 371, 373, 407, 442, 444, 478, 479, 481, 482, 488, 492, 502], "interact": [0, 3, 5, 6, 7, 9, 14, 18, 19, 62, 64, 65, 76, 77, 154, 166, 201, 202, 203, 210, 225, 235, 237, 251, 253, 256, 280, 343, 361, 388, 441, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 497, 499, 501, 503, 504, 507], "set": [0, 1, 3, 4, 5, 6, 9, 13, 19, 20, 24, 27, 30, 31, 35, 38, 42, 43, 44, 45, 46, 48, 49, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 81, 88, 89, 94, 95, 98, 103, 144, 146, 148, 150, 153, 154, 162, 163, 166, 170, 172, 173, 174, 175, 196, 199, 200, 202, 203, 204, 205, 206, 210, 211, 213, 214, 215, 216, 218, 225, 226, 228, 235, 237, 238, 239, 240, 242, 243, 244, 246, 249, 251, 253, 256, 260, 263, 264, 268, 269, 271, 272, 275, 278, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 296, 298, 305, 308, 312, 313, 314, 315, 316, 318, 321, 325, 326, 327, 328, 329, 330, 331, 336, 338, 339, 341, 342, 343, 344, 347, 349, 352, 353, 354, 359, 362, 385, 388, 392, 394, 395, 398, 399, 406, 407, 408, 410, 411, 412, 413, 414, 422, 433, 436, 437, 440, 442, 444, 446, 447, 449, 450, 451, 458, 459, 463, 465, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 495, 496, 497, 499, 500, 504, 505, 507], "up": [0, 3, 4, 5, 9, 18, 20, 25, 30, 44, 46, 66, 76, 77, 78, 92, 103, 143, 145, 150, 151, 152, 153, 154, 161, 162, 164, 199, 201, 203, 211, 213, 218, 234, 237, 249, 264, 271, 282, 285, 289, 291, 300, 305, 308, 312, 315, 327, 328, 330, 334, 337, 338, 339, 343, 344, 352, 362, 373, 385, 389, 395, 396, 399, 405, 407, 411, 413, 416, 420, 425, 441, 442, 444, 447, 449, 450, 451, 475, 479, 480, 481, 482, 484, 486, 487, 488, 489, 491, 496, 497, 499, 501, 503, 507], "temp": [0, 24, 61, 73, 76, 107, 305, 312, 313, 321, 411, 482, 488, 501], "dir": [0, 61, 213, 400, 482, 501], "printout": [0, 20, 54, 249, 301, 328, 481], "tabl": [0, 2, 4, 21, 22, 23, 24, 25, 54, 60, 79, 89, 91, 96, 104, 110, 112, 115, 122, 135, 139, 152, 153, 161, 183, 218, 260, 265, 282, 316, 328, 356, 395, 405, 432, 445, 447, 491, 492, 493, 501, 502, 503], "format": [0, 1, 3, 4, 5, 13, 15, 22, 23, 27, 36, 42, 44, 45, 79, 80, 81, 82, 86, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 109, 110, 111, 112, 114, 115, 124, 130, 131, 132, 135, 136, 139, 140, 141, 154, 164, 165, 166, 171, 172, 173, 174, 176, 177, 178, 184, 192, 193, 218, 244, 282, 287, 290, 291, 297, 298, 305, 328, 349, 357, 363, 365, 379, 395, 399, 411, 413, 419, 432, 445, 447, 449, 470, 471, 479, 481, 484, 486, 491, 493, 501], "prepar": [0, 77, 170, 210, 218, 242, 253, 308, 315, 327, 328, 395, 396, 489, 500], "log": [0, 3, 5, 54, 203, 359, 363, 365, 378, 379, 388, 392, 398, 413, 445, 465, 470, 482, 484, 488, 491, 503], "info": [0, 18, 20, 77, 112, 135, 168, 174, 182, 189, 280, 308, 339, 341, 349, 363, 379, 395, 398, 440, 444, 451, 472, 486, 488, 491, 492, 497, 500, 501, 503], "all": [0, 1, 3, 4, 5, 6, 8, 9, 10, 18, 19, 20, 36, 43, 44, 46, 49, 50, 54, 59, 61, 65, 68, 71, 73, 76, 77, 78, 88, 103, 124, 128, 150, 151, 152, 153, 154, 156, 158, 159, 161, 162, 164, 165, 166, 168, 170, 172, 173, 174, 175, 183, 187, 190, 194, 197, 199, 201, 203, 204, 205, 211, 213, 215, 217, 218, 219, 226, 235, 237, 238, 242, 244, 246, 249, 253, 254, 256, 258, 263, 280, 282, 285, 286, 289, 291, 302, 305, 308, 313, 315, 321, 323, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 343, 344, 345, 347, 348, 351, 352, 353, 354, 359, 362, 363, 372, 377, 378, 379, 387, 394, 395, 396, 397, 399, 401, 402, 403, 406, 407, 408, 411, 413, 414, 420, 425, 437, 441, 443, 444, 446, 447, 449, 450, 451, 463, 472, 475, 478, 479, 480, 482, 483, 486, 488, 489, 490, 491, 492, 493, 496, 497, 498, 499, 503, 506, 507], "possibl": [0, 3, 5, 6, 18, 19, 76, 77, 150, 164, 165, 203, 219, 249, 279, 280, 282, 285, 286, 287, 291, 305, 315, 328, 330, 339, 341, 343, 344, 359, 371, 373, 378, 403, 407, 408, 410, 411, 414, 437, 449, 450, 451, 475, 479, 483, 488, 492, 495, 501], "nuclid": [0, 5, 78, 81, 82, 88, 89, 101, 103, 107, 111, 130, 133, 134, 135, 136, 138, 145, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 168, 170, 172, 173, 175, 194, 196, 198, 199, 200, 201, 237, 238, 242, 244, 246, 247, 254, 285, 286, 288, 289, 291, 296, 298, 300, 305, 308, 314, 321, 323, 327, 328, 359, 399, 411, 419, 440, 462, 465, 466, 473, 474, 475, 476, 477, 478, 481, 482, 486, 487, 489, 494, 496, 497, 498, 499], "object": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 35, 42, 44, 45, 46, 47, 48, 52, 53, 54, 55, 57, 59, 65, 69, 76, 77, 78, 103, 144, 150, 151, 152, 153, 154, 161, 162, 164, 165, 166, 168, 170, 172, 174, 175, 196, 197, 199, 200, 201, 202, 203, 204, 205, 210, 213, 215, 216, 217, 218, 219, 226, 235, 238, 242, 244, 249, 251, 253, 258, 264, 268, 271, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 296, 302, 303, 304, 305, 307, 308, 311, 312, 313, 314, 315, 316, 318, 319, 321, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 340, 341, 343, 344, 347, 348, 349, 351, 354, 358, 359, 361, 362, 363, 364, 365, 370, 371, 372, 373, 376, 378, 385, 387, 388, 389, 394, 395, 396, 397, 399, 400, 403, 406, 407, 409, 411, 412, 413, 414, 430, 437, 442, 446, 447, 449, 450, 452, 473, 477, 478, 479, 481, 482, 484, 486, 489, 491, 494, 496, 497, 498, 501, 503], "directori": [0, 3, 5, 14, 45, 46, 54, 55, 57, 61, 62, 68, 73, 75, 76, 77, 153, 157, 161, 200, 203, 213, 249, 271, 328, 359, 363, 364, 378, 400, 401, 410, 420, 437, 442, 450, 464, 479, 480, 481, 482, 486, 488, 493, 501, 503, 507], "discov": [0, 45, 46, 54, 55, 203, 223, 280, 444, 480, 491, 492, 507], "regist": [0, 1, 46, 74, 77, 279, 280, 364, 376, 391, 446, 479, 487, 501, 504], "avail": [0, 1, 3, 5, 6, 18, 59, 65, 150, 151, 153, 161, 174, 199, 201, 203, 205, 210, 213, 237, 238, 242, 246, 285, 291, 296, 308, 327, 344, 364, 376, 395, 403, 436, 441, 443, 444, 446, 447, 449, 452, 477, 479, 486, 489, 490, 492, 493, 494, 499, 501, 502, 503, 504, 506], "built": [0, 9, 59, 200, 208, 218, 226, 235, 258, 263, 275, 280, 281, 282, 285, 286, 292, 308, 314, 321, 332, 394, 441, 442, 444, 446, 450, 465, 478, 479, 486, 488, 501, 503], "plugin": [0, 1, 2, 24, 31, 46, 49, 54, 57, 59, 75, 77, 78, 92, 103, 112, 134, 151, 202, 205, 211, 212, 214, 218, 223, 225, 226, 227, 230, 232, 235, 242, 243, 249, 259, 262, 268, 269, 272, 274, 277, 278, 279, 281, 285, 289, 291, 305, 309, 327, 341, 343, 344, 364, 365, 368, 373, 376, 378, 381, 390, 391, 394, 403, 440, 445, 449, 457, 466, 472, 475, 479, 481, 483, 484, 486, 487, 489, 493, 503], "custom": [0, 1, 59, 65, 78, 92, 103, 107, 150, 202, 214, 217, 218, 223, 235, 238, 244, 249, 253, 264, 279, 280, 286, 289, 291, 298, 318, 327, 363, 364, 370, 371, 372, 383, 388, 396, 399, 410, 411, 412, 414, 418, 424, 432, 437, 444, 446, 451, 473, 479, 481, 484, 486, 487, 492, 503], "ones": [0, 59, 88, 154, 162, 165, 199, 223, 237, 285, 308, 328, 396, 466, 486, 488, 501], "after": [0, 2, 8, 14, 25, 54, 71, 76, 77, 88, 103, 151, 166, 168, 174, 201, 203, 213, 218, 249, 253, 275, 280, 282, 285, 298, 305, 308, 312, 315, 326, 327, 328, 338, 339, 341, 343, 345, 352, 353, 359, 363, 365, 388, 394, 397, 403, 405, 406, 407, 411, 412, 413, 414, 444, 446, 447, 450, 451, 478, 482, 483, 484, 486, 488, 491, 497, 499, 501], "input": [0, 1, 3, 5, 6, 8, 13, 18, 19, 24, 27, 31, 38, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 67, 68, 73, 77, 78, 88, 103, 124, 134, 143, 144, 145, 154, 158, 167, 168, 169, 172, 182, 185, 187, 198, 199, 203, 210, 213, 214, 217, 218, 223, 237, 238, 242, 249, 253, 254, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 296, 298, 299, 302, 303, 305, 308, 309, 315, 319, 321, 327, 330, 331, 339, 340, 347, 349, 352, 353, 357, 359, 362, 364, 365, 370, 371, 378, 386, 395, 396, 398, 399, 402, 407, 408, 409, 414, 419, 425, 432, 433, 436, 439, 442, 444, 445, 452, 462, 465, 466, 474, 475, 476, 477, 479, 481, 482, 486, 487, 488, 491, 494, 496, 497, 498, 500, 502, 503], "defin": [0, 1, 3, 5, 7, 8, 18, 19, 25, 31, 48, 57, 69, 77, 78, 79, 87, 101, 102, 103, 107, 109, 114, 138, 144, 152, 154, 158, 161, 162, 164, 165, 171, 172, 174, 177, 178, 196, 197, 199, 200, 203, 204, 205, 210, 214, 215, 218, 220, 222, 228, 229, 235, 237, 243, 249, 253, 261, 264, 269, 275, 276, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 296, 299, 300, 302, 303, 305, 307, 308, 313, 314, 326, 327, 328, 330, 332, 336, 338, 339, 341, 342, 343, 344, 345, 353, 357, 365, 367, 369, 371, 373, 376, 385, 388, 391, 394, 396, 403, 407, 410, 411, 413, 414, 438, 439, 444, 446, 449, 450, 451, 452, 458, 463, 465, 473, 475, 477, 478, 481, 482, 484, 486, 487, 489, 491, 494, 497, 499, 503], "potenti": [0, 20, 48, 77, 103, 130, 131, 132, 161, 162, 203, 213, 280, 336, 347, 372, 373, 401, 408, 443, 444, 446, 449, 451, 479, 488, 491, 496, 499, 501, 506], "configur": [0, 1, 4, 75, 76, 238, 264, 280, 315, 371, 440, 444, 446, 450, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 479, 480, 481, 482, 486, 488, 491, 493, 496, 501, 507], "from": [0, 1, 3, 4, 5, 6, 8, 9, 13, 14, 18, 19, 20, 24, 25, 27, 31, 32, 33, 36, 38, 42, 43, 45, 46, 48, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 81, 86, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 101, 103, 107, 109, 110, 112, 113, 115, 119, 122, 124, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 143, 144, 145, 150, 151, 152, 153, 154, 158, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 181, 183, 186, 189, 190, 191, 194, 196, 199, 200, 201, 202, 203, 204, 207, 210, 213, 214, 218, 219, 223, 226, 235, 237, 238, 239, 240, 242, 244, 246, 247, 249, 251, 253, 258, 263, 264, 268, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 298, 299, 300, 302, 304, 305, 308, 309, 312, 313, 314, 315, 319, 321, 323, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 341, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 356, 358, 359, 362, 363, 364, 365, 371, 372, 373, 377, 378, 379, 385, 386, 388, 389, 394, 395, 396, 399, 400, 403, 405, 406, 407, 408, 411, 413, 414, 419, 421, 432, 437, 439, 442, 443, 444, 446, 447, 449, 450, 451, 452, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 501, 503, 505, 507], "read": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 18, 33, 46, 77, 144, 154, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 200, 201, 217, 218, 223, 238, 244, 251, 264, 280, 286, 287, 292, 296, 299, 305, 308, 327, 328, 338, 343, 344, 349, 357, 358, 365, 372, 377, 386, 396, 407, 412, 416, 436, 437, 441, 442, 446, 447, 450, 479, 481, 482, 484, 491, 492, 501, 503], "file": [0, 1, 3, 4, 5, 6, 7, 8, 9, 13, 18, 19, 22, 24, 25, 27, 31, 32, 33, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 54, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 80, 118, 143, 144, 150, 151, 154, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 200, 201, 203, 204, 206, 213, 215, 217, 218, 223, 236, 237, 238, 239, 242, 244, 246, 247, 249, 253, 260, 263, 280, 282, 286, 287, 289, 290, 291, 292, 294, 295, 296, 299, 308, 309, 327, 328, 330, 341, 344, 347, 348, 349, 357, 359, 362, 363, 364, 365, 371, 372, 373, 375, 377, 378, 386, 392, 395, 396, 397, 398, 400, 401, 403, 408, 409, 410, 411, 413, 414, 420, 432, 437, 441, 442, 443, 444, 445, 448, 449, 451, 460, 465, 466, 470, 473, 474, 476, 479, 480, 481, 482, 484, 486, 487, 491, 495, 500, 507], "updat": [0, 2, 6, 46, 48, 57, 77, 103, 143, 145, 154, 158, 163, 164, 174, 194, 199, 201, 203, 207, 212, 213, 217, 235, 237, 242, 249, 251, 253, 256, 263, 271, 282, 285, 289, 291, 302, 305, 307, 308, 312, 313, 315, 316, 321, 327, 328, 339, 341, 343, 344, 349, 352, 353, 358, 359, 365, 371, 373, 376, 378, 396, 399, 411, 445, 447, 450, 463, 479, 481, 482, 484, 485, 486, 488, 501, 504], "deplet": [0, 77, 154, 162, 211, 237, 238, 242, 246, 249, 252, 254, 265, 281, 282, 285, 289, 291, 330, 341, 344, 395, 407, 444, 466, 478, 481, 482, 486, 492, 496, 497, 501], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 226, 228, 231, 232, 233, 235, 237, 238, 239, 242, 244, 246, 247, 249, 251, 253, 254, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 406, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 445, 449, 450, 451, 454, 458, 459, 461, 464, 475, 477, 479, 481, 482, 486, 487, 489, 490, 491, 492, 493, 494, 497, 499, 501, 504], "config": [0, 75, 441], "state": [0, 1, 2, 3, 5, 6, 18, 19, 37, 43, 76, 77, 79, 89, 92, 103, 112, 128, 135, 150, 154, 161, 168, 170, 174, 175, 199, 203, 207, 210, 211, 213, 217, 235, 237, 249, 251, 253, 275, 280, 285, 305, 308, 313, 315, 321, 326, 327, 328, 336, 341, 343, 344, 349, 365, 373, 389, 394, 444, 446, 447, 449, 450, 455, 462, 475, 477, 478, 479, 484, 487, 488, 492, 494, 499, 500, 501, 505], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 19, 21, 24, 25, 27, 31, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 57, 59, 65, 69, 73, 76, 77, 78, 79, 80, 81, 91, 94, 95, 96, 98, 103, 107, 112, 115, 138, 150, 152, 153, 154, 161, 165, 166, 169, 170, 171, 172, 174, 175, 176, 177, 178, 182, 199, 200, 201, 202, 203, 210, 211, 215, 218, 219, 225, 228, 234, 235, 237, 238, 244, 249, 253, 258, 260, 272, 275, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 321, 326, 327, 328, 329, 330, 334, 336, 337, 339, 340, 346, 347, 348, 349, 352, 353, 354, 358, 359, 362, 364, 365, 370, 371, 372, 373, 378, 385, 388, 389, 391, 394, 395, 396, 397, 399, 400, 401, 403, 405, 406, 407, 410, 411, 412, 413, 414, 432, 437, 438, 439, 445, 446, 447, 473, 474, 478, 479, 481, 482, 483, 484, 486, 487, 492, 500, 501, 502, 503, 504], "data": [0, 1, 2, 3, 4, 5, 6, 8, 9, 13, 15, 18, 21, 23, 25, 26, 42, 43, 44, 55, 76, 77, 79, 80, 91, 94, 95, 98, 104, 111, 115, 130, 131, 132, 136, 144, 151, 152, 153, 154, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 194, 198, 200, 201, 210, 212, 213, 217, 218, 238, 242, 244, 249, 253, 258, 275, 279, 280, 281, 282, 285, 287, 291, 292, 296, 299, 301, 303, 305, 308, 312, 313, 315, 316, 327, 328, 329, 336, 339, 341, 343, 344, 349, 352, 370, 371, 373, 378, 395, 396, 403, 411, 413, 414, 432, 433, 437, 442, 444, 445, 447, 449, 453, 455, 456, 459, 462, 463, 466, 473, 474, 477, 478, 479, 482, 484, 486, 487, 488, 491, 492, 493, 494, 496, 500, 501, 503], "possibli": [0, 3, 5, 54, 202, 302, 314, 411, 414, 478, 486, 488, 501], "entri": [0, 1, 5, 36, 38, 45, 46, 54, 59, 60, 64, 65, 66, 67, 68, 73, 74, 76, 77, 162, 218, 235, 280, 285, 288, 289, 290, 305, 308, 321, 349, 400, 406, 407, 445, 481, 487, 492, 500, 501, 503], "point": [0, 1, 3, 5, 25, 31, 36, 38, 44, 45, 46, 48, 49, 54, 55, 59, 60, 64, 65, 66, 67, 68, 73, 74, 76, 77, 107, 111, 114, 124, 130, 131, 132, 135, 136, 154, 162, 165, 168, 172, 182, 183, 201, 202, 203, 218, 235, 238, 242, 249, 279, 280, 282, 286, 288, 290, 291, 294, 297, 298, 300, 309, 313, 315, 316, 327, 328, 332, 334, 337, 338, 339, 344, 352, 354, 385, 407, 411, 414, 432, 434, 438, 445, 447, 449, 451, 458, 459, 478, 481, 486, 487, 491, 492, 493, 496, 497, 500, 501, 503], "choos": [0, 78, 144, 161, 202, 213, 291, 414, 480, 488, 492, 507], "user": [0, 1, 3, 5, 7, 18, 22, 26, 31, 38, 46, 48, 54, 55, 59, 76, 78, 88, 92, 93, 103, 112, 134, 143, 151, 161, 162, 164, 166, 172, 200, 201, 202, 203, 214, 215, 216, 218, 235, 237, 238, 242, 244, 249, 253, 264, 280, 282, 285, 287, 289, 291, 292, 296, 305, 308, 313, 328, 330, 331, 339, 341, 359, 362, 363, 364, 365, 371, 372, 373, 377, 392, 395, 396, 398, 400, 407, 410, 432, 442, 443, 444, 446, 449, 450, 451, 475, 478, 479, 480, 482, 486, 488, 489, 493, 501, 502, 503, 504, 507], "command": [0, 18, 27, 38, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 166, 204, 217, 218, 239, 280, 365, 371, 373, 377, 397, 408, 421, 441, 442, 447, 448, 450, 478, 479, 484, 486, 488, 491, 501, 503], "If": [0, 1, 3, 5, 6, 18, 20, 26, 38, 42, 46, 48, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 103, 134, 150, 151, 153, 154, 162, 163, 165, 166, 168, 169, 199, 200, 202, 203, 204, 211, 213, 218, 219, 237, 238, 239, 242, 249, 253, 258, 279, 280, 282, 285, 286, 287, 291, 300, 302, 305, 308, 309, 312, 313, 314, 315, 321, 326, 327, 328, 329, 332, 334, 336, 337, 339, 341, 343, 344, 345, 348, 349, 352, 363, 365, 371, 372, 373, 377, 378, 395, 399, 400, 405, 406, 407, 410, 411, 413, 414, 437, 441, 444, 447, 449, 450, 451, 479, 480, 486, 488, 492, 493, 496, 497, 501, 503, 504, 507], "us": [0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 91, 94, 95, 96, 98, 103, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 136, 137, 138, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 172, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 215, 217, 218, 219, 222, 223, 224, 226, 231, 232, 233, 234, 237, 238, 239, 240, 242, 244, 246, 247, 249, 251, 253, 254, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 278, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 312, 313, 314, 315, 316, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 406, 407, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 445, 446, 448, 449, 451, 452, 453, 456, 458, 459, 464, 466, 467, 473, 475, 477, 478, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507], "run": [0, 1, 3, 4, 5, 6, 14, 18, 19, 20, 24, 26, 30, 31, 32, 33, 36, 38, 45, 46, 47, 54, 55, 57, 59, 60, 61, 64, 65, 67, 68, 69, 71, 73, 74, 75, 76, 77, 103, 150, 154, 161, 164, 180, 190, 196, 197, 202, 203, 204, 205, 207, 211, 213, 217, 218, 226, 235, 237, 238, 249, 251, 252, 253, 258, 263, 271, 280, 282, 285, 296, 308, 309, 314, 315, 321, 328, 341, 344, 359, 363, 364, 365, 373, 378, 387, 388, 389, 390, 395, 397, 408, 421, 429, 432, 441, 442, 443, 444, 445, 447, 448, 449, 451, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 486, 487, 489, 491, 492, 493, 496, 497, 499, 500, 503, 507], "addit": [0, 1, 2, 46, 59, 65, 150, 154, 164, 166, 172, 202, 203, 218, 238, 275, 280, 285, 287, 302, 305, 308, 315, 328, 330, 338, 343, 345, 371, 443, 444, 449, 451, 479, 482, 501], "work": [0, 3, 5, 13, 14, 20, 42, 43, 44, 45, 46, 52, 54, 55, 76, 77, 88, 103, 124, 143, 150, 187, 190, 200, 213, 218, 219, 244, 249, 251, 266, 285, 290, 291, 292, 295, 296, 300, 305, 308, 312, 315, 319, 328, 330, 331, 336, 345, 349, 352, 353, 356, 359, 363, 371, 376, 378, 379, 385, 389, 392, 395, 396, 397, 400, 405, 406, 410, 412, 419, 422, 428, 432, 437, 441, 443, 444, 446, 447, 449, 451, 458, 459, 478, 479, 480, 482, 486, 488, 490, 492, 493, 495, 496, 501, 503, 506, 507], "done": [0, 3, 20, 31, 46, 99, 100, 168, 218, 234, 242, 249, 251, 279, 305, 308, 309, 321, 328, 330, 336, 343, 378, 406, 407, 408, 441, 442, 443, 444, 447, 451, 465, 479, 486, 488, 493, 501], "build": [0, 3, 24, 27, 33, 45, 52, 55, 59, 73, 78, 151, 183, 200, 201, 202, 203, 213, 214, 218, 219, 237, 242, 244, 249, 258, 268, 280, 282, 285, 289, 290, 292, 302, 312, 314, 322, 327, 328, 329, 332, 334, 337, 340, 347, 349, 351, 352, 359, 362, 371, 391, 445, 446, 451, 452, 458, 459, 462, 465, 467, 468, 469, 476, 477, 478, 479, 486, 487, 488, 489, 491, 494, 501, 502], "oper": [0, 1, 2, 3, 5, 6, 9, 14, 27, 30, 45, 46, 59, 76, 77, 150, 151, 201, 216, 217, 218, 242, 280, 285, 291, 305, 308, 315, 319, 321, 326, 328, 330, 331, 337, 339, 343, 344, 359, 373, 376, 380, 388, 395, 396, 406, 410, 412, 422, 440, 445, 446, 447, 450, 474, 478, 480, 481, 482, 484, 486, 487, 488, 492, 493, 498, 506, 507], "specif": [0, 1, 2, 3, 4, 5, 9, 18, 19, 24, 31, 40, 41, 42, 46, 48, 55, 57, 65, 77, 78, 79, 91, 94, 95, 98, 103, 107, 112, 138, 151, 152, 153, 154, 158, 165, 166, 168, 171, 173, 176, 199, 200, 201, 202, 203, 204, 210, 212, 213, 218, 224, 238, 242, 249, 253, 268, 279, 280, 282, 285, 287, 290, 291, 302, 305, 308, 309, 316, 319, 321, 327, 328, 330, 341, 343, 344, 345, 348, 352, 353, 363, 379, 385, 388, 391, 394, 396, 403, 407, 408, 413, 414, 441, 442, 443, 444, 446, 449, 450, 451, 457, 478, 479, 482, 488, 490, 491, 492, 493, 496, 501, 502, 503, 504], "calcul": [0, 3, 5, 31, 77, 81, 91, 94, 95, 98, 103, 107, 109, 133, 138, 150, 153, 154, 162, 168, 174, 196, 201, 202, 203, 210, 213, 226, 234, 235, 237, 238, 240, 242, 249, 252, 253, 256, 263, 280, 282, 285, 303, 305, 308, 309, 312, 313, 314, 315, 321, 327, 328, 339, 344, 351, 352, 353, 399, 405, 408, 414, 423, 434, 444, 458, 463, 478, 479, 481, 482, 486, 488, 489, 491, 492, 493, 497, 499, 501, 504], "loop": [0, 14, 18, 150, 202, 203, 204, 207, 210, 218, 226, 328, 351, 373, 395, 411, 413, 444, 450, 475, 479, 486, 488, 491, 499, 503], "order": [0, 3, 6, 9, 55, 77, 78, 91, 94, 95, 96, 98, 104, 150, 151, 154, 162, 164, 165, 166, 168, 172, 174, 177, 203, 207, 210, 218, 219, 237, 263, 280, 282, 285, 305, 313, 314, 327, 328, 337, 343, 351, 352, 356, 358, 362, 389, 395, 406, 408, 411, 412, 414, 444, 447, 449, 458, 479, 480, 481, 482, 484, 486, 488, 492, 497, 501, 503, 507], "stack": [0, 3, 6, 9, 18, 19, 77, 203, 204, 280, 282, 285, 321, 394, 466, 473, 474, 478, 482, 486, 488, 492, 493, 501], "begin": [0, 2, 3, 5, 6, 19, 21, 24, 25, 69, 77, 164, 165, 203, 217, 235, 237, 260, 280, 282, 314, 328, 337, 395, 396, 414, 444, 449, 478, 486, 488, 489, 490, 496, 497, 499, 501, 503, 505], "over": [0, 1, 18, 27, 32, 78, 79, 80, 81, 82, 86, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 109, 110, 111, 112, 114, 115, 130, 131, 132, 135, 136, 139, 140, 141, 150, 161, 168, 174, 202, 203, 207, 210, 242, 251, 253, 282, 285, 307, 308, 314, 315, 321, 327, 328, 338, 341, 343, 344, 351, 406, 408, 411, 422, 444, 463, 465, 475, 479, 480, 484, 491, 497, 501, 504, 506, 507], "upon": [0, 5, 25, 43, 60, 65, 77, 151, 154, 202, 203, 213, 216, 305, 308, 328, 330, 339, 343, 344, 352, 378, 403, 422, 442, 444, 465, 479, 501], "accord": [0, 21, 55, 62, 168, 174, 237, 285, 328, 396, 414, 444, 489, 501, 503], "design": [0, 1, 2, 18, 20, 21, 24, 27, 46, 48, 54, 55, 60, 77, 82, 103, 124, 152, 154, 212, 218, 238, 280, 281, 282, 285, 286, 289, 292, 308, 309, 312, 315, 319, 325, 328, 332, 339, 352, 365, 444, 445, 446, 449, 450, 458, 478, 479, 481, 487, 489, 492, 501, 502, 505], "until": [0, 44, 218, 280, 292, 302, 305, 314, 343, 345, 371, 405, 407, 414, 437, 447, 449, 479, 501, 504], "complet": [0, 3, 14, 54, 65, 73, 77, 151, 213, 249, 291, 292, 303, 304, 308, 314, 327, 328, 338, 352, 378, 395, 414, 443, 446, 450, 451, 466, 473, 474, 486, 488, 491, 492, 501, 503], "wrap": [0, 20, 22, 25, 103, 203, 285, 304, 305, 352, 378, 395, 436, 446, 449, 483, 486, 491, 492], "quit": [0, 1, 211, 314, 388, 479, 488, 489, 492, 501], "disablefutureconfigur": [0, 440], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 246, 247, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 443, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 479, 480, 485, 486, 488, 490, 497, 499, 501, 502, 507], "expos": [0, 6, 18, 19, 20, 26, 31, 228, 235, 237, 242, 275, 279, 280, 281, 391, 394, 446, 486], "function": [0, 1, 3, 5, 6, 9, 18, 19, 20, 26, 27, 31, 36, 41, 42, 46, 52, 55, 57, 59, 60, 65, 73, 77, 80, 88, 103, 107, 115, 124, 154, 165, 177, 203, 208, 210, 218, 219, 237, 238, 242, 244, 248, 249, 252, 253, 256, 258, 261, 280, 282, 285, 286, 291, 295, 296, 308, 325, 327, 328, 331, 337, 339, 341, 343, 344, 347, 349, 352, 353, 358, 363, 366, 370, 371, 373, 376, 378, 381, 382, 385, 387, 391, 392, 394, 395, 397, 403, 406, 407, 408, 410, 411, 413, 414, 432, 433, 436, 437, 439, 442, 444, 446, 447, 449, 450, 451, 465, 478, 479, 481, 482, 483, 484, 486, 488, 489, 491, 501, 504, 505], "ensur": [0, 14, 52, 57, 73, 74, 152, 165, 186, 191, 192, 193, 198, 210, 213, 223, 237, 242, 246, 247, 249, 251, 264, 289, 295, 296, 298, 302, 316, 321, 323, 326, 327, 328, 338, 352, 353, 354, 356, 357, 359, 363, 376, 379, 385, 414, 419, 422, 441, 447, 449, 450, 451, 481, 488, 493, 501], "isn": [0, 9, 41, 77, 197, 201, 328, 330, 449, 450, 451, 488, 492], "t": [0, 2, 3, 4, 5, 6, 9, 18, 19, 33, 41, 43, 46, 54, 57, 77, 78, 80, 82, 88, 89, 91, 92, 93, 94, 95, 96, 98, 103, 104, 107, 110, 111, 115, 135, 138, 139, 141, 152, 154, 158, 161, 162, 166, 187, 197, 199, 200, 201, 203, 204, 207, 218, 234, 237, 238, 247, 249, 258, 264, 275, 280, 285, 286, 305, 308, 314, 328, 330, 331, 332, 337, 338, 341, 343, 345, 357, 359, 365, 370, 373, 378, 397, 399, 405, 406, 407, 410, 411, 412, 414, 420, 425, 429, 437, 439, 441, 442, 443, 445, 446, 447, 449, 472, 479, 480, 482, 486, 488, 489, 491, 492, 493, 496, 497, 501, 503, 505, 507], "call": [0, 3, 5, 6, 9, 14, 18, 19, 25, 30, 31, 38, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 103, 144, 150, 152, 154, 161, 203, 204, 211, 213, 215, 216, 218, 219, 223, 235, 237, 238, 239, 242, 244, 249, 253, 279, 280, 282, 285, 290, 292, 300, 305, 308, 312, 315, 323, 327, 328, 331, 333, 334, 337, 339, 340, 343, 344, 345, 352, 358, 363, 365, 371, 373, 377, 378, 379, 389, 392, 394, 395, 397, 400, 403, 406, 408, 410, 414, 429, 446, 447, 449, 450, 451, 482, 486, 488, 492, 493, 495, 501, 503], "more": [0, 1, 3, 4, 5, 6, 9, 18, 31, 33, 36, 42, 43, 46, 49, 54, 55, 59, 78, 92, 103, 124, 143, 154, 159, 161, 162, 164, 165, 172, 174, 201, 203, 218, 219, 226, 238, 242, 244, 249, 280, 285, 286, 290, 292, 296, 305, 307, 308, 309, 312, 314, 327, 328, 330, 331, 332, 334, 336, 338, 339, 341, 343, 362, 365, 371, 373, 378, 396, 397, 403, 405, 411, 413, 414, 432, 437, 438, 443, 444, 446, 447, 449, 450, 451, 452, 466, 467, 468, 469, 472, 475, 477, 479, 482, 484, 486, 487, 488, 489, 491, 492, 493, 494, 501, 502, 503], "than": [0, 3, 4, 5, 18, 33, 43, 47, 48, 55, 76, 103, 124, 134, 138, 153, 154, 159, 162, 165, 166, 174, 177, 200, 203, 207, 210, 213, 218, 235, 237, 238, 249, 280, 282, 285, 291, 302, 304, 305, 308, 321, 328, 330, 333, 334, 336, 337, 339, 340, 362, 365, 371, 396, 397, 403, 405, 406, 410, 411, 413, 414, 450, 451, 465, 473, 475, 479, 481, 484, 486, 488, 492, 493, 496, 497, 501, 503], "onc": [0, 5, 154, 164, 211, 264, 285, 286, 315, 319, 322, 326, 327, 352, 365, 444, 446, 448, 449, 451, 486, 488, 491, 495, 496, 501], "isstablereleasevers": [0, 440], "none": [0, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 31, 38, 43, 44, 46, 48, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 150, 152, 153, 154, 161, 162, 163, 165, 182, 196, 199, 200, 201, 203, 210, 213, 217, 218, 219, 223, 226, 237, 238, 239, 242, 244, 249, 251, 253, 254, 256, 258, 280, 282, 285, 286, 289, 292, 302, 303, 304, 305, 307, 308, 312, 313, 314, 315, 316, 318, 319, 321, 327, 328, 329, 332, 333, 334, 336, 337, 339, 340, 343, 344, 345, 347, 348, 351, 354, 358, 359, 362, 363, 364, 365, 370, 371, 373, 377, 378, 379, 380, 385, 388, 389, 391, 394, 395, 399, 400, 401, 406, 407, 408, 411, 413, 414, 419, 425, 432, 436, 437, 439, 441, 442, 447, 449, 468, 473, 474, 481, 486, 488, 491, 492, 501, 503], "determin": [0, 3, 5, 9, 25, 27, 46, 54, 55, 77, 150, 153, 154, 162, 164, 165, 166, 196, 200, 202, 203, 205, 218, 219, 237, 238, 242, 249, 253, 280, 282, 285, 287, 291, 302, 303, 305, 308, 311, 312, 313, 314, 315, 321, 328, 341, 343, 352, 353, 364, 378, 379, 405, 407, 408, 411, 428, 437, 444, 450, 479, 482, 484, 486, 488, 497, 501], "should": [0, 1, 3, 4, 5, 6, 18, 20, 30, 42, 46, 54, 55, 57, 60, 65, 76, 77, 92, 103, 138, 143, 150, 151, 152, 154, 159, 161, 162, 164, 165, 166, 168, 174, 197, 199, 200, 201, 203, 205, 210, 213, 215, 219, 234, 235, 238, 242, 244, 249, 253, 258, 280, 282, 285, 286, 287, 289, 291, 292, 303, 304, 305, 307, 308, 312, 313, 314, 315, 316, 321, 327, 328, 330, 331, 334, 336, 338, 339, 341, 343, 344, 345, 352, 354, 358, 363, 365, 368, 371, 378, 379, 381, 387, 389, 392, 396, 397, 403, 406, 407, 408, 411, 412, 413, 416, 435, 441, 443, 444, 445, 447, 451, 479, 480, 487, 488, 491, 492, 493, 496, 497, 499, 501, 507], "consid": [0, 46, 77, 103, 153, 165, 238, 242, 244, 249, 253, 280, 282, 285, 308, 309, 312, 321, 328, 336, 338, 344, 371, 403, 443, 450, 451, 458, 459, 463, 479, 493, 501], "stabl": [0, 3, 5, 154, 336, 451, 482, 491], "releas": [0, 138, 154, 164, 168, 225, 445, 479, 501], "init": [0, 76, 161, 203, 312, 330, 354, 365, 403, 422, 440, 441, 466, 473, 474, 482, 486, 493, 501], "choic": [0, 280, 291, 364, 486, 491], "fname": [0, 3, 4, 6, 18, 25, 77, 174, 201, 218, 249, 282, 285, 314, 328, 349, 365, 395, 411, 413, 437, 486, 493], "c": [0, 1, 2, 3, 4, 5, 6, 9, 13, 14, 18, 19, 20, 24, 26, 27, 31, 35, 45, 46, 48, 54, 55, 57, 65, 69, 77, 78, 79, 80, 81, 82, 89, 91, 92, 94, 95, 96, 98, 103, 109, 111, 112, 115, 124, 150, 152, 154, 159, 161, 164, 170, 174, 196, 199, 200, 202, 203, 204, 207, 210, 213, 214, 217, 218, 219, 223, 226, 228, 235, 237, 238, 242, 244, 249, 251, 253, 256, 258, 260, 275, 280, 281, 285, 286, 287, 288, 289, 291, 292, 298, 300, 304, 305, 308, 312, 313, 315, 316, 318, 321, 326, 327, 328, 330, 347, 349, 350, 354, 359, 365, 370, 372, 373, 380, 385, 388, 394, 395, 400, 407, 439, 442, 447, 449, 450, 459, 463, 464, 465, 473, 481, 486, 488, 489, 490, 491, 492, 493, 496, 497, 498, 499, 501, 503], "scan": [0, 20, 364, 378, 437], "load": [0, 1, 2, 3, 5, 6, 13, 14, 18, 19, 24, 27, 33, 46, 54, 64, 66, 88, 103, 124, 151, 152, 154, 164, 199, 203, 207, 210, 217, 218, 223, 226, 235, 238, 244, 246, 247, 249, 268, 278, 280, 281, 282, 285, 286, 292, 294, 296, 300, 321, 324, 326, 328, 347, 349, 353, 357, 359, 360, 364, 365, 372, 386, 387, 394, 396, 406, 444, 446, 447, 450, 457, 474, 475, 481, 482, 484, 487, 488, 491, 492, 493, 499, 501, 502], "one": [0, 1, 3, 4, 5, 6, 8, 9, 14, 18, 19, 20, 25, 26, 31, 42, 43, 45, 46, 54, 55, 57, 59, 71, 75, 76, 77, 103, 143, 144, 150, 152, 159, 161, 162, 164, 168, 171, 174, 189, 199, 200, 203, 204, 210, 214, 217, 218, 219, 223, 237, 238, 242, 244, 249, 251, 253, 258, 280, 285, 300, 302, 303, 304, 305, 307, 308, 309, 314, 315, 322, 327, 328, 332, 333, 334, 338, 339, 340, 341, 343, 344, 345, 347, 349, 352, 359, 362, 363, 364, 365, 371, 372, 373, 378, 379, 385, 388, 394, 395, 396, 403, 406, 407, 410, 411, 413, 414, 416, 425, 441, 444, 447, 449, 450, 451, 457, 475, 479, 480, 482, 486, 487, 488, 492, 493, 498, 501, 503, 504, 505, 507], "int": [0, 3, 4, 5, 6, 9, 18, 25, 46, 49, 54, 55, 59, 64, 65, 73, 76, 77, 94, 95, 98, 152, 153, 154, 165, 168, 174, 203, 218, 219, 234, 237, 238, 249, 253, 280, 282, 288, 289, 308, 314, 328, 332, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 347, 348, 364, 395, 399, 403, 405, 406, 407, 411, 413, 423, 439, 503], "option": [0, 3, 4, 5, 6, 7, 9, 14, 18, 19, 20, 25, 26, 31, 36, 38, 43, 44, 46, 48, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 80, 81, 94, 95, 98, 103, 112, 135, 136, 137, 138, 150, 152, 153, 154, 161, 162, 165, 166, 169, 174, 199, 200, 203, 210, 213, 215, 217, 218, 219, 223, 226, 234, 235, 237, 238, 239, 242, 244, 249, 251, 253, 258, 264, 280, 282, 285, 286, 287, 289, 291, 292, 302, 305, 307, 308, 312, 314, 315, 319, 321, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 343, 344, 347, 348, 354, 358, 359, 362, 363, 364, 365, 371, 372, 377, 378, 385, 388, 389, 391, 394, 395, 397, 399, 400, 401, 406, 407, 411, 413, 414, 436, 437, 442, 444, 446, 447, 449, 451, 479, 481, 482, 486, 488, 490, 491, 492, 493, 500, 501, 502, 504], "automat": [0, 55, 77, 154, 161, 235, 238, 242, 285, 308, 328, 344, 345, 370, 371, 403, 414, 450, 458, 459, 462, 476, 477, 479, 480, 486, 489, 492, 494, 501, 507], "item": [0, 20, 21, 25, 54, 55, 118, 151, 161, 162, 165, 218, 241, 244, 249, 282, 287, 288, 308, 332, 336, 339, 341, 343, 344, 361, 362, 364, 365, 395, 396, 397, 405, 406, 407, 413, 414, 441, 449, 450, 457, 464, 468, 472, 473, 480, 486, 490, 507], "out": [0, 3, 4, 5, 7, 9, 14, 18, 20, 22, 27, 31, 42, 44, 46, 47, 54, 55, 77, 103, 152, 154, 159, 164, 166, 187, 199, 200, 201, 203, 218, 219, 223, 225, 237, 242, 280, 285, 286, 304, 305, 307, 308, 315, 327, 328, 330, 334, 341, 349, 365, 372, 392, 394, 396, 397, 399, 413, 414, 425, 432, 437, 443, 444, 445, 446, 447, 451, 457, 463, 479, 481, 482, 486, 488, 491, 492, 493, 496, 497, 501, 502, 503, 504], "menu": [0, 501], "would": [0, 1, 2, 3, 5, 9, 18, 30, 44, 55, 60, 65, 76, 77, 103, 150, 154, 161, 164, 168, 218, 238, 242, 244, 280, 282, 285, 305, 308, 314, 328, 330, 331, 333, 336, 339, 341, 343, 344, 345, 359, 362, 371, 373, 388, 395, 396, 401, 403, 407, 413, 414, 437, 444, 447, 449, 450, 457, 466, 475, 478, 481, 482, 486, 488, 489, 491, 492, 493, 501, 504], "produc": [0, 1, 4, 36, 38, 44, 46, 55, 60, 65, 81, 84, 103, 115, 128, 168, 173, 174, 190, 196, 197, 199, 203, 237, 238, 244, 280, 285, 290, 321, 328, 331, 333, 339, 340, 343, 372, 397, 398, 408, 411, 413, 414, 429, 448, 478, 479, 481, 488, 491, 497, 499, 501, 503, 506], "exist": [0, 3, 5, 6, 36, 43, 45, 46, 54, 59, 62, 64, 68, 76, 77, 78, 151, 152, 154, 156, 161, 162, 169, 199, 200, 201, 203, 206, 242, 249, 253, 258, 263, 264, 266, 280, 282, 285, 288, 292, 305, 308, 315, 323, 327, 328, 341, 343, 344, 349, 363, 365, 373, 398, 400, 403, 408, 410, 413, 420, 428, 442, 444, 446, 447, 449, 450, 451, 470, 478, 479, 480, 481, 488, 490, 497, 499, 501, 503, 507], "yaml": [0, 13, 45, 46, 68, 73, 158, 162, 223, 242, 264, 280, 286, 287, 288, 289, 290, 292, 296, 321, 331, 349, 357, 359, 364, 365, 371, 372, 377, 386, 437, 442, 450, 466, 475, 481, 482, 486, 488, 491, 492, 493, 495, 500], "str": [0, 1, 3, 4, 5, 6, 7, 8, 9, 14, 18, 19, 20, 21, 26, 27, 31, 38, 42, 43, 44, 46, 48, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 103, 152, 153, 154, 161, 162, 165, 167, 169, 171, 173, 174, 176, 177, 178, 199, 200, 203, 210, 213, 217, 218, 223, 237, 238, 239, 242, 244, 249, 253, 258, 280, 281, 282, 285, 286, 288, 290, 291, 300, 302, 305, 308, 314, 315, 316, 321, 327, 328, 331, 332, 334, 336, 341, 343, 344, 349, 353, 359, 362, 363, 364, 365, 370, 371, 372, 373, 377, 378, 385, 388, 394, 395, 396, 397, 399, 400, 401, 403, 407, 410, 411, 412, 413, 414, 437, 439, 449, 457, 484], "path": [0, 1, 3, 4, 5, 7, 14, 25, 42, 45, 46, 54, 55, 57, 73, 75, 76, 77, 78, 144, 145, 146, 171, 176, 177, 178, 200, 213, 218, 238, 244, 249, 271, 285, 290, 349, 352, 359, 364, 365, 372, 373, 378, 395, 397, 398, 400, 408, 410, 420, 437, 441, 442, 450, 473, 475, 480, 481, 482, 483, 486, 488, 501, 507], "my_cas": 0, "suppli": [0, 3, 18, 46, 49, 55, 62, 77, 103, 150, 201, 286, 308, 343, 349, 408, 411, 414, 432, 479, 501], "superced": [0, 451], "other": [0, 3, 4, 5, 6, 8, 18, 19, 20, 26, 30, 31, 36, 42, 46, 48, 54, 55, 59, 65, 71, 75, 76, 77, 103, 134, 150, 151, 161, 162, 164, 166, 168, 172, 182, 183, 194, 199, 200, 201, 203, 207, 213, 218, 225, 237, 238, 242, 247, 249, 256, 258, 280, 285, 286, 290, 292, 302, 303, 304, 305, 308, 309, 312, 313, 314, 315, 328, 332, 336, 337, 338, 339, 340, 341, 343, 344, 345, 352, 359, 365, 370, 378, 394, 395, 396, 403, 406, 407, 411, 414, 428, 442, 444, 446, 447, 449, 450, 451, 478, 479, 480, 481, 486, 488, 489, 490, 491, 492, 493, 498, 501, 502, 503, 504, 507], "case": [0, 2, 3, 5, 6, 7, 9, 13, 24, 27, 31, 44, 59, 60, 62, 63, 64, 70, 71, 76, 77, 78, 80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 139, 141, 143, 150, 151, 152, 154, 159, 161, 162, 164, 168, 172, 202, 203, 213, 217, 218, 223, 225, 235, 238, 249, 251, 253, 260, 263, 264, 271, 278, 280, 285, 287, 291, 304, 305, 308, 309, 315, 319, 321, 327, 328, 330, 334, 336, 341, 344, 357, 359, 363, 365, 371, 375, 386, 387, 392, 395, 396, 407, 408, 410, 413, 414, 425, 432, 440, 442, 444, 449, 450, 451, 452, 457, 458, 459, 466, 473, 474, 477, 478, 480, 481, 482, 484, 486, 488, 489, 491, 493, 494, 496, 499, 503, 505, 507], "method": [0, 1, 3, 4, 5, 12, 13, 14, 15, 16, 18, 20, 22, 29, 30, 33, 34, 35, 40, 41, 46, 48, 52, 53, 54, 55, 57, 58, 65, 73, 74, 77, 81, 88, 101, 103, 107, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 144, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 164, 165, 170, 172, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 203, 204, 207, 209, 210, 213, 215, 218, 222, 223, 224, 231, 232, 233, 234, 237, 238, 243, 244, 246, 247, 249, 251, 254, 256, 257, 258, 261, 263, 264, 265, 266, 267, 268, 271, 278, 280, 282, 285, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 307, 308, 312, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 332, 334, 339, 341, 343, 344, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 405, 406, 407, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 444, 445, 446, 447, 449, 451, 467, 478, 479, 480, 482, 484, 486, 488, 501, 503, 504, 507], "directli": [0, 3, 4, 5, 18, 44, 76, 78, 103, 154, 162, 171, 176, 197, 242, 280, 285, 287, 290, 302, 305, 308, 311, 328, 333, 334, 337, 339, 340, 345, 371, 373, 378, 449, 465, 473, 475, 479, 482, 488, 491, 493, 501, 503], "exampl": [0, 1, 3, 5, 8, 9, 18, 25, 45, 48, 54, 55, 59, 75, 77, 78, 103, 144, 150, 151, 152, 153, 154, 159, 161, 162, 163, 164, 166, 171, 172, 173, 174, 176, 177, 178, 199, 200, 203, 215, 218, 219, 237, 238, 244, 249, 280, 282, 285, 286, 287, 289, 290, 291, 292, 305, 308, 309, 314, 315, 327, 328, 329, 330, 332, 334, 338, 339, 340, 343, 344, 345, 352, 358, 362, 370, 371, 378, 391, 395, 397, 403, 406, 407, 408, 411, 412, 414, 432, 433, 437, 441, 442, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481, 486, 488, 489, 490, 491, 492, 493, 494, 496, 497, 499, 503, 504], "o": [0, 3, 20, 27, 30, 77, 107, 109, 136, 145, 150, 152, 164, 213, 244, 249, 256, 285, 291, 308, 315, 344, 359, 373, 378, 400, 410, 447, 448, 450, 459, 466, 473, 475, 482, 486, 489, 493, 497, 501, 502], "getdefaultplugin": [0, 440], "list": [0, 1, 3, 5, 8, 9, 18, 20, 25, 31, 32, 33, 38, 43, 46, 48, 54, 55, 58, 59, 65, 69, 77, 78, 94, 95, 98, 103, 150, 151, 153, 154, 162, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 194, 196, 199, 200, 203, 210, 213, 217, 218, 219, 237, 238, 242, 244, 249, 253, 280, 282, 285, 287, 288, 289, 290, 291, 302, 305, 308, 311, 312, 313, 314, 316, 321, 327, 328, 330, 331, 333, 336, 337, 338, 340, 343, 344, 348, 349, 354, 358, 362, 364, 365, 366, 368, 371, 376, 378, 379, 385, 389, 395, 396, 399, 400, 402, 403, 406, 407, 408, 410, 411, 413, 414, 419, 432, 437, 441, 444, 447, 449, 451, 462, 463, 476, 477, 478, 481, 482, 486, 490, 492, 493, 494, 496, 497, 498, 499, 501, 503, 506], "type": [0, 3, 4, 5, 7, 8, 9, 13, 14, 18, 24, 25, 27, 40, 42, 46, 48, 54, 55, 65, 69, 73, 76, 77, 78, 79, 80, 81, 83, 91, 93, 94, 95, 96, 97, 98, 101, 103, 111, 112, 115, 124, 135, 136, 138, 141, 150, 152, 153, 154, 158, 159, 162, 165, 166, 173, 177, 194, 199, 200, 201, 202, 203, 205, 218, 219, 223, 234, 235, 237, 238, 244, 249, 251, 253, 280, 281, 282, 285, 286, 287, 290, 291, 292, 294, 297, 298, 300, 302, 305, 308, 309, 312, 314, 315, 319, 321, 323, 325, 327, 328, 330, 331, 333, 336, 337, 339, 340, 341, 343, 344, 345, 347, 348, 354, 359, 362, 364, 365, 371, 373, 376, 381, 391, 395, 396, 399, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 437, 439, 442, 443, 444, 446, 447, 449, 450, 458, 465, 475, 479, 480, 481, 482, 484, 486, 488, 490, 492, 493, 496, 497, 498, 503, 505, 507], "armiplugin": [0, 1, 2, 57, 59, 214, 228, 235, 269, 275, 280, 281, 376, 381, 391, 440, 446, 488, 501], "return": [0, 1, 3, 4, 5, 6, 7, 8, 9, 14, 18, 23, 24, 25, 27, 30, 31, 42, 46, 54, 55, 59, 65, 69, 73, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 91, 92, 94, 95, 96, 98, 102, 103, 104, 107, 110, 111, 112, 113, 115, 136, 138, 139, 140, 141, 150, 152, 153, 154, 159, 161, 163, 165, 166, 168, 170, 172, 174, 175, 177, 181, 196, 198, 199, 200, 201, 202, 203, 210, 216, 218, 219, 227, 234, 235, 237, 238, 240, 242, 244, 249, 251, 253, 259, 274, 280, 282, 285, 290, 291, 292, 302, 303, 304, 305, 306, 308, 312, 313, 314, 321, 322, 326, 327, 328, 331, 333, 334, 336, 337, 338, 339, 340, 343, 344, 347, 348, 349, 352, 354, 356, 358, 359, 362, 364, 365, 368, 370, 371, 372, 373, 378, 394, 395, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 413, 414, 420, 423, 437, 438, 439, 446, 447, 449, 450, 465, 473, 475, 482, 486, 488, 491, 492, 501, 505], "contain": [0, 1, 3, 5, 9, 15, 20, 25, 36, 42, 44, 46, 54, 55, 76, 77, 91, 94, 95, 98, 103, 150, 151, 154, 158, 159, 161, 162, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 194, 197, 199, 200, 201, 203, 207, 211, 218, 235, 237, 238, 240, 242, 244, 246, 249, 254, 258, 266, 280, 281, 282, 285, 287, 288, 289, 290, 292, 302, 303, 305, 308, 309, 312, 313, 315, 321, 322, 327, 328, 329, 330, 331, 332, 336, 341, 344, 345, 347, 349, 352, 362, 365, 366, 368, 370, 372, 373, 378, 379, 391, 395, 396, 398, 399, 403, 405, 406, 407, 409, 410, 412, 413, 414, 433, 437, 439, 444, 446, 447, 448, 449, 451, 453, 454, 456, 461, 465, 477, 478, 479, 480, 486, 488, 491, 493, 494, 496, 497, 501, 502, 503, 507], "default": [0, 1, 3, 4, 5, 10, 18, 24, 25, 27, 31, 43, 45, 46, 48, 55, 59, 64, 65, 73, 77, 78, 81, 83, 88, 91, 103, 124, 152, 154, 162, 172, 199, 200, 203, 210, 213, 218, 219, 234, 235, 238, 249, 251, 253, 264, 280, 282, 285, 286, 290, 291, 292, 308, 312, 327, 328, 330, 339, 341, 342, 343, 344, 348, 353, 359, 362, 363, 364, 365, 371, 372, 373, 376, 377, 381, 391, 395, 400, 407, 411, 414, 432, 437, 441, 442, 446, 449, 451, 480, 481, 482, 486, 488, 491, 493, 496, 501, 504, 507], "framework": [0, 1, 75, 77, 78, 151, 152, 154, 159, 202, 203, 211, 218, 235, 238, 242, 280, 330, 345, 364, 366, 368, 378, 381, 401, 443, 445, 446, 453, 456, 457, 466, 479, 480, 482, 486, 488, 489, 491, 501, 503, 507], "an": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 48, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 82, 90, 92, 103, 112, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 138, 142, 143, 144, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 202, 203, 207, 209, 210, 211, 213, 215, 216, 217, 218, 219, 222, 223, 224, 231, 232, 233, 235, 236, 237, 238, 239, 242, 244, 246, 247, 249, 251, 253, 256, 257, 258, 260, 263, 264, 265, 266, 267, 268, 271, 278, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 311, 312, 314, 315, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 343, 344, 345, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 371, 372, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 442, 444, 445, 446, 447, 448, 449, 450, 451, 458, 459, 463, 465, 467, 470, 471, 478, 479, 481, 482, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 501, 503, 504, 505], "applic": [0, 1, 55, 57, 59, 65, 75, 77, 143, 152, 154, 235, 238, 242, 280, 327, 344, 352, 379, 396, 414, 442, 443, 445, 450, 479, 480, 482, 488, 490, 492, 497, 501, 507], "fold": 0, "": [0, 1, 3, 4, 5, 6, 9, 14, 18, 19, 20, 25, 26, 31, 33, 38, 44, 46, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 80, 84, 100, 103, 107, 112, 134, 135, 136, 138, 141, 143, 150, 151, 152, 154, 156, 159, 161, 164, 165, 166, 168, 177, 199, 200, 201, 202, 203, 207, 213, 217, 218, 234, 237, 239, 242, 249, 280, 282, 285, 286, 288, 290, 302, 305, 308, 309, 315, 328, 329, 330, 332, 334, 338, 339, 341, 343, 344, 345, 348, 351, 352, 353, 362, 363, 365, 371, 373, 377, 392, 394, 395, 396, 399, 403, 405, 406, 407, 408, 410, 411, 413, 414, 437, 438, 441, 443, 444, 445, 446, 447, 448, 449, 451, 453, 456, 464, 465, 473, 477, 479, 480, 484, 486, 488, 489, 490, 492, 493, 494, 496, 497, 499, 501, 502, 503, 507], "capabl": [0, 46, 54, 169, 203, 211, 218, 223, 235, 352, 429, 437, 446, 447, 452, 477, 481, 482, 486, 492, 493, 494, 501], "its": [0, 1, 3, 5, 6, 14, 77, 103, 115, 124, 150, 151, 154, 168, 203, 219, 234, 247, 281, 282, 285, 290, 296, 302, 305, 307, 308, 314, 324, 327, 328, 341, 343, 345, 359, 364, 365, 371, 373, 379, 381, 399, 407, 411, 414, 441, 444, 446, 449, 450, 455, 462, 477, 478, 479, 480, 481, 486, 489, 494, 496, 497, 499, 500, 501, 503, 504, 507], "own": [0, 1, 14, 25, 55, 150, 161, 164, 168, 213, 218, 238, 242, 244, 249, 280, 296, 308, 309, 341, 345, 364, 371, 381, 403, 442, 450, 452, 458, 459, 472, 475, 477, 479, 481, 482, 488, 491, 494, 501, 504, 505], "getdefaultpluginmanag": [0, 440], "armipluginmanag": [0, 1, 279, 280, 440], "manag": [0, 1, 3, 6, 26, 43, 46, 48, 150, 151, 203, 207, 211, 214, 217, 218, 219, 223, 235, 237, 238, 242, 244, 263, 279, 280, 308, 312, 321, 328, 330, 344, 370, 373, 378, 381, 385, 400, 444, 445, 462, 466, 477, 478, 479, 480, 482, 487, 488, 491, 494, 497, 500, 503, 507], "when": [0, 2, 4, 5, 9, 12, 13, 14, 15, 16, 18, 20, 22, 25, 29, 30, 31, 33, 34, 35, 38, 40, 41, 43, 44, 46, 49, 52, 53, 54, 55, 57, 58, 64, 65, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 139, 141, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 203, 204, 209, 210, 213, 218, 219, 222, 223, 224, 231, 232, 233, 235, 237, 238, 242, 246, 247, 249, 251, 253, 256, 257, 260, 263, 264, 265, 266, 267, 268, 271, 278, 279, 280, 282, 285, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 308, 312, 314, 315, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 334, 336, 338, 339, 341, 343, 344, 345, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 371, 372, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 403, 406, 407, 408, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 473, 479, 480, 481, 482, 483, 484, 488, 490, 491, 492, 493, 495, 496, 497, 498, 501, 503, 504, 507], "standalon": [0, 22, 200, 479], "facil": 0, "without": [0, 3, 9, 41, 44, 46, 54, 77, 88, 103, 124, 136, 143, 150, 153, 159, 200, 203, 218, 238, 249, 285, 289, 291, 296, 314, 327, 334, 339, 341, 352, 363, 373, 378, 379, 388, 406, 408, 410, 411, 414, 421, 432, 441, 449, 450, 451, 475, 478, 479, 480, 481, 482, 492, 497, 501, 507], "isconfigur": [0, 440, 486, 491], "whether": [0, 3, 5, 9, 25, 38, 46, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 103, 144, 154, 174, 198, 203, 235, 239, 242, 249, 285, 291, 292, 305, 308, 312, 334, 336, 337, 341, 344, 362, 364, 371, 372, 373, 377, 379, 391, 395, 410, 437, 449, 450, 479, 480, 482, 492, 501, 503, 507], "ha": [0, 1, 3, 5, 9, 14, 18, 20, 25, 33, 36, 46, 54, 55, 60, 76, 77, 82, 84, 90, 91, 103, 118, 124, 150, 151, 153, 159, 164, 165, 174, 177, 196, 203, 204, 206, 210, 213, 218, 219, 242, 244, 249, 251, 256, 258, 264, 279, 280, 282, 285, 287, 291, 295, 296, 298, 302, 305, 307, 308, 312, 315, 321, 322, 323, 326, 327, 328, 330, 331, 334, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 352, 353, 354, 357, 358, 359, 364, 365, 371, 373, 376, 378, 395, 400, 403, 406, 407, 410, 412, 431, 433, 437, 444, 447, 449, 451, 467, 475, 478, 479, 480, 481, 482, 485, 486, 488, 489, 491, 492, 493, 496, 497, 499, 501, 503, 507], "been": [0, 3, 4, 5, 6, 18, 43, 44, 46, 54, 77, 164, 166, 196, 199, 204, 206, 213, 217, 218, 249, 264, 279, 280, 282, 285, 287, 298, 305, 308, 312, 328, 330, 338, 341, 342, 343, 344, 345, 348, 349, 353, 354, 358, 376, 378, 400, 402, 403, 406, 407, 412, 444, 449, 450, 475, 478, 479, 481, 488, 491, 493, 497, 501, 504], "app": [0, 54, 59, 78, 211, 259, 280, 373, 381, 440, 442, 444, 445, 481, 486, 487, 491, 493, 501, 504], "getpluginmanag": [0, 440], "getpluginmanagerorfail": [0, 280, 440], "rais": [0, 3, 6, 12, 13, 14, 15, 16, 18, 19, 29, 30, 31, 33, 34, 35, 40, 41, 46, 52, 53, 54, 55, 57, 58, 73, 74, 76, 77, 78, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 148, 149, 150, 154, 156, 157, 158, 159, 160, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 202, 203, 209, 210, 222, 223, 224, 231, 232, 233, 235, 237, 238, 246, 247, 249, 251, 253, 256, 257, 263, 264, 265, 266, 267, 268, 271, 278, 280, 282, 285, 286, 292, 294, 295, 296, 297, 298, 299, 300, 301, 313, 321, 322, 323, 324, 325, 326, 330, 337, 342, 343, 344, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 371, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 398, 400, 405, 410, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 451, 484], "error": [0, 1, 3, 5, 6, 57, 59, 60, 77, 103, 124, 150, 159, 161, 166, 197, 199, 203, 204, 213, 238, 249, 280, 292, 296, 298, 300, 308, 309, 330, 331, 337, 340, 341, 342, 345, 363, 364, 371, 372, 373, 376, 381, 395, 398, 400, 406, 407, 412, 423, 437, 440, 444, 449, 450, 451, 479, 480, 482, 484, 488, 491, 492, 497, 499, 501, 503, 507], "getapp": [0, 440], "permiss": [0, 2, 3, 5, 7, 410, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 479, 484, 492], "fals": [0, 3, 5, 6, 14, 18, 24, 27, 46, 54, 60, 65, 77, 103, 124, 150, 152, 154, 165, 166, 168, 170, 172, 174, 175, 199, 200, 203, 210, 213, 218, 237, 238, 242, 253, 254, 256, 258, 282, 285, 286, 290, 292, 294, 298, 300, 302, 303, 304, 305, 307, 308, 312, 313, 315, 316, 321, 327, 328, 331, 333, 334, 336, 337, 338, 339, 340, 353, 354, 362, 363, 365, 371, 373, 379, 380, 391, 395, 397, 399, 407, 409, 410, 411, 413, 414, 437, 442, 444, 482, 486, 490, 491, 493, 501], "intern": [0, 3, 4, 6, 44, 55, 91, 138, 162, 174, 199, 219, 238, 305, 328, 331, 336, 339, 343, 358, 389, 432, 444, 446, 450, 478, 483, 485, 488, 501], "those": [0, 5, 41, 44, 55, 77, 154, 166, 218, 280, 282, 285, 291, 305, 308, 309, 327, 328, 330, 331, 341, 344, 352, 395, 406, 411, 414, 444, 446, 449, 450, 480, 486, 488, 492, 493, 501, 507], "instanc": [0, 3, 4, 5, 8, 9, 12, 13, 14, 15, 16, 20, 29, 30, 33, 34, 35, 40, 41, 43, 52, 53, 55, 57, 58, 73, 74, 76, 77, 82, 89, 103, 111, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 138, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 165, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 201, 209, 210, 218, 222, 223, 224, 231, 232, 233, 238, 246, 247, 251, 253, 256, 257, 263, 264, 265, 266, 267, 268, 271, 278, 280, 282, 286, 287, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 308, 314, 315, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 336, 339, 341, 343, 344, 345, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 371, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 403, 406, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 443, 444, 446, 447, 450, 451, 475, 479, 481, 486, 489, 490, 496, 501, 503], "which": [0, 1, 3, 4, 5, 8, 9, 18, 25, 41, 42, 44, 46, 54, 55, 64, 65, 75, 76, 77, 78, 79, 80, 81, 82, 86, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 109, 110, 111, 112, 114, 115, 130, 131, 132, 135, 136, 138, 139, 140, 141, 150, 151, 154, 158, 162, 164, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 196, 199, 200, 201, 202, 203, 204, 205, 216, 218, 219, 223, 225, 237, 238, 240, 242, 244, 249, 251, 253, 259, 260, 280, 282, 285, 287, 290, 291, 292, 302, 303, 304, 305, 308, 312, 313, 315, 321, 327, 328, 330, 331, 336, 337, 338, 341, 344, 345, 347, 349, 358, 359, 364, 365, 372, 373, 378, 379, 395, 397, 400, 403, 405, 406, 407, 413, 414, 437, 444, 446, 447, 448, 449, 450, 451, 458, 459, 475, 479, 480, 481, 486, 488, 489, 491, 492, 493, 496, 497, 501, 503, 504, 507], "provid": [0, 1, 3, 5, 6, 18, 20, 27, 32, 38, 42, 46, 48, 55, 59, 65, 69, 73, 76, 77, 78, 85, 92, 103, 112, 134, 150, 151, 152, 154, 161, 164, 170, 172, 175, 194, 200, 203, 206, 211, 218, 237, 238, 243, 244, 249, 253, 254, 261, 271, 280, 282, 285, 290, 291, 292, 305, 308, 312, 313, 314, 321, 327, 328, 329, 330, 331, 339, 341, 344, 348, 352, 353, 363, 365, 371, 373, 376, 378, 391, 394, 397, 400, 403, 406, 411, 414, 437, 439, 441, 442, 446, 449, 450, 451, 455, 462, 466, 468, 472, 475, 477, 479, 480, 482, 484, 488, 489, 492, 493, 494, 496, 497, 498, 499, 501, 503, 506, 507], "onli": [0, 2, 3, 5, 6, 7, 8, 9, 14, 15, 18, 22, 31, 36, 43, 44, 55, 75, 77, 103, 134, 144, 150, 151, 154, 161, 162, 165, 174, 183, 199, 200, 201, 203, 206, 210, 213, 215, 216, 218, 219, 235, 237, 244, 249, 251, 253, 258, 264, 280, 282, 285, 286, 290, 292, 298, 302, 303, 304, 305, 308, 313, 315, 319, 321, 326, 327, 328, 330, 332, 334, 336, 337, 338, 341, 343, 344, 347, 349, 352, 353, 358, 359, 363, 365, 368, 371, 372, 377, 378, 379, 388, 389, 395, 398, 402, 403, 406, 407, 408, 413, 414, 419, 432, 437, 443, 446, 447, 449, 450, 451, 458, 459, 479, 482, 486, 488, 491, 492, 493, 496, 497, 499, 501, 502, 503, 504], "true": [0, 3, 5, 14, 20, 24, 25, 27, 45, 46, 54, 59, 65, 77, 103, 124, 150, 151, 152, 154, 165, 166, 168, 170, 172, 175, 193, 197, 199, 200, 203, 218, 235, 237, 238, 242, 244, 249, 251, 253, 258, 263, 280, 282, 285, 286, 291, 292, 294, 298, 300, 302, 303, 305, 307, 308, 312, 313, 314, 315, 321, 327, 328, 330, 331, 334, 338, 343, 344, 352, 353, 354, 364, 365, 371, 372, 373, 395, 400, 406, 407, 409, 410, 411, 414, 432, 437, 441, 451, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 479, 484, 486, 490, 492, 493, 501, 502, 504], "under": [0, 3, 5, 75, 107, 213, 218, 235, 280, 288, 302, 305, 308, 351, 362, 388, 443, 444, 450, 451, 479, 480, 488, 492, 501, 503, 504, 507], "test": [0, 2, 3, 21, 36, 45, 46, 47, 54, 59, 60, 75, 76, 78, 143, 151, 163, 164, 200, 202, 211, 214, 225, 235, 241, 248, 252, 272, 279, 281, 286, 292, 308, 309, 330, 332, 336, 337, 341, 364, 365, 371, 395, 408, 438, 440, 441, 444, 445, 452, 457, 458, 459, 463, 465, 466, 470, 471, 474, 477, 478, 479, 480, 481, 482, 483, 484, 488, 491, 493, 494, 501, 507], "demonstr": [0, 263, 352, 353, 359, 382, 429, 449, 452, 465, 466, 477, 478, 481, 487, 493, 494], "purpos": [0, 3, 5, 78, 151, 165, 200, 202, 213, 235, 237, 264, 285, 308, 328, 331, 336, 368, 449, 450, 451, 466, 478, 481, 501], "where": [0, 2, 3, 5, 9, 18, 19, 25, 27, 31, 42, 53, 55, 57, 77, 78, 103, 107, 151, 152, 153, 154, 161, 165, 166, 174, 201, 203, 210, 211, 213, 218, 219, 223, 237, 238, 242, 253, 264, 280, 282, 285, 300, 302, 305, 308, 312, 313, 315, 321, 322, 327, 328, 330, 331, 332, 333, 334, 336, 338, 339, 341, 343, 344, 345, 358, 375, 385, 388, 394, 395, 407, 410, 414, 437, 446, 449, 450, 451, 479, 481, 482, 484, 488, 493, 496, 497, 499, 501, 503, 504, 505], "content": [0, 2, 3, 5, 9, 22, 24, 25, 165, 174, 197, 235, 244, 260, 280, 290, 336, 378, 379, 396, 400, 437, 449, 451, 472, 486, 501], "otherwis": [0, 1, 3, 5, 6, 46, 77, 150, 154, 161, 162, 165, 218, 249, 280, 282, 285, 289, 305, 327, 328, 330, 334, 336, 337, 339, 341, 343, 378, 396, 407, 408, 410, 414, 437, 447, 479, 489, 499, 501, 504], "independ": [0, 3, 5, 46, 48, 54, 55, 166, 168, 207, 235, 236, 242, 314, 327, 447, 451, 479, 488, 492, 501, 505], "script": [0, 2, 21, 23, 76, 235, 239, 447, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 479, 480, 481, 488, 491, 492, 493, 501, 503, 507], "need": [0, 3, 5, 7, 9, 18, 26, 30, 43, 46, 48, 54, 55, 57, 64, 73, 80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 139, 141, 143, 144, 150, 151, 154, 164, 168, 174, 196, 200, 203, 204, 205, 213, 218, 237, 238, 242, 249, 253, 258, 280, 282, 285, 286, 287, 290, 291, 292, 305, 308, 309, 312, 313, 315, 327, 328, 329, 330, 331, 334, 337, 339, 341, 344, 345, 352, 359, 363, 365, 371, 373, 378, 388, 396, 403, 407, 408, 411, 412, 414, 419, 432, 437, 441, 442, 443, 444, 446, 447, 449, 450, 451, 457, 466, 479, 480, 481, 486, 488, 489, 490, 491, 492, 493, 496, 501, 502, 503, 507], "same": [0, 3, 4, 5, 6, 18, 46, 48, 54, 65, 76, 79, 87, 101, 102, 103, 109, 114, 138, 150, 151, 154, 159, 165, 174, 177, 180, 181, 187, 199, 203, 204, 237, 238, 242, 280, 282, 285, 308, 312, 314, 315, 327, 328, 330, 331, 337, 340, 341, 342, 343, 344, 352, 354, 363, 387, 389, 397, 407, 408, 410, 411, 412, 414, 432, 437, 441, 444, 447, 449, 450, 451, 463, 479, 480, 482, 486, 488, 490, 492, 493, 497, 501, 507], "sinc": [0, 1, 3, 6, 7, 18, 44, 46, 55, 77, 80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 118, 139, 141, 150, 154, 161, 164, 165, 166, 168, 170, 172, 175, 182, 201, 203, 204, 207, 237, 238, 249, 253, 258, 263, 280, 282, 285, 290, 302, 305, 308, 314, 328, 330, 333, 339, 341, 343, 344, 345, 352, 359, 381, 395, 397, 401, 403, 437, 449, 475, 479, 481, 486, 488, 490, 492, 493, 496, 499, 501], "affect": [0, 5, 75, 103, 225, 285, 308, 330, 394, 395, 411, 450, 451, 482, 492, 501], "behavior": [0, 1, 3, 5, 33, 77, 118, 144, 178, 204, 219, 225, 235, 238, 246, 280, 289, 290, 302, 308, 327, 330, 341, 344, 364, 371, 398, 403, 412, 446, 481, 482], "time": [0, 1, 2, 3, 4, 5, 6, 13, 14, 18, 25, 31, 43, 44, 46, 49, 76, 77, 103, 143, 150, 151, 154, 159, 162, 166, 174, 202, 203, 207, 210, 211, 218, 235, 237, 238, 242, 249, 251, 253, 258, 260, 279, 280, 282, 291, 305, 308, 314, 321, 327, 328, 338, 344, 363, 378, 379, 392, 394, 395, 397, 406, 407, 408, 410, 411, 413, 417, 444, 445, 447, 449, 451, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 486, 488, 492, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507], "gener": [0, 2, 3, 4, 5, 18, 21, 22, 24, 26, 27, 33, 38, 42, 44, 45, 55, 60, 65, 69, 76, 77, 88, 143, 144, 145, 150, 151, 152, 154, 158, 159, 161, 164, 173, 175, 196, 199, 202, 203, 211, 213, 218, 219, 220, 225, 228, 229, 231, 232, 235, 237, 238, 242, 244, 249, 251, 253, 254, 260, 261, 263, 267, 269, 271, 275, 276, 280, 282, 285, 286, 291, 292, 302, 305, 308, 309, 312, 314, 315, 316, 318, 327, 328, 329, 330, 336, 337, 339, 341, 345, 364, 368, 369, 372, 373, 378, 388, 395, 396, 397, 400, 405, 406, 411, 413, 421, 437, 438, 441, 443, 444, 445, 447, 449, 451, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 479, 481, 482, 488, 489, 491, 492, 493, 494, 495, 497, 499, 501, 503, 504], "safe": [0, 46, 279, 280, 305, 331, 339, 343, 363, 371, 381, 499], "re": [0, 3, 5, 8, 19, 64, 83, 103, 112, 144, 152, 154, 161, 165, 218, 282, 302, 308, 309, 315, 327, 338, 352, 362, 385, 406, 408, 414, 437, 444, 450, 466, 475, 480, 481, 488, 491, 492, 493, 496, 497, 501, 507], "therefor": [0, 3, 5, 150, 168, 203, 237, 242, 280, 296, 308, 321, 328, 330, 334, 344, 408, 411, 413, 431, 444, 450, 501, 503], "runtimeerror": [0, 3, 6, 19, 31, 46, 55, 57, 77, 159, 203, 210, 249, 280, 285, 313, 321, 352, 373, 385, 388, 394], "attempt": [0, 3, 4, 5, 46, 48, 54, 57, 64, 237, 249, 280, 287, 290, 292, 327, 330, 342, 343, 345, 365, 372, 395, 396, 406, 408, 412, 437, 479, 481, 483, 501, 504], "unless": [0, 19, 43, 152, 154, 161, 328, 336, 406, 414, 446, 447, 449, 450, 451, 479, 480, 492, 501, 507], "we": [0, 1, 2, 3, 4, 5, 6, 9, 13, 15, 18, 25, 30, 44, 54, 57, 73, 76, 79, 80, 82, 87, 88, 89, 91, 92, 94, 95, 96, 98, 101, 103, 104, 109, 110, 111, 114, 115, 128, 138, 139, 141, 153, 154, 158, 159, 161, 164, 165, 168, 174, 186, 187, 191, 192, 193, 196, 200, 203, 204, 210, 211, 218, 219, 226, 235, 237, 247, 249, 253, 256, 259, 260, 263, 264, 280, 282, 285, 286, 289, 290, 291, 292, 296, 300, 302, 305, 308, 309, 313, 326, 327, 328, 331, 336, 338, 339, 341, 343, 344, 345, 347, 352, 353, 357, 358, 359, 362, 363, 371, 376, 379, 386, 387, 388, 389, 390, 392, 394, 396, 403, 407, 408, 410, 414, 416, 422, 432, 437, 441, 443, 444, 446, 447, 448, 449, 450, 451, 457, 468, 471, 478, 479, 480, 484, 485, 486, 488, 489, 490, 491, 492, 493, 496, 501, 503, 504, 505, 507], "ar": [0, 1, 3, 4, 5, 6, 8, 9, 14, 18, 19, 20, 25, 31, 32, 36, 38, 41, 42, 43, 44, 45, 46, 49, 54, 55, 57, 59, 65, 76, 77, 78, 79, 80, 81, 82, 86, 88, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 124, 128, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 143, 144, 150, 151, 152, 153, 154, 158, 161, 162, 164, 166, 167, 168, 172, 173, 174, 181, 183, 187, 189, 193, 196, 199, 200, 201, 202, 203, 204, 207, 210, 211, 212, 213, 215, 218, 219, 222, 223, 225, 226, 237, 238, 240, 242, 244, 246, 247, 249, 251, 253, 258, 260, 263, 268, 275, 278, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 295, 296, 298, 300, 302, 303, 305, 307, 308, 309, 312, 313, 314, 315, 316, 319, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 359, 362, 364, 365, 368, 370, 371, 372, 373, 376, 377, 378, 385, 386, 388, 389, 391, 394, 395, 396, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 421, 423, 425, 429, 437, 439, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 463, 465, 470, 472, 475, 477, 478, 479, 480, 481, 482, 485, 486, 489, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507], "plan": [0, 166, 446, 480, 492, 501, 507], "encapsul": [0, 1, 199], "much": [0, 1, 3, 5, 18, 50, 92, 135, 151, 197, 203, 238, 280, 285, 286, 287, 328, 330, 334, 336, 353, 359, 396, 403, 437, 444, 446, 447, 451, 478, 479, 486, 488, 492, 501], "global": [0, 1, 76, 78, 152, 154, 168, 172, 174, 203, 213, 242, 244, 246, 248, 249, 251, 264, 280, 282, 285, 305, 308, 327, 328, 332, 338, 339, 341, 344, 363, 365, 368, 398, 414, 432, 445, 466, 479, 481, 482, 490, 493, 499, 501, 502], "get": [0, 2, 3, 4, 5, 6, 13, 20, 21, 25, 27, 32, 44, 46, 54, 55, 59, 76, 77, 78, 81, 88, 92, 101, 103, 134, 143, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 163, 164, 166, 172, 182, 199, 200, 201, 203, 213, 218, 219, 237, 244, 249, 266, 280, 282, 285, 287, 290, 291, 295, 302, 305, 308, 315, 321, 325, 327, 328, 336, 337, 338, 339, 341, 342, 343, 344, 348, 351, 352, 353, 354, 359, 362, 363, 371, 376, 379, 386, 387, 395, 396, 399, 401, 407, 408, 413, 416, 419, 420, 437, 438, 442, 443, 445, 446, 447, 448, 449, 451, 481, 486, 488, 489, 491, 492, 500, 501, 502, 503], "itself": [0, 3, 5, 44, 48, 64, 150, 151, 199, 282, 285, 302, 328, 339, 341, 345, 352, 364, 395, 396, 437, 441, 442, 444, 446, 449, 473, 479, 481, 486, 488, 491, 492, 501, 504], "thing": [0, 1, 3, 5, 6, 18, 22, 24, 27, 54, 59, 103, 150, 153, 162, 197, 214, 242, 249, 280, 285, 290, 291, 300, 302, 308, 327, 328, 329, 330, 331, 332, 336, 338, 339, 341, 343, 354, 363, 364, 365, 373, 379, 396, 407, 410, 442, 444, 446, 447, 449, 450, 451, 452, 477, 478, 479, 481, 486, 488, 491, 492, 493, 494, 501, 503], "go": [0, 9, 18, 103, 154, 215, 218, 268, 280, 282, 285, 286, 305, 315, 328, 330, 343, 407, 411, 441, 446, 447, 451, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 479, 480, 488, 501, 502, 507], "number": [0, 3, 4, 5, 9, 18, 25, 30, 43, 46, 49, 54, 73, 77, 81, 88, 103, 119, 136, 150, 151, 152, 153, 154, 165, 166, 168, 171, 174, 181, 196, 199, 200, 203, 210, 218, 219, 223, 234, 237, 238, 242, 244, 249, 253, 258, 263, 282, 285, 288, 289, 298, 300, 304, 305, 308, 313, 314, 315, 316, 321, 323, 326, 327, 328, 330, 334, 337, 339, 341, 343, 347, 348, 352, 353, 354, 359, 363, 365, 371, 379, 385, 387, 395, 396, 399, 403, 405, 406, 407, 411, 412, 413, 419, 423, 430, 432, 437, 444, 447, 451, 464, 472, 481, 482, 483, 487, 488, 489, 490, 492, 493, 496, 497, 498, 499, 501, 502, 503, 506], "benefit": [0, 3, 44, 55, 130, 131, 132, 337, 338, 341, 441, 444, 473, 479], "main": [0, 3, 5, 6, 19, 41, 44, 59, 73, 79, 150, 151, 166, 200, 203, 204, 213, 235, 279, 280, 285, 288, 289, 308, 343, 349, 388, 414, 443, 444, 451, 466, 473, 474, 480, 482, 486, 488, 501, 503, 507], "being": [0, 3, 4, 5, 18, 20, 36, 46, 48, 65, 77, 78, 103, 144, 150, 151, 154, 162, 165, 171, 176, 177, 178, 182, 203, 218, 219, 223, 225, 235, 238, 242, 253, 280, 282, 285, 290, 297, 305, 308, 314, 315, 321, 326, 327, 330, 332, 336, 345, 358, 373, 385, 395, 402, 407, 410, 412, 413, 437, 438, 451, 475, 479, 482, 488, 496, 501, 503, 504], "becom": [0, 18, 42, 162, 280, 285, 304, 305, 314, 328, 338, 340, 341, 376, 411, 414, 442, 443, 444, 479, 501], "trivial": [0, 48, 305, 308, 331, 344, 391, 403, 408, 447, 451], "current": [0, 2, 3, 5, 6, 18, 25, 31, 46, 48, 54, 62, 76, 77, 103, 150, 161, 163, 164, 166, 169, 170, 172, 174, 175, 189, 199, 200, 203, 211, 213, 218, 219, 237, 238, 242, 249, 253, 260, 280, 285, 286, 290, 305, 308, 313, 315, 328, 330, 332, 339, 344, 347, 349, 352, 365, 371, 372, 373, 395, 396, 398, 407, 414, 437, 446, 447, 449, 450, 451, 458, 481, 484, 486, 496, 497, 498, 501, 504, 506], "applyasynciowindowsworkaround": [0, 440], "appli": [0, 1, 3, 6, 55, 77, 78, 81, 88, 103, 104, 134, 143, 144, 154, 199, 213, 219, 237, 238, 248, 249, 264, 268, 278, 280, 282, 285, 286, 287, 289, 290, 291, 292, 298, 305, 308, 312, 313, 327, 328, 330, 336, 339, 341, 343, 345, 364, 395, 406, 414, 441, 443, 447, 451, 465, 466, 473, 474, 481, 482, 486, 488, 492, 493, 496, 497, 498, 501, 503], "asyncio": 0, "workaround": 0, "window": [0, 1, 20, 27, 30, 76, 410, 441, 479, 480, 484, 501, 507], "3": [0, 3, 5, 9, 18, 20, 25, 33, 45, 55, 68, 69, 77, 79, 80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 107, 110, 111, 112, 115, 128, 134, 135, 136, 138, 139, 141, 145, 150, 151, 152, 154, 162, 166, 170, 172, 175, 176, 178, 186, 191, 199, 210, 218, 219, 234, 235, 242, 246, 282, 285, 289, 290, 298, 302, 305, 307, 308, 309, 315, 323, 326, 328, 330, 331, 334, 337, 338, 339, 352, 353, 362, 373, 395, 396, 405, 406, 407, 414, 416, 433, 436, 441, 444, 447, 451, 457, 459, 465, 467, 469, 475, 479, 480, 484, 485, 486, 489, 490, 491, 492, 496, 497, 498, 499, 501, 503, 505, 507], "8": [0, 9, 77, 80, 111, 136, 141, 152, 219, 238, 244, 290, 314, 315, 330, 331, 334, 338, 339, 354, 360, 399, 403, 406, 411, 414, 449, 457, 464, 465, 466, 467, 468, 486, 490, 491, 492, 493, 501], "prevent": [0, 2, 32, 249, 280, 327, 341, 343, 358, 379, 390, 412, 480, 507], "notimplementederror": [0, 23, 488], "hi": [0, 496, 497], "show": [0, 18, 20, 26, 27, 33, 44, 158, 166, 172, 187, 189, 190, 201, 264, 300, 327, 338, 352, 353, 379, 390, 394, 395, 397, 407, 411, 413, 414, 447, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 475, 478, 490, 493, 501, 503], "dure": [0, 1, 3, 5, 13, 14, 18, 20, 31, 75, 77, 78, 88, 103, 150, 154, 161, 162, 164, 168, 201, 203, 213, 225, 235, 237, 249, 253, 280, 281, 285, 289, 305, 308, 311, 312, 313, 319, 321, 325, 327, 328, 343, 352, 353, 358, 363, 373, 390, 423, 441, 442, 444, 451, 478, 479, 480, 482, 484, 486, 488, 497, 501, 503, 507], "jupyt": [0, 32, 33, 390, 445, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 486], "notebook": [0, 32, 33, 390, 445, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "document": [0, 22, 25, 26, 32, 33, 93, 94, 95, 96, 97, 98, 103, 164, 166, 173, 199, 282, 286, 292, 330, 337, 341, 437, 443, 444, 445, 446, 449, 450, 478, 479, 481, 482, 486, 488, 491, 492, 493, 496, 497, 498, 499, 501, 503, 504, 506], "see": [0, 1, 3, 5, 7, 18, 25, 65, 103, 115, 141, 154, 161, 164, 170, 175, 177, 199, 203, 204, 238, 280, 281, 282, 285, 286, 292, 305, 308, 313, 315, 319, 321, 327, 328, 330, 332, 334, 337, 340, 341, 344, 358, 373, 395, 396, 403, 408, 411, 413, 438, 441, 443, 446, 447, 450, 471, 479, 480, 482, 486, 488, 489, 491, 492, 493, 496, 497, 498, 499, 501, 503, 504, 506, 507], "http": [0, 20, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 107, 112, 129, 130, 131, 132, 134, 136, 138, 151, 161, 164, 166, 172, 174, 183, 303, 304, 344, 411, 414, 432, 437, 438, 441, 479, 480, 482, 484, 492, 507], "bug": [0, 143, 172, 280, 338, 443, 446, 450, 451, 479], "org": [0, 20, 83, 84, 85, 87, 98, 100, 129, 130, 131, 132, 134, 138, 164, 411, 438, 441, 479, 492], "issue37373": 0, "bookkeep": [0, 77, 137, 285, 328, 344, 413, 440, 449, 482, 484, 486, 501, 503], "bookkeepingplugin": [0, 2, 440], "exposeinterfac": [0, 2, 56, 57, 211, 214, 225, 228, 235, 272, 275, 280, 378, 391, 394, 488], "defineentrypoint": [0, 2, 59, 211, 235, 280, 488], "definecasedepend": [0, 2, 280, 488], "mpiactionrequiresreset": [0, 2, 280, 481], "getreportcont": [0, 2, 211, 235, 280, 445], "db": [0, 2, 18, 19, 33, 73, 144, 152, 153, 203, 210, 328, 344, 359, 394, 413, 450, 481, 484, 486, 491, 493, 501, 503], "databas": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 19, 38, 44, 45, 46, 59, 63, 69, 73, 77, 143, 144, 154, 203, 207, 235, 253, 280, 281, 282, 305, 308, 331, 336, 338, 341, 343, 344, 358, 367, 395, 411, 444, 450, 466, 473, 474, 478, 479, 481, 482, 484, 487, 488, 491, 493, 500, 501], "revis": [0, 2, 138, 441], "changelog": [0, 2], "database3": [0, 2, 3, 6, 9, 13, 344, 358, 481, 482, 486, 503], "databaseinterfac": [0, 2, 3, 5, 14, 413, 482, 484, 501], "comparedatabas": [0, 2, 3, 4, 12], "databasefactori": [0, 2, 3, 7, 486, 503], "loadoper": [0, 2, 3, 203, 482], "report": [0, 2, 4, 20, 33, 40, 60, 69, 77, 100, 115, 166, 211, 217, 235, 280, 285, 305, 369, 371, 392, 395, 397, 411, 413, 444, 445, 466, 473, 479, 482, 486, 491, 493, 500, 502], "setdata": [0, 2, 21], "visual": [0, 2, 5, 237, 304, 411, 448, 478, 479, 481, 488, 497], "historytrack": [0, 2, 413, 486], "histori": [0, 2, 3, 5, 6, 33, 77, 210, 218, 249, 253, 280, 328, 330, 343, 407, 413, 436, 444, 450, 466, 473, 474, 481, 486], "inform": [0, 2, 3, 5, 6, 9, 20, 22, 26, 27, 30, 44, 46, 54, 55, 76, 77, 82, 89, 103, 111, 136, 138, 150, 151, 152, 154, 161, 165, 166, 168, 170, 171, 172, 175, 178, 181, 194, 200, 201, 203, 204, 213, 218, 237, 249, 256, 275, 280, 282, 285, 287, 288, 290, 308, 312, 314, 327, 328, 330, 338, 339, 341, 343, 352, 363, 372, 373, 399, 411, 413, 419, 437, 438, 443, 444, 447, 449, 450, 466, 473, 474, 479, 484, 486, 492, 493, 497, 501, 502, 503], "describeinterfac": [0, 2, 3, 6, 18, 19, 20, 21, 26, 31, 77, 211, 235, 237, 241, 242, 280], "historytrackerinterfac": [0, 2, 18, 413], "maininterfac": [0, 2], "memoryprofil": [0, 2, 34, 466, 473, 474, 486], "klasscount": [0, 2, 20], "instancecount": [0, 2, 20], "profilememoryusageact": [0, 2, 20], "systemandprocessmemoryusag": [0, 2, 20], "printsystemmemoryusageact": [0, 2, 20], "snapshotinterfac": [0, 2, 482], "extractcyclenodefromstamp": [0, 2, 31], "getcyclenodestamp": [0, 2, 31], "inputmodifi": [0, 45, 55, 58, 309, 319, 491], "copyinterfaceinput": [0, 45, 46, 57, 482], "suit": [0, 2, 45, 46, 52, 55, 57, 58, 59, 62, 63, 71, 74, 280, 309, 326, 332, 442, 444, 474, 481, 482, 488, 491], "casesuit": [0, 45, 46, 54, 55, 57, 63, 77, 280, 491], "suitebuild": [0, 45, 46, 58, 481, 491], "getinputmodifi": [0, 45, 55], "fullfactorialsuitebuild": [0, 45, 55, 58, 491], "fullfactorialsuitebuildernoisi": [0, 45, 55], "separateeffectssuitebuild": [0, 45, 55, 491], "latinhypercubesuitebuild": [0, 45, 55, 58], "cli": [0, 45, 76, 280, 440, 442, 444, 451, 478, 482, 484, 488, 502], "entrypointsplugin": [0, 59, 440], "armipars": [0, 59, 440], "print_help": [0, 59], "armicli": [0, 59, 74, 440, 488], "showvers": [0, 59, 74], "listcommand": [0, 59], "executecommand": [0, 59, 73], "splash": [0, 1, 59, 60, 65, 440, 480, 488, 507], "checkinput": [0, 45, 46, 57, 59], "expandblueprint": [0, 59, 60], "checkinputentrypoint": [0, 59, 60], "cleantemp": [0, 59], "clone": [0, 45, 46, 54, 57, 59, 73, 77, 280, 365, 406, 441, 479, 480, 481, 482, 507], "clonearmiruncommandbatch": [0, 59, 62], "clonearmiruncommandinteract": [0, 59, 62], "clonesuitecommand": [0, 59, 62], "comparecas": [0, 59, 484], "comparesuit": [0, 59, 63], "extractinput": [0, 59, 64], "injectinput": [0, 59, 64], "entrypoint": [0, 2, 36, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 239, 280, 377, 442, 482], "storebool": [0, 59, 65], "setset": [0, 59, 65], "setcasetitl": [0, 59, 65], "loadset": [0, 59, 65], "gridgui": [0, 59], "gridguientrypoint": [0, 59, 66], "migrateinput": [0, 59], "modifi": [0, 3, 46, 48, 49, 52, 53, 55, 59, 62, 64, 103, 151, 154, 158, 172, 186, 191, 192, 193, 196, 237, 242, 244, 251, 253, 279, 282, 285, 305, 309, 311, 312, 315, 318, 319, 323, 326, 327, 328, 336, 343, 344, 349, 353, 354, 359, 364, 365, 371, 376, 399, 406, 412, 451, 463, 479, 480, 482, 484, 487, 492, 501, 507], "modifycasesettingscommand": [0, 59, 68], "reportsentrypoint": [0, 59, 484], "createreportfromset": [0, 59, 69], "runentrypoint": [0, 59, 70, 71, 444], "runsuit": [0, 59, 74], "runsuitecommand": [0, 59, 71], "materi": [0, 9, 153, 154, 161, 212, 225, 234, 238, 249, 280, 281, 282, 285, 286, 287, 288, 289, 291, 292, 294, 297, 298, 300, 301, 302, 303, 304, 305, 307, 308, 313, 315, 316, 321, 327, 330, 351, 352, 353, 354, 378, 383, 399, 411, 419, 440, 443, 444, 446, 456, 458, 460, 462, 463, 465, 466, 473, 474, 476, 477, 478, 479, 481, 482, 484, 486, 487, 492, 493, 494, 496, 497, 498, 501, 502, 503, 506], "setmaterialnamespaceord": [0, 78, 440, 488], "importmaterialsintomodulenamespac": [0, 78, 440], "iterallmaterialclassesinnamespac": [0, 78, 440, 472], "resolvematerialclassbynam": [0, 78, 124, 440], "air": [0, 78, 119], "alloy200": [0, 78, 124, 482], "b4c": [0, 78, 120, 300, 482, 486, 491, 492, 497, 501], "be9": [0, 78, 121], "cah2": [0, 78, 124], "californium": [0, 78, 124, 152, 472], "concret": [0, 3, 6, 14, 18, 19, 20, 26, 31, 57, 77, 78, 144, 154, 159, 165, 210, 217, 223, 237, 242, 249, 258, 290, 308, 327, 385, 388, 394, 482, 484], "copper": [0, 78, 152, 482], "cu": [0, 78, 80, 86, 124, 152, 501], "graphit": [0, 78, 122, 159, 161], "hafnium": [0, 78, 124, 152], "hastelloyn": [0, 78, 124], "ht9": [0, 78, 103, 159, 298, 321, 353, 354, 465, 473, 481, 486, 492, 501, 502], "inconel": [0, 78, 94, 95, 97, 98, 482], "inconel617": [0, 78, 93], "inconel600": [0, 78, 124], "inconel625": [0, 78, 124], "inconel800": [0, 78], "inconelpe16": [0, 78], "inconelx750": [0, 78, 124], "lead": [0, 3, 4, 5, 77, 78, 100, 124, 152, 164, 165, 199, 218, 246, 280, 285, 308, 330, 341, 381, 392, 397, 403, 414, 422, 444, 446, 450, 481, 501], "leadbismuth": [0, 78, 124], "lithium": [0, 78, 123, 152, 482, 501], "magnesium": [0, 78, 104, 124, 152], "parentawaredensityredirect": [0, 78, 103], "fluid": [0, 78, 79, 87, 99, 100, 101, 102, 103, 109, 112, 114, 137, 138, 211, 218, 313, 330, 484, 501], "simplesolid": [0, 78, 83, 84, 90, 93, 97, 103, 106, 108, 113, 116, 132, 136], "fuelmateri": [0, 78, 103, 130, 131, 132, 133, 134, 135, 136, 399, 501], "mgo": [0, 78, 124], "mixtur": [0, 78, 107, 285, 321, 339, 399, 481, 501], "molybdenum": [0, 78, 124, 152], "mox": [0, 78, 124, 136, 281, 291, 330, 354, 482], "nz": [0, 78, 124], "potassium": [0, 78, 124, 152, 482], "scandiumoxid": [0, 78], "sc2o3": [0, 78, 110, 124], "sic": [0, 78, 125], "sodium": [0, 78, 109, 113, 124, 152, 225, 282, 291, 352, 353, 354, 446, 465, 473, 478, 479, 486, 488, 492, 493, 501], "sodiumchlorid": [0, 78], "nacl": [0, 78, 113, 124], "sulfur": [0, 78, 124, 126, 152, 501], "tzm": [0, 78, 124], "tantalum": [0, 78, 124, 152], "thu": [0, 33, 48, 78, 124, 161, 171, 211, 213, 238, 282, 285, 308, 315, 338, 339, 388, 396, 466, 479, 492, 493, 501], "thorium": [0, 78, 124, 130, 132, 133, 152, 501], "thoriumoxid": [0, 78, 124, 127, 482, 501], "tho2": [0, 78, 127, 132], "uthzr": [0, 78, 351, 501], "uzr": [0, 78, 103, 124, 128, 294, 298, 300, 308, 351, 354, 465, 486, 492, 501], "uranium": [0, 78, 103, 124, 130, 133, 136, 151, 152, 154, 298, 305, 308, 479, 486, 489, 490, 492, 501], "uraniumoxid": [0, 78, 107, 124, 298, 395, 415, 419, 482, 489, 501], "heatcapacityconst": [0, 78, 136], "uo2": [0, 78, 107, 136, 298, 308, 489], "void": [0, 78, 92, 103, 124, 237, 253, 281, 285, 298, 303, 305, 308, 314, 330, 353, 360, 473, 486, 492, 493, 497, 499, 501], "water": [0, 78, 129, 159, 242, 478, 493], "saturatedwat": [0, 78, 138, 493], "saturatedsteam": [0, 78, 138], "yttriumoxid": [0, 78], "y2o3": [0, 78, 124, 139], "zincoxid": [0, 78], "zno": [0, 78, 124, 140], "zr": [0, 78, 103, 124, 133, 134, 152, 153, 154, 285, 291, 294, 296, 298, 300, 308, 486, 491, 493, 498], "migrat": [0, 3, 5, 46, 59, 64, 67, 280, 281, 286, 292, 309, 328, 330, 349, 371, 372, 440, 481, 486], "blueprintsmigr": [0, 143, 144, 145], "settingsmigr": [0, 143, 144, 146], "databasemigr": [0, 143, 144], "m0_1_3": [0, 143], "removecentersfromblueprint": [0, 143, 145], "updateelementalnuclid": [0, 143, 145], "m0_1_6": [0, 143], "convertalphanumlocationsettingstonum": [0, 143, 146], "getindicesfromdif3dstylelocatorlabel": [0, 143, 146], "nucdirectori": [0, 1, 166, 201, 308, 411, 440, 457, 464, 472, 475, 490], "element": [0, 4, 5, 8, 9, 25, 44, 79, 81, 84, 90, 103, 145, 153, 154, 156, 161, 214, 280, 289, 291, 305, 307, 308, 339, 349, 352, 378, 395, 399, 403, 406, 407, 414, 419, 440, 444, 445, 465, 472, 479, 481, 486, 487, 491, 493, 501], "name": [0, 1, 2, 3, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 43, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 80, 81, 82, 86, 88, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 144, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 169, 172, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 208, 209, 210, 211, 213, 214, 217, 218, 221, 222, 223, 224, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 251, 253, 256, 257, 258, 260, 263, 264, 265, 266, 267, 268, 271, 278, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 314, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 338, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 403, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 442, 444, 445, 449, 451, 463, 464, 472, 473, 475, 478, 480, 481, 482, 486, 488, 490, 491, 492, 493, 496, 497, 498, 499, 503, 506, 507], "label": [0, 3, 5, 25, 82, 89, 103, 111, 136, 138, 146, 153, 154, 158, 161, 163, 164, 188, 200, 201, 213, 218, 226, 237, 249, 251, 260, 271, 281, 282, 285, 308, 331, 332, 336, 337, 362, 363, 371, 379, 396, 411, 413, 449, 463, 465, 470, 475, 481, 482, 488, 490, 498, 501], "id": [0, 25, 42, 53, 154, 158, 200, 237, 238, 253, 263, 282, 290, 298, 303, 304, 305, 307, 314, 319, 329, 353, 354, 414, 465, 466, 473, 474, 482, 486, 492, 493, 497, 501, 502], "indic": [0, 3, 8, 9, 18, 25, 42, 77, 103, 146, 154, 161, 164, 165, 166, 171, 174, 176, 177, 178, 181, 189, 200, 201, 203, 238, 242, 280, 282, 285, 290, 291, 308, 312, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 343, 344, 349, 373, 378, 391, 396, 407, 411, 413, 414, 423, 432, 444, 450, 467, 481, 492, 497, 501, 503], "rapid": [0, 479], "access": [0, 1, 18, 19, 100, 150, 159, 165, 166, 203, 210, 244, 254, 280, 285, 286, 305, 308, 312, 327, 329, 341, 343, 344, 398, 410, 412, 414, 444, 449, 479, 481, 486, 487, 488, 500, 501], "chemicalphas": [0, 151, 152, 490], "chemicalgroup": [0, 151, 152, 490], "getelementsbychemicalphas": [0, 151, 152], "getelementsbychemicalgroup": [0, 151, 152], "getnam": [0, 18, 78, 103, 151, 152, 281, 308, 354, 486], "getsymbol": [0, 151, 152], "getelementz": [0, 151, 152], "factori": [0, 2, 3, 55, 58, 78, 151, 152, 154, 161, 202, 203, 216, 281, 302, 305, 344, 347, 440, 444, 447, 467, 487], "addglobalel": [0, 151, 152], "destroyglobalel": [0, 151, 152], "nucdir": [0, 151], "getnuclidefromnam": [0, 151, 153], "getnaturalisotop": [0, 151, 152, 153, 154], "getnaturalmassisotop": [0, 151, 153], "getmc2label": [0, 151, 153], "getelementnam": [0, 151, 153], "getelementsymbol": [0, 151, 153], "getnuclid": [0, 78, 103, 151, 153, 163, 172, 195, 196, 200, 281, 302, 305, 308, 354, 470, 471], "getnuclidenam": [0, 151, 153], "getatomicweight": [0, 151, 153, 281, 308], "isheavymet": [0, 151, 152, 153, 154, 490], "isfissil": [0, 151, 153, 154, 164, 166], "getthresholddisplacementenergi": [0, 151, 153], "nuclidebas": [0, 1, 151, 153, 158, 159, 161, 162, 168, 244, 291, 308, 399, 457, 464, 465, 472, 475, 490], "nuclideinterfac": [0, 151, 154], "nuclidewrapp": [0, 151, 154, 201], "inuclid": [0, 151, 153, 154, 161, 201], "imcnpnuclid": [0, 151, 154], "naturalnuclidebas": [0, 82, 89, 111, 136, 138, 151, 152, 153, 154, 161, 291, 490], "dummynuclidebas": [0, 151, 154, 490], "lumpnuclidebas": [0, 151, 154, 490], "initreachableactivenuclidesthroughburnchain": [0, 151, 154], "isotop": [0, 88, 90, 103, 107, 124, 151, 153, 154, 161, 164, 172, 199, 238, 242, 244, 265, 285, 286, 289, 291, 296, 297, 298, 302, 303, 304, 305, 307, 308, 353, 399, 411, 419, 444, 478, 481, 484, 486, 490, 491, 492, 498], "getisotop": [0, 151, 154], "fromnam": [0, 151, 154, 475], "ismonoisotopicel": [0, 151, 154], "singl": [0, 3, 5, 6, 8, 18, 37, 44, 46, 55, 151, 154, 165, 166, 199, 201, 203, 218, 237, 238, 282, 285, 289, 291, 302, 304, 305, 308, 315, 323, 328, 330, 332, 334, 339, 351, 352, 353, 362, 363, 379, 387, 391, 394, 395, 403, 406, 411, 414, 432, 447, 449, 450, 451, 465, 475, 479, 482, 484, 488, 492, 497, 501, 503, 504], "changelabel": [0, 151, 154], "getdepletablenuclid": [0, 151, 154], "imposeburnchain": [0, 151, 154, 475], "addnuclidebas": [0, 151, 154], "readmccnuclidedata": [0, 151, 154], "updatenuclidebasesforspecialcas": [0, 151, 154], "addglobalnuclid": [0, 151, 154], "destroyglobalnuclid": [0, 151, 154], "thermalscatt": [0, 82, 89, 103, 111, 136, 138, 151, 159], "transmut": [0, 151, 154, 158, 160, 201, 235, 291, 462, 476, 477, 494, 497, 501], "decaymod": [0, 151, 154, 162], "nucleardataio": [0, 258, 328, 440, 465, 470, 471], "getexpectedisotxsfilenam": [0, 163, 440], "getexpectedcompxsfilenam": [0, 163, 440], "getexpectedgamisofilenam": [0, 163, 440], "getexpectedpmatrxfilenam": [0, 163, 440], "cccc": [0, 151, 163, 200, 465, 470, 471, 481], "system": [0, 3, 5, 6, 18, 26, 27, 30, 32, 36, 76, 154, 163, 174, 202, 203, 204, 211, 213, 217, 218, 225, 238, 242, 249, 280, 281, 286, 290, 292, 301, 305, 330, 331, 332, 334, 337, 338, 341, 343, 344, 345, 347, 348, 349, 356, 371, 373, 375, 376, 388, 389, 396, 397, 400, 403, 408, 410, 441, 444, 446, 451, 458, 459, 473, 478, 480, 481, 484, 485, 486, 491, 492, 503, 507], "implement": [0, 1, 3, 5, 8, 19, 31, 43, 44, 48, 55, 57, 59, 65, 77, 78, 92, 103, 138, 144, 150, 151, 154, 163, 165, 168, 172, 210, 214, 218, 235, 237, 238, 242, 249, 253, 279, 280, 285, 290, 308, 315, 316, 321, 327, 328, 334, 336, 339, 341, 343, 348, 352, 385, 388, 391, 394, 395, 396, 403, 406, 442, 444, 449, 451, 482, 483, 484, 488, 490, 493, 501, 503, 504], "detail": [0, 3, 5, 6, 18, 31, 38, 60, 65, 69, 73, 77, 92, 103, 163, 202, 210, 215, 218, 219, 234, 238, 242, 249, 253, 280, 285, 286, 288, 290, 308, 309, 328, 330, 385, 436, 444, 451, 458, 459, 479, 481, 482, 484, 486, 487, 489, 491, 492, 493, 497, 502, 503], "discuss": [0, 5, 151, 163, 211, 242, 280, 341, 444, 446, 447, 479, 488, 492, 501], "nuclearfilemetadata": [0, 163], "filemetadata": [0, 163, 194], "nuclidexsmetadata": [0, 163, 194], "regionxsmetadata": [0, 163, 194], "nuclidemetadata": [0, 163, 194], "xscollect": [0, 163, 196, 201, 352, 411], "macroscopiccrosssectioncr": [0, 163, 199], "computeblockaveragechi": [0, 163, 199], "computeneutronenergydepositionconst": [0, 163, 199], "computegammaenergydepositionconst": [0, 163, 199], "computefissionenergygenerationconst": [0, 163, 199], "computecaptureenergygenerationconst": [0, 163, 199], "computemacroscopicgroupconst": [0, 163, 199], "xslibrari": [0, 163, 166, 168, 170, 172, 175, 197, 199, 201, 249], "compar": [0, 1, 3, 4, 31, 45, 46, 54, 55, 57, 63, 163, 164, 166, 168, 170, 171, 172, 175, 181, 185, 198, 199, 200, 201, 218, 223, 239, 321, 328, 331, 338, 339, 360, 373, 378, 411, 413, 501], "comparexslibraryattribut": [0, 163, 200], "comparelibraryneutronenergi": [0, 163, 200], "getsuffixfromnuclidelabel": [0, 163, 200], "getisotxslibrariestomerg": [0, 163, 200], "mergexslibrariesinworkingdirectori": [0, 163, 200], "isotxslibrari": [0, 163, 171, 175, 178, 197, 200, 328, 411], "compxslibrari": [0, 163, 166, 200], "xsnuclid": [0, 163, 166, 199, 471], "plotscattermatrix": [0, 163, 201, 411, 471], "plotcomparescattermatrix": [0, 163, 201], "getoperatorclassfromset": [0, 202, 440], "operatormpi": [0, 2, 150, 202, 207, 280, 444], "runtyp": [0, 202, 210, 280, 436, 444, 501], "settingsvalid": [0, 202, 280, 364, 482, 484, 488], "snapshot": [0, 3, 5, 24, 31, 35, 46, 77, 202, 203, 205, 209, 235, 253, 282, 466, 473, 474, 481, 482, 486, 501], "operatorsnapshot": [0, 202, 203, 207, 444], "physic": [0, 31, 49, 77, 78, 85, 86, 102, 104, 136, 151, 154, 161, 162, 163, 164, 165, 168, 172, 183, 202, 203, 207, 280, 282, 285, 289, 291, 305, 307, 308, 309, 312, 313, 314, 327, 328, 336, 341, 344, 352, 368, 440, 441, 444, 446, 458, 466, 470, 478, 481, 482, 484, 486, 487, 489, 491, 492, 496, 500, 501, 503], "fuelcycl": [0, 211, 253, 280, 466, 486, 492], "fuelhandlerplugin": [0, 211, 214], "fuelperform": [0, 211], "neutron": [0, 27, 49, 77, 84, 100, 153, 154, 158, 161, 162, 164, 166, 168, 169, 178, 199, 200, 201, 211, 225, 280, 282, 285, 288, 289, 302, 305, 308, 309, 318, 327, 341, 344, 411, 446, 449, 464, 470, 475, 479, 481, 482, 484, 488, 489, 490, 492, 493, 497, 499, 501], "neutronicsplugin": [0, 211, 235, 268, 280, 446], "gammatransportisrequest": [0, 211, 235], "gammaxsarerequest": [0, 211, 235], "adjointcalculationrequest": [0, 211, 235], "realcalculationrequest": [0, 211, 235], "applyeffectivedelayedneutronfractiontocor": [0, 211, 235], "latticephysicsfrequ": [0, 211, 235, 237, 256, 482, 501], "safeti": [0, 168, 211, 403, 410, 479], "safetyplugin": [0, 211, 269], "thermalhydraul": [0, 211, 341, 344, 504], "constant": [0, 24, 76, 77, 80, 88, 102, 103, 158, 164, 168, 183, 199, 205, 211, 235, 236, 240, 253, 260, 268, 281, 285, 305, 308, 319, 331, 332, 336, 337, 339, 352, 368, 399, 439, 450, 465, 475, 482, 484, 488, 497, 499, 501], "dpa_cross_sect": [0, 211, 212], "execut": [0, 12, 13, 14, 15, 16, 29, 30, 33, 34, 35, 40, 41, 46, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 76, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 148, 149, 150, 156, 157, 158, 159, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 203, 209, 210, 211, 222, 223, 224, 225, 231, 232, 233, 238, 246, 247, 249, 251, 253, 256, 257, 263, 264, 265, 266, 267, 268, 271, 278, 280, 285, 294, 295, 296, 297, 298, 299, 300, 301, 308, 321, 322, 323, 324, 325, 326, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 400, 408, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 444, 447, 458, 460, 476, 479, 480, 481, 482, 488, 501, 503, 507], "executionopt": [0, 211, 213, 226, 249], "defaultexecut": [0, 211, 213, 226, 249], "reactorplugin": [0, 280, 281, 440, 501], "defineblocktyp": [0, 280, 281], "defineassemblytyp": [0, 280, 281], "definesystembuild": [0, 280, 281, 501], "getaxialexpansionchang": [0, 280, 281, 378, 391, 484], "blueprint": [0, 2, 3, 5, 24, 46, 48, 54, 55, 60, 88, 103, 107, 144, 145, 154, 194, 203, 235, 237, 242, 280, 281, 282, 285, 305, 308, 321, 326, 328, 330, 344, 347, 349, 359, 396, 411, 449, 450, 465, 473, 481, 482, 484, 486, 487, 488, 491, 496, 498, 500], "loadfromc": [0, 281, 286, 347, 349], "compon": [0, 3, 4, 5, 9, 24, 43, 48, 50, 77, 103, 145, 152, 166, 181, 237, 238, 242, 263, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 300, 308, 310, 311, 312, 313, 314, 321, 322, 323, 328, 330, 338, 341, 347, 352, 353, 354, 410, 411, 444, 446, 449, 457, 462, 465, 473, 476, 477, 478, 479, 481, 482, 483, 484, 486, 489, 491, 492, 493, 494, 497, 500, 502, 503], "nullcompon": [0, 281, 302, 353, 501], "unshapedcompon": [0, 281, 302, 306, 353, 501], "unshapedvolumetriccompon": [0, 281, 302, 501], "zeromasscompon": [0, 281, 302, 501], "positiveornegativevolumecompon": [0, 281, 302, 501], "derivedshap": [0, 281, 285, 302, 305, 353, 354, 357, 463, 465, 473, 484, 486, 492, 493, 501], "convert": [0, 3, 4, 5, 9, 25, 38, 47, 69, 94, 95, 98, 103, 146, 153, 154, 165, 189, 199, 218, 237, 249, 258, 280, 281, 282, 285, 305, 308, 328, 330, 331, 332, 337, 338, 344, 349, 356, 371, 376, 391, 396, 399, 403, 406, 407, 409, 410, 414, 435, 439, 449, 457, 458, 459, 481, 482, 484, 486, 501], "grid": [0, 3, 5, 9, 13, 44, 48, 66, 238, 249, 280, 281, 282, 285, 286, 290, 292, 295, 299, 308, 312, 313, 314, 321, 328, 329, 348, 349, 352, 359, 396, 405, 411, 414, 416, 432, 444, 462, 463, 465, 470, 472, 473, 476, 477, 478, 479, 480, 481, 482, 484, 486, 489, 492, 494, 499, 507], "locatorlabeltoindic": [0, 281, 332], "basic": [0, 4, 13, 15, 19, 27, 30, 31, 45, 138, 150, 151, 154, 251, 256, 257, 258, 281, 286, 296, 303, 308, 318, 327, 332, 337, 352, 354, 371, 386, 392, 399, 418, 420, 429, 432, 434, 437, 442, 444, 447, 448, 451, 478, 479, 488, 491, 492, 493, 501, 502], "usag": [0, 4, 20, 59, 150, 201, 281, 342, 395, 396, 411, 413, 447, 450, 482, 501], "consider": [0, 43, 235, 237, 280, 281, 339, 397, 444], "reset": [0, 2, 77, 249, 280, 281, 302, 308, 309, 310, 312, 315, 327, 341, 365, 379, 388, 392, 395, 437, 484, 486, 497], "assembli": [0, 2, 3, 5, 13, 14, 24, 25, 26, 27, 42, 43, 46, 49, 77, 81, 88, 174, 215, 218, 219, 222, 223, 224, 249, 251, 260, 275, 280, 281, 283, 285, 286, 287, 288, 292, 294, 297, 300, 302, 305, 308, 309, 310, 311, 312, 313, 314, 315, 321, 323, 326, 327, 328, 330, 332, 334, 336, 337, 338, 339, 341, 347, 348, 349, 351, 354, 359, 362, 371, 385, 391, 395, 396, 399, 407, 411, 413, 444, 447, 449, 450, 458, 465, 466, 473, 474, 478, 479, 481, 482, 483, 484, 486, 488, 491, 497, 499, 500, 502, 503, 504, 506], "hexassembli": [0, 280, 281, 282, 465], "cartesianassembli": [0, 280, 281, 282], "rzassembli": [0, 281, 282], "thrzassembli": [0, 280, 281, 282], "assemblyparamet": [0, 281], "getassemblyparameterdefinit": [0, 281, 283], "blockparamet": [0, 281], "getblockparameterdefinit": [0, 281, 284], "block": [0, 2, 3, 4, 5, 13, 14, 24, 27, 40, 42, 43, 48, 49, 78, 124, 150, 151, 159, 165, 174, 196, 199, 218, 223, 234, 237, 238, 242, 244, 246, 249, 253, 257, 258, 263, 264, 280, 281, 282, 284, 286, 287, 288, 289, 290, 292, 294, 295, 296, 297, 298, 300, 302, 303, 305, 307, 308, 311, 312, 313, 314, 315, 316, 319, 321, 322, 323, 325, 326, 327, 328, 330, 332, 333, 338, 341, 343, 344, 345, 347, 348, 351, 352, 353, 354, 359, 362, 385, 394, 395, 399, 407, 411, 444, 447, 449, 450, 456, 457, 460, 462, 473, 474, 476, 477, 478, 481, 482, 483, 484, 486, 488, 489, 491, 494, 496, 499, 500, 502, 503], "hexblock": [0, 9, 196, 280, 281, 285, 308, 314, 315, 321, 351, 465, 482, 484], "cartesianblock": [0, 280, 281, 285, 314], "thrzblock": [0, 280, 281, 282, 285], "composit": [0, 3, 5, 9, 78, 79, 80, 103, 151, 166, 168, 173, 181, 199, 225, 237, 238, 263, 280, 281, 282, 285, 286, 291, 292, 302, 305, 314, 315, 316, 328, 329, 330, 334, 336, 338, 339, 341, 343, 344, 345, 347, 354, 389, 437, 444, 447, 459, 466, 473, 474, 478, 481, 482, 484, 486, 489, 492, 493, 501, 503], "flagseri": [0, 281, 308, 344], "compositemodeltyp": [0, 280, 281, 305, 308], "armiobject": [0, 3, 5, 6, 227, 244, 249, 259, 274, 280, 281, 290, 308, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 345, 348, 450, 465, 484], "stateretain": [0, 281, 308, 354], "gathermaterialsbyvolum": [0, 281, 308], "getdominantmateri": [0, 281, 308], "getreactionratedict": [0, 281, 308], "core": [0, 3, 5, 9, 13, 18, 24, 25, 27, 30, 43, 48, 52, 88, 166, 169, 174, 203, 214, 215, 218, 219, 223, 235, 237, 238, 242, 246, 249, 256, 258, 260, 280, 281, 282, 285, 286, 290, 292, 301, 308, 312, 314, 315, 316, 318, 321, 323, 327, 329, 330, 332, 334, 336, 337, 338, 339, 340, 341, 343, 347, 348, 349, 351, 359, 360, 362, 365, 394, 396, 411, 413, 416, 444, 449, 451, 457, 458, 459, 465, 466, 473, 474, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 491, 493, 496, 497, 500, 501, 502, 503, 504, 507], "excorestructur": [0, 280, 281, 348, 501], "excorecollect": [0, 281, 329], "flag": [0, 1, 10, 18, 25, 77, 103, 124, 145, 178, 203, 218, 235, 242, 246, 249, 280, 281, 282, 285, 286, 289, 290, 291, 294, 295, 296, 297, 298, 300, 302, 308, 313, 315, 316, 321, 328, 341, 343, 344, 352, 354, 356, 371, 376, 391, 394, 395, 400, 405, 410, 411, 413, 422, 439, 444, 447, 457, 458, 463, 465, 466, 481, 482, 484, 486, 488, 491, 502, 503], "invalidflagserror": [0, 281, 330], "geometri": [0, 3, 5, 44, 46, 54, 55, 164, 171, 173, 174, 177, 186, 191, 203, 213, 237, 238, 249, 280, 281, 282, 285, 287, 290, 292, 305, 307, 309, 314, 315, 316, 321, 323, 326, 327, 328, 332, 334, 336, 337, 339, 340, 347, 349, 357, 396, 444, 456, 460, 465, 466, 469, 473, 474, 477, 479, 481, 486, 492, 493, 494, 501, 503], "geomtyp": [0, 51, 52, 53, 249, 281, 328, 331, 332, 333, 334, 336, 337, 339, 340, 396, 465, 481], "domaintyp": [0, 281, 331, 396, 465], "boundarytyp": [0, 281, 331, 465], "symmetrytyp": [0, 281, 315, 328, 331, 336, 465], "checkvalidgeomsymmetrycombo": [0, 281, 331], "reactorparamet": [0, 281], "definereactorparamet": [0, 281, 346], "definecoreparamet": [0, 281, 346], "spentfuelpool": [0, 280, 281, 474, 501], "systemlayoutinput": [0, 46, 48, 55, 281, 292, 340, 347, 481], "zone": [0, 164, 171, 173, 177, 178, 218, 281, 315, 328, 361, 466, 473, 474, 482, 486, 492, 493, 496, 497, 501], "isboolset": [0, 364, 440], "recursivelyloadsettingsfil": [0, 364, 440], "promptforsettingsfil": [0, 364, 440], "fwset": [0, 364, 488], "getframeworkset": [0, 364, 366], "caseset": [0, 24, 27, 150, 364, 473, 501], "flaglistset": [0, 364, 371], "settingsio": [0, 364, 377], "root": [0, 3, 5, 9, 46, 54, 76, 150, 154, 211, 287, 345, 364, 372, 378, 398, 400, 407, 437, 447, 450, 488, 503], "settingrenam": [0, 364, 372], "settingsread": [0, 364, 372], "settingswrit": [0, 364, 365, 372, 482], "prompt": [0, 364, 372, 373, 451, 488, 499, 501], "runlogpromptcancel": [0, 364, 372], "runlogpromptunresolv": [0, 364, 372], "queri": [0, 218, 280, 308, 364, 373, 375, 488], "inspector": [0, 202, 203, 214, 220, 228, 229, 235, 243, 261, 275, 276, 280, 364, 373, 488], "createqueryrevertbadpathtodefault": [0, 364, 373], "validatevers": [0, 364, 373], "getemptyhexreactor": [0, 378, 440], "getemptycartesianreactor": [0, 378, 440], "fixtur": [0, 33, 378, 440], "requires_fixtur": [0, 378, 440], "armitesthelp": [0, 33, 223, 224, 378, 382, 440], "comparefileslinebylin": [0, 378], "comparelin": [0, 378], "rebaselinetextcomparison": [0, 378, 440], "mockrunlog": [0, 378], "bufferlog": [0, 378, 379], "logcount": [0, 378, 379], "refsmallreactorshufflelog": [0, 378], "equilibriumshuffl": [0, 378, 380], "getfactorlist": [0, 214, 218, 378, 380, 492, 501], "test_app": [0, 378], "testplugin1": [0, 378, 381], "testplugin2": [0, 378, 381], "testplugin3": [0, 378, 381], "testplugin4": [0, 378, 381], "testapp": [0, 378, 381], "testarmihighlevel": [0, 378, 381], "test_armitesthelp": [0, 378], "testarmitesthelp": [0, 378, 382], "test_cartesian": [0, 378, 415, 416], "cartesianreactortest": [0, 281, 350, 359, 378, 383], "test_context": [0, 378], "testcontextseri": [0, 378, 384], "test_interfac": [0, 378], "dummyinterfac": [0, 378, 385], "testcodeinterfac": [0, 378, 385], "testtextprocessor": [0, 378, 385], "testtightcoupl": [0, 202, 208, 210, 378, 385], "test_lwrinput": [0, 378], "c5g7reactortest": [0, 378, 386], "test_mpiact": [0, 378, 415, 420], "mpiitertest": [0, 378, 387], "queueactionstest": [0, 378, 387], "passer": [0, 363, 378, 379, 387], "test_mpifeatur": [0, 378], "failinginterface1": [0, 378, 388], "failinginterface2": [0, 378, 388], "failinginterface3": [0, 378, 388], "mockinterfac": [0, 3, 11, 14, 378, 388], "mpioperatortest": [0, 378, 388], "bcastaction1": [0, 378, 388], "bcastaction2": [0, 378, 388], "mpidistributestatetest": [0, 378, 388], "mpipathtoolstest": [0, 378, 388], "testcontextmpi": [0, 378, 388], "test_mpiparamet": [0, 378], "mocksyncpc": [0, 378, 389], "makecomp": [0, 378, 389], "synchronizationtest": [0, 378, 389], "test_notebook": [0, 378], "notebooktest": [0, 378, 390], "runnotebook": [0, 378, 390], "test_plugin": [0, 378], "pluginflags1": [0, 378, 391], "sillyaxialexpansionchang": [0, 378, 391], "sillyaxialplugin": [0, 378, 391], "testpluginregistr": [0, 378, 391], "testpluginbas": [0, 378, 391], "testplugin": [0, 232, 268, 278, 378, 391], "test_runlog": [0, 378], "testrunlog": [0, 378, 392], "testrunlogg": [0, 378, 392], "test_test": [0, 378], "testcomparefil": [0, 378, 393], "test_user_plugin": [0, 378, 488], "userpluginflag": [0, 378, 394], "userpluginflags2": [0, 378, 394], "userpluginflags3": [0, 378, 394], "userpluginbaddefinesset": [0, 378, 394], "userpluginbaddefineparameterrenam": [0, 378, 394], "userpluginonprocesscoreload": [0, 378, 394], "upinterfac": [0, 378, 394], "userpluginwithinterfac": [0, 378, 394], "testuserplugin": [0, 378, 394], "util": [0, 2, 4, 30, 36, 40, 60, 65, 76, 197, 199, 211, 213, 219, 225, 233, 280, 287, 288, 290, 312, 319, 327, 330, 332, 372, 376, 388, 391, 440, 441, 444, 447, 455, 457, 459, 462, 463, 466, 473, 474, 477, 479, 481, 482, 484, 486, 488, 492, 494, 501], "getfilesha1hash": [0, 395, 440], "copywithoutblock": [0, 395, 440], "getpowerfract": [0, 395, 440], "getcyclenam": [0, 395, 440], "getavailabilityfactor": [0, 395, 440], "getsteplength": [0, 395, 440], "getcyclelength": [0, 395, 440], "getburnstep": [0, 395, 440], "hasburnup": [0, 395, 440], "getmaxburnstep": [0, 395, 440], "getcumulativenodenum": [0, 395, 440], "getcyclenodefromcumulativestep": [0, 395, 440], "getcyclenodefromcumulativenod": [0, 395, 440], "getnodespercycl": [0, 395, 440], "getprevioustimenod": [0, 395, 440], "trypickleonallcont": [0, 395, 440], "dotestpickleonallcontents2": [0, 395, 440], "mypickl": [0, 395, 440], "save": [0, 6, 38, 77, 203, 235, 258, 285, 290, 299, 308, 327, 328, 341, 365, 395, 411, 413, 414, 444, 449, 451, 479, 482, 487, 501], "trypickleonallcontents3": [0, 395, 440], "classesinhierarchi": [0, 395, 436, 440], "slantsplit": [0, 395, 440], "prependtolist": [0, 395, 440], "capstrlen": [0, 395, 440], "list2str": [0, 395, 440], "createformattedstrwithdelimit": [0, 395, 440], "plotmatrix": [0, 395, 440], "usernam": [0, 395, 440], "mergeabledict": [0, 77, 395, 440], "merg": [0, 1, 163, 164, 165, 166, 181, 187, 197, 199, 200, 201, 238, 285, 305, 314, 381, 395, 481, 484, 498], "safecopi": [0, 395, 440, 484], "asciimap": [0, 290, 395, 482], "asciimapcartesian": [0, 395, 396], "asciimaphexthirdflatsup": [0, 395, 396], "asciimaphexfullflatsup": [0, 395, 396], "asciimaphexfulltipsup": [0, 395, 396], "asciimapfromgeomanddomain": [0, 395, 396], "codetim": [0, 395, 436, 483], "getmastertim": [0, 395, 397], "mastertim": [0, 395, 397], "customexcept": [0, 395, 481], "warn": [0, 3, 5, 77, 88, 103, 199, 200, 210, 238, 282, 298, 308, 331, 363, 372, 379, 386, 392, 395, 398, 400, 410, 437, 440, 445, 451, 486, 488, 491, 493, 501, 503], "warn_when_root": [0, 395, 398], "inputerror": [0, 395, 398], "settingexcept": [0, 395, 398], "invalidsettingsstopprocess": [0, 395, 398], "nonexistentset": [0, 395, 398], "invalidsettingsfileerror": [0, 395, 398], "nonexistentsettingsfileerror": [0, 395, 398], "densitytool": [0, 395, 419, 457], "getndensfrommass": [0, 395, 399], "getmassfract": [0, 395, 399], "calculatemassdens": [0, 395, 399], "calculatenumberdens": [0, 395, 399], "getmassingram": [0, 395, 399], "formatmaterialcard": [0, 395, 399, 457], "filternuclidelist": [0, 395, 399], "normalizenuclidelist": [0, 395, 399], "expandelementalmassfracstonuclid": [0, 395, 399], "expandelementalnuclidemassfrac": [0, 395, 399], "getchem": [0, 395, 399], "applyisotopicsmix": [0, 395, 399], "directorychang": [0, 213, 395, 401, 420, 482], "temporarydirectorychang": [0, 271, 395, 400, 482], "forcedcreationdirectorychang": [0, 45, 271, 395, 400], "directorychangerfactori": [0, 395, 400], "directorychangersmpi": [0, 395], "mpidirectorychang": [0, 395, 401, 421, 484], "dynamicimport": [0, 395], "getentirefamilytre": [0, 395, 402], "auto": [0, 3, 5, 7, 76, 103, 145, 213, 249, 280, 282, 289, 308, 354, 357, 373, 395, 403, 422, 441, 451, 481, 482, 501], "grideditor": [0, 66, 395, 501], "hexagon": [0, 44, 124, 174, 280, 281, 285, 294, 297, 298, 300, 302, 303, 304, 305, 306, 308, 309, 314, 315, 328, 332, 336, 339, 351, 352, 353, 354, 395, 396, 423, 444, 463, 465, 467, 473, 479, 484, 486, 492, 497, 501, 502], "area": [0, 24, 53, 173, 219, 263, 280, 282, 285, 302, 303, 304, 305, 307, 308, 314, 322, 337, 351, 352, 353, 357, 395, 405, 423, 434, 438, 449, 478, 484, 488, 492, 496, 497, 498], "side": [0, 25, 218, 285, 303, 304, 314, 336, 337, 378, 395, 405, 411, 458], "corner": [0, 189, 219, 285, 305, 308, 334, 337, 341, 344, 395, 396, 405, 416, 423, 484, 497], "pitch": [0, 13, 285, 290, 303, 304, 305, 314, 315, 328, 332, 333, 334, 337, 339, 340, 350, 352, 378, 395, 405, 467, 486, 491, 492, 493, 501, 502], "numringstoholdnumcel": [0, 395, 405], "numpositionsinr": [0, 395, 405, 423], "totalpositionsuptor": [0, 395, 405, 423], "getindexofrotatedcel": [0, 395, 405, 484], "iter": [0, 3, 5, 8, 9, 31, 46, 77, 78, 154, 203, 210, 235, 237, 249, 253, 256, 282, 285, 308, 315, 328, 336, 339, 343, 347, 378, 395, 407, 411, 413, 414, 422, 424, 432, 447, 463, 465, 484, 488, 499, 501, 504], "flatten": [0, 3, 8, 15, 150, 395, 406, 447, 503], "chunk": [0, 9, 285, 395, 403, 406, 437, 447, 450], "split": [0, 44, 150, 282, 285, 315, 326, 334, 336, 341, 378, 395, 406, 447, 479, 482, 492, 496, 501], "unpackbinarystr": [0, 395, 406], "packbinarystr": [0, 395, 406], "unpackhexstr": [0, 395, 406], "packhexstr": [0, 395, 406], "sequenc": [0, 3, 4, 5, 6, 46, 54, 55, 59, 103, 210, 213, 253, 280, 287, 288, 289, 290, 291, 292, 308, 339, 344, 354, 395, 403, 406, 411, 413, 414, 444, 478, 479, 501], "pivot": [0, 395, 406], "mathemat": [0, 103, 395, 425], "average1dwithintoler": [0, 327, 395, 407], "converttoslic": [0, 395, 407], "efmt": [0, 395, 407], "expandrepeatedfloat": [0, 395, 407], "findclosest": [0, 395, 407], "findnearestvalu": [0, 395, 407], "findnearestvalueandindex": [0, 395, 407], "fixthreedigitexp": [0, 395, 407], "getfloat": [0, 395, 407], "getstepsfromvalu": [0, 395, 407], "ismonoton": [0, 395, 407], "linearinterpol": [0, 395, 407], "minimizescalarfunc": [0, 395, 407], "newtonsmethod": [0, 395, 407], "parabolafrompoint": [0, 395, 407], "parabolicinterpol": [0, 395, 407], "relerr": [0, 395, 407], "resamplestepwis": [0, 395, 407, 425], "rotatexi": [0, 395, 407], "outputcach": [0, 395], "api": [0, 280, 308, 395, 432, 441, 444, 446, 450, 451, 466, 479, 482, 486, 491, 501], "retrieveoutput": [0, 395, 408], "store": [0, 3, 4, 5, 8, 9, 18, 21, 25, 31, 42, 44, 46, 77, 103, 152, 154, 169, 171, 174, 177, 181, 194, 199, 203, 218, 238, 253, 282, 285, 292, 305, 308, 311, 312, 313, 314, 321, 327, 328, 330, 331, 336, 338, 339, 341, 343, 344, 345, 372, 395, 403, 406, 408, 413, 419, 444, 449, 450, 481, 482, 486, 488, 496, 497, 498, 501, 502, 503, 504], "deletecach": [0, 395, 408], "cachecal": [0, 395, 408], "pars": [0, 36, 38, 46, 59, 63, 65, 217, 331, 378, 395, 427, 432, 437, 484, 501], "tryliteralev": [0, 395, 409], "parsevalu": [0, 395, 409], "datetimefromstr": [0, 395, 409], "pathtool": [0, 395, 428], "armiabspath": [0, 395, 410], "copyorwarn": [0, 395, 410], "isfilepathnew": [0, 395, 410], "isaccess": [0, 395, 410], "separatemoduleandattribut": [0, 395, 410], "importcustompymodul": [0, 395, 410, 428], "moduleandattributeexist": [0, 395, 410], "cleanpath": [0, 395, 410, 428], "plot": [0, 21, 24, 25, 27, 44, 48, 166, 196, 201, 218, 260, 315, 339, 395, 413, 429, 431, 449, 458, 459, 462, 463, 465, 466, 468, 473, 475, 476, 477, 479, 481, 482, 484, 486, 487, 488, 489, 491, 493, 494, 501], "colorgener": [0, 395, 411], "plotblockdepthmap": [0, 395, 411, 486], "plotfacemap": [0, 395, 411, 459, 466, 474, 486], "close": [0, 2, 3, 5, 6, 76, 158, 164, 165, 218, 308, 363, 392, 395, 399, 400, 401, 411, 413, 437, 440, 459, 466, 474, 486, 501], "depthslid": [0, 395, 411], "plotassemblytyp": [0, 395, 411, 473], "plotblockflux": [0, 395, 411], "makehistogram": [0, 395, 411], "plotblockdiagram": [0, 395, 411], "plotnucx": [0, 395, 411], "properti": [0, 1, 3, 4, 5, 6, 20, 42, 46, 78, 79, 80, 81, 82, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 150, 154, 166, 168, 174, 181, 196, 197, 200, 201, 203, 207, 218, 225, 237, 238, 279, 285, 286, 287, 290, 291, 305, 308, 314, 327, 328, 329, 331, 333, 334, 336, 337, 338, 339, 341, 343, 344, 352, 354, 362, 365, 371, 378, 395, 430, 444, 446, 472, 478, 479, 481, 484, 486, 488, 489, 493, 498, 501], "areequ": [0, 395, 412], "numpyhackforequ": [0, 395, 412], "createimmutableproperti": [0, 395, 412], "immutablepropertyerror": [0, 395, 412], "unlockimmutableproperti": [0, 395, 412], "lockimmutableproperti": [0, 395, 412], "reportplot": [0, 395], "plotreactorperform": [0, 395, 413], "valuevstim": [0, 395, 413], "keffvstim": [0, 395, 413], "buvstim": [0, 395, 413], "xshistoryvstim": [0, 395, 413], "movesvscycl": [0, 395, 413], "plotcoreoverviewradar": [0, 395, 413], "createplotmetadata": [0, 395, 413], "plotaxialprofil": [0, 395, 413], "tabul": [0, 395, 432, 463, 484], "header": [0, 22, 25, 363, 395, 432, 440, 446, 449, 451, 463, 482, 504], "column": [0, 25, 165, 166, 181, 201, 395, 396, 413, 432, 437, 484, 492], "align": [0, 314, 327, 395, 405, 411, 432, 479, 501, 505], "width": [0, 218, 219, 223, 334, 339, 395, 403, 465, 475, 499], "line": [0, 4, 25, 38, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 136, 145, 165, 203, 211, 239, 249, 280, 282, 285, 308, 309, 315, 328, 334, 336, 337, 352, 358, 365, 371, 373, 377, 378, 395, 396, 397, 407, 410, 416, 421, 425, 429, 432, 433, 437, 439, 442, 447, 449, 450, 451, 465, 478, 480, 484, 486, 488, 492, 501, 503, 507], "datarow": [0, 395, 414], "size": [0, 20, 25, 55, 164, 165, 201, 218, 282, 308, 327, 328, 339, 359, 395, 396, 403, 407, 411, 414, 492, 493, 501], "tableformat": [0, 395, 414], "textwrapp": [0, 395, 414], "chain": [0, 154, 158, 162, 218, 235, 242, 291, 308, 332, 338, 395, 406, 413, 414, 475, 479, 501], "namedtupl": [0, 77, 338, 395, 414], "partial": [0, 174, 189, 249, 280, 285, 290, 328, 337, 363, 395, 406, 414, 501], "reduc": [0, 5, 282, 308, 327, 332, 336, 339, 343, 359, 395, 414, 481, 486, 501], "zip_longest": [0, 395, 414], "textprocessor": [0, 395, 433], "scientific_pattern": [0, 395, 437], "floating_pattern": [0, 395, 437], "decimal_pattern": [0, 395, 437], "filemark": [0, 395, 437], "resolvemarkupinclus": [0, 395, 433, 437], "findyamlinclus": [0, 395, 437], "sequentialread": [0, 395, 437], "sequentialstringioread": [0, 395, 437], "smartlist": [0, 395, 437], "triangl": [0, 281, 302, 303, 306, 337, 353, 395, 434, 501], "gettrianglearea": [0, 395, 434, 438], "gettrianglecentroid": [0, 395, 438], "checkifpointisintriangl": [0, 395, 438], "unit": [0, 14, 52, 53, 57, 58, 75, 76, 79, 89, 92, 103, 112, 119, 121, 124, 129, 135, 160, 170, 174, 175, 199, 249, 268, 278, 285, 298, 321, 324, 325, 328, 332, 333, 334, 339, 341, 344, 352, 371, 378, 387, 390, 393, 395, 405, 417, 427, 428, 435, 443, 445, 451, 478, 482, 484, 488, 492, 496, 497, 498, 499, 501, 506], "gettk": [0, 395, 439], "gettc": [0, 395, 439, 488], "gettf": [0, 395, 439], "gettemperatur": [0, 395, 439], "gettmev": [0, 395, 439], "convertmmhgtopasc": [0, 395, 439], "convertbartopasc": [0, 395, 439], "convertatmtopasc": [0, 395, 439], "sanitizeangl": [0, 395, 439], "getxylineparamet": [0, 395, 439], "pluginmanag": [0, 1, 280, 440, 446], "getset": [0, 1, 364, 365], "getparamrenam": [0, 1], "registerpluginflag": [0, 1], "registeruserplugin": [0, 1, 364, 365], "splashtext": [0, 1, 446, 488], "conftest": [0, 440], "pytest_sessionstart": [0, 75, 440], "bootstraparmitestenv": [0, 75, 440], "context": [0, 27, 43, 46, 150, 258, 285, 292, 331, 384, 388, 395, 400, 440, 447, 451, 475, 479, 481, 493, 503], "mode": [0, 59, 64, 65, 76, 84, 146, 151, 154, 165, 249, 290, 328, 372, 385, 440, 451, 484, 492, 499], "batch": [0, 62, 64, 65, 73, 76, 253, 302, 484, 492], "setmod": [0, 76], "activatelocalfastpath": [0, 76, 440], "getfastpath": [0, 76, 440, 481], "cleantempdir": [0, 76, 440], "cleanallarmitempdir": [0, 76, 440], "disconnectallhdfdb": [0, 76, 440], "stack_ord": [0, 77, 203, 440, 488], "befor": [0, 3, 5, 18, 46, 77, 150, 200, 203, 211, 213, 217, 218, 219, 234, 237, 238, 263, 280, 285, 305, 308, 313, 314, 315, 326, 328, 331, 341, 343, 363, 392, 395, 396, 402, 407, 414, 441, 443, 446, 447, 449, 450, 466, 479, 480, 481, 482, 486, 488, 497, 499, 501, 507], "preprocess": [0, 77], "fuel_manag": [0, 77, 218], "fuel_perform": [0, 77], "cross_sect": [0, 77], "critical_control": [0, 77], "flux": [0, 18, 33, 77, 164, 166, 168, 170, 172, 174, 177, 178, 189, 199, 219, 237, 238, 242, 248, 249, 251, 259, 263, 280, 282, 285, 302, 305, 308, 326, 327, 328, 330, 341, 344, 352, 411, 444, 465, 466, 478, 479, 481, 482, 486, 497, 499, 501], "thermal_hydraul": [0, 77, 488], "reactivity_coeff": [0, 77], "transient": [0, 31, 77, 202, 207, 211, 449, 479, 501], "postprocess": [0, 77], "tightcoupl": [0, 14, 77, 251, 385, 440, 501, 504], "storepreviousiterationvalu": [0, 77], "isconverg": [0, 77, 385], "getlistdimens": [0, 77], "getdepend": [0, 77], "getinputfil": [0, 77], "distribut": [0, 2, 3, 5, 6, 21, 26, 77, 142, 150, 151, 164, 218, 219, 235, 251, 285, 308, 312, 313, 314, 339, 411, 447, 466, 474, 479, 482, 484, 486, 488, 492, 493, 497, 499, 501, 504], "duplic": [0, 20, 43, 55, 57, 77, 78, 103, 124, 128, 152, 241, 244, 247, 281, 282, 296, 308, 328, 339, 353, 363, 364, 365, 397, 408, 419, 422, 482, 492, 501, 503], "new": [0, 3, 4, 5, 15, 18, 25, 29, 44, 46, 54, 55, 62, 64, 77, 79, 91, 103, 109, 119, 136, 141, 143, 146, 148, 150, 154, 181, 199, 201, 207, 211, 213, 216, 237, 238, 249, 253, 258, 263, 275, 280, 282, 285, 286, 289, 291, 302, 308, 313, 314, 315, 316, 319, 327, 328, 330, 339, 343, 344, 345, 347, 348, 349, 358, 359, 362, 365, 371, 376, 389, 391, 394, 395, 400, 401, 403, 405, 406, 407, 414, 437, 441, 442, 443, 445, 446, 449, 450, 459, 480, 481, 486, 487, 491, 492, 493, 501, 503, 504, 505, 507], "skip": [0, 54, 77, 161, 168, 174, 199, 203, 210, 238, 285, 327, 345, 359, 370, 371, 400, 411, 446, 475, 482, 484, 493, 501], "namecontain": [0, 77, 281, 308], "predistributest": [0, 77], "postdistributest": [0, 77], "attachreactor": [0, 77], "detachreactor": [0, 77], "gethistoryparam": [0, 18, 77, 248, 249], "getinterfac": [0, 18, 77, 202, 203, 444, 486], "interactinit": [0, 77, 203, 378, 388, 444], "interactbol": [0, 2, 3, 6, 18, 19, 20, 21, 26, 31, 77, 203, 235, 237, 238, 241, 242, 252, 253, 256, 328, 444], "interacteol": [0, 2, 3, 6, 18, 19, 20, 21, 26, 77, 203, 214, 217, 444], "interactboc": [0, 2, 18, 19, 21, 26, 77, 214, 217, 221, 223, 235, 237, 241, 242, 248, 249, 250, 251, 252, 253, 256, 444], "interacteoc": [0, 2, 3, 6, 21, 26, 77, 214, 217, 235, 237, 252, 253, 444, 484], "interacteverynod": [0, 2, 3, 6, 11, 14, 19, 20, 21, 26, 31, 77, 203, 235, 237, 248, 249, 250, 251, 252, 253, 256, 378, 388, 394, 444, 447, 488], "interactcoupl": [0, 2, 31, 77, 235, 237, 248, 249, 252, 253, 256, 444, 482, 501], "gettightcouplingvalu": [0, 77, 248, 249, 251], "interacterror": [0, 2, 3, 6, 77, 444], "interactdistributest": [0, 2, 3, 6, 77, 241, 242], "isrequesteddetailpoint": [0, 31, 77], "workeroper": [0, 2, 77, 150, 202, 203, 204, 214, 217, 218, 280, 378, 388], "enabl": [0, 3, 6, 46, 77, 93, 103, 169, 203, 238, 242, 246, 247, 249, 259, 282, 286, 287, 289, 310, 312, 328, 338, 365, 441, 444, 446, 451, 479, 481, 482, 486, 491, 497, 501, 504, 505], "bolforc": [0, 77, 203], "writeinput": [0, 45, 46, 54, 77, 211, 213, 315, 473, 491], "readoutput": [0, 77], "specifyinput": [0, 56, 57, 77, 214, 217, 280], "updatephysicscouplingcontrol": [0, 77, 252, 253], "inputwrit": [0, 77, 254, 440], "write": [0, 3, 5, 6, 7, 9, 10, 13, 15, 18, 21, 22, 23, 27, 30, 36, 42, 43, 46, 47, 54, 77, 144, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 200, 213, 218, 223, 252, 253, 254, 255, 257, 264, 268, 282, 286, 296, 309, 316, 328, 344, 349, 357, 363, 365, 371, 372, 378, 392, 396, 397, 398, 407, 411, 444, 446, 449, 450, 451, 456, 460, 463, 473, 477, 479, 480, 481, 482, 484, 486, 488, 491, 492, 494, 501, 503, 504, 507], "outputread": [0, 77, 249, 251, 440], "getactiveinterfaceinfo": [0, 77, 203, 440], "isinterfaceact": [0, 77, 440], "interfaceinfo": [0, 77, 440, 488], "interfacecl": [0, 77], "kwarg": [0, 77, 81, 88, 101, 103, 107, 130, 132, 133, 134, 135, 136, 150, 168, 196, 237, 238, 279, 280, 287, 288, 289, 290, 291, 292, 302, 328, 340, 344, 354, 363, 379, 394, 411, 418], "meta": [0, 154, 201, 212, 291, 298, 305, 341, 344, 354, 440], "mpiaction": [0, 20, 204, 213, 258, 280, 388, 421, 440, 444, 447, 482], "parallel": [0, 71, 76, 150, 203, 204, 253, 258, 308, 388, 444, 445, 451, 478, 479, 480, 501, 507], "invokeasmast": [0, 150, 447], "broadcast": [0, 26, 77, 150, 204, 308, 401, 447], "gather": [0, 2, 3, 5, 18, 54, 150, 285, 339, 447, 502], "invok": [0, 1, 36, 38, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 150, 235, 239, 249, 318, 345, 412, 437, 441, 442, 444, 447, 480, 481, 507], "mpiflatten": [0, 150, 447], "mpiiter": [0, 150, 447], "invokehook": [0, 2, 20, 150, 235, 258, 378, 388, 415, 421, 447], "runact": [0, 150, 440, 447], "runactionsinseri": [0, 150, 440], "distributionact": [0, 150, 440], "mpiactionerror": [0, 150, 440], "distributestateact": [0, 150, 440, 447], "counter": [0, 77, 279, 282, 285, 334, 337, 343, 405, 406, 497], "unregist": [0, 279], "defineparamet": [0, 211, 225, 228, 235, 272, 275, 280, 488], "afterconstructionofassembli": [0, 272, 275, 280], "onprocesscoreload": [0, 211, 235, 280, 378, 394, 488], "defineflag": [0, 1, 280, 378, 391, 394, 501], "defineblueprintssect": [0, 280, 391], "defineset": [0, 56, 57, 211, 214, 225, 228, 229, 235, 241, 243, 261, 269, 272, 275, 276, 280, 364, 366, 367, 368, 369, 374, 376, 378, 394, 488], "definesettingsvalid": [0, 211, 214, 225, 228, 235, 272, 275, 280, 488], "defineguiwidget": [0, 280], "getoperatorclassfromruntyp": [0, 280], "defineparameterrenam": [0, 280, 378, 381, 394, 488], "userplugin": [0, 280, 394, 440, 482, 487, 501], "getnewpluginmanag": [0, 280, 440], "collectinterfacedescript": [0, 280, 440], "pluginerror": [0, 280, 440], "runlog": [0, 4, 27, 59, 210, 314, 372, 379, 392, 440, 445, 450, 482, 488, 503], "concatenatelog": [0, 363, 440], "raw": [0, 363, 437, 440, 447], "extra": [0, 1, 4, 31, 57, 286, 308, 338, 341, 363, 371, 440, 441, 444, 451, 501, 503], "debug": [0, 2, 20, 328, 363, 395, 440, 444, 451, 482, 487, 501, 503], "warningreport": [0, 363, 392, 440], "setverbos": [0, 363, 392, 440, 451], "getverbos": [0, 363, 440], "deduplicationfilt": [0, 363, 440], "filter": [0, 18, 20, 54, 152, 154, 308, 326, 330, 344, 358, 363, 399, 406, 411, 466, 503], "runlogg": [0, 363, 440], "fmt": [0, 363, 372, 395, 465], "allowstopdupl": [0, 363], "flush": [0, 363, 414, 482], "getduplicatesfilt": [0, 363], "nulllogg": [0, 363, 440], "addhandl": [0, 363], "createlogdir": [0, 363, 392, 440], "logfactori": [0, 363, 440], "k": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507], "class": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 29, 30, 31, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 213, 214, 217, 218, 222, 223, 224, 226, 228, 231, 232, 233, 235, 237, 238, 239, 242, 244, 246, 247, 249, 251, 253, 254, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 311, 312, 313, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 406, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 444, 446, 447, 449, 450, 451, 481, 482, 484, 487, 489, 490, 491, 492, 501, 504], "simpl": [1, 3, 6, 14, 30, 36, 69, 73, 78, 79, 85, 92, 103, 112, 113, 150, 151, 159, 181, 194, 213, 237, 238, 280, 282, 285, 291, 322, 327, 331, 339, 348, 352, 370, 391, 392, 394, 396, 414, 423, 428, 432, 436, 444, 447, 451, 454, 461, 477, 479, 482, 487, 488, 492, 493, 494, 501], "histor": [1, 3, 5, 6, 93, 305, 330, 331, 347, 363, 413, 444, 493, 501], "fun": [1, 218], "fact": [1, 328, 447, 492], "pattern": [1, 46, 54, 77, 164, 165, 213, 249, 308, 339, 354, 364, 433, 437, 444, 491, 497, 501], "mani": [1, 3, 7, 9, 18, 20, 33, 43, 46, 54, 59, 65, 103, 143, 151, 154, 162, 164, 165, 168, 199, 213, 225, 237, 242, 249, 253, 285, 303, 308, 314, 327, 328, 330, 338, 339, 341, 343, 344, 352, 364, 365, 378, 405, 406, 414, 432, 437, 443, 444, 449, 450, 452, 472, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 493, 494, 497, 498, 501, 503, 507], "wai": [1, 3, 5, 6, 20, 44, 46, 48, 54, 88, 103, 150, 151, 162, 164, 182, 203, 213, 237, 249, 280, 282, 285, 308, 315, 327, 328, 330, 339, 341, 344, 352, 359, 362, 363, 371, 387, 407, 408, 414, 441, 444, 448, 449, 451, 478, 479, 480, 482, 486, 489, 492, 495, 501, 504, 507], "what": [1, 3, 4, 5, 9, 14, 18, 30, 31, 88, 103, 151, 152, 154, 161, 165, 197, 204, 213, 218, 219, 242, 253, 260, 280, 282, 285, 290, 309, 328, 330, 336, 341, 344, 345, 352, 364, 376, 396, 403, 406, 408, 416, 437, 442, 443, 444, 445, 446, 447, 451, 479, 486, 487, 489, 490, 492, 501, 503], "made": [1, 3, 5, 6, 43, 45, 54, 84, 103, 151, 242, 249, 282, 285, 286, 287, 308, 314, 315, 328, 345, 378, 397, 400, 414, 432, 444, 447, 449, 451, 457, 479, 481, 482, 486, 488, 492, 493, 501], "heavi": [1, 60, 100, 152, 154, 285, 308, 328, 399, 411, 413, 478, 490, 497, 498, 499, 501], "e": [1, 3, 4, 5, 7, 8, 9, 20, 25, 31, 36, 46, 59, 76, 77, 78, 88, 92, 94, 95, 98, 141, 150, 151, 152, 153, 154, 159, 161, 162, 164, 165, 166, 174, 194, 199, 200, 201, 202, 203, 219, 225, 237, 238, 242, 249, 253, 280, 281, 282, 285, 286, 289, 290, 302, 305, 308, 312, 313, 315, 321, 327, 328, 330, 331, 332, 334, 336, 337, 338, 339, 340, 341, 343, 344, 363, 365, 370, 371, 379, 395, 399, 406, 407, 410, 411, 414, 437, 441, 443, 444, 446, 447, 450, 473, 478, 479, 480, 481, 482, 486, 488, 491, 492, 497, 498, 501, 504, 507], "g": [1, 3, 5, 7, 9, 20, 31, 36, 46, 59, 76, 77, 78, 79, 80, 81, 82, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 115, 132, 133, 134, 135, 136, 138, 139, 141, 150, 152, 153, 154, 159, 161, 162, 164, 166, 168, 174, 177, 183, 194, 199, 200, 201, 202, 203, 219, 225, 234, 237, 238, 249, 253, 258, 280, 282, 285, 286, 289, 290, 302, 305, 308, 315, 321, 327, 328, 330, 331, 332, 336, 337, 339, 341, 343, 344, 363, 371, 379, 395, 399, 406, 410, 411, 414, 443, 444, 446, 447, 450, 470, 473, 478, 479, 480, 481, 482, 486, 488, 489, 491, 492, 497, 498, 499, 501, 504, 507], "take": [1, 8, 18, 27, 33, 47, 55, 107, 132, 144, 150, 172, 201, 203, 204, 213, 218, 237, 238, 249, 280, 282, 285, 308, 328, 339, 341, 373, 395, 397, 407, 411, 414, 437, 446, 447, 448, 449, 450, 451, 479, 481, 486, 488, 489, 499, 501, 505], "bit": [1, 19, 32, 55, 161, 165, 172, 242, 280, 282, 285, 305, 308, 334, 403, 414, 447, 450, 475, 488, 492, 496, 502, 503], "effort": [1, 43, 285, 319, 327, 339, 407, 451, 479, 501], "refactor": [1, 289, 331, 441, 450, 484], "through": [1, 13, 31, 46, 68, 76, 112, 150, 151, 153, 154, 162, 166, 171, 176, 177, 178, 200, 201, 203, 204, 237, 242, 280, 282, 285, 302, 305, 308, 321, 327, 328, 330, 334, 336, 337, 338, 339, 341, 342, 343, 353, 358, 359, 371, 373, 387, 394, 395, 399, 407, 411, 423, 435, 437, 444, 445, 446, 447, 449, 450, 451, 478, 479, 480, 482, 486, 488, 492, 495, 496, 497, 499, 501, 503, 504, 507], "highest": [1, 215, 218, 219, 240, 249, 282, 347, 395, 466, 486, 497, 499, 501], "level": [1, 3, 4, 5, 25, 26, 31, 77, 78, 79, 154, 161, 164, 170, 172, 175, 199, 204, 218, 223, 238, 242, 244, 251, 258, 280, 285, 289, 290, 292, 296, 305, 308, 312, 314, 321, 327, 328, 332, 338, 344, 345, 347, 352, 359, 363, 365, 366, 378, 406, 444, 447, 449, 450, 466, 479, 482, 488, 489, 490, 491, 492, 497, 499, 501, 503], "abstract": [1, 22, 25, 37, 42, 46, 48, 65, 77, 138, 150, 154, 164, 165, 172, 174, 249, 257, 305, 307, 308, 318, 336, 338, 339, 344, 353, 372, 488], "happen": [1, 2, 46, 57, 143, 144, 150, 154, 211, 218, 219, 249, 253, 280, 285, 300, 308, 315, 327, 328, 341, 364, 444, 446, 447, 449, 451, 489, 501, 503], "mostli": [1, 3, 5, 6, 57, 136, 249, 280, 292, 308, 315, 365, 379, 392, 394, 410, 475, 479, 493], "subclass": [1, 9, 48, 55, 59, 65, 73, 77, 78, 144, 161, 164, 177, 202, 218, 226, 238, 249, 253, 256, 257, 279, 280, 282, 302, 305, 307, 308, 315, 327, 330, 336, 341, 343, 344, 345, 371, 379, 402, 414, 437, 442, 444, 446, 447, 482, 488, 501], "free": [1, 103, 161, 285, 352, 411, 413, 446, 484, 501], "adopt": [1, 345, 446], "throw": [1, 482], "awai": [1, 334], "start": [1, 3, 6, 9, 25, 77, 154, 164, 171, 203, 218, 237, 238, 242, 249, 253, 309, 327, 328, 337, 339, 348, 395, 396, 397, 405, 406, 407, 411, 413, 414, 432, 437, 443, 444, 445, 446, 448, 449, 450, 451, 457, 458, 459, 480, 482, 483, 487, 491, 492, 498, 499, 501, 503, 507], "scratch": [1, 76, 473, 486, 488, 492, 493, 501], "thei": [1, 4, 5, 33, 46, 55, 65, 76, 77, 78, 103, 124, 143, 150, 151, 154, 164, 171, 173, 174, 199, 201, 203, 204, 207, 213, 215, 219, 222, 235, 238, 242, 244, 249, 253, 264, 280, 282, 285, 286, 287, 292, 300, 302, 308, 309, 312, 328, 330, 332, 336, 338, 339, 340, 341, 343, 344, 345, 348, 352, 354, 359, 362, 364, 372, 373, 377, 378, 395, 397, 407, 414, 416, 429, 442, 443, 444, 446, 447, 449, 450, 451, 473, 479, 481, 482, 486, 488, 491, 492, 493, 497, 501, 503], "do": [1, 3, 4, 7, 14, 18, 19, 20, 26, 33, 43, 44, 45, 46, 48, 49, 57, 59, 63, 76, 77, 78, 103, 128, 150, 151, 152, 154, 161, 162, 164, 168, 199, 200, 213, 218, 219, 237, 242, 280, 282, 285, 308, 312, 315, 321, 327, 328, 330, 336, 338, 339, 340, 341, 343, 345, 362, 363, 372, 378, 385, 387, 388, 397, 400, 401, 406, 407, 408, 414, 420, 421, 429, 437, 441, 442, 444, 445, 446, 447, 449, 451, 466, 479, 480, 481, 486, 488, 489, 491, 492, 493, 499, 501, 503, 507], "wish": [1, 3, 4, 5, 174, 242, 286, 287, 437, 446, 486, 488], "For": [1, 3, 4, 5, 7, 8, 9, 18, 25, 43, 48, 54, 55, 59, 76, 77, 102, 103, 138, 144, 150, 151, 152, 162, 163, 164, 168, 174, 181, 203, 206, 218, 238, 249, 253, 280, 285, 287, 290, 291, 302, 303, 304, 305, 308, 309, 314, 315, 321, 327, 328, 330, 331, 334, 336, 338, 339, 341, 344, 345, 352, 359, 371, 395, 396, 403, 406, 407, 414, 416, 437, 441, 443, 444, 446, 447, 449, 450, 451, 458, 459, 475, 479, 486, 488, 489, 490, 491, 492, 493, 496, 497, 499, 501, 503, 504], "descript": [1, 19, 20, 22, 36, 38, 44, 59, 65, 69, 103, 113, 164, 165, 194, 286, 290, 308, 328, 341, 344, 371, 410, 412, 414, 442, 449, 450, 451, 458, 479, 482, 486, 488, 492, 496, 497, 498, 499, 501, 503, 506], "can": [1, 3, 4, 5, 6, 8, 9, 13, 15, 18, 20, 25, 31, 41, 43, 44, 45, 46, 47, 49, 54, 55, 57, 59, 60, 64, 65, 75, 76, 77, 78, 85, 88, 92, 103, 124, 128, 143, 150, 151, 154, 159, 161, 162, 164, 165, 166, 168, 171, 172, 174, 176, 178, 181, 186, 187, 189, 190, 191, 192, 193, 194, 196, 199, 200, 201, 202, 203, 204, 207, 210, 211, 212, 213, 214, 215, 217, 218, 219, 225, 226, 237, 238, 242, 244, 246, 249, 253, 256, 258, 263, 264, 268, 271, 280, 282, 285, 286, 289, 290, 291, 296, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 312, 315, 321, 323, 326, 327, 328, 329, 330, 331, 332, 334, 336, 338, 339, 341, 343, 344, 345, 348, 352, 353, 357, 359, 362, 363, 365, 371, 372, 373, 376, 378, 379, 385, 388, 390, 391, 392, 394, 395, 397, 399, 402, 403, 405, 406, 407, 410, 411, 414, 416, 422, 432, 434, 437, 441, 442, 443, 444, 446, 447, 449, 450, 451, 458, 459, 472, 473, 474, 475, 478, 479, 480, 481, 482, 484, 486, 488, 489, 491, 492, 493, 496, 501, 502, 503, 504, 505, 507], "program": [1, 115, 341, 342, 373, 448, 450, 451, 478, 479, 488, 491, 501], "actual": [1, 3, 5, 33, 44, 76, 77, 162, 164, 165, 203, 206, 211, 214, 218, 237, 238, 249, 285, 298, 301, 305, 308, 315, 331, 336, 337, 338, 339, 341, 344, 365, 372, 378, 396, 411, 437, 441, 442, 446, 451, 466, 475, 482, 488, 492, 493, 501], "appropri": [1, 3, 7, 19, 20, 25, 31, 46, 57, 75, 77, 153, 161, 164, 174, 177, 210, 227, 235, 259, 274, 280, 287, 288, 321, 327, 341, 353, 385, 388, 394, 437, 447, 458, 459, 479, 480, 488, 501, 507], "__main__": [1, 444, 446, 473, 475], "expect": [1, 3, 4, 5, 6, 30, 73, 78, 100, 148, 158, 161, 165, 168, 196, 216, 218, 219, 237, 242, 253, 263, 280, 282, 286, 291, 296, 302, 308, 314, 316, 321, 323, 328, 329, 353, 360, 363, 378, 387, 402, 408, 409, 414, 444, 446, 447, 452, 477, 486, 488, 489, 491, 494, 501, 504], "m": [1, 38, 65, 68, 69, 76, 79, 82, 91, 92, 94, 95, 96, 98, 100, 103, 111, 112, 128, 130, 131, 132, 135, 141, 164, 165, 170, 174, 339, 388, 395, 407, 414, 421, 442, 444, 448, 450, 451, 472, 480, 481, 488, 491, 493, 496, 497, 499, 503, 507], "myapp": [1, 442, 446, 488], "grab": [1, 13, 18, 151, 282, 365, 486, 503], "ridabl": 1, "develop": [1, 20, 46, 75, 143, 151, 218, 242, 280, 281, 285, 308, 314, 330, 345, 351, 373, 397, 407, 412, 441, 442, 443, 444, 446, 450, 451, 473, 478, 479, 488, 493, 501, 504], "dict": [1, 3, 5, 6, 20, 46, 48, 77, 78, 103, 154, 159, 165, 168, 199, 201, 218, 237, 238, 244, 253, 280, 281, 288, 290, 291, 302, 305, 308, 311, 315, 316, 321, 328, 329, 341, 343, 344, 349, 359, 370, 372, 395, 399, 403, 412, 413, 414, 432, 475, 491], "dictionari": [1, 3, 4, 5, 46, 77, 79, 80, 81, 82, 86, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 109, 110, 111, 112, 114, 115, 130, 131, 132, 135, 136, 139, 140, 141, 151, 152, 154, 159, 168, 194, 218, 237, 238, 240, 242, 244, 253, 280, 289, 290, 302, 308, 316, 321, 327, 328, 329, 341, 343, 344, 349, 359, 365, 370, 371, 395, 399, 403, 406, 413, 414, 432, 444, 449, 482, 490, 501, 503], "renam": [1, 46, 213, 280, 328, 342, 347, 348, 372, 414, 420, 450, 481, 484, 488], "render": [1, 3, 5, 21, 22, 25, 26, 44, 314, 441, 446, 448, 449], "It": [1, 3, 4, 5, 9, 14, 18, 19, 20, 30, 42, 46, 55, 76, 78, 80, 82, 84, 85, 88, 89, 91, 92, 94, 95, 96, 98, 100, 103, 104, 110, 111, 112, 115, 136, 139, 141, 150, 151, 152, 162, 165, 168, 174, 177, 178, 201, 203, 213, 217, 218, 237, 238, 242, 249, 253, 258, 280, 281, 282, 285, 289, 291, 308, 312, 314, 327, 328, 333, 334, 337, 338, 339, 340, 343, 344, 345, 352, 358, 363, 365, 371, 379, 405, 406, 407, 408, 410, 411, 413, 444, 445, 446, 449, 450, 468, 478, 479, 486, 488, 492, 495, 497, 500, 501, 503], "also": [1, 3, 4, 5, 8, 9, 32, 43, 46, 48, 60, 65, 76, 78, 85, 103, 150, 151, 154, 162, 164, 165, 171, 177, 178, 200, 201, 203, 211, 215, 217, 218, 235, 237, 242, 249, 251, 253, 263, 280, 282, 285, 291, 304, 305, 308, 319, 321, 328, 330, 331, 334, 338, 341, 343, 344, 348, 371, 386, 396, 403, 406, 407, 411, 414, 437, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 464, 465, 468, 471, 473, 478, 479, 480, 481, 484, 486, 488, 491, 492, 493, 495, 496, 497, 501, 503, 507], "perform": [1, 3, 5, 9, 18, 19, 45, 46, 49, 54, 59, 60, 64, 75, 76, 77, 86, 103, 150, 151, 164, 168, 201, 202, 210, 213, 217, 218, 225, 226, 227, 228, 229, 231, 232, 233, 234, 238, 249, 253, 280, 285, 286, 291, 308, 312, 314, 315, 327, 328, 330, 339, 343, 344, 353, 371, 378, 385, 406, 407, 410, 412, 444, 447, 450, 453, 456, 458, 463, 477, 478, 479, 481, 486, 488, 490, 491, 492, 494, 497, 501, 502, 503, 504], "result": [1, 3, 5, 9, 18, 20, 25, 36, 46, 55, 60, 77, 81, 103, 119, 122, 129, 143, 150, 162, 164, 166, 182, 196, 200, 213, 225, 237, 238, 244, 249, 251, 253, 279, 280, 285, 292, 295, 302, 308, 312, 314, 321, 327, 328, 343, 344, 371, 376, 397, 406, 408, 414, 432, 437, 444, 447, 449, 451, 466, 478, 479, 480, 484, 487, 488, 497, 501, 502, 503, 504, 507], "cach": [1, 18, 46, 103, 128, 200, 279, 282, 305, 308, 326, 327, 328, 353, 372, 408, 426, 491, 501], "somewhat": [1, 4, 42, 164, 249, 302, 308, 328, 338, 339, 451, 479, 488, 501], "expens": [1, 77, 279, 285, 308, 447], "detect": [1, 3, 5, 7, 9, 76, 279, 280, 300, 344, 414], "chang": [1, 3, 4, 5, 18, 46, 47, 76, 78, 103, 107, 150, 154, 172, 174, 211, 225, 235, 253, 280, 282, 285, 286, 291, 302, 305, 308, 311, 312, 313, 314, 315, 319, 323, 327, 328, 334, 336, 337, 339, 343, 344, 363, 371, 376, 378, 400, 401, 407, 412, 414, 432, 441, 442, 444, 445, 447, 450, 451, 463, 479, 480, 486, 488, 489, 491, 496, 497, 501, 504, 505, 507], "invalid": [1, 3, 55, 57, 77, 144, 145, 253, 285, 296, 300, 305, 308, 341, 353, 392, 394, 398, 423, 439, 451, 481, 482, 486, 501], "recomput": [1, 103, 237, 285, 302, 305, 308], "specifi": [1, 2, 3, 5, 6, 12, 13, 14, 15, 16, 21, 29, 30, 33, 34, 35, 38, 40, 41, 48, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 139, 141, 148, 149, 154, 156, 157, 158, 159, 160, 162, 165, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 203, 209, 210, 222, 223, 224, 231, 232, 233, 235, 237, 238, 239, 242, 244, 246, 247, 249, 251, 253, 256, 257, 258, 263, 264, 265, 266, 267, 268, 271, 278, 282, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 305, 308, 313, 315, 316, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 403, 410, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 449, 451, 459, 469, 473, 481, 482, 484, 486, 487, 493, 496, 497, 501, 503, 504], "pass": [1, 3, 5, 6, 8, 9, 18, 24, 30, 42, 46, 55, 57, 76, 77, 78, 150, 154, 165, 197, 213, 237, 249, 280, 282, 285, 286, 290, 308, 313, 321, 328, 334, 336, 339, 343, 344, 358, 364, 365, 371, 372, 373, 378, 389, 399, 400, 407, 435, 437, 442, 443, 446, 447, 451, 472, 475, 478, 491, 501], "pluginpath": 1, "These": [1, 4, 5, 18, 25, 33, 45, 47, 48, 59, 77, 107, 151, 154, 161, 162, 174, 199, 203, 205, 207, 215, 218, 222, 226, 238, 242, 244, 246, 249, 258, 280, 282, 290, 302, 303, 308, 315, 319, 327, 328, 330, 334, 341, 344, 368, 370, 371, 373, 379, 388, 396, 421, 429, 444, 447, 449, 450, 451, 478, 479, 480, 481, 488, 489, 492, 497, 501, 502, 503, 504, 505, 507], "mai": [1, 3, 4, 5, 18, 19, 25, 31, 32, 36, 42, 43, 45, 46, 48, 49, 54, 57, 59, 65, 68, 77, 78, 80, 103, 107, 150, 151, 152, 153, 154, 162, 164, 165, 172, 199, 202, 203, 207, 210, 213, 214, 218, 235, 238, 242, 244, 249, 253, 280, 282, 285, 286, 287, 290, 302, 305, 307, 308, 309, 312, 314, 315, 327, 328, 330, 331, 332, 336, 339, 341, 343, 344, 348, 354, 363, 364, 373, 385, 388, 392, 394, 403, 406, 411, 413, 437, 442, 444, 446, 449, 450, 451, 464, 479, 480, 481, 482, 486, 488, 491, 492, 493, 496, 497, 498, 501, 502, 503, 504, 507], "startup": [1, 203, 210], "full": [1, 3, 5, 13, 18, 27, 46, 48, 52, 54, 55, 58, 59, 78, 88, 162, 166, 199, 200, 203, 238, 249, 285, 290, 291, 304, 308, 309, 314, 315, 323, 326, 328, 337, 338, 339, 349, 357, 359, 360, 365, 372, 377, 396, 410, 411, 413, 416, 420, 444, 446, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 486, 487, 488, 492, 493, 496, 497, 499, 501, 503, 506, 507], "namespac": [1, 9, 38, 78, 124, 211, 280, 344, 419, 446, 450, 482, 488, 501], "There": [1, 3, 5, 20, 59, 77, 151, 164, 168, 183, 214, 223, 235, 242, 249, 285, 286, 291, 302, 314, 327, 328, 331, 341, 344, 349, 390, 406, 414, 443, 444, 447, 449, 450, 482, 488, 491, 492, 493, 495, 501, 503], "comma": [1, 450], "between": [1, 3, 4, 5, 6, 13, 18, 49, 63, 76, 77, 103, 159, 161, 162, 164, 165, 171, 174, 199, 201, 202, 203, 218, 219, 223, 237, 242, 249, 263, 280, 282, 285, 286, 291, 304, 308, 309, 319, 321, 322, 327, 328, 330, 334, 336, 337, 338, 339, 341, 344, 353, 371, 378, 395, 401, 405, 407, 411, 414, 439, 447, 449, 450, 465, 478, 479, 481, 482, 486, 488, 489, 490, 491, 492, 496, 497, 498, 501, 503, 504, 505], "individu": [1, 3, 5, 18, 45, 54, 59, 71, 77, 154, 203, 204, 218, 235, 242, 244, 285, 292, 308, 315, 326, 330, 353, 373, 397, 447, 450, 486, 487, 492, 501], "dot": [1, 339, 432, 448, 488], "repres": [1, 3, 5, 8, 45, 69, 76, 93, 103, 150, 152, 154, 161, 164, 168, 174, 199, 200, 201, 213, 218, 219, 237, 238, 242, 244, 249, 252, 253, 254, 263, 280, 281, 282, 285, 286, 288, 290, 303, 304, 305, 307, 308, 327, 328, 329, 332, 334, 336, 337, 338, 339, 341, 344, 347, 353, 354, 362, 364, 396, 403, 414, 444, 482, 483, 486, 488, 492, 493, 496, 497, 499, 501, 503], "stuff": [1, 5, 46, 286, 397, 401, 437, 447, 450, 451], "plugindir": 1, "pluginmod": 1, "plugincl": 1, "whatev": [1, 3, 4, 7, 54, 65, 213, 345, 397, 400, 407, 446, 447, 488, 501], "plugmod2": 1, "plugcls2": 1, "linux": [1, 27, 30, 479, 480, 482, 484, 488, 503, 507], "unix": [1, 488], "py": [1, 3, 6, 27, 118, 124, 154, 200, 205, 206, 211, 215, 218, 222, 308, 351, 352, 359, 388, 410, 421, 422, 424, 433, 435, 441, 444, 446, 447, 450, 451, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 484, 486, 492, 494, 501, 503], "meant": [1, 154, 280, 305, 327, 329, 365, 429, 443, 449, 451, 479, 493, 496], "taken": [1, 237, 238, 308, 337, 341, 345, 353, 437, 491, 493], "though": [1, 4, 100, 164, 199, 251, 285, 308, 340, 352, 396, 414, 432, 437, 444, 451, 481, 488, 501], "public": [1, 4, 55, 79, 130, 131, 132, 164, 174, 308, 414, 445, 451, 481], "idea": [1, 207, 296, 305, 329, 347, 437, 442, 446, 447, 450, 479, 488], "differ": [1, 3, 4, 5, 7, 13, 20, 27, 46, 49, 54, 76, 77, 78, 81, 103, 124, 161, 164, 166, 172, 174, 192, 196, 202, 203, 205, 207, 213, 223, 234, 235, 237, 238, 242, 249, 253, 256, 282, 285, 291, 292, 297, 305, 308, 309, 313, 315, 321, 327, 328, 330, 337, 338, 341, 348, 352, 359, 365, 378, 385, 396, 400, 403, 407, 408, 411, 414, 419, 432, 447, 449, 450, 451, 458, 479, 482, 486, 488, 489, 492, 493, 496, 497, 501, 503, 504, 505], "regular": [1, 38, 46, 164, 177, 178, 337, 339, 414, 433, 437, 488, 493, 501], "becaus": [1, 2, 3, 5, 13, 14, 18, 36, 55, 73, 76, 92, 103, 154, 159, 161, 162, 165, 172, 174, 196, 199, 201, 203, 215, 218, 225, 238, 240, 249, 253, 280, 282, 285, 286, 302, 304, 305, 308, 312, 314, 327, 328, 334, 336, 337, 338, 339, 344, 357, 362, 371, 387, 394, 395, 396, 401, 407, 408, 412, 413, 414, 437, 443, 446, 447, 449, 466, 479, 480, 486, 491, 501, 507], "As": [1, 3, 5, 46, 54, 57, 78, 134, 164, 226, 280, 285, 292, 305, 308, 315, 330, 341, 395, 396, 419, 444, 446, 451, 479, 485, 486, 489, 492, 493, 497, 501, 503], "restrict": [1, 54, 200, 280, 282, 308, 315, 328, 341, 501, 504], "flexibl": [1, 3, 203, 213, 280, 327, 466, 479, 481, 488, 501], "power": [1, 27, 55, 94, 95, 98, 138, 143, 164, 166, 176, 177, 199, 203, 210, 211, 215, 217, 218, 219, 235, 237, 249, 251, 253, 285, 308, 315, 327, 328, 341, 364, 365, 395, 396, 436, 437, 444, 446, 449, 474, 479, 482, 486, 488, 491, 492, 493, 496, 497, 499, 501, 502, 503, 506], "usual": [1, 3, 5, 33, 78, 102, 154, 158, 174, 199, 218, 249, 280, 285, 328, 330, 344, 395, 446, 450, 451, 481, 493, 501], "textual": [1, 473, 493], "screen": [1, 411, 480, 488, 507], "want": [1, 2, 3, 5, 7, 20, 31, 46, 54, 73, 77, 78, 103, 143, 161, 164, 165, 168, 172, 177, 211, 213, 218, 235, 237, 249, 253, 280, 282, 285, 290, 292, 302, 305, 308, 309, 327, 328, 341, 344, 345, 348, 352, 362, 363, 365, 395, 396, 403, 407, 411, 414, 422, 441, 444, 445, 446, 447, 449, 450, 451, 473, 479, 480, 486, 488, 491, 493, 501, 503, 504, 507], "handl": [2, 3, 5, 6, 13, 15, 25, 27, 42, 43, 46, 54, 59, 76, 77, 78, 91, 103, 150, 159, 161, 165, 204, 218, 223, 224, 235, 237, 280, 282, 285, 289, 290, 308, 316, 328, 330, 336, 339, 344, 352, 363, 371, 379, 395, 398, 406, 420, 433, 437, 479, 481, 482, 484, 486, 489, 493, 496, 501], "persist": [2, 3, 6, 330, 341, 444, 449, 479, 482], "static": [2, 3, 5, 8, 9, 13, 15, 20, 26, 42, 54, 57, 59, 69, 77, 81, 150, 199, 203, 204, 207, 214, 217, 218, 228, 235, 249, 269, 275, 280, 281, 282, 285, 302, 308, 315, 327, 333, 334, 336, 337, 339, 340, 344, 371, 373, 376, 378, 381, 391, 394, 396, 397, 446, 457, 478, 479, 484], "cmd": [2, 217, 218, 280, 388, 447], "bool": [2, 3, 5, 6, 24, 27, 46, 54, 65, 77, 103, 154, 165, 166, 174, 200, 203, 210, 213, 218, 235, 238, 249, 253, 280, 282, 285, 290, 291, 292, 302, 305, 308, 312, 313, 315, 321, 327, 328, 331, 333, 334, 336, 337, 339, 340, 343, 344, 362, 364, 365, 371, 372, 373, 391, 395, 397, 400, 407, 410, 411, 413, 414, 437, 438, 484], "certain": [2, 59, 151, 203, 237, 249, 280, 282, 285, 291, 308, 309, 319, 330, 344, 373, 379, 395, 446, 447, 449, 458, 479, 481, 488, 491, 492, 501, 503], "action": [2, 14, 38, 65, 69, 210, 258, 305, 321, 344, 373, 387, 397, 401, 412, 442, 444, 447, 449, 482], "memori": [2, 3, 4, 5, 6, 18, 20, 46, 76, 77, 151, 204, 213, 237, 249, 280, 308, 328, 339, 341, 406, 411, 413, 447, 482, 484, 493, 496, 499, 501], "profil": [2, 20, 46, 397, 413, 443, 445, 450, 480, 482, 491, 501, 507], "small": [2, 172, 186, 191, 328, 330, 467, 478, 479, 482, 488, 489, 497, 501], "enough": [2, 36, 42, 55, 138, 159, 164, 168, 204, 219, 223, 285, 308, 321, 405, 406, 450, 451, 479, 489, 492, 499, 503], "don": [2, 3, 9, 18, 77, 80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 139, 141, 152, 154, 161, 203, 207, 218, 247, 280, 285, 305, 308, 328, 359, 365, 405, 406, 407, 414, 425, 429, 442, 445, 447, 449, 472, 480, 486, 501, 503, 507], "undon": 2, "so": [2, 3, 4, 5, 6, 9, 18, 19, 20, 32, 36, 42, 43, 46, 48, 76, 77, 88, 103, 128, 143, 150, 151, 152, 154, 161, 165, 168, 174, 177, 201, 203, 213, 214, 218, 219, 237, 240, 242, 244, 246, 249, 256, 257, 280, 282, 285, 286, 289, 290, 291, 296, 300, 302, 303, 305, 308, 309, 312, 314, 315, 327, 328, 330, 334, 336, 337, 338, 339, 341, 343, 344, 345, 347, 348, 352, 363, 365, 372, 378, 379, 395, 403, 405, 406, 407, 408, 411, 413, 414, 437, 441, 443, 444, 446, 447, 448, 449, 450, 451, 457, 468, 475, 478, 479, 480, 481, 482, 486, 487, 488, 489, 490, 491, 492, 497, 499, 501, 503, 506, 507], "r": [2, 3, 5, 6, 7, 9, 10, 14, 18, 19, 20, 24, 25, 26, 27, 31, 37, 42, 43, 44, 46, 57, 77, 91, 92, 114, 141, 150, 164, 165, 170, 174, 195, 196, 200, 203, 210, 214, 217, 218, 219, 223, 235, 237, 242, 249, 251, 253, 254, 256, 257, 258, 260, 280, 281, 285, 299, 304, 308, 309, 312, 315, 316, 318, 323, 327, 328, 329, 332, 337, 340, 341, 343, 351, 359, 385, 388, 394, 395, 407, 411, 414, 444, 447, 449, 450, 457, 458, 459, 462, 465, 470, 475, 476, 477, 479, 481, 482, 486, 488, 491, 492, 493, 494, 501, 502, 503], "stage": [2, 24, 235, 260, 280, 449], "diagram": [2, 24, 154, 237, 302, 411, 441, 449, 482], "come": [2, 4, 43, 64, 76, 78, 103, 164, 171, 176, 199, 200, 202, 204, 211, 235, 249, 280, 285, 329, 341, 343, 344, 358, 389, 395, 403, 414, 437, 442, 444, 446, 451, 454, 461, 466, 475, 477, 479, 482, 486, 488, 489, 491, 492, 494, 501], "togeth": [2, 9, 44, 150, 200, 237, 238, 242, 285, 290, 332, 338, 345, 362, 437, 446, 449, 478, 488, 503], "end": [2, 3, 5, 6, 12, 18, 19, 20, 21, 24, 25, 44, 76, 77, 103, 151, 162, 164, 165, 168, 203, 251, 253, 260, 280, 289, 314, 338, 363, 385, 395, 396, 414, 444, 449, 451, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 489, 491, 492, 497, 501, 503, 505], "section": [2, 3, 5, 21, 24, 25, 90, 135, 136, 151, 154, 162, 164, 166, 170, 172, 173, 175, 181, 194, 196, 198, 199, 200, 201, 211, 212, 223, 235, 237, 238, 242, 249, 251, 253, 258, 260, 263, 264, 265, 280, 285, 290, 291, 296, 299, 308, 314, 328, 341, 349, 411, 413, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 458, 461, 462, 465, 470, 471, 477, 479, 480, 481, 482, 485, 486, 492, 493, 494, 496, 497, 498, 503, 504, 505, 507], "creat": [2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 24, 25, 27, 29, 30, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 60, 61, 65, 69, 73, 74, 76, 77, 103, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 168, 170, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 202, 203, 209, 210, 217, 218, 222, 223, 224, 231, 232, 233, 237, 238, 244, 246, 247, 251, 253, 254, 256, 257, 260, 263, 264, 265, 266, 267, 268, 271, 278, 280, 282, 285, 286, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 308, 315, 321, 322, 323, 324, 325, 326, 327, 328, 331, 336, 338, 339, 341, 342, 343, 344, 345, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 371, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 443, 444, 445, 446, 447, 449, 454, 461, 465, 466, 467, 473, 474, 477, 479, 480, 482, 484, 486, 487, 491, 492, 493, 494, 501, 503, 505, 506, 507], "graph": [2, 25, 413, 449, 465], "across": [2, 46, 55, 90, 161, 164, 170, 172, 175, 308, 328, 341, 348, 362, 378, 389, 405, 410, 411, 447, 479, 481, 490, 491, 492, 496, 501, 502, 503], "timenodegrouppattern": [2, 3, 5], "versionmajor": [2, 3, 5], "versionminor": [2, 3, 5], "open": [2, 3, 5, 6, 44, 59, 76, 164, 165, 234, 328, 395, 400, 401, 441, 442, 443, 450, 475, 479, 480, 484, 485, 486, 492, 501, 503, 507], "isopen": [2, 3, 5], "writesystemattribut": [2, 3, 5, 14], "grablocalcommithash": [2, 3, 5], "splitdatabas": [2, 3, 5], "filenam": [2, 3, 5, 6, 73, 77, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 194, 203, 364, 390, 400, 410, 411, 449], "loadc": [2, 3, 5, 486], "loadblueprint": [2, 3, 5], "loadgeometri": [2, 3, 5], "writeinputstodb": [2, 3, 5], "readinputsfromdb": [2, 3, 5], "mergehistori": [2, 3, 5], "gentimestepgroup": [2, 3, 5], "getlayout": [2, 3, 5], "gentimestep": [2, 3, 5], "genauxiliarydata": [2, 3, 5], "getauxiliarydatapath": [2, 3, 5], "kei": [2, 3, 5, 18, 25, 46, 77, 103, 143, 154, 159, 165, 168, 196, 199, 201, 218, 237, 238, 241, 242, 244, 253, 264, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 302, 305, 307, 308, 311, 321, 328, 341, 343, 354, 359, 364, 365, 370, 395, 396, 399, 403, 411, 413, 414, 432, 449, 457, 465, 466, 480, 486, 490, 491, 496, 497, 499, 501, 507], "geth5group": [2, 3, 5], "hastimestep": [2, 3, 5], "writetodb": [2, 3, 5, 9, 486], "synctosharedfold": [2, 3, 5], "gethistorybyloc": [2, 3, 5], "gethistoriesbyloc": [2, 3, 5], "gethistori": [2, 3, 5, 6, 503], "initdb": [2, 3, 6, 486], "writedbeverynod": [2, 3, 6], "closedb": [2, 3, 6], "preprestartrun": [2, 3, 6], "loadstat": [2, 3, 6, 202, 203], "comparedb3": [2, 3, 12], "outputwrit": [2, 3, 4], "diffresult": [2, 3, 4], "geth5groupnam": [2, 3, 5], "packspecialdata": [2, 3, 5, 344, 503], "unpackspecialdata": [2, 3, 5, 344, 503], "collectblocknumberdens": [2, 3, 5], "jaggedarrai": [2, 3, 5, 15, 484], "layout": [2, 3, 5, 16, 280, 286, 292, 314, 327, 338, 349, 396, 449, 501, 503], "replacenoneswithnonsens": [2, 3, 9], "replacenonsensewithnon": [2, 3, 9], "typedef": [2, 3], "group": [2, 3, 4, 5, 9, 21, 22, 25, 33, 43, 46, 151, 152, 164, 166, 168, 172, 173, 174, 177, 178, 181, 183, 192, 196, 199, 200, 201, 203, 223, 235, 237, 238, 240, 242, 249, 251, 253, 263, 266, 280, 285, 288, 289, 296, 305, 308, 315, 327, 328, 339, 344, 362, 399, 413, 444, 447, 449, 450, 462, 465, 476, 477, 482, 484, 486, 493, 494, 497, 499, 501, 503], "imag": [2, 21, 22, 23, 25, 307, 314, 327, 397, 411, 413, 429, 445, 448, 466, 482], "html": [2, 20, 21, 22, 25, 30, 46, 69, 82, 100, 164, 172, 304, 344, 411, 438, 441, 445, 479, 495, 501], "htmlfile": [2, 21, 23], "tag": [2, 21, 23, 25, 154, 249, 315, 437, 451, 501], "head": [2, 21, 23, 25, 260, 328, 449, 479, 501], "bodi": [2, 21, 23, 65, 150, 478], "img": [2, 21, 23, 25], "b": [2, 21, 23, 42, 48, 54, 81, 92, 94, 95, 98, 115, 135, 136, 152, 154, 161, 174, 183, 199, 200, 218, 219, 234, 237, 242, 249, 281, 282, 285, 298, 300, 308, 313, 327, 328, 330, 341, 345, 350, 354, 359, 407, 437, 439, 444, 447, 463, 465, 466, 470, 474, 481, 482, 486, 488, 491, 492, 493, 497, 499, 501, 502, 504], "p": [2, 3, 21, 23, 25, 79, 80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 102, 103, 104, 110, 111, 112, 114, 115, 119, 135, 139, 141, 152, 162, 168, 170, 174, 175, 285, 304, 305, 308, 313, 327, 341, 343, 359, 405, 414, 437, 442, 447, 449, 465, 466, 474, 482, 486, 488, 492, 496, 497, 499, 501, 503], "A": [2, 3, 5, 8, 9, 19, 21, 22, 23, 25, 26, 27, 31, 38, 42, 43, 45, 46, 54, 55, 57, 65, 69, 77, 78, 79, 82, 89, 92, 103, 104, 107, 111, 124, 136, 137, 138, 144, 150, 151, 152, 153, 154, 159, 162, 164, 165, 166, 170, 172, 174, 197, 199, 200, 201, 203, 210, 213, 215, 217, 218, 219, 223, 234, 237, 238, 242, 244, 249, 253, 280, 281, 282, 285, 287, 288, 289, 290, 292, 294, 297, 298, 300, 302, 303, 304, 305, 307, 308, 312, 315, 316, 321, 327, 328, 329, 330, 331, 337, 338, 339, 340, 343, 344, 345, 347, 348, 350, 354, 362, 363, 365, 371, 373, 378, 385, 388, 391, 392, 394, 395, 396, 403, 407, 411, 413, 414, 419, 437, 439, 441, 444, 446, 449, 450, 451, 465, 473, 475, 478, 479, 481, 486, 487, 488, 490, 492, 493, 496, 497, 498, 501, 502, 503], "titl": [2, 21, 22, 23, 25, 45, 46, 54, 55, 213, 271, 365, 395, 411, 413, 442, 449, 464, 465, 486, 489, 490, 491, 501], "h1": [2, 21, 23, 25], "h2": [2, 21, 23, 25, 83], "h3": [2, 21, 23], "h4": [2, 21, 23, 25], "ul": [2, 21, 23], "li": [2, 21, 23, 152, 174, 253, 303, 308, 328, 437], "style": [2, 21, 23, 46, 54, 103, 146, 154, 165, 280, 328, 341, 343, 349, 365, 372, 450, 479, 482, 501], "div": [2, 21, 23, 25, 449], "caption": [2, 21, 23, 25, 260, 449], "tbodi": [2, 21, 23], "thead": [2, 21, 23], "tr": [2, 21, 23], "th": [2, 9, 21, 23, 25, 132, 152, 174, 203, 308, 339, 414, 444, 488, 497, 499, 501, 504], "td": [2, 21, 23, 81, 114], "span": [2, 21, 23, 334, 363], "footer": [2, 21, 23], "link": [2, 21, 23, 25, 103, 162, 203, 218, 285, 289, 292, 298, 302, 305, 308, 311, 312, 315, 322, 328, 338, 353, 432, 444, 449, 450, 451, 478, 481, 492, 497, 502], "encode64": [2, 21, 23, 25], "writestandardreporttempl": [2, 21, 23], "newreportutil": [2, 21, 449], "insertblueprintcont": [2, 21, 24], "insertgeneralreportcont": [2, 21, 24], "comprehensivebolcont": [2, 21, 24], "insertdesigncont": [2, 21, 24], "insertblockdesignreport": [2, 21, 24], "insertcoredesignreport": [2, 21, 24], "insertendoflifecont": [2, 21, 24], "insertblockdiagram": [2, 21, 24], "insertmetat": [2, 21, 24], "insertsettingsdata": [2, 21, 24], "getpindesignt": [2, 21, 24], "insertareafractionsreport": [2, 21, 24], "createdimensionreport": [2, 21, 24], "insertcoreandassemblymap": [2, 21, 24], "newreport": [2, 21, 24, 449, 482], "reportcont": [2, 21, 24, 25, 260, 280, 445], "reportnod": [2, 21, 25], "timeseri": [2, 21, 25, 29, 260, 445], "reportstag": [2, 21, 25, 260, 280, 449], "reportinterfac": [2, 21, 27, 46, 444], "reportingutil": [2, 21], "writewelcomehead": [2, 21, 27], "getnodenam": [2, 21, 27, 30], "getsysteminfo": [2, 21, 27, 30], "getinterfacestacksummari": [2, 21, 27], "writetightcouplingconvergencesummari": [2, 21, 27], "writeassemblymasssummari": [2, 21, 27], "writecyclesummari": [2, 21, 27], "setneutronbalancesreport": [2, 21, 27], "summarizepindesign": [2, 21, 27], "summarizepowerpeak": [2, 21, 27], "summarizepow": [2, 21, 27], "makecoredesignreport": [2, 21, 27], "makeblockdesignreport": [2, 21, 27], "makecoreandassemblymap": [2, 21, 27], "test_historytrack": [2, 32], "runtutorialnotebook": [2, 32, 33], "testhistorytrack": [2, 32, 33], "testhistorytrackernomodel": [2, 32, 33], "test_memoryprofil": [2, 32], "testmemoryprofil": [2, 32, 34], "klasscountertest": [2, 32, 34], "test_snapshot": [2, 32], "mockreactorparam": [2, 32, 35, 248, 250, 251], "mockreactor": [2, 32, 35, 163, 195, 196, 211, 248, 250, 251, 270, 271], "testsnapshotinterfac": [2, 32, 35], "dumper": [2, 36, 43, 44, 289], "visfiledump": [2, 36, 37, 43, 44], "visfileentrypoint": [2, 36, 38], "vtkmesh": [2, 36, 40, 42], "createreactorblockmesh": [2, 36, 42], "createreactorassemmesh": [2, 36, 42], "createblockmesh": [2, 36, 42], "createassemmesh": [2, 36, 42], "vtk": [2, 36, 42, 480, 481, 488, 507], "limit": [2, 3, 5, 36, 103, 154, 218, 225, 249, 253, 280, 285, 286, 309, 339, 340, 403, 437, 446, 450, 479, 481, 488, 492, 496, 497, 498, 501, 504, 505], "vtkdumper": [2, 36, 43], "xdmf": [2, 36, 41, 480, 481, 507], "xdmfdumper": [2, 36, 44], "tracker": [2, 33, 77, 413, 479], "add": [2, 4, 20, 21, 24, 25, 26, 42, 45, 46, 54, 55, 57, 65, 77, 103, 150, 152, 154, 170, 172, 175, 203, 207, 242, 249, 251, 260, 280, 281, 282, 285, 302, 308, 314, 315, 321, 323, 328, 329, 338, 341, 343, 344, 345, 347, 348, 352, 358, 362, 363, 365, 373, 379, 394, 395, 397, 410, 411, 413, 437, 441, 442, 443, 444, 447, 449, 450, 465, 475, 480, 481, 482, 484, 486, 488, 491, 493, 498, 501, 507], "eol": [2, 3, 31, 77, 203, 207, 217, 280, 444, 449, 486, 501], "track": [2, 3, 4, 6, 20, 43, 46, 152, 162, 166, 218, 242, 249, 260, 282, 285, 308, 315, 328, 343, 365, 392, 437, 441, 451, 481, 482, 501], "adddetailassembliesbol": [2, 18], "addallfuelassem": [2, 18], "adddetailassemsbyassemnum": [2, 18], "gettrackedparam": [2, 18], "adddetailassembli": [2, 18], "getdetailassembli": [2, 18], "getdetailblock": [2, 18], "filtertimeindic": [2, 18], "writeassemhistori": [2, 18], "preloadblockhistoryv": [2, 18], "unloadblockhistoryv": [2, 18], "getblockhistoryv": [2, 18], "gettimestep": [2, 18], "cleanarmifil": [2, 19], "cleanlastcyclefil": [2, 19], "displaymemoryusag": [2, 20], "checkforduplicateobjectsonarmimodel": [2, 20], "getreferr": [2, 20], "countobject": [2, 20], "minprocessmemoryinmb": [2, 20, 499], "maxprocessmemoryinmb": [2, 20, 499], "printusag": [2, 20], "activatedefaultsnapshot": [2, 31], "respons": [3, 9, 46, 54, 150, 253, 280, 287, 291, 303, 305, 328, 345, 451, 486, 488, 501], "disk": [3, 46, 164, 203, 213, 487], "progress": [3, 9, 213, 444, 479, 503], "period": [3, 76, 90, 152, 203, 281, 290, 331, 353, 450, 465, 473, 492, 497, 499, 501], "primari": [3, 6, 59, 77, 150, 181, 203, 204, 223, 280, 281, 312, 328, 330, 444, 446, 447, 450, 486, 488, 491, 496, 499, 501, 503], "output": [3, 4, 5, 19, 20, 43, 45, 46, 60, 64, 65, 67, 77, 143, 144, 172, 174, 187, 203, 213, 218, 249, 271, 285, 290, 308, 314, 315, 327, 336, 339, 349, 365, 377, 379, 392, 400, 401, 406, 408, 414, 420, 426, 432, 437, 441, 444, 448, 449, 479, 481, 482, 487, 491, 493, 495, 500, 501], "follow": [3, 4, 9, 18, 31, 143, 151, 162, 164, 200, 202, 203, 211, 218, 225, 242, 244, 249, 280, 305, 308, 314, 321, 327, 328, 330, 334, 337, 345, 372, 378, 406, 407, 410, 412, 414, 437, 441, 442, 444, 446, 447, 449, 450, 451, 479, 480, 486, 487, 488, 490, 492, 493, 495, 501, 502, 503, 504, 505, 507], "analysi": [3, 5, 18, 20, 31, 46, 54, 78, 164, 175, 202, 203, 211, 213, 225, 234, 242, 280, 362, 396, 408, 413, 444, 446, 449, 458, 475, 478, 486, 488, 491, 492, 493, 501, 502], "restart": [3, 5, 6, 14, 19, 207, 217, 218, 249, 291, 395, 397, 444, 482, 503], "select": [3, 5, 36, 77, 164, 219, 237, 238, 242, 271, 291, 344, 364, 395, 406, 407, 411, 423, 432, 466, 479, 486, 490, 501], "relat": [3, 5, 14, 32, 43, 45, 49, 54, 59, 76, 138, 152, 168, 190, 199, 211, 226, 229, 237, 243, 261, 269, 276, 285, 308, 327, 341, 343, 344, 345, 367, 368, 369, 397, 407, 410, 446, 481, 483, 488, 491, 496, 497, 501, 505], "associ": [3, 5, 16, 25, 43, 46, 48, 62, 138, 143, 150, 152, 163, 211, 235, 242, 287, 308, 328, 329, 332, 338, 339, 341, 343, 344, 345, 373, 395, 444, 446, 473, 488, 496, 501, 503], "repeat": [3, 166, 173, 217, 218, 223, 280, 314, 315, 328, 339, 398, 407, 411, 437, 445, 449, 479, 481, 501, 504], "yourself": [3, 88, 151, 411, 450], "dry": [3, 5, 79, 501], "practic": [3, 5, 88, 161, 280, 305, 321, 344, 345, 373, 403, 443, 445, 447, 451, 479, 488, 501], "share": [3, 31, 168, 197, 203, 204, 213, 242, 282, 319, 341, 345, 378, 396, 447, 492, 493, 501], "major": [3, 203, 211, 286, 339, 341, 413, 444, 449, 451, 479], "you": [3, 5, 6, 7, 18, 19, 20, 31, 38, 46, 54, 55, 57, 65, 69, 77, 88, 101, 103, 134, 151, 152, 153, 154, 161, 162, 164, 168, 171, 172, 177, 190, 197, 199, 203, 211, 213, 218, 237, 238, 244, 249, 280, 282, 285, 290, 292, 296, 302, 305, 308, 309, 328, 329, 337, 338, 345, 348, 352, 363, 365, 373, 388, 395, 396, 405, 407, 410, 411, 412, 413, 414, 421, 437, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 472, 473, 474, 477, 479, 480, 486, 487, 488, 490, 491, 492, 493, 494, 500, 501, 502, 503, 504, 507], "1": [3, 9, 13, 14, 20, 25, 33, 42, 48, 53, 55, 64, 69, 73, 76, 77, 79, 80, 81, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 107, 109, 110, 111, 112, 115, 119, 124, 132, 134, 135, 136, 138, 139, 140, 141, 145, 146, 150, 152, 154, 158, 162, 165, 166, 168, 171, 172, 173, 174, 178, 181, 183, 186, 191, 196, 199, 203, 210, 218, 219, 234, 235, 237, 238, 244, 249, 251, 253, 258, 280, 282, 285, 290, 294, 297, 298, 300, 303, 304, 305, 307, 308, 311, 312, 314, 315, 319, 321, 323, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 344, 349, 351, 352, 353, 354, 362, 371, 372, 373, 387, 394, 395, 396, 397, 399, 403, 405, 406, 407, 412, 413, 414, 416, 422, 436, 437, 444, 449, 450, 451, 457, 458, 459, 465, 467, 468, 469, 472, 473, 475, 479, 485, 488, 489, 490, 491, 492, 493, 496, 497, 498, 499, 501, 504, 505], "origin": [3, 4, 5, 8, 13, 38, 44, 46, 54, 150, 151, 153, 158, 164, 189, 190, 201, 203, 204, 235, 237, 247, 263, 285, 290, 302, 308, 311, 315, 321, 323, 326, 327, 328, 330, 334, 337, 338, 372, 376, 395, 396, 400, 405, 447, 451, 473, 479, 482, 488, 492, 493, 497, 498, 501, 503], "were": [3, 4, 5, 54, 76, 150, 164, 204, 205, 215, 218, 223, 242, 280, 285, 292, 305, 308, 319, 327, 328, 329, 330, 341, 345, 379, 444, 449, 450, 479, 481, 482, 483, 486, 488, 493, 501, 503], "sql": [3, 77], "2": [3, 4, 9, 13, 20, 25, 33, 35, 53, 55, 76, 77, 82, 83, 89, 91, 92, 94, 95, 98, 103, 107, 109, 111, 112, 122, 124, 132, 134, 135, 136, 138, 145, 150, 151, 152, 153, 154, 162, 166, 170, 171, 174, 177, 178, 187, 199, 200, 210, 218, 219, 234, 235, 237, 238, 244, 247, 249, 285, 290, 298, 302, 303, 304, 305, 308, 314, 315, 319, 321, 323, 328, 330, 331, 332, 334, 337, 338, 339, 340, 341, 344, 349, 351, 352, 353, 354, 359, 362, 373, 388, 395, 396, 399, 405, 406, 407, 412, 413, 414, 416, 421, 422, 433, 436, 437, 439, 444, 449, 450, 457, 459, 465, 466, 467, 469, 470, 472, 474, 475, 479, 485, 486, 488, 489, 490, 491, 492, 493, 496, 497, 498, 499, 501, 503, 504], "storag": [3, 6, 22, 76, 280, 338, 341, 348, 358, 413, 501], "wa": [3, 4, 5, 6, 36, 76, 79, 91, 103, 150, 154, 158, 164, 165, 168, 183, 186, 190, 191, 196, 203, 218, 219, 235, 253, 280, 285, 286, 292, 305, 308, 314, 328, 330, 337, 338, 339, 347, 372, 373, 379, 390, 397, 407, 410, 437, 439, 449, 450, 451, 473, 479, 481, 482, 483, 486, 488, 491, 492, 493, 496, 501, 502, 503], "hdf5": [3, 4, 5, 8, 10, 33, 44, 76, 344, 403, 481, 484, 488, 491, 503], "requir": [3, 13, 19, 30, 31, 33, 36, 38, 44, 48, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 103, 150, 153, 154, 162, 199, 203, 210, 213, 218, 223, 237, 238, 239, 242, 246, 249, 253, 280, 281, 282, 285, 287, 289, 290, 291, 296, 304, 308, 309, 315, 316, 319, 328, 330, 332, 333, 339, 341, 344, 349, 357, 362, 370, 371, 377, 378, 385, 388, 394, 401, 405, 408, 437, 441, 442, 443, 447, 449, 450, 475, 478, 480, 481, 482, 483, 488, 489, 490, 492, 493, 496, 499, 501, 506, 507], "less": [3, 48, 103, 154, 162, 165, 166, 203, 219, 285, 304, 305, 314, 328, 331, 336, 397, 405, 406, 407, 413, 414, 437, 449, 450, 481, 482, 488, 491, 501], "extern": [3, 77, 79, 168, 174, 203, 213, 217, 237, 238, 249, 271, 280, 328, 399, 407, 444, 446, 450, 478, 479, 482, 488, 497, 501, 503], "infrastructur": [3, 280, 443, 445, 479], "howev": [3, 5, 7, 8, 9, 48, 77, 151, 194, 237, 285, 291, 302, 308, 315, 328, 330, 336, 341, 344, 352, 388, 403, 414, 446, 448, 449, 450, 486, 488, 492, 501], "did": [3, 4, 305, 308, 338, 437, 481, 493], "ghost": 3, "could": [3, 4, 5, 36, 46, 48, 54, 55, 77, 103, 151, 159, 161, 162, 194, 197, 200, 203, 211, 235, 238, 242, 249, 253, 285, 286, 291, 305, 328, 340, 341, 344, 371, 395, 405, 406, 407, 408, 410, 411, 437, 449, 451, 479, 482, 486, 488, 491, 493, 496, 497, 501, 503], "long": [3, 5, 31, 38, 65, 69, 103, 172, 203, 280, 285, 308, 337, 395, 396, 397, 414, 432, 442, 449, 451, 479, 488], "dimens": [3, 4, 5, 8, 24, 27, 48, 55, 77, 91, 96, 103, 166, 234, 237, 282, 285, 286, 289, 290, 296, 302, 303, 305, 307, 308, 319, 321, 334, 339, 344, 351, 353, 385, 396, 444, 469, 478, 481, 482, 486, 492, 497, 501, 502, 505], "consist": [3, 46, 80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 139, 141, 150, 154, 158, 164, 165, 168, 170, 172, 175, 183, 199, 211, 213, 237, 253, 282, 285, 291, 308, 314, 321, 328, 336, 352, 354, 378, 396, 414, 423, 437, 447, 450, 478, 479, 481, 482, 488, 492, 497, 501], "inconveni": 3, "prone": [3, 309, 330, 331, 345, 479], "kept": [3, 103, 330], "schema": [3, 238, 280, 296, 364, 370, 371, 376], "permit": [3, 5, 9, 282, 308, 403, 481], "entir": [3, 5, 77, 103, 165, 203, 237, 280, 285, 287, 290, 308, 312, 328, 331, 348, 365, 400, 410, 414, 416, 437, 450, 451, 459, 492, 493, 499, 501, 503], "written": [3, 4, 5, 6, 8, 14, 18, 43, 44, 46, 54, 57, 164, 165, 169, 171, 173, 174, 176, 177, 178, 182, 183, 187, 189, 190, 210, 299, 338, 344, 358, 365, 411, 444, 449, 450, 451, 479, 481, 482, 486, 493, 501], "recov": [3, 9, 64, 321, 503], "just": [3, 5, 7, 9, 18, 20, 32, 44, 45, 48, 57, 77, 78, 103, 112, 114, 143, 150, 151, 153, 161, 162, 164, 197, 204, 207, 215, 238, 249, 280, 282, 285, 286, 290, 300, 302, 305, 308, 321, 327, 328, 336, 338, 339, 341, 352, 360, 363, 365, 392, 394, 395, 405, 406, 407, 411, 414, 428, 435, 437, 442, 446, 447, 449, 450, 451, 468, 479, 482, 486, 488, 490, 491, 492, 493, 501, 502, 503, 504], "improv": [3, 43, 46, 161, 280, 285, 330, 481, 482, 485, 501, 504], "strategi": [3, 44], "larg": [3, 13, 77, 84, 143, 219, 235, 238, 246, 280, 308, 309, 327, 328, 359, 378, 395, 401, 402, 405, 411, 444, 447, 450, 479, 481, 488, 492, 496, 501, 502], "attribut": [3, 4, 5, 8, 9, 23, 25, 54, 65, 77, 103, 150, 152, 154, 161, 166, 168, 174, 199, 200, 201, 237, 238, 242, 249, 258, 263, 264, 280, 281, 286, 287, 288, 289, 290, 291, 292, 305, 308, 315, 326, 327, 328, 329, 332, 341, 343, 344, 345, 358, 370, 379, 410, 412, 414, 428, 436, 437, 442, 444, 447, 450, 481, 482, 483, 486, 487, 488, 501, 503], "special": [3, 4, 5, 9, 31, 45, 78, 96, 103, 154, 161, 162, 165, 172, 203, 218, 237, 238, 268, 280, 289, 304, 308, 328, 341, 344, 363, 388, 397, 410, 414, 437, 441, 444, 449, 451, 478, 481, 486, 488, 492, 503], "string": [3, 5, 7, 25, 30, 32, 38, 55, 65, 69, 77, 78, 154, 165, 171, 172, 176, 177, 178, 194, 200, 203, 204, 210, 213, 218, 238, 253, 260, 280, 282, 285, 287, 288, 289, 290, 291, 292, 297, 302, 305, 308, 321, 328, 330, 331, 336, 337, 341, 344, 351, 356, 363, 365, 370, 371, 372, 376, 378, 392, 395, 396, 397, 399, 406, 407, 409, 411, 412, 414, 432, 437, 447, 450, 451, 481, 492, 496, 497, 501, 503], "symbol": [3, 103, 151, 152, 153, 154, 156, 399], "c00n00": [3, 5, 486], "attr": [3, 4, 5, 23, 305, 308, 344, 345, 410], "5_linkeddim": 3, "support": [3, 5, 8, 9, 18, 36, 42, 44, 46, 75, 77, 78, 85, 151, 154, 158, 161, 162, 164, 204, 205, 237, 242, 280, 285, 292, 315, 321, 334, 341, 344, 347, 349, 353, 363, 373, 392, 396, 403, 406, 414, 437, 444, 450, 451, 479, 481, 482, 484, 488, 493, 501, 503, 504, 505], "copi": [3, 5, 14, 31, 46, 77, 103, 150, 170, 172, 175, 203, 213, 226, 238, 240, 244, 249, 263, 271, 285, 290, 308, 327, 328, 338, 362, 365, 376, 395, 400, 406, 408, 410, 420, 441, 446, 450, 479, 481, 482, 483, 491, 492, 493, 501], "node": [3, 5, 6, 9, 14, 18, 19, 20, 25, 26, 27, 31, 43, 59, 73, 76, 77, 150, 163, 174, 189, 200, 203, 204, 207, 210, 218, 235, 237, 249, 251, 253, 256, 282, 289, 291, 308, 328, 372, 388, 394, 395, 398, 401, 411, 413, 444, 447, 449, 478, 484, 486, 488, 497, 501, 503, 504, 506], "dataset": [3, 4, 5, 8, 44, 189, 503], "anoth": [3, 5, 31, 42, 46, 54, 55, 77, 132, 136, 143, 159, 162, 182, 194, 201, 218, 238, 249, 251, 280, 302, 305, 308, 309, 314, 315, 322, 327, 338, 339, 344, 373, 395, 407, 413, 414, 425, 437, 447, 449, 450, 451, 475, 479, 480, 484, 491, 498, 501, 505, 507], "refer": [3, 4, 5, 25, 46, 78, 79, 80, 82, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 110, 111, 115, 132, 135, 136, 138, 139, 141, 150, 151, 152, 153, 154, 165, 173, 194, 218, 238, 247, 282, 285, 290, 305, 308, 311, 312, 313, 328, 332, 352, 353, 365, 378, 395, 411, 437, 441, 444, 446, 447, 449, 451, 452, 477, 480, 482, 483, 484, 492, 494, 497, 499, 501, 503, 505, 507], "maintain": [3, 103, 137, 153, 154, 168, 203, 282, 308, 321, 345, 423, 458, 479, 480, 481, 501, 507], "previou": [3, 5, 19, 77, 143, 174, 187, 202, 207, 218, 219, 249, 280, 285, 308, 371, 395, 411, 437, 444, 481, 488, 493, 497, 501, 504], "old": [3, 4, 5, 15, 143, 144, 146, 148, 165, 249, 280, 286, 292, 305, 308, 314, 344, 347, 349, 364, 371, 394, 400, 450, 479, 481, 482, 483, 484, 501, 503, 504], "cannot": [3, 4, 77, 78, 103, 150, 154, 202, 237, 238, 302, 305, 308, 309, 341, 342, 344, 345, 353, 372, 378, 395, 407, 411, 412, 414, 422, 486, 488, 491, 501], "compress": 3, "locat": [3, 5, 8, 9, 15, 16, 38, 42, 46, 54, 76, 77, 146, 213, 218, 219, 223, 280, 281, 282, 285, 290, 292, 295, 308, 312, 313, 321, 323, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 344, 348, 349, 351, 352, 359, 361, 362, 365, 378, 396, 402, 423, 437, 444, 466, 480, 481, 482, 484, 486, 491, 493, 496, 497, 499, 501, 503, 507], "allow": [3, 4, 5, 6, 7, 20, 38, 44, 46, 54, 55, 59, 65, 69, 77, 78, 103, 150, 151, 158, 161, 162, 164, 166, 172, 200, 203, 213, 217, 218, 219, 242, 249, 279, 280, 285, 286, 289, 291, 297, 302, 308, 314, 316, 327, 328, 329, 330, 338, 341, 343, 344, 363, 364, 370, 371, 372, 373, 395, 396, 403, 407, 408, 410, 414, 442, 443, 444, 446, 449, 450, 451, 458, 466, 479, 481, 482, 484, 491, 492, 493, 501, 504], "multiindex": 3, "4": [3, 5, 9, 20, 33, 53, 55, 76, 77, 79, 80, 81, 82, 83, 89, 107, 110, 111, 124, 135, 136, 138, 151, 152, 154, 158, 162, 165, 174, 183, 218, 219, 234, 235, 238, 285, 290, 298, 314, 315, 323, 328, 330, 331, 334, 337, 339, 344, 352, 353, 354, 395, 406, 414, 422, 433, 436, 443, 447, 457, 465, 466, 468, 473, 475, 479, 485, 486, 489, 490, 491, 492, 493, 501, 504, 505], "includ": [3, 5, 13, 25, 43, 46, 55, 60, 77, 78, 107, 136, 143, 151, 152, 162, 164, 168, 174, 181, 199, 203, 211, 214, 218, 234, 237, 238, 242, 249, 258, 260, 280, 285, 290, 291, 305, 308, 315, 327, 328, 330, 339, 341, 342, 345, 348, 354, 358, 359, 360, 368, 377, 395, 399, 403, 410, 414, 437, 441, 443, 444, 446, 450, 451, 458, 472, 475, 478, 479, 481, 482, 486, 488, 492, 495, 497, 501, 506], "compos": [3, 4, 22, 54, 331, 341, 347], "multipl": [3, 5, 25, 27, 46, 48, 49, 57, 60, 71, 76, 90, 150, 162, 174, 203, 213, 237, 238, 280, 285, 289, 295, 300, 305, 308, 313, 314, 315, 321, 322, 327, 328, 332, 338, 341, 352, 353, 356, 359, 362, 373, 392, 395, 407, 433, 447, 449, 450, 451, 479, 482, 486, 488, 491, 492, 496, 497, 498, 499, 501, 502], "have": [3, 4, 5, 6, 9, 12, 13, 14, 15, 16, 18, 25, 29, 30, 32, 33, 34, 35, 40, 41, 43, 44, 45, 46, 48, 52, 53, 54, 57, 58, 73, 74, 75, 76, 77, 78, 88, 103, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 143, 146, 148, 149, 150, 151, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 168, 174, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 203, 207, 209, 210, 211, 213, 217, 218, 219, 222, 223, 224, 231, 232, 233, 237, 238, 242, 246, 247, 251, 253, 256, 257, 260, 263, 264, 265, 266, 267, 268, 271, 278, 280, 282, 285, 286, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 308, 312, 313, 314, 315, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 334, 336, 338, 339, 341, 343, 344, 345, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 371, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 406, 407, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 472, 473, 478, 479, 480, 482, 486, 487, 488, 491, 492, 493, 497, 499, 501, 502, 503, 504, 505, 507], "effici": [3, 9, 55, 151, 161, 199, 238, 308, 328, 331, 339, 343, 396, 458, 479, 482, 484, 492], "mean": [3, 4, 9, 91, 94, 95, 96, 98, 165, 213, 238, 256, 285, 308, 330, 337, 352, 365, 395, 405, 407, 444, 446, 450, 451, 479, 481, 492, 493, 496, 497, 501], "extract": [3, 5, 46, 64, 213, 218, 244, 254, 295, 308, 444, 478, 491], "pathlik": [3, 5, 6], "serial": [3, 4, 5, 9, 150, 165, 235, 238, 281, 282, 287, 288, 289, 308, 341, 343, 344, 356, 358, 370, 371, 384, 481, 482, 484, 503], "push": [3, 5, 234, 352, 446, 450, 451, 481, 497], "aid": [3, 5, 211, 330, 341, 344, 348, 371, 481, 497], "pack": [3, 5, 9, 281, 285, 308, 339, 341, 344, 358, 481, 501], "unpack": [3, 5, 8, 9, 15, 46, 281, 308, 341, 344, 358, 406, 414, 481], "structur": [3, 4, 5, 8, 48, 54, 77, 85, 91, 103, 151, 152, 154, 161, 164, 165, 166, 168, 171, 172, 173, 176, 177, 178, 203, 205, 212, 213, 217, 218, 238, 240, 244, 249, 254, 266, 280, 281, 282, 286, 290, 291, 292, 316, 327, 328, 329, 330, 332, 336, 340, 341, 343, 347, 355, 370, 396, 444, 445, 463, 465, 478, 479, 481, 482, 484, 486, 488, 493, 497, 499, 501], "relationship": [3, 5, 332, 353, 505], "non": [3, 4, 5, 8, 15, 30, 76, 77, 103, 150, 165, 166, 200, 215, 237, 238, 249, 251, 254, 256, 266, 280, 282, 285, 290, 292, 295, 302, 304, 305, 308, 314, 321, 326, 327, 328, 331, 338, 339, 343, 344, 347, 352, 376, 398, 403, 408, 409, 411, 423, 442, 444, 451, 482, 484, 491, 497, 501, 505], "doc": [3, 5, 20, 59, 91, 238, 281, 289, 308, 403, 412, 441, 444, 446, 450, 451, 464, 482, 486, 488, 493, 501], "w": [3, 5, 10, 79, 82, 89, 91, 92, 94, 95, 98, 100, 103, 111, 112, 130, 131, 132, 135, 136, 138, 141, 145, 152, 154, 165, 234, 244, 298, 337, 359, 414, 437, 479, 486, 490, 491, 496, 497, 499], "compil": [3, 5, 286, 343, 345, 414, 441], "d": [3, 5, 18, 42, 78, 92, 138, 141, 152, 161, 162, 163, 166, 174, 218, 219, 280, 281, 282, 285, 289, 290, 298, 305, 308, 309, 328, 330, 332, 333, 334, 337, 338, 339, 340, 349, 350, 354, 363, 414, 437, 439, 442, 444, 447, 450, 458, 459, 466, 467, 469, 479, 480, 486, 488, 492, 497, 501, 507], "n": [3, 5, 13, 75, 77, 82, 89, 91, 92, 112, 124, 134, 135, 145, 152, 162, 165, 170, 174, 175, 177, 199, 210, 234, 235, 285, 294, 297, 298, 300, 304, 305, 308, 315, 327, 333, 334, 337, 339, 340, 344, 354, 388, 395, 406, 411, 414, 421, 436, 443, 447, 450, 463, 464, 470, 471, 475, 479, 481, 486, 490, 491, 492, 497, 499, 501, 503], "h5db": [3, 5, 495], "try": [3, 5, 27, 103, 199, 218, 249, 282, 285, 291, 296, 331, 341, 363, 365, 378, 388, 407, 410, 412, 419, 421, 444, 447, 450, 451, 472, 479, 486, 488, 490, 501], "local": [3, 5, 13, 71, 76, 213, 249, 285, 332, 338, 339, 363, 443, 447, 479, 481, 482, 488, 491, 497], "git": [3, 5, 414, 441, 450, 451, 479, 480, 482, 488, 507], "commit": [3, 5, 13, 441, 443, 445, 450, 488], "sure": [3, 5, 57, 65, 124, 148, 158, 164, 181, 190, 223, 264, 280, 285, 295, 296, 298, 300, 308, 341, 345, 352, 353, 354, 356, 359, 362, 373, 375, 376, 379, 388, 389, 390, 391, 403, 416, 420, 422, 429, 441, 446, 449, 450, 451, 479, 482, 488, 492, 493, 501], "doesn": [3, 5, 6, 19, 46, 54, 92, 93, 199, 200, 201, 203, 204, 285, 286, 305, 308, 314, 341, 343, 359, 378, 406, 410, 414, 420, 441, 446, 451, 488, 492, 493, 501], "instal": [3, 5, 388, 421, 441, 443, 448, 449, 451, 479, 481, 487, 488, 500], "Or": [3, 5, 329, 341, 363, 451, 480, 501, 507], "simpli": [3, 4, 5, 20, 77, 150, 153, 159, 183, 213, 218, 219, 280, 308, 339, 341, 352, 444, 447, 479, 486, 492, 493, 501], "insid": [3, 5, 20, 50, 73, 218, 225, 238, 280, 285, 302, 303, 308, 314, 338, 339, 394, 396, 434, 478, 488, 492, 497, 501, 503], "repo": [3, 5, 103, 443, 450, 451, 488], "hash": [3, 5, 13, 280, 327, 395, 451, 482, 486], "unknown": [3, 5, 151, 152, 344, 484], "completedsuccessfulli": [3, 5], "cleanup": [3, 5, 19, 76, 154, 308, 482], "convers": [3, 4, 5, 52, 103, 162, 166, 171, 200, 211, 249, 291, 308, 309, 314, 315, 316, 322, 326, 327, 328, 331, 439, 456, 460, 477, 481, 482, 489, 494, 497, 499, 501], "keeptimestep": [3, 5], "tupl": [3, 4, 5, 6, 8, 9, 18, 20, 55, 69, 77, 82, 89, 103, 111, 136, 138, 153, 161, 203, 213, 218, 280, 282, 285, 308, 321, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 343, 344, 371, 372, 399, 406, 407, 411, 414, 432, 437, 450, 497, 498, 501, 503], "discard": [3, 5, 201, 237, 314, 446, 482], "except": [3, 5, 76, 150, 154, 158, 165, 174, 177, 199, 203, 280, 281, 285, 321, 330, 341, 343, 344, 371, 372, 387, 398, 400, 403, 412, 418, 420, 437, 445, 451, 472, 479, 481, 492], "step": [3, 4, 5, 6, 13, 18, 44, 45, 150, 171, 176, 177, 178, 203, 210, 213, 217, 249, 251, 285, 292, 308, 321, 327, 328, 332, 334, 336, 337, 339, 344, 351, 395, 407, 436, 441, 444, 446, 470, 479, 481, 482, 486, 488, 491, 492, 496, 497, 501, 503, 506], "retain": [3, 5, 8, 38, 65, 69, 77, 194, 218, 302, 308, 314, 344, 354, 372, 389, 481, 503], "separ": [3, 5, 22, 44, 54, 58, 78, 161, 203, 211, 238, 242, 308, 315, 326, 327, 328, 330, 339, 395, 401, 410, 411, 414, 432, 450, 479, 480, 482, 488, 492, 493, 501, 506, 507], "exot": [3, 5], "analys": [3, 5, 47, 54, 199, 330, 444, 453, 456, 477, 479, 488, 492, 494, 501], "each": [3, 5, 6, 8, 9, 18, 25, 26, 31, 42, 44, 46, 54, 55, 71, 76, 77, 81, 150, 152, 153, 154, 161, 164, 165, 166, 168, 174, 178, 201, 203, 204, 210, 218, 219, 227, 235, 237, 240, 242, 253, 259, 274, 280, 282, 285, 287, 288, 291, 302, 303, 305, 307, 308, 312, 314, 315, 316, 321, 327, 328, 330, 332, 333, 338, 339, 341, 343, 344, 345, 352, 359, 362, 365, 370, 371, 373, 390, 395, 396, 397, 405, 407, 408, 411, 413, 414, 432, 437, 444, 446, 447, 449, 450, 451, 457, 458, 485, 486, 488, 489, 490, 491, 492, 493, 496, 497, 498, 499, 501, 503, 504, 505], "someth": [3, 5, 20, 31, 32, 45, 78, 150, 159, 190, 200, 203, 285, 308, 315, 328, 330, 336, 341, 365, 378, 437, 443, 444, 447, 449, 450, 451, 488, 492, 493, 501], "nuanc": [3, 5, 451], "equilibrium": [3, 5, 18, 202, 205, 253, 285, 349, 380, 479, 492, 497, 499, 501], "cycl": [3, 5, 6, 14, 18, 19, 20, 26, 27, 31, 35, 73, 77, 130, 131, 132, 133, 163, 174, 202, 203, 210, 211, 214, 216, 217, 218, 220, 223, 235, 237, 242, 249, 251, 253, 256, 328, 344, 349, 364, 365, 380, 388, 394, 395, 399, 407, 411, 413, 436, 437, 444, 447, 449, 451, 466, 473, 474, 478, 479, 482, 484, 486, 488, 492, 493, 496, 497, 499, 503, 504, 506], "converg": [3, 5, 49, 77, 163, 164, 178, 182, 210, 211, 219, 249, 253, 318, 327, 370, 380, 492, 499, 504], "At": [3, 4, 5, 18, 31, 203, 216, 280, 286, 319, 352, 444, 449, 450, 485, 491, 503], "last": [3, 5, 150, 151, 174, 200, 203, 207, 219, 249, 316, 332, 336, 397, 405, 406, 414, 437, 447, 482, 484, 497, 501], "wherea": [3, 5, 334, 339, 501], "constitut": [3, 5, 280, 308, 444, 446], "typic": [3, 4, 5, 19, 54, 59, 77, 81, 103, 152, 154, 168, 199, 200, 217, 218, 225, 237, 238, 240, 242, 244, 249, 280, 285, 291, 304, 305, 308, 312, 334, 341, 344, 364, 387, 444, 446, 478, 479, 486, 488, 492, 496, 501, 503], "further": [3, 5, 242, 315, 328, 343, 396, 414, 447, 449], "collect": [3, 4, 5, 20, 25, 27, 31, 43, 44, 45, 46, 54, 59, 77, 150, 165, 199, 200, 203, 235, 237, 238, 242, 244, 247, 253, 260, 263, 280, 282, 285, 305, 308, 329, 331, 332, 338, 341, 343, 344, 362, 389, 399, 403, 407, 411, 442, 444, 446, 447, 449, 463, 465, 467, 475, 479, 482, 486, 488, 489, 490, 501, 503], "back": [3, 5, 38, 46, 47, 54, 77, 164, 187, 213, 219, 240, 249, 268, 271, 308, 315, 321, 327, 330, 341, 343, 344, 362, 365, 371, 376, 400, 407, 408, 420, 447, 451, 479, 481, 482, 488, 492, 501, 503], "like": [3, 4, 5, 6, 8, 9, 18, 19, 20, 27, 32, 45, 46, 48, 68, 77, 78, 103, 143, 146, 151, 153, 159, 161, 164, 168, 200, 201, 203, 205, 213, 214, 218, 237, 238, 242, 244, 249, 280, 282, 285, 286, 289, 290, 292, 307, 308, 309, 314, 315, 327, 328, 329, 331, 334, 336, 337, 338, 341, 345, 348, 352, 357, 364, 365, 372, 373, 395, 396, 406, 407, 408, 412, 414, 428, 437, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 465, 479, 480, 481, 482, 486, 488, 490, 491, 492, 497, 501, 503, 507], "Will": [3, 5, 6, 48, 77, 101, 203, 218, 244, 253, 280, 285, 305, 308, 315, 328, 397, 411, 413, 486, 491, 501], "interpos": [3, 5], "h5": [3, 4, 5, 7, 13, 25, 486, 488, 495, 501, 503], "extens": [3, 5, 25, 42, 44, 280, 282, 315, 397, 403, 413, 481, 482, 497, 501], "guarante": [3, 5, 9, 187, 242, 334, 400, 447, 497], "here": [3, 5, 8, 13, 30, 43, 46, 59, 65, 77, 78, 144, 151, 152, 154, 161, 165, 166, 171, 173, 176, 187, 196, 199, 204, 205, 211, 213, 218, 219, 235, 237, 242, 249, 280, 286, 290, 291, 296, 302, 305, 308, 309, 315, 319, 321, 326, 328, 329, 336, 337, 338, 352, 363, 371, 390, 396, 403, 437, 442, 444, 446, 447, 449, 450, 451, 457, 465, 471, 472, 478, 479, 486, 488, 489, 490, 492, 493, 495, 497, 500, 501, 503], "usabl": [3, 5, 428, 503], "vastli": [3, 5], "futur": [3, 4, 5, 18, 43, 46, 48, 77, 78, 205, 238, 280, 285, 286, 290, 292, 328, 330, 331, 343, 354, 403, 414, 437, 493, 501], "primarili": [3, 5, 103, 166, 218, 479], "replac": [3, 5, 9, 78, 218, 223, 280, 285, 292, 305, 308, 328, 331, 338, 344, 349, 405, 414, 437, 475, 481, 482, 484, 492, 501], "csstring": [3, 5], "geomstr": [3, 5, 331], "bpstring": [3, 5], "goal": [3, 5, 8, 331, 359, 407, 450, 451, 479, 486], "ani": [3, 4, 5, 6, 9, 14, 18, 19, 20, 21, 26, 30, 31, 54, 57, 61, 64, 75, 76, 77, 78, 81, 93, 103, 150, 152, 154, 164, 165, 177, 199, 200, 203, 204, 210, 217, 218, 219, 223, 234, 235, 237, 238, 242, 244, 249, 258, 279, 280, 282, 285, 291, 292, 298, 302, 304, 305, 307, 308, 312, 328, 329, 330, 332, 337, 338, 339, 341, 343, 344, 345, 347, 349, 352, 353, 358, 359, 362, 363, 365, 368, 378, 379, 385, 388, 389, 394, 395, 396, 400, 405, 411, 413, 414, 428, 437, 441, 443, 444, 446, 447, 449, 450, 451, 474, 475, 479, 480, 481, 482, 486, 488, 489, 490, 492, 493, 497, 499, 501, 503, 504, 507], "particular": [3, 5, 13, 22, 31, 45, 46, 77, 78, 88, 115, 153, 161, 162, 201, 203, 213, 218, 234, 235, 237, 238, 285, 291, 302, 308, 328, 329, 338, 341, 362, 368, 371, 414, 443, 451, 480, 486, 490, 493, 507], "veri": [3, 4, 5, 12, 14, 19, 20, 31, 81, 113, 151, 162, 172, 173, 202, 207, 211, 280, 285, 308, 309, 327, 328, 330, 336, 341, 344, 365, 373, 407, 437, 444, 446, 447, 450, 451, 466, 479, 484, 486, 488, 491, 492, 493, 501], "dont": [3, 5, 6], "easi": [3, 5, 18, 249, 282, 338, 339, 407, 437, 446, 449, 450, 451, 479, 492, 501], "hard": [3, 5, 30, 41, 44, 76, 78, 213, 296, 330, 445, 479], "geom": [3, 5, 13, 45, 46, 55, 171, 286, 290, 292, 340, 347, 473, 481, 491, 492, 493, 501], "In": [3, 5, 7, 13, 20, 38, 44, 46, 65, 69, 78, 79, 87, 88, 101, 103, 109, 114, 138, 150, 159, 161, 164, 214, 217, 218, 225, 234, 236, 249, 253, 280, 285, 287, 298, 304, 308, 309, 314, 315, 327, 328, 330, 332, 334, 337, 338, 339, 341, 343, 363, 373, 376, 387, 395, 396, 403, 407, 408, 410, 437, 443, 444, 447, 449, 450, 451, 465, 470, 473, 478, 479, 480, 486, 488, 489, 492, 493, 501, 503, 504, 507], "abl": [3, 4, 5, 15, 44, 46, 143, 280, 345, 396, 422, 450, 480, 501, 503, 507], "reproduc": [3, 5, 119, 122, 129, 503], "confid": [3, 5], "ident": [3, 5, 154, 161, 168, 177, 189, 190, 193, 263, 315, 328, 447, 479], "inputdb": [3, 5], "startcycl": [3, 5, 6, 13, 501], "startnod": [3, 5, 6, 13, 501], "standard": [3, 5, 14, 20, 21, 25, 55, 60, 65, 69, 77, 138, 150, 151, 152, 164, 165, 169, 177, 183, 202, 203, 204, 205, 210, 213, 217, 219, 243, 249, 253, 260, 261, 280, 285, 314, 321, 328, 331, 373, 378, 389, 398, 403, 413, 436, 441, 442, 443, 445, 449, 479, 481, 482, 486, 497, 500, 501, 505], "timestep": [3, 5, 6, 18, 26, 33, 44, 249, 343, 501], "request": [3, 5, 6, 18, 31, 76, 77, 150, 154, 196, 199, 203, 207, 210, 217, 235, 237, 249, 253, 256, 282, 291, 305, 308, 328, 330, 336, 337, 343, 345, 400, 403, 405, 420, 443, 444, 445, 450, 479, 486, 488, 501], "present": [3, 5, 6, 7, 18, 77, 134, 159, 161, 166, 171, 173, 174, 176, 196, 200, 223, 247, 256, 280, 308, 328, 331, 339, 343, 345, 364, 373, 378, 395, 408, 414, 444, 451, 493, 501], "auxiliari": [3, 5, 138, 203, 213], "statepointnam": [3, 5], "h5group": [3, 5, 9, 503], "place": [3, 5, 9, 20, 25, 26, 44, 46, 54, 77, 103, 150, 154, 213, 217, 218, 219, 237, 238, 280, 282, 286, 288, 315, 319, 328, 334, 339, 343, 348, 395, 399, 405, 406, 414, 443, 444, 450, 451, 479, 480, 481, 486, 488, 493, 501, 503, 507], "correct": [3, 5, 14, 22, 46, 158, 198, 223, 234, 238, 249, 251, 256, 263, 285, 298, 305, 308, 321, 323, 338, 352, 353, 363, 373, 375, 376, 450, 480, 501, 507], "timenod": [3, 5, 6, 13, 31, 77, 202, 203, 237, 308, 486, 488, 501, 503, 506], "fuel": [3, 5, 18, 25, 26, 48, 50, 53, 92, 103, 107, 124, 130, 131, 132, 133, 134, 135, 136, 141, 152, 200, 211, 214, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 242, 246, 249, 254, 260, 280, 281, 282, 285, 286, 290, 292, 294, 298, 300, 305, 308, 312, 313, 314, 315, 319, 321, 322, 323, 327, 328, 330, 332, 348, 349, 351, 352, 353, 354, 355, 359, 360, 411, 444, 449, 457, 458, 462, 463, 465, 466, 473, 474, 477, 478, 479, 481, 482, 487, 488, 491, 494, 496, 497, 499, 500, 502, 503], "varieti": [3, 5, 55, 161, 280, 285, 308, 339, 354, 378, 444, 449, 450, 479, 486, 489, 501], "client": [3, 5, 7, 159, 161, 249, 279, 308, 328, 331], "server": [3, 5], "kind": [3, 5, 22, 103, 156, 165, 203, 207, 211, 213, 249, 282, 285, 290, 308, 330, 338, 396, 451, 458, 478, 479, 491, 492, 500, 501], "unnecessari": [3, 5, 55, 285], "bp": [3, 5, 45, 46, 55, 60, 286, 292, 347, 407, 465, 473, 491, 501], "allowmiss": [3, 5, 482], "continu": [3, 5, 48, 55, 332, 338, 395, 406, 414, 432, 444, 446, 464, 475, 479, 482, 490, 501], "valu": [3, 4, 5, 6, 9, 15, 18, 21, 22, 23, 25, 46, 48, 49, 50, 55, 58, 65, 76, 77, 78, 79, 88, 94, 95, 98, 103, 143, 146, 148, 150, 152, 154, 159, 162, 165, 166, 178, 189, 196, 199, 200, 201, 205, 212, 218, 226, 235, 237, 238, 240, 241, 244, 249, 251, 253, 260, 264, 268, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 298, 305, 308, 311, 312, 313, 315, 316, 319, 321, 327, 328, 331, 336, 341, 342, 343, 344, 347, 354, 358, 359, 364, 365, 370, 371, 372, 373, 376, 377, 378, 389, 392, 395, 399, 403, 406, 407, 409, 411, 412, 413, 414, 422, 425, 432, 437, 442, 447, 449, 451, 479, 481, 482, 486, 488, 490, 491, 492, 496, 497, 498, 501, 503, 504], "neg": [3, 5, 249, 282, 285, 298, 302, 308, 312, 321, 322, 337, 344, 352, 373, 407, 501], "index": [3, 4, 5, 9, 42, 55, 151, 152, 162, 165, 174, 201, 203, 240, 244, 249, 266, 281, 282, 285, 288, 308, 311, 328, 332, 334, 336, 337, 338, 339, 395, 396, 399, 407, 411, 414, 432, 441, 475, 479, 481, 482, 486, 497, 501, 503], "eoc": [3, 5, 18, 77, 203, 237, 444, 497, 499], "backward": [3, 5, 103, 177, 206, 218, 286, 411], "arbitrari": [3, 5, 43, 77, 138, 251, 291, 296, 327, 328, 329, 332, 352, 353, 365, 403, 409, 414, 425, 432, 439, 442, 444, 447, 481, 488, 501], "statepoint": [3, 5, 486], "emit": [3, 5, 59, 162, 168, 298, 379], "rather": [3, 5, 9, 18, 44, 46, 77, 103, 118, 138, 152, 153, 154, 165, 177, 203, 213, 218, 237, 238, 249, 280, 282, 291, 308, 328, 330, 333, 334, 337, 339, 340, 341, 345, 365, 371, 396, 411, 414, 446, 465, 473, 475, 479, 481, 484, 486, 488, 492, 493, 496, 501], "crash": [3, 5, 61, 76, 159, 203, 363, 395, 445, 446, 481, 501], "undefin": [3, 5, 6, 14, 18, 19, 20, 26, 31, 57, 77, 210, 217, 223, 237, 242, 249, 258, 302, 303, 304, 330, 385, 388, 394, 501], "top": [3, 5, 20, 25, 78, 205, 218, 282, 285, 288, 289, 292, 296, 308, 321, 327, 328, 332, 333, 338, 339, 341, 344, 347, 351, 352, 407, 432, 446, 451, 486, 488, 496, 497, 499, 501, 503], "comp": [3, 5, 6, 9, 24, 285, 503], "param": [3, 5, 6, 9, 18, 43, 77, 218, 249, 251, 282, 285, 308, 315, 327, 328, 343, 344, 352, 381, 389, 399, 411, 447, 466, 474, 481, 482, 484, 486, 488, 491, 496, 497, 501], "too": [3, 5, 43, 172, 308, 328, 344, 352, 395, 414, 432, 447, 482, 491, 492, 501], "must": [3, 5, 6, 13, 14, 18, 19, 20, 26, 31, 48, 54, 57, 65, 75, 76, 77, 144, 150, 158, 161, 162, 165, 168, 171, 200, 203, 210, 217, 218, 219, 223, 237, 238, 242, 249, 257, 258, 280, 282, 285, 291, 302, 305, 308, 314, 319, 327, 328, 330, 336, 338, 339, 341, 343, 344, 345, 356, 373, 385, 388, 389, 394, 399, 411, 412, 437, 441, 442, 443, 444, 447, 450, 451, 458, 479, 480, 482, 488, 492, 495, 501, 504, 507], "indexloc": [3, 5, 281, 332, 336, 337, 338, 339, 444], "make": [3, 5, 8, 14, 18, 25, 26, 49, 54, 55, 57, 60, 65, 77, 78, 124, 143, 148, 150, 151, 158, 159, 162, 164, 165, 168, 171, 181, 190, 211, 213, 217, 218, 219, 223, 237, 244, 249, 258, 264, 265, 279, 280, 282, 285, 286, 290, 291, 292, 295, 296, 298, 300, 305, 308, 312, 314, 315, 318, 328, 330, 331, 332, 338, 339, 341, 343, 344, 345, 352, 353, 354, 356, 359, 362, 373, 375, 376, 378, 379, 388, 389, 390, 391, 395, 396, 403, 407, 410, 411, 413, 414, 416, 420, 422, 429, 432, 437, 441, 442, 443, 444, 445, 447, 449, 450, 451, 459, 462, 473, 475, 476, 477, 478, 479, 481, 482, 486, 487, 489, 491, 492, 493, 494, 496, 500], "sens": [3, 5, 9, 49, 54, 78, 249, 280, 285, 291, 305, 328, 343, 362, 395, 447, 492], "hierarchi": [3, 5, 9, 226, 308, 341, 345, 347, 359, 437, 444, 486, 501, 503], "serv": [3, 5, 26, 77, 251, 280, 331, 343, 344, 406, 414, 481, 488], "anchor": [3, 5, 290, 292, 337, 338, 339, 351, 437, 492, 493, 501], "fulli": [3, 5, 9, 78, 103, 165, 215, 282, 290, 308, 339, 353, 365, 449, 479, 481, 489, 493, 496, 499, 501, 503], "extend": [3, 5, 6, 14, 18, 19, 20, 22, 26, 31, 57, 77, 151, 205, 210, 217, 223, 237, 242, 249, 258, 280, 281, 282, 308, 327, 332, 338, 341, 344, 371, 385, 388, 394, 395, 403, 406, 422, 437, 446, 464, 473, 486, 489, 501], "littl": [3, 4, 5, 9, 32, 33, 57, 165, 280, 394, 396, 403, 450, 465, 486, 488, 503], "complic": [3, 5, 9, 13, 249, 291, 302, 305, 308, 373, 388, 396, 447, 488, 492, 501], "depth": [3, 5, 9, 411, 446, 447, 486], "below": [3, 4, 5, 46, 65, 151, 162, 168, 218, 234, 280, 281, 282, 307, 308, 327, 328, 332, 334, 341, 345, 378, 407, 433, 444, 446, 447, 449, 479, 480, 488, 491, 492, 493, 501, 503, 507], "occupi": [3, 5, 50, 219, 349, 497, 501], "easier": [3, 5, 203, 308, 337, 385, 446, 450], "figur": [3, 5, 7, 25, 31, 42, 86, 124, 140, 199, 203, 219, 285, 327, 328, 330, 340, 399, 411, 413, 451, 464, 468, 469, 471, 479, 486, 490, 492], "given": [3, 4, 5, 9, 18, 42, 69, 77, 79, 81, 82, 103, 107, 112, 144, 152, 153, 154, 157, 162, 199, 202, 203, 210, 218, 237, 238, 240, 242, 244, 249, 254, 280, 282, 285, 286, 290, 291, 308, 312, 313, 314, 315, 319, 323, 327, 328, 331, 334, 336, 337, 339, 340, 341, 343, 344, 359, 362, 403, 405, 406, 407, 410, 411, 413, 414, 437, 438, 439, 444, 447, 449, 450, 458, 463, 466, 479, 484, 488, 492, 496, 499, 501, 503, 504, 505], "pair": [3, 5, 25, 48, 213, 238, 282, 285, 286, 287, 288, 289, 290, 291, 292, 305, 308, 328, 337, 338, 339, 364, 370, 378, 399, 447, 501], "unawar": [3, 5], "outsid": [3, 5, 76, 211, 218, 225, 235, 238, 296, 308, 314, 315, 329, 336, 342, 343, 365, 395, 434, 479, 486, 492, 497, 501], "normal": [3, 4, 5, 103, 138, 164, 168, 177, 183, 201, 203, 238, 249, 258, 280, 285, 314, 337, 347, 363, 370, 388, 399, 419, 437, 444, 451, 457, 475, 479, 486, 488, 492, 501], "know": [3, 4, 5, 6, 30, 93, 151, 152, 161, 164, 211, 280, 282, 285, 291, 300, 302, 308, 328, 330, 341, 344, 345, 365, 396, 399, 406, 407, 408, 412, 449, 488, 490, 492, 501, 502, 503], "about": [3, 4, 5, 18, 20, 27, 45, 54, 77, 82, 89, 103, 111, 136, 138, 150, 151, 164, 165, 168, 183, 194, 199, 203, 218, 280, 282, 285, 290, 291, 308, 314, 330, 331, 336, 341, 343, 344, 345, 352, 365, 437, 446, 447, 449, 451, 467, 468, 469, 472, 479, 482, 486, 488, 490, 492, 493, 496, 497, 501, 503], "plu": [3, 5, 42, 154, 219, 282, 339, 345, 395, 479, 489, 501], "similar": [3, 5, 18, 46, 54, 59, 78, 150, 151, 154, 162, 164, 166, 168, 172, 173, 174, 238, 263, 282, 308, 328, 336, 339, 343, 378, 403, 411, 414, 447, 479, 488, 493], "omit": [3, 5, 285, 305, 308, 329, 395, 396, 501], "help": [3, 6, 8, 9, 20, 38, 54, 59, 65, 69, 76, 77, 151, 161, 197, 280, 308, 327, 372, 399, 402, 406, 407, 408, 414, 437, 441, 442, 445, 446, 447, 450, 451, 481, 484, 486, 488, 492, 501, 503], "deriv": [3, 6, 19, 31, 42, 55, 57, 77, 138, 161, 194, 210, 213, 237, 249, 279, 280, 285, 302, 308, 327, 330, 339, 345, 352, 371, 372, 385, 388, 394, 403, 407, 479, 491, 497, 501], "overridden": [3, 6, 14, 18, 19, 20, 26, 31, 57, 65, 77, 103, 150, 210, 217, 223, 237, 242, 249, 258, 305, 308, 385, 388, 394, 499, 501], "life": [3, 6, 20, 24, 77, 81, 86, 158, 203, 235, 237, 444, 449, 450, 478, 486, 490, 501, 506], "underli": [3, 5, 6, 46, 152, 154, 308, 336, 338, 341, 344, 403, 451, 486, 491, 503, 505], "earli": [3, 6, 19, 206, 446, 501], "while": [3, 6, 20, 36, 38, 42, 44, 65, 69, 77, 137, 159, 164, 194, 204, 213, 234, 235, 253, 280, 285, 305, 308, 309, 314, 315, 319, 326, 327, 328, 331, 332, 339, 345, 395, 400, 403, 406, 437, 444, 446, 450, 458, 479, 480, 488, 489, 492, 501, 503, 507], "first": [3, 5, 6, 9, 13, 19, 27, 33, 42, 44, 46, 77, 78, 103, 150, 154, 164, 165, 166, 168, 174, 200, 203, 210, 217, 218, 219, 235, 237, 238, 256, 280, 282, 285, 289, 300, 305, 308, 314, 315, 328, 329, 336, 337, 339, 341, 343, 349, 359, 395, 405, 406, 407, 411, 414, 416, 423, 432, 437, 438, 442, 444, 445, 446, 447, 449, 450, 451, 463, 468, 475, 479, 482, 486, 487, 491, 492, 495, 501, 503], "receiv": [3, 6, 77, 150, 296, 345, 387, 447], "tight": [3, 6, 77, 203, 210, 251, 253, 285, 370, 385, 432, 444, 482, 500, 501], "coupl": [3, 6, 9, 14, 31, 42, 57, 77, 203, 210, 225, 235, 237, 242, 249, 251, 253, 280, 285, 328, 359, 370, 432, 444, 446, 482, 490, 497, 499, 500, 501], "_timenodeloop": [3, 6], "via": [3, 6, 75, 92, 103, 134, 168, 202, 249, 280, 285, 291, 298, 305, 308, 312, 313, 321, 341, 391, 444, 447, 472, 475, 479, 482, 484, 488, 492, 501], "tend": [3, 6, 36, 42, 305, 330, 344, 442, 489, 503], "decai": [3, 6, 84, 151, 154, 156, 158, 162, 163, 168, 183, 201, 203, 235, 268, 291, 462, 476, 477, 479, 494, 496, 497, 499, 501], "next": [3, 6, 19, 42, 216, 237, 253, 285, 305, 308, 314, 328, 347, 395, 411, 414, 437, 441, 442, 446, 447, 451, 486, 488, 489, 491, 492, 493, 501, 503], "shutdown": [3, 6, 210, 281, 330, 363, 479, 486, 491, 492, 499, 501], "even": [3, 4, 6, 20, 54, 76, 77, 143, 150, 154, 174, 203, 218, 219, 258, 280, 282, 286, 302, 308, 321, 328, 334, 337, 352, 372, 397, 406, 411, 413, 420, 444, 446, 447, 451, 479, 488, 492, 501], "encount": [3, 4, 5, 6, 18, 54], "reconnect": [3, 6], "pre": [3, 6, 9, 18, 200, 217, 237, 238, 263, 280, 285, 327, 328, 337, 395, 437, 482, 488, 499, 501], "still": [3, 5, 6, 18, 54, 76, 77, 103, 151, 158, 187, 204, 213, 218, 219, 235, 238, 279, 280, 285, 286, 292, 303, 305, 308, 328, 329, 330, 338, 344, 349, 362, 390, 392, 403, 420, 443, 444, 450, 451, 458, 479, 481, 488, 493, 501, 503], "connect": [3, 6, 42, 166, 285, 339, 501], "worker": [3, 6, 20, 77, 150, 200, 203, 204, 218, 308, 388, 401, 447, 484, 491], "reloaddbnam": [3, 6, 13, 444, 501], "put": [3, 6, 103, 165, 213, 215, 237, 280, 282, 285, 308, 328, 348, 407, 413, 451, 482, 488, 503], "prior": [3, 6, 77, 203, 280, 315, 378, 447, 481, 501], "mix": [3, 6, 107, 218, 234, 242, 285, 308, 419, 422, 479, 488, 492, 501], "v": [3, 6, 27, 77, 78, 99, 100, 152, 154, 164, 199, 203, 211, 218, 234, 260, 280, 285, 298, 305, 308, 407, 413, 478, 479, 482, 486, 489, 492], "equival": [3, 6, 103, 107, 168, 174, 182, 183, 189, 314, 315, 337, 338, 406, 447, 458, 480, 507], "reload": [3, 6, 19, 203, 218, 249, 253, 501], "doe": [3, 4, 6, 9, 12, 13, 14, 15, 16, 20, 29, 30, 31, 33, 34, 35, 40, 41, 44, 48, 52, 53, 57, 58, 73, 74, 76, 77, 103, 107, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 148, 149, 150, 154, 156, 157, 158, 159, 160, 165, 166, 170, 172, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 203, 209, 210, 213, 218, 219, 222, 223, 224, 231, 232, 233, 237, 238, 240, 246, 247, 249, 251, 256, 257, 258, 263, 264, 265, 266, 267, 268, 271, 278, 280, 282, 285, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 308, 309, 314, 315, 316, 321, 322, 323, 324, 325, 326, 327, 328, 336, 337, 338, 344, 345, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 407, 410, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 443, 447, 450, 451, 466, 479, 486, 488, 491, 492, 493, 497, 501], "gaurante": [3, 6], "decad": [3, 6, 174, 479], "ago": [3, 5, 6], "easili": [3, 4, 6, 9, 249, 308, 332, 373, 387, 395, 397, 405, 407, 450, 479, 491, 493], "timestepnam": [3, 6, 203], "fresh": [3, 6, 203, 308, 478, 479, 483, 489, 492, 501], "preferenti": [3, 6], "neither": [3, 6, 238, 286], "nor": [3, 6, 286], "mutablesequ": [3, 6], "byloc": [3, 6], "wrapper": [3, 6, 150, 154, 187, 190, 201, 286, 331, 363, 379, 411], "around": [3, 6, 7, 46, 76, 150, 162, 201, 214, 218, 280, 285, 286, 304, 315, 328, 334, 363, 379, 437, 442, 447, 467, 478, 479, 486, 492, 493, 496, 497, 499, 501], "how": [3, 4, 5, 6, 7, 8, 9, 30, 43, 44, 50, 55, 124, 162, 165, 166, 194, 199, 218, 219, 238, 242, 244, 280, 282, 285, 289, 290, 292, 308, 314, 315, 330, 332, 336, 339, 341, 344, 345, 352, 353, 364, 365, 394, 396, 397, 411, 412, 414, 429, 437, 445, 446, 447, 449, 451, 458, 459, 465, 473, 478, 479, 481, 482, 486, 487, 488, 489, 497, 498, 500, 501, 502, 503], "well": [3, 4, 5, 6, 9, 18, 42, 44, 48, 54, 55, 77, 78, 136, 151, 161, 223, 225, 242, 280, 285, 289, 291, 305, 308, 309, 327, 328, 339, 341, 343, 364, 399, 403, 406, 410, 411, 441, 444, 449, 450, 471, 473, 479, 486, 488, 491, 492, 501, 503], "reffilenam": [3, 4], "srcfilenam": [3, 4], "exclus": [3, 4, 46, 54, 218, 238, 286, 290, 328, 331, 339, 359, 362, 482, 486, 501], "toler": [3, 4, 46, 54, 77, 166, 172, 200, 407, 504], "float": [3, 4, 5, 25, 48, 77, 79, 80, 81, 82, 83, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 112, 115, 135, 136, 137, 138, 139, 141, 153, 154, 162, 165, 166, 172, 174, 182, 199, 203, 218, 219, 234, 238, 244, 249, 282, 285, 288, 289, 290, 302, 305, 308, 312, 313, 314, 319, 321, 327, 328, 331, 333, 334, 337, 338, 339, 340, 341, 344, 370, 378, 385, 395, 397, 399, 406, 407, 411, 413, 432, 438, 439, 482, 491, 503, 504], "0": [3, 4, 13, 22, 25, 33, 46, 53, 54, 55, 77, 80, 81, 82, 83, 88, 91, 94, 95, 96, 98, 103, 107, 111, 112, 115, 123, 124, 134, 135, 136, 138, 145, 146, 150, 154, 158, 161, 162, 163, 165, 166, 168, 172, 173, 174, 177, 178, 199, 200, 201, 203, 210, 218, 219, 234, 235, 237, 238, 244, 247, 249, 251, 253, 258, 280, 282, 285, 289, 290, 294, 297, 298, 300, 302, 303, 304, 305, 307, 308, 311, 314, 316, 319, 321, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 348, 351, 353, 354, 371, 378, 394, 395, 396, 397, 399, 403, 405, 406, 407, 410, 411, 412, 414, 422, 433, 436, 437, 439, 444, 447, 449, 451, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 486, 488, 489, 490, 491, 492, 493, 496, 497, 499, 501, 503, 504], "timestepcompar": [3, 4, 46, 54], "high": [3, 4, 5, 26, 76, 86, 90, 91, 93, 199, 223, 225, 249, 280, 281, 285, 328, 330, 407, 411, 466, 479, 482, 486, 491, 493, 496, 497, 499, 501, 503], "two": [3, 4, 9, 46, 63, 69, 114, 150, 151, 154, 162, 166, 168, 170, 172, 175, 189, 193, 199, 200, 201, 202, 203, 211, 223, 235, 238, 239, 280, 282, 285, 287, 291, 303, 308, 314, 315, 321, 327, 328, 331, 336, 337, 338, 341, 342, 349, 352, 378, 399, 407, 413, 414, 444, 447, 449, 450, 475, 480, 481, 484, 488, 491, 492, 495, 501, 504, 507], "dbname": [3, 7, 45, 46, 490], "basecas": [3, 7, 45, 55], "bookeep": [3, 7, 33, 203], "proper": [3, 7, 137, 202, 237, 285, 338, 352, 444, 450, 501], "common": [3, 4, 7, 78, 136, 150, 151, 154, 165, 213, 249, 254, 282, 291, 308, 321, 327, 330, 338, 339, 372, 378, 409, 447, 451, 452, 477, 479, 480, 492, 494, 501, 507], "least": [3, 7, 65, 253, 308, 349, 437, 441, 450, 479, 492, 501], "knowledg": [3, 4, 7, 45, 285, 308, 315, 480, 507], "probe": [3, 7, 46], "interrog": [3, 7], "pathtodb": 3, "loadcycl": 3, "loadnod": 3, "c0n2eoc": 3, "alreadi": [3, 5, 55, 59, 76, 80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 139, 141, 154, 168, 199, 203, 218, 242, 264, 285, 286, 308, 323, 328, 331, 344, 365, 371, 449, 488, 492, 501], "vari": [3, 4, 8, 55, 161, 253, 285, 292, 328, 334, 341, 479, 491, 501], "middl": [3, 47, 203, 281, 330, 337, 395, 475, 486, 491, 492], "attach": [3, 19, 31, 57, 77, 78, 203, 210, 242, 280, 314, 336, 385, 388, 394, 486, 497], "pathtodatabas": 3, "getfpmass": [3, 281, 308], "fission": [3, 84, 154, 158, 162, 166, 168, 172, 175, 183, 199, 200, 225, 235, 237, 238, 241, 242, 243, 244, 246, 247, 249, 254, 258, 285, 291, 305, 308, 327, 328, 330, 411, 470, 475, 478, 479, 482, 486, 490, 492, 493, 497, 499, 501], "product": [3, 43, 55, 156, 162, 175, 187, 190, 199, 200, 235, 237, 238, 241, 242, 243, 244, 246, 247, 249, 254, 291, 305, 308, 328, 339, 450, 468, 469, 475, 479, 482, 486, 497, 501], "12345": 3, "67": [3, 152], "test_comparedb3": [3, 11], "testcomparedb3": [3, 11, 12], "test_database3": [3, 11], "testdatabase3": [3, 11, 13], "testdatabase3smal": [3, 11, 13], "testwritereaddatabas": [3, 11, 13], "test_databaseinterfac": [3, 11], "getsimpledboper": [3, 11, 14], "testdatabaseinterfacebol": [3, 11, 14], "testdatabaseinterfac": [3, 11, 14], "testdatabasewrit": [3, 11, 14], "testdatabaseread": [3, 11, 14], "testbadnam": [3, 11, 14], "teststandardfollowon": [3, 11, 14], "test_jaggedarrai": [3, 11], "testjaggedarrai": [3, 11, 15], "test_layout": [3, 11], "testlocationpack": [3, 11, 16], "writeln": [3, 4], "adddiff": [3, 4], "addstructurediff": [3, 4], "addtimestep": [3, 4], "reportdiff": [3, 4], "ndiff": [3, 4], "fromh5": [3, 8], "tolist": [3, 8], "computeancestor": [3, 9], "allsubclass": [3, 9], "read_only_fm": [3, 10], "read_write_fm": [3, 10], "create_file_ti": [3, 10], "create_file_fi": [3, 10], "create_file_fie2": [3, 10], "read_write_cr": [3, 10], "assum": [4, 27, 80, 103, 150, 169, 187, 199, 200, 234, 282, 285, 308, 312, 321, 328, 339, 352, 358, 390, 411, 446, 447, 480, 488, 491, 492, 493, 497, 501, 507], "intim": [4, 338], "h5py": [4, 76, 344, 503], "within": [4, 9, 22, 25, 54, 59, 71, 77, 103, 150, 151, 152, 154, 165, 170, 194, 196, 200, 203, 205, 210, 213, 225, 237, 238, 242, 246, 280, 282, 285, 286, 287, 288, 289, 292, 296, 302, 305, 308, 312, 313, 315, 316, 321, 327, 328, 330, 331, 332, 334, 336, 337, 338, 339, 340, 341, 344, 351, 352, 353, 362, 400, 437, 438, 444, 445, 446, 449, 463, 479, 482, 485, 488, 492, 493, 496, 497, 501, 503, 504, 505], "correspond": [4, 9, 24, 151, 199, 200, 203, 218, 219, 280, 282, 285, 290, 291, 302, 307, 308, 321, 328, 340, 341, 345, 372, 395, 411, 439, 444, 449, 485, 492, 497, 499, 501, 503], "pull": [4, 46, 203, 218, 223, 413, 443, 445, 450, 482, 484, 488, 491], "cross": [4, 90, 151, 154, 161, 162, 164, 166, 170, 172, 173, 175, 181, 194, 196, 198, 199, 200, 201, 211, 212, 223, 235, 237, 238, 242, 249, 251, 253, 258, 263, 264, 265, 280, 285, 291, 308, 314, 328, 411, 413, 437, 441, 447, 450, 458, 465, 470, 471, 479, 482, 486, 492, 493, 496, 497, 498, 501, 503, 504], "probabl": [4, 38, 43, 46, 65, 69, 92, 151, 154, 244, 258, 280, 286, 305, 308, 343, 407, 408, 414, 437, 451, 479, 488, 496, 502], "speak": [4, 242], "issu": [4, 14, 20, 44, 76, 134, 162, 164, 200, 237, 238, 251, 280, 285, 314, 330, 341, 352, 379, 414, 437, 443, 449, 450, 451, 479, 481, 482, 488, 503], "aris": [4, 77, 151, 154, 280, 291, 389], "against": [4, 38, 46, 48, 77, 124, 237, 308, 328, 330, 360, 371, 373, 378, 397, 416, 443, 479, 482], "sometim": [4, 46, 76, 154, 200, 218, 238, 309, 341, 451, 473, 486, 488, 501, 503], "That": [4, 5, 57, 88, 251, 285, 289, 308, 362, 363, 371, 451, 486, 488, 492, 501], "worri": [4, 336, 345, 447, 449, 451, 488], "especi": [4, 242, 410, 450], "temperatur": [4, 9, 78, 79, 80, 81, 82, 86, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 124, 130, 131, 132, 135, 136, 138, 139, 140, 141, 152, 217, 225, 234, 235, 237, 253, 263, 275, 282, 285, 302, 305, 308, 309, 312, 313, 314, 315, 320, 321, 328, 341, 344, 351, 352, 353, 439, 444, 449, 463, 472, 478, 479, 482, 486, 488, 489, 491, 492, 493, 496, 497, 498, 499, 501, 502, 503, 504, 505], "uniformli": [4, 291, 463, 501], "realli": [4, 30, 43, 103, 201, 207, 290, 292, 328, 334, 363, 446, 447, 449, 479, 493], "suppos": [4, 290, 414, 449], "volum": [4, 79, 86, 103, 112, 134, 136, 137, 196, 199, 234, 237, 282, 285, 289, 296, 302, 305, 307, 308, 315, 327, 328, 340, 351, 352, 353, 360, 399, 462, 476, 477, 494, 497, 498, 499, 501], "rel": [4, 42, 46, 54, 77, 103, 165, 183, 213, 219, 290, 302, 305, 308, 309, 319, 321, 328, 330, 340, 341, 378, 407, 437, 450, 483, 488, 493, 497, 499, 501, 503, 505], "self": [4, 8, 18, 38, 55, 65, 77, 103, 150, 161, 164, 199, 218, 237, 244, 256, 258, 285, 286, 289, 305, 308, 313, 315, 321, 328, 337, 339, 344, 348, 376, 406, 412, 414, 437, 442, 446, 447, 450, 488, 491, 492, 501, 503], "evid": 4, "resourc": [4, 150, 341, 378], "hasn": [4, 199, 264, 412], "tee": 4, "msg": [4, 363, 379, 398, 437], "ignor": [4, 5, 78, 165, 172, 237, 285, 291, 302, 315, 330, 337, 364, 388, 389, 395, 413, 414, 421, 501], "exce": [4, 316, 387], "organ": [4, 18, 32, 205, 213, 365, 444, 447, 482, 486], "later": [4, 21, 25, 36, 38, 77, 166, 174, 203, 238, 287, 362, 442, 444, 446, 449, 450, 479, 488, 497, 501], "keep": [4, 5, 9, 20, 43, 143, 219, 253, 260, 280, 282, 291, 305, 315, 319, 327, 345, 406, 437, 443, 446, 447, 448, 450, 451, 478, 479, 492, 496, 497, 501], "miss": [4, 88, 238, 291, 308, 432, 486, 489, 491, 501], "incompat": 4, "weird": [4, 339, 414], "strang": [4, 5, 9, 57, 341, 403, 492], "smaller": [4, 13, 25, 238, 246, 308, 328, 359, 396, 403, 451, 488], "zero": [4, 9, 57, 65, 76, 103, 128, 137, 154, 165, 166, 171, 172, 189, 199, 203, 237, 242, 249, 253, 282, 285, 302, 303, 304, 305, 308, 321, 322, 328, 337, 348, 352, 405, 407, 419, 450, 472, 481, 484, 486, 488, 492, 497, 498, 501], "diff": [4, 57, 239, 451], "infinit": [4, 238, 339, 406, 467, 468, 501], "rigor": [4, 479], "manner": [4, 238, 302, 437, 444, 479, 481, 488, 504], "fine": [4, 44, 171, 291, 300, 381, 407, 414, 492], "revisit": [4, 280, 504], "comptyp": [4, 280], "paramnam": [4, 5, 8, 9, 18, 308, 327, 341, 343, 447], "absmean": 4, "absmax": 4, "tsname": 4, "stream": [4, 144, 145, 146, 163, 164, 165, 168, 169, 171, 172, 174, 175, 176, 177, 178, 244, 246, 286, 290, 299, 349, 357, 365, 372, 392, 396, 403, 433, 437], "print": [4, 20, 27, 38, 54, 59, 65, 69, 77, 154, 171, 218, 282, 286, 305, 308, 343, 363, 395, 397, 403, 411, 414, 442, 444, 446, 447, 450, 451, 457, 463, 486, 488, 489, 490, 491, 501, 503], "exceed": [4, 77, 403, 405, 497, 498], "recover": 5, "down": [5, 9, 18, 20, 308, 341, 344, 352, 371, 413, 449, 450, 475, 482, 486, 488, 503], "bound": [5, 48, 55, 58, 161, 168, 200, 218, 240, 266, 282, 302, 305, 307, 308, 313, 316, 330, 332, 333, 334, 337, 339, 340, 351, 353, 438, 467, 468, 469, 472, 493], "hierarch": [5, 9, 280, 308, 329, 501], "furthermor": [5, 54, 307, 334, 341, 450, 486], "intend": [5, 22, 151, 200, 213, 237, 238, 249, 280, 290, 308, 314, 327, 330, 339, 373, 401, 403, 406, 414, 444, 445, 450, 478, 488, 504, 505], "dynam": [5, 46, 78, 100, 136, 203, 280, 308, 402, 410, 444, 501, 503], "yet": [5, 18, 45, 54, 200, 204, 218, 234, 238, 249, 285, 289, 308, 312, 327, 395, 449, 479, 486, 496, 501], "undevelop": 5, "ad": [5, 24, 25, 36, 38, 43, 44, 46, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 154, 162, 170, 172, 175, 203, 207, 218, 238, 239, 242, 247, 249, 253, 280, 282, 285, 291, 292, 297, 302, 308, 314, 315, 319, 323, 328, 329, 333, 338, 343, 345, 349, 352, 361, 365, 377, 395, 411, 412, 441, 447, 449, 451, 466, 473, 474, 475, 478, 479, 481, 482, 483, 484, 486, 487, 491, 501], "most": [5, 14, 42, 44, 77, 78, 103, 112, 138, 150, 154, 161, 162, 164, 172, 226, 238, 280, 285, 302, 305, 308, 328, 334, 336, 339, 341, 343, 345, 352, 363, 365, 379, 396, 403, 414, 441, 444, 447, 449, 450, 451, 478, 479, 480, 481, 488, 492, 493, 496, 499, 501, 507], "dump": [5, 31, 37, 40, 41, 43, 44, 213, 235, 238, 281, 282, 328, 343, 364, 366, 370, 371, 475, 501], "again": [5, 9, 59, 187, 216, 280, 328, 344, 379, 437, 446, 449, 450, 481, 492, 501, 503], "nitti": [5, 451], "gritti": [5, 451], "translat": [5, 280, 286, 326, 327, 339, 449, 479], "flat": [5, 8, 9, 285, 305, 314, 337, 396, 405, 416, 492], "pleas": [5, 18, 103, 282, 328, 400, 414, 442, 443, 444, 451, 480, 507], "convent": [5, 200, 213, 285, 330, 445, 451, 479, 501], "cxxnyi": 5, "simul": [5, 6, 19, 31, 59, 136, 211, 218, 235, 251, 253, 280, 281, 288, 328, 363, 364, 394, 447, 450, 451, 479, 486, 488, 492, 493, 499, 501, 504, 506], "arraydata": 5, "numpi": [5, 8, 9, 42, 77, 165, 308, 313, 338, 341, 344, 385, 406, 407, 414, 432, 450, 465, 469, 472, 482, 486, 488, 489, 491], "ndarrai": [5, 8, 9, 42, 77, 169, 177, 199, 282, 285, 308, 336, 337, 338, 339, 340, 344, 406, 407], "wouldn": [5, 43], "plai": [5, 280, 345, 444], "nice": [5, 82, 150, 164, 204, 211, 308, 331, 345, 395, 403, 414, 437, 444, 473, 488, 501], "arrai": [5, 8, 9, 42, 55, 77, 165, 166, 168, 282, 285, 308, 313, 327, 328, 332, 337, 338, 341, 344, 385, 406, 407, 414, 425, 432, 482, 486, 488, 497, 503, 504], "conform": [5, 151, 280, 289, 305, 312, 334, 450, 481, 499], "both": [5, 46, 48, 77, 143, 150, 153, 159, 164, 165, 174, 200, 204, 211, 218, 285, 291, 308, 314, 321, 326, 327, 328, 330, 331, 343, 345, 352, 378, 411, 436, 442, 446, 458, 473, 479, 482, 484, 486, 488, 501, 505], "fit": [5, 91, 94, 95, 96, 98, 104, 136, 173, 203, 207, 238, 249, 285, 308, 328, 334, 337, 339, 344, 348, 405, 407, 414, 451, 501, 503], "ish": [5, 432], "accomplish": [5, 491, 503], "hand": [5, 25, 64, 164, 218, 321, 345, 353, 371, 378, 411, 441, 444, 446, 449, 479, 487, 491, 501], "known": [5, 55, 136, 151, 154, 249, 253, 280, 305, 328, 391, 399, 416, 444, 478, 501], "offend": 5, "variou": [5, 18, 20, 24, 27, 33, 59, 76, 77, 133, 151, 154, 161, 165, 173, 202, 203, 210, 214, 218, 249, 268, 280, 286, 288, 308, 321, 328, 330, 344, 352, 353, 359, 364, 396, 407, 414, 425, 432, 436, 442, 444, 446, 453, 454, 456, 461, 477, 479, 480, 481, 486, 488, 492, 493, 494, 500, 501, 502, 503, 507], "necessari": [5, 19, 42, 44, 46, 112, 134, 150, 154, 170, 172, 174, 175, 194, 201, 256, 280, 282, 285, 289, 323, 326, 339, 341, 344, 400, 412, 437, 444, 479, 489, 501, 503], "mind": [5, 282, 345], "alwai": [5, 9, 57, 103, 161, 164, 165, 166, 171, 173, 174, 194, 203, 242, 249, 280, 285, 290, 302, 307, 308, 315, 321, 327, 334, 337, 339, 341, 344, 396, 408, 410, 411, 414, 437, 447, 449, 450, 488, 496, 501], "deal": [5, 9, 43, 165, 166, 225, 244, 308, 373, 406, 447, 449, 492], "routin": [5, 15, 280, 305, 341, 407, 444, 479, 482, 501], "find": [5, 9, 18, 20, 46, 54, 78, 82, 94, 95, 98, 103, 151, 154, 172, 199, 200, 218, 242, 260, 280, 282, 285, 302, 305, 308, 313, 315, 328, 330, 341, 345, 359, 363, 364, 395, 405, 407, 411, 437, 450, 451, 479, 480, 481, 482, 486, 488, 491, 492, 501, 505, 507], "themselv": [5, 8, 280, 328, 341, 344, 373, 449, 481, 491], "lack": [5, 449, 479, 485], "nan": [5, 282, 302], "jag": [5, 8, 15, 344, 482, 484, 503], "concaten": [5, 363, 406], "dimension": [5, 8, 166, 237, 285, 307, 314, 315, 352, 414, 487, 503], "describ": [5, 9, 42, 44, 46, 65, 77, 88, 142, 154, 162, 211, 213, 218, 226, 249, 280, 282, 286, 289, 303, 308, 327, 330, 331, 336, 339, 341, 344, 372, 396, 437, 449, 479, 492, 501, 502, 503, 505, 506], "shape": [5, 8, 15, 42, 124, 165, 282, 294, 297, 298, 300, 302, 303, 304, 305, 307, 308, 331, 352, 353, 354, 473, 478, 492, 493, 497, 502], "offset": [5, 8, 15, 42, 314, 328, 332, 333, 334, 337, 339, 340, 351, 396, 397, 465, 468, 475], "them": [5, 8, 9, 13, 14, 18, 36, 44, 45, 46, 47, 54, 59, 77, 103, 107, 154, 161, 164, 165, 172, 201, 203, 204, 207, 237, 244, 249, 253, 280, 282, 285, 291, 292, 305, 308, 309, 313, 314, 315, 328, 330, 331, 338, 339, 341, 343, 344, 353, 354, 356, 363, 371, 372, 379, 388, 390, 395, 396, 405, 408, 414, 421, 441, 444, 446, 447, 449, 450, 451, 478, 479, 486, 488, 491, 492, 493, 498, 501], "magic": [5, 204, 211, 280, 341, 345, 446, 486], "shouldn": [5, 258, 330], "realist": [5, 501], "scenario": [5, 211, 214, 225, 285, 290, 292, 345, 428, 444, 450, 451, 501], "1d": [5, 8, 174, 237, 238, 263, 313, 314, 338, 344, 385, 407, 482], "diagnost": [5, 9], "invert": 5, "straight": [5, 9], "closest": [5, 218, 321, 407, 501], "represent": [5, 9, 25, 44, 77, 165, 171, 176, 178, 218, 237, 238, 264, 285, 286, 290, 308, 331, 332, 336, 337, 339, 344, 347, 348, 396, 414, 444, 449, 450, 478, 479, 493, 497, 501, 503], "np": [5, 8, 42, 152, 162, 169, 199, 258, 282, 285, 308, 407, 450, 465, 469, 472, 475, 486, 488, 489, 491], "homogen": [5, 105, 166, 199, 200, 215, 238, 258, 285, 308, 314, 315, 323, 341, 352, 481, 482, 497, 501, 503], "densiti": [5, 50, 53, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 124, 128, 132, 133, 135, 136, 137, 138, 139, 140, 141, 151, 152, 154, 164, 176, 196, 199, 237, 238, 242, 244, 253, 258, 263, 281, 285, 286, 289, 291, 298, 300, 302, 305, 308, 313, 319, 321, 325, 326, 327, 328, 341, 352, 353, 354, 383, 399, 415, 419, 444, 458, 478, 479, 481, 482, 483, 484, 487, 489, 492, 493, 496, 497, 498, 499, 501, 503], "No": [5, 8, 43, 77, 79, 111, 115, 256, 258, 370, 396, 444, 450, 481, 486, 491, 493], "longer": [5, 33, 47, 238, 291, 304, 305, 354, 413, 414, 432, 450, 479, 481, 482, 489, 497, 501], "numberdens": [5, 151, 199, 305, 308, 399, 498], "tool": [5, 8, 9, 16, 20, 27, 36, 44, 167, 197, 210, 222, 224, 249, 280, 329, 348, 358, 363, 392, 409, 411, 413, 423, 426, 429, 445, 446, 448, 478, 479, 480, 482, 484, 488, 492, 503, 507], "comput": [5, 27, 53, 77, 81, 91, 96, 103, 132, 162, 164, 165, 168, 199, 203, 207, 210, 235, 237, 249, 251, 253, 259, 285, 302, 303, 304, 305, 307, 308, 313, 315, 327, 338, 339, 352, 357, 362, 396, 407, 444, 445, 447, 450, 458, 462, 477, 479, 482, 486, 488, 491, 494, 501, 504], "slap": 5, "remov": [5, 18, 45, 54, 103, 145, 203, 218, 223, 237, 242, 244, 249, 264, 280, 281, 285, 286, 289, 292, 302, 305, 308, 315, 319, 328, 341, 359, 362, 376, 395, 408, 410, 445, 447, 479, 481, 482, 483, 484, 486, 496, 497, 499, 501], "better": [5, 18, 59, 77, 154, 161, 174, 203, 205, 280, 282, 330, 332, 347, 398, 414, 443, 450, 479, 481, 484, 501], "viz": [5, 43], "view": [5, 25, 26, 315, 337, 411, 449, 480, 486, 488, 501, 503, 507], "_readparam": 5, "throughout": [6, 152, 154, 242, 308, 331, 332, 444, 450, 493, 496, 501], "rectangular": [8, 303, 307, 339, 352, 501], "jaggeddata": 8, "preserv": [8, 33, 80, 81, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 139, 141, 143, 312, 321, 359, 363, 372, 385, 407, 436, 483, 501], "multi": [8, 242, 251, 253, 285, 327, 338, 344, 358, 451, 462, 476, 477, 478, 481, 486, 491, 494, 501, 503], "popul": [8, 88, 166, 249, 290, 337, 339, 349, 396, 413, 444, 447, 449], "layer": [8, 9, 288, 330, 338, 478, 488], "jagged": 8, "length": [8, 25, 94, 95, 98, 154, 160, 165, 168, 197, 203, 210, 249, 285, 304, 312, 313, 314, 321, 328, 336, 395, 405, 406, 407, 414, 436, 447, 449, 450, 484, 486, 489, 491, 492, 496, 501, 505, 506], "reconstitut": 8, "exactli": [8, 218, 285, 308, 328, 345, 405, 412, 447, 481, 486, 501], "But": [8, 30, 73, 154, 187, 285, 305, 328, 338, 348, 363, 395, 407, 443, 447, 450, 451, 457, 479, 488, 489, 493, 502], "final": [8, 38, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 103, 225, 239, 242, 305, 328, 353, 377, 411, 412, 442, 447, 451, 466, 482, 488, 492, 501, 504], "nest": [8, 20, 25, 280, 338, 395], "round": [8, 13, 218, 286, 296, 328], "trip": [8, 13, 286], "constructor": [8, 48, 76, 144, 150, 154, 203, 305, 314, 333, 337, 338, 339, 341, 406, 414, 437], "x": [8, 10, 13, 36, 42, 44, 124, 144, 166, 172, 196, 198, 199, 200, 201, 217, 218, 237, 238, 253, 256, 258, 263, 264, 267, 285, 286, 290, 291, 294, 297, 298, 300, 307, 308, 315, 328, 332, 334, 338, 339, 354, 371, 395, 407, 411, 413, 414, 438, 439, 450, 462, 464, 465, 466, 467, 468, 469, 474, 475, 476, 477, 481, 482, 484, 486, 490, 491, 492, 493, 494, 497, 501, 503], "recurs": [8, 9, 15, 20, 45, 54, 71, 103, 150, 308, 338, 343, 364, 395, 410, 482], "classmethod": [8, 76, 77, 150, 164, 165, 199, 238, 286, 287, 289, 291, 308, 312, 330, 331, 333, 334, 340, 343, 344, 349, 372, 400, 403], "dtype": [8, 308, 341], "accompani": [8, 446], "zeroth": [8, 9, 174], "constitu": [8, 308], "obj": [8, 20, 150, 154, 170, 172, 175, 200, 249, 282, 308, 319, 327, 329, 395], "alia": [8, 23, 65, 77, 120, 121, 122, 123, 124, 125, 126, 127, 128, 136, 173, 196, 203, 232, 268, 278, 282, 285, 287, 288, 289, 290, 291, 292, 302, 303, 304, 305, 307, 308, 328, 329, 339, 343, 347, 348, 353, 354, 371, 414, 501], "respond": 8, "unpackedjaggeddata": 8, "groundwork": 9, "map": [9, 10, 13, 159, 162, 168, 171, 174, 176, 177, 237, 249, 251, 280, 286, 287, 288, 289, 290, 291, 292, 299, 308, 326, 327, 328, 332, 334, 338, 339, 341, 344, 349, 357, 372, 394, 396, 403, 411, 416, 444, 449, 458, 473, 479, 480, 481, 482, 486, 487, 488, 491, 493, 497, 499, 501, 503, 507], "datbas": 9, "tree": [9, 25, 68, 205, 308, 338, 339, 345, 372, 378, 400, 441], "append": [9, 25, 36, 42, 151, 152, 203, 281, 282, 308, 313, 332, 338, 395, 406, 414, 437, 447, 463, 464, 465, 467, 468, 469, 472, 475, 490, 493], "search": [9, 54, 68, 78, 164, 200, 218, 238, 253, 285, 300, 308, 313, 321, 328, 330, 402, 407, 437, 479, 499], "a1": [9, 80, 218, 308, 328, 501], "a1b1": 9, "a1b1c1": 9, "a1b1c2": 9, "a1b2": 9, "a1b2c1": 9, "a2": [9, 80, 218, 308, 501], "aren": [9, 19, 158, 218, 238, 249, 370, 446, 492, 501], "algorithm": [9, 43, 48, 55, 215, 222, 327, 414, 466, 479, 482, 492, 501], "travers": [9, 308, 339, 444], "region": [9, 163, 166, 171, 173, 181, 194, 199, 200, 238, 282, 315, 316, 352, 488, 497, 499, 501], "indexindata": [9, 503], "increas": [9, 251, 312, 316, 339, 347, 394, 403, 407, 451, 463, 479, 497, 499, 501], "monoton": [9, 407, 501], "children": [9, 103, 282, 285, 292, 308, 341, 344, 351, 352, 354, 402, 449, 503], "parent": [9, 46, 59, 81, 103, 162, 199, 213, 253, 254, 285, 288, 290, 296, 302, 305, 308, 329, 332, 338, 339, 341, 345, 347, 348, 352, 359, 363, 392, 411, 447, 486, 497], "contigu": [9, 492], "interleav": 9, "sibl": [9, 285, 302, 308, 501], "asid": [9, 330], "necessarili": [9, 55, 151, 164, 200, 479, 501], "child": [9, 25, 285, 290, 308, 315, 327, 329, 332, 444, 451, 482, 503], "serialnum": [9, 341, 343, 503], "numchildren": [9, 503], "reach": [9, 154, 210, 400, 405, 451, 479, 488, 501], "desir": [9, 21, 26, 92, 154, 166, 199, 213, 237, 258, 285, 290, 308, 339, 341, 343, 363, 400, 403, 405, 410, 443, 451, 473, 479, 501, 503], "ancestor": [9, 308, 341, 345], "yield": [9, 103, 166, 237, 242, 244, 247, 308, 314, 328, 406, 482, 490, 501], "direct": [9, 60, 78, 165, 166, 189, 249, 285, 292, 307, 308, 315, 327, 332, 333, 337, 339, 344, 355, 407, 437, 439, 449, 479, 497, 499, 501, 503], "elemen": 9, "subsequ": [9, 174, 235, 314, 343, 344, 405], "form": [9, 26, 77, 136, 138, 164, 210, 237, 238, 249, 253, 280, 285, 289, 290, 296, 302, 308, 315, 331, 341, 345, 370, 373, 385, 395, 439, 481, 488, 491, 492, 497, 501], "lightweight": [9, 82, 249], "stitch": [9, 437], "troubl": [9, 305, 488], "laid": [9, 341], "approach": [9, 20, 203, 218, 280, 282, 312, 328, 341, 349, 407, 450, 479, 482, 492, 501], "reason": [9, 41, 103, 150, 151, 237, 242, 249, 286, 291, 314, 330, 338, 339, 343, 414, 437, 443, 446, 447, 451, 479, 488, 497], "bad": [9, 154, 298, 373, 394, 450], "second": [9, 76, 91, 166, 181, 201, 210, 218, 238, 249, 280, 282, 308, 328, 336, 349, 407, 413, 414, 438, 447, 450, 451, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 483, 490, 501], "pretti": [9, 286, 414, 432, 437, 475], "unwieldi": 9, "consum": [9, 258, 291, 331, 406, 437, 479], "cursor": 9, "slice": [9, 307, 339, 407], "ineffici": [9, 285, 302, 305, 308], "cl": [9, 55, 152, 343, 402, 491, 501], "nonsens": 9, "who": [9, 143, 199, 203, 373, 395, 445, 450, 451, 479, 484, 501], "treat": [9, 234, 237, 242, 282, 285, 308, 327, 328, 330, 378, 414, 437, 501, 505], "might": [9, 46, 59, 151, 194, 249, 282, 285, 305, 407, 411, 414, 437, 444, 446, 450, 451, 482, 486, 488, 501, 503], "valid": [9, 33, 46, 59, 65, 68, 77, 79, 80, 81, 82, 86, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 109, 110, 111, 112, 114, 115, 124, 130, 131, 132, 135, 136, 139, 140, 141, 152, 162, 187, 235, 237, 238, 243, 253, 261, 279, 280, 291, 300, 301, 305, 308, 314, 315, 327, 328, 330, 331, 338, 344, 353, 362, 364, 365, 370, 371, 373, 375, 398, 407, 408, 441, 444, 478, 479, 482, 486, 488, 491, 501, 504], "storabl": [9, 403], "numer": [9, 138, 146, 162, 237, 238, 280, 285, 289, 291, 327, 332, 414, 481, 482, 497, 501, 504], "7": [9, 77, 81, 94, 95, 98, 104, 107, 136, 141, 146, 152, 154, 172, 183, 219, 289, 290, 298, 315, 334, 338, 353, 354, 406, 414, 450, 451, 457, 465, 486, 491, 493, 499, 501, 505], "9": [9, 20, 77, 81, 82, 100, 107, 134, 141, 152, 154, 219, 315, 334, 395, 406, 407, 414, 457, 465, 479, 480, 486, 490, 491, 492, 493, 501, 507], "6": [9, 55, 75, 77, 89, 98, 111, 135, 141, 146, 151, 152, 154, 172, 174, 183, 219, 285, 290, 307, 314, 315, 328, 334, 337, 353, 354, 396, 405, 406, 414, 436, 457, 464, 465, 467, 469, 472, 475, 486, 490, 491, 493, 501, 505], "revers": [9, 174, 177, 203, 219, 266, 308, 327, 337, 362, 444, 486], "essenti": [9, 18, 103, 150, 174, 258, 280, 286, 437, 492], "test_outputwrit": [11, 12], "test_compareset": [11, 12], "test_diffresultsbas": [11, 12], "test_comparedatabasedupl": [11, 12], "test_comparedatabasesim": [11, 12], "test_diffspecialdata": [11, 12], "test_diffsimpledata": [11, 12], "test_compareauxdata": [11, 12], "makeshufflehistori": [11, 13], "test_load": [11, 13], "test_loadsortset": [11, 13], "test_histori": [11, 13], "makehistori": [11, 13], "test_writetodb": [11, 13], "test_geth5fil": [11, 13], "test_auxdata": [11, 13], "test_replacenon": [11, 13], "test_mergehistori": [11, 13], "test_splitdatabas": [11, 13], "test_grablocalcommithash": [11, 13], "test_filenam": [11, 13], "test_readinputsfromdb": [11, 13], "test_delet": [11, 13], "test_open": [11, 13], "test_loadc": [11, 13], "test_loadblueprint": [11, 13], "test_preprestartrun": [11, 13], "test_computepar": [11, 13], "small_yaml": [11, 13], "test_readwriteroundtrip": [11, 13], "test_baddata": [11, 13], "test_interactbol": [11, 14, 255, 256, 262, 263], "test_distribut": [11, 14, 378, 385], "test_demonstratewritinginteract": [11, 14], "test_interacteverynodereturntightcoupl": [11, 14], "test_timenodeloop_tightcoupl": [11, 14], "test_syncdbafterwrit": [11, 14], "test_nosyncdbafterwrit": [11, 14], "test_writesystemattribut": [11, 14], "test_metadata_endsuccessfulli": [11, 14], "test_metadataendfail": [11, 14], "test_gethistori": [11, 14], "test_gethistorybyloc": [11, 14], "test_growtofullcor": [11, 14, 350, 357, 359], "test_growtofullcorewithc": [11, 14], "test_growtofullcorefromfactori": [11, 14], "test_growtofullcorefromfactorywithc": [11, 14], "test_readwritten": [11, 14], "test_readwithoutinput": [11, 14], "test_varioustypeswork": [11, 14], "test_timestep": [11, 14], "test_baddbnam": [11, 14], "test_standardrestart": [11, 14], "test_roundtrip": [11, 15, 293, 299], "test_roundtripbool": [11, 15], "test_flatten": [11, 15, 415, 424], "test_backwardscompat": [11, 15], "test_locationpack": [11, 16], "test_locationpackingoldervers": [11, 16], "test_locationpackingoldvers": [11, 16], "test_clos": [11, 16], "methodnam": [12, 13, 14, 15, 16, 29, 30, 33, 34, 35, 40, 41, 52, 53, 57, 58, 73, 74, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 148, 149, 156, 157, 158, 159, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 209, 210, 222, 223, 224, 231, 232, 233, 246, 247, 251, 256, 257, 263, 264, 265, 266, 267, 268, 271, 278, 294, 295, 296, 297, 298, 299, 300, 301, 321, 322, 323, 324, 325, 326, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "runtest": [12, 13, 14, 15, 16, 29, 30, 33, 34, 35, 40, 41, 52, 53, 57, 58, 73, 74, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 148, 149, 156, 157, 158, 159, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 209, 210, 222, 223, 224, 231, 232, 233, 246, 247, 251, 256, 257, 263, 264, 265, 266, 267, 268, 271, 278, 294, 295, 296, 297, 298, 299, 300, 301, 320, 321, 322, 323, 324, 325, 326, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "testcas": [12, 13, 14, 15, 16, 29, 30, 33, 34, 35, 40, 41, 52, 53, 57, 58, 73, 74, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 148, 149, 156, 157, 158, 159, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 209, 210, 223, 231, 233, 246, 247, 251, 256, 257, 263, 264, 265, 266, 267, 268, 271, 294, 295, 296, 297, 298, 299, 300, 301, 321, 322, 323, 324, 325, 326, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 375, 376, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 450], "valueerror": [12, 13, 14, 15, 16, 29, 30, 33, 34, 35, 40, 41, 52, 53, 57, 58, 73, 74, 77, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 148, 149, 156, 157, 158, 159, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 202, 209, 210, 222, 223, 224, 231, 232, 233, 237, 238, 246, 247, 251, 253, 256, 257, 263, 264, 265, 266, 267, 268, 271, 278, 282, 285, 286, 292, 294, 295, 296, 297, 298, 299, 300, 301, 313, 314, 321, 322, 323, 324, 325, 326, 344, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 371, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 405, 410, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 484], "photocopi": 12, "simlar": 12, "walk": [13, 486, 492], "few": [13, 18, 31, 154, 235, 249, 258, 328, 362, 444, 447, 450, 451, 465, 478, 479, 491, 492, 493, 501], "shuffl": [13, 215, 217, 218, 219, 223, 290, 318, 328, 330, 411, 482, 486, 492, 497, 499, 501], "languag": [13, 341, 466, 479, 492], "agnost": 13, "super": [13, 43, 55, 73, 135, 256, 257, 307, 403, 451], "correctli": [13, 15, 164, 210, 256, 263, 264, 271, 278, 282, 285, 307, 321, 326, 352, 353, 359, 360, 389, 391, 394, 429, 434, 451, 482, 484, 488], "armirun": [13, 223, 359], "setup": [13, 280, 315, 321, 365, 451, 482, 500], "abov": [13, 101, 150, 152, 162, 234, 249, 280, 282, 308, 321, 330, 338, 345, 359, 396, 406, 419, 439, 444, 446, 447, 449, 451, 465, 478, 479, 488, 492, 493, 497, 501, 503, 504], "reloadingdb": 13, "nonexist": [13, 376], "refoneblockreactor": 13, "nsystem": 13, "y": [13, 25, 36, 42, 92, 107, 113, 135, 141, 152, 218, 260, 285, 290, 307, 332, 334, 338, 339, 405, 407, 411, 413, 414, 433, 438, 439, 450, 464, 466, 467, 468, 469, 474, 475, 490, 492, 493, 497, 501, 503], "z": [13, 36, 42, 82, 89, 111, 136, 138, 151, 152, 153, 154, 156, 189, 282, 285, 290, 299, 308, 309, 315, 316, 321, 323, 327, 328, 332, 333, 334, 337, 338, 339, 414, 439, 444, 462, 464, 466, 467, 468, 472, 474, 475, 476, 477, 481, 486, 490, 492, 493, 494, 497, 501], "sfp": [13, 26, 33, 218, 223, 280, 282, 286, 290, 292, 328, 329, 347, 348, 359, 482, 486, 496, 501], "1000": [13, 138, 141, 154, 251, 447, 451, 486, 491, 492, 496, 501], "evst": 13, "excor": [13, 280, 329, 355, 486, 491, 501], "2000": [13, 107, 111, 112, 124, 136, 141, 489, 501], "ngrid": 13, "hex_corners_up": 13, "lattic": [13, 168, 172, 199, 217, 223, 235, 237, 238, 249, 252, 253, 254, 256, 257, 263, 285, 290, 291, 295, 299, 303, 308, 314, 339, 396, 405, 444, 458, 482, 484, 492, 493], "ic": [13, 124, 290, 294, 297, 298, 300, 473, 492, 501], "symmetri": [13, 249, 281, 282, 285, 290, 308, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 396, 465, 473, 479, 481, 482, 492, 493, 496, 501], "32": [13, 152, 330, 344, 403, 414, 479, 492], "hex": [13, 52, 53, 174, 177, 186, 189, 191, 215, 219, 222, 224, 238, 249, 281, 282, 285, 290, 308, 314, 315, 323, 324, 328, 331, 332, 334, 336, 337, 338, 339, 349, 351, 352, 353, 357, 359, 378, 396, 405, 406, 416, 456, 460, 462, 465, 473, 476, 477, 478, 479, 481, 482, 484, 486, 492, 494, 496, 497, 499, 501], "And": [13, 211, 214, 282, 339, 363, 442, 443, 450, 451, 488, 492], "move": [13, 46, 57, 154, 164, 205, 206, 213, 214, 217, 218, 280, 282, 286, 289, 291, 308, 319, 321, 327, 328, 330, 339, 347, 354, 378, 395, 401, 411, 413, 466, 478, 479, 481, 482, 484, 486, 496], "cover": [14, 124, 159, 308, 326, 352, 378, 443, 450, 488, 500], "quickli": [14, 18, 203, 359, 378, 441, 448, 475, 479, 484, 488, 491, 493], "bol": [14, 18, 24, 31, 69, 77, 203, 211, 235, 253, 260, 263, 280, 285, 286, 308, 312, 328, 411, 444, 449, 478, 481, 482, 486, 491, 497, 498, 499, 501, 503, 506], "temporari": [14, 19, 61, 76, 249, 400, 413, 420], "NOT": [14, 76, 99, 100, 150, 174, 210, 218, 219, 308, 312, 352], "fast": [14, 20, 76, 175, 183, 213, 219, 240, 242, 249, 285, 309, 328, 332, 437, 446, 458, 478, 479, 481, 486, 487, 491, 493, 497, 499, 501], "everi": [14, 20, 55, 77, 158, 174, 203, 235, 237, 242, 249, 253, 282, 308, 328, 341, 362, 365, 378, 394, 396, 397, 406, 407, 411, 413, 414, 437, 444, 449, 451, 480, 484, 488, 491, 493, 496, 501, 507], "syncdbafterwrit": [14, 481, 484, 501], "metadata": [14, 142, 159, 166, 167, 174, 177, 182, 194, 280, 289, 341, 343, 344, 376, 413, 481, 482, 503], "either": [15, 25, 43, 46, 55, 57, 77, 78, 103, 163, 166, 168, 174, 177, 199, 203, 204, 213, 218, 238, 242, 249, 253, 258, 280, 285, 289, 290, 291, 296, 308, 315, 330, 332, 336, 338, 339, 363, 371, 373, 378, 396, 397, 399, 411, 437, 446, 447, 450, 451, 473, 479, 488, 492, 493, 501], "text": [18, 20, 59, 60, 65, 77, 161, 285, 286, 305, 308, 314, 363, 378, 385, 392, 396, 411, 414, 432, 437, 442, 451, 467, 475, 482, 486, 492, 501, 503, 504], "mechan": [18, 77, 78, 86, 115, 225, 305, 328, 330, 376, 447, 479, 480, 488, 501, 504, 507], "etc": [18, 19, 25, 46, 77, 103, 107, 133, 151, 153, 161, 162, 199, 200, 201, 203, 207, 211, 218, 237, 242, 244, 249, 259, 280, 281, 282, 285, 286, 292, 303, 305, 308, 312, 314, 315, 328, 330, 339, 341, 344, 363, 365, 379, 395, 396, 410, 411, 437, 444, 446, 447, 449, 450, 478, 479, 486, 490, 491, 492, 493, 500, 501], "particularli": [18, 41, 65, 238, 321, 328, 339, 446, 450, 488, 493, 501], "eqhistorytrackerinterfac": 18, "unravel": 18, "interest": [18, 20, 48, 82, 84, 249, 282, 313, 314, 321, 328, 444, 464, 479, 488, 500, 501], "armiblock": 18, "blocknam": 18, "historykei": 18, "paralyzingli": 18, "slow": [18, 308, 327, 437, 448, 482], "To": [18, 25, 44, 59, 76, 81, 144, 153, 199, 218, 280, 282, 285, 315, 327, 328, 330, 347, 378, 388, 390, 395, 414, 421, 437, 441, 442, 443, 444, 446, 447, 449, 451, 479, 480, 488, 489, 491, 492, 501, 503, 504, 507], "def": [18, 55, 280, 341, 344, 397, 406, 412, 442, 446, 447, 463, 465, 473, 475, 486, 488, 491, 492, 501], "percentbu": [18, 218, 466, 497, 498], "your": [18, 20, 30, 45, 76, 81, 103, 199, 213, 218, 238, 244, 249, 280, 309, 327, 328, 365, 373, 395, 397, 400, 407, 411, 413, 441, 442, 443, 444, 447, 450, 451, 452, 458, 459, 472, 477, 479, 480, 486, 487, 491, 492, 494, 501, 507], "now": [18, 36, 46, 48, 103, 138, 145, 174, 187, 200, 206, 251, 280, 285, 308, 329, 337, 341, 441, 447, 449, 450, 451, 479, 480, 481, 482, 483, 484, 486, 487, 488, 491, 492, 496, 501, 502, 504, 507], "assemswithhistori": 18, "timestepsavail": 18, "gettimeindic": 18, "fluxattimestep3": 18, "b1003a": 18, "date": [18, 237, 249, 280, 328, 339, 371, 441, 451, 481, 482, 483, 484, 486, 488, 501], "stop": [18, 75, 338, 397, 437, 451, 472, 479], "variabl": [18, 46, 48, 49, 55, 77, 103, 144, 154, 162, 168, 169, 174, 194, 203, 213, 238, 249, 263, 282, 285, 290, 291, 305, 308, 311, 312, 315, 316, 321, 328, 336, 343, 395, 410, 414, 437, 444, 447, 450, 451, 478, 480, 481, 482, 484, 488, 500, 501, 507], "detailassemblynam": 18, "year": [18, 103, 413, 451, 479, 499], "look": [18, 20, 27, 138, 151, 153, 154, 162, 203, 213, 218, 237, 242, 282, 285, 308, 315, 328, 330, 339, 341, 402, 414, 443, 446, 447, 448, 451, 486, 488, 489, 492, 501], "ask": [18, 20, 59, 285, 308, 373, 398, 410], "activ": [18, 31, 46, 59, 71, 77, 150, 154, 162, 200, 203, 280, 282, 289, 291, 305, 328, 372, 373, 411, 441, 443, 444, 446, 450, 451, 479, 480, 482, 488, 497, 501, 507], "treatment": [18, 31, 242, 291, 344, 501], "assem": [18, 218, 223, 300, 312, 315, 326, 327, 328, 329, 348, 395, 411, 486], "give": [18, 24, 92, 133, 138, 153, 218, 235, 285, 291, 302, 305, 308, 321, 338, 339, 363, 407, 408, 449, 483, 492, 493, 503], "signal": [18, 31, 76, 285, 344, 345], "timeindic": 18, "boc": [18, 77, 203, 211, 235, 249, 253, 256, 263, 285, 395, 444, 478, 497, 501, 503], "moc": [18, 77, 249], "fashion": [18, 450], "inexpens": 18, "simultan": [18, 407], "preload": 18, "keyerror": [18, 54, 78, 330], "found": [18, 25, 41, 57, 78, 166, 211, 213, 218, 280, 282, 285, 308, 313, 321, 328, 330, 331, 334, 336, 345, 398, 402, 407, 408, 433, 437, 444, 449, 479, 485, 488, 501], "manipul": [19, 46, 64, 75, 164, 203, 280, 335, 363, 410, 437, 501, 502, 503], "catch": [19, 162, 359, 422], "admittedli": 19, "_c": [19, 242], "instanti": [19, 76, 124, 154, 161, 201, 202, 203, 216, 218, 280, 341, 343, 345, 358, 362, 365, 414, 444, 446], "databs": 19, "soon": [19, 280, 305, 308, 349, 450, 451, 454, 461, 477, 479, 481, 488, 489, 494], "construct": [19, 31, 55, 57, 69, 77, 78, 88, 151, 169, 181, 199, 210, 253, 259, 280, 286, 287, 288, 289, 290, 292, 295, 296, 300, 301, 305, 308, 312, 321, 328, 330, 331, 334, 338, 339, 340, 341, 353, 373, 385, 388, 394, 406, 466, 473, 474, 481, 486, 491, 501, 503], "argument": [19, 31, 38, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 103, 150, 153, 210, 237, 239, 280, 290, 303, 305, 308, 321, 328, 336, 338, 339, 341, 344, 365, 373, 377, 378, 385, 388, 394, 414, 442, 444, 446, 449, 450, 451, 481, 482, 484, 486], "delet": [19, 20, 61, 76, 77, 143, 145, 152, 154, 174, 249, 315, 328, 362, 363, 378, 400, 401, 410, 441, 450, 482, 501], "clean": [19, 61, 76, 145, 154, 213, 308, 315, 400, 420, 441, 444, 451, 482, 501], "job": [19, 76, 238, 314, 429, 501], "cours": [19, 218, 309, 445, 479, 491, 492, 493], "diagnos": [20, 387], "psutil": 20, "perspect": [20, 143, 242, 280, 437, 488, 496], "great": [20, 100, 328, 341, 429, 441, 451, 479, 501], "gc": 20, "get_object": 20, "garbag": [20, 76], "collector": [20, 76], "count": [20, 21, 22, 26, 164, 165, 237, 285, 328, 334, 348, 379, 386, 395, 413, 414, 482, 493], "note": [20, 93, 151, 168, 403, 406, 413, 414, 431, 443, 447, 463, 475, 479, 486, 493, 496, 497, 501, 503], "sy": [20, 75, 488], "getsizeof": 20, "certainli": [20, 451, 493, 501], "slightli": [20, 64, 218, 279, 285, 291, 339, 481, 484, 488, 492, 501], "seem": [20, 32, 44, 219, 249, 339, 341, 371], "de": [20, 43, 285, 363], "alloc": [20, 166, 237, 238, 501], "got": [20, 143], "2gb": 20, "pythonhost": 20, "hook": [20, 46, 77, 203, 251, 279, 280, 289, 391, 394, 445, 446, 479, 481, 484, 488, 501], "good": [20, 44, 46, 91, 138, 172, 203, 219, 256, 286, 305, 344, 378, 411, 414, 443, 445, 449, 450, 479, 480, 481, 486, 488, 501, 507], "summari": [20, 26, 27, 38, 60, 65, 69, 152, 213, 281, 292, 301, 308, 316, 328, 362, 445, 466, 473, 474, 486, 501, 503], "timedescript": 20, "stdout": [20, 213, 301, 363, 488, 503], "debugmem": [20, 501], "turn": [20, 82, 237, 249, 253, 280, 282, 285, 290, 328, 363, 385, 395, 437, 442, 444, 446, 473, 479, 481, 491, 493, 501, 504], "problem": [20, 54, 103, 162, 166, 168, 169, 181, 238, 249, 253, 254, 291, 298, 308, 327, 328, 338, 339, 340, 362, 373, 376, 413, 444, 451, 475, 479, 492, 493, 499, 501], "attrnam": 20, "refobject": 20, "thorugh": 20, "referr": 20, "oppos": [20, 285, 305, 385, 396], "gigabyt": 20, "reports": 20, "helper": [20, 22, 57, 218, 243, 261, 308, 344, 348, 359, 363, 373, 382, 387, 389, 393, 488], "u": [20, 107, 124, 133, 134, 135, 136, 152, 153, 154, 164, 183, 219, 242, 280, 285, 286, 289, 290, 294, 300, 308, 330, 343, 363, 399, 450, 470, 471, 475, 479, 480, 486, 488, 492, 493, 507], "footprint": 20, "ao": 20, "arbitrarili": [20, 327, 328, 330, 394, 488, 501], "deepli": 20, "focus": [20, 337, 479, 493, 501], "held": [20, 308, 328], "classtyp": 20, "sys_mem": 20, "hostnam": 20, "14": [20, 111, 135, 152, 219, 334, 414, 465, 476, 486, 490, 492, 501], "ram": [20, 479], "proc": 20, "mem": 20, "mb": [20, 460, 476, 499], "491": 20, "472": 20, "471": 20, "470": [20, 501], "13": [20, 135, 152, 219, 334, 407, 414, 444, 465, 482, 486, 490, 501], "474": 20, "473": [20, 80, 91], "460": 20, "461": 20, "printabl": 21, "test_newreport": [21, 28], "testreportcontentcr": [21, 28, 29], "test_report": [21, 28], "testreportingutil": [21, 28, 30], "testreport": [21, 28, 30], "testreportinterfac": [21, 28, 30], "groupsorderfirst": [21, 22], "componentwellgroup": [21, 22], "addtoreport": [21, 22], "writehtml": [21, 22], "writegroupshtml": [21, 22], "writeescap": [21, 23], "writereport": [21, 25, 26, 449], "tableofcont": [21, 25], "leveldict": [21, 25], "addchildel": [21, 25, 449], "addrow": [21, 25, 449], "generatedesignreport": [21, 26], "printreport": [21, 26, 30], "writerunsummari": [21, 26], "reportsfp": [21, 26], "countassembliessfp": [21, 26], "insert": [22, 25, 64, 103, 203, 280, 281, 282, 285, 308, 348, 413, 444, 449, 496], "datum": [22, 407], "f": [22, 23, 92, 103, 152, 199, 219, 343, 407, 411, 414, 437, 442, 447, 448, 463, 467, 486, 488, 489, 490, 491, 493, 501, 503], "midst": [22, 308], "accept": [22, 48, 150, 154, 218, 282, 336, 340, 344, 371, 414, 439, 443, 450, 481, 501], "reportdatum": 22, "arg": [23, 38, 59, 63, 64, 65, 73, 77, 81, 88, 101, 107, 130, 132, 133, 134, 135, 136, 150, 168, 196, 237, 238, 279, 280, 287, 288, 289, 290, 291, 292, 302, 328, 337, 340, 344, 354, 363, 365, 379, 394, 395, 397, 414, 442, 482], "kwd": 23, "file_path": [23, 25], "embed": [23, 25, 44, 501], "src": [23, 25, 395, 437, 441, 471], "base64": [23, 25], "casetitl": [23, 213, 249, 364, 365, 473], "comprehens": [24, 260, 330, 449], "summar": [24, 27, 38, 54, 65, 69, 203, 249, 362, 363, 449, 466, 473, 474, 482, 486, 501], "cold": [24, 103, 285, 302, 303, 304, 305, 307, 308, 312, 319, 321, 352, 353, 354, 411, 449, 482, 484, 492, 496, 497, 501, 502], "boolean": [24, 25, 77, 150, 154, 165, 203, 258, 282, 285, 308, 312, 314, 315, 321, 328, 331, 364, 371, 391, 407, 411, 413, 437, 497, 501], "part": [24, 55, 115, 166, 203, 238, 280, 308, 315, 319, 330, 334, 336, 344, 414, 437, 446, 449, 450, 458, 479, 482, 488, 491, 501], "tablesect": [24, 25], "control": [24, 31, 49, 81, 171, 173, 174, 176, 182, 189, 210, 218, 235, 237, 238, 281, 282, 285, 286, 290, 291, 308, 314, 315, 322, 327, 328, 330, 340, 341, 366, 414, 447, 451, 458, 478, 479, 481, 482, 486, 488, 491, 496, 497, 499, 501, 503], "pin": [24, 27, 215, 219, 225, 234, 249, 281, 282, 285, 290, 302, 304, 305, 308, 309, 312, 314, 319, 325, 328, 330, 332, 338, 344, 351, 352, 359, 396, 405, 444, 458, 478, 479, 482, 486, 491, 492, 493, 497, 498, 499, 502], "fraction": [24, 79, 81, 83, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 106, 107, 114, 124, 132, 133, 134, 136, 137, 153, 154, 162, 168, 203, 210, 234, 235, 237, 244, 268, 285, 289, 298, 302, 305, 308, 313, 315, 319, 327, 328, 336, 352, 353, 364, 395, 397, 399, 419, 436, 444, 449, 462, 472, 476, 477, 478, 479, 481, 482, 486, 489, 492, 494, 496, 497, 498, 499, 501, 506], "subsect": [24, 25, 219, 286, 441, 480, 507], "componenet": 24, "generatefullcoremap": [24, 26, 27], "showblockaxmesh": [24, 26, 27, 411, 473], "hold": [25, 77, 164, 177, 178, 202, 238, 282, 287, 302, 305, 308, 315, 339, 341, 343, 405, 478, 501], "abc": [25, 37, 286, 336, 338], "htmltree": [25, 449], "htmlelement": [25, 449], "idprefix": 25, "higher": [25, 174, 218, 280, 282, 305, 321, 444, 492, 503], "font": [25, 411], "rang": [25, 45, 55, 91, 102, 114, 328, 339, 341, 392, 406, 447, 451, 455, 462, 466, 468, 469, 477, 486, 491, 494, 501], "term": [25, 162, 165, 166, 211, 218, 237, 244, 249, 328, 332, 407, 478, 479, 492], "href": 25, "referenc": [25, 161, 164, 365], "left": [25, 154, 161, 217, 249, 280, 305, 308, 334, 336, 338, 339, 371, 396, 407, 414, 449, 503, 504, 505], "subhead": 25, "imagepath": 25, "encod": 25, "hexplot": 25, "premad": 25, "png": [25, 315, 411, 448, 457, 501], "With": [25, 43, 282, 339, 345, 486, 492, 501, 504], "row": [25, 42, 165, 181, 201, 308, 396, 406, 414, 416, 432, 449, 503], "rname": [25, 449], "yaxi": [25, 260, 413, 449], "eventu": [25, 150, 286, 331, 396, 481, 501], "axi": [25, 174, 260, 285, 321, 338, 339, 396, 405, 411, 413, 439, 496, 497, 499], "identifi": [25, 76, 103, 151, 154, 280, 285, 286, 313, 395, 399, 434, 479, 492, 497, 501], "peakdpa": 25, "keff": [25, 210, 249, 251, 328, 370, 407, 413, 444, 449, 486, 497, 499, 501, 504], "seri": [25, 54, 55, 76, 150, 151, 172, 203, 407, 413, 441, 491, 501], "effect": [25, 50, 58, 107, 136, 154, 168, 237, 238, 253, 287, 291, 308, 314, 327, 328, 343, 378, 449, 479, 499, 501, 504], "uncertainti": [25, 449], "keffunc": [25, 413, 449, 499], "uncontrol": [25, 210, 413, 436, 492, 493, 499], "burn": [25, 124, 152, 154, 158, 162, 210, 237, 242, 249, 285, 286, 291, 294, 298, 300, 395, 436, 450, 475, 478, 493, 497, 501], "getassembli": [25, 281, 328, 348, 444, 466, 486, 503], "peakbu": 25, "bu": [25, 215, 218, 219, 237, 449, 450, 486, 491], "maxvalu": 25, "defaultdict": [25, 238, 463, 490], "max": [25, 80, 103, 210, 218, 223, 249, 260, 285, 308, 328, 341, 344, 347, 348, 482, 496, 499, 501, 504, 506], "maxpercentbu": [25, 218, 328, 496, 499, 501], "linetoaddto": 25, "our": [25, 44, 190, 363, 371, 403, 424, 443, 446, 449, 450, 451, 464, 479, 485, 488, 492, 501, 504, 505], "ymin": [25, 413, 467], "ext": [25, 89, 91, 122, 372, 378, 441], "minimum": [25, 103, 238, 308, 314, 327, 334, 337, 339, 399, 411, 413, 497, 499, 501], "enum": [25, 76, 77, 152, 178, 236, 238, 331, 372, 403, 481], "enumer": [25, 152, 235, 331, 372, 447, 457, 472, 475, 481], "pdf": [26, 79, 80, 91, 93, 94, 95, 96, 97, 98, 107, 129, 130, 131, 132, 136, 138, 153, 161, 174, 441, 482, 501], "disabl": [26, 77, 203, 238, 249, 253, 414, 420, 432, 444, 481, 497, 501], "spent": [26, 218, 223, 292, 328, 332, 348, 355, 444, 474, 479, 481, 482, 486, 493, 496, 499, 501], "pool": [26, 218, 223, 292, 328, 332, 348, 355, 444, 474, 481, 482, 486, 493, 496, 501], "miscellan": 27, "Then": [27, 45, 164, 237, 282, 285, 308, 488], "processor": [27, 76, 143, 150, 204, 238, 253, 385, 437, 447, 484, 486, 492], "convergencesummari": 27, "weight": [27, 54, 83, 151, 152, 153, 154, 168, 199, 200, 237, 263, 305, 308, 328, 399, 475, 482, 488, 490, 497, 499, 501], "balanc": [27, 178, 199, 238, 249, 251, 387, 447, 450, 497], "duct": [27, 92, 281, 285, 302, 305, 314, 321, 322, 328, 330, 352, 354, 411, 458, 463, 473, 479, 486, 491, 492, 497, 501], "simplist": [27, 501], "averag": [27, 91, 96, 103, 168, 174, 199, 237, 249, 263, 282, 285, 307, 308, 312, 313, 315, 327, 328, 330, 341, 344, 351, 407, 411, 425, 482, 486, 490, 492, 496, 497, 499, 501], "fz": 27, "fxy": 27, "fq": 27, "edit": [27, 55, 289, 442, 444, 451, 480, 492, 501, 503, 507], "test_timeseri": [28, 29], "test_tablecr": [28, 29], "test_reportcont": [28, 29], "test_reportcontentsend": [28, 29], "test_neutronicsplotfunct": [28, 29], "test_writereport": [28, 29, 30], "test_reportbas": [28, 29], "test_reportlog": [28, 29], "test_getsysteminfolinux": [28, 30], "test_getsysteminfowindow": [28, 30], "test_getsysteminfomac": [28, 30], "test_getsysteminfo": [28, 30], "test_getnodenam": [28, 30], "test_setdata": [28, 30], "test_getdata": [28, 30], "test_reactorspecificreport": [28, 30], "test_writewelcomehead": [28, 30], "test_printreport": [28, 30], "test_distributablereportint": [28, 30], "test_interactbolreportint": [28, 30], "test_interacteverynod": [28, 30, 32, 35, 255, 256, 262, 263], "test_interactboc": [28, 30, 221, 223, 255, 256, 262, 263], "test_interacteoc": [28, 30], "test_interacteol": [28, 30], "_getsysteminfolinux": 30, "mock": [30, 223, 251, 352, 379, 389], "mocksubprocess": 30, "_getsysteminfowindow": 30, "_getsysteminfomac": 30, "saniti": [30, 323, 391, 432], "wild": 30, "mainstream": [30, 143], "distro": 30, "fail": [30, 73, 76, 154, 200, 237, 266, 282, 334, 349, 364, 365, 373, 378, 388, 389, 392, 395, 408, 412, 420, 481, 482, 484, 501], "empti": [30, 36, 42, 77, 103, 137, 154, 200, 210, 237, 253, 280, 282, 285, 327, 343, 352, 353, 354, 359, 378, 403, 411, 414, 416, 432, 478, 482, 488, 492, 501], "machin": [30, 71, 204, 218, 223, 411, 413, 479, 480, 486, 507], "cluster": [30, 45, 54, 59, 76, 365, 410, 491, 501], "trigger": [31, 150, 161, 165, 235, 280, 345, 466, 473, 474, 478, 479, 486, 496, 503], "folder": [31, 60, 203, 211, 213, 408, 420, 441, 449, 450, 480, 488, 491, 503, 507], "review": [31, 136, 162, 203, 378, 443, 444, 450, 451], "collabor": [31, 280, 479], "dumpsnapshot": [31, 35, 501], "defaultsnapshot": [31, 501], "manageri": 31, "assign": [31, 77, 103, 152, 199, 218, 238, 264, 285, 305, 313, 330, 332, 338, 341, 343, 344, 353, 412, 482, 486, 497, 501], "mol": [31, 81, 107, 132, 136, 501], "stamp": 31, "cccnnn": [31, 501], "opposit": [31, 304, 339, 447], "engin": [32, 46, 82, 109, 162, 226, 445, 488, 489, 490, 491, 501], "world": [32, 249, 395, 432], "test_calcmgflu": [32, 33], "test_historyparamet": [32, 33], "test_historyreport": [32, 33], "test_getblockinassembli": [32, 33], "test_timestepfilt": [32, 33], "test_timestepfilteringwithgap": [32, 33], "test_blocknam": [32, 33], "test_fullbreakdown": [32, 34], "test_displaymemoryusag": [32, 34], "test_printfullmemorybreakdown": [32, 34], "test_getreferr": [32, 34], "test_checkforduplicateobjectsonarmimodel": [32, 34], "test_profilememoryusageact": [32, 34], "get_contain": [32, 34], "test_expandcontain": [32, 34], "test_counthandlesrecurs": [32, 34], "test_interactcoupl": [32, 35], "test_activeatedefaultsnapshots_30cycles2burnstep": [32, 35], "test_activeatedefaultsnapshots_17cycles5burnstep": [32, 35], "confirm": [33, 352, 373], "mg": [33, 152], "hdf": [33, 486], "hdfdb": [33, 76], "readblockshistori": 33, "historical_valu": 33, "historical_indic": 33, "cast": [33, 134], "energi": [33, 153, 157, 166, 168, 174, 177, 178, 181, 192, 199, 200, 240, 249, 251, 266, 285, 305, 308, 328, 352, 408, 411, 444, 470, 478, 479, 482, 488, 497, 499, 501], "retriev": [33, 77, 151, 152, 154, 183, 200, 201, 203, 210, 246, 305, 308, 313, 328, 330, 337, 341, 351, 352, 353, 354, 359, 400, 481, 486, 490, 501], "paramat": 33, "swap": [33, 143, 145, 218, 413, 466, 486, 501], "5": [33, 35, 53, 55, 77, 79, 82, 92, 95, 96, 100, 111, 119, 135, 138, 139, 141, 150, 152, 162, 166, 172, 174, 189, 210, 218, 219, 234, 235, 244, 282, 285, 294, 315, 321, 334, 337, 339, 351, 353, 395, 406, 414, 433, 436, 449, 451, 464, 465, 466, 468, 469, 473, 474, 475, 484, 486, 488, 490, 491, 492, 493, 497, 501, 503, 505], "loc": [33, 328, 329, 344, 348, 362, 444, 493], "mocksnapshotrequest": 35, "30": [35, 107, 130, 131, 152, 161, 177, 210, 282, 328, 337, 353, 396, 406, 414, 436, 451, 473, 486, 492, 501], "burnstep": [35, 45, 202, 203, 395, 436, 492, 493, 501], "17": [35, 107, 152, 162, 166, 219, 334, 481, 486, 490, 501], "amen": 36, "theoret": [36, 81, 103, 128, 300, 305, 353, 482, 484, 498], "sort": [36, 77, 152, 174, 281, 285, 302, 308, 328, 330, 337, 341, 352, 359, 362, 403, 411, 437, 465, 466, 482, 486, 491, 501], "wide": [36, 169, 304, 308, 368, 378, 442, 489, 492, 499], "vi": [36, 37, 38, 488], "qualiti": [36, 92, 112, 134, 451, 472, 479, 489], "pure": [36, 80, 107, 109, 132, 135, 328, 363, 396, 403, 432, 437, 489], "silo": 36, "binari": [36, 44, 77, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 185, 189, 406, 470, 488, 501, 503], "test_vi": [36, 39, 41], "testvtkmesh": [36, 39, 40], "testvisdump": [36, 39, 40], "test_xdmf": [36, 39], "testxdmf": [36, 39, 41], "dumpstat": [36, 37, 43, 44], "addopt": [36, 38, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 235, 239, 364, 371, 442], "settingsargu": [36, 38, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 235, 239, 374, 377, 442], "docstr": [38, 65, 69, 164, 412, 414, 441, 445, 446, 449, 451, 483], "decor": [38, 65, 69, 344, 378, 397, 398, 408, 418, 446], "instead": [38, 65, 69, 78, 103, 154, 203, 213, 218, 253, 256, 280, 282, 285, 290, 292, 302, 305, 308, 327, 328, 331, 337, 339, 344, 345, 365, 378, 379, 389, 395, 397, 408, 437, 447, 449, 450, 479, 481, 482, 486, 488, 492, 501], "suffici": [38, 65, 69, 107, 203, 253, 309, 492, 501], "short": [38, 46, 54, 59, 65, 69, 162, 213, 216, 249, 341, 343, 344, 365, 372, 446, 451, 480, 492, 501, 507], "express": [38, 46, 331, 406, 433, 437, 450, 451, 466, 479, 492, 501, 505], "One": [38, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 161, 166, 194, 239, 280, 305, 337, 341, 351, 373, 377, 402, 406, 444, 449, 486, 490, 501], "unspecifi": [38, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 239, 264, 377], "parser": [38, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 165, 239, 377, 442], "posit": [38, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 218, 239, 249, 282, 285, 307, 308, 312, 315, 328, 332, 334, 336, 337, 338, 339, 340, 377, 396, 405, 406, 407, 413, 414, 423, 449, 481, 482, 493, 497, 499, 501, 503], "test_testvtkmesh": [39, 40], "test_dumpreactorvtk": [39, 40], "test_dumpreactorxdmf": [39, 40], "test_hexmesh": [39, 40], "test_cartesianmesh": [39, 40], "test_deduptim": [39, 41], "whole": [40, 41, 60, 174, 199, 218, 295, 308, 328, 351, 443, 447, 451, 479, 481, 488, 492, 501], "funtion": 41, "vacuum": [41, 174, 328], "resort": 41, "goe": [42, 204, 328, 336, 337, 352, 443, 451, 475], "vertic": [42, 43, 304, 312, 321, 411, 478, 501], "problemat": [42, 292, 479], "primit": [42, 302, 305, 478], "celltyp": 42, "unstructur": [42, 43, 336], "mesh": [42, 43, 44, 49, 124, 164, 169, 171, 176, 177, 182, 238, 249, 251, 282, 285, 286, 288, 294, 297, 298, 300, 307, 308, 312, 315, 316, 321, 324, 326, 327, 328, 332, 333, 334, 337, 338, 339, 340, 344, 354, 407, 411, 466, 473, 474, 481, 482, 486, 492, 493, 496, 497, 498, 499, 501], "vertex": 42, "cell": [42, 285, 328, 332, 334, 336, 337, 338, 339, 390, 396, 405, 423, 432, 441, 492, 493], "onto": [42, 237, 308, 327, 328, 343, 479, 481, 488, 503], "concept": [42, 46, 91, 203, 292, 328, 334, 446, 450, 482, 501], "bunch": [42, 143, 364, 408, 447, 486, 503], "nx3": 42, "per": [42, 43, 49, 75, 124, 154, 158, 162, 164, 168, 203, 212, 253, 285, 302, 308, 315, 316, 326, 328, 334, 365, 395, 413, 414, 432, 444, 450, 478, 479, 482, 492, 497, 499, 501], "belong": [42, 46, 103, 152, 211, 280, 308, 344, 348, 451, 457], "contin": 42, "relev": [42, 77, 159, 203, 218, 226, 253, 287, 312, 328, 330, 345, 347, 403, 443, 452, 477, 484, 493, 494, 501, 503], "writer": [43, 168, 180, 181, 190, 218, 253, 254, 257, 308, 365, 482], "aspect": [43, 223, 414, 444, 491], "export": [43, 217, 480, 488, 507], "total": [43, 54, 81, 107, 132, 164, 166, 177, 181, 196, 199, 211, 223, 234, 244, 282, 285, 305, 308, 314, 316, 321, 328, 352, 387, 396, 397, 399, 407, 447, 449, 451, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 486, 488, 491, 496, 497, 499, 501, 504, 506], "doabl": 43, "visualiz": 43, "fanci": [43, 46, 280, 341], "difficult": [43, 292, 330, 341, 344, 408, 503], "big": [43, 143, 237, 292, 315, 344, 444, 447, 492, 503], "basenam": [43, 44], "inputnam": [43, 44], "finish": [43, 235, 491, 501], "includeparam": [43, 44], "excludeparam": [43, 44], "exclud": [43, 54, 203, 218, 237, 238, 242, 291, 399], "interchang": 44, "interpret": [44, 65, 77, 78, 81, 88, 101, 103, 107, 130, 133, 134, 135, 136, 151, 174, 289, 290, 291, 321, 328, 330, 331, 396, 407, 486, 501, 504], "light": [44, 242, 475, 478, 493], "live": [44, 144, 162, 205, 211, 213, 216, 235, 249, 280, 291, 446, 503], "xml": [44, 349, 364, 372, 493], "paraview": [44, 480, 488, 507], "visit": [44, 395, 480, 488, 507], "properli": [44, 57, 168, 189, 309, 321, 323, 328, 353, 388, 391, 396, 414, 419, 444, 481], "polyhedra": 44, "unfortun": [44, 338, 403, 412, 450, 501], "__need__": 44, "prism": 44, "wedg": 44, "defeat": 44, "xmdf": 44, "cartesian": [44, 55, 174, 281, 282, 290, 308, 314, 328, 331, 332, 336, 339, 352, 359, 378, 383, 396, 416, 462, 466, 476, 477, 479, 481, 482, 493, 494, 501], "theta": [44, 78, 136, 138, 285, 299, 307, 308, 315, 316, 323, 328, 340, 360, 439, 462, 476, 477, 481, 494, 501], "elementtre": 44, "temporalcollect": 44, "analyz": [45, 48, 54, 55, 214, 234, 444, 446, 479, 486, 500, 503], "often": [45, 46, 47, 65, 76, 78, 84, 85, 89, 103, 144, 151, 161, 165, 168, 172, 203, 213, 225, 237, 249, 308, 309, 330, 332, 334, 335, 338, 344, 442, 458, 465, 479, 480, 481, 486, 488, 489, 491, 492, 501, 502, 503, 507], "sweep": [45, 46, 47, 55, 59, 249, 285, 317, 318, 319, 444, 473, 479, 481, 482, 487, 501], "send": [45, 76, 77, 150, 447, 450], "off": [45, 77, 79, 152, 161, 171, 176, 199, 237, 253, 280, 282, 285, 308, 315, 328, 338, 339, 359, 363, 385, 396, 414, 447, 465, 479, 481, 488, 492, 501], "my": [45, 397, 410, 412, 430, 442, 446, 488, 501], "interdepend": [45, 54], "sensit": [45, 49, 199, 280, 282, 327, 328, 343, 344, 479, 481, 491], "studi": [45, 49, 91, 187, 199, 218, 249, 282, 327, 479, 491, 492, 501], "armiloc": 45, "numstep": 45, "11": [45, 77, 81, 91, 100, 115, 136, 152, 174, 186, 191, 219, 334, 407, 414, 444, 465, 473, 481, 482, 486, 490, 491, 492, 493, 501], "submit": [45, 54, 55, 59, 372, 445, 488, 491, 501], "hpc": [45, 54, 59, 76, 479, 488, 491], "samplinginputmodifi": [45, 47, 48, 55, 58], "fullcoremodifi": [45, 47, 48], "settingsmodifi": [45, 47, 48, 309, 317, 318, 482, 491], "multisettingmodifi": [45, 47, 48], "blueprintblockmodifi": [45, 47, 48, 52], "neutronicsmodifi": [45, 47], "neutronicconvergencemodifi": [45, 47, 49, 309, 317, 318], "neutronicmeshssizemodifi": [45, 47, 49], "pintypeinputmodifi": [45, 47], "smeardensitymodifi": [45, 47, 50], "cladthicknessbyodmodifi": [45, 47, 50], "cladthicknessbyidmodifi": [45, 47, 50], "test_cas": [45, 56], "testarmicas": [45, 56, 57], "testcasesuitedepend": [45, 56, 57], "testcasesuitecomparison": [45, 56, 57], "testextrainputwrit": [45, 56, 57], "multifilesinterfac": [45, 56, 57], "testpluginwithduplicateset": [45, 56, 57], "testpluginforcopyinterfacesmultiplefil": [45, 56, 57], "testcopyinterfaceinput": [45, 56, 57], "test_suitebuild": [45, 56], "latinhypercubemodifi": [45, 56, 58], "settingmodifi": [45, 55, 56, 58], "testlatinhypercubesuitebuild": [45, 56, 58], "testfullfactorialsuitebuild": [45, 56, 58], "testseparateeffectsbuild": [45, 56, 58], "independentvari": [45, 46, 48, 57, 58, 491, 501], "addexplicitdepend": [45, 46], "getpotentialparentfromsettingvalu": [45, 46], "setuptaskdepend": [45, 46], "initializeoper": [45, 46, 473], "summarizedesign": [45, 46, 57], "echoconfigur": [45, 54, 491], "writet": [45, 54], "adddegreeoffreedom": [45, 55, 491], "addmodifierset": [45, 55], "buildsuit": [45, 55, 491], "redirect": [46, 54, 363], "post": [46, 54, 76, 312, 442, 486, 487, 501, 503], "reactiv": [46, 103, 164, 211, 225, 237, 242, 249, 312, 328, 344, 479, 486, 497, 499, 501], "coeffici": [46, 78, 80, 82, 91, 94, 95, 96, 98, 103, 104, 132, 135, 136, 166, 173, 207, 211, 225, 237, 249, 253, 302, 312, 328, 344, 352, 407, 439, 486, 489, 497, 499, 501, 505], "complex": [46, 161, 213, 219, 223, 249, 280, 304, 308, 371, 396, 466, 479, 480, 488, 489, 492, 493, 501, 507], "definit": [46, 48, 78, 81, 107, 154, 156, 158, 162, 164, 171, 176, 227, 235, 244, 259, 274, 280, 281, 283, 284, 288, 289, 290, 292, 305, 306, 308, 327, 328, 330, 339, 341, 342, 343, 344, 345, 346, 359, 368, 371, 391, 394, 395, 398, 411, 437, 443, 444, 446, 473, 475, 481, 482, 484, 488, 489, 490, 491, 492, 496, 501], "independentvariabl": 46, "lazi": [46, 450], "demand": [46, 203, 285, 308], "someon": [46, 55, 150, 249, 289, 341, 345, 479], "reflect": [46, 76, 81, 174, 249, 281, 305, 308, 328, 331, 444, 493, 496, 501], "somehow": [46, 159, 362, 446, 447, 451], "ideal": [46, 77, 168, 280, 330, 378, 488], "explicit": [46, 103, 164, 217, 242, 246, 247, 290, 305, 308, 357, 414, 422, 450, 481, 482, 492, 501], "evalu": [46, 92, 103, 134, 152, 158, 161, 165, 199, 204, 219, 242, 253, 290, 308, 319, 352, 403, 406, 407, 414, 444, 450, 465, 479, 480, 493, 497, 501, 507], "impos": [46, 48, 154, 203, 280, 411], "implicitli": [46, 203, 286, 481, 497, 501], "settingvalu": 46, "filepattern": 46, "conveni": [46, 151, 165, 203, 213, 238, 280, 328, 339, 373, 378, 396, 397, 406, 441, 488, 492, 501], "match": [46, 54, 78, 150, 154, 163, 165, 199, 218, 280, 282, 286, 296, 308, 323, 328, 336, 340, 353, 354, 364, 372, 373, 378, 425, 437, 478, 481, 484, 486, 488, 491, 501, 504], "groupdict": 46, "dirnam": 46, "task": [46, 59, 150, 151, 204, 219, 238, 249, 339, 409, 447, 479, 486, 491, 503], "account": [46, 107, 158, 161, 199, 203, 244, 253, 285, 291, 305, 308, 312, 313, 315, 352, 482, 489, 497, 501], "room": [46, 89, 154, 285, 478, 489, 492, 493], "coverag": [46, 182, 321, 352, 443, 482, 491, 501], "eleg": 46, "page": [46, 69, 89, 109, 115, 134, 136, 141, 234, 411, 446, 447, 449, 479, 492, 493], "additionalfil": 46, "modifiedset": 46, "writestyl": [46, 54], "modif": [46, 55, 81, 88, 101, 103, 107, 130, 133, 134, 135, 136, 171, 240, 280, 281, 285, 286, 287, 288, 291, 294, 298, 300, 305, 315, 365, 412, 463, 466, 473, 474, 481, 482, 486, 488, 492, 493], "safer": [46, 365, 449], "wonder": 46, "medium": [46, 54, 73, 281, 291, 330, 365, 372, 482, 493], "destin": [46, 282, 327, 365, 400, 401, 420], "01": [46, 54, 80, 81, 89, 107, 111, 136, 172, 285, 321, 438, 444, 466, 473, 474, 482, 486, 490, 503], "sourcedir": 46, "forthcom": 46, "baselin": [46, 57, 226, 305, 493, 501], "shufflelog": [46, 77, 218, 223, 486, 492, 501], "loadingfil": [46, 492, 493, 501], "geomfil": [46, 286, 501, 503], "respect": [46, 94, 95, 98, 166, 203, 242, 291, 343, 370, 472, 479, 505], "let": [46, 54, 103, 238, 280, 285, 392, 444, 447, 479, 486, 488, 489, 490, 492, 501, 502], "union": [46, 77, 103, 161, 238, 280, 281, 308, 331, 336, 339, 354, 362, 370, 396, 403, 437], "ping": 46, "modular": [46, 259, 479, 488], "absolut": [46, 77, 308, 332, 339, 365, 410, 437, 483, 501], "wildcard": 46, "glob": [46, 77, 420, 481], "offer": [46, 373, 442, 452, 477, 490, 494], "noth": [46, 199, 215, 223, 328, 337, 352, 387, 411], "inputdirectori": [46, 364, 365, 491], "target": [46, 77, 242, 281, 285, 308, 309, 312, 313, 321, 328, 330, 378, 407, 408, 413, 414, 443, 479, 480, 482, 488, 497, 501, 507], "newset": [46, 55, 365], "resolv": [46, 78, 308, 312, 322, 364, 373, 375, 395, 437, 482], "regard": [46, 234], "simplifi": [46, 92, 112, 128, 134, 150, 242, 378, 403, 492, 505], "runtim": [47, 76, 78, 201, 203, 258, 280, 319, 444, 481, 482, 488, 501], "test_inputmodifi": [47, 51], "mockgeom": [47, 51, 52, 53], "testsuitebuilderintegr": [47, 51, 52], "testsettingsmodifi": [47, 51, 52], "neutronicskernelopt": [47, 51, 52], "testfullcoremodifi": [47, 51, 52], "test_pintypeinputmodifi": [47, 51], "testblueprintmodifi": [47, 51, 53], "fail_if_aft": [47, 48, 50], "constuctor": 48, "paramtyp": [48, 55, 58], "__call__": [48, 55, 491], "space": [48, 50, 55, 76, 103, 137, 165, 203, 213, 285, 290, 302, 308, 328, 332, 333, 338, 339, 395, 396, 411, 414, 468, 478, 479, 492, 497, 501], "sampl": [48, 55, 308, 329, 416, 481, 492], "quasi": [48, 55, 332, 478], "random": [48, 55, 282, 341, 412, 423, 430, 447], "discret": [48, 55, 164, 328, 338], "inclus": [48, 161, 437, 498, 501], "grow": [48, 282, 314, 330, 344, 359, 411, 413, 489, 501], "symmetr": [48, 174, 285, 315, 328, 336, 337, 338, 339, 444, 501], "besid": [48, 211], "expans": [48, 60, 78, 80, 81, 82, 86, 91, 92, 94, 95, 96, 98, 99, 100, 103, 104, 110, 111, 114, 115, 124, 130, 131, 132, 134, 135, 136, 139, 140, 141, 218, 249, 280, 282, 285, 291, 302, 305, 310, 311, 312, 313, 314, 321, 322, 325, 352, 353, 391, 399, 414, 419, 420, 444, 462, 476, 477, 479, 481, 482, 484, 486, 489, 491, 494, 497, 499, 500, 501], "schedul": [48, 77, 202, 219, 450, 488, 501], "expand": [48, 60, 80, 81, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 124, 135, 139, 141, 154, 234, 282, 289, 290, 291, 296, 302, 305, 308, 312, 313, 314, 315, 321, 328, 331, 352, 353, 359, 396, 399, 407, 414, 419, 441, 449, 467, 478, 481, 482, 486, 489, 491, 492, 493, 501, 505], "themself": 48, "settingnam": [48, 55, 58, 65, 364, 371, 373], "adjust": [48, 49, 50, 53, 55, 77, 103, 154, 234, 247, 249, 282, 285, 291, 305, 308, 312, 318, 319, 352, 353, 444, 475, 480, 482, 491, 492, 493, 496, 501, 507], "settingv": 48, "conf_neutronics_typ": [48, 235, 249, 449], "conf_coarse_mesh_rebal": 48, "conf_eps_eig": 49, "conf_eps_fsavg": 49, "conf_eps_fspoint": 49, "100": [49, 79, 81, 94, 95, 98, 132, 152, 154, 218, 282, 285, 321, 412, 414, 437, 450, 451, 459, 463, 491, 492, 493, 499, 501, 506], "criteria": [49, 77, 182, 210, 218, 249, 285, 286, 308, 328, 343, 501, 504], "multfactor": 49, "factor": [49, 103, 166, 182, 200, 203, 210, 218, 249, 282, 285, 304, 305, 308, 312, 313, 321, 328, 341, 395, 436, 482, 486, 489, 492, 497, 499, 501, 506], "switch": [49, 256, 285, 291, 328, 341, 373, 396, 450, 482, 492, 501], "nodal": [49, 174, 177, 249, 285, 315], "finit": [49, 166, 173, 249, 315, 334, 337, 339, 406, 501], "approxim": [49, 132, 138, 235, 237, 238, 302, 308, 315, 364, 413, 444, 458, 479, 491, 492, 497, 501], "multipli": [49, 103, 153, 166, 199, 218, 234, 249, 258, 285, 308, 406, 497, 501], "axial": [49, 103, 124, 174, 182, 218, 249, 280, 281, 282, 285, 286, 288, 294, 297, 298, 300, 304, 305, 307, 310, 311, 312, 313, 315, 316, 321, 326, 327, 328, 330, 332, 334, 336, 337, 338, 339, 352, 354, 391, 407, 411, 413, 459, 481, 482, 484, 486, 488, 492, 493, 497, 499, 500, 501], "_pintypeassemblymodifi": 50, "smear": [50, 53, 285, 319, 325, 327, 478, 481, 492, 493, 497], "clad": [50, 53, 92, 211, 225, 238, 281, 282, 285, 296, 298, 305, 308, 314, 319, 321, 322, 328, 330, 352, 353, 354, 458, 463, 473, 478, 479, 482, 486, 491, 492, 493, 497, 499, 501, 502], "tube": [50, 285, 478, 492, 493], "fabric": [50, 211, 214, 399, 444, 497, 501], "thick": [50, 53, 307, 314, 319, 486, 492], "inner": [50, 53, 218, 219, 238, 281, 282, 285, 288, 304, 305, 307, 308, 314, 319, 330, 334, 340, 353, 449, 482, 486, 488, 491, 492, 493, 497, 501, 502], "diamet": [50, 53, 285, 304, 314, 319, 353, 486, 491, 492, 497, 501, 502], "outer": [50, 53, 174, 219, 249, 281, 282, 285, 302, 304, 307, 308, 314, 315, 319, 328, 330, 340, 352, 353, 396, 458, 482, 486, 488, 491, 492, 497, 501, 502], "test_smeardensityfail": [51, 52], "test_settingsmodifi": [51, 52], "test_blueprintblockmodifi": [51, 52], "test_neutronicconvergencemodifi": [51, 52], "test_fullcoreconvers": [51, 52], "test_adjustsmeardens": [51, 53, 320, 325], "test_cladthickenessbyodmodifi": [51, 53], "test_cladthickenessbyidmodifi": [51, 53], "areafuel": 53, "smeardens": [53, 497], "innercladarea": 53, "fuelod": 53, "cladid": 53, "sqrt": [53, 304, 319, 337, 339, 405, 466, 467, 504], "cladthick": [53, 491], "od": [53, 282, 285, 298, 303, 304, 307, 353, 354, 465, 473, 491, 492, 493, 501, 502], "cladthic": 53, "12": [53, 77, 80, 81, 100, 140, 141, 150, 152, 154, 219, 334, 395, 407, 414, 437, 444, 451, 464, 465, 466, 472, 473, 481, 484, 486, 490, 501], "24": [53, 140, 152, 305, 334, 414, 482], "cladod": 53, "025": 53, "05": [53, 80, 83, 141, 244, 370, 412, 444, 457, 466, 473, 474, 475, 476, 482, 486, 490, 491, 501], "conjunct": [54, 432, 501], "uniqu": [54, 118, 151, 154, 282, 308, 341, 501, 503], "rootdir": [54, 364], "ignorepattern": [54, 364], "skipinspect": 54, "won": [54, 57, 175, 203, 397, 411, 437, 451, 493], "deleg": [54, 217], "oldroot": 54, "By": [54, 77, 213, 237, 282, 330, 339, 407, 414, 458, 488, 493, 501, 505], "thought": [54, 202, 451, 496], "benefici": [54, 65, 446, 449, 479], "person": 54, "consequ": [54, 150, 151, 162, 305, 341, 447], "infer": [54, 99, 100, 285, 376, 414, 501, 503], "mirror": [54, 211, 488], "tableresult": 54, "perturb": [55, 77, 103, 237, 249, 285, 307, 308, 319, 328, 479, 491], "combin": [55, 103, 133, 154, 172, 199, 308, 315, 330, 331, 332, 339, 362, 395, 403, 488, 491, 497, 501], "modifierset": [55, 491], "pop": [55, 332, 338, 373, 451, 466], "degre": [55, 79, 80, 94, 95, 98, 103, 112, 215, 222, 282, 285, 308, 315, 328, 337, 396, 405, 407, 437, 491, 496, 497, 499], "freedom": [55, 491], "sweepbuild": 55, "exact": [55, 152, 181, 211, 242, 282, 296, 303, 305, 308, 328, 337, 354, 408, 444, 501], "callabl": [55, 76, 280, 281, 308, 328, 343, 344, 371, 373], "signatur": [55, 165, 218, 450, 481], "amount": [55, 249, 315, 321, 343, 450, 478, 486, 497, 499, 501], "inputmodifierset": 55, "namingfunc": 55, "meaning": [55, 280, 305, 344, 372, 373, 396, 437, 479, 488], "0000": [55, 162, 491], "four": [55, 308, 334, 451, 484, 501], "digit": [55, 86, 140, 151, 166, 237, 328, 395, 407, 479], "deem": [55, 203, 237, 444], "__init__": [55, 118, 150, 203, 205, 211, 280, 290, 292, 302, 305, 334, 336, 337, 338, 340, 341, 343, 344, 372, 381, 446, 450, 488], "builder": [55, 58, 280, 441, 482, 491, 501], "somecas": 55, "settingname1": 55, "settingname2": 55, "noisefract": 55, "nois": 55, "avoid": [55, 77, 218, 234, 237, 238, 314, 327, 352, 395, 408, 411, 445, 447, 481, 482, 493, 501, 504], "statist": [55, 491], "postprocessor": 55, "caution": [55, 282], "ongo": [55, 61, 319, 479], "research": [55, 115, 488], "isol": [55, 491], "settignnam": 55, "latin": [55, 482], "hypercub": [55, 482], "lh": 55, "evenli": [55, 308, 447, 501], "fewer": [55, 328, 443], "randomli": 55, "nonoverlap": 55, "partit": 55, "recommend": [55, 77, 211, 238, 285, 314, 333, 334, 337, 340, 341, 400, 446, 448, 479, 480, 488, 492, 497, 501, 507], "surrog": [55, 287], "unlik": [55, 256, 334, 338, 344, 446], "modfier": 55, "inputparametermodifi": 55, "pararmtyp": 55, "test_summarizedesign": [56, 57], "test_independentvari": [56, 57], "test_setuptaskdepend": [56, 57], "test_getcoveragercfil": [56, 57], "test_startcoverag": [56, 57], "test_endcoverag": [56, 57], "test_startprofil": [56, 57], "test_endprofil": [56, 57], "test_run": [56, 57, 72, 74], "test_clon": [56, 57], "test_checkinput": [56, 57], "test_dependencieswithobscurepath": [56, 57], "test_dependencyfromdbnam": [56, 57], "test_dependencyfromexplictrepeatshuffl": [56, 57], "test_explicitdepend": [56, 57], "test_titlesettergett": [56, 57], "test_comparenodiff": [56, 57], "test_writeinput": [56, 57], "test_copyinputshelp": [56, 57], "test_copyinterfaceinputs_singlefil": [56, 57], "test_copyinterfaceinputs_nonfilepath": [56, 57], "test_failonduplicateset": [56, 57], "test_copyinterfaceinputs_multiplefil": [56, 57], "test_copyinterfaceinputs_wildcardfil": [56, 57], "test_copyinterfaceinputs_relpath": [56, 57], "test_copyinterfaceinputs_abspath": [56, 57], "test_initi": [56, 58], "test_buildsuit": [56, 58], "test_adddegreeoffreedom": [56, 58], "assert": [57, 124, 210, 223, 251, 321, 359, 373, 431, 450], "bonu": [57, 487, 497], "damag": [57, 153, 212], "escap": 57, "charact": [57, 151, 154, 165, 238, 285, 287, 414, 437, 450, 451, 481, 484, 496, 501], "reveal": 57, "vehicl": 57, "lhc": 58, "event": [59, 242, 466, 473, 474, 482, 486, 501, 503], "submitsuit": 59, "prog": 59, "epilog": 59, "formatter_class": 59, "argpars": [59, 65, 442], "helpformatt": 59, "prefix_char": 59, "fromfile_prefix_char": 59, "argument_default": 59, "conflict_handl": 59, "add_help": 59, "allow_abbrev": 59, "exit_on_error": 59, "argumentpars": [59, 65], "exit": [59, 65, 76, 343, 400, 488, 501], "test_runentrypoint": [59, 72], "buildtestdb": [59, 72, 73], "testinitializationentrypoint": [59, 72, 73], "testcheckinputentrypoint": [59, 72, 73], "testclonearmiruncommandbatch": [59, 72, 73], "testclonesuitecommand": [59, 72, 73], "testcomparecas": [59, 72, 73], "testcomparesuit": [59, 72, 73], "testexpandblueprint": [59, 72, 73], "testextractinput": [59, 72, 73], "testinjectinput": [59, 72, 73], "testmigrateinput": [59, 72, 73], "testmodifycasesettingscommand": [59, 72, 73], "testreportsentrypoint": [59, 72, 73], "testcompareisotxslibsentrypoint": [59, 72, 73], "testrunentrypoint": [59, 72, 73], "testrunsuitecommand": [59, 72, 73], "testvisfileentrypointcommand": [59, 72, 73], "test_runsuit": [59, 72], "testrunsuitesuit": [59, 72, 74], "parse_arg": [59, 64, 65], "createoptionfromset": [59, 65, 442], "report_out_dir": [59, 69], "totwotupl": [59, 69], "needlessli": [60, 65, 496], "clutter": [60, 65], "inconsist": [60, 77, 238, 328, 338, 344], "abil": [60, 103, 218, 223, 266, 285, 339, 351, 358, 359, 411, 429, 437, 449, 481, 482], "occasion": [61, 280, 403], "break": [61, 76, 93, 154, 203, 285, 308, 341, 344, 390, 406, 414, 443, 447, 449, 450, 451], "comparison": [63, 308, 328, 331, 353, 378, 478, 482], "handi": [64, 451, 479, 503], "facilit": [64, 331, 349, 479, 481, 501], "overwrit": [64, 174, 308, 315, 365, 395, 441, 449, 501], "inject": [64, 289, 291, 394], "overrid": [65, 150, 218, 280, 289, 291, 363, 371, 391, 395, 414, 444, 447, 501], "add_argu": [65, 442], "sub": [65, 150, 165, 203, 213, 285, 345, 447, 479, 501], "exitcod": 65, "success": [65, 77, 203, 238, 370, 410], "additionalalia": 65, "suppresshelp": 65, "additionalalis": 65, "care": [65, 199, 203, 235, 285, 291, 308, 328, 345, 410, 437, 443, 449, 450, 451, 479, 501, 503], "distinct": [65, 344, 449, 493], "supresshelp": 65, "suppress": [65, 364], "messag": [65, 77, 280, 298, 342, 363, 372, 379, 398, 437, 443, 445, 447, 478, 481, 501, 503], "almost": [65, 165, 174, 308, 330, 425, 451, 479], "unus": [65, 219, 253, 254, 347, 450, 481, 482, 484, 501], "booldefault": 65, "ep": [65, 210, 316, 378], "editor": [66, 396, 480, 481, 492, 501, 507], "spin": [66, 161, 244], "latest": [67, 143, 158, 164, 237, 285, 308, 441, 497], "keyword": [68, 280, 328, 395, 414, 445], "numprocessor": [68, 492, 493, 501], "reportsoutputfil": [69, 449, 495], "strinput": 69, "integ": [69, 164, 165, 218, 219, 237, 282, 308, 321, 330, 344, 392, 396, 403, 407, 411, 414, 432, 444, 484, 497, 499, 503, 506], "web": [69, 85, 89, 92, 98, 112, 135, 164, 170, 174, 175, 441, 447], "mpirun": [71, 389], "mpiexec": [71, 76, 388, 421, 447], "test_entrypointiniti": [72, 73], "test_checkinputentrypointbas": [72, 73], "test_checkinputentrypointinvok": [72, 73], "test_clonearmiruncommandbatchbas": [72, 73], "test_clonearmiruncommandbatchinvokeshort": [72, 73], "test_clonearmiruncommandbatchinvokemedium": [72, 73], "test_clonesuitecommandbas": [72, 73], "test_comparecasesbas": [72, 73], "test_comparesuitesbas": [72, 73], "test_expandblueprintsbas": [72, 73], "test_extractinputsbas": [72, 73], "test_injectinputsbas": [72, 73], "test_injectinputsinvokeignor": [72, 73], "test_injectinputsinvokenodata": [72, 73], "test_migrateinputsbas": [72, 73], "test_modifycasesettingscommandbas": [72, 73], "test_modifycasesettingscommandinvok": [72, 73], "test_totwotupl": [72, 73], "test_cleanarg": [72, 73], "test_reportsentrypointbas": [72, 73], "test_compareisotxslibsbas": [72, 73], "test_runentrypointbas": [72, 73], "test_runcommandhelp": [72, 73], "test_executecommand": [72, 73], "test_runsuitecommandbas": [72, 73], "test_visfileentrypointbas": [72, 73], "test_listcommand": [72, 74], "test_showvers": [72, 74], "numnod": 73, "numcycl": 73, "fiction": 73, "mockexecmd": 74, "pytest": [75, 388, 390, 421, 443, 450, 479, 481], "act": [75, 200, 216, 282, 308, 328, 340, 343, 365, 406, 449, 486], "shop": 75, "submodul": [75, 440, 441], "larger": [75, 407, 451, 492, 493, 501], "project": [75, 164, 307, 442, 443, 446, 451, 468, 469, 479, 480, 488, 507], "session": [75, 203, 411, 481, 493], "termin": [76, 150, 406, 480, 487, 507], "forc": [76, 154, 253, 282, 312, 314, 328, 344, 365, 389, 407, 420, 444, 451, 482, 486, 501], "fast_path": [76, 203, 481], "drive": [76, 213, 302, 388, 410, 450, 458, 492, 501], "obliter": 76, "danger": 76, "olderthandai": 76, "sigbreak": 76, "cancel": [76, 308, 372, 504], "atexit": 76, "notabl": [76, 503], "taskcancelgraceperiod": 76, "sigterm": 76, "sigint": 76, "older": [76, 93, 151, 481, 501], "unrel": [76, 451], "dai": [76, 164, 203, 210, 280, 282, 345, 395, 407, 436, 449, 478, 479, 486, 492, 496, 497, 498, 499, 501, 506], "earlier": [76, 280, 343], "concurr": 76, "forcibli": 76, "disconnect": 76, "hack": [76, 371, 496], "gracefulli": [76, 308], "destroi": [76, 497], "caus": [76, 172, 200, 298, 305, 308, 314, 327, 328, 345, 373, 401, 443, 450, 480, 482, 497, 507], "why": [76, 183, 282, 285, 437, 446, 493], "never": [76, 162, 211, 235, 253, 285, 290, 291, 302, 337, 414, 447, 449, 450, 501], "appear": [76, 88, 219, 280, 362, 364, 371, 411, 429, 437, 486], "repr": 76, "ing": 76, "manual": [76, 154, 156, 158, 174, 189, 198, 199, 203, 210, 242, 291, 309, 321, 328, 330, 362, 479, 486, 490, 501], "learn": [77, 467, 468, 469, 479, 500], "architectur": [77, 203, 280, 445, 479, 488], "createinterfac": [77, 202, 203, 207, 444], "globalflux": [77, 203, 211, 235, 370, 504], "globalfluxinterfac": [77, 235, 248, 251, 482, 504], "10": [77, 81, 89, 92, 104, 112, 113, 124, 134, 135, 140, 152, 153, 161, 164, 165, 166, 170, 172, 174, 175, 210, 218, 219, 285, 290, 294, 298, 300, 305, 308, 315, 321, 334, 344, 353, 378, 406, 407, 411, 414, 423, 436, 437, 444, 447, 450, 451, 465, 468, 469, 470, 473, 475, 479, 481, 482, 486, 488, 489, 490, 491, 492, 493, 501], "maxit": 77, "interactallcoupl": [77, 202, 203], "maximum": [77, 103, 151, 218, 238, 285, 302, 308, 328, 330, 395, 407, 411, 414, 484, 496, 497, 499, 501], "val": [77, 103, 165, 196, 244, 285, 302, 305, 307, 308, 327, 328, 371, 395, 407, 411, 412, 430, 447, 486], "_supported_typ": 77, "commonli": [77, 103, 161, 249, 378, 396, 410, 442, 501], "equal": [77, 150, 158, 164, 166, 168, 170, 172, 175, 200, 203, 218, 253, 285, 302, 304, 308, 316, 338, 352, 371, 378, 395, 396, 407, 411, 412, 447, 467, 475, 492, 501, 505], "typeerror": [77, 371, 376, 439], "met": [77, 285, 504], "recent": [77, 174, 479, 496], "critera": [77, 308], "On": [77, 164, 170, 308, 446, 479, 480, 489, 491, 507], "condit": [77, 150, 154, 162, 213, 225, 235, 249, 253, 280, 282, 285, 331, 334, 336, 358, 360, 373, 401, 406, 478, 479, 484, 491, 492, 493, 501], "stale": [77, 249, 344, 482], "increment": [77, 279, 282, 285, 396, 405, 407, 501], "clear": [77, 103, 154, 163, 199, 237, 282, 285, 305, 308, 315, 326, 327, 344, 353, 441, 450, 482, 492], "2d": [77, 81, 87, 102, 103, 135, 198, 238, 303, 307, 308, 337, 338, 339, 385, 407, 414, 432, 444, 482], "3d": [77, 80, 81, 82, 87, 88, 89, 91, 92, 94, 95, 96, 98, 102, 103, 104, 110, 111, 115, 139, 141, 296, 305, 307, 338, 353, 385, 468, 469, 488], "norm": [77, 486, 488, 504], "listtocheck": 77, "dim": [77, 285, 312, 465, 493], "eponym": 77, "categori": [77, 210, 225, 249, 253, 281, 328, 330, 341, 344, 385, 451, 466, 473, 474, 482, 484, 486, 503], "driver": [77, 238, 281, 308, 314, 322, 330, 447, 501], "neutronsperfiss": 77, "torestor": 77, "restor": [77, 103, 305, 308, 336, 339, 343, 344, 352, 359, 363], "distributest": [77, 150, 388], "quiet": [77, 103, 308], "callback": 77, "pickl": [77, 282, 308, 336, 343, 387, 395], "detach": [77, 202, 203, 338], "deepcopi": [77, 103, 244, 282, 285, 286, 482], "immedi": [77, 308, 314, 328, 337, 339, 341, 345, 479], "occur": [77, 103, 150, 152, 154, 156, 162, 203, 217, 218, 280, 291, 321, 322, 328, 341, 372, 414, 437, 444, 450, 490, 496, 497, 499, 501], "subcycl": [77, 203], "repeatedli": 77, "peripher": [77, 203, 219, 237], "cr": [77, 86, 152, 207, 249, 291, 298, 486, 491, 492, 501], "worth": [77, 164, 207, 218, 249, 437, 449, 450, 451, 479, 499], "theori": [77, 166, 308], "_cmd": 77, "incom": [77, 174, 189, 218], "statu": [77, 313, 341, 372, 441, 480, 501, 507], "statement": [77, 204, 249, 308, 321, 339, 342, 372, 373, 400, 437, 445, 447, 451], "wrong": [77, 285, 298, 300, 308, 446], "innam": [77, 249], "outnam": [77, 249], "interpol": [77, 114, 115, 282, 285, 407], "anywher": [77, 488, 501], "failur": [77, 308, 314, 390, 446, 501], "advent": 77, "perhap": [77, 280, 338, 341, 479, 501], "externalcodeinterfac": [77, 249, 254], "eci": [77, 257], "anyth": [77, 162, 165, 213, 218, 249, 264, 285, 302, 305, 308, 328, 343, 373, 414, 443, 451, 479, 488, 491, 501], "involv": [77, 203, 213, 328, 479, 501, 504], "packag": [77, 200, 203, 205, 280, 308, 339, 344, 403, 414, 437, 440, 444, 445, 446, 450, 479, 480, 486, 487, 488, 503, 507], "klass": [77, 343], "addinterfac": [77, 202, 203], "ultim": [77, 218, 280, 281, 321, 328, 330, 345, 486, 491, 492, 504], "field": [77, 136, 308, 312, 321, 339, 341, 371, 395, 403, 414, 432, 492, 501], "scope": [78, 242, 309, 378, 446, 479, 482, 486, 488, 491, 493, 501], "thermo": [78, 305, 444, 501], "heat": [78, 79, 91, 94, 95, 98, 99, 100, 103, 111, 119, 135, 136, 211, 275, 332, 352, 444, 479, 488, 489, 493, 496, 497, 501], "capac": [78, 79, 91, 94, 95, 98, 99, 100, 103, 111, 135, 136, 203, 444, 488, 489, 492, 501], "linear": [78, 80, 81, 82, 86, 92, 94, 95, 98, 103, 104, 110, 111, 115, 124, 130, 131, 132, 134, 135, 136, 139, 140, 141, 282, 285, 305, 321, 327, 407, 482, 486, 489, 491, 492, 497, 505], "viscos": [78, 100], "nuclear": [78, 82, 84, 85, 89, 103, 136, 151, 152, 154, 161, 162, 163, 164, 175, 183, 194, 211, 214, 234, 235, 242, 308, 348, 396, 444, 478, 484, 486, 488, 490, 493, 499, 501], "alon": [78, 237, 305, 308, 465], "thermal": [78, 79, 80, 81, 82, 88, 89, 91, 92, 94, 95, 96, 98, 100, 103, 104, 107, 110, 111, 112, 115, 130, 132, 135, 136, 138, 139, 141, 159, 161, 225, 234, 272, 274, 275, 276, 278, 302, 305, 308, 312, 313, 314, 321, 322, 325, 328, 344, 352, 353, 443, 462, 476, 477, 479, 481, 482, 486, 487, 489, 492, 494, 497, 499, 500, 501, 502], "scatter": [78, 82, 89, 103, 111, 136, 138, 150, 159, 161, 166, 172, 181, 196, 198, 199, 200, 201, 258, 462, 464, 468, 469, 476, 477, 481, 490, 493, 494, 497, 501], "law": [78, 159, 161, 443, 479, 492], "macroscop": [78, 166, 196, 199, 200, 258, 267, 482, 493, 501], "highli": [78, 217, 238, 448, 466, 480, 492, 507], "team": [78, 414, 432, 443, 451, 479, 488], "updatesourc": 78, "dev": [78, 392, 479, 480, 507], "resolut": [78, 341, 373, 481], "formal": [78, 330, 343, 481, 485, 488], "registri": [78, 280], "data_sourc": [78, 103], "sai": [78, 197, 199, 280, 330, 363, 364, 373, 405, 443, 447, 449, 451, 479, 492, 501], "namespaceord": 78, "latter": [78, 296], "conf_material_namespace_ord": 78, "kentucki": 78, "transport": [78, 79, 112, 169, 174, 211, 235, 249, 258, 282, 327, 479, 482, 492, 497], "cabinet": 78, "colon": [78, 488], "classnam": [78, 501], "prefer": [78, 143, 162, 280, 282, 308, 313, 328, 339, 371, 397, 414, 445, 451, 484, 488, 501], "material_namespace_ord": 78, "modulepath": [78, 410], "matcl": [78, 472], "els": [78, 165, 166, 218, 253, 282, 285, 308, 328, 331, 373, 395, 411, 414, 447, 475, 486, 488, 491, 501], "test__init__": [78, 117], "bettersubclasscheck": [78, 117, 118], "materials__init__test": [78, 117, 118], "test_air": [78, 117], "test_b4c": [78, 117], "b4c_testcas": [78, 117, 120], "test_be9": [78, 117], "test_graphit": [78, 117], "graphite_testcas": [78, 117, 122], "test_lithium": [78, 117], "lithium_testcas": [78, 117, 123], "test_materi": [78, 117, 419], "materialconstructiontest": [78, 117, 124], "materialfindingtest": [78, 117, 124, 419], "californium_testcas": [78, 117, 124], "cesium_testcas": [78, 117, 124], "magnesium_testcas": [78, 117, 124], "magnesiumoxide_testcas": [78, 117, 124], "molybdenum_testcas": [78, 117, 124], "mox_testcas": [78, 117, 124], "nacl_testcas": [78, 117, 124], "niobiumzirconium_testcas": [78, 117, 124], "potassium_testcas": [78, 117, 124], "scandiumoxide_testcas": [78, 117, 124], "sodium_testcas": [78, 117, 124], "tantalum_testcas": [78, 117, 124], "thoriumuraniummetal_testcas": [78, 117, 124], "uranium_testcas": [78, 117, 124], "uraniumoxide_testcas": [78, 117, 124], "thorium_testcas": [78, 117, 124], "thoriumoxide_testcas": [78, 117, 124, 127], "void_testcas": [78, 117, 124], "mixture_testcas": [78, 117, 124], "lead_testcas": [78, 117, 124], "leadbismuth_testcas": [78, 117, 124], "copper_testcas": [78, 117, 124], "sulfur_testcas": [78, 117, 124, 126], "zr_testcas": [78, 117, 124], "inconel_testcas": [78, 117, 124], "inconel600_testcas": [78, 117, 124], "inconel625_testcas": [78, 117, 124], "inconelx750_testcas": [78, 117, 124], "alloy200_testcas": [78, 117, 124], "cah2_testcas": [78, 117, 124], "hafnium_testcas": [78, 117, 124], "hastelloyn_testcas": [78, 117, 124], "tzm_testcas": [78, 117, 124], "yttriumoxide_testcas": [78, 117, 124], "zincoxide_testcas": [78, 117, 124], "fuelmaterial_testcas": [78, 117, 124], "test_sic": [78, 117], "test_sulfur": [78, 117], "test_thoriumoxid": [78, 117], "test_uzr": [78, 117], "uzr_testcas": [78, 117, 128], "test_wat": [78, 117], "propertyvalidtemperatur": [78, 79, 80, 81, 82, 86, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 109, 110, 111, 112, 114, 115, 130, 131, 132, 135, 136, 139, 140, 141], "setdefaultmassfrac": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141], "pseudodens": [78, 79, 81, 87, 88, 99, 100, 101, 102, 103, 109, 111, 112, 114, 133, 135, 137, 138, 415, 419, 482], "specificvolumeliquid": [78, 79, 112], "thermalconduct": [78, 79, 91, 92, 94, 95, 98, 100, 101, 103, 111, 112, 130, 131, 132, 135, 136, 141, 502], "heatcapac": [78, 79, 91, 94, 95, 98, 99, 100, 101, 103, 111, 135, 136, 488, 489], "modelconst": [78, 80, 103], "referencemaxpercentimpurit": [78, 80], "linearexpansiontablek": [78, 80, 141], "linearexpansiont": [78, 80, 141], "linearexpans": [78, 80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 130, 131, 132, 135, 136, 139, 141], "enrichednuclid": [78, 81, 88, 101, 103, 107, 130, 133, 134, 135, 136, 305], "applyinputparam": [78, 81, 101, 103, 107, 114, 130, 132, 133, 134, 135, 136], "updatetd": [78, 81, 114], "setnewmassfracsfrommassenrich": [78, 81], "getmassenrichmentfromnumenrich": [78, 81], "linearexpansionperc": [78, 81, 82, 86, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 115, 132, 134, 135, 136, 139, 140, 141, 320, 321, 505], "thermalscatteringlaw": [78, 82, 89, 103, 111, 136, 138], "meltingpoint": [78, 87, 101, 107, 111, 130, 131, 132, 135, 136], "setmassfrac": [78, 88, 103, 281, 308], "materialintro": [78, 91, 135], "reftempk": [78, 91, 94, 95, 96, 98, 103, 111, 141], "meancoefficientthermalexpans": [78, 91, 96], "polyfitthermalconduct": [78, 94, 95, 98], "polyfitheatcapac": [78, 94, 95, 98], "polyfitlinearexpansionperc": [78, 94, 95, 98], "volumetricexpans": [78, 99, 100, 103, 114], "dynamicvisc": [78, 100], "boilingpoint": [78, 101], "getchildren": [78, 103, 281, 308, 350, 354, 486], "getchildrenwithflag": [78, 103, 281, 308, 350, 354], "backup": [78, 103, 281, 302, 305, 308, 332, 336, 339, 341, 343, 344], "restorebackup": [78, 103, 281, 302, 305, 308, 332, 336, 339, 341, 343, 344], "clearcach": [78, 103, 281, 302, 305, 308], "linearexpansionfactor": [78, 103, 489, 505], "getthermalexpansiondensityreduct": [78, 103], "adjustmassenrich": [78, 103, 281, 302, 305, 308], "adjustmassfrac": [78, 103, 281, 308], "gettemperatureatdens": [78, 103], "liquidporos": [78, 103, 302, 305, 497], "gasporos": [78, 103, 302, 305, 497], "pseudodensitykgm3": [78, 103], "densitykgm3": [78, 103], "getcorrosionr": [78, 103], "yieldstrength": [78, 103], "getproperti": [78, 103, 302, 305, 488, 502], "getmassfrac": [78, 103, 241, 244, 281, 308], "clearmassfrac": [78, 103], "removenucmassfrac": [78, 103], "checkpropertytemprang": [78, 103], "checktemprang": [78, 103], "densitytimesheatcapac": [78, 103, 482], "gettempchangefordensitychang": [78, 103], "gettd": [78, 103], "adjusttd": [78, 103], "class1_wt_frac": [78, 103, 399, 501], "class1_custom_isotop": [78, 103, 501], "class2_custom_isotop": [78, 103, 501], "pufrac": [78, 103, 482, 497], "ufrac": [78, 103], "zrfrac": [78, 103, 498], "getmassfracpuo2": [78, 107], "setmassfracpuo2": [78, 107], "getmolfracpuo2": [78, 107], "propertyequ": [78, 111, 135], "propertyunit": [78, 111, 135, 136], "propertynot": [78, 111, 135], "cumulativelinearexpans": [78, 111], "enthalpi": [78, 112, 138], "temperaturec": [78, 115], "percentthermalexpans": [78, 115], "getenrich": [78, 130, 302, 305, 481], "zrfracdefault": [78, 134], "ufracdefault": [78, 134], "propertyrawdata": [78, 135], "refden": [78, 80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 135, 139, 141, 486], "ea": [78, 136], "c1": [78, 136], "c2": [78, 136], "c3": [78, 136], "reference_temperatur": [78, 136], "thermalconductivitytablek": [78, 136], "thermalconductivityt": [78, 136], "temperature_critical_k": [78, 138], "density_critical_kgpercubicmet": [78, 138], "density_critical_gpercubiccentimet": [78, 138], "vapor_pressure_critical_mpa": [78, 138], "vapor_pressure_critical_pa": [78, 138], "alpha_0": [78, 138], "phi_0": [78, 138], "tau": [78, 138], "vaporpressur": [78, 138], "vaporpressureprim": [78, 138], "auxiliaryquantityspecificenthalpi": [78, 138], "auxiliaryquantityspecificentropi": [78, 138], "entropi": [78, 138], "Near": 79, "sea": 79, "correl": [79, 94, 95, 98, 138, 212, 234, 439], "incropera": [79, 119], "frank": [79, 119], "et": [79, 91, 107, 119, 136, 479], "al": [79, 91, 107, 119, 136, 145, 152, 298, 479, 493, 501], "mass": [79, 80, 81, 82, 83, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 110, 111, 112, 114, 115, 119, 124, 132, 133, 134, 136, 139, 141, 151, 152, 153, 154, 211, 214, 218, 234, 244, 263, 282, 285, 291, 298, 302, 305, 308, 309, 312, 315, 321, 323, 325, 326, 327, 328, 344, 352, 353, 354, 399, 419, 444, 458, 459, 463, 472, 478, 481, 482, 484, 486, 488, 489, 490, 496, 497, 498, 499, 501, 506], "transfer": [79, 119, 211, 275, 285, 327, 348, 447, 497, 503], "vol": [79, 109, 111, 119, 141, 234, 302, 463, 486, 488], "york": [79, 109, 119, 141], "wilei": [79, 119], "2002": [79, 119], "pnnl": [79, 119], "15870": [79, 119], "rev": [79, 119], "www": [79, 80, 82, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 112, 129, 130, 131, 132, 138, 183, 344, 479, 492], "gov": [79, 85, 89, 92, 107, 112, 136, 151, 161, 172, 174, 183], "technical_report": 79, "15870rev1": 79, "1300": [79, 91, 100], "2400": [79, 135, 136], "conduct": [79, 91, 92, 94, 95, 98, 100, 103, 107, 111, 112, 130, 132, 135, 136, 141, 234, 444, 486, 489, 501, 502], "200": [79, 80, 124, 407, 491], "850": 79, "temperature_lower_limit": [79, 80, 81, 82, 86, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 109, 110, 111, 112, 114, 115, 130, 131, 132, 135, 136, 139, 140, 141], "temperature_upper_limit": [79, 80, 81, 82, 86, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 109, 110, 111, 112, 114, 115, 130, 131, 132, 135, 136, 139, 140, 141], "temperature_unit": [79, 80, 81, 82, 86, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 109, 110, 111, 112, 114, 115, 130, 131, 132, 135, 136, 139, 140, 141], "mcconn": 79, "ronald": 79, "j": [79, 91, 92, 94, 95, 98, 99, 100, 102, 103, 109, 111, 112, 134, 135, 136, 138, 166, 174, 176, 177, 181, 199, 234, 290, 308, 328, 332, 334, 336, 337, 338, 339, 340, 396, 444, 467, 468, 469, 479, 481, 488, 489, 504], "compendium": 79, "radiat": [79, 85, 211, 479], "pacif": 79, "northwest": 79, "nation": [79, 91, 107, 136, 153, 164, 174, 478, 479], "lab": [79, 153, 479], "richland": 79, "2011": [79, 91, 164], "tk": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 321, 419, 439, 488, 489], "tc": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 302, 303, 304, 305, 307, 308, 321, 354, 419, 439, 488, 489, 502], "cc": [79, 83, 99, 100, 101, 103, 109, 112, 133, 135, 136, 138, 164, 305, 308, 399, 489, 497, 503], "dewitt": 79, "kelvin": [79, 80, 94, 95, 98, 103, 112, 138, 305, 439], "celsiu": [79, 80, 94, 95, 98, 103, 112, 305, 439], "liquid": [79, 87, 101, 102, 103, 112, 114, 138, 151, 152, 161, 305, 492, 497], "kg": [79, 91, 94, 95, 98, 99, 100, 103, 111, 112, 128, 135, 136, 138, 488, 489, 496, 497, 498, 506], "alloi": [80, 91, 93, 95, 96, 97, 108, 124, 133, 134, 482], "wrought": 80, "commerci": [80, 478, 479], "nickel": [80, 91, 93, 152], "201": 80, "sheet": [80, 115], "jacquet": 80, "biz": 80, "usa": 80, "jcqusa": 80, "citat": [80, 93, 94, 95, 97, 98, 101, 103, 111, 115, 135, 136, 138, 141], "literatur": [80, 93, 94, 95, 97, 98, 101, 103, 107, 111, 115, 135, 136, 138, 141, 489], "trefa": 80, "20": [80, 83, 91, 94, 96, 152, 162, 166, 263, 305, 334, 353, 406, 451, 465, 473, 486, 491, 492, 493, 501], "a0": 80, "2162e": 80, "3001e": 80, "09": [80, 354, 414, 444, 465, 481, 482, 486, 490, 501], "94985e": 80, "intepol": [80, 103], "lookup": [80, 103, 153, 242, 266, 280, 282, 327, 328, 344, 356, 362, 405], "73": [80, 135, 152, 414], "15": [80, 91, 94, 95, 96, 98, 104, 107, 110, 111, 132, 136, 139, 141, 152, 210, 219, 285, 334, 399, 436, 451, 457, 465, 475, 481, 486, 492, 501], "1273": [80, 104], "mn": [80, 145, 152, 298, 486, 491, 501], "35": [80, 81, 152], "si": [80, 111, 152, 298, 486, 491, 501], "25": [80, 81, 152, 154, 282, 290, 297, 298, 321, 337, 353, 354, 411, 451, 469, 481, 486, 489, 491, 492, 501], "fe": [80, 151, 152, 153, 154, 291, 298, 465, 470, 486, 491, 501], "173": [80, 464, 476], "373": [80, 91], "573": 80, "673": 80, "773": 80, "873": 80, "973": [80, 91], "1073": 80, "1173": [80, 91, 135, 482], "01e": 80, "13e": [80, 141], "33e": [80, 111], "39e": 80, "43e": 80, "48e": 80, "52e": [80, 493], "56e": 80, "58e": 80, "62e": 80, "65e": [80, 493], "67e": 80, "instantan": [80, 94, 95, 98, 103, 478], "half": [80, 158, 162, 173, 218, 282, 315, 339, 351, 352, 490, 499, 501], "impur": [80, 479], "rest": [80, 182, 282, 287, 330, 387, 444, 451, 465, 492, 493, 501, 503], "ni": [80, 152, 298, 308, 486, 491, 501], "cm": [80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 139, 141, 152, 176, 177, 196, 199, 218, 234, 244, 249, 282, 285, 290, 302, 303, 304, 305, 307, 308, 312, 327, 328, 332, 333, 334, 336, 337, 338, 339, 341, 360, 399, 449, 450, 467, 468, 486, 489, 491, 492, 493, 496, 497, 498, 499, 501, 502], "dep": [80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 139, 141], "percent": [80, 81, 82, 83, 86, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 132, 133, 135, 136, 139, 140, 141, 199, 312, 321, 328, 463, 478, 479, 482, 486, 491, 497, 499, 501], "dp": [80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 138, 139, 141, 152], "dl": [80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 115, 136, 139, 141], "l": [80, 82, 88, 89, 91, 92, 94, 95, 96, 98, 103, 104, 110, 111, 112, 115, 135, 136, 139, 141, 166, 304, 321, 395, 411, 465, 472, 489, 505], "boron": [81, 120, 152, 285, 305, 308, 490], "carbid": [81, 111, 120], "difficulti": 81, "real": [81, 164, 174, 177, 202, 203, 235, 244, 249, 285, 305, 308, 327, 328, 336, 407, 411, 432, 442, 447, 458, 488, 491, 493, 501], "td_frac": [81, 103, 107, 114, 132, 135, 136, 298, 482, 501], "b10": [81, 291, 470, 486, 497], "enrich": [81, 88, 101, 103, 107, 130, 133, 134, 135, 136, 218, 282, 285, 305, 308, 328, 353, 399, 411, 479, 486, 492, 493, 497, 501], "500": [81, 141, 353, 354, 463, 482, 486, 489, 491, 492, 502], "b10_wt_frac": [81, 501], "theoretical_dens": [81, 501], "massenrich": [81, 103], "boron10massgram": 81, "boron11massgram": 81, "carbonmassgram": 81, "012": [81, 486], "009": [81, 486], "carbon": [81, 89, 152, 159, 161], "0107": 81, "mole": [81, 107, 132, 153, 285, 305, 308, 488, 497], "gram": [81, 83, 107, 132, 153, 158, 285, 305, 308, 486, 501], "199": 81, "969552": 81, "801": [81, 162], "272836": 81, "mi": [81, 472], "mb10": 81, "nb10": 81, "ab10": 81, "nb11": 81, "ab11": 81, "natur": [81, 99, 103, 136, 151, 152, 153, 154, 156, 242, 280, 291, 298, 308, 328, 334, 399, 443, 444, 464, 479, 481, 486, 489, 490, 491, 501], "19": [81, 107, 115, 135, 152, 298, 334, 414, 482, 486], "80": [81, 98, 152, 501], "811": 81, "96796": 81, "27604": 81, "55": [81, 107, 112, 152], "2547": 81, "naturalb10numberfract": 81, "preliminari": 81, "beryllium": [82, 121, 152], "metal": [82, 86, 92, 96, 115, 130, 131, 133, 135, 141, 152, 154, 161, 234, 285, 308, 328, 354, 399, 478, 486, 490, 492, 497, 498, 499, 501], "lot": [82, 84, 150, 151, 199, 203, 235, 244, 291, 308, 328, 378, 412, 442, 443, 447, 450, 451, 479, 480, 486, 493, 501, 507], "2n": [82, 162, 199, 471, 475], "reaction": [82, 162, 175, 187, 199, 200, 235, 249, 251, 308, 327, 411, 462, 476, 477, 479, 481, 494, 497], "inhal": 82, "hazard": 82, "compound": [82, 89, 111, 134, 136, 138, 161, 238, 370, 414], "Be": [82, 161, 308, 410, 443, 451, 479, 481], "frozenset": [82, 89, 111, 136, 138], "BE": [82, 152], "012183e": 82, "00": [82, 138, 444, 460, 476, 490], "50": [82, 152, 282, 353, 406, 451, 459, 479, 501], "1560": 82, "ferp": 82, "ucsd": 82, "edu": [82, 166], "prop": 82, "pano": 82, "fusion": 82, "fedee": 82, "141": 82, "234": [82, 437, 490], "1987": 82, "calcium": [83, 152], "hydrid": 83, "calciumhydrid": 83, "atom": [83, 103, 107, 151, 152, 153, 154, 161, 164, 196, 199, 212, 238, 244, 263, 285, 305, 308, 314, 315, 327, 399, 478, 479, 486, 490, 496, 497, 498, 499, 501], "kaeri": 83, "kr": [83, 152, 411], "ton": 83, "iso": [83, 154, 501], "abund": [83, 151, 153, 154, 183, 464, 490], "ca": [83, 111, 152, 501], "40": [83, 86, 152, 154, 174, 395, 451, 491], "96": [83, 152, 493], "941": 83, "39": [83, 152, 486, 489, 490, 491], "9625912": 83, "42": [83, 107, 152, 154, 412, 414, 493], "647": [83, 129, 138], "41": [83, 152, 154, 414], "9586183": 83, "43": [83, 86, 152, 486], "135": [83, 138], "9587668": 83, "44": [83, 115, 152], "086": 83, "9554811": 83, "46": [83, 152, 234, 501], "004": [83, 486, 501], "45": [83, 152, 501], "9536928": 83, "48": [83, 152, 473, 486], "187": 83, "47": [83, 152], "9525335": 83, "01565": 83, "09367285": 83, "920331558": 83, "006449241": 83, "001377745": 83, "02178264": 83, "3668e": 83, "002130278": 83, "047884869": 83, "en": [83, 84, 87, 438], "wikipedia": [83, 84, 87, 101, 438, 490], "wiki": [83, 84, 87, 438], "calcium_hydrid": 83, "synthet": 84, "spontan": [84, 154, 162, 482, 490, 497, 499], "equip": [85, 486], "shield": [85, 164, 199, 237, 281, 282, 315, 328, 330, 486, 491, 497, 501], "concreat": 85, "archiv": [85, 98, 451, 480, 507], "20221103120449": 85, "nist": [85, 151, 153, 154], "cgi": [85, 151], "bin": [85, 151, 242, 315, 316, 333, 425, 480, 507], "star": 85, "compo": 85, "pl": [85, 151], "matno": 85, "144": 85, "788": 86, "83": [86, 152], "engaug": 86, "21": [86, 94, 95, 98, 115, 135, 152, 334, 412, 482, 486, 493], "thrust": 86, "chamber": [86, 493], "predict": [86, 225, 242, 492, 504], "rocket": 86, "nozzl": [86, 328, 496, 497, 501], "nasa": 86, "134806": 86, "cesium": [87, 152], "caesium": 87, "benchmark": [88, 360, 479, 492, 493, 501], "isotopicopt": [88, 242, 281, 286, 473], "customisotop": [88, 103, 281, 286, 291, 350, 354, 473, 501], "peopl": [88, 103, 451, 479, 480, 484, 501, 507], "overwritten": [88, 213, 244, 305, 307, 359, 375], "u235": [88, 103, 107, 133, 134, 135, 136, 151, 153, 154, 156, 172, 200, 238, 285, 298, 308, 399, 465, 470, 471, 486, 489, 490, 493, 501], "customloc": 88, "matter": [88, 141, 154, 203, 253, 263, 285, 328, 330, 339, 403, 406, 450, 451, 488], "moder": [89, 218, 281, 328, 330, 479], "ga": [89, 103, 151, 152, 234, 237, 244, 247, 330, 479, 497, 501], "cool": [89, 446, 478, 479, 492, 493], "inl": [89, 91, 122], "16": [89, 115, 122, 152, 154, 219, 330, 331, 334, 344, 353, 354, 378, 465, 472, 479, 481, 486, 490, 492, 493, 501], "38241": [89, 122], "mceligot": 89, "donald": 89, "swank": 89, "david": 89, "cottl": 89, "valentin": 89, "francisco": 89, "348": [89, 501], "2016": [89, 170], "doi": [89, 92, 104, 112, 134, 135, 164, 170, 174, 175, 479], "2172": [89, 92, 112, 135, 164, 170, 174, 175], "1330693": 89, "osti": [89, 92, 112, 164, 170, 175], "biblio": [89, 92, 112], "10p": 89, "201114e": [89, 111], "l0": [89, 92, 313, 321, 489], "captur": [90, 161, 162, 166, 199, 235, 237, 253, 285, 286, 314, 328, 379, 444, 475, 479, 492, 497, 501], "lenntech": 90, "com": [90, 91, 93, 94, 95, 96, 97, 98, 303, 304, 344, 414, 432, 437, 438, 443, 450, 479, 480, 482, 484, 507], "hf": [90, 152], "htm": 90, "hastelloi": [91, 481], "invent": 91, "ornl": [91, 107, 124, 136], "molten": [91, 109, 114, 479], "fluorid": 91, "salt": [91, 113, 211, 479], "un": [91, 96, 213, 497], "n10003": 91, "hayn": 91, "h": [91, 92, 134, 138, 152, 161, 170, 219, 234, 275, 327, 328, 330, 492, 493, 501], "2052d": 91, "2020": [91, 481, 493], "haynesintl": 91, "brochur": 91, "corros": [91, 103, 225, 478, 489, 497], "resist": 91, "sab": 91, "sabharwal": 91, "feasibl": 91, "secondari": [91, 203, 281, 330, 413, 479, 499], "exchang": [91, 164, 332, 444, 478, 493, 501], "23076": 91, "oak": [91, 107, 136], "ridg": [91, 107, 136], "laboratori": [91, 107, 136, 164, 174, 478], "oxid": [91, 104, 107, 110, 132, 136, 139, 140, 489], "hot": [91, 96, 103, 115, 285, 302, 305, 312, 314, 321, 352, 353, 411, 482, 489, 492, 493, 497, 501, 502, 505], "704": 91, "871c": 91, "1600f": 91, "293": [91, 92, 135, 141], "polynomi": [91, 92, 94, 95, 96, 98, 104, 136], "sixth": 91, "97": [91, 112, 152], "dll": [91, 96, 103, 305, 489], "academ": [92, 112, 134, 472, 488, 489], "incomplet": [92, 328, 489], "ferrit": 92, "martensit": 92, "stainless": 92, "steel": [92, 298, 492, 501], "famou": 92, "sfr": [92, 225, 479, 488, 492, 493], "swell": [92, 285, 489], "mfh": 92, "handbook": [92, 100, 109, 135, 141], "hofman": [92, 135], "billon": 92, "koenig": 92, "kramer": 92, "lambert": 92, "leibowitz": [92, 112], "orechwa": 92, "pedersen": 92, "porter": 92, "tsai": 92, "wright": 92, "2019": [92, 166, 479, 481, 492], "1506477": 92, "1050": 92, "ref": [92, 111, 114, 136, 172, 237, 328, 378], "eq": [92, 134, 199], "sped": [92, 482], "austenit": 93, "chromium": [93, 152], "superalloi": 93, "specialmet": [93, 94, 95, 96, 97, 98], "technic": [93, 315, 328, 480, 507], "bulletin": 93, "617": [93, 482], "certainti": 93, "900": [94, 136, 141, 463, 465, 501, 503], "800": [94, 96, 141, 463, 481], "20alloi": [94, 98], "20600": 94, "294": [94, 95, 96, 98, 136], "equat": [94, 95, 98, 113, 168, 234, 258, 327, 407, 439, 450, 475, 489, 505], "thermalcond": [94, 95, 98], "cte": [94, 95, 98], "strain": [94, 95, 98, 225, 478, 479, 497, 501], "linexpperc": [94, 95, 98], "2nd": [94, 95, 98, 466], "divid": [94, 95, 98, 285, 308, 362, 387, 406, 465, 478, 496, 497], "differenti": [94, 95, 98, 249, 307, 447], "722e": 94, "303e": 94, "linexp": [94, 95, 98], "221": [95, 490], "1093": [95, 98], "927": 95, "982": [95, 98], "asset": [95, 96, 97], "625": 95, "083e": 95, "125e": 95, "incoloi": [96, 481], "800h": 96, "n08800": 96, "n08810": 96, "sm": [96, 152, 242], "smc": 96, "pe16": 97, "nimon": 97, "x750": 98, "18": [98, 109, 152, 161, 334, 486, 501], "156": 98, "871": 98, "20x": 98, "750": 98, "20170215105917": 98, "8378e": 98, "056e": 98, "600": [99, 124, 130, 131, 136, 141, 294, 297, 298, 300, 341, 463, 465, 501, 502], "1700": [99, 484], "1500": [99, 111, 112, 136], "volumetr": [99, 100, 114, 327, 489, 497, 499], "ON": [99, 100], "measur": [99, 100, 122, 234, 280, 321, 339, 341, 397, 449, 478, 504], "sobolev": [99, 100], "nucl": [99, 100], "mat": [99, 100, 154, 289, 308, 353, 472], "362": [99, 100], "2007": [99, 100], "235": [99, 100, 107, 133, 151, 153, 154, 183, 242, 285, 308, 470, 471, 486, 493], "247": [99, 100], "bismuth": [100, 152], "eutect": 100, "coolant": [100, 103, 254, 281, 285, 302, 305, 308, 314, 322, 327, 328, 330, 352, 354, 411, 458, 463, 465, 473, 479, 486, 488, 489, 492, 496, 497, 499, 501], "superfast": 100, "400": [100, 141, 353, 463], "visc": 100, "1100": [100, 141], "pa": [100, 138, 152, 496, 497, 499], "onlin": [100, 441], "oecd": 100, "nea": [100, 493], "scienc": [100, 162], "nea6195": 100, "ccapac": 100, "accuraci": [100, 407], "whenev": [101, 203, 235, 280, 344, 394, 446, 488], "irradi": [101, 107, 136, 153, 225, 234, 478, 489, 497, 499], "tritium": 101, "li6": [101, 490], "li_wt_frac": [101, 501], "li6_wt_frac": [101, 501], "180c": 101, "923": [102, 482], "1390": 102, "cm3": [102, 308, 399], "mcgonig": 102, "templ": 102, "univers": [102, 166, 249, 308, 396, 479, 501], "1961": 102, "truth": [103, 321, 328], "incorpor": [103, 151, 280, 501], "concert": [103, 165, 479], "bulk": [103, 291, 328, 496, 497], "massfrac": [103, 244, 308, 399, 472, 489], "theoreticaldensityfrac": [103, 498], "realiti": [103, 478, 479, 501], "solid": [103, 132, 151, 152, 161, 225, 234, 285, 302, 303, 305, 313, 321, 330, 353, 489, 490, 492, 497, 501], "due": [103, 107, 166, 168, 225, 234, 249, 251, 253, 280, 285, 305, 308, 314, 322, 342, 371, 449, 479, 482, 497, 499], "manufactur": 103, "programmat": [103, 213, 249, 289, 422, 462, 476, 477, 488, 494, 502], "getter": [103, 327, 328, 341, 358, 359, 365], "privat": [103, 174, 308, 388, 443, 450, 451, 479], "compat": [103, 174, 206, 218, 242, 282, 286, 305, 344, 403], "deep": [103, 308, 354, 501], "generationnum": [103, 308, 354], "includemateri": [103, 308, 354], "predic": [103, 154, 308, 328, 354], "typespec": [103, 218, 238, 282, 285, 305, 308, 328, 330, 354], "exactmatch": [103, 308, 328, 354], "paramstoappli": [103, 305, 308, 343, 344], "previous": [103, 219, 308, 408, 481, 499, 501], "dt": [103, 138, 488, 497], "t0": [103, 305], "methodologi": [103, 199, 234, 312, 479, 488, 505], "prevtempinc": 103, "newtempinc": 103, "temperatureinc": [103, 302, 305, 312, 313, 463, 498, 503], "temperatureincnew": 103, "nucnam": [103, 153, 154, 196, 199, 200, 237, 244, 305, 308, 399, 411, 457, 465, 472], "thrown": [103, 296, 376], "nuclidenam": [103, 291, 305, 308], "massfract": [103, 305, 308], "u238": [103, 153, 154, 162, 298, 465, 470, 486, 489, 490, 493, 501], "likewis": [103, 151], "accordingli": [103, 305, 339, 479, 501], "achiev": [103, 165, 203, 478, 499, 501], "targetdens": 103, "tempguessinc": 103, "celciu": [103, 138, 234, 305, 488], "unitless": 103, "agre": [103, 308, 479, 492], "inputheightsconsideredhot": [103, 312, 321, 353, 482, 501], "psuedodens": 103, "driven": [103, 238, 286, 491], "forward": [103, 177, 280, 363, 411], "rate": [103, 168, 199, 203, 249, 251, 285, 305, 308, 327, 344, 444, 462, 475, 476, 477, 481, 488, 494, 496, 497, 498, 499, 501, 504], "micron": 103, "strength": 103, "mpa": 103, "propnam": 103, "expandfissionproduct": [103, 308], "pu239": [103, 107, 151, 154, 162, 200, 298, 308, 486, 493, 501], "sum": [103, 154, 162, 168, 196, 199, 201, 237, 244, 247, 285, 308, 352, 395, 411, 425, 447, 486, 491, 501], "frac": [103, 134, 199, 234, 237, 285, 305, 308, 314, 327, 405, 419, 472, 489, 492, 498, 501, 504, 505], "altern": [103, 162, 187, 200, 215, 218, 249, 341, 403, 414, 444, 447, 482, 488, 491, 501], "critic": [103, 138, 164, 238, 285, 303, 479, 496, 499, 501], "million": [103, 406], "nuc": [103, 153, 154, 172, 196, 244, 305, 308, 399, 490], "fall": [103, 225, 313, 443, 451, 479, 503], "min": [103, 223, 308, 339, 482, 499], "mint": 103, "maxt": 103, "convienc": 103, "rhocp": 103, "right": [103, 210, 213, 249, 292, 295, 298, 308, 314, 315, 323, 336, 337, 338, 339, 376, 396, 405, 407, 409, 411, 414, 422, 434, 444, 475, 501, 504, 505], "logic": [103, 161, 164, 171, 176, 203, 218, 223, 280, 286, 289, 291, 318, 327, 328, 344, 372, 392, 394, 406, 451, 481, 482, 486, 501], "downstream": [103, 282, 328, 482], "embrac": 103, "deprec": [103, 153, 280, 292, 331, 349, 365, 483, 484, 501], "densityfrac": 103, "fill": [103, 137, 151, 154, 234, 285, 292, 302, 308, 315, 316, 328, 341, 348, 353, 395, 414, 465, 482, 488, 492, 493, 497, 501], "300": [103, 136, 489], "uniti": 103, "parameter": [103, 466, 501], "magnesiumoxid": 104, "273": [104, 110, 136, 139], "milo": 104, "durand": 104, "journal": [104, 134, 234], "297": 104, "1936": 104, "1063": 104, "174539": 104, "3rd": [104, 334, 336, 349, 496], "moli": 106, "ceram": [107, 132, 136], "thermophys": [107, 113, 136, 138, 141, 211], "popov": [107, 136], "tm": [107, 136, 152, 153], "351": [107, 136], "rsicc": [107, 136], "fmdp": [107, 136], "tm2000": [107, 136], "inherit": [107, 150, 154, 237, 302, 328, 345, 365, 450, 484, 488, 501], "leav": [107, 154, 219, 305, 308, 371, 486, 493, 501], "unchang": [107, 305, 371, 482, 501], "u235_wt_frac": [107, 133, 134, 135, 136, 294, 492, 501], "mass_frac_pu02": 107, "massfracpuo2": 107, "puo2": 107, "pu238": [107, 298, 486, 493, 501], "238": [107, 133, 153, 242, 285, 470, 475, 490], "0495599": 107, "239": [107, 133, 153, 242, 475, 490], "0521634": [107, 153], "pu240": [107, 298, 486, 493, 501], "240": [107, 242, 490], "0538135": 107, "pu241": [107, 154, 298, 486, 493, 501], "241": [107, 242, 490], "0568515": 107, "pu242": [107, 168, 298, 486, 493, 501], "242": [107, 154, 490], "0587426": 107, "am241": [107, 153, 286, 298, 486, 493, 501], "0568291": 107, "0439299": [107, 151, 153], "0507882": [107, 153], "oxygen": [107, 132, 152, 291, 308, 399, 493, 501], "9994": [107, 132], "joyo": [107, 479], "pu": [107, 133, 134, 152, 242, 285, 308, 328, 399, 497], "76": [107, 152], "82": [107, 152, 489], "23": [107, 152, 258, 334, 352, 437, 482, 486], "66": [107, 152], "64": [107, 136, 152, 330, 344, 403, 493], "326469": 107, "22": [107, 111, 115, 138, 152, 334, 414, 479, 480, 482, 486, 490, 501, 507], "99": [107, 124, 152, 201, 242, 407, 501], "77": [107, 152, 165], "237": [107, 490], "359511": 107, "upu": 107, "70766": 107, "31": [107, 132, 152, 481], "9988": [107, 132], "269": 107, "70646": 107, "881357": 107, "177": [107, 486, 488, 491, 492, 495], "156000": 107, "823": 107, "725356": 107, "001": [107, 316, 328, 362, 407, 481, 486, 501], "074256": 107, "000156": 107, "7682": 107, "119839": 107, "1923": 107, "029999": 107, "0266": 107, "004150": 107, "0055": 107, "000858": 107, "0064": 107, "000998": 107, "2299": 107, "195": 107, "633404": 107, "166759": 107, "7701": 107, "558597": 107, "118643": 107, "melt": [107, 111, 130, 131, 132, 135, 136], "liquidu": [107, 489], "tl": [107, 152, 159], "solidu": [107, 489], "3120": [107, 136], "388": 107, "655": 107, "336": 107, "burnup": [107, 162, 173, 211, 218, 219, 225, 237, 238, 242, 249, 253, 285, 308, 395, 407, 413, 466, 478, 482, 496, 497, 498, 499, 501], "niobium": [108, 152], "zirconium": [108, 133, 141, 152, 153, 493, 501], "foust": 109, "nak": 109, "gordon": 109, "breach": 109, "1972": 109, "63": [109, 152], "1250": 109, "scandium": [110, 152], "1573": [110, 139], "scandia": 110, "invers": [110, 139, 407], "rare": [110, 139, 161, 345, 365, 432], "earth": [110, 139, 414], "silicon": [111, 152], "808538e": 111, "cumul": [111, 210, 249, 312, 341, 344, 395, 414, 436, 482, 501], "munro": 111, "phy": 111, "chem": 111, "26": [111, 151, 152, 154, 285, 493], "1997": 111, "51": [111, 152], "math": [111, 166, 202, 218, 405, 407, 425, 434, 438, 450, 459, 466, 467, 475, 482, 488], "exp": 111, "00527": 111, "0e": [111, 465, 493, 504], "rho0": 111, "tc0": 111, "0e3": 111, "1110": 111, "425": [111, 457, 460], "003": [111, 328, 362, 486, 501], "52000": 111, "24e": 111, "437": 111, "298": [111, 132, 135, 136, 141], "bring": [112, 134, 280, 400, 420, 444, 479, 488, 492, 501], "anl": [112, 135, 141, 153, 174, 340, 478, 479, 486, 488, 491, 492, 495], "95": [112, 152, 154, 174, 501], "fink": 112, "thermodynam": 112, "vapor": [112, 138], "1995": [112, 174, 234], "94649": 112, "gxndli": 112, "webview": 112, "85": [112, 152, 414], "2230": 112, "371": 112, "3715": 112, "chlorid": 113, "nabr": 113, "naf": 113, "rai": [113, 396], "attenu": 113, "techniqu": [113, 327, 501], "334": 114, "430": [114, 353], "sulfur_density_frac": [114, 501], "espeau": 114, "ceolin": 114, "508k": 114, "1382": 115, "tungsten": [115, 152, 481], "refractori": 115, "roll": [115, 496], "bureau": 115, "naval": 115, "weapon": 115, "contract": [115, 305, 312, 321, 497, 500], "n600": 115, "59530": 115, "southern": 115, "institut": 115, "456": 115, "574": 115, "702": 115, "840": 115, "56": [115, 152, 490], "846": [115, 482], "948": 115, "89": [115, 152, 475], "1023": 115, "1146": 115, "1287": 115, "78": [115, 152, 501], "203": 115, "253": [115, 234], "303": 115, "342": 115, "366": 115, "421": [115, 234], "468": 115, "504": 115, "tabular": [115, 414], "21c": 115, "1966": 115, "viii": [115, 161], "appendix": 115, "181": 115, "test_canaccessclassesfrompackag": [117, 118], "test_packageclassesequalmoduleclass": [117, 118], "test_pseudodens": [117, 119, 121, 123, 124, 125], "test_heatcapac": [117, 119, 123, 124, 125], "test_thermalconduct": [117, 119, 124], "test_massfrac": [117, 119, 129], "test_validrang": [117, 119], "mat_class": [117, 120, 121, 122, 123, 124, 125, 126, 127, 128], "test_theoretical_pseudodens": [117, 120, 127], "test_propertyvalidtemperatur": [117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "test_linearexpansionperc": [117, 122, 124, 127], "test_dens": [117, 122, 124, 128, 350, 353], "defaultmassfrac": [117, 123], "test_lithium_material_modif": [117, 123], "test_meltingpoint": [117, 123, 124, 125], "test_boilingpoint": [117, 123], "test_material_initi": [117, 124], "test_findmateri": [117, 124], "test_namespac": [117, 124, 419], "test_poros": [117, 124], "test_getcorrosionr": [117, 124], "test_getmassfracpuo2": [117, 124], "test_getmolfracpuo2": [117, 124], "test_getmeltingpoint": [117, 124], "test_applyinputparam": [117, 124], "test_specificvolumeliquid": [117, 124], "test_enthalpi": [117, 124], "test_linearexpans": [117, 124], "test_adjustmassenrich": [117, 124, 350, 353], "test_gettemperatureatdens": [117, 124], "test_getdensityexpansion3d": [117, 124], "test_removenucmassfrac": [117, 124], "test_densitytimesheatcapactii": [117, 124], "test_gettempchangefordensitychang": [117, 124], "test_dupl": [117, 124, 128, 245, 247, 350, 351, 352, 378, 385], "test_setdefaultmassfrac": [117, 124], "test_volumetricexpans": [117, 124], "test_dynamicvisc": [117, 124], "test_densityneverchang": [117, 124], "test_getchildren": [117, 124, 350, 354], "test_getchildrenwithflag": [117, 124], "test_iconel800_linearexpans": [117, 124], "test_00_setdefaultmassfrac": [117, 124], "test_01_linearexpansionperc": [117, 124], "test_02_linearexpans": [117, 124], "test_03_pseudodens": [117, 124], "test_polyfitthermalconduct": [117, 124], "test_polyfitheatcapac": [117, 124], "test_polyfitlinearexpansionperc": [117, 124], "test_nicklecont": [117, 124], "test_linearexpansionhott": [117, 124], "test_meancoefficientthermalexpans": [117, 124], "test_00_applyinputparam": [117, 124], "test_01_pseudodens": [117, 124], "test_02_linearexpansionperc": [117, 124], "baseinput": [117, 124], "loadassembli": [117, 124], "test_class1class2_class1_wt_frac": [117, 124], "test_class1class2_classx_custom_isotop": [117, 124], "test_sulfur_density_frac": [117, 126], "test_ispickl": [117, 128, 350, 356, 359], "test_td": [117, 128], "test_cach": [117, 128], "test_densitykgm3": [117, 128], "test_pseudodensitykgm3": [117, 128], "test_water_at_freez": [117, 129], "test_water_at_boil": [117, 129], "test_water_at_critcalpoint": [117, 129], "test_validatenam": [117, 129], "superclass": 118, "verif": [119, 129, 450, 478], "300k": 119, "ratio": [119, 162, 285, 328, 395, 397, 475, 493, 497, 499, 501], "_material_test": [120, 121, 123, 124, 125, 126, 127], "0759": 123, "discover": [124, 482], "1723": 124, "efg": 124, "pseudo": [124, 128, 156, 447, 482, 503], "linearli": [124, 395], "_mixtur": 124, "nickl": 124, "spec": 124, "nnuclid": [124, 294, 298, 300], "ncustom": [124, 298], "customisotopic1": 124, "customisotopic2": 124, "nblock": [124, 294, 297, 298, 300], "block_fuel": [124, 294, 300, 492, 501], "fuel1": [124, 294, 300, 315, 330, 501], "component_fuel_fuel1": [124, 294, 300, 501], "tinput": [124, 294, 297, 298, 300, 302, 303, 304, 305, 307, 321, 353, 354, 465, 473, 492, 493, 501], "thot": [124, 294, 297, 298, 300, 302, 303, 304, 305, 307, 321, 350, 353, 354, 465, 473, 486, 492, 493, 501], "ip": [124, 285, 294, 297, 298, 300, 303, 305, 353, 354, 465, 473, 492, 501, 502], "mult": [124, 218, 285, 289, 294, 297, 298, 300, 303, 304, 305, 307, 353, 354, 465, 473, 492, 493, 498, 501, 502], "op": [124, 285, 294, 297, 298, 300, 302, 303, 304, 305, 331, 353, 354, 373, 465, 473, 492, 501, 502], "fuel2": [124, 294, 300, 315, 330, 501], "component_fuel_fuel2": [124, 294, 300, 501], "nassembli": [124, 294, 297, 298, 300], "assembly_a": [124, 294, 297, 298, 300, 501], "height": [124, 173, 223, 282, 285, 286, 288, 294, 296, 297, 298, 300, 303, 305, 307, 308, 312, 313, 321, 327, 328, 334, 339, 351, 352, 353, 354, 394, 407, 432, 473, 481, 482, 484, 486, 492, 493, 497, 501], "materialmodif": [124, 281, 286, 287, 300], "picklabl": [128, 387], "commun": [128, 150, 164, 203, 352, 372, 445, 504], "iapw": [129, 138], "if97": [129, 138], "0c": 129, "relguid": [129, 138], "supsat": [129, 138], "100c": 129, "096k": 129, "iaea": [130, 131, 132, 211], "tecdoct": [130, 131, 132], "1450": [130, 131, 132], "challeng": [130, 131, 132, 165, 291, 328, 339, 451, 479], "tecdoc": [130, 131, 132], "2005": [130, 131, 132], "pub": [130, 131, 132], "mtcd": [130, 131, 132], "te_1450_web": [130, 131, 132], "u233": [130, 154, 490], "u233_wt_frac": [130, 501], "te": [130, 131, 132, 152, 154, 501], "1223": 132, "232": [132, 133, 490], "030806": 132, "264": 132, "029606": 132, "298k": 132, "zirc": 133, "233": [133, 490], "zr_wt_frac": [133, 134, 300, 501], "notion": [134, 249], "10zr": [134, 308], "chandrabhanu": 134, "incorrect": [134, 341, 482], "basak": 134, "prasad": 134, "kamath": 134, "prabhu": 134, "rich": [134, 373, 441, 479, 503], "480": 134, "2009": [134, 479], "857": 134, "862": 134, "issn": 134, "0925": 134, "8388": 134, "1016": [134, 479], "jallcom": 134, "02": [134, 136, 154, 282, 298, 444, 457, 466, 467, 473, 474, 476, 481, 482, 483, 486, 490, 501, 503], "077": 134, "aaafuel": 135, "kim": 135, "aaa": [135, 141, 499], "2003": [135, 493], "822554": 135, "01591t": 135, "907": 135, "215": [135, 490], "1600": [135, 141], "255": 135, "nse": 135, "gl": 135, "07": [135, 162, 444, 466, 473, 474, 484, 486, 490, 501], "27": [136, 152, 451, 481, 482, 486], "302": 136, "008463": 136, "87410000": 136, "548": 136, "68": [136, 152], "18531": 136, "3100": 136, "3123": 136, "3000": 136, "dioxid": 136, "nonequilibrium": 136, "molecular": [136, 308], "motoyama": 136, "60": [136, 152, 215, 282, 285, 337, 353, 396, 405, 407, 496, 497, 499], "juli": 136, "1999": 136, "92": [136, 151, 152, 154, 490], "380289e": [136, 490], "599930e": 136, "1200": [136, 141, 463], "1800": [136, 141], "2100": 136, "2700": 136, "991": 136, "864": 136, "768": 136, "567": 136, "073": 136, "891": 136, "847": 136, "718": 136, "u234": [136, 154, 291, 298, 486, 490, 501], "curv": [136, 207, 407, 482], "faith": 138, "supplementari": 138, "ordinari": 138, "substanc": 138, "1992": 138, "steam": 138, "satur": 138, "industri": [138, 479, 488], "h2o": [138, 161], "007976e": 138, "sr1": 138, "86": [138, 152, 501], "pressur": [138, 152, 211, 225, 275, 341, 439, 479, 496, 497, 499, 501], "096": 138, "322": 138, "064": 138, "22064000": 138, "5453657571674064": 138, "65134998e": 138, "08": [138, 444, 465, 466, 473, 474, 481, 482, 486], "2690": 138, "66631": 138, "127": [138, 467, 475, 476, 492], "287297": 138, "003439": 138, "981825814": 138, "alpha": [138, 154, 161, 162, 164, 465, 470, 472, 475, 489, 497, 505], "1135": 138, "905627715": 138, "phi": 138, "2319": 138, "5246": 138, "1e": [138, 141, 166, 210, 370, 399, 411, 459, 465, 474, 501, 504], "06": [138, 141, 244, 298, 444, 457, 466, 473, 474, 482, 486, 490], "wrt": 138, "quantiti": [138, 164, 327, 344, 353, 411, 413, 496], "kgk": 138, "yttrium": [139, 152], "yttria": 139, "zinc": [140, 152], "1491": 140, "28": [140, 152], "polycrystallin": 140, "devic": 140, "technologi": [140, 234, 479], "45803": 141, "touloukian": 141, "kirbi": 141, "taylor": 141, "desai": 141, "ifi": [141, 411], "plenum": [141, 234, 281, 282, 285, 330, 351, 352, 478, 486, 491], "washington": 141, "1975": 141, "700": [141, 463], "1136": [141, 482], "99999": 141, "1137": 141, "1400": 141, "7e": [141, 465], "9e": [141, 465], "6e": [141, 465], "8e": [141, 465], "2e": [141, 158, 465], "5e": [141, 449, 465], "03e": 141, "mk": 141, "upgrad": [143, 249, 285, 479, 482, 493, 501], "invest": [143, 479], "thousand": [143, 161, 328, 444, 451, 479, 496, 497], "seriou": [143, 479, 488, 501], "analyst": [143, 309, 446, 479, 486, 501], "strongli": [143, 308, 443, 503], "oftentim": [143, 291, 501], "gb": [143, 479], "cpu": [143, 150, 447, 479, 501], "week": [143, 479], "monetari": 143, "tempor": 143, "meanwhil": [143, 479], "fix": [143, 151, 164, 169, 238, 249, 327, 344, 352, 373, 407, 414, 443, 450, 451, 501], "eas": [143, 305, 479, 481], "train": 143, "cognit": 143, "burden": [143, 378, 501], "background": 143, "word": [143, 308, 309, 332, 339, 354, 378, 413, 414, 450, 501], "spreadsheet": [143, 479], "test_m0_1_6": [143, 147], "testmigr": [143, 147, 148], "test_migration_bas": [143, 147], "testmigrationbas": [143, 147, 149], "testsettingsmigr": [143, 147, 149], "fromvers": [143, 144, 145, 146], "tovers": [143, 144, 145, 146], "classic": [144, 492], "_applytostream": 144, "center": [145, 218, 219, 282, 285, 304, 307, 308, 314, 315, 328, 334, 337, 338, 339, 351, 395, 396, 405, 414, 423, 432, 467, 475, 482, 486, 488, 493, 497, 501], "na23": [145, 465, 479, 486], "na": [145, 152, 258, 291, 308, 352, 465, 486, 491, 501], "mn55": [145, 486], "he4": [145, 162, 486], "he": [145, 152, 486, 491, 497], "w182": [145, 298, 486], "o16": [145, 291, 493, 501], "al27": [145, 161, 493], "n14": 145, "w183": [145, 298, 486], "w184": [145, 298, 486], "w186": [145, 298, 486], "alphanumer": [146, 481], "ring": [146, 218, 219, 238, 285, 303, 307, 314, 315, 322, 328, 332, 333, 334, 337, 338, 339, 340, 359, 362, 405, 423, 458, 459, 481, 499, 501, 503], "a2003b": 146, "test_locationlabelmigr": [147, 148], "test_basic_valid": [147, 149], "test_loadstreamfrompath": [147, 149], "locationlabel": 148, "mpi_comm": [150, 447], "bcast": [150, 204, 395], "wait": [150, 204, 447, 451, 488], "sync": [150, 389, 447], "sit": [150, 162, 204, 219, 328, 447, 475, 478], "someinst": 150, "comm_world": 150, "interestingli": 150, "strong": [150, 225, 242], "discourag": [150, 308], "sign": [150, 203, 308, 443, 449], "allcpuresult": 150, "objectsforallcorestoit": 150, "subset": [150, 237, 291, 308, 309, 326, 399, 419, 420, 481, 501], "len": [150, 154, 308, 406, 411, 447, 465, 468, 469, 472, 490, 491, 503], "clase": 150, "numpernod": 150, "mpi_siz": [150, 258, 447], "workload": 150, "spawn": [150, 481], "varaibl": 150, "think": [150, 308, 451, 481, 501, 503], "dsitributionact": 150, "amongst": [150, 341, 501], "skipinterfac": 150, "minim": [151, 219, 236, 341, 389, 401, 407, 450, 475, 480, 492, 507], "mainli": [151, 238, 280], "three": [151, 154, 166, 168, 181, 286, 307, 308, 339, 372, 407, 488, 492, 493, 501], "byz": [151, 152, 490], "ironfromz": 151, "ironfromnam": 151, "bynam": [151, 152, 154, 161, 457, 464, 465, 472, 490], "iron": [151, 152, 153, 490, 501], "ironfromsymbol": 151, "bysymbol": [151, 152, 490], "lower": [151, 218, 238, 281, 282, 285, 290, 308, 311, 328, 330, 336, 339, 340, 378, 482, 496], "upper": [151, 152, 168, 200, 218, 240, 249, 281, 282, 285, 311, 330, 336, 339, 340, 396, 405, 501], "truli": [151, 395, 479, 497], "ever": [151, 330, 352, 354, 363, 450, 479, 488, 501], "118": [151, 152], "fe56": [151, 161, 470, 486], "stand_alon": 151, "human": [151, 154, 331, 377, 501], "readabl": [151, 154, 280, 377, 450, 501], "capit": [151, 154, 237, 449, 450, 501], "letter": [151, 165, 200, 237, 285, 396, 410, 450, 492, 497, 501], "tradition": [151, 217], "legaci": [151, 235, 349, 479], "Of": [151, 162, 218, 309, 479, 486, 491, 493], "reserv": [151, 238, 450, 451], "aa": [151, 163, 172, 200, 237, 238, 253, 328, 354, 470, 471], "ab": [151, 199, 237, 285, 308, 328, 486, 488, 497], "za": 151, "pu39": [151, 285], "along": [151, 154, 165, 211, 238, 249, 279, 285, 308, 309, 312, 313, 321, 327, 330, 336, 370, 371, 395, 407, 444, 446], "bylabel": [151, 154, 490], "softwar": [151, 154, 164, 444, 450, 478, 479, 480, 492, 501, 507], "mcnp": [151, 154, 161, 242, 280, 285, 315, 328, 399, 407, 419, 439, 456, 460, 477, 482, 488, 494, 501], "serpent": [151, 154, 203, 238, 242, 501], "mc2": [151, 153, 154, 158, 168, 170, 172, 175, 199, 203, 242, 246, 253, 285, 408, 444, 479, 501], "94": [151, 152, 153, 482], "tinfromnam": 151, "sn112": 151, "tinfromlabel": 151, "tinfrommcc2id": 151, "sn1125": 151, "tinfrommcc3id": 151, "sn1127": 151, "fulfil": 151, "ll": [151, 282, 339, 340, 414, 447, 480, 486, 488, 491, 492, 501, 507], "test_el": [151, 155], "testel": [151, 155, 156], "test_nucdirectori": [151, 155], "testnucdirectori": [151, 155, 157], "test_nuclidebas": [151, 155], "testnuclid": [151, 155, 158], "testaaazzzsid": [151, 155, 158], "test_thermalscatt": [151, 155], "buildblockwithtsl": [151, 155, 159], "testthermalscatt": [151, 155, 159], "getnuclidethermalscatteringdata": [151, 155, 159], "test_transmut": [151, 155], "randomstr": [151, 155, 160], "transmutationtest": [151, 155, 160], "decaymodetest": [151, 155, 160], "alkali_met": [151, 152, 490], "alkaline_earth_met": [151, 152], "nonmet": [151, 152], "transition_met": [151, 152], "post_transition_met": [151, 152], "metalloid": [151, 152], "halogen": [151, 152], "noble_ga": [151, 152], "lanthanid": [151, 152], "actinid": [151, 152, 244, 291, 308, 475, 501], "isnaturallyoccur": [151, 152, 156, 490], "getdatabasenam": [151, 154], "getdecai": [151, 154], "getmcc2id": [151, 154], "getmcc3id": [151, 154], "getserpentid": [151, 154], "fissil": [151, 154, 181, 237, 282, 308, 486, 496, 497, 499, 501, 506], "spontaneous_fiss": [151, 154], "getmcnpid": [151, 154], "getaaazzzsid": [151, 154], "getendfmatnum": [151, 154], "getsubjectnuclidebas": [151, 161], "getpreferredproduct": [151, 162], "outlin": [152, 154, 396, 449, 503], "gaseou": [152, 244, 482, 501], "stp": [152, 247], "hydrogen": [152, 159, 493], "helium": 152, "nitrogen": 152, "fluorin": 152, "ne": [152, 153, 308], "neon": [152, 153], "chlorin": 152, "argon": 152, "36": [152, 501], "krypton": [152, 411], "xe": [152, 242, 411], "54": 152, "xenon": [152, 411, 501], "rn": 152, "radon": 152, "og": 152, "oganesson": 152, "classifi": [152, 308], "ac": [152, 161, 491], "actinium": 152, "90": [152, 285, 308, 396, 406, 466, 479, 492, 501], "91": 152, "protactinium": [152, 156], "93": [152, 501], "neptunium": 152, "plutonium": 152, "am": [152, 242], "americium": 152, "curium": [152, 501], "bk": 152, "berkelium": 152, "cf": 152, "98": [152, 472, 475, 486, 501], "einsteinium": 152, "fm": 152, "fermium": 152, "md": [152, 488], "101": [152, 407], "mendelevium": 152, "NO": 152, "102": 152, "nobelium": 152, "lr": 152, "103": [152, 468, 476], "lawrencium": 152, "num": [152, 210, 285, 351, 444, 466], "aluminium": 152, "phosphoru": 152, "sc": [152, 412], "37": 152, "titanium": 152, "ti": [152, 337, 338, 449, 475, 489], "vanadium": 152, "34": 152, "manganes": 152, "38": [152, 492], "cobalt": 152, "co": [152, 466, 480, 501, 507], "29": [152, 341, 484], "zn": 152, "gallium": 152, "germanium": 152, "ge": 152, "33": [152, 177, 251, 414, 465], "arsen": 152, "AS": [152, 165, 479, 492], "selenium": 152, "se": 152, "bromin": 152, "br": 152, "rubidium": 152, "rb": [152, 165, 169], "strontium": 152, "sr": [152, 437], "57": [152, 486], "nb": [152, 154, 161, 457, 472, 475], "mo": [152, 242, 298, 486, 491, 501], "technetium": 152, "ruthenium": 152, "ru": 152, "rhodium": 152, "rh": 152, "palladium": 152, "pd": [152, 260, 343], "53": 152, "silver": 152, "ag": [152, 211, 414], "74": [152, 360, 492], "cadmium": 152, "cd": [152, 479, 480, 488, 507], "49": 152, "indium": 152, "IN": [152, 166, 173], "88": 152, "tin": [152, 501], "sn": [152, 164, 249], "59": 152, "antimoni": 152, "sb": 152, "52": 152, "tellurium": 152, "iodin": 152, "barium": 152, "ba": [152, 237], "lanthanum": 152, "la": [152, 161, 164], "58": [152, 341], "cerium": 152, "ce": 152, "praseodymium": 152, "pr": [152, 443, 450, 482, 483, 484], "neodymium": 152, "nd": [152, 162, 258, 298], "61": 152, "promethium": 152, "pm": [152, 343], "62": 152, "samarium": 152, "europium": 152, "eu": 152, "gadolinium": 152, "gd": 152, "65": [152, 237], "terbium": 152, "tb": 152, "dysprosium": 152, "dy": 152, "holmium": 152, "ho": 152, "erbium": 152, "er": 152, "69": 152, "thulium": 152, "70": [152, 352, 406, 414, 491, 501], "ytterbium": 152, "yb": 152, "71": [152, 486], "lutetium": 152, "lu": 152, "72": [152, 501], "ta": 152, "75": [152, 492], "rhenium": 152, "osmium": 152, "iridium": 152, "ir": 152, "platinum": 152, "pt": 152, "79": [152, 501], "gold": [152, 437], "au": 152, "mercuri": 152, "hg": 152, "81": 152, "thallium": 152, "pb": [152, 280, 350, 358, 378, 389], "bi": [152, 447], "84": [152, 490], "polonium": 152, "po": [152, 328, 333, 334, 337, 339, 340, 359, 481, 503], "astatin": 152, "AT": [152, 171], "87": [152, 490], "francium": 152, "fr": 152, "radium": 152, "ra": [152, 158], "104": 152, "rutherfordium": 152, "rf": 152, "105": 152, "dubnium": 152, "106": 152, "seaborgium": 152, "sg": 152, "107": 152, "bohrium": 152, "bh": 152, "108": [152, 469, 476], "hassium": 152, "109": 152, "meitnerium": 152, "mt": [152, 486, 506], "110": [152, 234, 353, 406], "darmstadtium": 152, "111": 152, "roentgenium": 152, "rg": 152, "112": 152, "copernicium": 152, "cn": 152, "113": 152, "nihonium": 152, "nh": 152, "114": 152, "flevrovium": 152, "fl": 152, "115": [152, 459, 460], "moscovium": 152, "mc": [152, 153, 154, 170, 187, 199, 249, 290, 492, 501], "116": 152, "livermorium": 152, "lv": 152, "117": 152, "tennessin": 152, "119": 152, "dummi": [152, 154, 170, 172, 175, 199, 210, 281, 289, 321, 328, 330, 352, 354, 377, 385, 447, 465, 466, 474, 486, 493], "120": [152, 222, 285, 315, 484, 490], "lumpedfissionproduct": [152, 235, 241, 285, 305, 308], "lp": 152, "proton": [152, 154, 162, 464, 472, 475, 490], "chemic": [152, 225, 247, 308, 399, 478, 497, 499], "cut": [152, 285, 307, 315, 396, 479, 501], "elem": 152, "abbrevi": [152, 153, 158, 450], "getz": 152, "elementzbysymbol": 152, "lose": [152, 154, 479], "elementsymbol": 153, "prefix": [153, 164, 165, 213, 395, 450], "xstype": [153, 235, 238, 242, 285, 288, 473, 497, 501], "suffix": [153, 163, 199, 200, 253, 285, 308, 349], "u235ia": 153, "zircfb": 153, "2355": [153, 154], "ia": 153, "fb": 153, "mc2liblabel": 153, "am242": [153, 154, 237, 298], "a242": 153, "am242m": [153, 154, 158, 486], "adjustnuclid": 153, "amass": 153, "u239": [153, 490], "lindhard": 153, "cutoff": [153, 397, 501], "displac": [153, 157, 212, 234, 479, 497, 501], "specter": 153, "ii": 153, "greenwood": 153, "fpp": 153, "197": 153, "argonn": [153, 166, 174, 478, 479], "1985": 153, "ed": [153, 501], "ev": [153, 168, 199, 240, 470, 497, 499], "350439e": [154, 490], "hl": [154, 490], "22160758861e": [154, 490], "204000e": [154, 490], "03": [154, 444, 457, 460, 466, 473, 474, 482, 486, 490, 501, 503], "bymcc2id": [154, 490], "bymcc3id": [154, 490], "u235_7": 154, "bymcnpid": [154, 490], "92235": [154, 457], "aaazzz": 154, "byaaazzzsid": [154, 490], "2350920": 154, "npu239": 154, "decaytyp": 154, "dectyp": 154, "sf": [154, 162], "identif": [154, 173, 182], "endf": [154, 161, 183, 242, 291], "vii": [154, 161, 183], "fissl": 154, "halflif": [154, 490], "mcc2id": 154, "mcc3id": 154, "nucleon": 154, "excit": [154, 488, 493], "pad": [154, 249, 321, 395, 406, 414, 432, 499, 501], "nusf": [154, 162, 490], "cm244": [154, 298, 486], "answer": [154, 339, 373, 416, 478, 479, 486, 490], "card": [154, 199, 399, 419, 456, 460, 477, 482, 494], "isomer": 154, "94239": [154, 457], "6000": [154, 457], "eg": [154, 200, 308], "129m": 154, "njoi": [154, 242], "lightest": 154, "9228": 154, "9237": 154, "92000": 154, "Not": [154, 197, 199, 238, 308, 334, 395, 398, 497, 503], "nat": 154, "placehold": [154, 206, 282, 363, 396, 414, 492], "truncat": [154, 395, 414], "lump": [154, 162, 237, 242, 244, 246, 247, 305, 308, 475, 482, 501], "fissionproduct": [154, 242, 466, 473, 474, 486, 503], "expend": 154, "numberdensitydict": 154, "activenuclid": [154, 350, 354], "march": [154, 444, 501], "smallest": [154, 285, 302, 314, 407], "orderedset": 154, "lambda": [154, 308, 343, 406, 411, 414, 466, 488, 491, 499], "nn": [154, 503], "zn64": 154, "zn66": 154, "zn67": 154, "zn68": 154, "zn70": 154, "zr90": [154, 486], "zr91": [154, 486], "zr92": [154, 486], "zr94": [154, 486], "zr96": [154, 486], "zr93": 154, "zr95": 154, "isomers90": 154, "isom": [154, 161], "mo95": [154, 486], "mo2n": 154, "nb95": 154, "nb2n": 154, "zr2n": 154, "meet": [154, 285, 308, 328, 334, 343], "0107358968": 154, "am4c": 154, "newlabel": 154, "burnchainstream": [154, 475], "twice": [154, 223, 338, 492], "rebuild": 154, "orphan": 154, "mid": [154, 365], "burnchain": 154, "believ": [154, 479], "henc": [154, 305, 414, 446], "ecosystem": [154, 280, 443, 445, 450, 451, 479, 489], "everyth": [154, 174, 200, 201, 204, 249, 308, 341, 410, 414, 447, 492], "metast": [154, 475, 499], "ground": [154, 479, 482], "test_elements_elementbulkproperti": [155, 156], "test_element_elementbynamereturnsel": [155, 156], "test_element_elementbyzreturnsel": [155, 156], "test_element_elementbysymbolreturnsel": [155, 156], "test_element_addexistingelementfail": [155, 156], "test_element_addedelementappearsinelementlist": [155, 156], "test_element_getnatrualisotpicsonlyretrievesabundacegt0": [155, 156], "test_element_isnaturallyoccur": [155, 156], "test_abundancesaddtoon": [155, 156], "test_isheavymet": [155, 156], "test_nucdir_getnameforolddashednam": [155, 157], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclid": [155, 157], "test_nucdir_getnuclidesfromforbadnam": [155, 157], "test_getdisplacementenergi": [155, 157], "test_nucbases_fromnamebadnameraisesexcept": [155, 158], "test_nucbase_allabundancesaddtoon": [155, 158], "test_nucbases_alllabelsareuniqu": [155, 158], "test_nucbases_negativezraisesexcept": [155, 158], "test_nucbases_z295raisesexcept": [155, 158], "test_nucbases_mc2element": [155, 158], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail": [155, 158], "test_naturalnuclidebase_getnatrualisotp": [155, 158], "test_nucbases_singlefailswithmultiplematch": [155, 158], "test_nucbases_singlefailswithnomatch": [155, 158], "test_nucbases_singleisprettyspecif": [155, 158], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotop": [155, 158], "test_nucbases_labelandnamecollsionsareforsamenuclid": [155, 158], "test_nucbases_imposeburnchaindecaybulkstatist": [155, 158], "test_nucbases_imposeburnchaintransmutationbulkstatist": [155, 158], "test_nucbases_imposeburn_nusf": [155, 158], "test_nucbases_databasenamesstartwith_n": [155, 158], "test_nucbases_alldatabasenamesareuniqu": [155, 158], "test_nucbases_am242m": [155, 158], "test_nucbases_isheavymet": [155, 158], "test_getdecai": [155, 158], "test_getendfmatnum": [155, 158], "test_nonmc2nuclid": [155, 158], "test_kryptondecayconst": [155, 158], "test_curiedefinitionwithra226": [155, 158], "test_loadmcc2data": [155, 158], "test_loadmcc3data": [155, 158], "test_aaazzzsnamegener": [155, 158], "test_graphiteonreactor": [155, 159], "test_endf8compound": [155, 159], "test_endf8elementincompound": [155, 159], "test_endf8isotop": [155, 159], "test_acecompound": [155, 159], "test_aceelementincompound": [155, 159], "test_aceisotop": [155, 159], "test_failonmultipl": [155, 159], "test_transmutation_validreactiontyp": [155, 160], "test_transmutation_productparticl": [155, 160], "test_transmutation_invalidreactiontyp": [155, 160], "test_decaymode_validreactiontyp": [155, 160], "test_decaymode_invalidreactiontyp": [155, 160], "ripl": [156, 481, 482], "debat": 156, "yeah": [156, 211], "branch": [158, 162, 253, 443, 475, 482], "3e": [158, 465], "threshold": [158, 240, 266], "ternari": [158, 351], "sponan": 158, "am242g": 158, "226": [158, 490], "ci": [158, 308, 457, 482, 484], "988": 158, "mcc": [158, 172], "aaazz": 158, "tsl": [159, 161], "armiobj": 159, "conceptu": [159, 305, 362, 479, 501], "offici": [159, 173, 344, 451], "tslbynuclidebas": 159, "subject": [159, 161, 280, 450, 479], "tslinfo": 159, "nucbas": 159, "acelabel": [159, 161], "awar": [161, 204, 312, 479, 501], "characterist": [161, 341], "significantli": [161, 164, 203, 308, 444], "molecul": [161, 308], "beta": [161, 162, 168, 234, 475, 497, 499, 501], "solver": [161, 162, 168, 172, 174, 203, 242, 248, 249, 280, 285, 327, 458, 466, 475, 488, 492, 493, 501], "c12": 161, "parson": 161, "ur": 161, "25096": 161, "lanl": [161, 172], "pdf_file": 161, "classif": 161, "beo": 161, "crystallin": 161, "porou": [161, 234], "para": 161, "ortho": 161, "ch4": 161, "sio2": 161, "benzen": 161, "iii": 161, "kernel": [161, 213, 237, 249, 288, 289, 407, 479, 482, 486, 487, 492, 501, 503], "bynbandcompound": 161, "compoundnam": 161, "endf8label": 161, "whose": [161, 285, 312, 341, 395, 406, 414], "methan": 161, "endf8": 161, "rebuilt": 161, "burnchainfilenam": [162, 501], "np237": [162, 298, 486], "n2n": [162, 187, 196, 199, 258, 308, 497], "lfp38": [162, 242, 298, 486], "np239": 162, "ngamma": [162, 258, 411, 470, 475], "45000e": 162, "halflifeinsecond": 162, "4099935680e": 162, "gamma": [162, 164, 169, 170, 175, 190, 199, 200, 201, 235, 249, 256, 258, 285, 305, 308, 326, 327, 341, 344, 411, 470, 475, 482, 497, 501], "low": [162, 237, 238, 281, 330, 395, 411, 466, 486, 493, 496, 497, 499, 501], "explicitli": [162, 218, 242, 280, 282, 292, 328, 330, 447, 451, 468, 469, 481, 488, 492, 501], "matrix": [162, 165, 166, 168, 171, 172, 181, 190, 196, 199, 201, 258, 395, 462, 475, 476, 477, 491, 494, 497, 503], "ill": 162, "exponenti": [162, 407, 475], "cram": 162, "adequ": [162, 450], "solut": [162, 170, 237, 238, 242, 309, 314, 344, 407, 501], "intrins": [162, 478, 497, 499], "pusa": 162, "maria": 162, "jaakko": 162, "leppanen": 162, "164": 162, "2010": 162, "140": 162, "150": [162, 406, 407, 459, 501], "moler": 162, "cleve": 162, "charl": 162, "van": 162, "loan": 162, "nineteen": 162, "dubiou": 162, "siam": 162, "1978": 162, "836": 162, "datadict": 162, "productnuclid": [162, 475], "fallback": [162, 218, 380], "productparticl": 162, "outgo": [162, 174, 189, 218, 501], "particl": [162, 497, 501], "scale": [162, 166, 285, 291, 308, 315, 334, 359, 399, 411, 413, 489, 497, 504], "doubl": [162, 165, 288, 414, 503], "librarynucnam": 162, "daughter": [162, 499], "circuit": [162, 343, 344], "shorter": [162, 371, 414, 445, 451, 493], "nalph": [162, 258, 411, 470, 475], "deuteron": 162, "triton": 162, "nt": [162, 258, 501], "bmd": [162, 475], "bpd": [162, 475], "electron": 162, "ec": [162, 467], "xsid": [163, 200, 237, 238, 264], "isotx": [163, 164, 166, 168, 187, 194, 199, 200, 201, 239, 256, 258, 285, 305, 308, 328, 411, 462, 465, 471, 476, 477, 481, 482, 494, 501], "compx": [163, 164, 173, 181, 194, 200], "gamiso": [163, 164, 172, 185, 200, 201, 481, 482], "cycle0": 163, "pmatrx": [163, 164, 190, 199, 200, 201, 481, 482], "implicit_int": [163, 164, 165], "iorecord": [163, 164, 165], "binaryrecordread": [163, 164, 165], "binaryrecordwrit": [163, 164, 165], "asciirecordread": [163, 164, 165], "asciirecordwrit": [163, 164, 165], "datacontain": [163, 164, 165, 167, 171, 173, 174, 176, 177, 178], "streamwithdatacontain": [163, 164, 165, 167, 171, 173, 174, 176, 177, 178], "getblockbandwidth": [163, 164, 165], "compxsregion": [163, 164, 166], "dif3d": [163, 164, 166, 168, 169, 170, 172, 173, 174, 177, 182, 184, 186, 188, 191, 199, 203, 219, 282, 285, 315, 327, 332, 340, 444, 478, 492, 497, 501], "dif3ddata": [163, 164, 167], "dif3dstream": [163, 164, 167], "dlayx": [163, 164, 183], "delayedneutrondata": [163, 164, 168], "readbinari": [163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 200, 465, 470, 471], "readascii": [163, 164, 165, 168, 175, 395, 396], "writebinari": [163, 164, 165, 166, 168, 169, 171, 172, 175, 176, 177, 178], "writeascii": [163, 164, 165, 168, 174, 175, 178, 395, 396], "dlayxsio": [163, 164, 168], "fixsrc": [163, 164, 184, 501], "comparenuclidex": [163, 164, 170, 172, 175], "adddummynuclidestolibrari": [163, 164, 170, 172, 175], "geodst": [163, 164, 174, 176, 186, 328, 482], "geodstdata": [163, 164, 171], "geodststream": [163, 164, 171], "compareset": [163, 164, 172], "isotxsio": [163, 164, 172], "labelsdata": [163, 164, 173], "labelsstream": [163, 164, 173], "nhflux": [163, 164, 177, 189, 482], "nhfluxstream": [163, 164, 174], "nafluxstream": [163, 164, 174], "nhfluxstreamvari": [163, 164, 174], "nafluxstreamvari": [163, 164, 174], "getnhfluxread": [163, 164, 174], "pmatrxio": [163, 164, 175], "pwdint": [163, 164, 191], "pwdintdata": [163, 164, 176], "pwdintstream": [163, 164, 176], "rtflux": [163, 164, 169, 192], "rtfluxdata": [163, 164, 177], "rtfluxstream": [163, 164, 177], "atfluxstream": [163, 164, 177], "getfdfluxread": [163, 164, 177], "rzflux": [163, 164, 177, 193], "rzfluxdata": [163, 164, 178], "rzfluxstream": [163, 164, 178], "test_xscollect": [163, 195], "testxscollect": [163, 195, 196], "mockblueprint": [163, 195, 196], "mockblock": [163, 195, 196], "test_xslibrari": [163, 195], "tempfilemixin": [163, 195, 197], "testxslibrari": [163, 195, 197], "testgetisotxsfilesinworkingdirectori": [163, 195, 197], "abstracttestxslibrarymerg": [163, 195, 197], "pmatrx_merge_test": [163, 195, 197], "isotxs_merge_test": [163, 164, 179, 187, 195, 197], "gamiso_merge_test": [163, 195, 197], "combined_merge_test": [163, 195, 197], "test_xsnuclid": [163, 195], "nuclidetest": [163, 195, 198], "getdefaultx": [163, 199], "getabsorptionx": [163, 199], "gettotalscattermatrix": [163, 199], "collapsecrosssect": [163, 199], "createmacrosonblocklist": [163, 199], "createmacrosfrommicro": [163, 199], "gammaenergyupperbound": [163, 200], "neutrondoseconversionfactor": [163, 200], "gammadoseconversionfactor": [163, 200], "numgroup": [163, 166, 199, 200], "numgroupsgamma": [163, 200], "nuclidelabel": [163, 200], "resetscatterweight": [163, 200], "getscatterweight": [163, 200], "purgefissionproduct": [163, 200], "regionlabel": [163, 200], "updatebasenuclid": [163, 201], "getmicrox": [163, 198, 201], "getx": [163, 164, 166, 201], "buildnormalizedscattercolumn": [163, 201], "tran": [163, 201, 475], "late": 164, "1960": [164, 479], "recogn": [164, 280, 479], "establish": [164, 312, 400, 401, 450, 479], "committe": 164, "coordin": [164, 174, 198, 213, 218, 242, 249, 282, 285, 290, 308, 315, 316, 323, 324, 327, 328, 332, 334, 337, 338, 339, 351, 352, 396, 405, 407, 416, 438, 439, 459, 468, 488, 493], "1977": 164, "iv": [164, 168, 169, 171, 172, 176, 177, 178, 329], "partisn": [164, 501], "multigroup": [164, 166, 168, 169, 170, 172, 175, 177, 178, 199, 212, 240, 249, 253, 285, 305, 308, 327, 328, 411, 465, 497, 501], "grupx": 164, "brkox": 164, "bondarenko": 164, "russian": 164, "delai": [164, 166, 168, 183, 235, 238, 268, 497, 499, 501], "precursor": [164, 168, 235, 268, 499, 501], "isogx": 164, "ndxsrf": 164, "znatdn": 164, "subzon": 164, "sncon": 164, "ordin": [164, 413], "surfac": [164, 174, 189, 497], "scalar": [164, 328, 413, 491, 497, 503], "atflux": [164, 169, 177], "adjoint": [164, 174, 177, 192, 235, 249, 285, 305, 308, 327, 328, 411, 497, 499, 501], "rcurnt": 164, "acurnt": 164, "raflux": 164, "angular": [164, 307, 340], "aaflux": 164, "avearg": 164, "densitii": 164, "interv": [164, 176, 407, 425], "dougla": 164, "dell": 164, "procedur": [164, 327], "6941": 164, "lo": 164, "alamo": 164, "septemb": 164, "5369298": 164, "ascii": [164, 165, 168, 171, 174, 175, 176, 177, 178, 180, 181, 190, 192, 193, 218, 290, 357, 396, 416, 481, 492, 501], "confus": [164, 165, 291, 305, 308, 330, 450, 482, 501], "rw": [164, 165], "talk": [164, 165, 501], "hide": [164, 212, 298, 305, 354, 442, 450, 481], "record": [164, 165, 166, 167, 171, 173, 176, 363, 365, 414, 432], "byte": [164, 165, 308, 403, 406, 432], "fortran": [164, 165, 407, 479], "unformat": 164, "sequenti": [164, 165, 437, 444], "gcc": [164, 486], "gnu": [164, 378], "onlinedoc": 164, "gfortran": 164, "pyne": 164, "terrapow": [164, 238, 408, 441, 446, 451, 478, 479, 480, 482, 484, 492, 507], "author": [164, 414], "era": 164, "inspir": 164, "prof": 164, "jame": 164, "paul": 164, "hollowai": 164, "ccccutil": 164, "2001": 164, "test_cccc": [164, 179], "cccciostreamtest": [164, 179, 180], "ccccbinaryrecordtest": [164, 179, 180], "ccccasciirecordtest": [164, 179, 180], "test_compx": [164, 179], "testcompx": [164, 179, 181], "test_dif3d": [164, 179], "testdif3dsimplehexz": [164, 179, 182], "testdif3demptyrecord": [164, 179, 182], "test_dlayx": [164, 179], "dlayxstest": [164, 179, 183], "test_fixsrc": [164, 179], "testfixsrc": [164, 179, 184], "test_gamiso": [164, 179], "testgamiso": [164, 179, 185], "test_geodst": [164, 179], "testgeodst": [164, 179, 186, 191], "test_isotx": [164, 179], "testisotx": [164, 179, 187], "test_label": [164, 179, 350, 357], "testlabel": [164, 179, 188], "test_nhflux": [164, 179], "testnhflux": [164, 179, 189], "testnhfluxvari": [164, 179, 189], "test_pmatrx": [164, 179], "testpmatrxnuclid": [164, 179, 190], "testpmatrx": [164, 179, 190], "testproductionmatrix_fromwritten": [164, 179, 190], "testproductionmatrix_fromwrittenascii": [164, 179, 190], "test_pwdint": [164, 179], "test_rtflux": [164, 179], "testrtflux": [164, 179, 192], "test_rzflux": [164, 179], "testrzflux": [164, 179, 193], "binaryfilesequ": [164, 179, 193], "maxsiz": [164, 165], "rwint": [164, 165], "rwbool": [164, 165], "rwfloat": [164, 165], "rwdoubl": [164, 165], "rwstring": [164, 165], "rwlist": [164, 165], "rwmatrix": [164, 165], "rwdoublematrix": [164, 165], "rwintmatrix": [164, 165], "rwimplicitlytypedmap": [164, 165], "rwlong": [164, 165], "readwrit": [164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178], "createrecord": [164, 165], "initmetadata": [164, 166], "allocatex": [164, 166], "makescatteringmatric": [164, 166], "generateaveragedelayedneutronconst": [164, 168], "fluxmoment": [164, 174], "partialcurrentshex": [164, 174], "partialcurrentshex_ext": [164, 174], "partialcurrentsz": [164, 174], "groupflux": [164, 177, 178], "getenergygroupindex": [164, 177], "no_iter": [164, 178], "diverg": [164, 178, 219, 380], "ijklmn": 165, "implicit": [165, 441, 492], "hasrecordboundari": 165, "signific": [165, 225, 285, 305, 399, 479], "enforc": [165, 280, 331, 344, 352, 371, 378, 444, 484, 501], "tradeoff": [165, 501], "comprehend": 165, "885": [165, 482], "seemingli": 165, "odd": [165, 174, 328, 334, 450], "precis": [165, 327, 328, 344, 437, 481, 482, 492, 501], "containedtyp": [165, 364, 371], "strlength": 165, "fortran77": 165, "roughli": [165, 308, 466, 492], "front": [165, 330, 501], "newlin": [165, 203, 414], "streamwithdatastructur": 165, "filemod": [165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178], "io": [165, 308, 395, 437, 441, 479], "wb": [165, 169], "boilerpl": 165, "nintj": 165, "nblok": 165, "bandwidth": 165, "jl": 165, "ju": 165, "WITH": 165, "THE": [165, 166], "AND": [165, 173, 328], "min0": 165, "jup": 165, "matric": [165, 166, 181, 196, 199, 201, 258, 471], "spars": [165, 166, 181, 201, 377], "jh": 165, "jmax": 165, "band": 165, "derstin": [166, 340], "solv": [166, 168, 226, 249, 327, 338, 344, 405, 407, 475, 480, 488, 492, 501, 507], "diffus": [166, 249, 258, 315, 327, 478, 479, 481, 482], "april": 166, "1984": [166, 340], "illinoi": 166, "unt": 166, "ark": 166, "67531": 166, "metadc283553": 166, "octob": [166, 174], "north": [166, 328], "texa": 166, "credit": 166, "govern": [166, 479, 492], "depart": 166, "IF": [166, 173, 365], "FOR": [166, 173], "OF": [166, 479, 492], "decreas": [166, 316, 407, 493], "r0": 166, "macro": [166, 199, 258, 285, 493], "higherorderscatt": 166, "p1": [166, 407], "p5": 166, "compxs2": 166, "watt": [166, 176, 285, 499], "powerconvmult": 166, "integr": [166, 285, 302, 308, 327, 445, 479, 497, 499, 504], "absorpt": [166, 199, 327, 497, 499], "similari": 166, "lib1": [166, 168, 170, 172, 175, 200], "lib2": [166, 168, 170, 172, 175, 200], "verbos": [166, 172, 199, 365, 392, 395, 414, 451, 491, 501, 503], "disregard": [166, 285], "regionnumb": 166, "filewidechi": 166, "reg00": 166, "reg01": 166, "reg02": 166, "regnn": 166, "r10": 166, "01147095": 166, "01006284": 166, "0065597": 166, "00660079": 166, "005587": 166, "08920149": 166, "13035864": 166, "16192732": 166, "sigma_": [166, 199, 285], "rem": 166, "cdot": [166, 305], "reconstruct": [166, 189, 194, 201, 249, 497, 501, 503], "s_": 166, "rightarrow": 166, "segment": [166, 307, 478, 501], "xscatu_j": 166, "lbrace": [166, 504], "vert": 166, "nup": 166, "rbrace": [166, 504], "xscatj_j": 166, "xscatd_j": 166, "j_ndn": 166, "ndn": 166, "upscatt": 166, "downscatt": [166, 240], "scipi": [166, 181, 282, 407], "csc_matrix": [166, 181], "five": [167, 405], "emiss": [168, 183], "spectra": 168, "numenergygroup": 168, "numprecursorgroup": 168, "kinet": [168, 183, 211, 344, 497], "precursordecayconst": 168, "character": [168, 253, 339, 340, 478], "delayemissionspectrum": [168, 183], "famili": [168, 285, 398, 501], "pxg": 168, "spectrum": [168, 183, 237, 238, 249, 285, 411, 475, 497], "aka": 168, "chi": [168, 199, 234, 258, 497], "delayneutronsperfiss": 168, "nubar": 168, "ordereddict": [168, 287, 288, 289, 290, 291, 292, 432], "contribut": [168, 199, 327, 443, 480, 507], "nuclidefamili": 168, "numfamili": 168, "numnuclid": 168, "neutronenergyupperbound": 168, "nuclidecontributionfract": 168, "perturbationtheori": 168, "perturbationtheoryinterfac": 168, "calculatebeta": 168, "triangular": 169, "photon": [169, 199, 249, 482], "fixsrcarrai": 169, "intent": [169, 282, 479], "preexist": 169, "v3": [170, 447], "microscop": [170, 172, 196, 199, 201, 237, 249, 258, 285, 328, 471, 489], "gamsor": [170, 175], "smith": [170, 174, 414], "lee": [170, 175], "hill": 170, "1343095": 170, "nuc1": [170, 172, 175], "nuc2": [170, 172, 175], "dummynuclid": [170, 172, 175], "coars": [171, 182, 219], "geo": 171, "xmesh": 171, "zmesh": 171, "geodst2": 171, "rememb": [171, 218, 308, 345, 437, 447, 450, 501], "analog": [171, 178, 203, 321, 444, 503], "istox": [171, 178, 201], "stand": 172, "dragon": 172, "mylib": [172, 199], "fis5": 172, "micro": [172, 199, 258, 470, 471], "scat": 172, "1st": 172, "elast": [172, 196, 199], "captureenergi": 172, "isotxsmetadata": 172, "ecapt": 172, "cacluat": 172, "closer": 172, "shown": [172, 281, 411, 447, 479, 492, 501], "getnuclidefunc": [172, 175], "semi": 172, "t2": 172, "transx": 172, "hyper": 172, "isotsx": 172, "variant": [173, 174, 188, 204, 482], "transvers": 173, "nhts1": 173, "gt": [173, 486, 490, 491, 493], "OR": [173, 479, 492], "distanc": [173, 218, 285, 304, 314, 334, 337, 338, 339, 405, 488, 492, 501], "ngts2": 173, "nset": [173, 210, 436], "nalia": 173, "rod": [173, 282, 285, 286, 314, 327, 479, 482, 492, 496, 499], "nbank": 173, "bank": 173, "channel": [173, 497, 501], "llchn": 173, "llrod": 173, "mmesh": 173, "nvari": 173, "maxbrn": 173, "maxord": 173, "labeldata": 173, "labelstream": 173, "moment": [174, 177, 189, 319, 485], "nhfluxdata": 174, "nfluxstream": 174, "numdatasetstoread": 174, "reader": [174, 177, 180, 181, 308, 365, 398, 437, 449, 450, 482], "v11": 174, "incomingpointerstoallassembli": 174, "geodstcoordmap": 174, "externalcurrentpoint": 174, "boundari": [174, 182, 249, 282, 290, 315, 327, 328, 331, 332, 333, 336, 339, 360, 437, 492, 499, 501], "outgoingpcsymsecpoint": 174, "outpgo": 174, "sector": 174, "ingoingpcsymsecpoint": 174, "ingo": 174, "fluxmomentsal": 174, "jth": 174, "planar": [174, 499, 501], "pariti": 174, "partialcurrentshexal": 174, "partialcurrentshex_extal": 174, "adjac": [174, 189, 492], "partialcurrentszal": 174, "upward": [174, 482], "downward": 174, "rebu": [174, 479, 492], "2014": [174, 438], "palmiotti": 174, "lewi": 174, "carrico": 174, "variat": [174, 256, 280, 285, 450], "anisotrop": 174, "multidimension": 174, "il": 174, "shemon": 174, "1127298": 174, "anlpub": 174, "04": [174, 244, 298, 444, 457, 466, 473, 474, 476, 479, 486, 490], "78313": 174, "naflux": 174, "setter": [174, 327, 341, 344, 358, 371], "radial": [174, 249, 281, 282, 286, 307, 315, 316, 327, 328, 330, 332, 340, 486, 488, 491, 493, 496, 497, 499, 500], "conflict": [174, 389, 479, 480, 488, 501, 507], "_readwrit": 174, "sassi": [174, 328, 497], "adjointflag": [174, 177], "variantflag": 174, "mc23": 175, "changho": 175, "jung": 175, "yeon": 175, "sang": 175, "yang": 175, "sik": 175, "2018": [175, 408], "1483949": 175, "xslib": [175, 450], "pwr": 176, "pwdint2": 176, "rtflux2": 177, "adjointflux": 177, "ng": [177, 251, 258, 308, 497], "fd": [177, 285], "rzflux2": 178, "itp": 178, "test_initwithfilemod": [179, 180], "test_writeandreadsimpleintegerrecord": [179, 180], "test_writeandreadsimplefloatrecord": [179, 180], "test_writeandreadsimplestringrecord": [179, 180], "test_notreadinganentirerecordraisesexcept": [179, 180], "test_readingbeyondrecordraisesexcept": [179, 180], "binarywritepath": [179, 181], "asciiwritepath": [179, 181], "test_librarydata": [179, 181], "test_regionprimaryx": [179, 181], "test_totalscattermatrix": [179, 181], "test_binaryrw": [179, 181], "test_asciirw": [179, 181], "test_mergecompxslibrari": [179, 181], "test_getcompxsfilenam": [179, 181], "test__rwfileid": [179, 182], "test__rwfile1drecord": [179, 182], "test__rw2drecord": [179, 182], "test__rw3drecord": [179, 182], "test__rw4drecord": [179, 182], "test__rw5drecord": [179, 182], "test_writebinari": [179, 182, 185, 187], "test_empty4and5record": [179, 182], "test_decayconst": [179, 183], "test_chi_delai": [179, 183], "test_chi_delaysumsto1": [179, 183], "test_nudelai": [179, 183], "test_endfvii1decayconst": [179, 183], "test_endfvii1neutronsperfiss": [179, 183], "test_compar": [179, 183, 185], "test_writebinary_mcc3": [179, 183], "test_nuclid": [179, 183, 293, 296], "test_avg": [179, 183], "test_writereadbinaryloop": [179, 184], "test_adddummynuclidestolibrari": [179, 185], "test_readgeodst": [179, 186, 191], "test_writegeodst": [179, 186, 191], "test_isotxsgeneraldata": [179, 187], "test_isotxsdetaileddata": [179, 187], "test_getscatteringweight": [179, 187], "test_getnuclid": [179, 187, 350, 354], "test_n2nisreactionbas": [179, 187], "test_getscatterweight": [179, 187], "test_getisotxsfilenam": [179, 187], "test_getgamisofilenam": [179, 187], "test_mergemccv2filesremovesthefilewidechi": [179, 187], "test_readlabelsbinari": [179, 188], "test_writelabelsascii": [179, 188], "test_fc": [179, 189], "test_fluxmo": [179, 189], "test_xypartialcurr": [179, 189], "test_zpartialcurr": [179, 189], "test_writ": [179, 189, 378, 392], "test_pmatrxnuclidedataaa": [179, 190], "test_pmatrxnuclidedataab": [179, 190], "test_nuclidedataisdiffer": [179, 190], "test_getpmatrxfilenam": [179, 190], "test_pmatrxgammaenergi": [179, 190], "test_pmatrxneutronenergi": [179, 190], "test_pmatrxnuclidenam": [179, 190], "test_pmatrxdoesnthavedoseconversionfactor": [179, 190], "test_writtenisidenticaltoorigin": [179, 190], "test_readrtflux": [179, 192], "test_writertflux": [179, 192], "test_rwascii": [179, 192, 193], "test_adjoint": [179, 192], "test_readrzflux": [179, 193], "test_writerzflux": [179, 193], "vector": [181, 199, 201, 244, 258, 308, 328, 339, 399, 481, 496, 497, 499, 503], "indptr": 181, "correspons": 181, "verifi": [181, 182, 183, 189, 256, 271, 280, 308, 321, 325, 352, 353, 360, 373, 378, 466, 473, 474, 486, 491, 501], "optimum": 182, "overrelax": 182, "rebal": 182, "delayx": 183, "nu": [183, 497], "nndc": 183, "bnl": 183, "robert": 183, "keepin": 183, "comment": [183, 443, 445, 451, 492, 493, 501], "subtract": [189, 285, 302, 338, 352, 353, 498, 501], "xy": [189, 249, 411, 439, 496, 497, 501], "fn1": 193, "fn2": 193, "bytewis": 193, "assist": [194, 378, 479, 480, 481, 491, 507], "rewrit": 194, "scaffold": 194, "overal": [194, 449, 450, 479, 486], "_metadata": 194, "nucld": 194, "test_generatetotalscatteringmatrix": [195, 196], "test_generatetotalscatteringmatrixwithmissingdata": [195, 196], "test_plotnucx": [195, 196], "test_createmacrosfrommicro": [195, 196], "test_collapsecrosssect": [195, 196], "getvolum": [195, 196, 281, 282, 285, 302, 305, 308, 463, 486, 488], "getnuclidenumberdens": [195, 196, 199, 281, 302, 305, 308], "paramcollectiontyp": [195, 196, 281, 282, 285, 302, 303, 304, 305, 307, 308, 328, 329, 345, 347, 348, 350, 354], "setnumberdens": [195, 196, 281, 302, 305, 308, 479, 486], "testfilenam": [195, 197], "test_canpickleandunpickleisotx": [195, 197], "test_canpickleandunpicklegamiso": [195, 197], "test_canpickleandunpicklepmatrx": [195, 197], "test_comparework": [195, 197], "test_comparedifferentcomponentsofanxslibrari": [195, 197], "test_mergefailswithnonisotxsfil": [195, 197], "test_isotxslibraryattribut": [195, 197], "test_gamisolibraryattribut": [195, 197], "test_pmatrxlibraryattribut": [195, 197], "test_mergexslibrarieswithdifferentdatawork": [195, 197], "test_canwriteisotxsfromcombinedxslibrari": [195, 197], "test_canwritegamisofromcombinedxslibrari": [195, 197], "test_canwritepmatrxfromcombinedxslibrari": [195, 197], "test_getisotxsfileswithoutlibrarysuffix": [195, 197], "test_getisotxsfileswithlibrarysuffix": [195, 197], "assert_contains_onli": [195, 197], "geterrortyp": [195, 197], "getreadfunc": [195, 197], "getwritefunc": [195, 197], "getlibaapath": [195, 197], "getlibabpath": [195, 197], "getlibaa_abpath": [195, 197], "getliblumpedpath": [195, 197], "test_cannotmergexslibwithsamenuclidenam": [195, 197], "test_cannotmergexslibxwithdifferentgroupstructur": [195, 197], "test_mergeemptyxslibwithotheressentiallyclonestheoth": [195, 197], "test_mergetwoxslibfil": [195, 197], "test_canremoveisotop": [195, 197], "test_cannotmergexslibswithdifferentgammagroupstructur": [195, 197], "test_mergeallxslibfil": [195, 197], "test_nuclide_createfromlabelfailsonbadnam": [195, 198], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict": [195, 198], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclid": [195, 198], "test_nuclide_newlabelsdontcausewarn": [195, 198], "test_nuclide_oldlabelscausewarn": [195, 198], "test_nuclide_nuclidebasemethodsshouldnotfail": [195, 198], "test_nuclide_isoaadetail": [195, 198], "test_nuclide_2dxsarrangementiscorrect": [195, 198], "test_nuclide_scatterxsarrangementiscorrect": [195, 198], "test_getmicrox": [195, 198], "test_getx": [195, 198], "inelast": [196, 199, 471], "collaps": [196, 199, 242], "barn": [196, 249, 308, 470, 501], "blockparametercollect": [196, 285, 341, 345], "shouldbether": 197, "shouldnotbether": 197, "nicer": 197, "microscopicxscollect": 199, "microlib": 199, "u235aa": [199, 200], "macrocollect": 199, "blockswithmacro": 199, "nuclidecollect": 199, "displai": [199, 308, 411, 437, 478], "crosssect": 199, "extrem": [199, 408, 450, 491], "efficaci": 199, "survei": 199, "bar": [199, 313, 403, 411, 413, 415, 422, 439, 449, 465], "sigma": [199, 285, 340, 497, 499], "sum_g": 199, "sigma_g": 199, "phi_g": [199, 285], "onegroupx": 199, "relativetoler": [199, 412], "overlap": [199, 234, 285, 308, 314, 327, 352, 475, 479], "attributestoignor": 199, "buildscattermatrix": [199, 258], "buildonlycool": [199, 258], "minimumnuclidedens": [199, 258, 482, 501], "creation": [199, 238, 247, 263, 308, 327, 341, 345, 358, 359, 420, 422, 449, 479, 482], "microlibrari": 199, "blocklist": [199, 237, 249, 253, 281, 286, 288, 328, 473], "libtyp": [199, 258], "gammax": [199, 258], "isotxslib": 199, "4b": 199, "hmg4c": 199, "chi_g": 199, "sum_": [199, 285, 308, 504], "chi_": 199, "n_n": 199, "nu_": 199, "sum_n": 199, "microsuffix": 199, "deposit": [199, 285, 352, 497], "obtain": [199, 237, 285, 308, 315, 328, 345, 395, 405, 479, 492, 497, 504, 505], "bn": [199, 244, 305, 308, 399, 486, 496, 497, 498], "getmicrosuffix": [199, 281, 285, 302, 305, 308], "energydepositionconst": 199, "e_": 199, "generation_fiss": 199, "kappa_f": 199, "sigma_f": 199, "fissionenergyfactor": 199, "joul": [199, 285], "kappa_c": 199, "sigma_c": 199, "getnumberdens": [199, 241, 244, 281, 302, 305, 308, 457, 486], "captureenergyfactor": 199, "constantnam": 199, "multconst": 199, "multlib": 199, "macrogroupconst": 199, "attributenam": 200, "veloc": [200, 253, 488, 497], "nuclabel": 200, "xslibrarysuffix": [200, 253, 254], "xslibfilenam": 200, "doppler": [200, 225, 237, 253, 328, 484, 497, 499, 504], "isoaa": 200, "isoba": 200, "isoca": 200, "n1": 200, "isoab": 200, "n2": [200, 395], "isoda": 200, "mergegammalib": 200, "alternatedirectori": 200, "alphabet": [200, 237, 328, 356, 362, 484], "referencedummynuclid": 200, "_xslibrari": 200, "libisotx": 200, "dose": [200, 211, 249, 478, 479, 497, 499, 501], "scattermatrixkei": [200, 201], "elasticscatt": 200, "_buildscatterweight": 200, "purg": 200, "pu39aa": 201, "xscollectionkei": 201, "containerkei": 201, "homogregion": 201, "scatterweight": 201, "fromg": 201, "gx1": 201, "cannib": 201, "newli": [201, 235, 280, 365, 394, 397, 501], "scattermatrix": 201, "scattertypelabel": 201, "scattermatrix1": 201, "scattermatrix2": 201, "graphic": [201, 397, 478, 480, 488, 501, 507], "chosen": [202, 308, 444, 488, 501], "introduc": [202, 235, 341, 390, 446, 482, 493, 499], "test_operatorsnapshot": [202, 208], "testoperatorsnapshot": [202, 208, 209], "testoperatorsnapshotsset": [202, 208, 209], "test_oper": [202, 208], "interfacea": [202, 208, 210], "interfaceb": [202, 208, 210], "interfacec": [202, 208, 210], "operatortest": [202, 208, 210], "testcreateoper": [202, 208, 210], "cyclessettingstest": [202, 208, 210, 395, 415, 436], "testinterfaceandeventhead": [202, 208, 210], "maxburnstep": [202, 203], "steplength": [202, 203, 395, 506], "cyclelength": [202, 203, 341, 395, 436, 449, 491, 492, 493, 501, 506], "powerfract": [202, 203, 395, 436, 501], "availabilityfactor": [202, 203, 395, 436, 492, 493, 501, 506], "cyclenam": [202, 203, 395], "ateol": [202, 203, 207], "initializeinterfac": [202, 203], "printinterfacesummari": [202, 203], "interactallinit": [202, 203], "interactallbol": [202, 203, 444], "interactallboc": [202, 203], "interactalleverynod": [202, 203], "interactalleoc": [202, 203], "interactalleol": [202, 203], "interactallerror": [202, 203], "removeallinterfac": [202, 203], "removeinterfac": [202, 203], "interfaceisact": [202, 203], "getactiveinterfac": [202, 203], "reattach": [202, 203], "snapshotrequest": [202, 203], "setstatetodefault": [202, 203, 207], "couplingisact": [202, 203, 210], "workerquit": [202, 204], "collapseallstderr": [202, 204], "plant": [203, 478, 479, 491, 501, 506], "orchestr": 203, "piec": [203, 308, 444, 486, 489, 501], "flow": [203, 211, 214, 235, 253, 275, 285, 344, 444, 479, 488, 496, 497, 499, 501], "narr": [203, 452, 477, 494], "topic": [203, 437, 449], "tier": 203, "intra": [203, 395], "durat": [203, 497, 501], "outag": [203, 214, 215, 218, 222, 413, 478, 501, 506], "oserror": 203, "unabl": 203, "ncycl": [203, 210, 395, 436, 492, 493, 501], "mainoper": [203, 444], "interactionnam": 203, "statepointindex": 203, "grep": [203, 491], "leverag": [203, 479], "banner": 203, "excludedinterfacenam": 203, "tn": [203, 237], "couplediter": [203, 499], "lie": [203, 334], "reverseateol": 203, "question": [203, 235, 308, 334, 339, 372, 373, 410, 411, 413, 437, 443, 479, 490, 501], "ephemer": [203, 249], "interfacenam": 203, "wasn": 203, "___": [203, 373, 480, 486, 491, 507], "simpler": [203, 442], "touch": [203, 218, 451, 484], "interactst": 203, "dictat": [203, 213, 328, 446], "activeinterfac": 203, "opportun": [203, 328, 449], "weakref": 203, "network": [203, 213, 308, 478, 501], "updatemassfract": 203, "rerout": 203, "didn": 203, "evolv": [203, 479], "smart": [204, 321, 406, 437], "optim": [204, 219, 253, 285, 307, 319, 328, 479, 491, 501], "_mainoper": 204, "rank": [204, 447, 501], "instruct": [204, 447, 451, 480, 507], "understand": [204, 337, 344, 442, 446, 447, 449, 451, 479], "devis": 204, "stderr": [204, 363, 503], "arrang": [204, 292, 332, 444, 478, 479, 501], "deprecationwarn": 206, "disappear": 206, "2025": 206, "rx": [207, 251, 371, 475], "behav": [207, 314, 328, 337, 343, 345, 407, 501], "chrolog": 207, "test_ateol": [208, 209], "test_setstatetodefault": [208, 209, 210], "test_mainoper": [208, 209], "test_createinterfac": [208, 209], "test_createinterfacesdis": [208, 209], "test_getoperatorclassfromset": [208, 209], "test_operatordata": [208, 210], "test_orderedinterfac": [208, 210], "test_addinterfacesubclasscollis": [208, 210], "test_interfaceisact": [208, 210], "test_getactiveinterfac": [208, 210], "test_loadstateerror": [208, 210], "test_snapshotrequest": [208, 210], "test_createoper": [208, 210], "test_getsteplength": [208, 210, 415, 436], "test_couplingisact": [208, 210], "test_performtightcoupling_inact": [208, 210], "test_performtightcoupling_skip": [208, 210], "test_performtightcoupling_notconverg": [208, 210], "test_performtightcoupling_writedb": [208, 210], "test_performtightcoupling_nowritedb": [208, 210], "dbwriteforcoupl": [208, 210], "test_computetightcouplingconverg": [208, 210], "detailedcyclesset": [208, 210, 415, 436], "powerfractionssolut": [208, 210], "cyclenamessolut": [208, 210], "availabilityfactorssolut": [208, 210], "steplengthssolut": [208, 210], "cyclelengthssolut": [208, 210], "burnstepssolut": [208, 210], "maxburnstepssolut": [208, 210], "test_getpowerfract": [208, 210, 415, 436], "test_getcyclenam": [208, 210, 415, 436], "test_getavailabilityfactor": [208, 210, 415, 436], "test_getcyclelength": [208, 210, 415, 436], "test_getburnstep": [208, 210, 415, 436], "test_getmaxburnstep": [208, 210, 415, 436], "test_expandcycleandtimenodeargs_empti": [208, 210], "test_expandcycleandtimenodeargs_cycl": [208, 210], "test_expandcycleandtimenodeargs_everynod": [208, 210], "test_expandcycleandtimenodeargs_coupl": [208, 210], "interactal": 210, "loadtestreactor": [210, 281, 350, 359, 457, 458, 459, 466, 474], "fakedirlist": 210, "fakecopi": 210, "conf_tight_coupl": 210, "_performtightcoupl": 210, "conf_cycles_skip_tight_coupling_interact": 210, "address": [210, 225, 286, 341, 445], "accour": 210, "WILL": [210, 319], "writedb": 210, "greater": [210, 302, 405], "prescrib": [210, 312, 439, 493, 504], "previterkeff": 210, "curriterkeff": 210, "nmetadata": [210, 436], "1000000000": [210, 436, 492, 493], "r4": [210, 436], "cyclenodeinfo": 210, "vast": 211, "fairli": [211, 213, 493, 501], "ve": [211, 348, 479, 486, 488, 501], "reprocess": [211, 478], "accid": [211, 225, 479], "drop": [211, 308, 371, 395, 406, 414, 449], "econom": [211, 444, 479, 506], "cost": [211, 450, 479, 506], "estim": [211, 219, 497, 498], "stretch": 211, "supersourceterm": 211, "magwoodsbrain": 211, "propos": [211, 373], "ticket": [211, 443, 450], "began": 211, "matur": [211, 489], "assemblyrotationalgorithm": [211, 214, 222, 501], "bureducingassemblyrot": [211, 214, 215], "simpleassemblyrot": [211, 214, 215, 501], "fuelhandlerfactori": [211, 214, 486], "fuelhandlerinterfac": [211, 214, 218, 223, 253, 280], "fuelhandl": [211, 214, 215, 216, 217, 222, 280, 328, 380, 413, 444, 466, 474, 482, 486, 492, 501], "hexassemblyfuelmgmtutil": [211, 214], "getoptimalassemblyorient": [211, 214, 219], "buildringschedul": [211, 214, 219], "buildconvergentringschedul": [211, 214, 219], "getfuelcycleset": [211, 214, 220], "getfuelcyclesettingvalid": [211, 214, 220], "fuelperformanceopt": [211, 225, 226], "fuelperformanceexecut": [211, 225, 226], "getfuelperformanceparameterdefinit": [211, 225, 227], "fuelperformanceplugin": [211, 225, 228, 232], "definevalid": [211, 225, 229, 272, 276, 488], "applyfueldisplac": [211, 225, 234], "gasconductivitycorrect": [211, 225, 234], "everynod": [211, 235, 253, 263, 444, 501], "firstcouplediter": [211, 235, 256, 263, 501], "fissionproductmodel": [211, 235, 285, 305, 308, 486], "latticephys": [211, 235, 238], "const": [211, 235, 272], "crosssectiongroupmanag": [211, 223, 235, 238, 242, 263, 486], "getxstypenumberfromlabel": [211, 235, 237], "getxstypelabelfromnumb": [211, 235, 237], "blockcollect": [211, 235, 237, 482], "medianblockcollect": [211, 235, 237], "averageblockcollect": [211, 235, 237], "getblocknuclidetemperatureavgterm": [211, 235, 237], "cylindricalcomponentsaverageblockcollect": [211, 235, 237, 482], "slabcomponentsaverageblockcollect": [211, 235, 237], "fluxweightedaverageblockcollect": [211, 235, 237], "blockcollectionfactori": [211, 235, 237], "crosssectionset": [211, 235], "xsgeometrytyp": [211, 235, 238], "xsset": [211, 235, 237, 238, 501], "xsmodelingopt": [211, 235, 238, 264], "serializexsset": [211, 235, 238], "xssettingdef": [211, 235, 238], "xssettingsvalid": [211, 235, 238], "diffisotx": [211, 235], "compareisotxslibrari": [211, 235, 239], "energygroup": [211, 235, 470], "getfastfluxgroupcutoff": [211, 235, 240], "getgroupstructur": [211, 235, 240, 470], "getgroupstructuretyp": [211, 235, 240], "group_structur": [211, 235, 240], "macroxsgenerationinterfac": [211, 235, 267], "macroxsgener": [211, 235, 258], "getneutronicsparameterdefinit": [211, 235, 259], "insertneutronicsreport": [211, 235, 260], "insertneutronicsbolcont": [211, 235, 260], "neutronicsplot": [211, 235, 260, 449], "insertinitialcorefuelassem": [211, 235, 260], "generatelineplot": [211, 235, 260], "pd_plot": [211, 235, 260], "getneutronicssettingvalid": [211, 235, 261], "test_execut": [211, 225, 230, 270], "mockparam": [211, 270, 271], "mockcor": [211, 248, 250, 251, 270, 271], "testexecutionopt": [211, 270, 271], "testexecut": [211, 270, 271], "getparameterdefinit": [211, 272, 274], "thermalhydraulicsplugin": [211, 272, 275, 278, 484], "fromuserset": [211, 213, 225, 226, 248, 249], "fromreactor": [211, 213, 225, 226, 248, 249, 281, 349, 395, 396], "resolvederivedopt": [211, 213], "setrundirfromcasetitl": [211, 213], "dpa": [212, 249, 251, 282, 413, 449, 482, 496, 497, 499, 501], "executor": 213, "pathwai": [213, 475], "inputfil": 213, "stdin": 213, "outputfil": [213, 408], "extrainputfil": 213, "sourcenam": 213, "destnam": 213, "brought": [213, 218, 280, 285], "rundir": [213, 271], "transit": [213, 331, 446, 479, 485, 488], "extraoutputfil": 213, "executablepath": [213, 408], "workingdir": 213, "savephysicsfil": [213, 249, 482, 501], "dedic": [213, 286], "copyoutput": [213, 482], "applyresultstoreactor": 213, "deliber": [213, 249, 280, 341, 437], "paralleliz": 213, "maxim": [213, 290, 414], "reusabl": [213, 290, 450], "transform": [213, 249, 315, 338, 339, 395, 406, 458, 475], "executeropt": [213, 251], "mine": 214, "dispos": 214, "ex": [214, 292, 329, 347, 388, 408, 421, 444, 481, 484, 501], "chemistri": 214, "handler": [214, 217, 218, 223, 280, 486, 492, 501], "hookspec": [214, 280, 446], "inspect": [214, 228, 235, 275, 280, 373, 484, 491], "test_assemblyrotationalgorithm": [214, 221], "testfuelhandlermgmttool": [214, 221, 222], "test_fuelhandl": [214, 221], "fuelhandlertesthelp": [214, 221, 222, 223], "mocklatticephysicsinterfac": [214, 221, 223], "mockxsgm": [214, 221, 223], "testfuelhandl": [214, 221, 223], "testfuelplugin": [214, 221, 223], "addsomedetailassembli": [214, 221, 223], "test_hexassemblyfuelmgmtutil": [214, 221], "testhexassemmgmttool": [214, 221, 224], "managefuel": [214, 217, 223], "makeshufflereport": [214, 217, 218], "chooseswap": [214, 218, 378, 380, 492, 501], "prepcor": [214, 218], "findassembli": [214, 218, 223, 486, 501], "isassemblyinazon": [214, 218], "swapassembli": [214, 218, 466, 486], "dischargeswap": [214, 218, 492], "swapcascad": [214, 218], "repeatshufflepattern": [214, 218], "readmov": [214, 217, 218], "trackchain": [214, 218], "processmovelist": [214, 218], "dorepeatshuffl": [214, 218, 328], "prepshufflemap": [214, 218], "makeshufflearrow": [214, 218], "rotat": [215, 218, 219, 222, 249, 281, 282, 285, 304, 337, 351, 352, 405, 407, 423, 475, 484, 496, 497, 499, 501], "fh": [215, 223, 486], "lowest": [215, 219, 240, 282, 328, 395, 466, 486, 501], "orient": [215, 219, 285, 312, 352, 396, 405, 423, 450, 467, 478, 486, 496, 497, 499], "stationari": [215, 223, 330, 501], "obvious": [215, 280, 347, 451], "isotrop": 215, "txt": [217, 218, 223, 328, 501], "fuelhandlernam": [218, 492, 501], "decis": [218, 242, 338, 449], "supervisori": 218, "movelist": [218, 484], "shufflefactor": 218, "aux": 218, "targetr": [218, 328], "compareto": [218, 486, 501], "forcesid": 218, "mandatoryloc": 218, "zonelist": 218, "excludedloc": 218, "minparam": 218, "minval": [218, 316, 407], "maxparam": 218, "maxval": [218, 308, 316], "findmani": [218, 223], "coord": [218, 281, 282, 285, 359, 484, 486, 488], "exacttyp": [218, 328], "acceptfirstcandidat": 218, "blocklevelmax": [218, 486], "findfromsfp": 218, "maxnumassem": 218, "circularringflag": 218, "criterion": [218, 466], "had": [218, 341, 402, 403, 437, 482, 501], "bob": [218, 414, 447], "ye": [218, 444, 450, 486], "timetolimit": [218, 496, 497], "pick": [218, 328, 413, 442, 479, 486, 501], "assembi": [218, 292], "ignit": [218, 281, 285, 330, 499, 501], "earliest": 218, "maxbu": 218, "candid": [218, 237, 308, 372, 466], "maxburnup": 218, "toggl": [218, 341, 501], "gotten": 218, "valuabl": [218, 451, 499], "reconsid": [218, 226], "assemlist": 218, "feed": [218, 281, 285, 328, 330, 399, 479, 499, 501, 506], "discharg": [218, 219, 328, 348, 496, 501], "goingout": 218, "inter1": 218, "inter2": 218, "goingin": 218, "art": 218, "explicitrepeatshuffl": [218, 501], "casenam": 218, "oldloc": [218, 328], "newloc": [218, 328], "enrichlist": [218, 328], "assemtyp": [218, 280, 282, 315, 328], "bottom": [218, 249, 282, 285, 321, 328, 333, 334, 338, 339, 341, 344, 351, 396, 432, 486, 488, 492, 493, 496, 497, 499, 501], "startingat": 218, "alreadydon": 218, "mont": [218, 242, 479], "carlo": [218, 242, 479], "fromloc": 218, "toloc": 218, "assemnam": [218, 328, 340], "loadnam": 218, "charg": [218, 219, 482, 496], "movingassemnam": 218, "loadchain": 218, "loadqueu": [218, 282], "loopchain": 218, "loadchargetyp": 218, "movement": [218, 328], "maneuv": [218, 411], "arrow": [218, 411, 475, 501], "currentcoord": 218, "oldcoord": 218, "aprev": 219, "peak": [219, 249, 260, 285, 327, 411, 449, 479, 482, 492, 497, 499, 501], "rot": 219, "pi": [219, 282, 285, 304, 314, 439, 459, 466, 467, 469, 475, 492], "counterclockwis": [219, 285, 328, 337, 496, 497, 499], "rotateassembli": 219, "maxringincor": 219, "charger": 219, "jumpringfrom": 219, "jumpringto": 219, "coarsefactor": 219, "combo": [219, 291, 447], "jumpr": [219, 499, 501], "scheme": [219, 451, 501], "jump": [219, 450, 499, 501], "sublist": [219, 406], "subcas": 219, "baselist": [219, 253], "enter": [219, 302, 308, 492, 496, 501], "outermost": [219, 285], "hit": [219, 321, 352, 479], "rj": 219, "rd": 219, "ringschedul": 219, "ringwidth": 219, "getnumr": [219, 281, 328], "innermost": [219, 285, 486], "conwidth": 219, "test_bureducingassemblyrot": [221, 222], "test_simpleassemblyrot": [221, 222], "test_getparammax": [221, 223], "test_findhighbu": [221, 223], "test_outag": [221, 223], "test_outageedgecas": [221, 223], "test_isassemblyinazon": [221, 223], "test_width": [221, 223], "test_findmani": [221, 223], "test_findinsfp": [221, 223], "test_findbycoord": [221, 223], "test_findwithminmax": [221, 223], "runshuffl": [221, 223], "test_repeatshuffl": [221, 223], "test_readmov": [221, 223], "test_processmovelist": [221, 223], "test_getfactorlist": [221, 223], "test_linpowbypin": [221, 223], "test_linpowbypinneutron": [221, 223], "test_linpowbypingamma": [221, 223], "test_transferstationaryblock": [221, 223], "test_transferdifferentnumberstationaryblock": [221, 223], "test_transferunalignedlocationstationaryblock": [221, 223], "test_transferincompatibleheightstationaryblock": [221, 223], "test_dischargeswap": [221, 223], "test_dischargeswapincompatiblestationaryblock": [221, 223], "test_getassembliesinr": [221, 223], "test_settingsarediscov": [221, 223], "test_buildconvergentringschedul": [221, 224], "test_buildringschedul": [221, 224], "latticephysicsinterfac": [223, 235, 238, 242, 252, 256, 501], "mockchooseswap": 223, "repeatshuffl": 223, "_transferstationaryblock": 223, "unalign": [223, 327], "unequ": 223, "hist": 223, "phenomena": [225, 505], "lwr": [225, 462, 466, 477, 478, 481, 482, 492, 493, 494, 501], "triso": [225, 289], "degrad": 225, "fcci": [225, 499], "eros": 225, "fcmi": 225, "stress": [225, 251, 478], "gase": 225, "feedback": [225, 328, 479, 482, 497, 504], "absorb": [225, 327, 492, 497, 499], "influenc": [225, 339], "bond": [225, 234, 281, 305, 322, 330, 354, 486, 492, 497, 501], "squeez": 225, "impact": [225, 242, 282, 308], "testfuelperformanceopt": [225, 230, 231], "test_fuelperformanceplugin": [225, 230], "testfuelperformanceplugin": [225, 230, 232], "test_fuelperformanceutil": [225, 230], "testfuelperformanceutil": [225, 230, 233], "subpackag": [226, 303, 378, 440, 444, 475, 488], "prep": [226, 249], "hope": [226, 259, 331, 479, 489], "parameterdefinitioncollect": [227, 259, 274, 280, 281, 282, 285, 302, 303, 304, 305, 307, 308, 327, 328, 341, 343, 344, 345, 347, 354, 358, 389], "test_fuelperformanceopt": [230, 231], "test_applyfueldisplac": [230, 233], "test_gasconductivitycorrection_morph0": [230, 233], "test_gasconductivitycorrection_morph1": [230, 233], "test_gasconductivitycorrection_morph2": [230, 233], "test_gasconductivitycorrection_morph3": [230, 233], "test_gasconductivitycorrection_morph4": [230, 233], "displacementincm": 234, "radiu": [234, 285, 302, 307, 314, 328, 340, 352, 360, 467], "conserv": [234, 249, 282, 285, 305, 309, 312, 314, 315, 321, 325, 327, 352, 353, 459, 482, 484, 488, 499, 501], "buffer": [234, 289], "prime": [234, 305, 327], "tempinc": [234, 463], "poros": [234, 489], "morphologi": 234, "pore": [234, 497], "irregular": [234, 336, 501], "conservat": 234, "bauer": 234, "spheric": [234, 307, 486], "660": 234, "maxwel": 234, "eucken": 234, "source1": 234, "pile": 234, "holland": 234, "407": 234, "source2": 234, "ondracek": 234, "schulz": 234, "1973": 234, "258": 234, "encompass": [235, 304], "temporarili": [235, 308, 413, 503], "untangl": 235, "dbload": [235, 280, 328, 394, 488], "intenum": 235, "frequenc": [235, 253, 256, 263, 479, 501], "c0n0": 235, "n0": 235, "fissionproductmodelset": [235, 241], "getfissionproductmodelsettingvalid": [235, 241, 243], "lumpedfissionproductcollect": [235, 241, 244], "fissionproductdefinitionfil": [235, 241, 244], "lumpedfissionproductfactori": [235, 241, 244], "isga": [235, 241, 244], "globalfluxinterfaceusingexecut": [235, 248, 249, 251], "globalfluxopt": [235, 248, 249, 251, 327], "globalfluxexecut": [235, 248, 249, 251], "globalfluxresultmapp": [235, 248, 249], "doseresultsmapp": [235, 248, 249], "computedpar": [235, 248, 249], "calcreactionr": [235, 248, 249, 327], "setblockneutronveloc": [235, 252, 253], "latticephysicswrit": [235, 252, 257], "test_crosssectionmanag": [235, 262], "testblockcollect": [235, 262, 263], "testblockcollectionmedian": [235, 262, 263], "testblockcollectionaverag": [235, 262, 263], "testcomponentaverag": [235, 262, 263], "testblockcollectioncomponentaverag": [235, 262, 263], "testblockcollectioncomponentaverage1dcylind": [235, 262, 263], "testblockcollectionfluxweightedaverag": [235, 262, 263], "testcrosssectiongroupmanag": [235, 262, 263], "testxsnumberconvert": [235, 262, 263], "makeblock": [235, 262, 263], "test_crosssectionset": [235, 262], "testcrosssectionset": [235, 262, 264], "testxsset": [235, 262, 264], "test_crosssectiont": [235, 262], "testcrosssectiont": [235, 262, 265], "test_energygroup": [235, 262], "testenergygroup": [235, 262, 266], "test_macroxsgenerationinterfac": [235, 262], "testmacroxsgenerationinterfac": [235, 262, 267], "test_neutronicsplugin": [235, 262], "testneutronicsplugin": [235, 262, 268], "neutronicsreactortest": [235, 262, 268], "createrepresentativeblock": [235, 237], "calcavgnuclidetemperatur": [235, 237], "getweight": [235, 237], "getcandidateblock": [235, 237], "clearrepresentativeblock": [235, 237], "xstypeispregener": [235, 237], "fluxsolutionispregener": [235, 237], "createrepresentativeblocksusingexistingblock": [235, 237], "getnextavailablexstyp": [235, 237], "makecrosssectiongroup": [235, 237], "disablebugroupupd": [235, 237], "enablebugroupupd": [235, 237], "getnuctemperatur": [235, 237], "updatenuclidetemperatur": [235, 237], "zero_dimension": [235, 238], "one_dimensional_slab": [235, 238], "one_dimensional_cylind": [235, 238], "two_dimensional_hex": [235, 238], "getstr": [235, 238], "setdefault": [235, 238, 264], "bugroup": [235, 237, 238, 285, 413, 449, 492, 493, 497, 501], "xsispregener": [235, 238], "fluxispregener": [235, 238], "buildmacro": [235, 258], "circular": [236, 285, 302, 304, 328, 481, 482, 501], "sent": [237, 280, 447, 501], "csm": 237, "_setbugroupbound": 237, "_addxsgroupsfromblock": 237, "representativeblocklist": 237, "representativeblock": [237, 253, 254, 482], "blockthatrepresentsba": 237, "xsgm": [237, 263], "xstypelabel": 237, "xtview": [237, 315, 478, 481], "xstypenumb": 237, "allnuclidesinproblem": [237, 242, 350, 354], "validblocktyp": [237, 238], "averagebycompon": [237, 238, 263], "best": [237, 249, 309, 328, 407, 443, 446, 447, 448, 449, 451, 479, 489, 497, 501], "n_i": [237, 258, 305, 308, 327], "v_i": 237, "t_i": 237, "reflector": [237, 281, 282, 315, 330, 444, 473, 486, 491, 493], "leakag": [237, 499], "median": [237, 497, 499, 501], "accur": [237, 242, 253, 282, 308, 413, 438, 458, 481], "allnucnam": 237, "denomin": 237, "trace": [237, 305, 354, 448, 493, 501], "cylindr": [237, 238, 314, 458, 482], "opinion": [237, 314], "geometr": [237, 285, 286, 305, 336, 478, 479, 481, 486, 492, 501, 502], "assumpt": [237, 253, 282, 285, 314, 319, 328, 482, 501, 505], "slab": [237, 285], "forese": 237, "xsgroup": [237, 466, 473, 474, 486, 503], "originalrepresentativeblock": 237, "remain": [237, 282, 285, 308, 315, 331, 339, 399, 441, 466, 479, 501], "unperturb": [237, 499], "blockcollectionbyxsgroup": 237, "modifiedreprblock": 237, "origxsidsfromnew": 237, "howmani": [237, 263], "excludedxstyp": 237, "unrepres": [237, 252, 254], "avgnuctemperatur": 237, "arug": 237, "carri": [238, 370, 394, 437, 479], "0d": 238, "blockrepresent": [238, 264], "past": [238, 315, 341, 362, 376, 437, 444, 446, 450, 479, 488, 501], "block_collect": 238, "xsfileloc": [238, 264], "fluxfileloc": 238, "driverid": 238, "criticalbuckl": 238, "nuclidereactiondriv": 238, "externaldriv": 238, "usehomogenizedblockcomposit": 238, "numinternalr": [238, 314], "numexternalr": [238, 314, 458], "mergeintoclad": [238, 314], "meshsubdivisionspercm": 238, "xsexecuteexclus": 238, "xsprioriti": 238, "xsmaxatomnumb": 238, "mindriverdens": 238, "subcrit": 238, "buckl": [238, 501], "spatial": [238, 282, 285, 290, 308, 314, 329, 332, 336, 339, 348, 351, 411, 444, 479, 481, 482, 486, 492, 496, 497, 499, 501], "gap": [238, 281, 285, 308, 322, 330, 352, 353, 458, 473, 486, 491, 492, 493, 497, 501], "subregion": 238, "prioriti": [238, 317, 318, 479], "dilut": [238, 501], "templat": 238, "char": [238, 407], "conf_xsid": 238, "mutual": [238, 290, 331, 362, 479], "tune": [238, 407], "xssettingsdict": 238, "coerc": [238, 370, 376], "egrpstruc": 240, "descend": 240, "propag": [240, 371], "neutronenergyboundsinev": 240, "test_fissionproductmodel": [241, 245], "testfissionproductmodellumpedfissionproduct": [241, 245, 246], "testfissionproductmodelexplicitmc2librari": [241, 245, 246], "testfissionproductmodelexplicitmc2libraryslow": [241, 245, 246], "test_lumpedfissionproduct": [241, 245], "getdummylfpfil": [241, 245, 247], "testfissionproductdefinitionfil": [241, 245, 247], "testlumpedfissionproduct": [241, 245, 247], "testlumpedfissionproductcollect": [241, 245, 247], "testlumpedfissionproductsfromreferencefil": [241, 245, 247], "testlumpedfissionproductsexplicit": [241, 245, 247], "testmo99lfp": [241, 245, 247], "setallcomponentfissionproduct": [241, 242], "setallblocklfp": [241, 242], "getgloballumpedfissionproduct": [241, 242], "setgloballumpedfissionproduct": [241, 242], "getallfissionproductnam": [241, 242, 244], "removefissiongasesfromblock": [241, 242], "getgaseousyieldfract": [241, 244], "gettotalyield": [241, 244], "getmassfracdenom": [241, 244], "getlumpedfissionproductnam": [241, 244], "getallfissionproductnuclidebas": [241, 244], "createlfpsfromfil": [241, 244], "createsinglelfpfromfil": [241, 244], "inventori": [242, 399], "fidel": [242, 285, 296, 479, 496, 497, 501], "substanti": [242, 285], "lfp35": [242, 244, 298, 486], "lfp39": [242, 244, 298, 486], "lfp40": [242, 298, 486], "lfp41": [242, 298, 486], "fpmodel": [242, 501], "lfp": [242, 244, 285, 291, 305, 308], "casmo": 242, "referencefissionproduct": [242, 247], "dat": [242, 247, 501], "nuclideflag": [242, 281, 286, 291, 473, 501], "quick": [242, 249, 353, 443, 452, 477, 480, 488, 494, 501, 507], "aim": [242, 396, 479], "fpmodellibrari": [242, 501], "autoupdatenuclideflag": [242, 281, 286, 291], "vision": 242, "origen": [242, 501], "caveat": [242, 402, 450, 501], "box": [242, 280, 467], "autofil": 242, "getallnuclidebasesbylibrari": [242, 281, 286, 291], "setlumpedfissionproduct": [242, 281, 302, 305, 308], "isotopicdeplet": [242, 289, 484], "depletioninterfac": 242, "buildfissionproduct": 242, "getlumpedfissionproductcollect": [242, 244, 281, 285, 302, 305, 308], "fp": [244, 246, 247], "yld": 244, "fpd": 244, "eu151": 244, "9773e": 244, "objectwithparentdens": 244, "densfunc": 244, "fpdensiti": 244, "oldmassfrac": 244, "ge73": 244, "9000e": 244, "ge74": 244, "4000e": 244, "ge76": 244, "6000e": 244, "as75": 244, "lfpcompositionfilepath": [244, 501], "test_loadgloballfpsfromfil": [245, 246], "test_getallfissionproductnam": [245, 246, 247], "test_fpappl": [245, 246], "test_nuclideflag": [245, 246, 293, 296], "test_nuclidesinmodelfuel": [245, 246], "test_nuclidesinmodelalldepletableblock": [245, 246], "test_createlfp": [245, 247], "test_createreferencelfp": [245, 247], "test_getyield": [245, 247], "test_gaseousyieldfract": [245, 247], "test_isga": [245, 247], "test_getallfissionproductnuclidebas": [245, 247], "test_getnumberdens": [245, 247, 350, 352, 353, 354], "test_getmassfrac": [245, 247], "test_fissionproductyield": [245, 247], "test_explicitfissionproduct": [245, 247], "faster": [246, 285, 286, 308, 328, 341, 359], "slower": [246, 491, 501], "lumpedfissionproduc": 247, "explicitfissionproduct": [247, 482, 501], "mo99": [247, 501], "test_globalfluxinterfac": [248, 250], "mockcoreparam": [248, 250, 251], "mockglobalfluxinterfac": [248, 250, 251], "mockglobalfluxwithexecut": [248, 250, 251], "mockglobalfluxwithexecutersnonuniform": [248, 250, 251], "mockglobalfluxexecut": [248, 250, 251], "testglobalfluxopt": [248, 250, 251], "testglobalfluxinterfac": [248, 250, 251], "testglobalfluxinterfacewithexecut": [248, 250, 251], "testglobalfluxinterfacewithexecutersnonuniform": [248, 250, 251], "testglobalfluxresultmapp": [248, 250, 251], "testglobalfluxutil": [248, 250, 251], "applydummyflux": [248, 250, 251], "checkenergybal": [248, 249], "getiofilenam": [248, 249], "calculatekeff": [248, 249], "getoptionscl": [248, 249], "getexecutercl": [248, 249, 250, 251], "getexecuteropt": [248, 249, 250, 251], "getexecut": [248, 249], "getlabel": [248, 249, 332, 336, 337], "edgeassembliesareneed": [248, 249], "getkeff": [248, 249], "clearflux": [248, 249], "getdpax": [248, 249], "getburnuppeakingfactor": [248, 249], "updatedpar": [248, 249], "updatemaxdpaparam": [248, 249], "updatefluenceanddpa": [248, 249], "updatecycledoseparam": [248, 249], "updateloadpaddos": [248, 249], "versu": [249, 484], "tightli": [249, 499], "coupledit": 249, "additionallabel": 249, "stdname": 249, "eigenvalu": [249, 327, 499, 501], "interoper": 249, "myriad": 249, "blank": [249, 371, 396, 451, 492, 497], "calc": [249, 251, 327, 353, 408], "calcreactionratesonmeshconvers": 249, "recalcul": [249, 285, 327], "remap": [249, 327], "eigenvalueproblem": 249, "includefixedsourc": 249, "eig": 249, "fredholm": 249, "satisfi": [249, 280, 308, 331, 332, 478], "uniform": [249, 251, 282, 285, 286, 290, 304, 312, 315, 316, 321, 326, 327, 328, 339, 344, 463, 481, 482, 497, 499, 501], "aclpdoselimit": [249, 501], "detailedaxialexpans": [249, 312, 321, 326, 327, 328, 341, 344, 391, 482, 501], "dpaperflu": [249, 497, 501], "dirti": [249, 501], "dpapeak": [249, 501], "fastfluencepeak": [249, 497, 501], "energydepocalcmethodstep": 249, "epseigenvalu": 249, "epsfissionsourceavg": 249, "epsfissionsourcepoint": 249, "rz": [249, 281, 282, 315, 324, 331, 360, 456, 460, 477, 479, 481, 494], "rzt": [249, 281, 315, 328, 331, 332, 339, 360], "hasnonuniformassem": 249, "isrestart": 249, "guess": [249, 407, 437, 501], "kernelnam": 249, "loadpadelev": [249, 501], "elev": [249, 282, 411, 493, 496, 501], "aclp": [249, 281, 321, 330, 499, 501], "plate": [249, 282, 328, 332, 478, 488, 492, 499, 501], "loadpadlength": [249, 501], "maxout": 249, "savephysicsfileslist": 249, "timestamp": [249, 501], "xskernel": [249, 501], "pn": 249, "edg": [249, 285, 308, 315, 323, 327, 328, 341, 343, 344, 359, 392, 396, 432, 479, 484, 497, 501], "unifi": [249, 321, 339], "pipe": [249, 363, 488], "delta": [249, 359, 488, 489, 496, 497, 505], "burnuppeakingfactor": [249, 501], "avg": [249, 328, 407, 488, 499, 501], "depletionsecond": 249, "fluenc": [249, 492, 497], "shift": [249, 328, 481, 501], "stateless": [249, 280, 446], "mapper": [249, 482], "getblock": [249, 281, 282, 285, 328, 447, 457, 458, 466, 474, 486, 488], "steptimeinsecond": 249, "detaileddpa": [249, 497, 499], "detaileddpapeak": [249, 497], "dpapeakfromflu": [249, 497], "inaccur": 249, "ran": [249, 491], "mgflux": [249, 259, 285, 308, 327, 465, 486, 488, 497], "accru": [249, 497], "maxdetaileddpathiscycl": [249, 499], "dpafullwidthhalfmax": [249, 499], "elevationofaclp3cycl": [249, 499], "elevationofaclp7cycl": [249, 499], "accumul": [249, 344, 492, 497, 498], "loadpaddpapeak": [249, 499], "loadpaddpaavg": [249, 499], "_calcloadpaddos": 249, "dpax": 249, "incur": 249, "exposur": 249, "convolut": 249, "dpapersecond": 249, "nusigf": 249, "test_readfromset": [250, 251], "test_readfromreactor": [250, 251], "test_savephysicsfil": [250, 251], "test_computedpar": [250, 251], "test_interact": [250, 251], "test_getiofilenam": [250, 251], "test_gethistoryparam": [250, 251], "test_checkenergybal": [250, 251], "test_executerinteract": [250, 251], "test_calculatekeff": [250, 251], "test_getexecutercl": [250, 251], "test_settightcouplingdefault": [250, 251], "test_gettightcouplingvalu": [250, 251], "test_executerinteractionnonuniformassem": [250, 251], "test_mapp": [250, 251], "test_updatecycledoseparam": [250, 251], "test_updateloadpaddos": [250, 251], "test_getdpax": [250, 251], "test_getburnuppeakingfactor": [250, 251], "test_getburnuppeakingfactorzero": [250, 251], "test_calcreactionr": [250, 251], "fake": [251, 321, 391, 486], "gf": 251, "pcm": [251, 499, 501], "reli": [251, 302, 336, 339, 465, 493], "swing": [251, 499], "observ": 251, "mockgeometrytransform": 251, "mockexecut": 251, "mockconverterfactori": 251, "broad": [251, 253, 482, 488, 501, 503], "mockgetmaxparam": 251, "test_latticeinterfac": [252, 255], "latticeinterfacetest": [252, 255, 256], "latticeinterfacetesterlibfals": [252, 255, 256], "testlatticephysicsinterfacebas": [252, 255, 256], "testlatticephysicsinterfac": [252, 255, 256], "testlatticephysicslibrarycr": [252, 255, 256], "test_latticewrit": [252, 255], "fakelatticephysicswrit": [252, 255, 257], "testlatticephysicswrit": [252, 255, 257], "updatexslibrari": [252, 253], "readexistingxslibrari": [252, 253, 255, 256], "makecyclexsfilesasbasefil": [252, 253], "clearx": [252, 253, 501], "computecrosssect": [252, 253], "generatelatticephysicsinput": [252, 253], "getwrit": [252, 253], "getread": [252, 253], "getrepresentativeblock": [252, 253], "unused_categori": [252, 254], "fuel_categori": [252, 254], "structure_categori": [252, 254], "coolant_categori": [252, 254], "fission_product_categori": [252, 254], "undeplet": [252, 254], "neutronveloc": 253, "mgneutronveloc": [253, 497], "genx": [253, 492, 493, 501], "runlatticephysicsbeforeshuffl": 253, "weather": 253, "reson": 253, "lifetim": [253, 499, 504], "basi": [253, 315, 338, 479, 492], "forceseri": 253, "book": [253, 451], "xswriter": 253, "bc": 253, "returnedfromwrit": 253, "agent": 253, "cyclic": [253, 401, 499], "seek": [254, 395, 437], "generateexclusivegammax": 254, "test_includegammax": [255, 256], "test_latticephysicsinterfac": [255, 256], "test_interacteverynodefirstcoupl": [255, 256], "test_interacteverynodeal": [255, 256], "test_interactfirstcouplediter": [255, 256, 262, 263], "test_interactal": [255, 256], "test_getsuffix": [255, 256], "test_libcreation_nogenx": [255, 256], "test_libcreation_genx": [255, 256], "test_libcreation_nogenxs_2": [255, 256], "test_libcreation_genxs_2": [255, 256], "test_libcreation_genxs_3": [255, 256], "test_setblockneutronveloc": [255, 257], "test_latticephysicswrit": [255, 257], "test_writetitl": [255, 257], "test_issourcedriven": [255, 257], "test_isgammaxsgenerationen": [255, 257], "test_getallnuclidesbytemperatureincnon": [255, 257], "test_getallnuclidesbytemperatureinc": [255, 257], "test_getallnuclidesbytemperatureincexplicitfissionproduct": [255, 257], "test_getavgnuclidetemperatureinc": [255, 257], "test_getfueltemperatur": [255, 257], "test_getdetailedfissionproduct": [255, 257], "test_getdetailedfissionproductspass": [255, 257], "test_getdetailedfpdens": [255, 257], "test_iscriticalbucklingsearchact": [255, 257], "test_getdriverblock": [255, 257], "_newlibraryshouldbecr": 256, "flip": 256, "testverif": 256, "gen": [256, 263], "sigma_i": 258, "interactxyz": 258, "macroxsgen": 258, "blistsom": 258, "gxg": 258, "fluxrecon": [258, 285, 501], "computepinmgfluxandpow": 258, "huge": [258, 437], "denot": [260, 449], "addtion": 260, "subsectionhead": 260, "areal": [260, 499, 503], "test_add": [262, 263, 350, 351, 352, 355], "test_getblocksingroup": [262, 263], "test_is_pickl": [262, 263], "test_createrepresentativeblock": [262, 263], "test_performaveragebycompon": [262, 263], "test_checkblocksimilar": [262, 263], "test_createrepresentativeblockdissimilar": [262, 263], "test_getaveragecomponentnumberdens": [262, 263], "test_getaveragecomponenttemperatur": [262, 263], "test_getaveragecomponenttemperaturevariedweight": [262, 263], "test_getaveragecomponenttemperaturenomass": [262, 263], "test_componentaveragerepblock": [262, 263], "test_componentaverage1dcylind": [262, 263], "test_checkcomponentconsist": [262, 263], "test_invalidweight": [262, 263], "test_enablebugroupupd": [262, 263], "test_disablebugroupupd": [262, 263], "test_updateburnupgroup": [262, 263], "test_setbugroupbound": [262, 263], "test_addxsgroupsfromblock": [262, 263], "test_calcweightedburnup": [262, 263], "test_getnextavailablexstyp": [262, 263], "test_getrepresentativeblock": [262, 263], "test_createrepresentativeblocksusingexistingblock": [262, 263], "test_createrepresentativeblocksusingexistingblocksdisablevalidblocktyp": [262, 263], "test_interactallcoupl": [262, 263], "test_xsgmisrunbeforex": [262, 263], "test_copypregeneratedfil": [262, 263], "test_convers": [262, 263], "test_conversion_2digit": [262, 263], "test_crosssect": [262, 264], "test_pregeneratedcrosssect": [262, 264], "test_pregeneratedfluxinput": [262, 264], "test_priorit": [262, 264], "test_homogeneousxsdefaultsettingassign": [262, 264], "test_setdefaultsettingsbylowestbugrouphomogen": [262, 264], "test_setdefaultsettingsbylowestbugrouponedimension": [262, 264], "test_optionalkei": [262, 264], "test_badcrosssect": [262, 264], "test_yamlio": [262, 264, 350, 357], "test_caseset": [262, 264], "test_csblockrepresent": [262, 264], "test_csblockrepresentationfileloc": [262, 264], "test_xssettingssetdefault": [262, 264], "test_maket": [262, 265], "test_isotopicdepletioninterfac": [262, 265], "test_invalidgroupstructuretyp": [262, 266], "test_consistenciesbetweengroupstructureandgroupstructuretyp": [262, 266], "test_getfastfluxgroupcutoff": [262, 266], "test_macroxsgenerationinterfacebas": [262, 267], "test_customsettingobjectio": [262, 268], "test_customsettingroundtrip": [262, 268], "test_neutronicssettingsload": [262, 268], "test_kineticsparameterassign": [262, 268], "test_neutronicssettingsvalid": [262, 268], "dissimilar": [263, 315], "zppr": [263, 285, 479], "cylind": 263, "disableblocktypeexclusioninxsgener": 263, "whip": [264, 338, 481], "forth": 268, "test_runningdirectorypath": [270, 271], "test_collectinputsandoutput": [270, 271], "test_updaterundir": [270, 271], "test_runexternalexecut": [270, 271], "hydraul": [272, 274, 275, 276, 278, 285, 328, 344, 479, 482, 489, 492, 501], "test_thermalhydraulicsplugin": [272, 277], "testthermalhydraulicsplugin": [272, 277, 278], "concern": [275, 501], "test_thermalhydraulicssettingsload": [277, 278], "test_thermalhydraulicssettingsset": [277, 278], "stock": 279, "pluggi": [279, 280, 446], "featur": [279, 280, 286, 327, 341, 371, 373, 403, 413, 419, 420, 441, 444, 446, 451, 466, 475, 479, 481, 488, 490, 492, 493, 501, 503], "mutat": [279, 376], "cheapli": 279, "altitud": 280, "subtl": 280, "exercis": 280, "forget": [280, 486, 503], "ergonom": [280, 331], "lest": 280, "endeavor": 280, "redesign": 280, "parametercollect": [280, 281, 308, 341, 344, 345, 358, 389, 484], "yamliz": [280, 286, 287, 288, 289, 290, 291, 292, 437], "metaclass": [280, 305, 308, 341, 345], "pluginmagag": 280, "notic": [280, 334, 446, 447, 450, 451, 492], "staticmethod": [280, 327, 339, 446, 488], "preclud": 280, "componenttyp": [280, 281, 302, 305], "registr": [280, 305, 488], "surpris": [280, 308, 330, 501], "ersatz": 280, "inter": [280, 308, 407, 432], "favor": [280, 349], "predat": 280, "pluginblockparam": 280, "createbuild": [280, 341, 344], "defparam": [280, 341, 344], "plugblkp1": 280, "pluginassemparam": 280, "plugasmp1": 280, "constraint": [280, 411, 444, 497], "alter": [280, 403, 501], "novel": 280, "blocktyp": [280, 282, 328], "largest": [280, 285, 308, 314, 396], "suspect": 280, "ceas": 280, "beyond": [280, 302, 446, 479, 486, 492], "elsewher": [280, 308, 450], "elimin": [280, 341, 479, 481], "altogeth": [280, 501], "resolutionmethod": 280, "unbound": 280, "enhanc": [280, 445, 479], "t1671": 280, "misbehav": 280, "declar": [280, 308, 312, 501], "member": [280, 308, 395, 407, 451], "widget": [280, 371], "tab": [280, 414, 444, 486], "widgetdata": 280, "submitt": 280, "abstracttab": 280, "addsectionsfromplugin": 280, "mcnpaddtal": 280, "usesrctp": 280, "frustrat": 280, "rule": [280, 331, 344, 345, 363, 372, 373, 446, 450, 451, 501], "intact": 280, "collid": [280, 341, 381], "superoldparam": 280, "oldparam": 280, "currentparam": 280, "newer": [280, 347, 410, 480, 507], "arguabl": 280, "suboptim": 280, "axialexpansionchang": [280, 281, 305, 309, 321, 391, 484], "negat": 280, "encourag": [280, 443], "tryfirst": 280, "hookimpl": [280, 446, 488], "invoc": [280, 442], "changer": [280, 285, 315, 323, 391, 401, 420, 481, 482, 501], "myplugin": [280, 501], "myproject": 280, "bespokeaxialexpans": 280, "mod": [280, 441, 493], "adapt": [280, 292, 446], "stapl": 280, "programm": [280, 501], "improperli": [280, 341], "collis": [280, 422], "hous": [281, 486], "constructassem": [281, 286, 321], "adddefaultsfp": [281, 286], "assemblyblueprint": [281, 286, 473, 484], "bycomponentmodif": [281, 286, 287], "assemblykeyedlist": [281, 286, 287, 473], "blockblueprint": [281, 286, 289, 473], "blockkeyedlist": [281, 286, 288, 473], "componentblueprint": [281, 286, 288, 296, 297, 473], "componentdimens": [281, 286, 289], "expandelement": [281, 286, 289], "insertdepletablenuclidekei": [281, 286, 289, 296], "componentkeyedlist": [281, 286, 289], "groupedcompon": [281, 286, 289], "componentgroup": [281, 286, 289], "gridblueprint": [281, 286, 292, 349, 473], "triplet": [281, 286, 290, 473], "savetostream": [281, 286, 290], "getdefaultnuclideflag": [281, 286, 291], "eleexpandinfobasedoncodeendf": [281, 286, 291], "gendefaultnucflag": [281, 286, 291, 473], "reactorblueprint": [281, 286, 349, 473], "systemblueprint": [281, 286, 292, 473], "summarizematerialdata": [281, 286, 292, 484], "getboundingcircleouterdiamet": [281, 302, 303, 304, 305, 307, 308, 350, 354], "getdimens": [281, 285, 302, 305, 502], "dimension_nam": [281, 302, 303, 304, 305, 307], "init_signatur": [281, 302, 303, 304, 305, 307], "pdef": [281, 282, 285, 302, 303, 304, 305, 307, 308, 328, 341, 343, 345, 347, 350, 354, 358, 378, 389], "getcomponentarea": [281, 302, 303, 304, 305, 307], "fromcompon": [281, 302], "is3d": [281, 302, 303, 304, 305, 307], "getcomponentvolum": [281, 302, 305, 307], "setvolum": [281, 302, 305], "computevolum": [281, 302, 305, 353], "getmaxvolum": [281, 302, 484], "basicshap": [281, 285, 302], "circl": [281, 285, 298, 302, 303, 304, 305, 306, 307, 308, 314, 353, 354, 411, 463, 465, 473, 478, 486, 492, 493, 501], "rectangl": [281, 285, 302, 303, 304, 305, 306, 334, 339, 353, 475, 481, 501], "solidrectangl": [281, 302, 303, 353, 501], "squar": [281, 302, 303, 304, 328, 332, 352, 353, 464, 468, 475, 481, 493, 501], "complexshap": [281, 302, 482], "holedhexagon": [281, 302, 304, 306, 353, 501], "hexholedcircl": [281, 302, 304, 306, 353, 501], "holedrectangl": [281, 302, 304, 306, 353, 501], "holedsquar": [281, 302, 304, 353, 501], "helix": [281, 302, 304, 306, 308, 353, 473, 478, 482, 486, 492, 501], "componenttypeisvalid": [281, 302, 305], "shapedcompon": [281, 302, 303, 304, 305, 307, 501], "componentparamet": [281, 302], "getcomponentparameterdefinit": [281, 302, 306], "getcircleparameterdefinit": [281, 302, 306], "gethexagonparameterdefinit": [281, 302, 306], "getholedhexagonparameterdefinit": [281, 302, 306], "gethexholedcircleparameterdefinit": [281, 302, 306], "getholedrectangleparameterdefinit": [281, 302, 306], "gethelixparameterdefinit": [281, 302, 306], "getrectangleparameterdefinit": [281, 302, 306], "getcubeparameterdefinit": [281, 302, 306], "gettriangleparameterdefinit": [281, 302, 306], "getunshapedparameterdefinit": [281, 302, 306], "getradialsegmentparameterdefinit": [281, 302, 306], "volumetricshap": [281, 302], "sphere": [281, 296, 302, 307, 353, 360, 501], "cube": [281, 302, 306, 307, 353, 501], "radialseg": [281, 302, 306, 307, 353, 501], "differentialradialseg": [281, 285, 302, 307, 353, 501], "parametersweep": [281, 309], "blockconvert": [281, 309, 458], "componentmerg": [281, 309, 314], "multiplecomponentmerg": [281, 309, 314], "blockavgtocylconvert": [281, 309, 314], "hexcomponentstocylconvert": [281, 309, 314, 458], "getouterdiamfromidandarea": [281, 309, 314], "radiifromhexpitch": [281, 309, 314], "radiifromhexsid": [281, 309, 314], "radiifromringofrod": [281, 309, 314], "geometryconvert": [281, 285, 309, 318, 327, 328, 459], "geometrychang": [281, 309, 315], "fuelassemnummodifi": [281, 309, 315], "hextorzthetaconvert": [281, 309, 315], "hextorzconvert": [281, 309, 315, 323, 459], "thirdcorehextofullcorechang": [281, 309, 315], "edgeassemblychang": [281, 285, 309, 315, 486], "meshconvert": [281, 309, 315], "rzthetareactormeshconvert": [281, 309, 316], "rzthetareactormeshconverterbyringcompositionaxialbin": [281, 309, 316], "rzthetareactormeshconverterbyringcompositionaxialcoordin": [281, 309, 316], "rzthetareactormeshconverterbyringcompositionaxialflag": [281, 309, 316], "checklastvalueinlist": [281, 309, 316], "checklistbound": [281, 309, 316], "generatebin": [281, 309, 316], "pintypeblockconvert": [281, 309], "adjustsmeardens": [281, 309, 319], "adjustcladthicknessbyod": [281, 309, 319], "adjustcladthicknessbyid": [281, 309, 319], "uniformmesh": [281, 285, 309, 312, 482], "converterfactori": [281, 309, 327], "uniformmeshgener": [281, 309, 327], "uniformmeshgeometryconvert": [281, 285, 292, 309, 327, 482], "neutronicsuniformmeshconvert": [281, 309, 327], "gammauniformmeshconvert": [281, 309, 327], "parammapp": [281, 309, 327], "setnumberdensitiesfromoverlap": [281, 309, 327], "axialgrid": [281, 332, 333, 465], "cartesiangrid": [281, 314, 332, 334, 468, 481], "hexgrid": [281, 314, 332, 337, 351, 465, 467, 484], "locationbas": [281, 308, 329, 332, 333, 336, 338, 348], "multiindexloc": [281, 285, 290, 332, 338], "coordinateloc": [281, 332, 338], "addingisvalid": [281, 332, 338], "structuredgrid": [281, 332, 333, 334, 337, 340, 483, 484], "gridparamet": [281, 332, 339], "thetarz": [281, 282, 285, 332, 339, 352], "thetarzgrid": [281, 316, 332, 340, 469], "parameterdefinitionerror": [281, 341, 342], "parametererror": [281, 341, 342], "unknownparametererror": [281, 341, 342], "global_serial_num": [281, 341, 343], "collectpluginparamet": [281, 341, 343], "applyallparamet": [281, 341, 343], "parameterdefinit": [281, 282, 285, 302, 303, 304, 305, 307, 308, 328, 341, 343, 347, 354, 358, 389], "paramloc": [281, 285, 341, 343, 344], "nodefault": [281, 341, 344], "isnumpyarrai": [281, 341, 344], "parameterbuild": [281, 341, 344, 358, 389], "resolvecollect": [281, 341], "resolveparametersmeta": [281, 308, 341, 343, 345], "test_assembli": [281, 350], "buildtestassembli": [281, 350, 351], "materialinassembly_testcas": [281, 350, 351], "maketestassembli": [281, 350, 351], "assembly_testcas": [281, 350, 351], "assemblyinreactor_testcas": [281, 350, 351], "annularfueltestcas": [281, 350, 351], "test_block": [281, 308, 350, 361, 463], "buildsimplefuelblock": [281, 350, 352, 463], "loadtestblock": [281, 350, 352], "applydummydata": [281, 350, 352], "getcomponentdata": [281, 350, 352], "testdetailedndensupd": [281, 350, 352], "block_testcas": [281, 308, 350, 352], "blockenergydepositionconst": [281, 350, 352], "testnegativevolum": [281, 350, 352], "hexblock_testcas": [281, 350, 352], "thrzblock_testcas": [281, 350, 352], "cartesianblock_testcas": [281, 350, 352], "massconservationtest": [281, 309, 320, 325, 350, 352], "emptyblockrotatetest": [281, 350, 352], "test_compon": [281, 293, 296, 350], "testcomponentfactori": [281, 350, 353], "testgeneralcompon": [281, 350, 353], "testcompon": [281, 350, 353], "testnullcompon": [281, 350, 353], "testunshapedcompon": [281, 350, 353], "testshapedcompon": [281, 350, 353], "testderivedshap": [281, 350, 353], "testderivedshapegetarea": [281, 350, 353], "testcircl": [281, 350, 353], "testcomponentexpans": [281, 350, 353], "testtriangl": [281, 350, 353, 395, 415, 434], "testrectangl": [281, 350, 353], "testsolidrectangl": [281, 350, 353], "testsquar": [281, 350, 353], "testcub": [281, 350, 353], "testhexagon": [281, 350, 353, 395, 415, 423], "testholedhexagon": [281, 350, 353], "testhexholedcircl": [281, 350, 353], "testholedrectangl": [281, 350, 353], "testholedsquar": [281, 350, 353], "testhelix": [281, 350, 353], "testspher": [281, 350, 353], "testradialseg": [281, 350, 353], "testdifferentialradialseg": [281, 350, 353], "testmaterialadjust": [281, 350, 353], "test_composit": [281, 350], "mockbp": [281, 350, 354], "getdummyparamdef": [281, 350, 354], "dummycomposit": [281, 350, 354], "dummyleaf": [281, 350, 354], "testcompositepattern": [281, 350, 354], "testcompositetre": [281, 350, 354], "testflagseri": [281, 350, 354], "testmiscmethod": [281, 350, 354], "testgetreactionratedict": [281, 350, 354], "test_excorestructur": [281, 293, 301, 350], "testexcorestructur": [281, 350, 355], "testspentfuelpool": [281, 350, 355], "testexcorecollect": [281, 350, 355], "test_flag": [281, 350, 395, 415], "testflag": [281, 350, 356, 395, 415, 422], "test_geometri": [281, 350], "testgeomtyp": [281, 350, 357], "testsymmetrytyp": [281, 350, 357], "testsystemlayoutinput": [281, 350, 357], "testsystemlayoutinputtrz": [281, 350, 357], "test_paramet": [281, 350], "mockcomposit": [281, 350, 358], "mockcompositegrandpar": [281, 350, 358], "mockcompositepar": [281, 350, 358], "mockcompositechild": [281, 350, 358], "parametertest": [281, 350, 358], "paramcollectionwher": [281, 350, 358], "test_reactor": [281, 350, 457, 458, 459, 466, 474], "buildoperatorofemptyhexblock": [281, 350, 359], "buildoperatorofemptycartesianblock": [281, 350, 359], "reducetestreactor": [281, 350, 359], "reactortest": [281, 350, 359], "hexreactortest": [281, 350, 359], "cartesianreactorneighbortest": [281, 350, 359], "test_rz_reactor": [281, 350], "testrztreactor": [281, 350, 360], "testrztreactormodern": [281, 350, 360], "test_zon": [281, 350], "testzon": [281, 350, 361], "load_queu": [281, 282], "spent_fuel_pool": [281, 282], "not_in_cor": [281, 282], "renameblocksaccordingtoassemblynum": [281, 282], "makenamefromassemnum": [281, 282], "renumb": [281, 282, 328, 347, 348], "makeuniqu": [281, 282], "moveto": [281, 282, 308], "getnum": [281, 282], "getloc": [281, 282, 285, 286, 290], "getarea": [281, 282, 285, 302, 305, 308, 353, 484, 498], "getpinplenumvolumeincubicmet": [281, 282], "getaverageplenumtemperatur": [281, 282], "doubleresolut": [281, 282], "adjustresolut": [281, 282], "getaxialmesh": [281, 282, 328, 482], "calculatezcoord": [281, 282, 285], "gettotalheight": [281, 282], "getheight": [281, 282, 285, 486], "getreactiveheight": [281, 282], "getelevationboundariesbyblocktyp": [281, 282], "getelevationsmatchingparamvalu": [281, 282], "getag": [281, 282], "makeaxialsnaplist": [281, 282, 497], "setblockmesh": [281, 282, 484, 497], "setblockheight": [281, 282], "getblocksandz": [281, 282], "hascontinuouscoolantchannel": [281, 282], "getfirstblock": [281, 282, 328, 465, 486, 493, 502], "getfirstblockbytyp": [281, 282], "getblockatelev": [281, 282], "getbindexfromzindex": [281, 282], "getblocksbetweenelev": [281, 282], "getparamvaluesatz": [281, 282], "getparamofzfunct": [281, 282], "reestablishblockord": [281, 282], "countblockswithflag": [281, 282, 328], "getdim": [281, 282, 285], "getsymmetryfactor": [281, 282, 285, 308, 315, 359, 488], "isonwhichsymmetrylin": [281, 282, 484], "radialout": [281, 282, 285], "radialinn": [281, 282, 285], "thetaout": [281, 282, 285], "thetainn": [281, 282, 285], "uniqid": [281, 285], "pitch_dimens": [281, 285], "pitch_component_typ": [281, 285], "createhomogenizedcopi": [281, 285], "makenam": [281, 285], "getsmeardens": [281, 285], "autocreatespatialgrid": [281, 285], "getmgflux": [281, 285, 308], "setpinmgflux": [281, 285], "setheight": [281, 285], "getwettedperimet": [281, 285, 482], "getflowareaperpin": [281, 285], "gethydraulicdiamet": [281, 285], "adjustuenrich": [281, 285], "setbulimitinfo": [281, 285], "getmaxarea": [281, 285, 308], "adjustdens": [281, 285], "completeinitialload": [281, 285, 319], "setb10volparam": [281, 285], "replaceblockwithblock": [281, 285, 352], "plotflux": [281, 285], "removeal": [281, 285, 308], "getcomponentsthatarelinkedto": [281, 285], "getcomponentsinlinkedord": [281, 285], "getsortedcomponentsinsideofcompon": [281, 285], "getnumpin": [281, 285, 482, 484], "mergewithblock": [281, 285], "getcomponentareafrac": [281, 285], "verifyblockdim": [281, 285], "getpincenterflattoflat": [281, 285], "getwirewrapcladgap": [281, 285], "getplenumpin": [281, 285], "isplenumpin": [281, 285], "getpitch": [281, 285], "haspinpitch": [281, 285], "getpinpitch": [281, 285], "getlargestcompon": [281, 285], "setpitch": [281, 285], "getmfp": [281, 285], "setareafractionsreport": [281, 285], "updatecomponentdim": [281, 285, 307], "breakfuelcomponentsintoindividu": [281, 285], "getintegratedmgflux": [281, 285, 302, 305, 308], "setaxialexptargetcomp": [281, 285], "getpincoordin": [281, 285], "gettotalenergygenerationconst": [281, 285, 484], "getfissionenergygenerationconst": [281, 285, 484], "getcaptureenergygenerationconst": [281, 285, 484], "getneutronenergydepositionconst": [281, 285, 484], "getgammaenergydepositionconst": [281, 285, 484], "getboronmassenrich": [281, 285, 484], "getpumol": [281, 285, 484], "geturaniummassenrich": [281, 285, 484], "getductip": [281, 285], "getductop": [281, 285], "initializepinloc": [281, 285], "setpinpow": [281, 285], "getpintoductgap": [281, 285], "getrotationnum": [281, 285], "setrotationnum": [281, 285], "getflowarea": [281, 285], "axialinn": [281, 285], "axialout": [281, 285], "copyparamsfrom": [281, 308], "updateparamsfrom": [281, 308], "getcompon": [281, 308, 330, 463, 488, 493, 502], "itercompon": [281, 302, 305, 308, 350, 354], "dochildrenhaveflag": [281, 308], "containsatleastonechildwithflag": [281, 308], "containsonlychildrenwithflag": [281, 308], "copyparamstochildren": [281, 308], "getparametercollect": [281, 308], "getparamnam": [281, 308], "setnam": [281, 302, 305, 308], "hasflag": [281, 282, 308, 330], "gettyp": [281, 308, 486, 492], "settyp": [281, 308, 465], "getvolumefract": [281, 305, 308, 352, 463], "getmass": [281, 302, 305, 308, 354, 486], "getchildrenwithnuclid": [281, 308], "getancestor": [281, 308], "getancestoranddist": [281, 308], "getancestorwithflag": [281, 308], "gettotalnden": [281, 308], "updatenumberdens": [281, 302, 305, 308], "changendensbyfactor": [281, 308], "clearnumberdens": [281, 308], "getnumberofatom": [281, 308], "setchildrenlumpedfissionproduct": [281, 308], "getfissilemassenrich": [281, 308], "geturaniumnumenrich": [281, 308], "calctotalparam": [281, 308, 488], "calcavgparam": [281, 308], "getmaxparam": [281, 308, 354, 466, 479, 492], "getminparam": [281, 308, 354], "getchildparamvalu": [281, 308, 486], "isfuel": [281, 308, 486, 488], "containsheavymet": [281, 308], "getfissilemass": [281, 308, 486], "gethmmass": [281, 308, 459], "gethmmol": [281, 308], "gethmden": [281, 308], "getfuelmass": [281, 302, 305, 308, 354], "constituentreport": [281, 308], "removemass": [281, 308], "addmass": [281, 308], "setmass": [281, 308, 399], "getboundingindic": [281, 308], "getcomponentnam": [281, 308], "getcomponentsofshap": [281, 308], "getcomponentsofmateri": [281, 308], "hascompon": [281, 308], "getcomponentbynam": [281, 308], "getnumcompon": [281, 308], "setcomponentdimensionsreport": [281, 308], "expandallelementalstoisotop": [281, 308], "expandelementaltoisotop": [281, 308, 465], "getaveragetempinc": [281, 308], "resolvelinkeddim": [281, 302, 305, 308, 353], "setchildren": [281, 308], "getchildrenoftyp": [281, 308], "syncmpist": [281, 308, 343, 356, 447], "retainst": [281, 308, 339, 343, 352], "getlumpedfissionproductsifnecessari": [281, 308], "requireslumpedfissionproduct": [281, 308], "getreactionr": [281, 308, 465, 482, 484], "printcont": [281, 302, 305, 308, 486], "setoptionsfromc": [281, 328, 465], "powermultipli": [281, 328, 496], "isfullcor": [281, 328], "refassem": [281, 282, 328, 482], "sortassemsbyr": [281, 328, 482, 486], "summarizereactorstat": [281, 328], "setpowerfromdens": [281, 328], "setpowerifnecessari": [281, 328], "setblockmassparam": [281, 328], "getscalarevolut": [281, 328], "locateallassembli": [281, 328], "removeassembli": [281, 328], "removeassembliesinr": [281, 328], "normalizenam": [281, 328, 347, 348], "normalizeinternalbookeep": [281, 328], "genassembliesaddedthiscycl": [281, 328], "getnumhexr": [281, 328], "getnumassemblieswithallringsfilledout": [281, 328], "getnumenergygroup": [281, 328], "countfuelaxialblock": [281, 328], "getfirstfuelblockaxialnod": [281, 328], "getassembliesinr": [281, 328], "getmaxassembliesinhexr": [281, 328], "getassembliesinsquareorhexr": [281, 328], "getassembliesincircular": [281, 328], "buildcircularringdictionari": [281, 328], "getassemblybynam": [281, 328], "getnozzletyp": [281, 328], "getblockbynam": [281, 328], "getblocksbyindic": [281, 328], "genblocksbylocnam": [281, 328], "getfirstassembli": [281, 328], "regenassemblylist": [281, 282, 328], "getallxssuffix": [281, 328], "getnuclidecategori": [281, 328, 359], "summarizenuclidecategori": [281, 328], "getlocationcont": [281, 328], "makelocationlookup": [281, 328], "getfluxvector": [281, 328], "getassembliesoftyp": [281, 328], "getassemblywithassemnum": [281, 328], "getassemblywithstringloc": [281, 328], "getassemblypitch": [281, 328], "findneighbor": [281, 328], "setmovelist": [281, 328], "createfreshfe": [281, 328], "createassemblyoftyp": [281, 328, 492], "saveallflux": [281, 328], "getassembliesonsymmetrylin": [281, 328], "getcoreradiu": [281, 328], "findallmeshpoint": [281, 328, 359, 360], "findallaxialmeshpoint": [281, 282, 328], "updateaxialmesh": [281, 285, 312, 328], "findaxialmeshindexof": [281, 328], "addmorenod": [281, 328], "findallazimeshpoint": [281, 328], "findallradmeshpoint": [281, 328], "getmaxblockparam": [281, 328], "gettotalblockparam": [281, 328], "getmaxnumpin": [281, 328], "getminimumpercentfluxinfuel": [281, 328], "getavgtemp": [281, 328], "growtofullcor": [281, 323, 328, 349, 474, 482], "setpitchuniform": [281, 328], "calcblockmax": [281, 328], "getfuelbottomheight": [281, 328], "processload": [281, 312, 328, 482], "buildmanualzon": [281, 328], "tertiari": [281, 330], "annular": [281, 304, 305, 330, 352], "shield_block": [281, 330], "slug": [281, 330, 492], "starter": [281, 330, 488], "blanket": [281, 287, 330], "booster": [281, 328, 330], "grid_plat": [281, 321, 330, 501], "handling_socket": [281, 321, 330], "inlet_nozzl": [281, 321, 330], "liner": [281, 308, 314, 321, 322, 330, 334, 478, 479], "wire": [281, 282, 285, 304, 305, 321, 322, 328, 330, 352, 411, 473, 482, 486, 491, 492, 501], "intercool": [281, 308, 314, 330, 352, 463, 473, 486, 492, 501], "load_pad": [281, 330], "skid": [281, 330, 501], "interductcool": [281, 330], "dspacerinsid": [281, 330], "guide_tub": [281, 321, 330, 493], "fission_chamb": [281, 330, 493], "core_barrel": [281, 330], "batchmassaddit": [281, 330], "poison": [281, 282, 300, 330, 501], "moveabl": [281, 330, 496], "fromstringignoreerror": [281, 330], "fromstr": [281, 330, 331], "tostr": [281, 330, 356, 484], "fromani": [281, 331], "null": [281, 331, 352, 353, 363], "full_cor": [281, 331], "third_cor": [281, 331, 465], "quarter_cor": [281, 331], "eighth_cor": [281, 331], "sixteenth_cor": [281, 331], "symmetryfactor": [281, 285, 331], "no_symmetri": [281, 331], "hassymmetri": [281, 331], "valid_symmetri": [281, 331], "createvalidsymmetrystr": [281, 331], "checkvalidsymmetri": [281, 331], "incrementassemnum": [281, 347], "root_tag": [281, 349], "readgeomfromfil": [281, 349], "readgeomfromstream": [281, 349], "togridblueprint": [281, 349], "modifyeqpath": [281, 349], "writegeom": [281, 349], "valid_typ": [281, 362], "addloc": [281, 362], "removeloc": [281, 362], "additem": [281, 362], "removeitem": [281, 362], "addzon": [281, 362], "removezon": [281, 362], "checkdupl": [281, 362], "getzoneloc": [281, 362], "getallloc": [281, 362], "findzoneitisin": [281, 362], "sortzon": [281, 362], "typ": [282, 308, 490], "assemnum": [282, 285, 328, 351, 481, 496, 497, 501], "compli": [282, 443], "newnum": 282, "impli": [282, 328, 363, 390, 405, 479, 492, 493, 501], "somewher": [282, 285, 338, 402, 411, 444], "plane": [282, 334, 337, 339, 439, 486, 501], "outlet": [282, 351, 488, 496, 497, 499, 501], "refa": 282, "zeroatfuel": 282, "zeroesatfuel": 282, "enrichthresh": 282, "zbottom": [282, 285, 497], "resid": [282, 338, 362, 497, 501], "refmesh": 282, "stick": 282, "topindex": [282, 497], "snap": [282, 328], "rebusoutput": 282, "blockmesh": 282, "conservemassflag": 282, "depict": [282, 479], "slide": 282, "blockheight": 282, "returnbottomz": 282, "returntopz": 282, "zcoord": [282, 468], "blocksandcoord": 282, "bottomz": 282, "typenam": [282, 308, 414], "mergeblock": 282, "targetblock": 282, "zindex": [282, 328], "bindex": 282, "zlower": 282, "zupper": 282, "blockinfo": 282, "blockobj": 282, "overlapheightincm": 282, "block3": 282, "block2": 282, "block1": 282, "interptyp": 282, "fillvalu": [282, 414], "thoutlettemperatur": 282, "paramdefinedat": 282, "extrapol": [282, 407, 501], "spline": 282, "interp1d": 282, "nearest": [282, 328], "slinear": 282, "quadrat": 282, "cubic": 282, "rough": 282, "valatz": 282, "extrapolol": 282, "nonphys": 282, "spatialgrid": [282, 285, 290, 308, 328, 334, 339, 348, 351, 352, 444, 465, 481, 486, 491], "wise": [282, 310, 311, 312, 313, 352, 414, 499, 501], "spatialloc": [282, 285, 290, 308, 328, 332, 337, 338, 339, 465, 466, 474, 486, 488, 493, 503], "ztop": [282, 285, 497], "reorder": 282, "blocktypespec": [282, 328], "blockcount": 282, "dimnam": [282, 285], "rad": [282, 285, 314, 469], "angl": [282, 285, 303, 396, 439, 501], "radian": [282, 285, 316, 340, 407, 439], "clockwis": [282, 285, 334, 337, 405, 497], "assemblyparametercollect": [282, 338], "divis": [282, 328, 479, 486], "subdivid": 282, "axialmesh": [282, 459, 482, 499], "azimuth": [282, 286, 307, 328, 340, 496], "classvar": 285, "pinspatialloc": 285, "gloss": 285, "axialindex": [285, 288, 481], "inher": [285, 396, 449, 491, 504], "b0120": 285, "005": [285, 328, 481, 486, 501], "negativearea": 285, "multiplicti": 285, "ringnumb": 285, "fastest": [285, 305, 308], "transpos": 285, "clock": [285, 497], "pinmgflux": [285, 497], "5th": 285, "6th": [285, 496, 497, 499], "modifiedheight": 285, "conservemass": 285, "adjustlist": 285, "bottleneck": 285, "fly": [285, 312, 337, 338, 481], "numpin": 285, "newenrich": [285, 308], "central": [285, 328, 334, 336, 365, 444, 451, 479, 493], "bisect": 285, "trisect": 285, "overhang": 285, "scaleparamsrelatedtosymmetri": [285, 309, 315], "returnmass": 285, "bolblock": [285, 319], "hm": [285, 308, 481, 497], "initialload": 285, "ecpt": [285, 319], "hmden": [285, 308], "importgeom": [285, 307, 328], "_updateblockparametersafterdeplet": 285, "heighthot": 285, "initialb10componentvol": [285, 359, 497], "breplac": 285, "replacementblock": 285, "blist": [285, 411], "blist2": [285, 411], "recomputeareafract": 285, "stai": [285, 308, 312, 352, 363, 441], "linkedcomp": 285, "componentlist": [285, 312], "otherblock": 285, "among": [285, 302, 308, 447, 479, 501, 503], "compnam": 285, "dimval": 285, "betwen": 285, "returncomp": 285, "largestcompon": 285, "updatebolparam": 285, "settingpitch": 285, "setdimens": [285, 302, 305], "034": [285, 486], "phi_e": 285, "mfp": 285, "mfpab": 285, "diffusionlength": 285, "thrz": [285, 307], "updatedim": [285, 302, 305, 307], "optimizationinterfac": [285, 307, 328], "modifycas": [285, 307], "fuel001": 285, "fuel169": 285, "169": [285, 297, 298, 501], "tracklength": [285, 305, 308], "integratedflux": [285, 305, 308], "lfpname": [285, 305, 308], "targetcompon": 285, "centroid": [285, 328, 338, 341, 344, 438], "localcoordin": 285, "totalenergygenconst": 285, "fissionenergygenconst": 285, "energydepconst": 285, "umc": 285, "frequent": [285, 308, 328, 348, 396, 443, 486, 492], "determinist": [285, 501], "makeassemwithuniformmesh": [285, 309, 327], "powerkeysuffix": 285, "linpowbypin": [285, 497], "pinloc": [285, 482, 497], "elig": 285, "assembl": [285, 501], "pintoductgap": 285, "diameter": 285, "face": [285, 292, 337, 411, 451, 479, 482], "rotnum": 285, "contact": [285, 407, 479, 501], "spacer": [285, 492], "pinpitch": 285, "wet": 285, "perimet": [285, 303, 337, 353], "4a": 285, "minu": [285, 492, 496], "widthout": [285, 303, 304, 307, 353, 493, 501], "pertain": 286, "loader": [286, 289, 291, 305], "rigidli": 286, "adher": 286, "mymaterialmodification1": 286, "mymaterialmodification2": 286, "hotchannelfactor": [286, 496, 501], "twrpclad": [286, 501], "yamlstr": [286, 293, 298], "griddesign": [286, 473], "roundtrip": 286, "blueprintsobject": 286, "closur": 286, "irrelev": [286, 378], "inp": [286, 315, 378, 408], "textio": [286, 437], "attribute_collect": [286, 287, 288, 289, 290, 291, 292], "attributecollect": [286, 287, 289, 290, 291, 292], "cloader": 286, "10x": [286, 437], "roundtripload": 286, "submesh": [286, 326, 328, 482], "sophist": [286, 290, 437], "stabil": [286, 479, 501], "portion": [286, 389, 501], "test_assemblyblueprint": [286, 293], "testmaterialmodif": [286, 293, 294, 300], "test_blockblueprint": [286, 293], "testgriddedblock": [286, 293, 295], "test_blueprint": [286, 293], "testblueprint": [286, 293, 296], "testblueprintsschema": [286, 293, 296], "test_componentblueprint": [286, 293], "testcomponentblueprint": [286, 293, 297], "test_customisotop": [286, 293, 296], "testcustomisotop": [286, 293, 298], "testcustomisotopics_errorcondit": [286, 293, 298], "testnuclideflagsexpans": [286, 293, 298], "test_gridblueprint": [286, 293], "testgridbproundtrip": [286, 293, 299], "testgridblueprintssect": [286, 293, 299], "testrztgridblueprint": [286, 293, 299], "test_materialmodif": [286, 293], "test_reactorblueprint": [286, 292, 293], "testreactorblueprint": [286, 293, 301], "key_typ": [286, 287, 291], "value_typ": [286, 287, 291], "getassemclass": [286, 287], "item_typ": [286, 287, 288, 289, 290, 291, 292], "byspecifi": [286, 287], "from_yaml": [286, 289, 291], "to_yaml": [286, 289], "setcustomdens": [286, 289], "readfromlatticemap": [286, 290], "expandtoful": [286, 290], "getmultiloc": [286, 290], "fileasactiveorinert": [286, 291], "from_yaml_key_v": [286, 291], "decoupl": [287, 482], "yamlizablestr": [287, 291], "mapattributecollect": [287, 291], "underneath": 287, "keyedlist": [287, 288, 289, 290, 291, 292], "_loadcomposit": 287, "keyedlistattributecollect": [287, 288, 289, 290, 291, 292], "axialmeshpoint": [288, 473], "materialinput": 288, "byblock": 288, "_rtd": 289, "matmod": 289, "constructedcompon": 289, "_resolvenuclid": 289, "isotopicdepletioninterfac": 289, "isdeplet": 289, "pointer": [289, 488], "subassembli": [290, 481], "sh": [290, 492, 501], "rr": [290, 473, 492], "oc": [290, 492], "pc": [290, 475, 492], "latticemap": [290, 473], "latticedimens": 290, "gridbound": 290, "gridcont": 290, "__new__": [290, 292, 338], "setattr": [290, 292], "lazili": [290, 403, 414], "unfold": 290, "rudimentari": 290, "domain": [290, 328, 331, 336, 396, 496], "latticeid": [290, 493, 501], "bluep": 290, "trymap": 290, "cobbl": 290, "regardless": [290, 308, 315, 339, 372, 432, 488, 501], "creator": 291, "o17": [291, 493, 501], "o18": [291, 399, 493], "reachabl": 291, "expandto": [291, 298, 481, 493, 501], "activeset": 291, "inertset": 291, "inert": 291, "yamlizablefloat": 291, "rtd": 291, "key_nod": 291, "val_nod": 291, "key_attr": 291, "customisotopicsnam": [291, 498], "customisotopicnam": 291, "customisoptop": 291, "infrequ": 291, "cm247": [291, 298, 486], "b11": [291, 486], "intellig": 291, "elementalstokeep": 291, "oxygen16": 291, "examin": [291, 315, 328, 501], "conf_fission_product_library_nam": 291, "proven": 292, "loadcomp": 292, "initnewreactor": [292, 309, 323, 327], "twoblockinput_correct": [293, 294], "twoblockinput_wrongmeshpoint": [293, 294], "twoblockinput_wrongheight": [293, 294], "twoblockinput_wrongxstyp": [293, 294], "twoblockinput_wrongmatmod": [293, 294], "loadcustomassembli": [293, 294], "test_checkparamconsist": [293, 294], "test_constructspatialgrid": [293, 295], "test_getlocatorsatlatticeposit": [293, 295], "test_blocklattic": [293, 295], "test_nonlatticecomponenthasrightmult": [293, 295], "test_explicitflag": [293, 295], "test_densityconsistentwithcomponentconstructor": [293, 295], "test_roundtripcompletebp": [293, 296], "test_getassemblytypebyspecifi": [293, 296], "test_specialisotopicvector": [293, 296], "test_componentdimens": [293, 296], "test_tracenuclid": [293, 296], "test_noduplicatekeysinyamlblueprint": [293, 296], "test_assemblyparamet": [293, 296], "test_nuclidesmc2v2": [293, 296], "test_nuclidesmc2v3": [293, 296], "test_merg": [293, 296], "test_cladding_invalid": [293, 296], "test_withoutblock": [293, 296], "test_toplevelcomponentinput": [293, 296], "test_componentgroupinput": [293, 296], "componentstr": [293, 297], "test_componentinitializationincompleteburnchain": [293, 297], "test_componentinitializationcontrolcustomisotop": [293, 297], "test_autodeplet": [293, 297], "test_componentinitializationamericiumcustomisotop": [293, 297], "test_componentinitializationthoriumburncustomisotop": [293, 297], "test_componentinitializationthoriumnoburncustomisotop": [293, 297], "yamlpreambl": [293, 298], "yamlgoodblock": [293, 298], "yamlbadblock": [293, 298], "yamlstringwitherror": [293, 298], "test_unmodifi": [293, 298], "test_massfractionsareappli": [293, 298], "test_densitiesappliedtononcustommateri": [293, 298], "test_customdensitylogsanderror": [293, 298], "test_numberfract": [293, 298], "test_numberdens": [293, 298], "test_numberdensitiesanchor": [293, 298], "test_expandednatur": [293, 298], "test_unrepresentedareonlynatur": [293, 298], "test_densitymustbeposit": [293, 298], "test_nonconformantelementnam": [293, 298], "test_numberdensitiescannotspecifydens": [293, 298], "test_cont": [293, 299], "test_tinymap": [293, 299], "test_simpleread": [293, 299, 301], "test_simplereadlatticemap": [293, 299], "test_simplereadnolatticemap": [293, 299], "test_construct": [293, 299, 301], "test_geomfil": [293, 299], "uzrinput": [293, 300], "b4cinput": [293, 300], "loaduzrassembli": [293, 300], "loadb4cassembli": [293, 300], "test_nomaterialmodif": [293, 300], "test_u235_wt_frac_modif": [293, 300], "test_u235_wt_frac_bycomponent_modification1": [293, 300], "test_u235_wt_frac_bycomponent_modification2": [293, 300], "test_materialmodificationlength": [293, 300], "test_invalidcomponentmodif": [293, 300], "test_zrwtfracmodif": [293, 300], "test_bothu235zrwtfracmodif": [293, 300], "test_checkbycomponentmaterialinput": [293, 300], "test_filtermaterialinput": [293, 300], "test_invalidmatmodnam": [293, 300], "test_matmodsupthemro": [293, 300], "test_theoreticaldens": [293, 300], "test_materialdatasummari": [293, 301], "test_spentfuelpool": [293, 301], "assemblyinput": 294, "intermedi": [295, 501, 503], "faithfulli": [296, 327, 503], "robust": [296, 308], "tip": [296, 327, 396, 446, 482, 496], "prove": [296, 300, 353, 362, 376, 394, 449, 451, 479], "mc2v3": [296, 501], "86602": [297, 298, 501], "dump2": [298, 486], "dump1": [298, 486], "pu236": [298, 486], "u236": [298, 486, 490, 501], "am243": [298, 486], "cm242": [298, 486], "cm245": [298, 486], "np238": [298, 486], "cm243": [298, 486], "cm246": [298, 486], "992742": 298, "007204": [298, 490], "000054": 298, "992650": 298, "007295": 298, "000055": 298, "u_isotop": 298, "6539102e": 298, "5254048e": 298, "7967943e": 298, "block_0": 298, "basic_fuel": 298, "block_1": 298, "block_2": 298, "block_3": 298, "block_4": 298, "block_5": 298, "block_6": 298, "overspecifi": 298, "block_7": 298, "block_8": 298, "block_9": 298, "assembly_b": 298, "assembly_c": 298, "assembly_d": 298, "unmodifi": 298, "fe54": [298, 486], "block_poison": 300, "mro": 300, "bcomp": 302, "lowercas": 302, "mergewith": [302, 303, 304, 305, 307, 498], "componentparametercollect": [302, 305], "modarea": [302, 303, 304, 307, 498, 501], "leftov": [302, 305], "othercompon": [302, 305], "freez": 302, "unshapedcomponentparametercollect": 302, "makemgfluxblock": 302, "makemassadditioncompon": 302, "circumst": [302, 305, 327, 328, 388, 403, 444, 480, 501, 507], "dh": 302, "pai": [302, 501], "attent": [302, 501], "companion": [302, 488], "thermal_expansion_dim": [302, 303, 304, 305, 307], "getcircleinnerdiamet": [302, 303, 304, 305, 482], "isencapsulatedbi": [302, 303], "getperimet": [302, 303], "getpitchdata": [302, 303, 305], "islatticecompon": [302, 303], "non_dimension_nam": [302, 305], "temperatureink": [302, 305], "setlink": [302, 305], "setproperti": [302, 305], "applymaterialmassfracstonumberdens": [302, 305, 312], "adjustdensityforheightexpans": [302, 305], "getheightfactor": [302, 305], "containsvoidmateri": [302, 305], "containssolidmateri": [302, 305], "setarea": [302, 305], "settemperatur": [302, 305, 463], "getmassenrich": [302, 305], "dimensionislink": [302, 305], "getdimensionnameslinkedto": [302, 305], "clearlinkedcach": [302, 305], "getlinkedcompon": [302, 305], "getthermalexpansionfactor": [302, 305], "setdimensionreport": [302, 305], "mergenuclidesinto": [302, 305], "finalizeloadingfromdb": [302, 305], "circleparametercollect": 303, "www3": 303, "wolframalpha": 303, "hexagonparametercollect": 303, "lengthout": [303, 304, 307, 353, 501], "lengthinn": [303, 307, 353, 501], "widthinn": [303, 307, 353, 493, 501], "rectangleparametercollect": 303, "hollow": [303, 304, 492], "lenth": 303, "triangleparametercollect": 303, "holeod": [304, 353, 501], "nhole": [304, 353, 501], "hole": [304, 353, 416, 481, 492, 501], "holedhexagonparametercollect": 304, "holeop": [304, 353, 501], "hexholedcircleparametercollect": 304, "holedrectangleparametercollect": 304, "holedsquareparametercollect": 304, "axialpitch": [304, 353, 473, 492, 501], "helixdiamet": [304, 353, 473, 492, 501], "spiral": 304, "mathworld": 304, "wolfram": 304, "climb": 304, "exterior": 304, "interior": [304, 482], "helixparametercollect": 304, "specfi": 305, "componettyp": 305, "addition": [305, 314, 447, 479, 501], "inputtemperatureinc": [305, 312, 313, 503], "othercomp": 305, "othercompkei": 305, "newhot": 305, "accommod": [305, 411, 444], "lfpcollect": [305, 308], "proport": [305, 458], "rho": [305, 308, 399], "f_n": 305, "dn": 305, "sim": 305, "heterogen": [305, 314, 501], "nden": [305, 308, 457, 486, 497], "unlist": [305, 308], "ambigu": 305, "blend": [305, 501], "sum_i": [305, 308, 327], "a_i": [305, 308, 504], "n_a": [305, 308], "avogadro": 305, "retainlink": 305, "indirectli": [305, 399], "intersect": 305, "percentag": [305, 312, 328, 450, 497, 498], "includenuclid": [305, 308, 486], "comptomergewith": 305, "pervious": 305, "whichev": [305, 328, 444, 446, 479], "weigh": [305, 328], "doubli": [305, 351], "fetch": [305, 343], "sphereparametercollect": 307, "heightout": [307, 353, 501], "heightinn": [307, 353, 501], "cuboid": 307, "centric": 307, "cubeparametercollect": 307, "inner_radiu": [307, 353, 501], "outer_radiu": [307, 353, 501], "inner_theta": [307, 501], "outer_theta": [307, 501], "283185307179586": 307, "xxxx": 307, "xxxxxxx": 307, "refvolum": 307, "refheight": 307, "radialsegmentparametercollect": 307, "radius_differenti": [307, 353, 501], "inner_axi": [307, 353, 501], "azimuthal_differenti": [307, 501], "thrzactiveheight": 307, "thrzactiveradiu": 307, "outer_axi": 307, "principl": 308, "everywher": 308, "analogi": 308, "unsaf": 308, "unexpect": [308, 450], "uint64": 308, "uint8": 308, "unsign": 308, "hood": [308, 492], "particip": [308, 481, 501], "gang": 308, "far": [308, 396, 480, 488, 491, 499, 506, 507], "unstabl": [308, 481], "armiobjectparametercollect": [308, 329, 345, 348], "rapidli": [308, 479], "weak": 308, "complabel": 308, "unpickl": [308, 338, 395], "dig": 308, "__reduce__": [308, 336], "testfuel": [308, 328], "insensit": [308, 339], "typeid": 308, "bitwis": [308, 344, 403, 422], "qualifi": [308, 446, 481], "disallow": 308, "volfrac": [308, 463], "test_consistentareawithoverlappingcompon": [308, 350, 352], "insur": 308, "ai": 308, "m_i": 308, "sum_j": 308, "m_j": 308, "m_": 308, "nuclidetoadjust": 308, "elementtoadjust": 308, "nuclidetoholdconst": 308, "elementtoholdconst": 308, "5zr": 308, "oi": 308, "f1": 308, "f2": 308, "fn": 308, "caller": 308, "_distanc": 308, "ntot": 308, "unnatur": 308, "anticip": 308, "dealt": 308, "therebi": 308, "nearli": [308, 481, 488, 503], "volumeintegr": [308, 328], "addsymmetricposit": 308, "calcbasedonfullobj": 308, "postion": 308, "weightingparam": 308, "volumeaverag": 308, "grandchildren": 308, "x_i": 308, "w_i": 308, "unset": 308, "returnobj": 308, "sought": 308, "magnitud": [308, 312, 339], "pertin": [308, 449], "formula": [308, 327, 438, 482, 489], "mini": [308, 407], "maxi": 308, "minj": 308, "maxj": 308, "mink": 308, "maxk": 308, "shapeclass": 308, "materialnam": [308, 472], "selector": 308, "componentswiththismat": 308, "npin": [308, 497], "elementalnuclid": 308, "naturalnuclid": 308, "domin": 308, "tripl": [308, 338, 496, 497, 499], "pump": [308, 479, 493, 496, 499, 501], "apart": 308, "spatialoc": 308, "seq": [308, 406], "unari": 308, "getattr": 308, "child1": 308, "child2": 308, "child3": 308, "grandchild1": 308, "grandchild2": 308, "grandchild3": 308, "isinst": [308, 331], "synchron": [308, 343, 447], "revert": [308, 326, 371, 373, 501], "parmeterdefinit": [308, 343], "ndensiti": 308, "rxnrate": 308, "nf": 308, "compris": [308, 501], "rabc": 308, "implic": [308, 338], "unclear": 308, "__exit__": 308, "xssuffix": 308, "_label_": 308, "rxn": 308, "n3n": 308, "tediou": [309, 479], "autom": [309, 414, 446, 458, 478, 491, 501], "assemblyaxiallinkag": [309, 310, 312], "getdefaultreferenceassem": [309, 310, 312], "makeassemsabletosnaptouniformmesh": [309, 310, 312], "expansiondata": [309, 310, 312, 321], "getsolidcompon": [309, 310, 313, 321], "generalparametersweepconvert": [309, 317], "parametersweepconvert": [309, 317, 318], "custommodifi": [309, 317, 318], "test_axialexpansionchang": [309, 320, 482], "axialexpansiontestbas": [309, 320, 321], "testaxialexpansionheight": [309, 320, 321], "testconserv": [309, 320, 321], "testmanagecoremesh": [309, 320, 321], "testexcept": [309, 320, 321], "testdeterminetargetcompon": [309, 320, 321], "testgetsolidcompon": [309, 320, 321], "testinputheightsconsideredhot": [309, 320, 321], "checkcoldblockheight": [309, 320, 321], "testlinkag": [309, 320, 321], "buildtestassemblywithfakemateri": [309, 320, 321], "fakemat": [309, 320, 321], "fakematexcept": [309, 320, 321], "test_blockconvert": [309, 320], "buildsimplefuelblocknegativearea": [309, 320, 322], "testblockconvert": [309, 320, 322], "testtocircl": [309, 320, 322], "buildcontrolblockwithlinkednegativeareacompon": [309, 320, 322], "test_geometryconvert": [309, 320], "testgeometryconvert": [309, 320, 323], "testhextorzconvert": [309, 320, 323], "testedgeassemblychang": [309, 320, 323], "testthirdcorehextofullcorechang": [309, 320, 323], "test_meshconvert": [309, 320], "testrzreactormeshconvert": [309, 320, 324], "test_pintypeblockconvert": [309, 320], "testpintypeconvert": [309, 320, 325], "test_uniformmesh": [309, 320], "dummyfluxopt": [309, 320, 326], "testconverterfactori": [309, 320, 326], "testassemblyuniformmesh": [309, 320, 326], "testuniformmeshgener": [309, 320, 326], "testuniformmeshcompon": [309, 320, 326], "applynonuniformheightdistribut": [309, 320, 326], "testuniformmesh": [309, 320, 326], "testgammauniformmesh": [309, 320, 326], "testparamconvers": [309, 320, 326], "testuniformmeshnonuniformassemflag": [309, 320, 326], "dissolvecomponentintocompon": [309, 314], "restablishlink": [309, 314], "plotconvertedblock": [309, 314, 458], "addr": [309, 315, 323], "createhomogenizedrztblock": [309, 315], "plotconvertedreactor": [309, 315, 327, 459], "expected_input_symmetri": [309, 315], "restorepreviousgeometri": [309, 315], "addedgeassembli": [309, 315], "removeedgeassembli": [309, 315], "generatemesh": [309, 316], "writemeshdata": [309, 316], "setringstoconvert": [309, 316], "setaxialmesh": [309, 316], "setthetamesh": [309, 316], "generatecommonmesh": [309, 326, 327], "reactorparammappingcategori": [309, 327], "blockparammappingcategori": [309, 327], "applystatetoorigin": [309, 326, 327], "setassemblystatefromoverlap": [309, 327], "clearstateonassembli": [309, 327], "updatereactionr": [309, 327], "paramsett": [309, 327], "paramgett": [309, 327], "expandcolddimstohot": [310, 312], "performprescribedaxialexpans": [310, 312], "performthermalaxialexpans": [310, 312], "setassembli": [310, 312], "applycoldheightmassincreas": [310, 312], "axiallyexpandassembli": [310, 312], "managecoremesh": [310, 312], "setexpansionfactor": [310, 313], "updatecomponenttempsby1dtempfield": [310, 313], "updatecomponenttemp": [310, 313], "computethermalexpansionfactor": [310, 313], "getexpansionfactor": [310, 313], "determinetargetcompon": [310, 313, 321], "istargetcompon": [310, 313], "stdassem": 311, "linkag": [311, 312, 321], "linkedblock": 311, "linkedcompon": 311, "nonuniformassemflag": [312, 501], "referenceassembli": 312, "isdetailedaxialexpans": 312, "disjoint": 312, "finest": 312, "componentlst": [312, 313], "setfuel": [312, 313], "tempgrid": [312, 313, 321], "tempfield": [312, 313], "expandfromtinputtothot": [312, 313], "perfectli": [312, 387, 449], "gradient": 312, "loss": [312, 496, 497, 501], "tall": [312, 333, 492], "cheap": [312, 479], "oldmesh": 312, "_isfuellock": [313, 321], "expfrac": 313, "l1": [313, 321], "retriv": 313, "flagofinterest": 313, "_componentdeterminesblockheight": [313, 321], "sourceblock": [314, 458], "solutenam": 314, "solventnam": 314, "minid": 314, "_sourceblock": 314, "solvent": [314, 322], "dissolv": [314, 322], "solutelink": 314, "sane": 314, "specifiedminid": 314, "_verifyexpans": 314, "farthest": 314, "driverfuelblock": [314, 458], "concentr": [314, 501], "surround": [314, 478, 501], "mcc3": 314, "pincomponentsring1": 314, "pincomponentsring2": 314, "nonpin": 314, "annulu": [314, 492, 501], "radii": 314, "sidelength": 314, "disttorodcent": 314, "numrod": 314, "rodradii": 314, "radiilist": 314, "radtorodcent": 314, "thicknessoneachsid": 314, "r_1": 314, "equiv": 314, "r_2": 314, "texttt": 314, "reactorconvert": 315, "usemostcommonxsid": 315, "expandreactor": 315, "geomconv": 315, "newr": 315, "convreactor": [315, 327, 459], "dif3dinterfac": 315, "dif3drz": 315, "rzgeom_actu": 315, "overwritelist": 315, "ringstoadd": 315, "furthest": [315, 496], "converterset": [315, 316, 459], "stricthomogen": 315, "rztheta": [315, 324, 339, 479], "uniformthetamesh": [315, 316, 459], "thetabin": [315, 316, 459], "radialconversiontyp": [315, 459], "axialconversiontyp": [315, 459], "_rzthetareactormeshconverterbyaxialcoordin": [315, 316], "_rzthetareactormeshconverterbyaxialbin": [315, 316], "homogenizeaxiallybyflag": 315, "byringcomposit": 315, "radialmesh": 315, "homblock": 315, "loweraxialz": 315, "upperaxialz": 315, "radialthetazoneassem": 315, "fnamebas": 315, "coremap": [315, 486, 492], "explan": 315, "myreactor": 315, "sourcereactor": [315, 327], "undo": 315, "edgechang": 315, "difnt": 315, "paramstoscalesubset": 315, "_rzthetareactormeshconverterbyringcomposit": 316, "_rzthetareactormeshconverterbyaxialflag": 316, "inputlist": 316, "listnam": 316, "expectedvalu": 316, "adjustlastvalu": 316, "totalnumdatapoint": 316, "numperbin": 316, "minnum": 316, "settingtomodifi": 318, "applycustomperturb": 318, "sd": 319, "fuel_r": 319, "clad_ir": 319, "fuel_od": 319, "clad_id": 319, "steel_component_lst": [320, 321], "test_assemblyaxialexpansionheight": [320, 321], "expandassemformassconservationtest": [320, 321], "test_thermalexpansioncontractionconservation_simpl": [320, 321], "test_thermalexpansioncontractionconservation_complex": [320, 321], "complexconservationtest": [320, 321], "test_prescribedexpansioncontractionconserv": [320, 321], "test_targetcomponentmassconserv": [320, 321], "test_nomovementaclp": [320, 321], "test_reset": [320, 321], "test_computethermalexpansionfactor": [320, 321], "test_managecoremesh": [320, 321], "test_istopdummyblockpres": [320, 321], "test_setexpansionfactor": [320, 321], "test_updatecomponenttempsby1dtempfieldvalueerror": [320, 321], "test_updatecomponenttempsby1dtempfieldruntimeerror": [320, 321], "test_assemblyaxialexpansionexcept": [320, 321], "test_isfuellock": [320, 321], "test_determinelink": [320, 321], "test_getlinkedcompon": [320, 321], "test_determinetargetcompon": [320, 321], "test_determinetargetcomponentblockwithmultipleflag": [320, 321], "test_specifytargetcomponent_notfound": [320, 321], "test_specifytargetcomponent_singlesolid": [320, 321], "test_specifytargetcomponet_multiplefound": [320, 321], "test_manuallysettargetcompon": [320, 321], "test_getsolidcompon": [320, 321], "test_coldassemblyexpans": [320, 321], "checkcoldheightblockmass": [320, 321], "test_overlappingsolidpin": [320, 321], "test_differentmultnotoverlap": [320, 321], "test_solidpinnotoverlappingannulu": [320, 321], "test_solidpinoverlappingwithannulu": [320, 321], "test_annularpinnotoverlappingwithannulu": [320, 321], "test_annularpinoverlappingwithannul": [320, 321], "test_thinannularpinoverlappingwiththickannulu": [320, 321], "test_annularhexoverlappingthickannularhex": [320, 321], "test_liquid": [320, 321], "test_unshapedcomponentandcircl": [320, 321], "test_dissolvewireintocool": [320, 322], "test_dissolvelinerintoclad": [320, 322], "test_dissolvemultipl": [320, 322], "test_dissolvezeroarea": [320, 322], "test_dissolveintozeroarea": [320, 322], "test_dissolvenegativearea": [320, 322], "test_dissolveintonegativearea": [320, 322], "test_build_nthr": [320, 322], "test_convert": [320, 322, 323], "test_converthexwithfueldriv": [320, 322], "test_converthexwithfueldriveronnegativecomponentareablock": [320, 322], "test_convertcartesianlatticewithfueldriv": [320, 322], "test_fromhex": [320, 322], "test_fromringofrod": [320, 322], "test_addr": [320, 323], "test_setnumberoffuelassem": [320, 323], "test_getassembliesinsector": [320, 323], "test_createhomogenizedrztblock": [320, 323], "test_edgeassembli": [320, 323], "test_growtofullcorefromthirdcor": [320, 323], "test_initnewfullreactor": [320, 323], "test_skipgrowtofullcorewhenalreadyfullcor": [320, 323], "test_meshbyringcompositionaxialbinssmallcor": [320, 324], "test_meshbyringcompositionaxialcoordinatessmallcor": [320, 324], "test_meshbyringcompositionaxialflagssmallcor": [320, 324], "test_meshbyringcompositionaxialbinslargecor": [320, 324], "test_meshbyringcompositionaxialcoordinateslargecor": [320, 324], "test_meshbyringcompositionaxialflagslargecor": [320, 324], "test_adjustcladthicknessbyod": [320, 325], "test_adjustcladthicknessbyid": [320, 325], "test_converterfactori": [320, 326], "test_makeassemwithuniformmesh": [320, 326], "test_makeassemwithuniformmeshsubmesh": [320, 326], "test_makeassemuniformmeshparammappingsamemesh": [320, 326], "test_clearassemblyst": [320, 326], "test_computeaverageaxialmesh": [320, 326], "test_filtermesh": [320, 326], "test_filteredtopandbottom": [320, 326], "test_generatecommonmesh": [320, 326], "test_blueprintcopi": [320, 326], "test_convertnumberdens": [320, 326], "test_applystatetoorigin": [320, 326], "test_setstatefromoverlap": [320, 326], "test_reactorconvers": [320, 326], "137438953472": [321, 330], "274877906944": [321, 330], "549755813888": [321, 330], "1099511627776": [321, 330], "17592186044416": [321, 330], "140737488355328": [321, 330], "2251799813685248": [321, 330], "72057594037927936": [321, 330], "coldtemp": 321, "hotinlettemp": 321, "360": [321, 488, 501], "numtempgridpt": 321, "tempstep": 321, "inlet": [321, 488, 496, 497, 501], "nomin": [321, 479, 496, 497], "metric": [321, 479], "isotherm": 321, "caught": 321, "target_flags_in_preferred_ord": 321, "specifytargetcompon": 321, "r_armi_inp_cold_height": 321, "refsmallreactorbas": 321, "deltat": [321, 488], "bstd": 321, "bexp": 321, "flagtyp": 321, "underpredict": 321, "asserttyp": 321, "strforassert": 321, "componentstotest": 321, "assertionbool": 321, "commonarg": 321, "typea": 321, "typeb": 321, "annuli": 321, "setnumberoffuelassem": 323, "sourceassem": [326, 327], "newassem": [326, 492], "_decuspaxialmesh": 326, "dest": [326, 395], "pden": [326, 411, 474, 479, 486, 488, 497], "lost": [327, 447], "finer": [327, 492], "uniformreactor": 327, "minimummeshs": 327, "decusp": [327, 482], "uniformmeshminimums": [327, 501], "_computeaverageaxialmesh": 327, "cusp": 327, "reactorparamstomap": 327, "blockparamstomap": 327, "_setparamstoupd": 327, "reactorparamnam": 327, "blockparamnam": 327, "newmesh": 327, "mapnumberdens": 327, "includepincoordin": 327, "sourceassembli": 327, "destinationassembli": 327, "int_": 327, "z_1": 327, "z_2": 327, "dz": 327, "piecewis": [327, 407], "smarter": 327, "param1": 327, "val1": [327, 412, 447], "param2": 327, "val2": [327, 412, 447], "b2": 327, "pinquant": [327, 341, 344, 482], "powergener": [327, 497], "powerneutron": [327, 497], "powergamma": [327, 497], "paramdef": [327, 341, 343, 344], "overlappingblockinfo": 327, "h_i": 327, "refin": [328, 482, 501], "powerdens": [328, 482, 499, 501], "kghm": [328, 478, 482, 497], "kgfi": [328, 459, 482, 497], "trackassem": [328, 482, 501], "spend": [328, 451, 479], "constrain": [328, 339, 458, 459, 481, 492], "ringnum": 328, "overridecircularringmod": [328, 359], "startindex": [328, 348], "unoccupi": 328, "chargecycl": [328, 496], "indexbas": 328, "maxr": 328, "nring": 328, "nassmwithblank": 328, "read1d": 328, "assemtypespec": 328, "maxblock": 328, "circularringmod": [328, 501], "alist": 328, "fullcor": 328, "numedgeassem": 328, "_modifygeometryafterload": 328, "ringpitch": 328, "a0001": [328, 486], "sortkei": 328, "includebolassem": 328, "includesfp": 328, "includeal": 328, "similarli": [328, 343, 450, 493, 501], "_children": 328, "nozzletyp": [328, 496, 501], "nozzleid": 328, "a0001a": 328, "blocksbynam": 328, "blocksbylocnam": 328, "regener": [328, 493, 501], "btype": 328, "slipperi": 328, "detachallassembli": 328, "regrow": 328, "suffic": 328, "categor": [328, 330, 359, 371, 486], "broaden": [328, 504], "coolantnuclid": 328, "fuelnuclid": 328, "structurenuclid": 328, "assemblylevel": 328, "loccont": 328, "speedup": [328, 437, 443], "speed": [328, 482, 484, 501], "energyord": 328, "extsrc": [328, 497], "nxg": 328, "locationstr": 328, "assemblynam": 328, "foundassembli": 328, "showblank": 328, "duplicateassembliesonreflectiveboundari": 328, "neighbor": [328, 337, 339, 359, 483], "east": 328, "west": 328, "south": 328, "border": [328, 465], "asymmetr": 328, "getsymmetricequival": [328, 332, 333, 334, 336, 337, 338, 340], "assemblytyp": 328, "allflux": 328, "symmetrylineid": 328, "applysubmesh": 328, "endpoint": [328, 339], "meshval": 328, "imbalanc": 328, "trz": [328, 357], "xyz": [328, 468, 469], "float_dimension_decim": [328, 482], "9th": 328, "10th": 328, "repetit": [328, 339, 437, 497, 501], "heightcm": 328, "meshlist": 328, "extraassem": 328, "mcpnxt": 328, "flux2weight": 328, "avgtemp": 328, "pitchincm": 328, "lowestfuelheightincm": 328, "coreparametercollect": 328, "zonedefinit": [328, 362, 501], "002": [328, 362, 481, 486, 501], "simplest": [329, 359, 491, 501], "baseclass": 329, "freeli": 329, "2311582653024": 329, "dual": 329, "2311590971136": 329, "bind": [330, 343, 444, 501], "noun": 330, "adject": 330, "disambigu": 330, "bitfield": 330, "widen": 330, "led": [330, 501], "clearli": [330, 362, 501], "stori": 330, "substr": 330, "decid": [330, 345, 451], "canon": [330, 392], "mention": [330, 449], "plenti": 330, "lta": 330, "distinguish": [330, 493], "circul": 330, "bundl": [330, 492, 496, 497, 499], "128": [330, 344, 479], "256": [330, 344], "512": 330, "1024": 330, "2048": 330, "4096": 330, "8192": 330, "16384": 330, "32768": 330, "65536": 330, "131072": 330, "262144": 330, "524288": 330, "1048576": 330, "2097152": 330, "4194304": 330, "8388608": 330, "16777216": 330, "33554432": 330, "67108864": 330, "134217728": 330, "268435456": 330, "536870912": 330, "1073741824": 330, "2147483648": 330, "4294967296": 330, "8589934592": 330, "17179869184": 330, "34359738368": 330, "68719476736": 330, "2199023255552": 330, "4398046511104": 330, "8796093022208": 330, "35184372088832": 330, "70368744177664": 330, "281474976710656": 330, "562949953421312": 330, "1125899906842624": 330, "4503599627370496": 330, "9007199254740992": 330, "18014398509481984": 330, "36028797018963968": 330, "144115188075855872": 330, "288230376151711744": 330, "576460752303423488": 330, "1152921504606846976": 330, "2305843009213693952": 330, "4611686018427387904": 330, "9223372036854775808": 330, "18446744073709551616": 330, "36893488147419103232": 330, "straightforward": [331, 344, 492, 493, 501], "quarter": [331, 339, 493, 501], "harder": [331, 450], "proceed": [331, 480, 501, 507], "reliev": 331, "elif": [331, 449], "instrument": 331, "forbid": 331, "shapestr": 331, "symmetrystr": 331, "throughcenterassembli": 331, "symmetryinput": 331, "outcom": 331, "fromrectangl": [332, 334], "getglobalcoordin": [332, 338, 466, 467, 468, 469, 474, 486, 488, 493], "test_grid": [332, 415, 432], "testspatialloc": 332, "test_recurs": 332, "getringpo": [332, 334, 337, 338, 339, 340], "indicestoringpo": [332, 337], "fromncel": [332, 333, 465], "locatorindomain": [332, 333, 334, 336, 337, 340], "getindicesfromringandpo": [332, 333, 334, 337, 339, 340], "getminimumr": [332, 333, 334, 337, 339, 340], "getpositionsinr": [332, 333, 334, 337, 339, 340], "overlapswhichsymmetrylin": [332, 333, 334, 336, 337, 340], "changepitch": [332, 334, 337], "isaxialonli": [332, 336, 339], "getcoordin": [332, 336, 339, 340], "getcellbas": [332, 336, 339], "getcelltop": [332, 336, 339], "cornersup": [332, 337, 484], "frompitch": [332, 337, 465, 467], "getneighboringcellindic": [332, 337, 339, 483], "trianglecoord": [332, 337], "isinfirstthird": [332, 337], "generatesortedhexlocationlist": [332, 337, 467], "detachedcopi": [332, 338], "parentloc": [332, 338], "getcompleteindic": [332, 338], "getlocalcoordin": [332, 338], "getglobalcellbas": [332, 338], "getglobalcelltop": [332, 338], "distanceto": [332, 338], "unitsteplimit": [332, 333, 334, 337, 339, 340], "unitstep": [332, 333, 334, 337, 339, 340, 468], "getaboveandbelowcellindic": [332, 339], "getindexbound": [332, 339], "getbound": [332, 339], "getlocatorfromringandpo": [332, 339], "getallindic": [332, 339], "fromgeom": [332, 340], "indicesofbound": [332, 340], "__init_": 333, "numcel": [333, 405], "symmetryoverlap": [333, 334, 336, 337], "noreturn": [333, 334, 340], "tricker": 334, "lai": 334, "illustr": [334, 337], "draw": [334, 414, 423, 475], "ax": [334, 338, 339, 407, 411, 463, 465, 467, 468, 469, 472, 475], "numr": [334, 337, 405], "isoffset": 334, "manhattan": 334, "quadrant": [334, 339], "diagon": [334, 337], "childrenbyloc": [334, 444], "_isthroughcent": 334, "xw": 334, "yw": 334, "dx": 336, "boundary_cent": [336, 337], "nativecoord": [336, 338, 339, 340], "hashabl": 336, "happi": [336, 446, 501], "__getstate__": [336, 343, 358, 376, 389], "__setstate__": 336, "_____": 337, "Being": [337, 479], "newpitchcm": 337, "includetopedg": 337, "nloc": 337, "a3001": 337, "a3003": 337, "immut": [338, 344, 365, 412, 481, 482], "unbeliev": 338, "inexplic": [338, 411, 413], "strip": 338, "annoi": 338, "tagalong": 338, "rack": 338, "awkward": 338, "ok": [338, 487], "todo": [338, 450], "mygrid": 338, "parentgrid": 338, "vice": 339, "versa": 339, "dxi": 339, "dxj": 339, "jxk": 339, "dyi": 339, "dyj": 339, "dyk": 339, "dzi": 339, "dzj": 339, "dzk": 339, "dmn": 339, "0th": 339, "settl": [339, 496], "struggl": [339, 504], "orthogon": 339, "wast": 339, "compact": 339, "intuit": [339, 345, 501], "phantom": 339, "2x": 339, "backrefer": 339, "cleaner": [339, 344, 420], "disadvantag": 339, "pollut": 339, "recreat": 339, "exsist": 339, "dens": [339, 503], "unphys": [339, 488], "zeta": 340, "2pi": [340, 439], "geominfo": 340, "readgeomxml": 340, "rad0": 340, "rad1": 340, "theta0": 340, "theta1": 340, "0001": [340, 491], "350": 341, "hidden": [341, 343], "_p_": 341, "_p_cyclelength": 341, "circumv": 341, "rational": 341, "behind": [341, 449, 481, 489, 492], "5e13": 341, "fueltemp": 341, "217": [341, 473, 490], "curiou": 341, "heightbol": [341, 497], "collectiontyp": [341, 344], "suitabl": 341, "experi": [341, 478, 479, 501], "thefreedictionari": 341, "atmospher": 341, "meriam": 341, "webster": 341, "descriptor": [341, 343], "protocol": [341, 343, 395, 478], "suggest": [341, 372, 373, 441, 501], "all_definit": 341, "secret": 341, "pep": 341, "412": 341, "protect": [341, 450, 482], "__slots__": 341, "lite": 341, "roundabout": 341, "pain": 341, "consumpt": 341, "pylint": [341, 482], "overwhelm": 341, "unsustain": 341, "__dict__": 341, "slot": 341, "becam": [341, 403], "oner": [341, 345], "tradit": [341, 344, 479], "__something__": 341, "applyparamet": [341, 343], "definint": 341, "getsyncdata": [341, 343], "cumulativeovercycl": [341, 344], "assigninblueprint": [341, 344], "retainonreplac": [341, 344], "fluxquant": [341, 344], "multigroupquant": [341, 344], "reactivitycoeffici": [341, 344], "volume_integr": [341, 344, 484], "fieldnam": [341, 344], "savetodb": [341, 344, 501], "atloc": [341, 343, 344, 358], "hascategori": [341, 344, 358, 484], "incategori": [341, 344], "unchanged_sinc": [341, 344], "fortyp": [341, 344], "resetassignmentflag": [341, 344], "setassignmentflag": [341, 344], "bynameandtyp": [341, 344], "bynameandcollectiontyp": [341, 344], "lock": [341, 343, 344, 345, 412, 441, 482, 497], "towritetodb": [341, 344, 358], "associateparameterdefinitioncollect": [341, 344], "parameterfactori": 342, "setparam": 342, "27977": 343, "thread": [343, 395, 488], "gil": 343, "_state": [343, 358, 389], "illeg": [343, 412], "redefin": 343, "_backup": 343, "_hist": 343, "transmit": [343, 447], "_allfield": [343, 358, 389], "accessor": 343, "proactiv": 343, "somedict": 343, "applydefinit": 343, "since_last_distribute_st": 343, "parmatercollect": 343, "proxi": 343, "mark": [344, 446, 450, 501], "deseri": [344, 371], "datatyp": 344, "nativ": [344, 403, 447, 505], "wrote": 344, "dilig": 344, "paramstr": 344, "reassign": 344, "myparametercollect": 344, "diet": 344, "_p_speed": 344, "_representedtyp": 344, "__getitem__": 344, "categorynam": 344, "mask": 344, "complementari": 344, "compositetyp": 344, "vipan": 344, "htdoc": 344, "bitwisehelp": 344, "assignedmask": 344, "bitmask": 344, "syntax": [344, 501], "brief": [344, 486], "mutabl": [344, 403, 447], "engag": [344, 345, 443], "mimic": [345, 403], "blindli": 345, "parametercollectionclass": 345, "bparametercollect": 345, "needn": 345, "ourselv": 345, "sausag": 345, "profici": 345, "calss": 345, "reactorparametercollect": 347, "pond": 348, "defunct": [349, 483], "tri": [349, 409, 414, 501], "modifiedpath": 349, "eqpathindex": 349, "eqpathcycl": 349, "outputfilenam": [349, 408], "geoemtri": 349, "test_sortnoloc": [350, 351], "test_uthzrmateri": [350, 351], "test_isonwhichsymmetrylin": [350, 351], "test_notesparamet": [350, 351], "test_it": [350, 351], "test_len": [350, 351], "test_append": [350, 351], "test_extend": [350, 351, 415, 422], "test_moveto": [350, 351], "test_getnam": [350, 351, 354], "test_getnum": [350, 351], "test_getloc": [350, 351], "test_getarea": [350, 351, 352, 353], "test_getvolum": [350, 351, 353], "test_doubleresolut": [350, 351], "test_adjustresolut": [350, 351], "test_getaxialmesh": [350, 351], "test_calculatezcoord": [350, 351], "test_gettotalheight": [350, 351], "test_getheight": [350, 351], "test_getreactiveheight": [350, 351], "test_getfissilemass": [350, 351, 354], "test_getmass": [350, 351, 352, 359], "test_getag": [350, 351], "test_makeaxialsnaplist": [350, 351], "test_snapaxialmeshtorefer": [350, 351], "test_updatefromassembli": [350, 351], "test_hasflag": [350, 351, 352, 354], "test_renameblocksaccordingtoassemblynum": [350, 351], "test_getblock": [350, 351], "test_getfirstblock": [350, 351], "test_getfirstblockbytyp": [350, 351], "test_getblockdata": [350, 351], "test_getmaxparam": [350, 351, 354], "test_getelevationsmatchingparamvalu": [350, 351], "test_calcavgparam": [350, 351], "test_calctotalparam": [350, 351], "test_reattach": [350, 351], "test_reestablishblockord": [350, 351], "test_countblocksoftyp": [350, 351, 359], "test_getdim": [350, 351], "test_getdominantmateri": [350, 351, 359], "test_iter": [350, 351, 361, 395, 415, 422], "test_getblocksandz": [350, 351], "test_getblocksbetweenelev": [350, 351], "test_getparamvaluesatz": [350, 351], "test_hascontinuouscoolantchannel": [350, 351], "test_carestiancoordin": [350, 351], "test_pinplenumvolum": [350, 351], "test_averageplenumtemperatur": [350, 351], "test_rot": [350, 351], "test_assem_block_typ": [350, 351], "test_assem_hex_typ": [350, 351], "test_getbindexfromzindex": [350, 351], "test_getelevationboundariesbyblocktyp": [350, 351], "test_snapaxialmeshtoreferenceconservingmassbasedonblockignit": [350, 351], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield": [350, 351], "test_areacheck": [350, 351], "test_updatedetailednden": [350, 352], "test_getsmeardens": [350, 352], "test_getsmeardensitymultiplelin": [350, 352], "test_getsmeardensityedgecas": [350, 352], "test_timenodeparam": [350, 352], "test_gettyp": [350, 352], "test_settyp": [350, 352], "test_homogenizedmixtur": [350, 352], "test_getxstyp": [350, 352], "test_27b_setbugroup": [350, 352], "test_setzeroheight": [350, 352], "test_getvolumefractionswithzeroheight": [350, 352], "test_getvolumefractionwithoutpar": [350, 352], "test_cleardens": [350, 352], "test_removemass": [350, 352], "test_setnumberdens": [350, 352, 353], "test_setmass": [350, 352, 354], "test_gettotalmass": [350, 352], "test_replaceblockwithblock": [350, 352], "test_getwettedperimet": [350, 352], "test_getflowareaperpin": [350, 352], "test_getflowarea": [350, 352], "test_gethydraulicdiamet": [350, 352], "test_adjustuenrich": [350, 352], "test_setloc": [350, 352], "test_setbulimitinfo": [350, 352], "test_gettotalnden": [350, 352], "test_gethmden": [350, 352], "test_getfissilemassenrich": [350, 352], "test_getmicrosuffix": [350, 352], "test_geturaniummassenrich": [350, 352], "test_geturaniumnumenrich": [350, 352], "test_getnumberofatom": [350, 352], "test_getpu": [350, 352], "test_adjustdens": [350, 352], "test_completeinitialload": [350, 352], "test_hascompon": [350, 352], "test_getcomponentnam": [350, 352], "test_getcompon": [350, 352], "test_getcomponentsofshap": [350, 352], "test_getcomponentsofmateri": [350, 352], "test_getcomponentbynam": [350, 352], "test_getsortedcomponentsinsideofcomponentclad": [350, 352], "test_getsortedcomponentsinsideofcomponentduct": [350, 352], "test_getnumcompon": [350, 352], "test_getnumpin": [350, 352], "test_setlinpowbypin": [350, 352], "test_getcomponentareafrac": [350, 352], "test_100_getpinpitch": [350, 352], "test_101_getpitch": [350, 352], "test_102_setpitch": [350, 352], "test_106_getareafract": [350, 352], "test_rotatepin": [350, 352], "test_expandelementaltoisotop": [350, 352], "test_expandallelementalstoisotop": [350, 352], "test_setpitch": [350, 352], "test_setimportantparam": [350, 352], "test_getmfp": [350, 352], "test_consistentmassdensityvolumebetweencoldblockandcoldcompon": [350, 352], "test_consistentmassdensityvolumebetweenhotblockandhotcompon": [350, 352], "test_breakfuelcomponentsintoindividu": [350, 352], "test_pinmgflux": [350, 352], "test_getcomponentsinlinkedord": [350, 352], "test_mergewithblock": [350, 352], "test_getdimens": [350, 352, 353], "test_getplenumpin": [350, 352], "test_haspinpitch": [350, 352], "test_getreactionr": [350, 352, 354], "test_gettotalenergygenerationconst": [350, 352], "test_getfissionenergydepositionconst": [350, 352], "test_getcaptureenergygenerationconst": [350, 352], "test_getneutronenergydepositionconst": [350, 352], "test_getgammaenergydepositionconst": [350, 352], "test_negativevolum": [350, 352, 353], "test_component_typ": [350, 352], "test_coord": [350, 352], "test_block_dim": [350, 352], "test_symmetryfactor": [350, 352, 357], "test_retainst": [350, 352], "test_getpincoord": [350, 352], "test_getpitchhomogeneousblock": [350, 352], "test_getductpitch": [350, 352], "test_getpincenterflattoflat": [350, 352], "test_gridcr": [350, 352], "test_gridnumpinsandloc": [350, 352], "test_gridnotcreatedmultiplemultipl": [350, 352], "test_radii": [350, 352], "test_theta": [350, 352], "test_axi": [350, 352], "test_verifyblockdim": [350, 352], "test_getthetarzgrid": [350, 352], "test_getpitchsquar": [350, 352], "test_getcartesiangrid": [350, 352], "test_heightexpansiondiffer": [350, 352], "test_massfuelheatup": [350, 352], "test_masscladheatup": [350, 352], "test_massductheatup": [350, 352], "test_masscoolheatup": [350, 352], "test_dimensionductheatup": [350, 352], "test_coldmass": [350, 352], "test_massconsist": [350, 352], "test_orient": [350, 352], "getcirclevoiddict": [350, 353], "getcirclefueldict": [350, 353], "test_factori": [350, 353], "test_componentinitializationanddupl": [350, 353], "test_factorybadshapenam": [350, 353], "test_invalidcoolantcomponentassign": [350, 353], "componentcl": [350, 353], "componentmateri": [350, 353], "componentdim": [350, 353], "test_initializecomponentmateri": [350, 353], "test_solid_materi": [350, 353], "test_cmp": [350, 353], "test_nonzero": [350, 353], "test_getcomponentarea": [350, 353], "test_getboundingcircleouterdiamet": [350, 353], "test_component_less_than": [350, 353], "test_fromcompon": [350, 353], "test_preservemassduringthermalexpans": [350, 353], "test_volumeafterclearcach": [350, 353], "test_densityconsist": [350, 353], "test_computevolum": [350, 353], "test_getareacoldtru": [350, 353], "test_getthermalexpansionfactorconservedmassbylinearexpansionperc": [350, 353], "test_thermallyexpand": [350, 353], "test_getcircleinnerdiamet": [350, 353], "test_dimensionthermallyexpand": [350, 353], "test_componentinteractionslinkingbydimens": [350, 353], "test_badcomponentnam": [350, 353], "test_componentinteractionslinkingbysubtract": [350, 353], "test_changenumberdens": [350, 353], "test_fuelmass": [350, 353], "test_theoreticaldensitysett": [350, 353], "tcold": [350, 353, 486], "twarm": [350, 353], "coldouterdiamet": [350, 353], "test_ht9expans": [350, 353], "test_uzrexpans": [350, 353], "test_b4cexpans": [350, 353], "runexpansiontest": [350, 353], "componentmassindependentofinputtemp": [350, 353], "expansionconservationhotheightdefin": [350, 353], "expansionconservationcoldheightdefin": [350, 353], "test_negativearea": [350, 353], "test_getperimet": [350, 353], "dimstotestexpans": [350, 353], "setclassdim": [350, 353], "test_validparamet": [350, 353], "test_updatedim": [350, 353], "test_setmassfrac": [350, 353], "test_setmassfraconcomponentmateri": [350, 353], "test_adjustmassfrac_invalid": [350, 353], "test_adjustmassfrac_u235": [350, 353], "test_adjustmassfrac_u": [350, 353], "test_adjustmassfrac_clear_zr": [350, 353], "test_adjustmassfrac_set_zr": [350, 353], "test_adjustmassfrac_leave_sam": [350, 353], "test_getenrich": [350, 353], "test_finalizeloaddbadjuststd": [350, 353], "inactivenuclid": [350, 354], "elementstoexpand": [350, 354], "test_itercompon": [350, 354], "test_sort": [350, 354], "test_arechildernoftyp": [350, 354], "test_containsatleastonechildoftyp": [350, 354], "test_containsonlychildrenoftyp": [350, 354], "test_namecontain": [350, 354, 378, 385], "test_nucspec": [350, 354], "test_hasflagssubstr": [350, 354], "test_hasflagsnotypespecifi": [350, 354], "test_getboundingcirlceouterdiamet": [350, 354], "test_getparamnam": [350, 354], "test_updatevolum": [350, 354], "test_expandlfp": [350, 354], "test_setchildrenlumpedfissionproduct": [350, 354], "test_requireslumpedfissionproduct": [350, 354], "test_getlumpedfissionproductsifnecessarynullcas": [350, 354], "test_getintegratedmgflux": [350, 354], "test_syncparamet": [350, 354], "blueprintyaml": [350, 354], "test_ord": [350, 354], "test_sum": [350, 354], "test_constituentreport": [350, 354], "test_getfuelmass": [350, 354], "test_getchildrenincludemateri": [350, 354], "test_gethmmass": [350, 354], "test_getfpmass": [350, 354], "test_getminparam": [350, 354], "testflagsa": [350, 354], "testflagsb": [350, 354], "bprime": [350, 354], "test_flagseri": [350, 354], "test_flagconvers": [350, 354], "test_getnumberdensitieswithexpandedfissionproduct": [350, 354], "test_dimensionreport": [350, 354], "test_getatomicweight": [350, 354], "test_containsheavymet": [350, 354], "test_copyparamstochildren": [350, 354], "test_copyparamsfrom": [350, 354], "test_getreactionratedict": [350, 354], "test_constructor": [350, 355], "test_represent": [350, 355], "test_parentreactor": [350, 355], "test_getassembli": [350, 355], "test_updatenumberofcolumn": [350, 355], "test_getnextloc": [350, 355], "test_normalizenam": [350, 355, 359], "test_addlikedict": [350, 355], "test_addlikeattribut": [350, 355], "test_fromstr": [350, 356, 357], "test_flagstoandfromstr": [350, 356], "test_tostringalphabet": [350, 356], "test_fromstringstrict": [350, 356], "test_lookup": [350, 356], "test_convertsstringswithnonflag": [350, 356], "test_defaultisfals": [350, 356], "test_str": [350, 357], "test_fromani": [350, 357], "test_baseconstructor": [350, 357], "test_domaintypenul": [350, 357], "test_checkvalidgeomsymmetrycombo": [350, 357], "test_readhexgeomxml": [350, 357], "test_readreactor": [350, 357], "test_asciimap": [350, 357, 395, 415], "test_readasciimap": [350, 357], "test_readtrzgeomxml": [350, 357], "test_trzyamlio": [350, 357], "test_mutabledefaultsnotsupport": [350, 358], "test_writesomeparamstodb": [350, 358], "test_serializer_pack_unpack": [350, 358], "test_parampropertydoesnotconflict": [350, 358], "test_parampropertydoesnotconflictwithnonedefault": [350, 358], "test_getwithoutdefaultraisesparametererror": [350, 358], "test_attemptingtosetparamwithoutsetterfail": [350, 358], "test_sett": [350, 358], "test_settergetterbas": [350, 358], "test_cannotdefineparameterwithsamenam": [350, 358], "test_paramdefinitionscompos": [350, 358], "test_cannotdefineparameterwithsamenameforcollectionsubclass": [350, 358], "test_cannotcreateattrbuteonparametercollectionsubclass": [350, 358], "test_cannotcreateinstanceof_nodefault": [350, 358], "test_cannotcreateinstanceof_undefin": [350, 358], "test_defaultloc": [350, 358], "test_categori": [350, 358], "test_parametercollectionshave__slots__": [350, 358], "scopeparamcollect": [350, 358], "test_oncategori": [350, 358], "test_onloc": [350, 358], "test_compl": [350, 358], "test_coresfp": [350, 359], "test_factorysortset": [350, 359], "test_getsetparamet": [350, 359], "test_sortchildren": [350, 359], "test_sortassembyr": [350, 359], "test_gettotalparam": [350, 359], "test_geomtyp": [350, 359], "test_getblocksbyindic": [350, 359], "test_getallxssuffix": [350, 359], "test_genblocksbylocnam": [350, 359], "test_setpitchuniform": [350, 359], "test_setb10voloncr": [350, 359], "test_countfuelaxialblock": [350, 359], "test_getfirstfuelblockaxialnod": [350, 359], "test_getmaxassembliesinhexr": [350, 359], "test_getmaxnumpin": [350, 359], "test_addmultiplecor": [350, 359], "test_getreactor": [350, 359], "test_addmorenod": [350, 359], "test_findaxialmeshindexof": [350, 359], "test_findallaxialmeshpoint": [350, 359], "test_findallaxialmeshpoints_wsubmesh": [350, 359], "test_findallazimeshpoint": [350, 359], "test_findallradmeshpoint": [350, 359], "test_findneighbor": [350, 359], "test_getassembliesincircular": [350, 359], "test_getassembliesinhexr": [350, 359], "test_genassembliesaddedthiscycl": [350, 359], "test_getassemblypitch": [350, 359], "test_getnumassemblieswithallringsfilledout": [350, 359], "test_getnumassemblieswithallringsfilledoutbipass": [350, 359], "test_getnumenergygroup": [350, 359], "test_getminimumpercentfluxinfuel": [350, 359], "test_getassemblywithloc": [350, 359], "test_getassemblywithnam": [350, 359], "test_restorereactor": [350, 359], "test_differentnuclidemodel": [350, 359], "test_getsymmetryfactor": [350, 359], "test_getassembliesonsymmetrylin": [350, 359], "test_saveallflux": [350, 359], "test_getfluxvector": [350, 359], "test_getfuelbottomheight": [350, 359], "test_getgridbound": [350, 359], "test_loc": [350, 359], "test_removeassembli": [350, 359], "test_removeassemblynosfp": [350, 359], "test_removeassembliesinr": [350, 359], "test_removeassembliesinringbycount": [350, 359], "test_getnumr": [350, 359], "test_whennoassembli": [350, 359], "test_removeassembliesinringhex": [350, 359], "test_getnozzletyp": [350, 359], "test_createassemblyoftyp": [350, 359], "test_createfreshfe": [350, 359], "test_createassemblyoftypeexpandedcor": [350, 359], "test_getavgtemp": [350, 359], "test_getscalarevolut": [350, 359], "test_ifmissingspatialgrid": [350, 359], "test_pincoordsallblock": [350, 359], "test_nonuniformassem": [350, 359], "test_applythermalexpansion_coreconstruct": [350, 359], "test_updateblockbolheights_dbload": [350, 359], "test_buildmanualzon": [350, 359], "test_buildmanualzonesempti": [350, 359], "test_getnuclidecategori": [350, 359], "test_setpowerifnecessari": [350, 359], "test_findallmeshpoint": [350, 359, 360], "test_getassembliesinsquar": [350, 359], "test_getnuclidecategorieslog": [350, 359], "test_findneighborscartesian": [350, 359], "test_loadrzt": [350, 360], "test_loadrzt_reactor": [350, 360], "test_additem": [350, 361], "test_removeitem": [350, 361], "test_addloc": [350, 361], "test_removeloc": [350, 361], "test_repr": [350, 361], "test_dictionaryinterfac": [350, 361], "test_findzoneitisin": [350, 361], "test_getzoneloc": [350, 361], "test_getallloc": [350, 361], "test_summari": [350, 361], "test_sortzon": [350, 361], "uth": 351, "numblock": 351, "140262133606960": 351, "8660254": 351, "2500": 351, "carestiangrid": 351, "simlutan": 352, "165": 352, "evacu": 352, "magicmock": 352, "mock_captur": 352, "mock_fiss": 352, "mock_method": 352, "__name__": [352, 363, 451, 473, 475, 488, 503], "unshap": 352, "neutronical": 352, "grown": [352, 479], "excess": [352, 411, 413], "veifi": 353, "141592653589793": 353, "demonst": 353, "tutori": [353, 441, 444, 446, 452, 464, 477, 479, 481, 482, 486, 488, 492, 493, 494, 501], "160": 353, "170": [353, 406], "dummycompositeparametercollect": 354, "dummyleafparametercollect": 354, "queryabl": 354, "block_metal_fuel": 354, "component_metal_fuel_fuel": 354, "component_metal_fuel_clad": 354, "450": [354, 463, 473, 486, 492, 493, 501], "component_metal_fuel_bond": 354, "component_metal_fuel_cool": 354, "component_metal_fuel_duct": 354, "block_oxide_fuel": 354, "compost": 354, "pickleabl": 356, "_writeparam": 358, "signifi": 358, "lifecycl": 358, "accident": [358, 392, 410, 479], "customset": 359, "inputfilepath": 359, "home": [359, 479, 486], "runner": [359, 486], "inputfilenam": [359, 466], "test_root": 359, "maxnumr": 359, "neeed": 359, "getgridbound": 359, "mockgetassembli": 359, "godiva": 360, "heu": 360, "zonetyp": 362, "heavier": 362, "chicken": 362, "egg": [362, 414], "zonenam": [362, 501], "zoneloc": 362, "defint": 362, "consol": 363, "logger": [363, 365, 379, 392, 501, 503], "getlogg": [363, 451, 503], "someexcept": 363, "mpirank": [363, 410], "logdir": 363, "indent": [363, 437, 501], "levelnam": 363, "msgtype": [363, 379], "mangl": 363, "dedupl": 363, "stub": 363, "intlevel": 363, "isstderr": 363, "handleinvalid": [364, 365, 372], "csfile": 364, "databaseset": [364, 366], "globalset": [364, 366, 488], "reportset": [364, 366], "tightcouplingset": [364, 366, 501, 504], "serializetightcouplingset": [364, 366, 370], "tightcouplingsettingdef": [364, 366, 370], "tightcouplingsettingsvalid": [364, 366, 370], "test_inspector": [364, 374], "testinspector": [364, 374, 375], "test_set": [364, 371, 374], "dummysettingplugin1": [364, 374, 376], "dummysettingplugin2": [364, 374, 376], "pluginaddsopt": [364, 374, 376], "testset": [364, 374, 376, 377], "testaddingopt": [364, 374, 376], "testsettings2": [364, 374, 376], "testsettingsutil": [364, 374, 376], "testflaglistset": [364, 374, 376], "testsettingsvalidationutil": [364, 374, 376], "test_settingsio": [364, 374], "settingsfailuretest": [364, 374, 377], "settingsreadertest": [364, 374, 377], "settingsrenametest": [364, 374, 377], "settingswritertest": [364, 374, 377], "mockentrypoint": [364, 374, 377], "settingargstest": [364, 374, 377], "defaultcasetitl": [364, 365], "environmentset": [364, 365], "reverttodefault": [364, 365, 371], "failonload": [364, 365], "loadfrominputfil": [364, 365], "loadfromstr": [364, 365], "initlogverbos": [364, 365], "writetoyamlfil": [364, 365], "getsettingssetbyus": [364, 365], "writetoyamlstream": [364, 365], "updateenvironmentsettingsfrom": [364, 365], "setmoduleverbos": [364, 365], "underlyingtyp": [364, 371], "setvalu": [364, 371], "changedefault": [364, 371], "isdefault": [364, 371], "offdefault": [364, 371], "getcustomattribut": [364, 371], "getdefaultattribut": [364, 371], "renameset": [364, 372], "settingsinputformat": [364, 372], "fromext": [364, 372], "readfromfil": [364, 372], "readfromstream": [364, 372], "writeyaml": [364, 372], "iscorrect": [364, 373], "no_act": [364, 373, 488], "addqueri": [364, 373], "addquerybadlocationwilllikelyfail": [364, 373], "addquerycurrentsettingmaynotsupportfeatur": [364, 373], "hundr": [365, 479], "begun": [365, 501], "setpath": 365, "went": 365, "hoc": [365, 487], "fromfil": 365, "fpath": 365, "usersettingsnam": 365, "settingssetbyus": [365, 372], "writabl": 365, "otherc": 365, "couplingset": 370, "tightcouplingsettingsdict": 370, "coeff": 371, "enforcedopt": 371, "sublabel": 371, "isenviron": 371, "oldnam": [371, 372], "legal": 371, "expir": [371, 372], "subtyp": 371, "serializ": 371, "newdefault": 371, "compund": 371, "gone": [371, 497, 501], "residu": 371, "settings_inst": 372, "dialogu": 373, "imposs": [373, 407, 450], "affirm": 373, "interplai": 373, "correctionsmad": 373, "initiallambda": 373, "versionthi": 373, "versionrequir": 373, "test_queri": [374, 375], "test_overwritesettingscorrectivequeri": [374, 375], "test_changeofc": [374, 375], "test_noncorrectivequeri": [374, 375], "test_callablecorrectioncheck": [374, 375], "test_assignc": [374, 375], "test_createqueryrevertbadpathtodefault": [374, 375], "test_correctcyclestozeroburnup": [374, 375], "test_checkforbothsimpleanddetailedcyclesinput": [374, 375], "test_updateenvironmentsettingsfrom": [374, 376], "test_metadata": [374, 376], "test_addingopt": [374, 376], "test_schemacheckstyp": [374, 376], "test_listsmut": [374, 376], "test_listcoercion": [374, 376], "test_typedetect": [374, 376], "test_cswork": [374, 376], "test_pluginvalidatorsarediscov": [374, 376], "test_pluginset": [374, 376], "test_default": [374, 376], "test_getsettingssetbyus": [374, 376], "test_setmoduleverbos": [374, 376], "test_getfailur": [374, 376], "test_settingisokaytograb": [374, 376], "test_modifi": [374, 376], "test_copyset": [374, 376], "test_copysettingnotdefault": [374, 376], "test_empti": [374, 376], "test_recursivescan": [374, 376], "test_prompt": [374, 376], "test_flaglistset": [374, 376], "test_invalidflaglisttypeerror": [374, 376], "test_validatevers": [374, 376], "test_settingsobjset": [374, 377], "test_loadfromyamlfailsonbadnam": [374, 377], "test_invalidfil": [374, 377], "test_basicsettingsread": [374, 377], "test_readfromfil": [374, 377], "test_renam": [374, 377], "test_collidingrenam": [374, 377], "test_writeshort": [374, 377], "test_writemedium": [374, 377], "test_writeful": [374, 377], "test_writeyaml": [374, 377], "test_errorsettingswrit": [374, 377], "test_commandlineset": [374, 377], "test_cannotloadsettingsafterparsingcommandlineset": [374, 377], "sound": 376, "particuar": 376, "_customschema": 376, "testsetting1": 377, "testsetting2": 377, "testsetting3": 377, "refdirectori": 378, "abspath": 378, "fixturefunct": 378, "expectedfilepath": 378, "actualfilepath": 378, "falseneglist": 378, "mainten": 378, "rebaselin": 378, "accomod": 378, "epsilon": [378, 504], "impl": [378, 451], "rstrip": 378, "whitespac": [378, 414, 450], "parsabl": 378, "presenc": 378, "approv": 378, "clearsinglewarn": [378, 379], "getstdout": [378, 379], "emptystdout": [378, 379], "getstderrvalu": [378, 379], "test_getparamrenam": [378, 381], "test_registerpluginflag": [378, 381], "test_getparamrenamesinvalid": [378, 381], "test_vers": [378, 381], "test_getset": [378, 381], "test_splashtext": [378, 381], "test_splashtextdifferentapp": [378, 381], "test_isstablereleasevers": [378, 381], "test_disablefutureconfigur": [378, 381], "test_getdefaultpluginmanag": [378, 381], "test_overconfigur": [378, 381], "test_main": [378, 381], "test_comparefilessucess": [378, 382], "test_comparefilesfail": [378, 382], "test_comparefilessucceedfalseneg": [378, 382], "test_custom": [378, 383], "test_rank": [378, 384, 388], "test_nonnonedata": [378, 384, 388], "test_isrequesteddetailpoint": [378, 385], "test_en": [378, 385], "test_predistributest": [378, 385], "test_fsearch": [378, 385], "test_fsearch_text": [378, 385], "test_coupleract": [378, 385], "test_storepreviousiterationvalu": [378, 385], "test_storepreviousiterationvalueexcept": [378, 385], "test_isconvergedvalueerror": [378, 385], "test_isconverg": [378, 385], "test_isconvergedruntimeerror": [378, 385], "test_getlistdimens": [378, 385], "test_loadc5g7": [378, 386], "test_parallel": [378, 387, 421], "test_serialgath": [378, 387], "test_mpiit": [378, 387], "test_perfectbalanc": [378, 387], "test_excessprocess": [378, 387], "test_typicalbalanc": [378, 387], "test_runactionsdistributionact": [378, 387], "test_runactionsdistributestateact": [378, 387], "test_diagnosepickleerrortestreactor": [378, 387], "test_disableforexclusivetask": [378, 387], "test_makequeu": [378, 387], "test_basicoperatormpi": [378, 388], "test_primaryexcept": [378, 388], "test_primarycrit": [378, 388], "test_finalizeinteract": [378, 388], "test_distributeset": [378, 388], "test_distributereactor": [378, 388], "test_distributeinterfac": [378, 388], "test_distributest": [378, 388], "test_compileresult": [378, 388], "test_cleanpathmpi": [378, 388], "test_noconflict": [378, 389], "test_withconflict": [378, 389], "test_withconflictsbutsamevalu": [378, 389], "test_conflictsmaintainwithstateretain": [378, 389], "test_runparamsweep": [378, 390], "test_rundatamodel": [378, 390], "test_defineflag": [378, 391], "test_axialexpansionhook": [378, 391], "test_defineparamet": [378, 391], "test_exposeinterfac": [378, 391], "test_pluginsexposeinterfac": [378, 391], "test_defineblueprintssect": [378, 391], "test_setverbosityfrominteg": [378, 392], "test_setverbosityfromstr": [378, 392], "test_verbosityoutofrang": [378, 392], "test_invalidsetverbositybystr": [378, 392], "test_parentrunlog": [378, 392], "test_getwhitespac": [378, 392], "test_warningreport": [378, 392], "test_warningreportinvalid": [378, 392], "test_closelog": [378, 392], "test_setverbos": [378, 392], "test_setverbositybeforestartlog": [378, 392], "test_callingstartlogmultipletim": [378, 392], "test_concatenatelog": [378, 392], "test_createlogdir": [378, 392], "test_getduplicatesfilt": [378, 392], "test_allowstopdupl": [378, 392], "test_comparefilelin": [378, 393], "test_userpluginsflag": [378, 394], "test_validateuserpluginlimit": [378, 394], "test_registeruserplugin": [378, 394], "test_registeruserpluginsabspath": [378, 394], "test_registeruserpluginsfromset": [378, 394], "test_userpluginonprocesscoreload": [378, 394], "test_userpluginwithinterfac": [378, 394], "test_registerrepeateduserplugin": [378, 394], "_runlog": 379, "shuffler": 380, "factorlist": 380, "coexist": 381, "plugin1": 381, "dummyact": 385, "notif": 385, "fsearch": [385, 395, 437], "coupler": 385, "rag": 385, "c5g7": [386, 481, 482, 492, 493], "numproc": 387, "numobject": 387, "numobj": 387, "imbal": 387, "_diagnosepickleerror": 387, "featurest": 388, "commandlin": [388, 450], "mpi4pi": [388, 421, 447, 479, 480, 481, 507], "failer": 388, "mockopmpi": 388, "unittest": [389, 424, 450], "ipynb": [390, 441, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "inadvert": 390, "carefulli": 392, "startlog": 392, "concat": 392, "flex": [394, 488], "meaningless": 394, "filepath": [395, 437], "sha": [395, 414, 486], "timestepnum": 395, "timenodenum": 395, "picklechain": 395, "a101": 395, "fix_import": 395, "buffer_callback": 395, "pickler": 395, "testpickl": 395, "sob": 395, "classcount": 395, "heirarchi": 395, "trend": 395, "originallist": 395, "listtoprepend": 395, "beginn": 395, "prepend": [395, 396, 414], "cap": 395, "prestr": 395, "4d": 395, "4e": [395, 465, 486], "datalist": 395, "maxnumberofvaluesbeforedelimit": 395, "delimit": 395, "hello": 395, "n4": 395, "minv": 395, "maxv": 395, "xlabel": [395, 413, 464, 465, 470, 475, 489, 490], "ylabel": [395, 413, 464, 465, 470, 475, 489, 490], "xtick": 395, "ytick": 395, "cmap": [395, 472], "figsiz": [395, 464, 472, 475, 490], "friendli": [395, 397], "hyphen": [395, 414], "otherdictionari": 395, "dst": 395, "shutil": [395, 410], "testasciimap": [395, 415, 416], "test_codetim": [395, 415, 436], "codetimingtest": [395, 415, 417], "test_custom_except": [395, 415], "customexceptiontest": [395, 415, 418], "test_densitytool": [395, 415], "testdensitytool": [395, 415, 419], "test_directorychang": [395, 415], "expectedexcept": [395, 415, 420], "testdirectorychang": [395, 415, 420], "test_directorychangersmpi": [395, 415], "revealyourdirectori": [395, 415, 421], "testmpi": [395, 415, 421], "exampleflag": [395, 415, 422], "test_hexagon": [395, 415], "testiter": [395, 415, 424], "test_mathemat": [395, 415], "testmath": [395, 415, 425], "test_outputcach": [395, 415], "testoutputcach": [395, 415, 426], "test_pars": [395, 415], "literalevaltest": [395, 415, 427], "test_pathtool": [395, 415], "pathtoolstest": [395, 415, 428], "test_plot": [395, 415], "testplot": [395, 415, 429], "testpatch": [395, 415, 429], "test_properti": [395, 415], "immutableclass": [395, 415, 430], "immutablepropertytest": [395, 415, 430], "test_reportplot": [395, 415], "testradar": [395, 415, 431], "test_tabul": [395, 415], "testtabulateapi": [395, 415, 432], "testtabulateinput": [395, 415, 432], "testtabulateintern": [395, 415, 432], "testtabulateoutput": [395, 415, 432], "test_textprocessor": [395, 415], "yamlincludetest": [395, 415, 433], "sequentialreadertest": [395, 415, 433], "test_triangl": [395, 415], "test_unit": [395, 415], "testunit": [395, 415, 435], "test_util": [395, 415], "testgeneralutil": [395, 415, 436], "asciilin": [395, 396], "asciioffset": [395, 396], "asciilabelbyindic": [395, 396], "gridcontentstoascii": [395, 396], "gettim": [395, 397], "starttim": [395, 397], "endtim": [395, 397], "startal": [395, 397], "stopal": [395, 397], "getactivetim": [395, 397], "timelin": [395, 397, 501], "movefil": [395, 400], "retrievefil": [395, 400], "getrandomdirectori": [395, 400], "sortedfield": [395, 403], "to_byt": [395, 403], "from_byt": [395, 403], "set_val": [395, 411], "updatepagedepthcolor": [395, 411], "sep": [395, 414, 486], "hline": [395, 414], "headerrow": [395, 414], "lineabov": [395, 414], "linebelow": [395, 414], "linebelowhead": [395, 414], "linebetweenrow": [395, 414], "withheaderhid": [395, 414], "unicode_whitespace_tran": [395, 414], "uspac": [395, 414], "wordsep_r": [395, 414], "wordsep_simple_r": [395, 414], "sentence_end_r": [395, 414], "from_iter": [395, 414], "func": [395, 398, 406, 407, 414, 447], "issuewarningonfindingtext": [395, 437], "raiseerroronfindingtext": [395, 437], "raiseerroronfindingpattern": [395, 437], "searchfortext": [395, 437], "searchforpattern": [395, 437], "searchforpatternonnextlin": [395, 437], "consumelin": [395, 437], "scipat": [395, 437], "decim": [395, 414, 432, 437], "errorcheck": [395, 437], "checkerror": [395, 437], "reimplement": 396, "simplic": [396, 492], "vocabulari": 396, "nestabl": 396, "latticeblueprint": 396, "programat": [396, 491, 501], "linenum": 396, "colnum": 396, "ij": 396, "col": [396, 432], "decrement": [396, 407], "jaggedli": 396, "ridicul": 396, "horizont": [396, 411], "_ijmax": 396, "ijmax": 396, "toward": [396, 414, 475, 479], "timer": [397, 501], "mymethod": 397, "mymethod2": 397, "event_nam": 397, "unfriendli": 397, "unstart": 397, "master": [397, 486], "kill": [397, 451], "inclusion_cutoff": 397, "total_tim": 397, "_timer": 397, "__str__": 397, "base_file_nam": 397, "granular": 398, "inport": 398, "abort": 398, "uninteract": 398, "custommsgend": 398, "assort": 399, "matnum": [399, 457], "minden": 399, "sigfig": 399, "mcnp6compat": 399, "mcnplibrari": 399, "mcard": 399, "nuclidevector": 399, "elementexpansionpair": 399, "nuclidbas": 399, "isotopicsubset": 399, "nuclideinventori": 399, "enrichedmassfrac": 399, "fertilemassfrac": 399, "remix": 399, "filestomov": [400, 401], "filestoretriev": [400, 401], "dumponexcept": 400, "outputpath": [400, 401], "cwd": 400, "tell": [400, 451, 466, 488, 492, 501], "stall": [400, 447], "chdir": 400, "race": 401, "importentirepackag": 402, "aenum": 403, "provis": [403, 501], "arithmet": 403, "emul": 403, "unlimit": 403, "myflag": 403, "foo": [403, 415, 422], "baz": [403, 415, 422], "byteord": 403, "snake_cas": [403, 450], "pythagorean": 405, "theorem": 405, "initialcellindex": 405, "orientationnumb": 405, "lst": 406, "lenght": 406, "padwith": [406, 447], "padwithnon": 406, "binaryrow": 406, "valuedict": 406, "hexrow": 406, "1000000": [406, 501], "130": 406, "190": 406, "0x": 406, "although": [406, 443, 501], "forev": 406, "remedi": 406, "dropwhil": 406, "takewhil": 406, "itertool": [406, 411, 468, 469], "pred": 406, "newseq": 406, "summat": [406, 407, 501, 503], "expon": 407, "repeatedlist": 407, "9r": [407, 501], "listtosearch": 407, "indx": 407, "minindex": 407, "searchlist": 407, "searchvalu": 407, "strtofloat": 407, "03231714805651": 407, "03231714805651e": 407, "notat": [407, 493, 501], "scientif": [407, 488], "prevvalu": 407, "inputit": 407, "x0": 407, "y0": 407, "x1": [407, 438], "y1": [407, 438], "targetx": 407, "targeti": 407, "interpi": 407, "interpx": 407, "maxiter": 407, "positiveguess": 407, "tol": 407, "newton": 407, "p2": 407, "p3": 407, "parabola": 407, "x2": [407, 438], "x3": [407, 438], "y2": [407, 438], "y3": [407, 438], "bx": 407, "ap": 407, "cp": [407, 488], "targetk": [407, 501], "bt": 407, "2at": 407, "2a": 407, "slope": [407, 499], "realroot": 407, "newtim": 407, "v1": [407, 447, 451], "v2": [407, 447], "xin": 407, "yin": 407, "xout": 407, "resampl": 407, "realloc": 407, "resmampl": 407, "degreescounterclockwis": 407, "radianscounterclockwis": 407, "ccw": 407, "xr": 407, "yr": [407, 496, 499, 506], "crc": 408, "instantli": 408, "blah": 408, "inpfil": 408, "mccaa": 408, "rmzflx": 408, "outputfound": 408, "outfil": 408, "subprocess": 408, "exepath": 408, "inputpath": 408, "cachedir": 408, "loctoretrieveto": 408, "greedi": 408, "cachedfold": 408, "safeword": 408, "destruct": [408, 497], "teardown": 408, "requestedtyp": 409, "allownon": 409, "matchingnonetyp": 409, "datetim": 409, "pathpart": 410, "unc": 410, "filedescript": 410, "sourcepath": 410, "destinationpath": 410, "path1": 410, "path2": 410, "ioerror": 410, "pathattr": 410, "myclass": 410, "userspecifiedmodul": 410, "copiou": 410, "everyon": [410, 450, 451], "misplac": 410, "net": [410, 497], "rmtree": 410, "matplotlib": [411, 413, 450, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 486, 489, 490, 493], "bewar": [411, 413], "gobbl": [411, 413], "judici": [411, 413], "advis": [411, 413, 501], "skippedcolor": 411, "color": [411, 458, 464, 465, 475, 490, 493], "css": 411, "indefinit": 411, "bare": [411, 451], "cmapnam": 411, "jet": 411, "labelfmt": [411, 459, 474], "3f": 411, "legendmap": 411, "fontsiz": [411, 467, 472, 475], "minscal": 411, "maxscal": 411, "axisequ": 411, "makecolorbar": 411, "cbarlabel": 411, "shufflearrow": 411, "titles": 411, "depthindex": [411, 486], "viewabl": 411, "referencestokeep": 411, "colormap": 411, "pylab_exampl": 411, "show_colormap": 411, "labl": 411, "decript": 411, "legend": [411, 413, 463, 465, 470], "autoscal": 411, "ellips": 411, "patch": [411, 429, 437, 467, 475, 484], "facemap": [411, 462, 476, 477, 482, 484, 494], "typenumassem": 411, "rdylbu": 411, "fig": [411, 459, 463, 465, 467, 468, 469, 472, 473, 475], "galleri": [411, 445, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 479], "sliderlabel": 411, "updatefunc": 411, "selecteddepthcolor": 411, "valinit": 411, "slider": 411, "valmin": 411, "valmax": 411, "_event": 411, "newval": 411, "maxassem": 411, "yaxislabel": 411, "plt": [411, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 486, 489, 490, 493], "histogram": 411, "materiallist": 411, "fileformat": 411, "svg": [411, 501], "pictur": [411, 444], "jpg": [411, 501], "xsname": 411, "noshow": 411, "ipython": [411, 493], "u238na": 411, "dependencyact": 412, "properrti": 412, "attributeerror": [412, 450], "esenti": 412, "someclass": 412, "mynum": [412, 415, 430], "__doc__": [412, 414], "unlock": [412, 446], "unassign": 412, "dbi": [413, 486], "abscissa": 413, "maxdpa": [413, 499], "chart": [413, 444, 462, 476, 477, 487, 494], "reactornam": 413, "radar": [413, 431], "spider": 413, "xmajortick": 413, "ymajortick": 413, "legendlabel": 413, "tick": 413, "legendslabel": 413, "zval": [413, 472], "datav": 413, "nplot": 413, "ylog": 413, "mit": [414, 432, 443, 451, 479], "licens": [414, 432, 445, 488, 492], "thank": [414, 432], "github": [414, 432, 441, 443, 450, 451, 479, 480, 482, 484, 488, 507], "astanin": [414, 432], "anic": 414, "plain": [414, 432, 449], "sun": 414, "696000": 414, "1989100000": 414, "6371": 414, "5973": 414, "moon": 414, "1737": [414, 484], "mar": 414, "3390": 414, "641": 414, "9891e": 414, "dataclass": 414, "firstrow": [414, 432], "headerless": 414, "sex": 414, "alic": 414, "numalign": 414, "stralign": 414, "colglobalalign": [414, 432], "colalign": [414, 432], "coltyp": 414, "headersglobalalign": [414, 432], "headersalign": [414, 432], "behaviour": 414, "intfmt": 414, "floatfmt": 414, "missingv": 414, "spam": 414, "tablefmt": 414, "rst": [414, 432], "tsv": 414, "tabulateformat": [414, 432], "pseudograph": 414, "9999": 414, "451": 414, "pandoc": [414, 441], "simple_t": 414, "emac": 414, "el": 414, "grid_tabl": 414, "restructuredtext": 414, "42992e1": 414, "429920": 414, "disablenumpars": 414, "grain": 414, "longest": 414, "maxcolwidth": [414, 432], "john": 414, "maxheadercolwidth": [414, 432], "showindex": 414, "rowalign": 414, "psql": 414, "initial_ind": 414, "subsequent_ind": 414, "expand_tab": 414, "replace_whitespac": 414, "fix_sentence_end": 414, "break_long_word": 414, "drop_whitespac": 414, "break_on_hyphen": 414, "tabsiz": 414, "max_lin": 414, "tweak": 414, "_wrap_chunk": 414, "sentenc": [414, 451], "punctuat": 414, "unavoid": 414, "imperfect": 414, "trail": [414, 450], "x0b": 414, "x0c": 414, "em": 414, "dash": 414, "reformat": 414, "paragraph": [414, 449, 451], "expandtab": 414, "__next__": 414, "exhaust": 414, "field_nam": 414, "_asdict": 414, "_replac": 414, "iter1": 414, "iter2": 414, "stopiter": 414, "substitut": [414, 432], "test_hexthird": [415, 416], "test_hexwithhol": [415, 416], "test_hexwithemptyrow": [415, 416], "test_troublesomehexthird": [415, 416], "test_hexfullcornersupspotcheck": [415, 416], "test_hexfullcornersup": [415, 416], "test_hexfullflatsup": [415, 416], "test_hexfullflat": [415, 416], "test_hexsmallflat": [415, 416], "test_flathexbas": [415, 416], "test_method_definit": [415, 417], "test_alternate_usag": [415, 417], "test_property_access": [415, 417], "test_mast": [415, 417], "test_messy_starts_and_stop": [415, 417], "exampleinfomessag": [415, 418], "test_info_decor": [415, 418], "exampleimportantmessag": [415, 418], "test_important_decor": [415, 418], "examplewarnmessag": [415, 418], "test_warn_decor": [415, 418], "examplewarnwhenrootmessag": [415, 418], "test_warn_when_root_decor": [415, 418], "test_expandelementalmassfracstonuclid": [415, 419], "test_expandelementalzeromassfrac": [415, 419], "test_getchem": [415, 419], "test_expandel": [415, 419], "test_applyisotopicsmix": [415, 419], "test_getndensfrommass": [415, 419], "test_getmassfract": [415, 419], "test_calculatenumberdens": [415, 419], "test_getmassingram": [415, 419], "test_normalizenuclidelist": [415, 419], "test_formatmaterialcard": [415, 419], "test_mpiactionfailsonnonexistentpath": [415, 420], "test_except": [415, 420], "test_exception_dis": [415, 420], "test_change_to_nonexisting_fail": [415, 420], "test_change_to_nonexisting_works_forc": [415, 420], "test_temporary_clean": [415, 420], "test_file_retriev": [415, 420], "test_file_retrieval_missing_fil": [415, 420], "test_mpidirectorychang": [415, 421], "test_auto": [415, 422], "test_collision_extens": [415, 422], "test_collision_cr": [415, 422], "test_bool": [415, 422, 432], "test_inclus": [415, 422], "test_bitwis": [415, 422], "test_hash": [415, 422], "test_getitem": [415, 422], "n_fuzzy_draw": [415, 423], "test_hexagon_area": [415, 423], "test_numpositionsinr": [415, 423], "test_rotatedcellcent": [415, 423], "test_rotatedfirstr": [415, 423], "test_rotatefuzzi": [415, 423], "test_positionsuptor": [415, 423], "test_rotatedcellindexerror": [415, 423], "test_rotatedcellorientationerror": [415, 423], "test_indexwithnorot": [415, 423], "test_chunk": [415, 424], "test_split": [415, 424], "test_packingandunpackingbinarystr": [415, 424], "test_packingandunpackinghexstr": [415, 424], "test_sequenceinit": [415, 424], "test_sequ": [415, 424], "test_copysequ": [415, 424], "test_extendsequ": [415, 424], "test_appendsequ": [415, 424], "test_addingsequ": [415, 424], "test_listpivot": [415, 424], "test_arraypivot": [415, 424], "test_average1dwithintoler": [415, 425], "test_average1dwithintoleranceinvalid": [415, 425], "test_converttoslic": [415, 425], "test_efmt": [415, 425], "test_expandrepeatedfloat": [415, 425], "test_findclosest": [415, 425], "test_findnearestvalu": [415, 425], "test_fixthreedigitexp": [415, 425], "test_getfloat": [415, 425], "test_getstepsfromvalu": [415, 425], "test_ismonoton": [415, 425], "test_linearinterpol": [415, 425], "test_minimizescalarfunc": [415, 425], "test_newtonsmethod": [415, 425], "test_parabola": [415, 425], "test_parabolicinterpol": [415, 425], "test_relerr": [415, 425], "test_resamplestepwiseavg0": [415, 425], "test_resamplestepwiseavg1": [415, 425], "test_resamplestepwiseavg2": [415, 425], "test_resamplestepwiseavg3": [415, 425], "test_resamplestepwiseavg4": [415, 425], "test_resamplestepwiseavg5": [415, 425], "test_resamplestepwiseavg6": [415, 425], "test_resamplestepwiseavg7": [415, 425], "test_resamplestepwisesum0": [415, 425], "test_resamplestepwisesum1": [415, 425], "test_resamplestepwisesum2": [415, 425], "test_resamplestepwisesum3": [415, 425], "test_resamplestepwisesum4": [415, 425], "test_resamplestepwisesum5": [415, 425], "test_resamplestepwisesum6": [415, 425], "test_resamplestepwisesum7": [415, 425], "test_resamplestepwiseavgallnon": [415, 425], "test_resamplestepwiseavgonenon": [415, 425], "test_resamplestepwisesumallnon": [415, 425], "test_resamplestepwisesumonenon": [415, 425], "test_resamplestepwiseavgcomplicatednon": [415, 425], "test_resamplestepwiseavgnparrai": [415, 425], "test_resamplestepwiseavgnparrayaverag": [415, 425], "test_rotatexi": [415, 425], "test_hashfil": [415, 426], "test_deletecach": [415, 426], "test_getcachedfold": [415, 426], "test_makeoutputmanifest": [415, 426], "test_retrieveoutput": [415, 426], "test_tryliteralev": [415, 427], "test_parsevalu": [415, 427], "test_separatemoduleandattribut": [415, 428], "test_importcustommodul": [415, 428], "test_moduleandattributeexist": [415, 428], "test_cleanpathnompi": [415, 428], "test_isfilepathnew": [415, 428], "test_isaccess": [415, 428], "test_plotdepthmap": [415, 429], "test_plotassemblytyp": [415, 429], "test_plotblockflux": [415, 429], "test_plothexblock": [415, 429], "test_plotcartesianblock": [415, 429], "test_makeassempatch": [415, 429], "test_retreivingunassignedvalueraiseserror": [415, 430], "test_cannotassignvaluetoimmutableproperti": [415, 430], "test_unlockdoesnotpermitsreassignmentofanimmutableproperti": [415, 430], "test_radar": [415, 431], "test_createplotmetadata": [415, 431], "test_plotaxialprofil": [415, 431], "test_keffvstim": [415, 431], "test_valuevstim": [415, 431], "test_buvstim": [415, 431], "test_movesvscycl": [415, 431], "test_xshistoryvstim": [415, 431], "test_tabulateformat": [415, 432], "test_iterableofempti": [415, 432], "test_iterableofiter": [415, 432], "test_iterableofiterableshead": [415, 432], "test_iterableofiterablesfirstrow": [415, 432], "test_listoflist": [415, 432], "test_listoflistsfirstrow": [415, 432], "test_listoflistskei": [415, 432], "test_dictlik": [415, 432], "test_numpy2d": [415, 432], "test_numpy2dfirstrow": [415, 432], "test_numpy2dkei": [415, 432], "test_numpyrecordarrai": [415, 432], "test_numpyrecordarraykei": [415, 432], "test_numpyrecordarrayhead": [415, 432], "test_listofnamedtupl": [415, 432], "test_listofnamedtupleskei": [415, 432], "test_listofdict": [415, 432], "test_listofuserdict": [415, 432], "test_listofdictskei": [415, 432], "test_listofuserdictskei": [415, 432], "test_listofdictswithmissingkei": [415, 432], "test_listofdictsfirstrow": [415, 432], "test_listofdictswithdictofhead": [415, 432], "test_listofdictswithlistofhead": [415, 432], "test_listofordereddict": [415, 432], "test_listbyt": [415, 432], "test_tightcouplingexampl": [415, 432], "test_aligncolumndecim": [415, 432], "test_aligncolumndecimalwiththousandsepar": [415, 432], "test_aligncolumndecimalwithincorrectthousandsepar": [415, 432], "test_aligncolumnnon": [415, 432], "test_aligncolumnmultilin": [415, 432], "test_aligncellveriticallyonelineonli": [415, 432], "test_aligncellveriticallytopsingletextmultiplepad": [415, 432], "test_aligncellveriticallycentersingletextmultiplepad": [415, 432], "test_aligncellveriticallybottomsingletextmultiplepad": [415, 432], "test_aligncellveriticallytopmultitextmultiplepad": [415, 432], "test_aligncellveriticallycentermultitextmultiplepad": [415, 432], "test_aligncellveriticallybottommultitextmultiplepad": [415, 432], "test_assortedrareedgecas": [415, 432], "test_buildlin": [415, 432], "test_buildrow": [415, 432], "test_format": [415, 432], "test_ismultilin": [415, 432], "test_multilinewidth": [415, 432], "test_normalizetabulardata": [415, 432], "test_typ": [415, 432], "test_visiblewidth": [415, 432], "test_wraptexttocolwidth": [415, 432], "test_plain": [415, 432], "test_plainheaderless": [415, 432], "test_plainmultilineheaderless": [415, 432], "test_plainmultilin": [415, 432], "test_plainmultilinewithlink": [415, 432], "test_plainmultilinewithemptycel": [415, 432], "test_plainmultilinewithemptycellsheaderless": [415, 432], "test_plainmaxcolwidthautowrap": [415, 432], "test_plainmaxcolwidthautowrapswithsep": [415, 432], "test_maxcolwidthsinglevalu": [415, 432], "test_maxcolwidthpadtailingwidth": [415, 432], "test_maxcolwidthhonordisableparsenum": [415, 432], "test_plainmaxheadercolwidthsautowrap": [415, 432], "test_simpl": [415, 432], "test_simplewithseplin": [415, 432], "test_readmeexamplewithsep": [415, 432], "test_simplemultiline2": [415, 432], "test_simplemultiline2withseplin": [415, 432], "test_simpleheaderless": [415, 432], "test_simpleheaderlesswithseplin": [415, 432], "test_simplemultilineheaderless": [415, 432], "test_simplemultilin": [415, 432], "test_simplemultilinewithlink": [415, 432], "test_simplemultilinewithemptycel": [415, 432], "test_simplemultilinewithemptycellsheaderless": [415, 432], "test_github": [415, 432], "test_gridheaderless": [415, 432], "test_gridmultilineheaderless": [415, 432], "test_gridmultilin": [415, 432], "test_gridmultilinewithemptycel": [415, 432], "test_gridmultilinewithemptycellsheaderless": [415, 432], "test_pretti": [415, 432], "test_prettyheaderless": [415, 432], "test_prettymultilineheaderless": [415, 432], "test_prettymultilin": [415, 432], "test_prettymultilinewithlink": [415, 432], "test_prettymultilinewithemptycel": [415, 432], "test_prettymultilinewithemptycellsheaderless": [415, 432], "test_rst": [415, 432], "test_rstwithemptyvaluesinfirstcolumn": [415, 432], "test_rstheaderless": [415, 432], "test_rstmultilin": [415, 432], "test_rstmultilinewithlink": [415, 432], "test_rstmultilinewithemptycel": [415, 432], "test_rstmultilinewithemptycellsheaderless": [415, 432], "test_nodata": [415, 432], "test_emptydata": [415, 432], "test_nodatawithouthead": [415, 432], "test_emptydatawithouthead": [415, 432], "test_intfmt": [415, 432], "test_emptydatawithhead": [415, 432], "test_floatfmt": [415, 432], "test_floatfmtmulti": [415, 432], "test_colalignmulti": [415, 432], "test_colalignmultiwithseplin": [415, 432], "test_columnglobalandspecificalign": [415, 432], "test_headersglobalandspecificalign": [415, 432], "test_colalignorheadersaligntoolong": [415, 432], "test_floatconvers": [415, 432], "test_missingv": [415, 432], "test_missingvalmulti": [415, 432], "test_columnalign": [415, 432], "test_dictlikewithindex": [415, 432], "test_listoflistswithindex": [415, 432], "test_listoflistswithindexwithseplin": [415, 432], "test_listoflistswithsuppliedindex": [415, 432], "test_listoflistswithindexfirstrow": [415, 432], "test_disablenumparsedefault": [415, 432], "test_disablenumparsetru": [415, 432], "test_disablenumparselist": [415, 432], "test_resolveinclud": [415, 433], "test_resolveincludes_stringio": [415, 433], "test_findinclud": [415, 433], "textstream": [415, 433], "test_readfil": [415, 433], "test_readfilewithpattern": [415, 433], "test_gettrianglearea": [415, 434], "test_checkifpointisintriangl": [415, 434], "test_checkifpointisintriangle2": [415, 434], "test_gettc": [415, 435], "test_gettk": [415, 435], "test_gettf": [415, 435], "test_pressure_convert": [415, 435], "test_gettmev": [415, 435], "test_gettemperatur": [415, 435], "test_convertxtopasc": [415, 435], "test_sanitizeangl": [415, 435], "test_getxylineparamet": [415, 435], "test_mergeabledictionari": [415, 436], "test_createformattedstrwithdelimit": [415, 436], "test_capstrlen": [415, 436], "test_list2str": [415, 436], "test_slantsplit": [415, 436], "test_prependtolist": [415, 436], "test_plotmatrix": [415, 436], "test_classesinhierarchi": [415, 436], "test_safecopi": [415, 436], "simplecyclesset": [415, 436], "powerfractionsdetailedsolut": [415, 436], "powerfractionssimplesolut": [415, 436], "cyclenamesdetailedsolut": [415, 436], "cyclenamessimplesolut": [415, 436], "availabilityfactorsdetailedsolut": [415, 436], "availabilityfactorssimplesolut": [415, 436], "steplengthsdetailedsolut": [415, 436], "steplengthssimplesolut": [415, 436], "cyclelengthsdetailedsolut": [415, 436], "cyclelengthssimplesolut": [415, 436], "burnstepsdetailedsolut": [415, 436], "burnstepssimplesolut": [415, 436], "nodespercycledetailedsolut": [415, 436], "nodespercyclesimplesolut": [415, 436], "maxburnstepsdetailedsolut": [415, 436], "maxburnstepssimplesolut": [415, 436], "test_hasburnup": [415, 436], "test_getnodespercycl": [415, 436], "test_getcyclenodefromcumulativestep": [415, 436], "test_getcyclenodefromcumulativenod": [415, 436], "test_getprevioustimenod": [415, 436], "test_getcumulativenodenum": [415, 436], "spot": 416, "chop": 416, "isotopc": 419, "succe": 420, "cohort": 422, "doesnt": 422, "fuzzi": 423, "invari": 423, "uneven": 425, "propereti": 430, "smoke": 431, "userdict": 432, "_align_column": 432, "is_multilin": 432, "multilin": 432, "celltext": 432, "_buildlin": 432, "_buildrow": 432, "_format": 432, "_ismultilin": 432, "_multilinewidth": 432, "_normalizetabulardata": 432, "_type": 432, "_visiblewidth": 432, "_wraptexttocolwidth": 432, "autowrap": 432, "partli": 432, "tail": [432, 503], "disable_parsenum": 432, "honor": [432, 501], "stringio": [433, 437, 482], "nthi": 433, "ncan": 433, "nfile": 433, "nx": 433, "checkifpointisintrinagl": 434, "barycentriccheckifpointisintriangl": 434, "pascal": [435, 439], "dog": 436, "ferret": 436, "r2": [436, 501], "r1": 436, "03333333333333333": 436, "06666666666666667": 436, "10000000000000002": 436, "eedd": 437, "23e10": 437, "23ee10": 437, "23d10": 437, "23e": 437, "213423": 437, "2342": 437, "023": [437, 486], "relativeto": 437, "textiobas": 437, "ruamel": 437, "prohibit": 437, "drawback": 437, "underpin": 437, "alias": 437, "monkei": 437, "stackoverflow": 437, "44910886": 437, "pyyaml": [437, 482], "chunck": 437, "somefil": 437, "occurr": 437, "_searchfor": 437, "inidc": 437, "occurec": 437, "highmem": 437, "rewind": 437, "checkforerror": 437, "killon": 437, "textflag": 437, "vertici": 438, "heron": 438, "coordind": 438, "27s_formula": 438, "barycentr": 438, "totolog": 438, "blogspot": 438, "fahrenheit": 439, "tempunit": 439, "mmhg": 439, "pbar": 439, "patm": 439, "atomspher": 439, "sphinx": [441, 451, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 488, 494], "restructedtext": 441, "repositori": [441, 451], "hyperlink": 441, "virtual": [441, 479, 500], "pip": [441, 443, 479], "graphviz": 441, "latex": [441, 475], "miktex": 441, "imagemagick": 441, "_build": 441, "host": 441, "rsync": 441, "ahv": 441, "intersphinx": 441, "intersphinx_map": 441, "sphinxcontrib": 441, "workflow": [441, 445, 449, 451, 488], "apidoc_extra_arg": 441, "sphx_glr_galleri": 441, "highlight": 441, "neat": 441, "nbsphinx": 441, "nbconvert": 441, "clearoutputpreprocessor": 441, "inplac": 441, "mynotebook": 441, "verb": 442, "joi": 442, "armi": [442, 443, 444, 445, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 480, 485, 487, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 507], "sampleentrypoint": 442, "conf_cycle_length": 442, "conf_burn_step": 442, "store_tru": 442, "inputcas": 442, "post_process": 442, "settingsfil": 442, "pythonpath": [442, 480, 488, 507], "codebas": [443, 501], "publicli": 443, "regul": 443, "annot": [443, 475], "fork": 443, "guidanc": [443, 446, 451], "bot": 443, "agreement": 443, "publish": 443, "synopsi": 443, "pyproject": [443, 479, 482, 484, 488], "toml": [443, 479, 482, 484, 488], "superce": [443, 479], "apach": [443, 451, 479, 492], "gpl": [443, 451, 479], "bsd": [443, 451, 479], "restraint": 444, "explor": [444, 455, 462, 477, 487, 489, 491, 494], "spectral": 444, "heavili": [444, 451], "seen": [444, 451, 479, 488, 499, 501, 502], "guid": [444, 445, 479, 480, 492, 493, 507], "environment": [444, 450, 480, 507], "former": 444, "quasistat": 444, "promin": [444, 488], "softwaretest": 444, "orificedoptim": 444, "orific": [444, 496], "alchemylit": 444, "alchemi": 444, "subchan": 444, "launch": 444, "fire": [444, 447, 479], "teach": 445, "audienc": 445, "scientist": 445, "contributor": [445, 479], "black": [445, 475, 482], "ruff": [445, 446, 463, 473, 482, 483, 484], "nake": 445, "envelop": 446, "proprietari": [446, 472, 479, 501], "ship": 446, "perus": 446, "deeper": 446, "feel": [446, 488], "overli": [446, 492], "familiar": [446, 450, 480, 507], "chose": 446, "complain": [446, 482], "guidelin": [446, 450], "iceberg": 446, "cohes": 446, "plug": [446, 479], "Such": [446, 451, 501], "_pm": [446, 488], "plugina": 446, "pluginb": 446, "fear": 447, "mpi_rank": 447, "comm": 447, "proc0": 447, "proc1": 447, "proc2": 447, "proc3": 447, "val3": 447, "farm": 447, "worklist": 447, "_i": [447, 451], "unchunk": 447, "reassembl": 447, "mpi_exampl": 447, "v4": 447, "worklistloadbalanc": 447, "myvalstoadd": 447, "num1": 447, "num2": 447, "allresultsloadbalanc": 447, "allresult": 447, "5f": [447, 449], "transmiss": 447, "surviv": [447, 501], "someinterfac": 447, "interactevernod": 447, "bcastact": 447, "aresult": 447, "someparam": 447, "somefunct": 447, "opt": 447, "someset": 447, "distrib": 447, "extractblockresult": 447, "whatact": 447, "generatemyobject": 447, "depletionmatrix": [447, 497], "burnmatrix": [447, 497], "computation": 447, "reasonbli": 448, "stat": 448, "gprof2dot": 448, "invalu": 448, "graphvi": 448, "pstat": 448, "mystatsfil": 448, "tpng": 448, "mydesiredimagenam": 448, "cornerston": 449, "creategeneralreportcont": 449, "blueprintcont": 449, "getendoflifecont": 449, "imagin": 449, "dicionari": 449, "scene": [449, 489, 492], "__get__": 449, "childcont": 449, "prose": 449, "enclos": 449, "bdesign": 449, "combat": 449, "currentt": 449, "overview": [449, 479, 501], "comprehensive_report": 449, "tablelist": 449, "outputfileextens": [449, 501], "mwt": [449, 492], "0e6": [449, 486], "similarili": 449, "conf_boundari": 449, "conf_neutronics_kernel": 449, "conf_fp_model": 449, "assembly_area": 449, "sup": 449, "beg": 449, "mayb": [449, 488], "overdo": 449, "sole": 449, "neutronicssect": 449, "reportconst": 449, "neutronics_sect": 449, "keff_plot": 449, "thier": 449, "subpart": 450, "402": 450, "nqa": 450, "shall": 450, "clariti": [450, 465, 486], "theme": 450, "concis": [450, 452, 477, 494], "deviat": 450, "justifi": 450, "justif": 450, "consult": 450, "formatt": 450, "amaz": 450, "linter": [450, 482], "setabl": 450, "password": 450, "fragil": 450, "nigh": 450, "debugg": 450, "annoy": 450, "userbas": 450, "camelcas": [450, 479, 484], "hassl": 450, "correlationmatrix": 450, "prefac": 450, "underscor": 450, "_": [450, 480, 484, 486, 491, 504, 507], "pronounc": 450, "acronym": 450, "understood": 450, "expert": 450, "pascalcas": 450, "diskio": 450, "iooper": 450, "renderhtml": 450, "test_": 450, "packagenam": 450, "modulenam": 450, "speed_of_light_in_meters_per_second": 450, "_one_over_pi": 450, "dosomeact": 450, "_dosomeact": 450, "_assembli": 450, "linearheatgenerationr": 450, "_unuseddescript": 450, "repetiti": 450, "harderd": 450, "runnabl": 450, "modern": [450, 479], "laptop": [450, 479], "pyplot": [450, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 486, 489, 490, 493], "sin": 450, "articl": 450, "explain": [450, 451, 503], "zerodivisionerror": 450, "floatingpointerror": 450, "paradigm": 450, "json": 450, "strict": [450, 482, 484], "relic": 450, "fixm": 450, "xxx": 450, "stranger": 451, "voic": 451, "tens": 451, "oh": 451, "chapter": 451, "discourtesi": 451, "busi": 451, "polish": [451, 479], "draft": [451, 483], "thumb": 451, "lint": [451, 482, 483], "somebodi": 451, "bread": 451, "crumb": 451, "breadcrumb": 451, "minor": [451, 481, 484], "conf": 451, "install_requir": 451, "abstractli": 451, "extras_requir": 451, "strictli": 451, "bump": [451, 475], "123": 451, "revv": 451, "nrc": 451, "sanction": 451, "deserv": 451, "admin": [451, 501], "privileg": 451, "ui": 451, "die": 451, "branchverbos": [451, 501, 503], "visibl": 451, "halt": 451, "happili": 451, "silli": 451, "wick": 451, "000": [451, 486, 491], "explanatori": [452, 477, 494], "download": [457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 480, 488, 492, 493, 507], "pervas": 457, "m1": 457, "40090": 457, "35498695e": 457, "40091": 457, "31641456e": 457, "40092": 457, "11832896e": 457, "40094": 457, "13332690e": 457, "40096": 457, "82584320e": 457, "92234": 457, "00000000e": 457, "36147243e": 457, "92236": 457, "92238": 457, "48425449e": 457, "93237": 457, "93238": 457, "94236": 457, "94238": 457, "94240": 457, "94241": 457, "94242": 457, "95241": 457, "95242": 457, "95243": 457, "96242": 457, "96243": 457, "96244": 457, "96245": 457, "96246": 457, "96247": 457, "m2": 457, "11023": 457, "21665718e": 457, "m3": 457, "67941747e": 457, "14028": 457, "78629407e": 457, "14029": 457, "92249968e": 457, "14030": 457, "26729800e": 457, "23000": 457, "71601526e": 457, "24050": 457, "52833976e": 457, "24052": 457, "73245259e": 457, "24053": 457, "90190013e": 457, "24054": 457, "46479253e": 457, "25055": 457, "19738893e": 457, "26054": 457, "09816265e": 457, "26056": 457, "43323879e": 457, "26057": 457, "48571542e": 457, "26058": 457, "97721449e": 457, "28058": 457, "94209415e": 457, "28060": 457, "13328336e": 457, "28061": 457, "92675527e": 457, "28062": 457, "57051128e": 457, "28064": 457, "00190823e": 457, "42092": 457, "13437638e": 457, "42094": 457, "44696641e": 457, "42095": 457, "65358976e": 457, "42096": 457, "01896213e": 457, "42097": 457, "59119235e": 457, "42098": 457, "16005724e": 457, "42100": 457, "62965260e": 457, "74182": 457, "66064130e": 457, "74183": 457, "97674630e": 457, "74184": 457, "23253002e": 457, "74186": 457, "92724649e": 457, "m4": 457, "68566498e": 457, "78937437e": 457, "92406371e": 457, "26832899e": 457, "71822485e": 457, "53202374e": 457, "73955678e": 457, "90995571e": 457, "46679773e": 457, "20080367e": 457, "10149666e": 457, "43847248e": 457, "48692411e": 457, "97882303e": 457, "94448766e": 457, "13420533e": 457, "93076337e": 457, "57178896e": 457, "00516393e": 457, "14018048e": 457, "45058419e": 457, "65981625e": 457, "02548587e": 457, "59492746e": 457, "16100100e": 457, "63341900e": 457, "66361937e": 457, "97835446e": 457, "23597335e": 457, "93044146e": 457, "m5": 457, "m6": 457, "m7": 457, "sphinx_gallery_thumbnail_path": 457, "logo": 457, "_o": [457, 458], "bfuel": [457, 458], "ndensbybas": 457, "den": 457, "join": [457, 475], "minut": [457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "run_blockmcnpmaterialcard": [457, 460], "bcontrol": 458, "459": [458, 460, 486], "run_hexblocktorzconvers": [458, 460], "sphinx_gallery_thumbnail_numb": [459, 466], "175": 459, "thetamesh": 459, "run_hexreactortorz": [459, 460], "999": 460, "gallery_analysi": 460, "sphx_glr_gallery_framework_run_fuelmanag": [462, 476, 477, 494], "assess": 463, "23641": 463, "0189566": 463, "0764606": 463, "553986": 463, "114187": 463, "233214": 463, "0189313": 463, "557207": 463, "234575": 463, "0189824": 463, "0766673": 463, "555588": 463, "0190348": 463, "0768788": 463, "55349": 463, "238847": 463, "0190871": 463, "07709": 463, "550789": 463, "242019": 463, "0191381": 463, "0772959": 463, "54736": 463, "246067": 463, "0191865": 463, "0774913": 463, "543069": 463, "264995": 463, "0193035": 463, "0779642": 463, "52355": 463, "noqa": [463, 473], "e402": [463, 473], "writeinitialvolumefract": 463, "plotvolfracswithcomponenttemp": 463, "uniformtemp": 463, "componentstomodifi": 463, "initialvol": 463, "relativevol": 463, "uniformtempsinc": 463, "subplot": [463, 465, 467, 472, 475], "set_titl": [463, 467, 472, 475], "set_ylabel": [463, 475], "set_xlabel": [463, 472, 475], "286": [463, 476], "run_blockvolumefract": [463, 476], "xyc": [464, 490], "zip": [464, 465, 468, 469, 480, 490, 493, 507], "marker": [464, 490], "run_chartofnuclid": [464, 476], "isoaa_path": [465, 470, 471], "_addflux": 465, "createdummyreactor": 465, "allrat": 465, "ratedata": 465, "ratelabel": 465, "nucrat": 465, "arang": [465, 472, 486, 488], "set_xtick": [465, 472], "set_xticklabel": [465, 472], "axvlin": 465, "set_xlim": [465, 467, 475], "yscale": [465, 470], "409": [465, 476], "run_computereactionr": [465, 476], "demo": [466, 475, 479, 491], "140262077592192": 466, "reftestcartesian": 466, "cosin": 466, "candidateassem": 466, "433": [466, 476], "run_fuelmanag": [466, 476], "mpatch": [467, 475], "patchcollect": [467, 475], "poli": 467, "set_aspect": [467, 475], "set_axis_off": 467, "hex_i": 467, "va": [467, 475], "regularpolygon": 467, "numvertic": 467, "fc": [467, 493], "white": 467, "add_collect": [467, 475], "margin": [467, 479], "bbox": 467, "get_datalim": 467, "transdata": 467, "xmin": 467, "xmax": 467, "set_ylim": [467, 475], "ymax": 467, "168": [467, 476], "run_grids1_hex": [467, 476], "cartesian_grid": 468, "add_subplot": [468, 469], "run_grids2_cartesian": [468, 476], "linspac": [469, 489, 491], "rz_grid": 469, "run_grids3_rzt": [469, 476], "anl33": [470, 501], "xscale": 470, "446": [470, 476], "run_isotx": [470, 476], "inelasticscatt": 471, "n2nscatter": 471, "131": [471, 476], "run_isotxs2_matrix": [471, 476], "max_z": 472, "nummat": 472, "idx": 472, "indexerror": 472, "im": 472, "imshow": 472, "ylgn": 472, "set_ytick": 472, "set_yticklabel": 472, "486": [472, 476], "run_materi": [472, 476], "traceabl": 473, "140262076896160": 473, "buildcas": 473, "buildcompon": 473, "blockdesign": [473, 491], "buildblock": 473, "assemdesign": 473, "buildassembli": 473, "buildgrid": 473, "systemdesign": 473, "buildsystem": 473, "isothermal_temperature_in_c": 473, "508": 473, "5842": 473, "14224": 473, "72644": 473, "0109": 473, "6205": 473, "01420": 473, "cname": 473, "fuelbock": 473, "reflectorblock": 473, "fuelassem": 473, "reflectorassem": 473, "coregrid": 473, "532": [473, 476], "run_programmaticreactordefinit": [473, 476], "140262234974288": 474, "140262241492944": 474, "030": [474, 476, 486], "run_reactorfacemap": [474, 476], "shortcut": 475, "bateman": 475, "plotnuc": 475, "ry": 475, "get_xi": 475, "cx": 475, "get_width": 475, "cy": 475, "get_height": 475, "plotal": 475, "xlim": 475, "ylim": 475, "xp": 475, "yp": 475, "deeppink": 475, "orang": 475, "arrowprop": 475, "shrink": 475, "rxntype": 475, "atan": 475, "180": [475, 492], "grei": 475, "facecolor": 475, "mistyros": 475, "edgecolor": 475, "zoom": 475, "139": 475, "154": 475, "run_transmutationmatrix": [475, 476], "431": 476, "gallery_framework": 476, "megawatt": 478, "kilogram": 478, "mwd": [478, 497, 498], "radionuclid": [478, 497, 499], "fima": [478, 496, 497, 498, 499, 501], "thin": 478, "imped": 478, "wastag": [478, 479, 497, 499, 501], "predomin": 478, "todai": [478, 479], "gass": [478, 492], "twr": [478, 479], "travel": [478, 479], "wave": [478, 479], "breed": [478, 497, 499], "advantag": [478, 479], "streamlin": 479, "fingertip": [479, 492], "profession": 479, "llc": [479, 492], "compani": 479, "hub": 479, "spoke": 479, "specialist": 479, "acquir": 479, "first_time_contributor": 479, "prerequisit": [479, 500], "launcher": 479, "tour": 479, "nuclei": 479, "energet": 479, "induc": [479, 504], "withdraw": 479, "postul": 479, "earthquak": 479, "eniac": 479, "1940": [479, 484], "toss": 479, "experiment": [479, 493], "surprisingli": 479, "port": 479, "specialti": 479, "born": 479, "eclect": 479, "uncoupl": 479, "dispatch": 479, "multiobject": 479, "Its": [479, 488, 501], "labor": 479, "focu": 479, "seamless": 479, "green": [479, 493], "skelet": 479, "schemat": [479, 501], "subchannel": [479, 492, 501], "cfd": [479, 501], "curat": 479, "wall": 479, "orif": [479, 497, 501], "electr": [479, 506], "creativ": [479, 492], "graduat": 479, "undergradu": 479, "greatli": [479, 481, 482], "uncommon": 479, "tedium": 479, "fftf": [479, 501], "perfect": 479, "wing": 479, "seattl": 479, "mission": 479, "intertwin": 479, "secreci": 479, "risk": 479, "entiti": 479, "hypothes": 479, "worldwid": 479, "shakedown": 479, "fund": 479, "predominantli": 479, "microsoft": 479, "flavor": 479, "realiz": 479, "mail": 479, "broadli": 479, "phenix": 479, "bf": 479, "acceler": 479, "stuck": 479, "trademark": 479, "holder": 479, "copyright": [479, 492], "2024": [479, 483, 484, 486, 501], "complianc": [479, 492], "warranti": [479, 492], "touran": 479, "nichola": 479, "2017": 479, "518": 479, "526": 479, "eng": 479, "016": 479, "glossari": 479, "python3": [480, 507], "pip3": [480, 507], "vv": [480, 507], "navig": [480, 507], "venv": [480, 495, 507], "deactiv": [480, 501, 507], "bat": [480, 507], "sudo": [480, 507], "apt": [480, 507], "libopenmpi": [480, 507], "ssh": [480, 507], "click": [480, 486, 501, 507], "bashrc": [480, 507], "____": [480, 486, 491, 507], "__": [480, 486, 491, 507], "congrat": [480, 507], "wxpython": [480, 507], "websit": [480, 507], "2021": [481, 482], "vestigi": 481, "detailassemsbybolloc": 481, "materialclassnam": 481, "armitestbas": 481, "dumplocationsnapshot": 481, "obviat": 481, "redund": [481, 482], "isannular": 481, "doth": [481, 501], "armiabsdirfromnam": 481, "delat": 481, "addcompon": 481, "constist": 481, "latticefil": 481, "diment": 481, "pympler": 481, "demot": 481, "2023": 482, "1383": 482, "getmasterc": 482, "setmasterc": 482, "1399": 482, "1336": 482, "1349": 482, "1345": 482, "1355": 482, "1335": 482, "1395": 482, "sha1": 482, "1334": 482, "1409": 482, "gh": 482, "1341": 482, "avgfueltemp": [482, 497], "1362": 482, "1347": 482, "1396": 482, "_getnuctemphelp": 482, "1363": 482, "_processinclud": 482, "1333": 482, "1342": 482, "1280": 482, "1296": 482, "1288": 482, "1294": 482, "1265": 482, "1320": 482, "1183": 482, "1299": 482, "1277": 482, "drastic": 482, "1282": 482, "1275": 482, "density3": 482, "1163": 482, "1274": 482, "hcfcoretyp": 482, "1179": 482, "1248": 482, "1239": 482, "assemflagstoskipaxialexpans": 482, "1235": 482, "1204": 482, "1219": 482, "1218": 482, "1227": 482, "dctype": 482, "1228": 482, "1226": 482, "1229": 482, "createrepresentativeblocksfromexistingblock": 482, "1217": 482, "priorit": 482, "1237": 482, "1230": 482, "1238": 482, "1256": 482, "1257": 482, "1258": 482, "1270": 482, "1213": 482, "1216": 482, "1206": 482, "1225": 482, "1062": 482, "froze": 482, "1035": 482, "955": 482, "962": 482, "4614": [482, 490], "998": 482, "overhaul": 482, "loosecoupl": 482, "1033": 482, "c2n1": 482, "952": 482, "959": 482, "fuelcladlock": [482, 497], "1038": 482, "1022": 482, "1047": 482, "1042": 482, "1086": 482, "1098": 482, "uniformmeshconvert": 482, "1108": 482, "1165": 482, "cyclesskiptightcouplinginteract": 482, "referenceblockaxialmesh": [482, 499], "980": 482, "deadelin": 482, "barrier": 482, "1046": 482, "1067": 482, "1118": 482, "992": 482, "1168": 482, "1129": 482, "magnessium": 482, "1126": 482, "1128": 482, "1131": 482, "1150": 482, "1149": 482, "1199": 482, "1178": 482, "1185": 482, "2022": 482, "coveragerc": [482, 484], "924": 482, "932": 482, "922": [482, 486, 492], "943": 482, "942": 482, "fastflux": [482, 492, 497], "_swapfluxparam": 482, "665": 482, "settingsrul": 482, "872": 482, "__repr__": 482, "stationaryblock": 482, "stationaryblockflag": [482, 501], "isoxx": 482, "getreac": 482, "rotatepin": [482, 484], "855": 482, "_applythermalexpans": 482, "completeinitiaload": 482, "secur": 482, "alert": 482, "530": 482, "558": 482, "546": 482, "uml": 482, "weren": 482, "550": 482, "557": 482, "hint": 482, "540": 482, "507": 482, "490": 482, "534": 482, "solidifi": 482, "stake": 482, "clarif": 482, "anl116": [482, 501], "multii": 482, "bugfix": 482, "_copyinputshelp": 483, "1416": 483, "1412": 483, "functool": 483, "1466": 483, "incorrectli": 483, "1614": 483, "mandat": 483, "1419": 483, "1438": 483, "downgrad": 483, "polici": 483, "1444": 483, "tbd": 484, "1891": 484, "1813": 484, "ingest": 484, "1811": 484, "1842": 484, "1858": 484, "_rotatepin": 484, "1859": 484, "1846": 484, "1899": 484, "1870": 484, "1835": 484, "1912": 484, "1895": 484, "prepsearch": 484, "1845": 484, "skippingxsgen_buchangedlessthantoler": 484, "1881": 484, "buildeqringschedul": 484, "1928": 484, "1844": 484, "assemblylist": 484, "1831": 484, "1824": 484, "permissionerror": 484, "1857": 484, "1853": 484, "thkernel": [484, 501], "1855": 484, "1828": 484, "1883": 484, "1852": 484, "1925": 484, "_checkparamconsist": 484, "axialunitgrid": 484, "1809": 484, "1861": 484, "1665": 484, "1425": 484, "1689": 484, "1729": 484, "1750": 484, "1745": 484, "1726": 484, "1717": 484, "1796": 484, "1650": 484, "1651": 484, "allpositionsinthird": 484, "1655": 484, "getallnuclidesin": 484, "plottriangleflux": 484, "1656": 484, "dochelp": 484, "1662": 484, "convertdatabas": 484, "convertdb": 484, "1658": 484, "buildcommand": 484, "1773": 484, "1671": 484, "extran": 484, "armiojbect": 484, "1667": 484, "getmaxuraniummassenrich": 484, "getpufrac": 484, "getpumass": 484, "getpun": 484, "getzrfrac": 484, "printdens": 484, "rditernum": 484, "1704": 484, "outsidefuelr": 484, "outsidefuelringfluxfr": 484, "doorificedth": 484, "1706": 484, "1659": 484, "_expandcycleandtimenodearg": 484, "1766": 484, "1090": 484, "1649": 484, "1691": 484, "1653": 484, "1751": 484, "1771": 484, "1786": 484, "maco": [484, 488], "1713": 484, "1646": 484, "1770": 484, "1692": 484, "1670": 484, "cadenc": 485, "v0": 485, "lt": [486, 490, 491], "afci": [486, 488, 491, 492, 495], "haleu": [486, 492], "tru": [486, 492, 501], "fv": 486, "az1117": 486, "wed": 486, "oct": 486, "e10c9b6de9": 486, "29f959e5a4": 486, "5904530cb2": 486, "fuelmanag": [486, 492], "622957b035": 486, "mw": [486, 491, 496, 497, 499], "411": [486, 492, 493], "184": 486, "9995": 486, "139806633785616": 486, "gp": [486, 491], "006": [486, 491], "999999999998449e": [486, 491], "597": [486, 491, 492], "cr54": 486, "cr53": 486, "si29": 486, "mo100": 486, "mo92": 486, "fe58": 486, "cr52": 486, "fe57": 486, "mo96": 486, "mo97": 486, "ni60": 486, "mo94": 486, "cr50": 486, "ni58": 486, "mo98": 486, "ni62": 486, "ni61": 486, "si30": 486, "si28": 486, "ni64": 486, "helic": [486, 492], "dodecagon": 486, "a0005": 486, "011": 486, "056": 486, "a0004": 486, "045": [486, 501], "a0010": 486, "010": 486, "051": 486, "a0016": 486, "057": 486, "a0003": 486, "007": 486, "a0009": 486, "008": 486, "040": 486, "a0015": 486, "046": 486, "a0021": 486, "052": 486, "a0027": 486, "058": 486, "a0002": 486, "a0008": 486, "029": 486, "a0014": 486, "035": 486, "a0020": 486, "041": 486, "a0026": 486, "047": 486, "a0033": 486, "053": 486, "a0039": 486, "059": 486, "a0007": 486, "018": 486, "a0013": 486, "024": 486, "a0019": 486, "a0025": 486, "036": 486, "a0032": 486, "042": 486, "a0038": 486, "048": 486, "a0045": 486, "054": 486, "a0000": 486, "fifth": 486, "fifthassem": 486, "drill": 486, "a0006": 486, "b0006": 486, "913110": 486, "7780886302": 486, "1615298013245032": 486, "e6": 486, "630279585150355": 486, "press": 486, "5940e": 486, "b0000": 486, "impt": [486, 491, 503], "271": [486, 492], "6029": [486, 492], "6086118601525807": 486, "447": [486, 492], "6962": [486, 492], "6996347645979837": 486, "0466500": 486, "0455115": 486, "808": [486, 492], "8119863398379357": 486, "0559000": 486, "0561758": 486, "148007667250084": 486, "8888": [486, 492], "8931849738217292": 486, "0808": [486, 492], "08119863398379355": 486, "995619013690193": 486, "787506681749962": 486, "3940000": 486, "3959438": 486, "142": [486, 492], "2160000": 486, "1772467": 486, "midplan": 486, "peakpow": [486, 488], "1e6": [486, 488, 491], "mgfluxbas": [486, 488], "setfakepow": [486, 488], "linalg": [486, 488], "fuelflag": [486, 488], "603": 486, "6363986253243": 486, "3949368453772478": 486, "sodiumbefor": 486, "2f": [486, 489], "sodiumaft": 486, "20241009175712836395": 486, "c00n01": 486, "databaseloc": 486, "dbo": 486, "fro": 486, "909142": 486, "5216630063": 486, "lucki": 486, "neutronicskernel": [486, 501], "brand": 486, "hopefulli": 486, "readi": 488, "shell": [488, 491], "proce": [488, 501], "my_armi_project": 488, "fluxsolv": 488, "thermalsolv": 488, "readm": 488, "quickstart": 488, "exampleapp": 488, "shortli": 488, "mixabl": 488, "__version__": 488, "armi_vers": 488, "myapp_vers": 488, "dummyphysicsplugin": 488, "cobra": 488, "cacophoni": 488, "subphys": 488, "conf_vers": 488, "setversioninset": 488, "fluxinterfac": 488, "thermalinterfac": 488, "facet": 488, "boiler": 488, "myappvers": 488, "nasti": 488, "conf_inlet_temperatur": 488, "inletinc": 488, "conf_outlet_temperatur": 488, "outletinc": 488, "520": 488, "weav": 488, "administr": 488, "gut": 488, "cloud": 488, "tini": 488, "dummyflux": 488, "fuelblock": 488, "topfuelz": 488, "bottomfuelz": 488, "coremidplan": 488, "told": 488, "q": 488, "c_p": 488, "dummyth": 488, "runthermalhydraul": 488, "massflow": 488, "computeidealizedflow": 488, "computeaxialcoolanttemperatur": 488, "tempavg": 488, "coolantprop": 488, "massflowr": 488, "qdot": 488, "mdot": 488, "thcoolantinlett": [488, 496, 497], "thcoolantoutlett": [488, 496, 497], "thcoolantaveraget": [488, 497], "phenomen": 488, "lovingli": 488, "whack": 488, "slash": 488, "252": 488, "materialnamespaceord": [488, 501], "vizual": 488, "510": [488, 501], "lighter": 488, "finicki": 488, "sublass": [488, 504], "userpluginexampl": 488, "userplugin0": 488, "pluginz": [488, 501], "userplugin1": 488, "userplugin2": 488, "thermomechan": 489, "density500": 489, "500c": [489, 502], "006270676074462742": 489, "8752281279010555": 489, "11850119602448178": 489, "l_0": [489, 505], "4f": 489, "0471": 489, "inlin": 489, "uo_2": 489, "creep": 489, "recal": [490, 493], "amu": 490, "nucsbytyp": 490, "4706": 490, "043929425": 490, "u215": 490, "150262e": 490, "00000000000e": 490, "000000e": 490, "u216": 490, "216": 490, "160240e": 490, "50000000000e": 490, "u217": 490, "170244e": 490, "60000000000e": 490, "u218": 490, "218": 490, "180235e": 490, "u219": 490, "219": 490, "190249e": 490, "u220": 490, "220": 490, "200247e": 490, "11110000000e": 490, "u221": 490, "210264e": 490, "u222": 490, "222": 490, "220261e": 490, "70000000000e": 490, "u223": 490, "223": 490, "230277e": 490, "80000000000e": 490, "u224": 490, "224": 490, "240276e": 490, "40000000000e": 490, "u225": 490, "225": 490, "250294e": 490, "90000000000e": 490, "u226": 490, "260293e": 490, "68000000000e": 490, "u227": 490, "227": 490, "270312e": 490, "u228": 490, "228": 490, "280314e": 490, "46000000000e": 490, "u229": 490, "229": 490, "290335e": 490, "48000000000e": 490, "u230": 490, "230": 490, "300339e": 490, "74787200000e": 490, "u231": 490, "231": 490, "310363e": 490, "62880000000e": 490, "u232": 490, "320372e": 490, "17427219965e": 490, "330396e": 490, "02354704590e": 490, "340410e": 490, "74722532676e": 490, "400000e": 490, "u235m": 490, "u23f": 490, "56000000000e": 490, "236": 490, "360456e": 490, "39063206325e": 490, "u237": 490, "370487e": 490, "83372800000e": 490, "380508e": 490, "40996345254e": 490, "927420e": 490, "390543e": 490, "40700000000e": 490, "u240": 490, "400566e": 490, "07600000000e": 490, "u241": 490, "410603e": 490, "inf": [490, 504], "u242": 490, "420629e": 490, "00800000000e": 490, "u243": 490, "243": 490, "430674e": 490, "u244": 490, "244": 490, "440679e": 490, "u245": 490, "245": 490, "450708e": 490, "u246": 490, "246": 490, "460702e": 490, "li7": 490, "016004e": 490, "li07": 490, "241000e": 490, "01600439548": 490, "92410004": 490, "940038e": 490, "li3": 490, "030775e": 490, "li03": 490, "li4": 490, "027185e": 490, "li04": 490, "li5": 490, "012538e": 490, "li05": 490, "70924971603e": 490, "015123e": 490, "li06": 490, "590000e": 490, "li8": 490, "022488e": 490, "li08": 490, "39900000000e": 490, "li9": 490, "026789e": 490, "li09": 490, "78300000000e": 490, "li10": 490, "003548e": 490, "li11": 490, "104380e": 490, "75000000000e": 490, "li12": 490, "205378e": 490, "li13": 490, "306117e": 490, "lielement": 490, "standardweight": 490, "940037501798687": 490, "fullfactori": 491, "powermodif": 491, "tracer": 491, "0002": 491, "0003": 491, "10000000": 491, "40000000": 491, "70000000": 491, "100000000": 491, "queu": 491, "cladthicknessmodifi": 491, "componentdesign": 491, "cladmodif": 491, "0004": 491, "inde": [491, 501], "a6": 491, "8250000000000001": 491, "8500000000000001": 491, "875": 491, "cyclelengthmod": 491, "conclus": 491, "loadsuit": 491, "parametr": 491, "regress": 491, "lastli": 492, "lieu": 492, "crazi": 492, "hotter": 492, "710": 492, "interstiti": [492, 501], "punch": 492, "derivedcompon": 492, "unclad": 492, "breviti": 492, "block_shield": [492, 501], "block_reflector": 492, "777": 492, "block_control": 492, "block_plenum": [492, 501], "88888": 492, "overlai": [492, 501], "191": 492, "paper": 492, "fuel_block": 492, "ic_x": 492, "weirdest": 492, "plena": 492, "trade": 492, "153": 492, "columnar": 492, "307": 492, "370": 492, "efpd": 492, "momentarili": 492, "sampleshuffl": 492, "frontend": 492, "0e23": 492, "violat": [492, 497], "shuffleparamet": 492, "cyclesecond": 492, "seconds_per_dai": 492, "peakfluenc": 492, "fastfluenc": [492, 497], "peakflux": 492, "philosophi": 492, "mistak": [492, 501], "nsc": 493, "00e": 493, "21e": 493, "50e": 493, "80e": 493, "40e": 493, "30e": 493, "63e": 493, "90e": 493, "16e": 493, "05e": 493, "225e": 493, "622e": 493, "70e": 493, "35e": 493, "78e": 493, "apear": 493, "block_uo2": 493, "8190": 493, "fuel_gap_1": 493, "clad_zr": 493, "8360": 493, "9500": 493, "fuel_gap_2": 493, "aluminum": 493, "clad_al": 493, "9700": 493, "0800": 493, "guide_tube_moder": 493, "6800": 493, "fission_chamber_guide_tub": 493, "fission_chamber_mod": 493, "332": 493, "block_mox": 493, "ml": 493, "mm": 493, "mh": 493, "block_mod": 493, "alongsid": 493, "said": [493, 501], "genreport": [493, 501], "fiddl": 493, "yellow": 493, "red": 493, "xi": [493, 504], "yi": 493, "zi": 493, "reftestbas": 495, "powerdecai": [496, 497, 499], "decayheatcalctimesinsecond": 496, "arealpd": [496, 497, 503], "pct": 496, "bulimit": [496, 497], "chargebu": 496, "chargefi": 496, "chargetim": 496, "dust": 496, "dayssincelastmov": 496, "kinf": [496, 497, 499], "maxdpapeak": 496, "nummov": [496, 499], "detailednden": [496, 497, 499], "fi": [496, 497], "interf": [496, 497], "detailednuckei": [496, 497, 499], "unwis": 496, "crcriticalfract": 496, "crcurrentelev": 496, "crinsertedelev": 496, "crrodlength": 496, "crwithdrawnelev": 496, "withdrawn": 496, "thdeltapnograv": 496, "graviti": 496, "thdeltappump": 496, "rise": [496, 497, 499], "thdeltaptot": [496, 497], "thmassflowr": [496, 497], "thlocaldtout": [496, 497], "thlocaldtoutfuel": [496, 497], "thorificezon": [496, 497], "dischargetim": 496, "hcf": [496, 499, 501], "azimesh": 496, "radmesh": 496, "burnupmwdperkg": [497, 498], "fissilefract": 497, "moleshmbol": 497, "masshmbol": [497, 498], "moleshmbolbypin": 497, "moleshmnow": 497, "newdpa": 497, "percentbubypin": 497, "percentbumax": 497, "percentbumaxpinloc": 497, "percentbumin": 497, "cycleaverageburnmatrix": 497, "bugroupnum": 497, "burat": [497, 498], "buratepeak": 497, "detaileddpar": 497, "displacementx": 497, "displacementi": 497, "heliuminb4c": 497, "powerrx": 497, "nhmatbol": 497, "axialexptargetcompon": 497, "withregard": 497, "eqregion": 497, "eqcascad": 497, "cascad": [497, 501], "xstypenum": 497, "rxfueldensitycoeffpermass": 497, "\u03b4k": [497, 499], "rxfueltemperaturecoeffpermass": 497, "rxfuelvoidedtemperaturecoeffpermass": 497, "rxcladdensitycoeffpermass": 497, "rxcladtemperaturecoeffpermass": 497, "rxstructuredensitycoeffpermass": 497, "rxstructuretemperaturecoeffpermass": 497, "rxcoolantdensitycoeffpermass": 497, "rxcoolanttemperaturecoeffpermass": 497, "rxfueldensitycoeffpertemp": [497, 499], "rxfueldopplercoeffpertemp": [497, 499], "rxfuelvoideddopplercoeffpertemp": [497, 499], "rxfueldopplerconst": [497, 499], "rxfuelvoideddopplerconst": [497, 499], "rxstructuredopplerconst": [497, 499], "rxcladdopplerconst": [497, 499], "rxfueltemperaturecoeffpertemp": [497, 499], "rxfuelvoidedtemperaturecoeffpertemp": [497, 499], "rxcladdensitycoeffpertemp": [497, 499], "rxcladdopplercoeffpertemp": [497, 499], "rxcladtemperaturecoeffpertemp": [497, 499], "rxstructuredensitycoeffpertemp": [497, 499], "rxstructuredopplercoeffpertemp": [497, 499], "rxstructuretemperaturecoeffpertemp": [497, 499], "rxcoolantdensitycoeffpertemp": [497, 499], "rxcoolanttemperaturecoeffpertemp": [497, 499], "reliabl": 497, "axextennodeheight": 497, "blockbeta": 497, "blockf": 497, "breedratio": 497, "fissiledestroi": 497, "fissilebefor": 497, "substep": [497, 501], "fissileaft": 497, "cladacci": 497, "\u00b5m": [497, 499], "convratio": 497, "crwastag": 497, "acci": 497, "cyclicnerr": 497, "intrinsicsourc": 497, "intrinsicsourcedecai": 497, "mchan": 497, "mreg": 497, "newdpapeak": 497, "percentbupeak": 497, "powershapedelta": 497, "gasreleasefract": 497, "bondremov": [497, 501], "cladwastag": 497, "totalcladstrain": 497, "diametr": 497, "axialgrowthpct": 497, "growth": [497, 499, 501], "fppeakfueltemp": 497, "fpavefueltemp": 497, "pressurelosscoeff": 497, "hardwar": 497, "thhotchannelcladmidwallt": 497, "midwal": 497, "thhotchannelheattransfercoeff": 497, "film": 497, "thhotchannelcladodt": 497, "thhotchannelcladidt": 497, "thhotchannelfuelodt": 497, "thhotchannelfuelcenterlinet": 497, "centerlin": 497, "th0sigmacladodt": 497, "th2sigmacladodt": 497, "th3sigmacladodt": 497, "th0sigmacladidt": 497, "th2sigmacladidt": 497, "th3sigmacladidt": 497, "thdilationpressur": 497, "dilat": 497, "thtfuelcl": 497, "thtfuelod": 497, "thaveragecladodt": 497, "thaveragecladidt": 497, "thaveragecladtemp": 497, "thaveragegaptemp": 497, "thaverageducttemp": 497, "thcoolantstatict": 497, "thhotchanneloutlett": 497, "thcorntemp": 497, "degc": 497, "thedgetemp": 497, "thhotchannel": 497, "axmesh": 497, "adjmgflux": 497, "lastmgflux": 497, "mgfluxgamma": 497, "mggammasrc": 497, "gammasrc": 497, "mgfluxsk": 497, "pinmgfluxesadj": 497, "naxialseg": 497, "pinmgfluxesgamma": 497, "axialpowerprofil": 497, "axialpowerprofileneutron": 497, "axialpowerprofilegamma": 497, "betad": 497, "chid": 497, "linpow": 497, "unavail": 497, "linpowbypinneutron": 497, "linpowbypingamma": 497, "reactionr": 497, "reactionstodb": 497, "pointsedgefastfluxfr": 497, "100kev": 497, "pointsedgedpa": 497, "pointsedgedpar": 497, "cornerfastflux": 497, "pointscornerfastfluxfr": 497, "pointscornerdpa": 497, "pointscornerdpar": 497, "ratebal": 497, "rateextsrc": 497, "ratefisab": 497, "ratefissrc": 497, "rateleak": 497, "leak": 497, "rateparasab": 497, "parasit": 497, "fertil": [497, 499], "rateprodnet": 497, "ratescatin": 497, "ratescatout": 497, "capturepowerfrac": 497, "fluxadj": 497, "fluxadjpeak": 497, "pdensdecai": 497, "fertilebonu": 497, "fisden": 497, "fisdenshom": 497, "fluxgamma": 497, "fluxpeak": 497, "medabs": 497, "medfis": 497, "medflx": 497, "pdensgamma": 497, "pdensneutron": 497, "ppden": 497, "ppdensgamma": 497, "rateab": 497, "fisson": 497, "ratecap": 497, "rateprodn2n": 497, "ratefi": 497, "rateprodfi": 497, "detaileddpathiscycl": 497, "detaileddpapeakr": 497, "enrichmentbol": 497, "fastfluxfr": 497, "pdensgener": 497, "pinnum": 498, "zzzaaa": 499, "zzz": 499, "maxassemnum": [499, 506], "crmostvaluableprimaryrodloc": 499, "crmostvaluablesecondaryrodloc": 499, "crworthrequiredprimari": 499, "crworthrequiredsecondari": 499, "crtransientoverpowerworth": 499, "critsearchslop": 499, "doublingtim": 499, "fissilemass": 499, "heavymetalmass": 499, "lastkeff": 499, "maxcladfcci": 499, "maxgriddpa": 499, "minutessincestart": 499, "peakgriddpaat60year": 499, "totalintrinsicsourc": 499, "totalintrinsicsourcedecai": 499, "thmaxdeltappump": 499, "thmaxdilationpressur": 499, "thoutlettempid": 499, "pergram": 499, "medabscor": 499, "medfluxcor": 499, "medsrccor": 499, "pkflux": 499, "maxdetaileddpapeak": 499, "maxflux": 499, "adjweightedfissrc": 499, "rxswing": 499, "maxbuf": 499, "maxbui": 499, "peakkeff": 499, "fastfluxfravg": 499, "leakagefractot": 499, "leakagefracplanar": 499, "leakagefracaxi": 499, "maxpden": 499, "maxpd": 499, "bred": 499, "betacompon": 499, "betadecayconst": 499, "promptneutrongenerationtim": 499, "promptneutronlifetim": 499, "rxfuelaxialexpansioncoeffpertemp": 499, "rxfuelaxialexpansioncoeffperperc": 499, "rxgridplateradialexpansioncoeffpertemp": 499, "rxaclpradialexpansioncoeffpertemp": 499, "rxcontrolroddrivelineexpansioncoeffpertemp": 499, "drivelin": 499, "rxcorewidecoolantvoidworth": 499, "rxspatiallydependentcoolantvoidworth": 499, "boeckeff": 499, "boec": 499, "maxcyclicnerr": 499, "breedingratio": 499, "convratiocor": 499, "absperfiscor": 499, "axialexpansionperc": 499, "fisfrac": 499, "fisratecor": 499, "infin": [499, 504], "refkeff": 499, "loos": 500, "resus": 501, "block_nam": 501, "erron": 501, "excerpt": [501, 503], "003454": 501, "detailassemlocationsbol": 501, "freshfeedtyp": 501, "refsmallreactor": 501, "moduleverbos": [501, 503], "palett": 501, "warrant": 501, "brush": 501, "multiphys": 501, "detailassemnum": 501, "detailallassem": 501, "dk": 501, "kk": 501, "dollar": 501, "cent": 501, "decayconst": 501, "six": 501, "365": 501, "2425": 501, "uptim": [501, 506], "shorthand": 501, "overcom": 501, "emploi": 501, "r5": 501, "ramp": 501, "prolong": 501, "slight": 501, "reduct": 501, "downtim": 501, "unevenli": 501, "buildup": 501, "rerun": 501, "000000": 501, "001002": 501, "loadstyl": 501, "fromdb": 501, "remaind": [501, 505], "frominput": 501, "skipcycl": 501, "makeup": 501, "core_grid": 501, "wit": 501, "elementari": 501, "neglect": 501, "flexibli": 501, "757": 501, "regex": 501, "extrud": 501, "componentnam": 501, "dimensionnam": 501, "label1": 501, "ousid": 501, "905": 501, "burnabl": 501, "fuelgrid": 501, "possess": 501, "buri": 501, "unambigu": 501, "standard_height": 501, "standard_axial_mesh_point": 501, "inner_core_block": 501, "dragger": 501, "defaul": 501, "superset": 501, "79213903298633": 501, "000664847887388523": 501, "182466356404319": 501, "00323253628006144": 501, "705266053783901": 501, "0171714161260001": 501, "00233843050046998": 501, "0831976890804466": 501, "00566266993741259": 501, "rect": 501, "cicl": 501, "145": 501, "downsid": 501, "pitchdefiningcompon": 501, "carbon_flag": 501, "getfactor": 501, "newincom": 501, "oldoutgo": 501, "daisi": 501, "overton": 501, "a3": 501, "a4": 501, "a5": 501, "thusli": 501, "essenc": 501, "peripheri": 501, "bluepint": 501, "watch": 501, "typenum": 501, "numdischarg": 501, "chargeenrich": 501, "defaultfactor": 501, "factorsearchflag": 501, "tout": 501, "acceptableblockareaerror": 501, "assemflagstoskipaxialexpa": 501, "nsion": 501, "assempowsummari": 501, "bureducingassemblyr": 501, "otat": 501, "assemblyrotationstationar": 501, "autogenerateblockgrid": 501, "automaticvariablemesh": 501, "axialexpans": [501, 505], "axialmeshrefinementfactor": 501, "bccoeffici": 501, "extrapolat": 501, "zerosurfaceflux": 501, "zeroinwardcurr": 501, "circularringord": 501, "distancesmart": 501, "circularringpitch": 501, "claddingstrain": 501, "claddingwastag": 501, "copyfilesfrom": 501, "copyfilesto": 501, "coverageconfigfil": 501, "crosssectioncontrol": 501, "dict_k": 501, "ei": 501, "customfuelmanagementindex": 501, "242199": 501, "cyclesskiptightcouplingin": 501, "teract": 501, "dbstorageaftercycl": 501, "debugdb": 501, "debugmems": 501, "deferredinterfacenam": 501, "deferredinterfacescycl": 501, "disableblocktypeexclus": 501, "inxsgener": 501, "01568627": 501, "451e": 501, "dpaxsset": 501, "dpa_ebrii_": 501, "dpa_ebrii_inc600": 501, "dpa_ebrii_incx750": 501, "dpa_ebrii_ht9": 501, "dpa_ebrii_pe16": 501, "dpa_ebrii_inc625": 501, "eigenprob": 501, "epseig": 501, "epsfsavg": 501, "epsfspoint": 501, "eqdirect": 501, "shuf": 501, "existingfixedsourc": 501, "varsrc": 501, "fgremov": 501, "fissiongasyieldfract": 501, "forcedbparam": 501, "nofissionproduct": 501, "infinitelydilut": 501, "explicitfissionp": 501, "roduct": 501, "explicitfissionpr": 501, "oduct": 501, "fuelperformanceengin": 501, "globalfluxact": 501, "gridplatedpaxsset": 501, "groupstructur": 501, "anl9": 501, "anl70": 501, "anl230": 501, "anl703": 501, "anl1041": 501, "anl2082": 501, "armi33": 501, "armi45": 501, "cinder63": 501, "growtofullcoreafterload": 501, "independentvarnam": 501, "infinitedilutecutoff": 501, "initializeburnchain": 501, "jumpringnum": 501, "checkerboard": 501, "levelspercascad": 501, "referencef": 501, "issionprod": 501, "uct": 501, "loadfromdbeverynod": 501, "lowpowerregionfract": 501, "makeallblocklfpsindepend": 501, "minmeshsizeratio": 501, "dp1": 501, "dp2": 501, "minimumfissilefract": 501, "mpitaskspernod": 501, "neutronicstyp": 501, "numbermeshperedg": 501, "operatorloc": 501, "outputcacheloc": 501, "plotshufflearrow": 501, "namepl": 501, "reallysmallrun": 501, "removepercycl": 501, "restartneutron": 501, "runlatticephysicsbeforesh": 501, "uffl": 501, "smallrun": 501, "sortreactor": 501, "calul": 501, "grid_pla": 501, "summarizeassemdesign": 501, "tightcouplingmaxnumit": 501, "tightcoup": 501, "lingsettin": 501, "dict_kei": 501, "timelineinclusioncutoff": 501, "tolerateburnupchang": 501, "test_wha": 501, "xsblockrepresent": 501, "fluxweightedaverag": 501, "componentaverage1dslab": 501, "xsbucklingconverg": 501, "xseigenvalueconverg": 501, "mc2v2": 501, "xsscatteringord": 501, "zerooutnuclidesnotindb": 501, "loc1": 501, "loc2": 501, "loc3": 501, "odhot": 502, "id600": 502, "numclad": 502, "cladmat": 502, "savephysicsio": 503, "cxny": 503, "00x00y": 503, "xtra": 503, "traceback": 503, "monitor": 503, "myrun": 503, "mydatabas": 503, "ahist": 503, "filesystem": 503, "endian": 503, "portabl": 503, "supplement": 503, "successfulli": 503, "standpoint": 503, "stroke": 503, "glean": 503, "locationtyp": 503, "comp_typ": 503, "mold": 503, "tricki": 503, "interspers": 503, "thaveragecladtemperatur": 504, "k_": 504, "l2": 504, "_2": 504, "a_": 504, "b_": 504, "mathbf": 504, "quad": 504, "foral": 504, "epsilon_i": 504, "textbf": 504, "_settightcouplingdefault": 504, "easiest": 504, "radialexpans": 505, "t_0": 505, "rearrang": 505, "l_1": 505, "t_1": 505, "l_h": 505, "t_h": 505, "t_c": 505, "l_c": 505, "capacityfactor": 506, "lcoe": 506, "levelis": 506, "usd": 506, "kwh": 506, "efeedmt": 506, "efissil": 506, "eswu": 506, "swu": 506}, "objects": {"": [[0, 0, 0, "-", "armi"]], "armi": [[0, 1, 1, "", "applyAsyncioWindowsWorkaround"], [1, 0, 0, "-", "apps"], [2, 0, 0, "-", "bookkeeping"], [45, 0, 0, "-", "cases"], [59, 0, 0, "-", "cli"], [0, 1, 1, "", "configure"], [75, 0, 0, "-", "conftest"], [76, 0, 0, "-", "context"], [0, 1, 1, "", "disableFutureConfigures"], [0, 1, 1, "", "getApp"], [0, 1, 1, "", "getDefaultPluginManager"], [0, 1, 1, "", "getDefaultPlugins"], [0, 1, 1, "", "getPluginManager"], [0, 1, 1, "", "getPluginManagerOrFail"], [0, 1, 1, "", "init"], [77, 0, 0, "-", "interfaces"], [0, 1, 1, "", "isConfigured"], [0, 1, 1, "", "isStableReleaseVersion"], [78, 0, 0, "-", "materials"], [142, 0, 0, "-", "meta"], [143, 0, 0, "-", "migration"], [150, 0, 0, "-", "mpiActions"], [151, 0, 0, "-", "nucDirectory"], [163, 0, 0, "-", "nuclearDataIO"], [202, 0, 0, "-", "operators"], [211, 0, 0, "-", "physics"], [279, 0, 0, "-", "pluginManager"], [280, 0, 0, "-", "plugins"], [281, 0, 0, "-", "reactor"], [363, 0, 0, "-", "runLog"], [364, 0, 0, "-", "settings"], [378, 0, 0, "-", "tests"], [395, 0, 0, "-", "utils"]], "armi.apps": [[1, 2, 1, "", "App"]], "armi.apps.App": [[1, 3, 1, "", "getParamRenames"], [1, 3, 1, "", "getSettings"], [1, 4, 1, "", "name"], [1, 5, 1, "", "pluginManager"], [1, 3, 1, "", "registerPluginFlags"], [1, 3, 1, "", "registerUserPlugins"], [1, 5, 1, "", "splashText"], [1, 5, 1, "", "version"]], "armi.bookkeeping": [[2, 2, 1, "", "BookkeepingPlugin"], [3, 0, 0, "-", "db"], [18, 0, 0, "-", "historyTracker"], [19, 0, 0, "-", "mainInterface"], [20, 0, 0, "-", "memoryProfiler"], [21, 0, 0, "-", "report"], [31, 0, 0, "-", "snapshotInterface"], [32, 0, 0, "-", "tests"], [36, 0, 0, "-", "visualization"]], "armi.bookkeeping.BookkeepingPlugin": [[2, 3, 1, "", "defineCaseDependencies"], [2, 3, 1, "", "defineEntryPoints"], [2, 3, 1, "", "exposeInterfaces"], [2, 3, 1, "", "getReportContents"], [2, 3, 1, "", "mpiActionRequiresReset"]], "armi.bookkeeping.db": [[3, 2, 1, "", "Database3"], [3, 2, 1, "", "DatabaseInterface"], [4, 0, 0, "-", "compareDB3"], [3, 1, 1, "", "compareDatabases"], [5, 0, 0, "-", "database3"], [3, 1, 1, "", "databaseFactory"], [6, 0, 0, "-", "databaseInterface"], [7, 0, 0, "-", "factory"], [8, 0, 0, "-", "jaggedArray"], [9, 0, 0, "-", "layout"], [3, 1, 1, "", "loadOperator"], [10, 0, 0, "-", "permissions"], [11, 0, 0, "-", "tests"], [17, 0, 0, "-", "typedefs"]], "armi.bookkeeping.db.Database3": [[3, 3, 1, "", "close"], [3, 5, 1, "", "fileName"], [3, 3, 1, "", "genAuxiliaryData"], [3, 3, 1, "", "genTimeStepGroups"], [3, 3, 1, "", "genTimeSteps"], [3, 3, 1, "", "getAuxiliaryDataPath"], [3, 3, 1, "", "getH5Group"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistoriesByLocation"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "getHistoryByLocation"], [3, 3, 1, "", "getLayout"], [3, 3, 1, "", "grabLocalCommitHash"], [3, 3, 1, "", "hasTimeStep"], [3, 3, 1, "", "isOpen"], [3, 3, 1, "", "keys"], [3, 3, 1, "", "load"], [3, 3, 1, "", "loadBlueprints"], [3, 3, 1, "", "loadCS"], [3, 3, 1, "", "loadGeometry"], [3, 3, 1, "", "mergeHistory"], [3, 3, 1, "", "open"], [3, 3, 1, "", "readInputsFromDB"], [3, 3, 1, "", "splitDatabase"], [3, 3, 1, "", "syncToSharedFolder"], [3, 4, 1, "", "timeNodeGroupPattern"], [3, 5, 1, "", "version"], [3, 5, 1, "", "versionMajor"], [3, 5, 1, "", "versionMinor"], [3, 3, 1, "", "writeInputsToDB"], [3, 3, 1, "", "writeSystemAttributes"], [3, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.DatabaseInterface": [[3, 3, 1, "", "closeDB"], [3, 5, 1, "", "database"], [3, 3, 1, "", "distributable"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "initDB"], [3, 3, 1, "", "interactBOL"], [3, 3, 1, "", "interactDistributeState"], [3, 3, 1, "", "interactEOC"], [3, 3, 1, "", "interactEOL"], [3, 3, 1, "", "interactError"], [3, 3, 1, "", "interactEveryNode"], [3, 3, 1, "", "loadState"], [3, 4, 1, "", "name"], [3, 3, 1, "", "prepRestartRun"], [3, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.compareDB3": [[4, 2, 1, "", "DiffResults"], [4, 2, 1, "", "OutputWriter"], [4, 1, 1, "", "compareDatabases"]], "armi.bookkeeping.db.compareDB3.DiffResults": [[4, 3, 1, "", "addDiff"], [4, 3, 1, "", "addStructureDiffs"], [4, 3, 1, "", "addTimeStep"], [4, 3, 1, "", "nDiffs"], [4, 3, 1, "", "reportDiffs"]], "armi.bookkeeping.db.compareDB3.OutputWriter": [[4, 3, 1, "", "writeln"]], "armi.bookkeeping.db.database3": [[5, 2, 1, "", "Database3"], [5, 1, 1, "", "collectBlockNumberDensities"], [5, 1, 1, "", "getH5GroupName"], [5, 1, 1, "", "packSpecialData"], [5, 1, 1, "", "unpackSpecialData"]], "armi.bookkeeping.db.database3.Database3": [[5, 3, 1, "", "close"], [5, 5, 1, "", "fileName"], [5, 3, 1, "", "genAuxiliaryData"], [5, 3, 1, "", "genTimeStepGroups"], [5, 3, 1, "", "genTimeSteps"], [5, 3, 1, "", "getAuxiliaryDataPath"], [5, 3, 1, "", "getH5Group"], [5, 3, 1, "", "getHistories"], [5, 3, 1, "", "getHistoriesByLocation"], [5, 3, 1, "", "getHistory"], [5, 3, 1, "", "getHistoryByLocation"], [5, 3, 1, "", "getLayout"], [5, 3, 1, "", "grabLocalCommitHash"], [5, 4, 1, "", "h5db"], [5, 3, 1, "", "hasTimeStep"], [5, 3, 1, "", "isOpen"], [5, 3, 1, "", "keys"], [5, 3, 1, "", "load"], [5, 3, 1, "", "loadBlueprints"], [5, 3, 1, "", "loadCS"], [5, 3, 1, "", "loadGeometry"], [5, 3, 1, "", "mergeHistory"], [5, 3, 1, "", "open"], [5, 3, 1, "", "readInputsFromDB"], [5, 3, 1, "", "splitDatabase"], [5, 3, 1, "", "syncToSharedFolder"], [5, 4, 1, "", "timeNodeGroupPattern"], [5, 5, 1, "", "version"], [5, 5, 1, "", "versionMajor"], [5, 5, 1, "", "versionMinor"], [5, 3, 1, "", "writeInputsToDB"], [5, 3, 1, "", "writeSystemAttributes"], [5, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.databaseInterface": [[6, 2, 1, "", "DatabaseInterface"], [6, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.db.databaseInterface.DatabaseInterface": [[6, 3, 1, "", "closeDB"], [6, 5, 1, "", "database"], [6, 3, 1, "", "distributable"], [6, 3, 1, "", "getHistories"], [6, 3, 1, "", "getHistory"], [6, 3, 1, "", "initDB"], [6, 3, 1, "", "interactBOL"], [6, 3, 1, "", "interactDistributeState"], [6, 3, 1, "", "interactEOC"], [6, 3, 1, "", "interactEOL"], [6, 3, 1, "", "interactError"], [6, 3, 1, "", "interactEveryNode"], [6, 3, 1, "", "loadState"], [6, 4, 1, "", "name"], [6, 3, 1, "", "prepRestartRun"], [6, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[7, 1, 1, "", "databaseFactory"]], "armi.bookkeeping.db.jaggedArray": [[8, 2, 1, "", "JaggedArray"]], "armi.bookkeeping.db.jaggedArray.JaggedArray": [[8, 3, 1, "", "flatten"], [8, 3, 1, "", "fromH5"], [8, 3, 1, "", "tolist"], [8, 3, 1, "", "unpack"]], "armi.bookkeeping.db.layout": [[9, 2, 1, "", "Layout"], [9, 1, 1, "", "replaceNonesWithNonsense"], [9, 1, 1, "", "replaceNonsenseWithNones"]], "armi.bookkeeping.db.layout.Layout": [[9, 3, 1, "", "allSubclasses"], [9, 3, 1, "", "computeAncestors"], [9, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.permissions": [[10, 2, 1, "", "Permissions"]], "armi.bookkeeping.db.permissions.Permissions": [[10, 4, 1, "", "CREATE_FILE_FIE"], [10, 4, 1, "", "CREATE_FILE_FIE2"], [10, 4, 1, "", "CREATE_FILE_TIE"], [10, 4, 1, "", "DEFAULT"], [10, 4, 1, "", "READ_ONLY_FME"], [10, 4, 1, "", "READ_WRITE_CREATE"], [10, 4, 1, "", "READ_WRITE_FME"], [10, 4, 1, "", "all"], [10, 4, 1, "", "create"], [10, 4, 1, "", "read"], [10, 4, 1, "", "write"]], "armi.bookkeeping.db.tests": [[12, 0, 0, "-", "test_comparedb3"], [13, 0, 0, "-", "test_database3"], [14, 0, 0, "-", "test_databaseInterface"], [15, 0, 0, "-", "test_jaggedArray"], [16, 0, 0, "-", "test_layout"]], "armi.bookkeeping.db.tests.test_comparedb3": [[12, 2, 1, "", "TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3": [[12, 3, 1, "", "test_compareAuxData"], [12, 3, 1, "", "test_compareDatabaseDuplicate"], [12, 3, 1, "", "test_compareDatabaseSim"], [12, 3, 1, "", "test_compareSets"], [12, 3, 1, "", "test_diffResultsBasic"], [12, 3, 1, "", "test_diffSimpleData"], [12, 3, 1, "", "test_diffSpecialData"], [12, 3, 1, "", "test_outputWriter"]], "armi.bookkeeping.db.tests.test_database3": [[13, 2, 1, "", "TestDatabase3"], [13, 2, 1, "", "TestDatabase3Smaller"], [13, 2, 1, "", "TestWriteReadDatabase"]], "armi.bookkeeping.db.tests.test_database3.TestDatabase3": [[13, 3, 1, "", "makeShuffleHistory"], [13, 3, 1, "", "test_history"], [13, 3, 1, "", "test_load"], [13, 3, 1, "", "test_loadSortSetting"]], "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller": [[13, 3, 1, "", "makeHistory"], [13, 3, 1, "", "test_auxData"], [13, 3, 1, "", "test_computeParents"], [13, 3, 1, "", "test_deleting"], [13, 3, 1, "", "test_fileName"], [13, 3, 1, "", "test_getH5File"], [13, 3, 1, "", "test_grabLocalCommitHash"], [13, 3, 1, "", "test_loadBlueprints"], [13, 3, 1, "", "test_loadCS"], [13, 3, 1, "", "test_mergeHistory"], [13, 3, 1, "", "test_open"], [13, 3, 1, "", "test_prepRestartRun"], [13, 3, 1, "", "test_readInputsFromDB"], [13, 3, 1, "", "test_replaceNones"], [13, 3, 1, "", "test_splitDatabase"], [13, 3, 1, "", "test_writeToDB"]], "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase": [[13, 4, 1, "", "SMALL_YAML"], [13, 3, 1, "", "test_badData"], [13, 3, 1, "", "test_readWriteRoundTrip"]], "armi.bookkeeping.db.tests.test_databaseInterface": [[14, 2, 1, "", "MockInterface"], [14, 2, 1, "", "TestBadName"], [14, 2, 1, "", "TestDatabaseInterface"], [14, 2, 1, "", "TestDatabaseInterfaceBOL"], [14, 2, 1, "", "TestDatabaseReading"], [14, 2, 1, "", "TestDatabaseWriter"], [14, 2, 1, "", "TestStandardFollowOn"], [14, 1, 1, "", "getSimpleDBOperator"]], "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface": [[14, 3, 1, "", "interactEveryNode"], [14, 4, 1, "", "name"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName": [[14, 3, 1, "", "test_badDBName"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface": [[14, 3, 1, "", "test_demonstrateWritingInteractions"], [14, 3, 1, "", "test_distributable"], [14, 3, 1, "", "test_interactEveryNodeReturnTightCoupling"], [14, 3, 1, "", "test_noSyncDbAfterWrite"], [14, 3, 1, "", "test_syncDbAfterWrite"], [14, 3, 1, "", "test_timeNodeLoop_tightCoupling"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL": [[14, 3, 1, "", "test_interactBOL"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading": [[14, 3, 1, "", "test_growToFullCore"], [14, 3, 1, "", "test_growToFullCoreFromFactory"], [14, 3, 1, "", "test_growToFullCoreFromFactoryWithCS"], [14, 3, 1, "", "test_growToFullCoreWithCS"], [14, 3, 1, "", "test_readWithoutInputs"], [14, 3, 1, "", "test_readWritten"], [14, 3, 1, "", "test_timesteps"], [14, 3, 1, "", "test_variousTypesWork"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter": [[14, 3, 1, "", "test_getHistory"], [14, 3, 1, "", "test_getHistoryByLocation"], [14, 3, 1, "", "test_metaDataEndFail"], [14, 3, 1, "", "test_metaData_endSuccessfully"], [14, 3, 1, "", "test_writeSystemAttributes"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn": [[14, 3, 1, "", "test_standardRestart"]], "armi.bookkeeping.db.tests.test_jaggedArray": [[15, 2, 1, "", "TestJaggedArray"]], "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray": [[15, 3, 1, "", "test_backwardsCompatible"], [15, 3, 1, "", "test_flatten"], [15, 3, 1, "", "test_roundTrip"], [15, 3, 1, "", "test_roundTripBool"]], "armi.bookkeeping.db.tests.test_layout": [[16, 2, 1, "", "TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout.TestLocationPacking": [[16, 3, 1, "", "test_close"], [16, 3, 1, "", "test_locationPacking"], [16, 3, 1, "", "test_locationPackingOldVersion"], [16, 3, 1, "", "test_locationPackingOlderVersions"]], "armi.bookkeeping.historyTracker": [[18, 2, 1, "", "HistoryTrackerInterface"], [18, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.historyTracker.HistoryTrackerInterface": [[18, 3, 1, "", "addAllFuelAssems"], [18, 3, 1, "", "addDetailAssembliesBOL"], [18, 3, 1, "", "addDetailAssembly"], [18, 3, 1, "", "addDetailAssemsByAssemNums"], [18, 3, 1, "", "filterTimeIndices"], [18, 3, 1, "", "getBlockHistoryVal"], [18, 3, 1, "", "getDetailAssemblies"], [18, 3, 1, "", "getDetailBlocks"], [18, 3, 1, "", "getTimeSteps"], [18, 3, 1, "", "getTrackedParams"], [18, 3, 1, "", "interactBOC"], [18, 3, 1, "", "interactBOL"], [18, 3, 1, "", "interactEOL"], [18, 4, 1, "", "name"], [18, 3, 1, "", "preloadBlockHistoryVals"], [18, 3, 1, "", "unloadBlockHistoryVals"], [18, 3, 1, "", "writeAssemHistory"]], "armi.bookkeeping.mainInterface": [[19, 2, 1, "", "MainInterface"], [19, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.mainInterface.MainInterface": [[19, 3, 1, "", "cleanARMIFiles"], [19, 3, 1, "", "cleanLastCycleFiles"], [19, 3, 1, "", "interactBOC"], [19, 3, 1, "", "interactBOL"], [19, 3, 1, "", "interactEOL"], [19, 3, 1, "", "interactEveryNode"], [19, 4, 1, "", "name"]], "armi.bookkeeping.memoryProfiler": [[20, 2, 1, "", "InstanceCounter"], [20, 2, 1, "", "KlassCounter"], [20, 2, 1, "", "MemoryProfiler"], [20, 2, 1, "", "PrintSystemMemoryUsageAction"], [20, 2, 1, "", "ProfileMemoryUsageAction"], [20, 2, 1, "", "SystemAndProcessMemoryUsage"], [20, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.memoryProfiler.InstanceCounter": [[20, 3, 1, "", "add"]], "armi.bookkeeping.memoryProfiler.KlassCounter": [[20, 3, 1, "", "countObjects"]], "armi.bookkeeping.memoryProfiler.MemoryProfiler": [[20, 3, 1, "", "checkForDuplicateObjectsOnArmiModel"], [20, 3, 1, "", "displayMemoryUsage"], [20, 3, 1, "", "getReferrers"], [20, 3, 1, "", "interactBOL"], [20, 3, 1, "", "interactEOL"], [20, 3, 1, "", "interactEveryNode"], [20, 4, 1, "", "name"]], "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction": [[20, 3, 1, "", "invokeHook"], [20, 5, 1, "", "maxProcessMemoryInMB"], [20, 5, 1, "", "minProcessMemoryInMB"], [20, 3, 1, "", "printUsage"]], "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction": [[20, 3, 1, "", "invokeHook"]], "armi.bookkeeping.report": [[22, 0, 0, "-", "data"], [23, 0, 0, "-", "html"], [24, 0, 0, "-", "newReportUtils"], [25, 0, 0, "-", "newReports"], [26, 0, 0, "-", "reportInterface"], [27, 0, 0, "-", "reportingUtils"], [21, 1, 1, "", "setData"], [28, 0, 0, "-", "tests"]], "armi.bookkeeping.report.data": [[22, 2, 1, "", "Group"], [22, 2, 1, "", "Image"], [22, 2, 1, "", "Report"], [22, 2, 1, "", "Table"]], "armi.bookkeeping.report.data.Group": [[22, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Image": [[22, 4, 1, "", "count"], [22, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Report": [[22, 3, 1, "", "addToReport"], [22, 4, 1, "", "componentWellGroups"], [22, 4, 1, "", "groupsOrderFirst"], [22, 3, 1, "", "writeGroupsHTML"], [22, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Table": [[22, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.html": [[23, 2, 1, "", "A"], [23, 2, 1, "", "B"], [23, 2, 1, "", "Body"], [23, 2, 1, "", "Caption"], [23, 2, 1, "", "Div"], [23, 2, 1, "", "Footer"], [23, 2, 1, "", "H1"], [23, 2, 1, "", "H2"], [23, 2, 1, "", "H3"], [23, 2, 1, "", "H4"], [23, 2, 1, "", "HTMLFile"], [23, 2, 1, "", "Head"], [23, 2, 1, "", "Html"], [23, 2, 1, "", "Img"], [23, 2, 1, "", "LI"], [23, 2, 1, "", "Link"], [23, 2, 1, "", "P"], [23, 2, 1, "", "Script"], [23, 2, 1, "", "Span"], [23, 2, 1, "", "Style"], [23, 2, 1, "", "TBody"], [23, 2, 1, "", "TD"], [23, 2, 1, "", "TH"], [23, 2, 1, "", "THead"], [23, 2, 1, "", "TR"], [23, 2, 1, "", "Table"], [23, 2, 1, "", "Tag"], [23, 2, 1, "", "Title"], [23, 2, 1, "", "UL"], [23, 1, 1, "", "encode64"], [23, 1, 1, "", "writeStandardReportTemplate"]], "armi.bookkeeping.report.html.A": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.B": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Body": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Caption": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Div": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Footer": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H1": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H2": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H3": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H4": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.HTMLFile": [[23, 3, 1, "", "write"], [23, 3, 1, "", "writeEscaped"]], "armi.bookkeeping.report.html.Head": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Html": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Img": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.LI": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Link": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.P": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Script": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Span": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Style": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TBody": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TD": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TH": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.THead": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TR": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Table": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Tag": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Title": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.UL": [[23, 4, 1, "", "tag"]], "armi.bookkeeping.report.newReportUtils": [[24, 6, 1, "", "DESIGN"], [24, 1, 1, "", "comprehensiveBOLContent"], [24, 1, 1, "", "createDimensionReport"], [24, 1, 1, "", "getPinDesignTable"], [24, 1, 1, "", "insertAreaFractionsReport"], [24, 1, 1, "", "insertBlockDesignReport"], [24, 1, 1, "", "insertBlockDiagrams"], [24, 1, 1, "", "insertBlueprintContent"], [24, 1, 1, "", "insertCoreAndAssemblyMaps"], [24, 1, 1, "", "insertCoreDesignReport"], [24, 1, 1, "", "insertDesignContent"], [24, 1, 1, "", "insertEndOfLifeContent"], [24, 1, 1, "", "insertGeneralReportContent"], [24, 1, 1, "", "insertMetaTable"], [24, 1, 1, "", "insertSettingsData"]], "armi.bookkeeping.report.newReports": [[25, 2, 1, "", "Image"], [25, 2, 1, "", "ReportContent"], [25, 2, 1, "", "ReportNode"], [25, 2, 1, "", "ReportStage"], [25, 2, 1, "", "Section"], [25, 2, 1, "", "Table"], [25, 2, 1, "", "TimeSeries"], [25, 1, 1, "", "encode64"]], "armi.bookkeeping.report.newReports.Image": [[25, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportContent": [[25, 3, 1, "", "get"], [25, 3, 1, "", "tableOfContents"], [25, 3, 1, "", "writeReports"]], "armi.bookkeeping.report.newReports.ReportNode": [[25, 4, 1, "", "levelDict"], [25, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportStage": [[25, 4, 1, "", "Begin"], [25, 4, 1, "", "End"], [25, 4, 1, "", "Standard"]], "armi.bookkeeping.report.newReports.Section": [[25, 3, 1, "", "addChildElement"], [25, 3, 1, "", "get"], [25, 3, 1, "", "items"], [25, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.Table": [[25, 3, 1, "", "addRow"], [25, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.TimeSeries": [[25, 3, 1, "", "add"], [25, 3, 1, "", "plot"], [25, 3, 1, "", "render"]], "armi.bookkeeping.report.reportInterface": [[26, 2, 1, "", "ReportInterface"], [26, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.report.reportInterface.ReportInterface": [[26, 3, 1, "", "countAssembliesSFP"], [26, 3, 1, "", "distributable"], [26, 3, 1, "", "generateDesignReport"], [26, 3, 1, "", "interactBOC"], [26, 3, 1, "", "interactBOL"], [26, 3, 1, "", "interactEOC"], [26, 3, 1, "", "interactEOL"], [26, 3, 1, "", "interactEveryNode"], [26, 4, 1, "", "name"], [26, 3, 1, "", "printReports"], [26, 3, 1, "", "reportSFP"], [26, 4, 1, "", "reports"], [26, 3, 1, "", "writeReports"], [26, 3, 1, "", "writeRunSummary"]], "armi.bookkeeping.report.reportingUtils": [[27, 1, 1, "", "getInterfaceStackSummary"], [27, 1, 1, "", "getNodeName"], [27, 1, 1, "", "getSystemInfo"], [27, 1, 1, "", "makeBlockDesignReport"], [27, 1, 1, "", "makeCoreAndAssemblyMaps"], [27, 1, 1, "", "makeCoreDesignReport"], [27, 1, 1, "", "setNeutronBalancesReport"], [27, 1, 1, "", "summarizePinDesign"], [27, 1, 1, "", "summarizePower"], [27, 1, 1, "", "summarizePowerPeaking"], [27, 1, 1, "", "writeAssemblyMassSummary"], [27, 1, 1, "", "writeCycleSummary"], [27, 1, 1, "", "writeTightCouplingConvergenceSummary"], [27, 1, 1, "", "writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[29, 0, 0, "-", "test_newReport"], [30, 0, 0, "-", "test_report"]], "armi.bookkeeping.report.tests.test_newReport": [[29, 2, 1, "", "TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation": [[29, 3, 1, "", "test_neutronicsPlotFunctions"], [29, 3, 1, "", "test_reportBasics"], [29, 3, 1, "", "test_reportContents"], [29, 3, 1, "", "test_reportContentsEnd"], [29, 3, 1, "", "test_reportLogs"], [29, 3, 1, "", "test_tableCreation"], [29, 3, 1, "", "test_timeSeries"], [29, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.report.tests.test_report": [[30, 2, 1, "", "TestReport"], [30, 2, 1, "", "TestReportInterface"], [30, 2, 1, "", "TestReportingUtils"]], "armi.bookkeeping.report.tests.test_report.TestReport": [[30, 3, 1, "", "test_getData"], [30, 3, 1, "", "test_reactorSpecificReporting"], [30, 3, 1, "", "test_setData"], [30, 3, 1, "", "test_writeWelcomeHeaders"]], "armi.bookkeeping.report.tests.test_report.TestReportInterface": [[30, 3, 1, "", "test_distributableReportInt"], [30, 3, 1, "", "test_interactBOC"], [30, 3, 1, "", "test_interactBOLReportInt"], [30, 3, 1, "", "test_interactEOC"], [30, 3, 1, "", "test_interactEOL"], [30, 3, 1, "", "test_interactEveryNode"], [30, 3, 1, "", "test_printReports"], [30, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.report.tests.test_report.TestReportingUtils": [[30, 3, 1, "", "test_getNodeName"], [30, 3, 1, "", "test_getSystemInfo"], [30, 3, 1, "", "test_getSystemInfoLinux"], [30, 3, 1, "", "test_getSystemInfoMac"], [30, 3, 1, "", "test_getSystemInfoWindows"]], "armi.bookkeeping.snapshotInterface": [[31, 2, 1, "", "SnapshotInterface"], [31, 1, 1, "", "describeInterfaces"], [31, 1, 1, "", "extractCycleNodeFromStamp"], [31, 1, 1, "", "getCycleNodeStamp"]], "armi.bookkeeping.snapshotInterface.SnapshotInterface": [[31, 3, 1, "", "activateDefaultSnapshots"], [31, 3, 1, "", "interactBOL"], [31, 3, 1, "", "interactCoupled"], [31, 3, 1, "", "interactEveryNode"], [31, 4, 1, "", "name"]], "armi.bookkeeping.tests": [[33, 0, 0, "-", "test_historyTracker"], [34, 0, 0, "-", "test_memoryProfiler"], [35, 0, 0, "-", "test_snapshot"]], "armi.bookkeeping.tests.test_historyTracker": [[33, 2, 1, "", "TestHistoryTracker"], [33, 2, 1, "", "TestHistoryTrackerNoModel"], [33, 1, 1, "", "runTutorialNotebook"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker": [[33, 3, 1, "", "test_calcMGFluence"], [33, 3, 1, "", "test_getBlockInAssembly"], [33, 3, 1, "", "test_historyParameters"], [33, 3, 1, "", "test_historyReport"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel": [[33, 3, 1, "", "test_blockName"], [33, 3, 1, "", "test_timestepFiltering"], [33, 3, 1, "", "test_timestepFilteringWithGap"]], "armi.bookkeeping.tests.test_memoryProfiler": [[34, 2, 1, "", "KlassCounterTests"], [34, 2, 1, "", "TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests": [[34, 3, 1, "", "get_containers"], [34, 3, 1, "", "test_countHandlesRecursion"], [34, 3, 1, "", "test_expandContainer"]], "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler": [[34, 3, 1, "", "test_checkForDuplicateObjectsOnArmiModel"], [34, 3, 1, "", "test_displayMemoryUsage"], [34, 3, 1, "", "test_fullBreakdown"], [34, 3, 1, "", "test_getReferrers"], [34, 3, 1, "", "test_printFullMemoryBreakdown"], [34, 3, 1, "", "test_profileMemoryUsageAction"]], "armi.bookkeeping.tests.test_snapshot": [[35, 2, 1, "", "MockReactor"], [35, 2, 1, "", "MockReactorParams"], [35, 2, 1, "", "TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface": [[35, 3, 1, "", "test_activeateDefaultSnapshots_17cycles5BurnSteps"], [35, 3, 1, "", "test_activeateDefaultSnapshots_30cycles2BurnSteps"], [35, 3, 1, "", "test_interactCoupled"], [35, 3, 1, "", "test_interactEveryNode"]], "armi.bookkeeping.visualization": [[37, 0, 0, "-", "dumper"], [38, 0, 0, "-", "entryPoint"], [39, 0, 0, "-", "tests"], [42, 0, 0, "-", "utils"], [43, 0, 0, "-", "vtk"], [44, 0, 0, "-", "xdmf"]], "armi.bookkeeping.visualization.dumper": [[37, 2, 1, "", "VisFileDumper"]], "armi.bookkeeping.visualization.dumper.VisFileDumper": [[37, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.entryPoint": [[38, 2, 1, "", "VisFileEntryPoint"]], "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint": [[38, 3, 1, "", "addOptions"], [38, 4, 1, "", "description"], [38, 3, 1, "", "invoke"], [38, 4, 1, "", "name"], [38, 3, 1, "", "parse"], [38, 4, 1, "", "settingsArgument"]], "armi.bookkeeping.visualization.tests": [[40, 0, 0, "-", "test_vis"], [41, 0, 0, "-", "test_xdmf"]], "armi.bookkeeping.visualization.tests.test_vis": [[40, 2, 1, "", "TestVisDump"], [40, 2, 1, "", "TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVisDump": [[40, 3, 1, "", "test_cartesianMesh"], [40, 3, 1, "", "test_dumpReactorVtk"], [40, 3, 1, "", "test_dumpReactorXdmf"], [40, 3, 1, "", "test_hexMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh": [[40, 3, 1, "", "test_testVtkMesh"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[41, 2, 1, "", "TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf": [[41, 3, 1, "", "test_dedupTimes"]], "armi.bookkeeping.visualization.utils": [[42, 2, 1, "", "VtkMesh"], [42, 1, 1, "", "createAssemMesh"], [42, 1, 1, "", "createBlockMesh"], [42, 1, 1, "", "createReactorAssemMesh"], [42, 1, 1, "", "createReactorBlockMesh"]], "armi.bookkeeping.visualization.utils.VtkMesh": [[42, 3, 1, "", "append"], [42, 3, 1, "", "empty"], [42, 3, 1, "", "write"], [42, 5, 1, "", "x"], [42, 5, 1, "", "y"], [42, 5, 1, "", "z"]], "armi.bookkeeping.visualization.vtk": [[43, 2, 1, "", "VtkDumper"]], "armi.bookkeeping.visualization.vtk.VtkDumper": [[43, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.xdmf": [[44, 2, 1, "", "XdmfDumper"]], "armi.bookkeeping.visualization.xdmf.XdmfDumper": [[44, 3, 1, "", "dumpState"]], "armi.cases": [[46, 0, 0, "-", "case"], [47, 0, 0, "-", "inputModifiers"], [54, 0, 0, "-", "suite"], [55, 0, 0, "-", "suiteBuilder"], [56, 0, 0, "-", "tests"]], "armi.cases.case": [[46, 2, 1, "", "Case"], [46, 1, 1, "", "copyInterfaceInputs"]], "armi.cases.case.Case": [[46, 3, 1, "", "addExplicitDependency"], [46, 5, 1, "", "bp"], [46, 3, 1, "", "checkInputs"], [46, 3, 1, "", "clone"], [46, 3, 1, "", "compare"], [46, 5, 1, "", "dbName"], [46, 5, 1, "", "dependencies"], [46, 5, 1, "", "directory"], [46, 5, 1, "", "geom"], [46, 3, 1, "", "getPotentialParentFromSettingValue"], [46, 5, 1, "", "independentVariables"], [46, 3, 1, "", "initializeOperator"], [46, 3, 1, "", "run"], [46, 3, 1, "", "setUpTaskDependence"], [46, 3, 1, "", "summarizeDesign"], [46, 5, 1, "", "title"], [46, 3, 1, "", "writeInputs"]], "armi.cases.inputModifiers": [[48, 0, 0, "-", "inputModifiers"], [49, 0, 0, "-", "neutronicsModifiers"], [50, 0, 0, "-", "pinTypeInputModifiers"], [51, 0, 0, "-", "tests"]], "armi.cases.inputModifiers.inputModifiers": [[48, 2, 1, "", "BluePrintBlockModifier"], [48, 2, 1, "", "FullCoreModifier"], [48, 2, 1, "", "InputModifier"], [48, 2, 1, "", "MultiSettingModifier"], [48, 2, 1, "", "SamplingInputModifier"], [48, 2, 1, "", "SettingsModifier"]], "armi.cases.inputModifiers.inputModifiers.InputModifier": [[48, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.neutronicsModifiers": [[49, 2, 1, "", "NeutronicConvergenceModifier"], [49, 2, 1, "", "NeutronicMeshsSizeModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers": [[50, 2, 1, "", "CladThicknessByIDModifier"], [50, 2, 1, "", "CladThicknessByODModifier"], [50, 2, 1, "", "SmearDensityModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier": [[50, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier": [[50, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.tests": [[52, 0, 0, "-", "test_inputModifiers"], [53, 0, 0, "-", "test_pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests.test_inputModifiers": [[52, 2, 1, "", "MockGeom"], [52, 2, 1, "", "NeutronicsKernelOpts"], [52, 2, 1, "", "TestFullCoreModifier"], [52, 2, 1, "", "TestSettingsModifiers"], [52, 2, 1, "", "TestsuiteBuilderIntegrations"]], "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom": [[52, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier": [[52, 3, 1, "", "test_fullCoreConversion"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers": [[52, 3, 1, "", "test_NeutronicConvergenceModifier"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations": [[52, 3, 1, "", "test_bluePrintBlockModifier"], [52, 3, 1, "", "test_settingsModifier"], [52, 3, 1, "", "test_smearDensityFail"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers": [[53, 2, 1, "", "MockGeom"], [53, 2, 1, "", "TestBlueprintModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom": [[53, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers": [[53, 3, 1, "", "test_AdjustSmearDensity"], [53, 3, 1, "", "test_CladThickenessByIDModifier"], [53, 3, 1, "", "test_CladThickenessByODModifier"]], "armi.cases.suite": [[54, 2, 1, "", "CaseSuite"]], "armi.cases.suite.CaseSuite": [[54, 3, 1, "", "add"], [54, 3, 1, "", "clone"], [54, 3, 1, "", "compare"], [54, 3, 1, "", "discover"], [54, 3, 1, "", "echoConfiguration"], [54, 3, 1, "", "remove"], [54, 3, 1, "", "run"], [54, 3, 1, "", "writeInputs"], [54, 3, 1, "", "writeTable"]], "armi.cases.suiteBuilder": [[55, 2, 1, "", "FullFactorialSuiteBuilder"], [55, 2, 1, "", "FullFactorialSuiteBuilderNoisy"], [55, 2, 1, "", "LatinHyperCubeSuiteBuilder"], [55, 2, 1, "", "SeparateEffectsSuiteBuilder"], [55, 2, 1, "", "SuiteBuilder"], [55, 1, 1, "", "getInputModifiers"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilder": [[55, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy": [[55, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder": [[55, 3, 1, "", "addDegreeOfFreedom"], [55, 3, 1, "", "buildSuite"]], "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder": [[55, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.SuiteBuilder": [[55, 3, 1, "", "addDegreeOfFreedom"], [55, 3, 1, "", "addModifierSet"], [55, 3, 1, "", "buildSuite"]], "armi.cases.tests": [[57, 0, 0, "-", "test_cases"], [58, 0, 0, "-", "test_suiteBuilder"]], "armi.cases.tests.test_cases": [[57, 2, 1, "", "MultiFilesInterfaces"], [57, 2, 1, "", "TestArmiCase"], [57, 2, 1, "", "TestCaseSuiteComparison"], [57, 2, 1, "", "TestCaseSuiteDependencies"], [57, 2, 1, "", "TestCopyInterfaceInputs"], [57, 2, 1, "", "TestExtraInputWriting"], [57, 2, 1, "", "TestPluginForCopyInterfacesMultipleFiles"], [57, 2, 1, "", "TestPluginWithDuplicateSetting"]], "armi.cases.tests.test_cases.MultiFilesInterfaces": [[57, 4, 1, "", "name"], [57, 3, 1, "", "specifyInputs"]], "armi.cases.tests.test_cases.TestArmiCase": [[57, 3, 1, "", "test_clone"], [57, 3, 1, "", "test_endCoverage"], [57, 3, 1, "", "test_endProfiling"], [57, 3, 1, "", "test_getCoverageRcFile"], [57, 3, 1, "", "test_independentVariables"], [57, 3, 1, "", "test_run"], [57, 3, 1, "", "test_setUpTaskDependence"], [57, 3, 1, "", "test_startCoverage"], [57, 3, 1, "", "test_startProfiling"], [57, 3, 1, "", "test_summarizeDesign"]], "armi.cases.tests.test_cases.TestCaseSuiteComparison": [[57, 3, 1, "", "test_compareNoDiffs"]], "armi.cases.tests.test_cases.TestCaseSuiteDependencies": [[57, 3, 1, "", "test_checkInputs"], [57, 3, 1, "", "test_clone"], [57, 3, 1, "", "test_dependenciesWithObscurePaths"], [57, 3, 1, "", "test_dependencyFromDBName"], [57, 3, 1, "", "test_dependencyFromExplictRepeatShuffles"], [57, 3, 1, "", "test_explicitDependency"], [57, 3, 1, "", "test_titleSetterGetter"]], "armi.cases.tests.test_cases.TestCopyInterfaceInputs": [[57, 3, 1, "", "test_copyInputsHelper"], [57, 3, 1, "", "test_copyInterfaceInputs_absPath"], [57, 3, 1, "", "test_copyInterfaceInputs_multipleFiles"], [57, 3, 1, "", "test_copyInterfaceInputs_nonFilePath"], [57, 3, 1, "", "test_copyInterfaceInputs_relPath"], [57, 3, 1, "", "test_copyInterfaceInputs_singleFile"], [57, 3, 1, "", "test_copyInterfaceInputs_wildcardFile"], [57, 3, 1, "", "test_failOnDuplicateSetting"]], "armi.cases.tests.test_cases.TestExtraInputWriting": [[57, 3, 1, "", "test_writeInput"]], "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles": [[57, 3, 1, "", "defineSettings"], [57, 3, 1, "", "exposeInterfaces"]], "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting": [[57, 3, 1, "", "defineSettings"]], "armi.cases.tests.test_suiteBuilder": [[58, 2, 1, "", "LatinHyperCubeModifier"], [58, 2, 1, "", "SettingModifier"], [58, 2, 1, "", "TestFullFactorialSuiteBuilder"], [58, 2, 1, "", "TestLatinHyperCubeSuiteBuilder"], [58, 2, 1, "", "TestSeparateEffectsBuilder"]], "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder": [[58, 3, 1, "", "test_buildSuite"]], "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder": [[58, 3, 1, "", "test_addDegreeOfFreedom"], [58, 3, 1, "", "test_buildSuite"], [58, 3, 1, "", "test_initialize"]], "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder": [[58, 3, 1, "", "test_buildSuite"]], "armi.cli": [[59, 2, 1, "", "ArmiCLI"], [59, 2, 1, "", "ArmiParser"], [59, 2, 1, "", "EntryPointsPlugin"], [60, 0, 0, "-", "checkInputs"], [61, 0, 0, "-", "cleanTemps"], [62, 0, 0, "-", "clone"], [63, 0, 0, "-", "compareCases"], [64, 0, 0, "-", "database"], [65, 0, 0, "-", "entryPoint"], [66, 0, 0, "-", "gridGui"], [67, 0, 0, "-", "migrateInputs"], [68, 0, 0, "-", "modify"], [69, 0, 0, "-", "reportsEntryPoint"], [70, 0, 0, "-", "run"], [71, 0, 0, "-", "runSuite"], [59, 1, 1, "", "splash"], [72, 0, 0, "-", "tests"]], "armi.cli.ArmiCLI": [[59, 3, 1, "", "executeCommand"], [59, 3, 1, "", "listCommands"], [59, 3, 1, "", "run"], [59, 3, 1, "", "showVersion"]], "armi.cli.ArmiParser": [[59, 3, 1, "", "print_help"]], "armi.cli.EntryPointsPlugin": [[59, 3, 1, "", "defineEntryPoints"]], "armi.cli.checkInputs": [[60, 2, 1, "", "CheckInputEntryPoint"], [60, 2, 1, "", "ExpandBlueprints"]], "armi.cli.checkInputs.CheckInputEntryPoint": [[60, 3, 1, "", "addOptions"], [60, 3, 1, "", "invoke"], [60, 4, 1, "", "name"], [60, 4, 1, "", "settingsArgument"]], "armi.cli.checkInputs.ExpandBlueprints": [[60, 3, 1, "", "addOptions"], [60, 3, 1, "", "invoke"], [60, 4, 1, "", "name"], [60, 4, 1, "", "settingsArgument"], [60, 4, 1, "", "splash"]], "armi.cli.cleanTemps": [[61, 2, 1, "", "CleanTemps"]], "armi.cli.cleanTemps.CleanTemps": [[61, 3, 1, "", "invoke"], [61, 4, 1, "", "name"], [61, 4, 1, "", "settingsArgument"]], "armi.cli.clone": [[62, 2, 1, "", "CloneArmiRunCommandBatch"], [62, 2, 1, "", "CloneArmiRunCommandInteractive"], [62, 2, 1, "", "CloneSuiteCommand"]], "armi.cli.clone.CloneArmiRunCommandBatch": [[62, 3, 1, "", "addOptions"], [62, 3, 1, "", "invoke"], [62, 4, 1, "", "name"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneArmiRunCommandInteractive": [[62, 4, 1, "", "name"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneSuiteCommand": [[62, 3, 1, "", "addOptions"], [62, 3, 1, "", "invoke"], [62, 4, 1, "", "name"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases": [[63, 2, 1, "", "CompareCases"], [63, 2, 1, "", "CompareSuites"]], "armi.cli.compareCases.CompareCases": [[63, 3, 1, "", "addOptions"], [63, 3, 1, "", "invoke"], [63, 4, 1, "", "name"], [63, 3, 1, "", "parse"], [63, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases.CompareSuites": [[63, 3, 1, "", "addOptions"], [63, 3, 1, "", "invoke"], [63, 4, 1, "", "name"], [63, 4, 1, "", "settingsArgument"]], "armi.cli.database": [[64, 2, 1, "", "ExtractInputs"], [64, 2, 1, "", "InjectInputs"]], "armi.cli.database.ExtractInputs": [[64, 3, 1, "", "addOptions"], [64, 3, 1, "", "invoke"], [64, 4, 1, "", "mode"], [64, 4, 1, "", "name"], [64, 3, 1, "", "parse_args"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.database.InjectInputs": [[64, 3, 1, "", "addOptions"], [64, 3, 1, "", "invoke"], [64, 4, 1, "", "mode"], [64, 4, 1, "", "name"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.entryPoint": [[65, 2, 1, "", "EntryPoint"], [65, 1, 1, "", "loadSettings"], [65, 1, 1, "", "setCaseTitle"], [65, 1, 1, "", "setSetting"], [65, 1, 1, "", "storeBool"]], "armi.cli.entryPoint.EntryPoint": [[65, 3, 1, "", "addOptions"], [65, 3, 1, "", "createOptionFromSetting"], [65, 4, 1, "", "description"], [65, 3, 1, "", "invoke"], [65, 4, 1, "", "mode"], [65, 4, 1, "", "name"], [65, 3, 1, "", "parse"], [65, 3, 1, "", "parse_args"], [65, 4, 1, "", "settingsArgument"], [65, 4, 1, "", "splash"]], "armi.cli.gridGui": [[66, 2, 1, "", "GridGuiEntryPoint"]], "armi.cli.gridGui.GridGuiEntryPoint": [[66, 3, 1, "", "addOptions"], [66, 3, 1, "", "invoke"], [66, 4, 1, "", "name"], [66, 4, 1, "", "settingsArgument"]], "armi.cli.migrateInputs": [[67, 2, 1, "", "MigrateInputs"]], "armi.cli.migrateInputs.MigrateInputs": [[67, 3, 1, "", "addOptions"], [67, 3, 1, "", "invoke"], [67, 4, 1, "", "name"], [67, 4, 1, "", "settingsArgument"]], "armi.cli.modify": [[68, 2, 1, "", "ModifyCaseSettingsCommand"]], "armi.cli.modify.ModifyCaseSettingsCommand": [[68, 3, 1, "", "addOptions"], [68, 3, 1, "", "invoke"], [68, 4, 1, "", "name"], [68, 4, 1, "", "settingsArgument"]], "armi.cli.reportsEntryPoint": [[69, 2, 1, "", "ReportsEntryPoint"], [69, 1, 1, "", "createReportFromSettings"]], "armi.cli.reportsEntryPoint.ReportsEntryPoint": [[69, 3, 1, "", "addOptions"], [69, 4, 1, "", "description"], [69, 3, 1, "", "invoke"], [69, 4, 1, "", "name"], [69, 4, 1, "", "report_out_dir"], [69, 4, 1, "", "settingsArgument"], [69, 3, 1, "", "toTwoTuple"]], "armi.cli.run": [[70, 2, 1, "", "RunEntryPoint"]], "armi.cli.run.RunEntryPoint": [[70, 3, 1, "", "addOptions"], [70, 3, 1, "", "invoke"], [70, 4, 1, "", "name"], [70, 4, 1, "", "settingsArgument"]], "armi.cli.runSuite": [[71, 2, 1, "", "RunSuiteCommand"]], "armi.cli.runSuite.RunSuiteCommand": [[71, 3, 1, "", "addOptions"], [71, 3, 1, "", "invoke"], [71, 4, 1, "", "name"], [71, 4, 1, "", "settingsArgument"]], "armi.cli.tests": [[73, 0, 0, "-", "test_runEntryPoint"], [74, 0, 0, "-", "test_runSuite"]], "armi.cli.tests.test_runEntryPoint": [[73, 2, 1, "", "TestCheckInputEntryPoint"], [73, 2, 1, "", "TestCloneArmiRunCommandBatch"], [73, 2, 1, "", "TestCloneSuiteCommand"], [73, 2, 1, "", "TestCompareCases"], [73, 2, 1, "", "TestCompareIsotxsLibsEntryPoint"], [73, 2, 1, "", "TestCompareSuites"], [73, 2, 1, "", "TestExpandBlueprints"], [73, 2, 1, "", "TestExtractInputs"], [73, 2, 1, "", "TestInitializationEntryPoints"], [73, 2, 1, "", "TestInjectInputs"], [73, 2, 1, "", "TestMigrateInputs"], [73, 2, 1, "", "TestModifyCaseSettingsCommand"], [73, 2, 1, "", "TestReportsEntryPoint"], [73, 2, 1, "", "TestRunEntryPoint"], [73, 2, 1, "", "TestRunSuiteCommand"], [73, 2, 1, "", "TestVisFileEntryPointCommand"], [73, 1, 1, "", "buildTestDB"]], "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint": [[73, 3, 1, "", "test_checkInputEntryPointBasics"], [73, 3, 1, "", "test_checkInputEntryPointInvoke"]], "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch": [[73, 3, 1, "", "test_cloneArmiRunCommandBatchBasics"], [73, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeMedium"], [73, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeShort"]], "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand": [[73, 3, 1, "", "test_cloneSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareCases": [[73, 3, 1, "", "test_compareCasesBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint": [[73, 3, 1, "", "test_compareIsotxsLibsBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareSuites": [[73, 3, 1, "", "test_compareSuitesBasics"]], "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints": [[73, 3, 1, "", "test_expandBlueprintsBasics"]], "armi.cli.tests.test_runEntryPoint.TestExtractInputs": [[73, 3, 1, "", "test_extractInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints": [[73, 3, 1, "", "test_entryPointInitialization"]], "armi.cli.tests.test_runEntryPoint.TestInjectInputs": [[73, 3, 1, "", "test_injectInputsBasics"], [73, 3, 1, "", "test_injectInputsInvokeIgnore"], [73, 3, 1, "", "test_injectInputsInvokeNoData"]], "armi.cli.tests.test_runEntryPoint.TestMigrateInputs": [[73, 3, 1, "", "test_migrateInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand": [[73, 3, 1, "", "test_modifyCaseSettingsCommandBasics"], [73, 3, 1, "", "test_modifyCaseSettingsCommandInvoke"]], "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint": [[73, 3, 1, "", "test_cleanArgs"], [73, 3, 1, "", "test_reportsEntryPointBasics"], [73, 3, 1, "", "test_toTwoTuple"]], "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint": [[73, 3, 1, "", "test_executeCommand"], [73, 3, 1, "", "test_runCommandHelp"], [73, 3, 1, "", "test_runEntryPointBasics"]], "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand": [[73, 3, 1, "", "test_runSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand": [[73, 3, 1, "", "test_visFileEntryPointBasics"]], "armi.cli.tests.test_runSuite": [[74, 2, 1, "", "TestRunSuiteSuite"]], "armi.cli.tests.test_runSuite.TestRunSuiteSuite": [[74, 3, 1, "", "test_listCommand"], [74, 3, 1, "", "test_run"], [74, 3, 1, "", "test_showVersion"]], "armi.conftest": [[75, 1, 1, "", "bootstrapArmiTestEnv"], [75, 1, 1, "", "pytest_sessionstart"]], "armi.context": [[76, 2, 1, "", "Mode"], [76, 1, 1, "", "activateLocalFastPath"], [76, 1, 1, "", "cleanAllArmiTempDirs"], [76, 1, 1, "", "cleanTempDirs"], [76, 1, 1, "", "disconnectAllHdfDBs"], [76, 1, 1, "", "getFastPath"]], "armi.context.Mode": [[76, 4, 1, "", "BATCH"], [76, 4, 1, "", "GUI"], [76, 4, 1, "", "INTERACTIVE"], [76, 3, 1, "", "setMode"]], "armi.interfaces": [[77, 2, 1, "", "InputWriter"], [77, 2, 1, "", "Interface"], [77, 2, 1, "", "InterfaceInfo"], [77, 2, 1, "", "OutputReader"], [77, 2, 1, "", "STACK_ORDER"], [77, 2, 1, "", "TightCoupler"], [77, 1, 1, "", "getActiveInterfaceInfo"], [77, 1, 1, "", "isInterfaceActive"]], "armi.interfaces.InputWriter": [[77, 3, 1, "", "getInterface"], [77, 3, 1, "", "write"]], "armi.interfaces.Interface": [[77, 2, 1, "", "Distribute"], [77, 3, 1, "", "attachReactor"], [77, 3, 1, "", "bolForce"], [77, 3, 1, "", "detachReactor"], [77, 3, 1, "", "distributable"], [77, 3, 1, "", "duplicate"], [77, 3, 1, "", "enabled"], [77, 4, 1, "", "function"], [77, 3, 1, "", "getDependencies"], [77, 3, 1, "", "getHistoryParams"], [77, 3, 1, "", "getInputFiles"], [77, 3, 1, "", "getInterface"], [77, 3, 1, "", "getTightCouplingValue"], [77, 3, 1, "", "interactBOC"], [77, 3, 1, "", "interactBOL"], [77, 3, 1, "", "interactCoupled"], [77, 3, 1, "", "interactDistributeState"], [77, 3, 1, "", "interactEOC"], [77, 3, 1, "", "interactEOL"], [77, 3, 1, "", "interactError"], [77, 3, 1, "", "interactEveryNode"], [77, 3, 1, "", "interactInit"], [77, 3, 1, "", "isRequestedDetailPoint"], [77, 4, 1, "", "name"], [77, 3, 1, "", "nameContains"], [77, 3, 1, "", "postDistributeState"], [77, 3, 1, "", "preDistributeState"], [77, 3, 1, "", "readOutput"], [77, 3, 1, "", "specifyInputs"], [77, 3, 1, "", "updatePhysicsCouplingControl"], [77, 3, 1, "", "workerOperate"], [77, 3, 1, "", "writeInput"]], "armi.interfaces.Interface.Distribute": [[77, 4, 1, "", "DUPLICATE"], [77, 4, 1, "", "NEW"], [77, 4, 1, "", "SKIP"]], "armi.interfaces.InterfaceInfo": [[77, 4, 1, "", "interfaceCls"], [77, 4, 1, "", "kwargs"], [77, 4, 1, "", "order"]], "armi.interfaces.OutputReader": [[77, 3, 1, "", "apply"], [77, 3, 1, "", "getInterface"], [77, 3, 1, "", "read"]], "armi.interfaces.STACK_ORDER": [[77, 4, 1, "", "AFTER"], [77, 4, 1, "", "BEFORE"], [77, 4, 1, "", "BOOKKEEPING"], [77, 4, 1, "", "CRITICAL_CONTROL"], [77, 4, 1, "", "CROSS_SECTIONS"], [77, 4, 1, "", "DEPLETION"], [77, 4, 1, "", "FLUX"], [77, 4, 1, "", "FUEL_MANAGEMENT"], [77, 4, 1, "", "FUEL_PERFORMANCE"], [77, 4, 1, "", "POSTPROCESSING"], [77, 4, 1, "", "PREPROCESSING"], [77, 4, 1, "", "REACTIVITY_COEFFS"], [77, 4, 1, "", "THERMAL_HYDRAULICS"], [77, 4, 1, "", "TRANSIENT"]], "armi.interfaces.TightCoupler": [[77, 3, 1, "", "getListDimension"], [77, 3, 1, "", "isConverged"], [77, 3, 1, "", "storePreviousIterationValue"]], "armi.materials": [[79, 0, 0, "-", "air"], [80, 0, 0, "-", "alloy200"], [81, 0, 0, "-", "b4c"], [82, 0, 0, "-", "be9"], [83, 0, 0, "-", "caH2"], [84, 0, 0, "-", "californium"], [85, 0, 0, "-", "concrete"], [86, 0, 0, "-", "copper"], [87, 0, 0, "-", "cs"], [88, 0, 0, "-", "custom"], [89, 0, 0, "-", "graphite"], [90, 0, 0, "-", "hafnium"], [91, 0, 0, "-", "hastelloyN"], [92, 0, 0, "-", "ht9"], [78, 1, 1, "", "importMaterialsIntoModuleNamespace"], [93, 0, 0, "-", "inconel"], [94, 0, 0, "-", "inconel600"], [95, 0, 0, "-", "inconel625"], [96, 0, 0, "-", "inconel800"], [97, 0, 0, "-", "inconelPE16"], [98, 0, 0, "-", "inconelX750"], [78, 1, 1, "", "iterAllMaterialClassesInNamespace"], [99, 0, 0, "-", "lead"], [100, 0, 0, "-", "leadBismuth"], [101, 0, 0, "-", "lithium"], [102, 0, 0, "-", "magnesium"], [103, 0, 0, "-", "material"], [104, 0, 0, "-", "mgO"], [105, 0, 0, "-", "mixture"], [106, 0, 0, "-", "molybdenum"], [107, 0, 0, "-", "mox"], [108, 0, 0, "-", "nZ"], [109, 0, 0, "-", "potassium"], [78, 1, 1, "", "resolveMaterialClassByName"], [110, 0, 0, "-", "scandiumOxide"], [78, 1, 1, "", "setMaterialNamespaceOrder"], [111, 0, 0, "-", "siC"], [112, 0, 0, "-", "sodium"], [113, 0, 0, "-", "sodiumChloride"], [114, 0, 0, "-", "sulfur"], [115, 0, 0, "-", "tZM"], [116, 0, 0, "-", "tantalum"], [117, 0, 0, "-", "tests"], [130, 0, 0, "-", "thU"], [131, 0, 0, "-", "thorium"], [132, 0, 0, "-", "thoriumOxide"], [133, 0, 0, "-", "uThZr"], [134, 0, 0, "-", "uZr"], [135, 0, 0, "-", "uranium"], [136, 0, 0, "-", "uraniumOxide"], [137, 0, 0, "-", "void"], [138, 0, 0, "-", "water"], [139, 0, 0, "-", "yttriumOxide"], [140, 0, 0, "-", "zincOxide"], [141, 0, 0, "-", "zr"]], "armi.materials.air": [[79, 2, 1, "", "Air"]], "armi.materials.air.Air": [[79, 3, 1, "", "heatCapacity"], [79, 4, 1, "", "propertyValidTemperature"], [79, 3, 1, "", "pseudoDensity"], [79, 3, 1, "", "setDefaultMassFracs"], [79, 3, 1, "", "specificVolumeLiquid"], [79, 3, 1, "", "thermalConductivity"]], "armi.materials.alloy200": [[80, 2, 1, "", "Alloy200"]], "armi.materials.alloy200.Alloy200": [[80, 3, 1, "", "density"], [80, 3, 1, "", "linearExpansion"], [80, 4, 1, "", "linearExpansionTable"], [80, 4, 1, "", "linearExpansionTableK"], [80, 4, 1, "", "modelConst"], [80, 4, 1, "", "propertyValidTemperature"], [80, 4, 1, "", "referenceMaxPercentImpurites"], [80, 4, 1, "", "references"], [80, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.b4c": [[81, 2, 1, "", "B4C"]], "armi.materials.b4c.B4C": [[81, 3, 1, "", "applyInputParams"], [81, 3, 1, "", "density"], [81, 4, 1, "", "enrichedNuclide"], [81, 3, 1, "", "getMassEnrichmentFromNumEnrich"], [81, 3, 1, "", "linearExpansionPercent"], [81, 4, 1, "", "propertyValidTemperature"], [81, 3, 1, "", "pseudoDensity"], [81, 3, 1, "", "setDefaultMassFracs"], [81, 3, 1, "", "setNewMassFracsFromMassEnrich"], [81, 3, 1, "", "updateTD"]], "armi.materials.be9": [[82, 2, 1, "", "Be9"]], "armi.materials.be9.Be9": [[82, 3, 1, "", "density"], [82, 3, 1, "", "linearExpansionPercent"], [82, 4, 1, "", "propertyValidTemperature"], [82, 3, 1, "", "setDefaultMassFracs"], [82, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.caH2": [[83, 2, 1, "", "CaH2"]], "armi.materials.caH2.CaH2": [[83, 3, 1, "", "density"], [83, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.californium": [[84, 2, 1, "", "Californium"]], "armi.materials.californium.Californium": [[84, 3, 1, "", "density"], [84, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.concrete": [[85, 2, 1, "", "Concrete"]], "armi.materials.concrete.Concrete": [[85, 3, 1, "", "density"], [85, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.copper": [[86, 2, 1, "", "Cu"]], "armi.materials.copper.Cu": [[86, 3, 1, "", "density"], [86, 3, 1, "", "linearExpansionPercent"], [86, 4, 1, "", "propertyValidTemperature"], [86, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.cs": [[87, 2, 1, "", "Cs"]], "armi.materials.cs.Cs": [[87, 3, 1, "", "meltingPoint"], [87, 3, 1, "", "pseudoDensity"], [87, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.custom": [[88, 2, 1, "", "Custom"]], "armi.materials.custom.Custom": [[88, 3, 1, "", "density"], [88, 4, 1, "", "enrichedNuclide"], [88, 3, 1, "", "pseudoDensity"], [88, 3, 1, "", "setMassFrac"]], "armi.materials.graphite": [[89, 2, 1, "", "Graphite"]], "armi.materials.graphite.Graphite": [[89, 3, 1, "", "density"], [89, 3, 1, "", "linearExpansionPercent"], [89, 3, 1, "", "setDefaultMassFracs"], [89, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.hafnium": [[90, 2, 1, "", "Hafnium"]], "armi.materials.hafnium.Hafnium": [[90, 3, 1, "", "density"], [90, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.hastelloyN": [[91, 2, 1, "", "HastelloyN"]], "armi.materials.hastelloyN.HastelloyN": [[91, 3, 1, "", "density"], [91, 3, 1, "", "heatCapacity"], [91, 3, 1, "", "linearExpansionPercent"], [91, 4, 1, "", "materialIntro"], [91, 3, 1, "", "meanCoefficientThermalExpansion"], [91, 4, 1, "", "propertyValidTemperature"], [91, 4, 1, "", "refTempK"], [91, 3, 1, "", "setDefaultMassFracs"], [91, 3, 1, "", "thermalConductivity"]], "armi.materials.ht9": [[92, 2, 1, "", "HT9"]], "armi.materials.ht9.HT9": [[92, 3, 1, "", "density"], [92, 3, 1, "", "linearExpansionPercent"], [92, 4, 1, "", "propertyValidTemperature"], [92, 3, 1, "", "setDefaultMassFracs"], [92, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel": [[93, 2, 1, "", "Inconel"], [93, 2, 1, "", "Inconel617"]], "armi.materials.inconel.Inconel": [[93, 3, 1, "", "density"], [93, 4, 1, "", "references"], [93, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconel600": [[94, 2, 1, "", "Inconel600"]], "armi.materials.inconel600.Inconel600": [[94, 3, 1, "", "density"], [94, 3, 1, "", "heatCapacity"], [94, 3, 1, "", "linearExpansion"], [94, 3, 1, "", "linearExpansionPercent"], [94, 3, 1, "", "polyfitHeatCapacity"], [94, 3, 1, "", "polyfitLinearExpansionPercent"], [94, 3, 1, "", "polyfitThermalConductivity"], [94, 4, 1, "", "propertyValidTemperature"], [94, 4, 1, "", "refTempK"], [94, 4, 1, "", "references"], [94, 3, 1, "", "setDefaultMassFracs"], [94, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel625": [[95, 2, 1, "", "Inconel625"]], "armi.materials.inconel625.Inconel625": [[95, 3, 1, "", "density"], [95, 3, 1, "", "heatCapacity"], [95, 3, 1, "", "linearExpansion"], [95, 3, 1, "", "linearExpansionPercent"], [95, 3, 1, "", "polyfitHeatCapacity"], [95, 3, 1, "", "polyfitLinearExpansionPercent"], [95, 3, 1, "", "polyfitThermalConductivity"], [95, 4, 1, "", "propertyValidTemperature"], [95, 4, 1, "", "refTempK"], [95, 4, 1, "", "references"], [95, 3, 1, "", "setDefaultMassFracs"], [95, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel800": [[96, 2, 1, "", "Inconel800"]], "armi.materials.inconel800.Inconel800": [[96, 3, 1, "", "density"], [96, 3, 1, "", "linearExpansionPercent"], [96, 3, 1, "", "meanCoefficientThermalExpansion"], [96, 4, 1, "", "propertyValidTemperature"], [96, 4, 1, "", "refTempK"], [96, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelPE16": [[97, 2, 1, "", "InconelPE16"]], "armi.materials.inconelPE16.InconelPE16": [[97, 3, 1, "", "density"], [97, 4, 1, "", "references"], [97, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelX750": [[98, 2, 1, "", "InconelX750"]], "armi.materials.inconelX750.InconelX750": [[98, 3, 1, "", "density"], [98, 3, 1, "", "heatCapacity"], [98, 3, 1, "", "linearExpansion"], [98, 3, 1, "", "linearExpansionPercent"], [98, 3, 1, "", "polyfitHeatCapacity"], [98, 3, 1, "", "polyfitLinearExpansionPercent"], [98, 3, 1, "", "polyfitThermalConductivity"], [98, 4, 1, "", "propertyValidTemperature"], [98, 4, 1, "", "refTempK"], [98, 4, 1, "", "references"], [98, 3, 1, "", "setDefaultMassFracs"], [98, 3, 1, "", "thermalConductivity"]], "armi.materials.lead": [[99, 2, 1, "", "Lead"]], "armi.materials.lead.Lead": [[99, 3, 1, "", "heatCapacity"], [99, 4, 1, "", "propertyValidTemperature"], [99, 3, 1, "", "pseudoDensity"], [99, 3, 1, "", "setDefaultMassFracs"], [99, 3, 1, "", "volumetricExpansion"]], "armi.materials.leadBismuth": [[100, 2, 1, "", "LeadBismuth"]], "armi.materials.leadBismuth.LeadBismuth": [[100, 3, 1, "", "dynamicVisc"], [100, 3, 1, "", "heatCapacity"], [100, 4, 1, "", "propertyValidTemperature"], [100, 3, 1, "", "pseudoDensity"], [100, 3, 1, "", "setDefaultMassFracs"], [100, 3, 1, "", "thermalConductivity"], [100, 3, 1, "", "volumetricExpansion"]], "armi.materials.lithium": [[101, 2, 1, "", "Lithium"]], "armi.materials.lithium.Lithium": [[101, 3, 1, "", "applyInputParams"], [101, 3, 1, "", "boilingPoint"], [101, 4, 1, "", "enrichedNuclide"], [101, 3, 1, "", "heatCapacity"], [101, 3, 1, "", "meltingPoint"], [101, 3, 1, "", "pseudoDensity"], [101, 4, 1, "", "references"], [101, 3, 1, "", "setDefaultMassFracs"], [101, 3, 1, "", "thermalConductivity"]], "armi.materials.magnesium": [[102, 2, 1, "", "Magnesium"]], "armi.materials.magnesium.Magnesium": [[102, 4, 1, "", "propertyValidTemperature"], [102, 3, 1, "", "pseudoDensity"], [102, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.material": [[103, 2, 1, "", "Fluid"], [103, 2, 1, "", "FuelMaterial"], [103, 2, 1, "", "Material"], [103, 2, 1, "", "SimpleSolid"], [103, 1, 1, "", "parentAwareDensityRedirect"]], "armi.materials.material.Fluid": [[103, 3, 1, "", "density"], [103, 3, 1, "", "getTempChangeForDensityChange"], [103, 3, 1, "", "getThermalExpansionDensityReduction"], [103, 3, 1, "", "linearExpansion"]], "armi.materials.material.FuelMaterial": [[103, 3, 1, "", "applyInputParams"], [103, 4, 1, "", "class1_custom_isotopics"], [103, 4, 1, "", "class1_wt_frac"], [103, 4, 1, "", "class2_custom_isotopics"], [103, 3, 1, "", "density"], [103, 3, 1, "", "duplicate"], [103, 4, 1, "", "puFrac"], [103, 4, 1, "", "uFrac"], [103, 4, 1, "", "zrFrac"]], "armi.materials.material.Material": [[103, 4, 1, "", "DATA_SOURCE"], [103, 3, 1, "", "adjustMassEnrichment"], [103, 3, 1, "", "adjustMassFrac"], [103, 3, 1, "", "adjustTD"], [103, 3, 1, "", "applyInputParams"], [103, 3, 1, "", "backUp"], [103, 3, 1, "", "checkPropertyTempRange"], [103, 3, 1, "", "checkTempRange"], [103, 3, 1, "", "clearCache"], [103, 3, 1, "", "clearMassFrac"], [103, 3, 1, "", "density"], [103, 3, 1, "", "densityKgM3"], [103, 3, 1, "", "densityTimesHeatCapacity"], [103, 3, 1, "", "duplicate"], [103, 4, 1, "", "enrichedNuclide"], [103, 5, 1, "", "gasPorosity"], [103, 3, 1, "", "getChildren"], [103, 3, 1, "", "getChildrenWithFlags"], [103, 3, 1, "", "getCorrosionRate"], [103, 3, 1, "", "getMassFrac"], [103, 3, 1, "", "getName"], [103, 3, 1, "", "getNuclides"], [103, 3, 1, "", "getProperty"], [103, 3, 1, "", "getTD"], [103, 3, 1, "", "getTempChangeForDensityChange"], [103, 3, 1, "", "getTemperatureAtDensity"], [103, 3, 1, "", "getThermalExpansionDensityReduction"], [103, 3, 1, "", "heatCapacity"], [103, 3, 1, "", "linearExpansion"], [103, 3, 1, "", "linearExpansionFactor"], [103, 3, 1, "", "linearExpansionPercent"], [103, 5, 1, "", "liquidPorosity"], [103, 4, 1, "", "modelConst"], [103, 5, 1, "", "name"], [103, 4, 1, "", "propertyValidTemperature"], [103, 3, 1, "", "pseudoDensity"], [103, 3, 1, "", "pseudoDensityKgM3"], [103, 4, 1, "", "references"], [103, 3, 1, "", "removeNucMassFrac"], [103, 3, 1, "", "restoreBackup"], [103, 3, 1, "", "setDefaultMassFracs"], [103, 3, 1, "", "setMassFrac"], [103, 3, 1, "", "thermalConductivity"], [103, 4, 1, "", "thermalScatteringLaws"], [103, 3, 1, "", "volumetricExpansion"], [103, 3, 1, "", "yieldStrength"]], "armi.materials.material.SimpleSolid": [[103, 3, 1, "", "density"], [103, 3, 1, "", "linearExpansionPercent"], [103, 3, 1, "", "pseudoDensity"], [103, 4, 1, "", "refTempK"]], "armi.materials.mgO": [[104, 2, 1, "", "MgO"]], "armi.materials.mgO.MgO": [[104, 3, 1, "", "density"], [104, 3, 1, "", "linearExpansionPercent"], [104, 4, 1, "", "propertyValidTemperature"], [104, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.molybdenum": [[106, 2, 1, "", "Molybdenum"]], "armi.materials.molybdenum.Molybdenum": [[106, 3, 1, "", "density"], [106, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.mox": [[107, 2, 1, "", "MOX"]], "armi.materials.mox.MOX": [[107, 3, 1, "", "applyInputParams"], [107, 4, 1, "", "enrichedNuclide"], [107, 3, 1, "", "getMassFracPuO2"], [107, 3, 1, "", "getMolFracPuO2"], [107, 3, 1, "", "meltingPoint"], [107, 3, 1, "", "setDefaultMassFracs"], [107, 3, 1, "", "setMassFracPuO2"]], "armi.materials.nZ": [[108, 2, 1, "", "NZ"]], "armi.materials.nZ.NZ": [[108, 3, 1, "", "density"], [108, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.potassium": [[109, 2, 1, "", "Potassium"]], "armi.materials.potassium.Potassium": [[109, 4, 1, "", "propertyValidTemperature"], [109, 3, 1, "", "pseudoDensity"]], "armi.materials.scandiumOxide": [[110, 2, 1, "", "Sc2O3"]], "armi.materials.scandiumOxide.Sc2O3": [[110, 3, 1, "", "density"], [110, 3, 1, "", "linearExpansionPercent"], [110, 4, 1, "", "propertyValidTemperature"], [110, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.siC": [[111, 2, 1, "", "SiC"]], "armi.materials.siC.SiC": [[111, 3, 1, "", "cumulativeLinearExpansion"], [111, 3, 1, "", "density"], [111, 3, 1, "", "heatCapacity"], [111, 3, 1, "", "meltingPoint"], [111, 4, 1, "", "propertyEquation"], [111, 4, 1, "", "propertyNotes"], [111, 4, 1, "", "propertyUnits"], [111, 4, 1, "", "propertyValidTemperature"], [111, 3, 1, "", "pseudoDensity"], [111, 4, 1, "", "refTempK"], [111, 4, 1, "", "references"], [111, 3, 1, "", "setDefaultMassFracs"], [111, 3, 1, "", "thermalConductivity"], [111, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.sodium": [[112, 2, 1, "", "Sodium"]], "armi.materials.sodium.Sodium": [[112, 3, 1, "", "enthalpy"], [112, 4, 1, "", "propertyValidTemperature"], [112, 3, 1, "", "pseudoDensity"], [112, 3, 1, "", "setDefaultMassFracs"], [112, 3, 1, "", "specificVolumeLiquid"], [112, 3, 1, "", "thermalConductivity"]], "armi.materials.sodiumChloride": [[113, 2, 1, "", "NaCl"]], "armi.materials.sodiumChloride.NaCl": [[113, 3, 1, "", "density"], [113, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.sulfur": [[114, 2, 1, "", "Sulfur"]], "armi.materials.sulfur.Sulfur": [[114, 3, 1, "", "applyInputParams"], [114, 4, 1, "", "propertyValidTemperature"], [114, 3, 1, "", "pseudoDensity"], [114, 3, 1, "", "setDefaultMassFracs"], [114, 3, 1, "", "updateTD"], [114, 3, 1, "", "volumetricExpansion"]], "armi.materials.tZM": [[115, 2, 1, "", "TZM"]], "armi.materials.tZM.TZM": [[115, 3, 1, "", "density"], [115, 3, 1, "", "linearExpansionPercent"], [115, 4, 1, "", "percentThermalExpansion"], [115, 4, 1, "", "propertyValidTemperature"], [115, 4, 1, "", "references"], [115, 3, 1, "", "setDefaultMassFracs"], [115, 4, 1, "", "temperatureC"]], "armi.materials.tantalum": [[116, 2, 1, "", "Tantalum"]], "armi.materials.tantalum.Tantalum": [[116, 3, 1, "", "density"], [116, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.tests": [[118, 0, 0, "-", "test__init__"], [119, 0, 0, "-", "test_air"], [120, 0, 0, "-", "test_b4c"], [121, 0, 0, "-", "test_be9"], [122, 0, 0, "-", "test_graphite"], [123, 0, 0, "-", "test_lithium"], [124, 0, 0, "-", "test_materials"], [125, 0, 0, "-", "test_sic"], [126, 0, 0, "-", "test_sulfur"], [127, 0, 0, "-", "test_thoriumOxide"], [128, 0, 0, "-", "test_uZr"], [129, 0, 0, "-", "test_water"]], "armi.materials.tests.test__init__": [[118, 2, 1, "", "Materials__init__Tests"], [118, 1, 1, "", "betterSubClassCheck"]], "armi.materials.tests.test__init__.Materials__init__Tests": [[118, 3, 1, "", "test_canAccessClassesFromPackage"], [118, 3, 1, "", "test_packageClassesEqualModuleClasses"]], "armi.materials.tests.test_air": [[119, 2, 1, "", "Test_Air"]], "armi.materials.tests.test_air.Test_Air": [[119, 3, 1, "", "test_heatCapacity"], [119, 3, 1, "", "test_massFrac"], [119, 3, 1, "", "test_pseudoDensity"], [119, 3, 1, "", "test_thermalConductivity"], [119, 3, 1, "", "test_validRanges"]], "armi.materials.tests.test_b4c": [[120, 2, 1, "", "B4C_TestCase"]], "armi.materials.tests.test_b4c.B4C_TestCase": [[120, 4, 1, "", "MAT_CLASS"], [120, 3, 1, "", "test_propertyValidTemperature"], [120, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_be9": [[121, 2, 1, "", "Test_Be9"]], "armi.materials.tests.test_be9.Test_Be9": [[121, 4, 1, "", "MAT_CLASS"], [121, 3, 1, "", "test_propertyValidTemperature"], [121, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_graphite": [[122, 2, 1, "", "Graphite_TestCase"]], "armi.materials.tests.test_graphite.Graphite_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_lithium": [[123, 2, 1, "", "Lithium_TestCase"]], "armi.materials.tests.test_lithium.Lithium_TestCase": [[123, 4, 1, "", "MAT_CLASS"], [123, 4, 1, "", "defaultMassFrac"], [123, 3, 1, "", "test_Lithium_material_modifications"], [123, 3, 1, "", "test_boilingPoint"], [123, 3, 1, "", "test_heatCapacity"], [123, 3, 1, "", "test_meltingPoint"], [123, 3, 1, "", "test_propertyValidTemperature"], [123, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials": [[124, 2, 1, "", "Alloy200_TestCase"], [124, 2, 1, "", "CaH2_TestCase"], [124, 2, 1, "", "Californium_TestCase"], [124, 2, 1, "", "Cesium_TestCase"], [124, 2, 1, "", "Copper_TestCase"], [124, 2, 1, "", "FuelMaterial_TestCase"], [124, 2, 1, "", "Hafnium_TestCase"], [124, 2, 1, "", "HastelloyN_TestCase"], [124, 2, 1, "", "Inconel600_TestCase"], [124, 2, 1, "", "Inconel625_TestCase"], [124, 2, 1, "", "InconelX750_TestCase"], [124, 2, 1, "", "Inconel_TestCase"], [124, 2, 1, "", "LeadBismuth_TestCase"], [124, 2, 1, "", "Lead_TestCase"], [124, 2, 1, "", "MOX_TestCase"], [124, 2, 1, "", "MagnesiumOxide_TestCase"], [124, 2, 1, "", "Magnesium_TestCase"], [124, 2, 1, "", "MaterialConstructionTests"], [124, 2, 1, "", "MaterialFindingTests"], [124, 2, 1, "", "Mixture_TestCase"], [124, 2, 1, "", "Molybdenum_TestCase"], [124, 2, 1, "", "NaCl_TestCase"], [124, 2, 1, "", "NiobiumZirconium_TestCase"], [124, 2, 1, "", "Potassium_TestCase"], [124, 2, 1, "", "ScandiumOxide_TestCase"], [124, 2, 1, "", "Sodium_TestCase"], [124, 2, 1, "", "Sulfur_TestCase"], [124, 2, 1, "", "TZM_TestCase"], [124, 2, 1, "", "Tantalum_TestCase"], [124, 2, 1, "", "ThoriumOxide_TestCase"], [124, 2, 1, "", "ThoriumUraniumMetal_TestCase"], [124, 2, 1, "", "Thorium_TestCase"], [124, 2, 1, "", "UraniumOxide_TestCase"], [124, 2, 1, "", "Uranium_TestCase"], [124, 2, 1, "", "Void_TestCase"], [124, 2, 1, "", "YttriumOxide_TestCase"], [124, 2, 1, "", "ZincOxide_TestCase"], [124, 2, 1, "", "Zr_TestCase"]], "armi.materials.tests.test_materials.Alloy200_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_linearExpansion"], [124, 3, 1, "", "test_linearExpansionHotter"], [124, 3, 1, "", "test_nickleContent"], [124, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.CaH2_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Californium_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_getCorrosionRate"], [124, 3, 1, "", "test_porosities"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Cesium_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Copper_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_densityNeverChanges"], [124, 3, 1, "", "test_getChildren"], [124, 3, 1, "", "test_getChildrenWithFlags"], [124, 3, 1, "", "test_linearExpansionPercent"], [124, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.FuelMaterial_TestCase": [[124, 4, 1, "", "baseInput"], [124, 3, 1, "", "loadAssembly"], [124, 3, 1, "", "test_class1Class2_class1_wt_frac"], [124, 3, 1, "", "test_class1Class2_classX_custom_isotopics"]], "armi.materials.tests.test_materials.Hafnium_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.HastelloyN_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_heatCapacity"], [124, 3, 1, "", "test_linearExpansionPercent"], [124, 3, 1, "", "test_meanCoefficientThermalExpansion"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Inconel600_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_00_setDefaultMassFracs"], [124, 3, 1, "", "test_01_linearExpansionPercent"], [124, 3, 1, "", "test_02_linearExpansion"], [124, 3, 1, "", "test_03_pseudoDensity"], [124, 3, 1, "", "test_heatCapacity"], [124, 3, 1, "", "test_polyfitHeatCapacity"], [124, 3, 1, "", "test_polyfitLinearExpansionPercent"], [124, 3, 1, "", "test_polyfitThermalConductivity"], [124, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel625_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_00_setDefaultMassFracs"], [124, 3, 1, "", "test_01_linearExpansionPercent"], [124, 3, 1, "", "test_02_linearExpansion"], [124, 3, 1, "", "test_03_pseudoDensity"], [124, 3, 1, "", "test_heatCapacity"], [124, 3, 1, "", "test_polyfitHeatCapacity"], [124, 3, 1, "", "test_polyfitLinearExpansionPercent"], [124, 3, 1, "", "test_polyfitThermalConductivity"], [124, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.InconelX750_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_00_setDefaultMassFracs"], [124, 3, 1, "", "test_01_linearExpansionPercent"], [124, 3, 1, "", "test_02_linearExpansion"], [124, 3, 1, "", "test_03_pseudoDensity"], [124, 3, 1, "", "test_heatCapacity"], [124, 3, 1, "", "test_polyfitHeatCapacity"], [124, 3, 1, "", "test_polyfitLinearExpansionPercent"], [124, 3, 1, "", "test_polyfitThermalConductivity"], [124, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel_TestCase": [[124, 3, 1, "", "test_Iconel800_linearExpansion"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"], [124, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.LeadBismuth_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_dynamicVisc"], [124, 3, 1, "", "test_getTempChangeForDensityChange"], [124, 3, 1, "", "test_heatCapacity"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"], [124, 3, 1, "", "test_setDefaultMassFracs"], [124, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.Lead_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_heatCapacity"], [124, 3, 1, "", "test_linearExpansion"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"], [124, 3, 1, "", "test_setDefaultMassFracs"], [124, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.MOX_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_applyInputParams"], [124, 3, 1, "", "test_density"], [124, 3, 1, "", "test_getMassFracPuO2"], [124, 3, 1, "", "test_getMeltingPoint"], [124, 3, 1, "", "test_getMolFracPuO2"]], "armi.materials.tests.test_materials.MagnesiumOxide_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_linearExpansionPercent"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Magnesium_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.MaterialConstructionTests": [[124, 3, 1, "", "test_material_initialization"]], "armi.materials.tests.test_materials.MaterialFindingTests": [[124, 3, 1, "", "test_findMaterial"], [124, 3, 1, "", "test_namespacing"]], "armi.materials.tests.test_materials.Mixture_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_density"], [124, 3, 1, "", "test_linearExpansion"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.Molybdenum_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.NaCl_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_density"], [124, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.NiobiumZirconium_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Potassium_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ScandiumOxide_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_linearExpansionPercent"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Sodium_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_enthalpy"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"], [124, 3, 1, "", "test_specificVolumeLiquid"], [124, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Sulfur_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"], [124, 3, 1, "", "test_setDefaultMassFracs"], [124, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.TZM_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_00_applyInputParams"], [124, 3, 1, "", "test_01_pseudoDensity"], [124, 3, 1, "", "test_02_linearExpansionPercent"], [124, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Tantalum_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ThoriumOxide_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_density"], [124, 3, 1, "", "test_linearExpansion"], [124, 3, 1, "", "test_meltingPoint"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_linearExpansion"], [124, 3, 1, "", "test_meltingPoint"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"], [124, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Thorium_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_linearExpansion"], [124, 3, 1, "", "test_meltingPoint"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"], [124, 3, 1, "", "test_setDefaultMassFracs"], [124, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.UraniumOxide_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_adjustMassEnrichment"], [124, 3, 1, "", "test_applyInputParams"], [124, 3, 1, "", "test_density"], [124, 3, 1, "", "test_densityTimesHeatCapactiy"], [124, 3, 1, "", "test_duplicate"], [124, 3, 1, "", "test_getDensityExpansion3D"], [124, 3, 1, "", "test_getTempChangeForDensityChange"], [124, 3, 1, "", "test_getTemperatureAtDensity"], [124, 3, 1, "", "test_heatCapacity"], [124, 3, 1, "", "test_linearExpansion"], [124, 3, 1, "", "test_linearExpansionPercent"], [124, 3, 1, "", "test_meltingPoint"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_removeNucMassFrac"], [124, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Uranium_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_applyInputParams"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Void_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_density"], [124, 3, 1, "", "test_linearExpansion"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.YttriumOxide_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_linearExpansionPercent"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ZincOxide_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_density"], [124, 3, 1, "", "test_linearExpansionPercent"], [124, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Zr_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_linearExpansion"], [124, 3, 1, "", "test_linearExpansionPercent"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"], [124, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_sic": [[125, 2, 1, "", "Test_SiC"]], "armi.materials.tests.test_sic.Test_SiC": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_meltingPoint"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_sulfur": [[126, 2, 1, "", "Sulfur_TestCase"]], "armi.materials.tests.test_sulfur.Sulfur_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_sulfur_density_frac"]], "armi.materials.tests.test_thoriumOxide": [[127, 2, 1, "", "ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase": [[127, 4, 1, "", "MAT_CLASS"], [127, 3, 1, "", "test_linearExpansionPercent"], [127, 3, 1, "", "test_propertyValidTemperature"], [127, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_uZr": [[128, 2, 1, "", "UZR_TestCase"]], "armi.materials.tests.test_uZr.UZR_TestCase": [[128, 4, 1, "", "MAT_CLASS"], [128, 3, 1, "", "test_TD"], [128, 3, 1, "", "test_cache"], [128, 3, 1, "", "test_density"], [128, 3, 1, "", "test_densityKgM3"], [128, 3, 1, "", "test_duplicate"], [128, 3, 1, "", "test_isPicklable"], [128, 3, 1, "", "test_propertyValidTemperature"], [128, 3, 1, "", "test_pseudoDensityKgM3"]], "armi.materials.tests.test_water": [[129, 2, 1, "", "Test_Water"]], "armi.materials.tests.test_water.Test_Water": [[129, 3, 1, "", "test_massFrac"], [129, 3, 1, "", "test_propertyValidTemperature"], [129, 3, 1, "", "test_validateNames"], [129, 3, 1, "", "test_water_at_boiling"], [129, 3, 1, "", "test_water_at_critcalPoint"], [129, 3, 1, "", "test_water_at_freezing"]], "armi.materials.thU": [[130, 2, 1, "", "ThU"]], "armi.materials.thU.ThU": [[130, 3, 1, "", "applyInputParams"], [130, 4, 1, "", "enrichedNuclide"], [130, 3, 1, "", "getEnrichment"], [130, 3, 1, "", "linearExpansion"], [130, 3, 1, "", "meltingPoint"], [130, 4, 1, "", "propertyValidTemperature"], [130, 3, 1, "", "setDefaultMassFracs"], [130, 3, 1, "", "thermalConductivity"]], "armi.materials.thorium": [[131, 2, 1, "", "Thorium"]], "armi.materials.thorium.Thorium": [[131, 3, 1, "", "linearExpansion"], [131, 3, 1, "", "meltingPoint"], [131, 4, 1, "", "propertyValidTemperature"], [131, 3, 1, "", "setDefaultMassFracs"], [131, 3, 1, "", "thermalConductivity"]], "armi.materials.thoriumOxide": [[132, 2, 1, "", "ThO2"], [132, 2, 1, "", "ThoriumOxide"]], "armi.materials.thoriumOxide.ThoriumOxide": [[132, 3, 1, "", "applyInputParams"], [132, 3, 1, "", "density"], [132, 3, 1, "", "linearExpansion"], [132, 3, 1, "", "linearExpansionPercent"], [132, 3, 1, "", "meltingPoint"], [132, 4, 1, "", "propertyValidTemperature"], [132, 3, 1, "", "setDefaultMassFracs"], [132, 3, 1, "", "thermalConductivity"]], "armi.materials.uThZr": [[133, 2, 1, "", "UThZr"]], "armi.materials.uThZr.UThZr": [[133, 3, 1, "", "applyInputParams"], [133, 4, 1, "", "enrichedNuclide"], [133, 3, 1, "", "pseudoDensity"], [133, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.uZr": [[134, 2, 1, "", "UZr"]], "armi.materials.uZr.UZr": [[134, 3, 1, "", "applyInputParams"], [134, 4, 1, "", "enrichedNuclide"], [134, 3, 1, "", "linearExpansionPercent"], [134, 3, 1, "", "setDefaultMassFracs"], [134, 4, 1, "", "uFracDefault"], [134, 4, 1, "", "zrFracDefault"]], "armi.materials.uranium": [[135, 2, 1, "", "Uranium"]], "armi.materials.uranium.Uranium": [[135, 3, 1, "", "applyInputParams"], [135, 3, 1, "", "density"], [135, 4, 1, "", "enrichedNuclide"], [135, 3, 1, "", "heatCapacity"], [135, 3, 1, "", "linearExpansion"], [135, 3, 1, "", "linearExpansionPercent"], [135, 4, 1, "", "materialIntro"], [135, 3, 1, "", "meltingPoint"], [135, 4, 1, "", "propertyEquation"], [135, 4, 1, "", "propertyNotes"], [135, 4, 1, "", "propertyRawData"], [135, 4, 1, "", "propertyUnits"], [135, 4, 1, "", "propertyValidTemperature"], [135, 3, 1, "", "pseudoDensity"], [135, 4, 1, "", "refDens"], [135, 4, 1, "", "references"], [135, 3, 1, "", "setDefaultMassFracs"], [135, 3, 1, "", "thermalConductivity"]], "armi.materials.uraniumOxide": [[136, 2, 1, "", "HeatCapacityConstants"], [136, 2, 1, "", "UO2"], [136, 2, 1, "", "UraniumOxide"]], "armi.materials.uraniumOxide.HeatCapacityConstants": [[136, 4, 1, "", "Ea"], [136, 4, 1, "", "c1"], [136, 4, 1, "", "c2"], [136, 4, 1, "", "c3"], [136, 4, 1, "", "theta"]], "armi.materials.uraniumOxide.UraniumOxide": [[136, 4, 1, "", "REFERENCE_TEMPERATURE"], [136, 3, 1, "", "applyInputParams"], [136, 3, 1, "", "density"], [136, 4, 1, "", "enrichedNuclide"], [136, 3, 1, "", "heatCapacity"], [136, 4, 1, "", "heatCapacityConstants"], [136, 3, 1, "", "linearExpansion"], [136, 3, 1, "", "linearExpansionPercent"], [136, 3, 1, "", "meltingPoint"], [136, 4, 1, "", "propertyUnits"], [136, 4, 1, "", "propertyValidTemperature"], [136, 4, 1, "", "references"], [136, 3, 1, "", "setDefaultMassFracs"], [136, 3, 1, "", "thermalConductivity"], [136, 4, 1, "", "thermalConductivityTable"], [136, 4, 1, "", "thermalConductivityTableK"], [136, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.void": [[137, 2, 1, "", "Void"]], "armi.materials.void.Void": [[137, 3, 1, "", "density"], [137, 3, 1, "", "pseudoDensity"]], "armi.materials.water": [[138, 2, 1, "", "SaturatedSteam"], [138, 2, 1, "", "SaturatedWater"], [138, 2, 1, "", "Water"]], "armi.materials.water.SaturatedSteam": [[138, 3, 1, "", "pseudoDensity"]], "armi.materials.water.SaturatedWater": [[138, 3, 1, "", "pseudoDensity"]], "armi.materials.water.Water": [[138, 4, 1, "", "ALPHA_0"], [138, 4, 1, "", "DENSITY_CRITICAL_GPERCUBICCENTIMETER"], [138, 4, 1, "", "DENSITY_CRITICAL_KGPERCUBICMETER"], [138, 4, 1, "", "PHI_0"], [138, 4, 1, "", "TEMPERATURE_CRITICAL_K"], [138, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_MPA"], [138, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_PA"], [138, 3, 1, "", "auxiliaryQuantitySpecificEnthalpy"], [138, 3, 1, "", "auxiliaryQuantitySpecificEntropy"], [138, 4, 1, "", "d"], [138, 3, 1, "", "enthalpy"], [138, 3, 1, "", "entropy"], [138, 3, 1, "", "pseudoDensity"], [138, 4, 1, "", "references"], [138, 3, 1, "", "setDefaultMassFracs"], [138, 3, 1, "", "tau"], [138, 4, 1, "", "thermalScatteringLaws"], [138, 3, 1, "", "theta"], [138, 3, 1, "", "vaporPressure"], [138, 3, 1, "", "vaporPressurePrime"]], "armi.materials.yttriumOxide": [[139, 2, 1, "", "Y2O3"]], "armi.materials.yttriumOxide.Y2O3": [[139, 3, 1, "", "density"], [139, 3, 1, "", "linearExpansionPercent"], [139, 4, 1, "", "propertyValidTemperature"], [139, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zincOxide": [[140, 2, 1, "", "ZnO"]], "armi.materials.zincOxide.ZnO": [[140, 3, 1, "", "density"], [140, 3, 1, "", "linearExpansionPercent"], [140, 4, 1, "", "propertyValidTemperature"], [140, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zr": [[141, 2, 1, "", "Zr"]], "armi.materials.zr.Zr": [[141, 3, 1, "", "density"], [141, 3, 1, "", "linearExpansion"], [141, 3, 1, "", "linearExpansionPercent"], [141, 4, 1, "", "linearExpansionTable"], [141, 4, 1, "", "linearExpansionTableK"], [141, 4, 1, "", "propertyValidTemperature"], [141, 4, 1, "", "refTempK"], [141, 4, 1, "", "references"], [141, 3, 1, "", "setDefaultMassFracs"], [141, 3, 1, "", "thermalConductivity"]], "armi.migration": [[144, 0, 0, "-", "base"], [145, 0, 0, "-", "m0_1_3"], [146, 0, 0, "-", "m0_1_6"], [147, 0, 0, "-", "tests"]], "armi.migration.base": [[144, 2, 1, "", "BlueprintsMigration"], [144, 2, 1, "", "DatabaseMigration"], [144, 2, 1, "", "Migration"], [144, 2, 1, "", "SettingsMigration"]], "armi.migration.base.Migration": [[144, 3, 1, "", "apply"], [144, 4, 1, "", "fromVersion"], [144, 4, 1, "", "toVersion"]], "armi.migration.m0_1_3": [[145, 2, 1, "", "RemoveCentersFromBlueprints"], [145, 2, 1, "", "UpdateElementalNuclides"]], "armi.migration.m0_1_3.RemoveCentersFromBlueprints": [[145, 4, 1, "", "fromVersion"], [145, 4, 1, "", "toVersion"]], "armi.migration.m0_1_3.UpdateElementalNuclides": [[145, 4, 1, "", "deletions"], [145, 4, 1, "", "fromVersion"], [145, 4, 1, "", "swaps"], [145, 4, 1, "", "toVersion"]], "armi.migration.m0_1_6": [[146, 2, 1, "", "ConvertAlphanumLocationSettingsToNum"], [146, 1, 1, "", "getIndicesFromDIF3DStyleLocatorLabel"]], "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum": [[146, 4, 1, "", "fromVersion"], [146, 4, 1, "", "toVersion"]], "armi.migration.tests": [[148, 0, 0, "-", "test_m0_1_6"], [149, 0, 0, "-", "test_migration_base"]], "armi.migration.tests.test_m0_1_6": [[148, 2, 1, "", "TestMigration"]], "armi.migration.tests.test_m0_1_6.TestMigration": [[148, 3, 1, "", "test_locationLabelMigration"]], "armi.migration.tests.test_migration_base": [[149, 2, 1, "", "TestMigrationBases"], [149, 2, 1, "", "TestSettingsMigration"]], "armi.migration.tests.test_migration_base.TestMigrationBases": [[149, 3, 1, "", "test_basic_validation"]], "armi.migration.tests.test_migration_base.TestSettingsMigration": [[149, 3, 1, "", "test_loadStreamFromPath"]], "armi.mpiActions": [[150, 2, 1, "", "DistributeStateAction"], [150, 2, 1, "", "DistributionAction"], [150, 2, 1, "", "MpiAction"], [150, 7, 1, "", "MpiActionError"], [150, 1, 1, "", "runActions"], [150, 1, 1, "", "runActionsInSerial"]], "armi.mpiActions.DistributeStateAction": [[150, 3, 1, "", "invokeHook"]], "armi.mpiActions.DistributionAction": [[150, 3, 1, "", "invokeHook"]], "armi.mpiActions.MpiAction": [[150, 3, 1, "", "broadcast"], [150, 3, 1, "", "gather"], [150, 3, 1, "", "invoke"], [150, 3, 1, "", "invokeAsMaster"], [150, 3, 1, "", "invokeHook"], [150, 3, 1, "", "mpiFlatten"], [150, 3, 1, "", "mpiIter"], [150, 5, 1, "", "parallel"]], "armi.nucDirectory": [[152, 0, 0, "-", "elements"], [153, 0, 0, "-", "nucDir"], [154, 0, 0, "-", "nuclideBases"], [155, 0, 0, "-", "tests"], [161, 0, 0, "-", "thermalScattering"], [162, 0, 0, "-", "transmutations"]], "armi.nucDirectory.elements": [[152, 2, 1, "", "ChemicalGroup"], [152, 2, 1, "", "ChemicalPhase"], [152, 2, 1, "", "Element"], [152, 1, 1, "", "addGlobalElement"], [152, 1, 1, "", "destroyGlobalElements"], [152, 1, 1, "", "factory"], [152, 1, 1, "", "getElementZ"], [152, 1, 1, "", "getElementsByChemicalGroup"], [152, 1, 1, "", "getElementsByChemicalPhase"], [152, 1, 1, "", "getName"], [152, 1, 1, "", "getSymbol"]], "armi.nucDirectory.elements.ChemicalGroup": [[152, 4, 1, "", "ACTINIDE"], [152, 4, 1, "", "ALKALINE_EARTH_METAL"], [152, 4, 1, "", "ALKALI_METAL"], [152, 4, 1, "", "HALOGEN"], [152, 4, 1, "", "LANTHANIDE"], [152, 4, 1, "", "METALLOID"], [152, 4, 1, "", "NOBLE_GAS"], [152, 4, 1, "", "NONMETAL"], [152, 4, 1, "", "POST_TRANSITION_METAL"], [152, 4, 1, "", "TRANSITION_METAL"], [152, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.ChemicalPhase": [[152, 4, 1, "", "GAS"], [152, 4, 1, "", "LIQUID"], [152, 4, 1, "", "SOLID"], [152, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.Element": [[152, 3, 1, "", "append"], [152, 3, 1, "", "getNaturalIsotopics"], [152, 3, 1, "", "isHeavyMetal"], [152, 3, 1, "", "isNaturallyOccurring"]], "armi.nucDirectory.nucDir": [[153, 1, 1, "", "getAtomicWeight"], [153, 1, 1, "", "getElementName"], [153, 1, 1, "", "getElementSymbol"], [153, 1, 1, "", "getMc2Label"], [153, 1, 1, "", "getNaturalIsotopics"], [153, 1, 1, "", "getNaturalMassIsotopics"], [153, 1, 1, "", "getNuclide"], [153, 1, 1, "", "getNuclideFromName"], [153, 1, 1, "", "getNuclideNames"], [153, 1, 1, "", "getNuclides"], [153, 1, 1, "", "getThresholdDisplacementEnergy"], [153, 1, 1, "", "isFissile"], [153, 1, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases": [[154, 2, 1, "", "DummyNuclideBase"], [154, 2, 1, "", "IMcnpNuclide"], [154, 2, 1, "", "INuclide"], [154, 2, 1, "", "LumpNuclideBase"], [154, 2, 1, "", "NaturalNuclideBase"], [154, 2, 1, "", "NuclideBase"], [154, 2, 1, "", "NuclideInterface"], [154, 2, 1, "", "NuclideWrapper"], [154, 1, 1, "", "addGlobalNuclide"], [154, 1, 1, "", "addNuclideBases"], [154, 1, 1, "", "changeLabel"], [154, 1, 1, "", "destroyGlobalNuclides"], [154, 1, 1, "", "factory"], [154, 1, 1, "", "fromName"], [154, 1, 1, "", "getDepletableNuclides"], [154, 1, 1, "", "getIsotopics"], [154, 1, 1, "", "imposeBurnChain"], [154, 1, 1, "", "initReachableActiveNuclidesThroughBurnChain"], [154, 1, 1, "", "isMonoIsotopicElement"], [154, 1, 1, "", "isotopes"], [154, 1, 1, "", "readMCCNuclideData"], [154, 1, 1, "", "single"], [154, 1, 1, "", "updateNuclideBasesForSpecialCases"], [154, 1, 1, "", "where"]], "armi.nucDirectory.nuclideBases.DummyNuclideBase": [[154, 3, 1, "", "getMcc2Id"], [154, 3, 1, "", "getMcc3Id"], [154, 3, 1, "", "getNaturalIsotopics"], [154, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.IMcnpNuclide": [[154, 3, 1, "", "getAAAZZZSId"], [154, 3, 1, "", "getMcnpId"]], "armi.nucDirectory.nuclideBases.INuclide": [[154, 4, 1, "", "DECAY"], [154, 4, 1, "", "SPONTANEOUS_FISSION"], [154, 4, 1, "", "TRANSMUTATION"], [154, 4, 1, "", "fissile"], [154, 3, 1, "", "getDatabaseName"], [154, 3, 1, "", "getDecay"], [154, 3, 1, "", "getNaturalIsotopics"], [154, 3, 1, "", "isFissile"], [154, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.LumpNuclideBase": [[154, 3, 1, "", "getMcc2Id"], [154, 3, 1, "", "getMcc3Id"], [154, 3, 1, "", "getNaturalIsotopics"], [154, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NaturalNuclideBase": [[154, 3, 1, "", "getAAAZZZSId"], [154, 3, 1, "", "getEndfMatNum"], [154, 3, 1, "", "getMcc2Id"], [154, 3, 1, "", "getMcc3Id"], [154, 3, 1, "", "getMcnpId"], [154, 3, 1, "", "getNaturalIsotopics"], [154, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideBase": [[154, 3, 1, "", "getAAAZZZSId"], [154, 3, 1, "", "getEndfMatNum"], [154, 3, 1, "", "getMcc2Id"], [154, 3, 1, "", "getMcc3Id"], [154, 3, 1, "", "getMcnpId"], [154, 3, 1, "", "getNaturalIsotopics"], [154, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideInterface": [[154, 3, 1, "", "getDatabaseName"], [154, 3, 1, "", "getDecay"], [154, 3, 1, "", "getMcc2Id"], [154, 3, 1, "", "getMcc3Id"], [154, 3, 1, "", "getNaturalIsotopics"], [154, 3, 1, "", "getSerpentId"], [154, 3, 1, "", "isFissile"], [154, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NuclideWrapper": [[154, 3, 1, "", "getDatabaseName"], [154, 3, 1, "", "getDecay"], [154, 3, 1, "", "getMcc2Id"], [154, 3, 1, "", "getMcc3Id"], [154, 3, 1, "", "getNaturalIsotopics"], [154, 3, 1, "", "isFissile"], [154, 3, 1, "", "isHeavyMetal"], [154, 5, 1, "", "name"], [154, 5, 1, "", "weight"]], "armi.nucDirectory.tests": [[156, 0, 0, "-", "test_elements"], [157, 0, 0, "-", "test_nucDirectory"], [158, 0, 0, "-", "test_nuclideBases"], [159, 0, 0, "-", "test_thermalScattering"], [160, 0, 0, "-", "test_transmutations"]], "armi.nucDirectory.tests.test_elements": [[156, 2, 1, "", "TestElement"]], "armi.nucDirectory.tests.test_elements.TestElement": [[156, 3, 1, "", "test_abundancesAddToOne"], [156, 3, 1, "", "test_element_addExistingElementFails"], [156, 3, 1, "", "test_element_addedElementAppearsInElementList"], [156, 3, 1, "", "test_element_elementByNameReturnsElement"], [156, 3, 1, "", "test_element_elementBySymbolReturnsElement"], [156, 3, 1, "", "test_element_elementByZReturnsElement"], [156, 3, 1, "", "test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"], [156, 3, 1, "", "test_element_isNaturallyOccurring"], [156, 3, 1, "", "test_elements_elementBulkProperties"], [156, 3, 1, "", "test_isHeavyMetal"]], "armi.nucDirectory.tests.test_nucDirectory": [[157, 2, 1, "", "TestNucDirectory"]], "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory": [[157, 3, 1, "", "test_getDisplacementEnergy"], [157, 3, 1, "", "test_nucDir_getNameForOldDashedNames"], [157, 3, 1, "", "test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"], [157, 3, 1, "", "test_nucDir_getNuclidesFromForBadName"]], "armi.nucDirectory.tests.test_nuclideBases": [[158, 2, 1, "", "TestAAAZZZSId"], [158, 2, 1, "", "TestNuclide"]], "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId": [[158, 3, 1, "", "test_AAAZZZSNameGenerator"]], "armi.nucDirectory.tests.test_nuclideBases.TestNuclide": [[158, 3, 1, "", "test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"], [158, 3, 1, "", "test_NaturalNuclideBase_getNatrualIsotpics"], [158, 3, 1, "", "test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"], [158, 3, 1, "", "test_NonMc2Nuclide"], [158, 3, 1, "", "test_curieDefinitionWithRa226"], [158, 3, 1, "", "test_getDecay"], [158, 3, 1, "", "test_getEndfMatNum"], [158, 3, 1, "", "test_kryptonDecayConstants"], [158, 3, 1, "", "test_loadMcc2Data"], [158, 3, 1, "", "test_loadMcc3Data"], [158, 3, 1, "", "test_nucBase_AllAbundancesAddToOne"], [158, 3, 1, "", "test_nucBases_AllDatabaseNamesAreUnique"], [158, 3, 1, "", "test_nucBases_AllLabelsAreUnique"], [158, 3, 1, "", "test_nucBases_Am242m"], [158, 3, 1, "", "test_nucBases_Mc2Elementals"], [158, 3, 1, "", "test_nucBases_NegativeZRaisesException"], [158, 3, 1, "", "test_nucBases_Z295RaisesException"], [158, 3, 1, "", "test_nucBases_databaseNamesStartWith_n"], [158, 3, 1, "", "test_nucBases_fromNameBadNameRaisesException"], [158, 3, 1, "", "test_nucBases_imposeBurnChainDecayBulkStatistics"], [158, 3, 1, "", "test_nucBases_imposeBurnChainTransmutationBulkStatistics"], [158, 3, 1, "", "test_nucBases_imposeBurn_nuSF"], [158, 3, 1, "", "test_nucBases_isHeavyMetal"], [158, 3, 1, "", "test_nucBases_labelAndNameCollsionsAreForSameNuclide"], [158, 3, 1, "", "test_nucBases_singleFailsWithMultipleMatches"], [158, 3, 1, "", "test_nucBases_singleFailsWithNoMatches"], [158, 3, 1, "", "test_nucBases_singleIsPrettySpecific"]], "armi.nucDirectory.tests.test_thermalScattering": [[159, 2, 1, "", "TestThermalScattering"], [159, 1, 1, "", "buildBlockWithTSL"], [159, 1, 1, "", "getNuclideThermalScatteringData"]], "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering": [[159, 3, 1, "", "test_ACECompound"], [159, 3, 1, "", "test_ACEElementInCompound"], [159, 3, 1, "", "test_ACEIsotope"], [159, 3, 1, "", "test_endf8Compound"], [159, 3, 1, "", "test_endf8ElementInCompound"], [159, 3, 1, "", "test_endf8Isotope"], [159, 3, 1, "", "test_failOnMultiple"], [159, 3, 1, "", "test_graphiteOnReactor"]], "armi.nucDirectory.tests.test_transmutations": [[160, 2, 1, "", "DecayModeTests"], [160, 2, 1, "", "TransmutationTests"], [160, 1, 1, "", "randomString"]], "armi.nucDirectory.tests.test_transmutations.DecayModeTests": [[160, 3, 1, "", "test_DecayMode_invalidReactionTypes"], [160, 3, 1, "", "test_DecayMode_validReactionTypes"]], "armi.nucDirectory.tests.test_transmutations.TransmutationTests": [[160, 3, 1, "", "test_Transmutation_invalidReactionTypes"], [160, 3, 1, "", "test_Transmutation_productParticle"], [160, 3, 1, "", "test_Transmutation_validReactionTypes"]], "armi.nucDirectory.thermalScattering": [[161, 2, 1, "", "ThermalScattering"], [161, 1, 1, "", "factory"]], "armi.nucDirectory.thermalScattering.ThermalScattering": [[161, 3, 1, "", "getSubjectNuclideBases"]], "armi.nucDirectory.transmutations": [[162, 2, 1, "", "DecayMode"], [162, 2, 1, "", "Transmutable"], [162, 2, 1, "", "Transmutation"]], "armi.nucDirectory.transmutations.Transmutable": [[162, 3, 1, "", "getPreferredProduct"]], "armi.nuclearDataIO": [[164, 0, 0, "-", "cccc"], [163, 1, 1, "", "getExpectedCOMPXSFileName"], [163, 1, 1, "", "getExpectedGAMISOFileName"], [163, 1, 1, "", "getExpectedISOTXSFileName"], [163, 1, 1, "", "getExpectedPMATRXFileName"], [194, 0, 0, "-", "nuclearFileMetadata"], [195, 0, 0, "-", "tests"], [199, 0, 0, "-", "xsCollections"], [200, 0, 0, "-", "xsLibraries"], [201, 0, 0, "-", "xsNuclides"]], "armi.nuclearDataIO.cccc": [[165, 0, 0, "-", "cccc"], [166, 0, 0, "-", "compxs"], [167, 0, 0, "-", "dif3d"], [168, 0, 0, "-", "dlayxs"], [169, 0, 0, "-", "fixsrc"], [170, 0, 0, "-", "gamiso"], [171, 0, 0, "-", "geodst"], [172, 0, 0, "-", "isotxs"], [173, 0, 0, "-", "labels"], [174, 0, 0, "-", "nhflux"], [175, 0, 0, "-", "pmatrx"], [176, 0, 0, "-", "pwdint"], [177, 0, 0, "-", "rtflux"], [178, 0, 0, "-", "rzflux"], [179, 0, 0, "-", "tests"]], "armi.nuclearDataIO.cccc.cccc": [[165, 2, 1, "", "AsciiRecordReader"], [165, 2, 1, "", "AsciiRecordWriter"], [165, 2, 1, "", "BinaryRecordReader"], [165, 2, 1, "", "BinaryRecordWriter"], [165, 2, 1, "", "DataContainer"], [165, 6, 1, "", "IMPLICIT_INT"], [165, 2, 1, "", "IORecord"], [165, 2, 1, "", "Stream"], [165, 2, 1, "", "StreamWithDataContainer"], [165, 1, 1, "", "getBlockBandwidth"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader": [[165, 3, 1, "", "close"], [165, 3, 1, "", "rwDouble"], [165, 3, 1, "", "rwFloat"], [165, 3, 1, "", "rwInt"], [165, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter": [[165, 3, 1, "", "close"], [165, 3, 1, "", "open"], [165, 3, 1, "", "rwDouble"], [165, 3, 1, "", "rwFloat"], [165, 3, 1, "", "rwInt"], [165, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader": [[165, 3, 1, "", "close"], [165, 3, 1, "", "open"], [165, 3, 1, "", "rwBool"], [165, 3, 1, "", "rwDouble"], [165, 3, 1, "", "rwFloat"], [165, 3, 1, "", "rwInt"], [165, 3, 1, "", "rwLong"], [165, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter": [[165, 3, 1, "", "close"], [165, 3, 1, "", "open"], [165, 3, 1, "", "rwBool"], [165, 3, 1, "", "rwDouble"], [165, 3, 1, "", "rwFloat"], [165, 3, 1, "", "rwInt"], [165, 3, 1, "", "rwLong"], [165, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.IORecord": [[165, 3, 1, "", "close"], [165, 4, 1, "", "count"], [165, 4, 1, "", "maxsize"], [165, 3, 1, "", "open"], [165, 3, 1, "", "rwBool"], [165, 3, 1, "", "rwDouble"], [165, 3, 1, "", "rwDoubleMatrix"], [165, 3, 1, "", "rwFloat"], [165, 3, 1, "", "rwImplicitlyTypedMap"], [165, 3, 1, "", "rwInt"], [165, 3, 1, "", "rwIntMatrix"], [165, 3, 1, "", "rwList"], [165, 3, 1, "", "rwMatrix"], [165, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.Stream": [[165, 3, 1, "", "createRecord"], [165, 3, 1, "", "readAscii"], [165, 3, 1, "", "readBinary"], [165, 3, 1, "", "readWrite"], [165, 3, 1, "", "writeAscii"], [165, 3, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.compxs": [[166, 2, 1, "", "CompxsRegion"], [166, 1, 1, "", "compare"]], "armi.nuclearDataIO.cccc.compxs.CompxsRegion": [[166, 3, 1, "", "allocateXS"], [166, 3, 1, "", "getXS"], [166, 3, 1, "", "initMetadata"], [166, 5, 1, "", "isFissile"], [166, 3, 1, "", "makeScatteringMatrices"], [166, 3, 1, "", "merge"]], "armi.nuclearDataIO.cccc.dif3d": [[167, 2, 1, "", "Dif3dData"], [167, 2, 1, "", "Dif3dStream"]], "armi.nuclearDataIO.cccc.dif3d.Dif3dStream": [[167, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.dlayxs": [[168, 2, 1, "", "DelayedNeutronData"], [168, 2, 1, "", "Dlayxs"], [168, 2, 1, "", "DlayxsIO"], [168, 1, 1, "", "compare"], [168, 1, 1, "", "readAscii"], [168, 1, 1, "", "readBinary"], [168, 1, 1, "", "writeAscii"], [168, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.dlayxs.Dlayxs": [[168, 5, 1, "", "G"], [168, 3, 1, "", "generateAverageDelayedNeutronConstants"]], "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO": [[168, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.fixsrc": [[169, 2, 1, "", "FIXSRC"], [169, 1, 1, "", "readBinary"], [169, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.fixsrc.FIXSRC": [[169, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.gamiso": [[170, 1, 1, "", "addDummyNuclidesToLibrary"], [170, 1, 1, "", "compare"], [170, 1, 1, "", "compareNuclideXS"]], "armi.nuclearDataIO.cccc.geodst": [[171, 2, 1, "", "GeodstData"], [171, 2, 1, "", "GeodstStream"]], "armi.nuclearDataIO.cccc.geodst.GeodstStream": [[171, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.isotxs": [[172, 2, 1, "", "IsotxsIO"], [172, 1, 1, "", "addDummyNuclidesToLibrary"], [172, 1, 1, "", "compare"], [172, 1, 1, "", "compareNuclideXS"], [172, 1, 1, "", "compareSet"]], "armi.nuclearDataIO.cccc.isotxs.IsotxsIO": [[172, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.labels": [[173, 2, 1, "", "LabelsData"], [173, 2, 1, "", "LabelsStream"]], "armi.nuclearDataIO.cccc.labels.LabelsStream": [[173, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.nhflux": [[174, 2, 1, "", "NHFLUX"], [174, 2, 1, "", "NafluxStream"], [174, 2, 1, "", "NafluxStreamVariant"], [174, 2, 1, "", "NhfluxStream"], [174, 2, 1, "", "NhfluxStreamVariant"], [174, 1, 1, "", "getNhfluxReader"]], "armi.nuclearDataIO.cccc.nhflux.NHFLUX": [[174, 5, 1, "", "fluxMoments"], [174, 5, 1, "", "partialCurrentsHex"], [174, 5, 1, "", "partialCurrentsHex_ext"], [174, 5, 1, "", "partialCurrentsZ"]], "armi.nuclearDataIO.cccc.nhflux.NhfluxStream": [[174, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pmatrx": [[175, 2, 1, "", "PmatrxIO"], [175, 1, 1, "", "addDummyNuclidesToLibrary"], [175, 1, 1, "", "compare"], [175, 1, 1, "", "compareNuclideXS"], [175, 1, 1, "", "readAscii"], [175, 1, 1, "", "readBinary"], [175, 1, 1, "", "writeAscii"], [175, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO": [[175, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pwdint": [[176, 2, 1, "", "PwdintData"], [176, 2, 1, "", "PwdintStream"]], "armi.nuclearDataIO.cccc.pwdint.PwdintStream": [[176, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rtflux": [[177, 2, 1, "", "AtfluxStream"], [177, 2, 1, "", "RtfluxData"], [177, 2, 1, "", "RtfluxStream"], [177, 1, 1, "", "getFDFluxReader"]], "armi.nuclearDataIO.cccc.rtflux.AtfluxStream": [[177, 3, 1, "", "getEnergyGroupIndex"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxData": [[177, 4, 1, "", "groupFluxes"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxStream": [[177, 3, 1, "", "getEnergyGroupIndex"], [177, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rzflux": [[178, 2, 1, "", "Convergence"], [178, 2, 1, "", "RzfluxData"], [178, 2, 1, "", "RzfluxStream"]], "armi.nuclearDataIO.cccc.rzflux.Convergence": [[178, 4, 1, "", "CONVERGED"], [178, 4, 1, "", "CONVERGING"], [178, 4, 1, "", "DIVERGING"], [178, 4, 1, "", "NO_ITERATIONS"]], "armi.nuclearDataIO.cccc.rzflux.RzfluxStream": [[178, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.tests": [[180, 0, 0, "-", "test_cccc"], [181, 0, 0, "-", "test_compxs"], [182, 0, 0, "-", "test_dif3d"], [183, 0, 0, "-", "test_dlayxs"], [184, 0, 0, "-", "test_fixsrc"], [185, 0, 0, "-", "test_gamiso"], [186, 0, 0, "-", "test_geodst"], [187, 0, 0, "-", "test_isotxs"], [188, 0, 0, "-", "test_labels"], [189, 0, 0, "-", "test_nhflux"], [190, 0, 0, "-", "test_pmatrx"], [191, 0, 0, "-", "test_pwdint"], [192, 0, 0, "-", "test_rtflux"], [193, 0, 0, "-", "test_rzflux"]], "armi.nuclearDataIO.cccc.tests.test_cccc": [[180, 2, 1, "", "CcccAsciiRecordTests"], [180, 2, 1, "", "CcccBinaryRecordTests"], [180, 2, 1, "", "CcccIOStreamTests"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests": [[180, 3, 1, "", "test_notReadingAnEntireRecordRaisesException"], [180, 3, 1, "", "test_readingBeyondRecordRaisesException"], [180, 3, 1, "", "test_writeAndReadSimpleFloatRecord"], [180, 3, 1, "", "test_writeAndReadSimpleIntegerRecord"], [180, 3, 1, "", "test_writeAndReadSimpleStringRecord"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests": [[180, 3, 1, "", "test_initWithFileMode"]], "armi.nuclearDataIO.cccc.tests.test_compxs": [[181, 2, 1, "", "TestCompxs"]], "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs": [[181, 5, 1, "", "asciiWritePath"], [181, 5, 1, "", "binaryWritePath"], [181, 3, 1, "", "test_asciiRW"], [181, 3, 1, "", "test_binaryRW"], [181, 3, 1, "", "test_getCOMPXSFileName"], [181, 3, 1, "", "test_libraryData"], [181, 3, 1, "", "test_mergeCompxsLibraries"], [181, 3, 1, "", "test_regionPrimaryXS"], [181, 3, 1, "", "test_totalScatterMatrix"]], "armi.nuclearDataIO.cccc.tests.test_dif3d": [[182, 2, 1, "", "TestDif3dEmptyRecords"], [182, 2, 1, "", "TestDif3dSimpleHexz"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords": [[182, 3, 1, "", "test_empty4and5Records"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz": [[182, 3, 1, "", "test__rw2DRecord"], [182, 3, 1, "", "test__rw3DRecord"], [182, 3, 1, "", "test__rw4DRecord"], [182, 3, 1, "", "test__rw5DRecord"], [182, 3, 1, "", "test__rwFile1DRecord"], [182, 3, 1, "", "test__rwFileID"], [182, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs": [[183, 2, 1, "", "DlayxsTests"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests": [[183, 3, 1, "", "test_ENDFVII1DecayConstants"], [183, 3, 1, "", "test_ENDFVII1NeutronsPerFission"], [183, 3, 1, "", "test_NuDelay"], [183, 3, 1, "", "test_avg"], [183, 3, 1, "", "test_chi_delay"], [183, 3, 1, "", "test_chi_delaySumsTo1"], [183, 3, 1, "", "test_compare"], [183, 3, 1, "", "test_decayConstants"], [183, 3, 1, "", "test_nuclides"], [183, 3, 1, "", "test_writeBinary_mcc3"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc": [[184, 2, 1, "", "TestFixsrc"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc": [[184, 3, 1, "", "test_writeReadBinaryLoop"]], "armi.nuclearDataIO.cccc.tests.test_gamiso": [[185, 2, 1, "", "TestGamiso"]], "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso": [[185, 3, 1, "", "test_addDummyNuclidesToLibrary"], [185, 3, 1, "", "test_compare"], [185, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_geodst": [[186, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst": [[186, 3, 1, "", "test_readGeodst"], [186, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs": [[187, 2, 1, "", "Isotxs_merge_Tests"], [187, 2, 1, "", "TestIsotxs"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests": [[187, 3, 1, "", "test_mergeMccV2FilesRemovesTheFileWideChi"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs": [[187, 3, 1, "", "test_getGAMISOFileName"], [187, 3, 1, "", "test_getISOTXSFileName"], [187, 3, 1, "", "test_getNuclide"], [187, 3, 1, "", "test_getScatterWeights"], [187, 3, 1, "", "test_getScatteringWeights"], [187, 3, 1, "", "test_isotxsDetailedData"], [187, 3, 1, "", "test_isotxsGeneralData"], [187, 3, 1, "", "test_n2nIsReactionBased"], [187, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_labels": [[188, 2, 1, "", "TestLabels"]], "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels": [[188, 3, 1, "", "test_readLabelsBinary"], [188, 3, 1, "", "test_writeLabelsAscii"]], "armi.nuclearDataIO.cccc.tests.test_nhflux": [[189, 2, 1, "", "TestNhflux"], [189, 2, 1, "", "TestNhfluxVariant"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux": [[189, 3, 1, "", "test_fc"], [189, 3, 1, "", "test_fluxMoments"], [189, 3, 1, "", "test_write"], [189, 3, 1, "", "test_xyPartialCurrents"], [189, 3, 1, "", "test_zPartialCurrents"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant": [[189, 3, 1, "", "test_fc"], [189, 3, 1, "", "test_fluxMoments"], [189, 3, 1, "", "test_write"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx": [[190, 2, 1, "", "TestPmatrx"], [190, 2, 1, "", "TestPmatrxNuclides"], [190, 2, 1, "", "TestProductionMatrix_FromWritten"], [190, 2, 1, "", "TestProductionMatrix_FromWrittenAscii"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx": [[190, 3, 1, "", "test_pmatrxDoesntHaveDoseConversionFactors"], [190, 3, 1, "", "test_pmatrxGammaEnergies"], [190, 3, 1, "", "test_pmatrxNeutronEnergies"], [190, 3, 1, "", "test_pmatrxNuclideNames"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides": [[190, 3, 1, "", "test_getPMATRXFileName"], [190, 3, 1, "", "test_nuclideDataIsDifferent"], [190, 3, 1, "", "test_pmatrxNuclideDataAA"], [190, 3, 1, "", "test_pmatrxNuclideDataAB"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten": [[190, 3, 1, "", "test_writtenIsIdenticalToOriginal"]], "armi.nuclearDataIO.cccc.tests.test_pwdint": [[191, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst": [[191, 3, 1, "", "test_readGeodst"], [191, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_rtflux": [[192, 2, 1, "", "Testrtflux"]], "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux": [[192, 3, 1, "", "test_adjoint"], [192, 3, 1, "", "test_readrtflux"], [192, 3, 1, "", "test_rwAscii"], [192, 3, 1, "", "test_writertflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux": [[193, 2, 1, "", "TestRzflux"], [193, 1, 1, "", "binaryFilesEqual"]], "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux": [[193, 3, 1, "", "test_readRzflux"], [193, 3, 1, "", "test_rwAscii"], [193, 3, 1, "", "test_writeRzflux"]], "armi.nuclearDataIO.nuclearFileMetadata": [[194, 2, 1, "", "FileMetadata"], [194, 2, 1, "", "NuclideMetadata"], [194, 2, 1, "", "NuclideXSMetadata"], [194, 2, 1, "", "RegionXSMetadata"]], "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata": [[194, 3, 1, "", "update"]], "armi.nuclearDataIO.tests": [[196, 0, 0, "-", "test_xsCollections"], [197, 0, 0, "-", "test_xsLibraries"], [198, 0, 0, "-", "test_xsNuclides"]], "armi.nuclearDataIO.tests.test_xsCollections": [[196, 2, 1, "", "MockBlock"], [196, 2, 1, "", "MockBlueprints"], [196, 2, 1, "", "MockReactor"], [196, 2, 1, "", "TestXsCollections"]], "armi.nuclearDataIO.tests.test_xsCollections.MockBlock": [[196, 3, 1, "", "getNuclideNumberDensities"], [196, 3, 1, "", "getNuclides"], [196, 3, 1, "", "getVolume"], [196, 4, 1, "", "paramCollectionType"], [196, 5, 1, "", "r"], [196, 3, 1, "", "setNumberDensity"]], "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections": [[196, 3, 1, "", "test_collapseCrossSection"], [196, 3, 1, "", "test_createMacrosFromMicros"], [196, 3, 1, "", "test_generateTotalScatteringMatrix"], [196, 3, 1, "", "test_generateTotalScatteringMatrixWithMissingData"], [196, 3, 1, "", "test_plotNucXs"]], "armi.nuclearDataIO.tests.test_xsLibraries": [[197, 2, 1, "", "AbstractTestXSlibraryMerging"], [197, 2, 1, "", "Combined_Merge_Tests"], [197, 2, 1, "", "Gamiso_Merge_Tests"], [197, 2, 1, "", "Isotxs_Merge_Tests"], [197, 2, 1, "", "Pmatrx_Merge_Tests"], [197, 2, 1, "", "TempFileMixin"], [197, 2, 1, "", "TestGetISOTXSFilesInWorkingDirectory"], [197, 2, 1, "", "TestXSLibrary"]], "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging": [[197, 3, 1, "", "getErrorType"], [197, 3, 1, "", "getLibAAPath"], [197, 3, 1, "", "getLibAA_ABPath"], [197, 3, 1, "", "getLibABPath"], [197, 3, 1, "", "getLibLumpedPath"], [197, 3, 1, "", "getReadFunc"], [197, 3, 1, "", "getWriteFunc"], [197, 3, 1, "", "test_canRemoveIsotopes"], [197, 3, 1, "", "test_cannotMergeXSLibWithSameNuclideNames"], [197, 3, 1, "", "test_cannotMergeXSLibxWithDifferentGroupStructure"], [197, 3, 1, "", "test_mergeEmptyXSLibWithOtherEssentiallyClonesTheOther"], [197, 3, 1, "", "test_mergeTwoXSLibFiles"]], "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests": [[197, 3, 1, "", "test_mergeAllXSLibFiles"]], "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests": [[197, 3, 1, "", "getErrorType"], [197, 3, 1, "", "getLibAAPath"], [197, 3, 1, "", "getLibAA_ABPath"], [197, 3, 1, "", "getLibABPath"], [197, 3, 1, "", "getLibLumpedPath"], [197, 3, 1, "", "getReadFunc"], [197, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests": [[197, 3, 1, "", "getErrorType"], [197, 3, 1, "", "getLibAAPath"], [197, 3, 1, "", "getLibAA_ABPath"], [197, 3, 1, "", "getLibABPath"], [197, 3, 1, "", "getLibLumpedPath"], [197, 3, 1, "", "getReadFunc"], [197, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests": [[197, 3, 1, "", "getErrorType"], [197, 3, 1, "", "getLibAAPath"], [197, 3, 1, "", "getLibAA_ABPath"], [197, 3, 1, "", "getLibABPath"], [197, 3, 1, "", "getLibLumpedPath"], [197, 3, 1, "", "getReadFunc"], [197, 3, 1, "", "getWriteFunc"], [197, 3, 1, "", "test_canRemoveIsotopes"], [197, 3, 1, "", "test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin": [[197, 5, 1, "", "testFileName"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory": [[197, 3, 1, "", "assert_contains_only"], [197, 3, 1, "", "test_getISOTXSFilesWithLibrarySuffix"], [197, 3, 1, "", "test_getISOTXSFilesWithoutLibrarySuffix"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary": [[197, 3, 1, "", "test_canPickleAndUnpickleGAMISO"], [197, 3, 1, "", "test_canPickleAndUnpickleISOTXS"], [197, 3, 1, "", "test_canPickleAndUnpicklePMATRX"], [197, 3, 1, "", "test_canWriteGamisoFromCombinedXSLibrary"], [197, 3, 1, "", "test_canWriteIsotxsFromCombinedXSLibrary"], [197, 3, 1, "", "test_canWritePmatrxFromCombinedXSLibrary"], [197, 3, 1, "", "test_compareDifferentComponentsOfAnXSLibrary"], [197, 3, 1, "", "test_compareWorks"], [197, 3, 1, "", "test_gamisoLibraryAttributes"], [197, 3, 1, "", "test_isotxsLibraryAttributes"], [197, 3, 1, "", "test_mergeFailsWithNonIsotxsFiles"], [197, 3, 1, "", "test_mergeXSLibrariesWithDifferentDataWorks"], [197, 3, 1, "", "test_pmatrxLibraryAttributes"]], "armi.nuclearDataIO.tests.test_xsNuclides": [[198, 2, 1, "", "NuclideTests"]], "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests": [[198, 3, 1, "", "test_getMicroXS"], [198, 3, 1, "", "test_getXS"], [198, 3, 1, "", "test_nuclide_2dXsArrangementIsCorrect"], [198, 3, 1, "", "test_nuclide_createFromLabelFailsOnBadName"], [198, 3, 1, "", "test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"], [198, 3, 1, "", "test_nuclide_isoaaDetails"], [198, 3, 1, "", "test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"], [198, 3, 1, "", "test_nuclide_newLabelsDontCauseWarnings"], [198, 3, 1, "", "test_nuclide_nuclideBaseMethodsShouldNotFail"], [198, 3, 1, "", "test_nuclide_oldLabelsCauseWarnings"], [198, 3, 1, "", "test_nuclide_scatterXsArrangementIsCorrect"]], "armi.nuclearDataIO.xsCollections": [[199, 2, 1, "", "MacroscopicCrossSectionCreator"], [199, 2, 1, "", "XSCollection"], [199, 1, 1, "", "computeBlockAverageChi"], [199, 1, 1, "", "computeCaptureEnergyGenerationConstants"], [199, 1, 1, "", "computeFissionEnergyGenerationConstants"], [199, 1, 1, "", "computeGammaEnergyDepositionConstants"], [199, 1, 1, "", "computeMacroscopicGroupConstants"], [199, 1, 1, "", "computeNeutronEnergyDepositionConstants"]], "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator": [[199, 3, 1, "", "createMacrosFromMicros"], [199, 3, 1, "", "createMacrosOnBlocklist"]], "armi.nuclearDataIO.xsCollections.XSCollection": [[199, 3, 1, "", "clear"], [199, 3, 1, "", "collapseCrossSection"], [199, 3, 1, "", "compare"], [199, 3, 1, "", "get"], [199, 3, 1, "", "getAbsorptionXS"], [199, 3, 1, "", "getDefaultXs"], [199, 3, 1, "", "getTotalScatterMatrix"], [199, 3, 1, "", "merge"]], "armi.nuclearDataIO.xsLibraries": [[200, 2, 1, "", "CompxsLibrary"], [200, 2, 1, "", "IsotxsLibrary"], [200, 1, 1, "", "compare"], [200, 1, 1, "", "compareLibraryNeutronEnergies"], [200, 1, 1, "", "compareXSLibraryAttribute"], [200, 1, 1, "", "getISOTXSLibrariesToMerge"], [200, 1, 1, "", "getSuffixFromNuclideLabel"], [200, 1, 1, "", "mergeXSLibrariesInWorkingDirectory"]], "armi.nuclearDataIO.xsLibraries.CompxsLibrary": [[200, 3, 1, "", "merge"], [200, 5, 1, "", "regionLabels"], [200, 5, 1, "", "regions"]], "armi.nuclearDataIO.xsLibraries.IsotxsLibrary": [[200, 5, 1, "", "gammaDoseConversionFactors"], [200, 5, 1, "", "gammaEnergyUpperBounds"], [200, 3, 1, "", "get"], [200, 3, 1, "", "getNuclide"], [200, 3, 1, "", "getNuclides"], [200, 3, 1, "", "getScatterWeights"], [200, 3, 1, "", "merge"], [200, 5, 1, "", "neutronDoseConversionFactors"], [200, 5, 1, "", "nuclideLabels"], [200, 5, 1, "", "nuclides"], [200, 5, 1, "", "numGroups"], [200, 5, 1, "", "numGroupsGamma"], [200, 3, 1, "", "purgeFissionProducts"], [200, 3, 1, "", "resetScatterWeights"], [200, 5, 1, "", "xsIDs"]], "armi.nuclearDataIO.xsNuclides": [[201, 2, 1, "", "XSNuclide"], [201, 1, 1, "", "plotCompareScatterMatrix"], [201, 1, 1, "", "plotScatterMatrix"]], "armi.nuclearDataIO.xsNuclides.XSNuclide": [[201, 3, 1, "", "buildNormalizedScatterColumns"], [201, 5, 1, "", "decays"], [201, 3, 1, "", "getMicroXS"], [201, 3, 1, "", "getXS"], [201, 3, 1, "", "merge"], [201, 5, 1, "", "trans"], [201, 3, 1, "", "updateBaseNuclide"]], "armi.operators": [[202, 1, 1, "", "factory"], [202, 1, 1, "", "getOperatorClassFromSettings"], [203, 0, 0, "-", "operator"], [204, 0, 0, "-", "operatorMPI"], [205, 0, 0, "-", "runTypes"], [206, 0, 0, "-", "settingsValidation"], [207, 0, 0, "-", "snapshots"], [208, 0, 0, "-", "tests"]], "armi.operators.operator": [[203, 2, 1, "", "Operator"]], "armi.operators.operator.Operator": [[203, 3, 1, "", "addInterface"], [203, 5, 1, "", "atEOL"], [203, 5, 1, "", "availabilityFactors"], [203, 5, 1, "", "burnSteps"], [203, 3, 1, "", "couplingIsActive"], [203, 3, 1, "", "createInterfaces"], [203, 5, 1, "", "cycleLengths"], [203, 5, 1, "", "cycleNames"], [203, 3, 1, "", "detach"], [203, 3, 1, "", "getActiveInterfaces"], [203, 3, 1, "", "getInterface"], [203, 3, 1, "", "getInterfaces"], [203, 3, 1, "", "initializeInterfaces"], [203, 4, 1, "", "inspector"], [203, 3, 1, "", "interactAllBOC"], [203, 3, 1, "", "interactAllBOL"], [203, 3, 1, "", "interactAllCoupled"], [203, 3, 1, "", "interactAllEOC"], [203, 3, 1, "", "interactAllEOL"], [203, 3, 1, "", "interactAllError"], [203, 3, 1, "", "interactAllEveryNode"], [203, 3, 1, "", "interactAllInit"], [203, 3, 1, "", "interfaceIsActive"], [203, 3, 1, "", "loadState"], [203, 5, 1, "", "maxBurnSteps"], [203, 3, 1, "", "operate"], [203, 5, 1, "", "powerFractions"], [203, 3, 1, "", "printInterfaceSummary"], [203, 3, 1, "", "reattach"], [203, 3, 1, "", "removeAllInterfaces"], [203, 3, 1, "", "removeInterface"], [203, 3, 1, "", "setStateToDefault"], [203, 3, 1, "", "snapshotRequest"], [203, 5, 1, "", "stepLengths"]], "armi.operators.operatorMPI": [[204, 2, 1, "", "OperatorMPI"]], "armi.operators.operatorMPI.OperatorMPI": [[204, 3, 1, "", "collapseAllStderrs"], [204, 3, 1, "", "operate"], [204, 3, 1, "", "workerOperate"], [204, 3, 1, "", "workerQuit"]], "armi.operators.runTypes": [[205, 2, 1, "", "RunTypes"]], "armi.operators.runTypes.RunTypes": [[205, 4, 1, "", "EQUILIBRIUM"], [205, 4, 1, "", "SNAPSHOTS"], [205, 4, 1, "", "STANDARD"]], "armi.operators.snapshots": [[207, 2, 1, "", "OperatorSnapshots"]], "armi.operators.snapshots.OperatorSnapshots": [[207, 5, 1, "", "atEOL"], [207, 3, 1, "", "createInterfaces"], [207, 3, 1, "", "setStateToDefault"]], "armi.operators.tests": [[209, 0, 0, "-", "test_operatorSnapshots"], [210, 0, 0, "-", "test_operators"]], "armi.operators.tests.test_operatorSnapshots": [[209, 2, 1, "", "TestOperatorSnapshots"], [209, 2, 1, "", "TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots": [[209, 3, 1, "", "test_atEOL"], [209, 3, 1, "", "test_createInterfaces"], [209, 3, 1, "", "test_createInterfacesDisabled"], [209, 3, 1, "", "test_mainOperate"], [209, 3, 1, "", "test_setStateToDefault"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings": [[209, 3, 1, "", "test_getOperatorClassFromSettings"]], "armi.operators.tests.test_operators": [[210, 2, 1, "", "CyclesSettingsTests"], [210, 2, 1, "", "InterfaceA"], [210, 2, 1, "", "InterfaceB"], [210, 2, 1, "", "InterfaceC"], [210, 2, 1, "", "OperatorTests"], [210, 2, 1, "", "TestCreateOperator"], [210, 2, 1, "", "TestInterfaceAndEventHeaders"], [210, 2, 1, "", "TestTightCoupling"]], "armi.operators.tests.test_operators.CyclesSettingsTests": [[210, 4, 1, "", "availabilityFactorsSolution"], [210, 4, 1, "", "burnStepsSolution"], [210, 4, 1, "", "cycleLengthsSolution"], [210, 4, 1, "", "cycleNamesSolution"], [210, 4, 1, "", "detailedCyclesSettings"], [210, 4, 1, "", "maxBurnStepsSolution"], [210, 4, 1, "", "powerFractionsSolution"], [210, 4, 1, "", "stepLengthsSolution"], [210, 3, 1, "", "test_getAvailabilityFactors"], [210, 3, 1, "", "test_getBurnSteps"], [210, 3, 1, "", "test_getCycleLengths"], [210, 3, 1, "", "test_getCycleNames"], [210, 3, 1, "", "test_getMaxBurnSteps"], [210, 3, 1, "", "test_getPowerFractions"], [210, 3, 1, "", "test_getStepLengths"]], "armi.operators.tests.test_operators.InterfaceA": [[210, 4, 1, "", "function"], [210, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceB": [[210, 4, 1, "", "function"], [210, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceC": [[210, 4, 1, "", "function"], [210, 4, 1, "", "name"]], "armi.operators.tests.test_operators.OperatorTests": [[210, 3, 1, "", "test_addInterfaceSubclassCollision"], [210, 3, 1, "", "test_getActiveInterfaces"], [210, 3, 1, "", "test_interfaceIsActive"], [210, 3, 1, "", "test_loadStateError"], [210, 3, 1, "", "test_operatorData"], [210, 3, 1, "", "test_orderedInterfaces"], [210, 3, 1, "", "test_setStateToDefault"], [210, 3, 1, "", "test_snapshotRequest"]], "armi.operators.tests.test_operators.TestCreateOperator": [[210, 3, 1, "", "test_createOperator"]], "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders": [[210, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Coupled"], [210, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Cycle"], [210, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Empty"], [210, 3, 1, "", "test_expandCycleAndTimeNodeArgs_EveryNode"]], "armi.operators.tests.test_operators.TestTightCoupling": [[210, 3, 1, "", "dbWriteForCoupling"], [210, 3, 1, "", "test_computeTightCouplingConvergence"], [210, 3, 1, "", "test_couplingIsActive"], [210, 3, 1, "", "test_getStepLengths"], [210, 3, 1, "", "test_performTightCoupling_Inactive"], [210, 3, 1, "", "test_performTightCoupling_NoWriteDB"], [210, 3, 1, "", "test_performTightCoupling_WriteDB"], [210, 3, 1, "", "test_performTightCoupling_notConverged"], [210, 3, 1, "", "test_performTightCoupling_skip"]], "armi.physics": [[212, 0, 0, "-", "constants"], [213, 0, 0, "-", "executers"], [214, 0, 0, "-", "fuelCycle"], [225, 0, 0, "-", "fuelPerformance"], [235, 0, 0, "-", "neutronics"], [269, 0, 0, "-", "safety"], [270, 0, 0, "-", "tests"], [272, 0, 0, "-", "thermalHydraulics"]], "armi.physics.constants": [[212, 6, 1, "", "DPA_CROSS_SECTIONS"]], "armi.physics.executers": [[213, 2, 1, "", "DefaultExecuter"], [213, 2, 1, "", "Executer"], [213, 2, 1, "", "ExecutionOptions"]], "armi.physics.executers.DefaultExecuter": [[213, 3, 1, "", "run"], [213, 3, 1, "", "writeInput"]], "armi.physics.executers.Executer": [[213, 3, 1, "", "run"]], "armi.physics.executers.ExecutionOptions": [[213, 3, 1, "", "describe"], [213, 3, 1, "", "fromReactor"], [213, 3, 1, "", "fromUserSettings"], [213, 3, 1, "", "resolveDerivedOptions"], [213, 3, 1, "", "setRunDirFromCaseTitle"]], "armi.physics.fuelCycle": [[214, 2, 1, "", "FuelHandlerPlugin"], [215, 0, 0, "-", "assemblyRotationAlgorithms"], [216, 0, 0, "-", "fuelHandlerFactory"], [217, 0, 0, "-", "fuelHandlerInterface"], [218, 0, 0, "-", "fuelHandlers"], [219, 0, 0, "-", "hexAssemblyFuelMgmtUtils"], [220, 0, 0, "-", "settings"], [221, 0, 0, "-", "tests"]], "armi.physics.fuelCycle.FuelHandlerPlugin": [[214, 3, 1, "", "defineSettings"], [214, 3, 1, "", "defineSettingsValidators"], [214, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms": [[215, 1, 1, "", "buReducingAssemblyRotation"], [215, 1, 1, "", "simpleAssemblyRotation"]], "armi.physics.fuelCycle.fuelHandlerFactory": [[216, 1, 1, "", "fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface": [[217, 2, 1, "", "FuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface": [[217, 3, 1, "", "interactBOC"], [217, 3, 1, "", "interactEOC"], [217, 3, 1, "", "interactEOL"], [217, 3, 1, "", "makeShuffleReport"], [217, 3, 1, "", "manageFuel"], [217, 4, 1, "", "name"], [217, 3, 1, "", "specifyInputs"], [217, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.fuelHandlers": [[218, 2, 1, "", "FuelHandler"]], "armi.physics.fuelCycle.fuelHandlers.FuelHandler": [[218, 3, 1, "", "chooseSwaps"], [218, 5, 1, "", "cs"], [218, 5, 1, "", "cycle"], [218, 3, 1, "", "dischargeSwap"], [218, 3, 1, "", "doRepeatShuffle"], [218, 3, 1, "", "findAssembly"], [218, 3, 1, "", "getFactorList"], [218, 3, 1, "", "isAssemblyInAZone"], [218, 3, 1, "", "makeShuffleArrows"], [218, 3, 1, "", "outage"], [218, 3, 1, "", "prepCore"], [218, 3, 1, "", "prepShuffleMap"], [218, 3, 1, "", "processMoveList"], [218, 5, 1, "", "r"], [218, 3, 1, "", "readMoves"], [218, 3, 1, "", "repeatShufflePattern"], [218, 3, 1, "", "swapAssemblies"], [218, 3, 1, "", "swapCascade"], [218, 3, 1, "", "trackChain"], [218, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils": [[219, 1, 1, "", "buildConvergentRingSchedule"], [219, 1, 1, "", "buildRingSchedule"], [219, 1, 1, "", "getOptimalAssemblyOrientation"]], "armi.physics.fuelCycle.settings": [[220, 1, 1, "", "getFuelCycleSettingValidators"], [220, 1, 1, "", "getFuelCycleSettings"]], "armi.physics.fuelCycle.tests": [[222, 0, 0, "-", "test_assemblyRotationAlgorithms"], [223, 0, 0, "-", "test_fuelHandlers"], [224, 0, 0, "-", "test_hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms": [[222, 2, 1, "", "TestFuelHandlerMgmtTools"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools": [[222, 3, 1, "", "test_buReducingAssemblyRotation"], [222, 3, 1, "", "test_simpleAssemblyRotation"]], "armi.physics.fuelCycle.tests.test_fuelHandlers": [[223, 2, 1, "", "FuelHandlerTestHelper"], [223, 2, 1, "", "MockLatticePhysicsInterface"], [223, 2, 1, "", "MockXSGM"], [223, 2, 1, "", "TestFuelHandler"], [223, 2, 1, "", "TestFuelPlugin"], [223, 1, 1, "", "addSomeDetailAssemblies"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface": [[223, 3, 1, "", "interactBOC"], [223, 4, 1, "", "name"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM": [[223, 3, 1, "", "interactBOC"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler": [[223, 3, 1, "", "runShuffling"], [223, 3, 1, "", "test_dischargeSwap"], [223, 3, 1, "", "test_dischargeSwapIncompatibleStationaryBlocks"], [223, 3, 1, "", "test_findByCoords"], [223, 3, 1, "", "test_findHighBu"], [223, 3, 1, "", "test_findInSFP"], [223, 3, 1, "", "test_findMany"], [223, 3, 1, "", "test_findWithMinMax"], [223, 3, 1, "", "test_getAssembliesInRings"], [223, 3, 1, "", "test_getFactorList"], [223, 3, 1, "", "test_getParamMax"], [223, 3, 1, "", "test_interactBOC"], [223, 3, 1, "", "test_isAssemblyInAZone"], [223, 3, 1, "", "test_linPowByPin"], [223, 3, 1, "", "test_linPowByPinGamma"], [223, 3, 1, "", "test_linPowByPinNeutron"], [223, 3, 1, "", "test_outage"], [223, 3, 1, "", "test_outageEdgeCase"], [223, 3, 1, "", "test_processMoveList"], [223, 3, 1, "", "test_readMoves"], [223, 3, 1, "", "test_repeatShuffles"], [223, 3, 1, "", "test_transferDifferentNumberStationaryBlocks"], [223, 3, 1, "", "test_transferIncompatibleHeightStationaryBlocks"], [223, 3, 1, "", "test_transferStationaryBlocks"], [223, 3, 1, "", "test_transferUnalignedLocationStationaryBlocks"], [223, 3, 1, "", "test_width"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin": [[223, 3, 1, "", "test_settingsAreDiscovered"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils": [[224, 2, 1, "", "TestHexAssemMgmtTools"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools": [[224, 3, 1, "", "test_buildConvergentRingSchedule"], [224, 3, 1, "", "test_buildRingSchedule"]], "armi.physics.fuelPerformance": [[226, 0, 0, "-", "executers"], [227, 0, 0, "-", "parameters"], [228, 0, 0, "-", "plugin"], [229, 0, 0, "-", "settings"], [230, 0, 0, "-", "tests"], [234, 0, 0, "-", "utils"]], "armi.physics.fuelPerformance.executers": [[226, 2, 1, "", "FuelPerformanceExecuter"], [226, 2, 1, "", "FuelPerformanceOptions"]], "armi.physics.fuelPerformance.executers.FuelPerformanceOptions": [[226, 3, 1, "", "fromReactor"], [226, 3, 1, "", "fromUserSettings"]], "armi.physics.fuelPerformance.parameters": [[227, 1, 1, "", "getFuelPerformanceParameterDefinitions"]], "armi.physics.fuelPerformance.plugin": [[228, 2, 1, "", "FuelPerformancePlugin"]], "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin": [[228, 3, 1, "", "defineParameters"], [228, 3, 1, "", "defineSettings"], [228, 3, 1, "", "defineSettingsValidators"], [228, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelPerformance.settings": [[229, 1, 1, "", "defineSettings"], [229, 1, 1, "", "defineValidators"]], "armi.physics.fuelPerformance.tests": [[231, 0, 0, "-", "test_executers"], [232, 0, 0, "-", "test_fuelPerformancePlugin"], [233, 0, 0, "-", "test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_executers": [[231, 2, 1, "", "TestFuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions": [[231, 3, 1, "", "test_fuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin": [[232, 2, 1, "", "TestFuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin": [[232, 4, 1, "", "plugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils": [[233, 2, 1, "", "TestFuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils": [[233, 3, 1, "", "test_applyFuelDisplacement"], [233, 3, 1, "", "test_gasConductivityCorrection_morph0"], [233, 3, 1, "", "test_gasConductivityCorrection_morph1"], [233, 3, 1, "", "test_gasConductivityCorrection_morph2"], [233, 3, 1, "", "test_gasConductivityCorrection_morph3"], [233, 3, 1, "", "test_gasConductivityCorrection_morph4"]], "armi.physics.fuelPerformance.utils": [[234, 1, 1, "", "applyFuelDisplacement"], [234, 1, 1, "", "gasConductivityCorrection"]], "armi.physics.neutronics": [[235, 2, 1, "", "LatticePhysicsFrequency"], [235, 2, 1, "", "NeutronicsPlugin"], [235, 1, 1, "", "adjointCalculationRequested"], [235, 1, 1, "", "applyEffectiveDelayedNeutronFractionToCore"], [236, 0, 0, "-", "const"], [237, 0, 0, "-", "crossSectionGroupManager"], [238, 0, 0, "-", "crossSectionSettings"], [239, 0, 0, "-", "diffIsotxs"], [240, 0, 0, "-", "energyGroups"], [241, 0, 0, "-", "fissionProductModel"], [235, 1, 1, "", "gammaTransportIsRequested"], [235, 1, 1, "", "gammaXsAreRequested"], [248, 0, 0, "-", "globalFlux"], [252, 0, 0, "-", "latticePhysics"], [258, 0, 0, "-", "macroXSGenerationInterface"], [259, 0, 0, "-", "parameters"], [235, 1, 1, "", "realCalculationRequested"], [260, 0, 0, "-", "reports"], [261, 0, 0, "-", "settings"], [262, 0, 0, "-", "tests"]], "armi.physics.neutronics.LatticePhysicsFrequency": [[235, 4, 1, "", "BOC"], [235, 4, 1, "", "BOL"], [235, 4, 1, "", "all"], [235, 4, 1, "", "everyNode"], [235, 4, 1, "", "firstCoupledIteration"], [235, 4, 1, "", "never"]], "armi.physics.neutronics.NeutronicsPlugin": [[235, 3, 1, "", "defineEntryPoints"], [235, 3, 1, "", "defineParameters"], [235, 3, 1, "", "defineSettings"], [235, 3, 1, "", "defineSettingsValidators"], [235, 3, 1, "", "exposeInterfaces"], [235, 3, 1, "", "getReportContents"], [235, 3, 1, "", "onProcessCoreLoading"]], "armi.physics.neutronics.crossSectionGroupManager": [[237, 2, 1, "", "AverageBlockCollection"], [237, 2, 1, "", "BlockCollection"], [237, 2, 1, "", "CrossSectionGroupManager"], [237, 2, 1, "", "CylindricalComponentsAverageBlockCollection"], [237, 2, 1, "", "FluxWeightedAverageBlockCollection"], [237, 2, 1, "", "MedianBlockCollection"], [237, 2, 1, "", "SlabComponentsAverageBlockCollection"], [237, 1, 1, "", "blockCollectionFactory"], [237, 1, 1, "", "describeInterfaces"], [237, 1, 1, "", "getBlockNuclideTemperatureAvgTerms"], [237, 1, 1, "", "getXSTypeLabelFromNumber"], [237, 1, 1, "", "getXSTypeNumberFromLabel"]], "armi.physics.neutronics.crossSectionGroupManager.BlockCollection": [[237, 3, 1, "", "calcAvgNuclideTemperatures"], [237, 3, 1, "", "createRepresentativeBlock"], [237, 3, 1, "", "getCandidateBlocks"], [237, 3, 1, "", "getWeight"]], "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager": [[237, 3, 1, "", "clearRepresentativeBlocks"], [237, 3, 1, "", "createRepresentativeBlocks"], [237, 3, 1, "", "createRepresentativeBlocksUsingExistingBlocks"], [237, 3, 1, "", "disableBuGroupUpdates"], [237, 3, 1, "", "enableBuGroupUpdates"], [237, 3, 1, "", "fluxSolutionIsPregenerated"], [237, 3, 1, "", "getNextAvailableXsTypes"], [237, 3, 1, "", "getNucTemperature"], [237, 3, 1, "", "interactBOC"], [237, 3, 1, "", "interactBOL"], [237, 3, 1, "", "interactCoupled"], [237, 3, 1, "", "interactEOC"], [237, 3, 1, "", "interactEveryNode"], [237, 3, 1, "", "makeCrossSectionGroups"], [237, 4, 1, "", "name"], [237, 3, 1, "", "updateNuclideTemperatures"], [237, 3, 1, "", "xsTypeIsPregenerated"]], "armi.physics.neutronics.crossSectionSettings": [[238, 2, 1, "", "XSGeometryTypes"], [238, 2, 1, "", "XSModelingOptions"], [238, 2, 1, "", "XSSettingDef"], [238, 2, 1, "", "XSSettings"], [238, 1, 1, "", "serializeXSSettings"], [238, 1, 1, "", "xsSettingsValidator"]], "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes": [[238, 4, 1, "", "ONE_DIMENSIONAL_CYLINDER"], [238, 4, 1, "", "ONE_DIMENSIONAL_SLAB"], [238, 4, 1, "", "TWO_DIMENSIONAL_HEX"], [238, 4, 1, "", "ZERO_DIMENSIONAL"], [238, 3, 1, "", "getStr"]], "armi.physics.neutronics.crossSectionSettings.XSModelingOptions": [[238, 5, 1, "", "buGroup"], [238, 5, 1, "", "fluxIsPregenerated"], [238, 3, 1, "", "serialize"], [238, 3, 1, "", "setDefaults"], [238, 3, 1, "", "validate"], [238, 5, 1, "", "xsIsPregenerated"], [238, 5, 1, "", "xsType"]], "armi.physics.neutronics.crossSectionSettings.XSSettingDef": [[238, 3, 1, "", "dump"]], "armi.physics.neutronics.crossSectionSettings.XSSettings": [[238, 3, 1, "", "setDefaults"]], "armi.physics.neutronics.diffIsotxs": [[239, 2, 1, "", "CompareIsotxsLibraries"]], "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries": [[239, 3, 1, "", "addOptions"], [239, 3, 1, "", "invoke"], [239, 4, 1, "", "name"], [239, 4, 1, "", "settingsArgument"]], "armi.physics.neutronics.energyGroups": [[240, 6, 1, "", "GROUP_STRUCTURE"], [240, 1, 1, "", "getFastFluxGroupCutoff"], [240, 1, 1, "", "getGroupStructure"], [240, 1, 1, "", "getGroupStructureType"]], "armi.physics.neutronics.fissionProductModel": [[242, 0, 0, "-", "fissionProductModel"], [243, 0, 0, "-", "fissionProductModelSettings"], [244, 0, 0, "-", "lumpedFissionProduct"], [245, 0, 0, "-", "tests"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel": [[242, 2, 1, "", "FissionProductModel"], [242, 1, 1, "", "describeInterfaces"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel": [[242, 3, 1, "", "getAllFissionProductNames"], [242, 3, 1, "", "getGlobalLumpedFissionProducts"], [242, 3, 1, "", "interactBOC"], [242, 3, 1, "", "interactBOL"], [242, 3, 1, "", "interactDistributeState"], [242, 4, 1, "", "name"], [242, 3, 1, "", "removeFissionGasesFromBlocks"], [242, 3, 1, "", "setAllBlockLFPs"], [242, 3, 1, "", "setAllComponentFissionProducts"], [242, 3, 1, "", "setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings": [[243, 1, 1, "", "defineSettings"], [243, 1, 1, "", "getFissionProductModelSettingValidators"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct": [[244, 2, 1, "", "FissionProductDefinitionFile"], [244, 2, 1, "", "LumpedFissionProduct"], [244, 2, 1, "", "LumpedFissionProductCollection"], [244, 1, 1, "", "isGas"], [244, 1, 1, "", "lumpedFissionProductFactory"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile": [[244, 3, 1, "", "createLFPsFromFile"], [244, 3, 1, "", "createSingleLFPFromFile"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct": [[244, 3, 1, "", "duplicate"], [244, 3, 1, "", "getGaseousYieldFraction"], [244, 3, 1, "", "getMassFrac"], [244, 3, 1, "", "getMassFracDenom"], [244, 3, 1, "", "getMassFracs"], [244, 3, 1, "", "getTotalYield"], [244, 3, 1, "", "items"], [244, 3, 1, "", "keys"], [244, 3, 1, "", "values"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection": [[244, 3, 1, "", "duplicate"], [244, 3, 1, "", "getAllFissionProductNames"], [244, 3, 1, "", "getAllFissionProductNuclideBases"], [244, 3, 1, "", "getLumpedFissionProductNames"], [244, 3, 1, "", "getMassFrac"], [244, 3, 1, "", "getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests": [[246, 0, 0, "-", "test_fissionProductModel"], [247, 0, 0, "-", "test_lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel": [[246, 2, 1, "", "TestFissionProductModelExplicitMC2Library"], [246, 2, 1, "", "TestFissionProductModelExplicitMC2LibrarySlower"], [246, 2, 1, "", "TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library": [[246, 3, 1, "", "test_nuclideFlags"], [246, 3, 1, "", "test_nuclidesInModelFuel"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower": [[246, 3, 1, "", "test_nuclidesInModelAllDepletableBlocks"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts": [[246, 3, 1, "", "test_fpApplication"], [246, 3, 1, "", "test_getAllFissionProductNames"], [246, 3, 1, "", "test_loadGlobalLFPsFromFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct": [[247, 2, 1, "", "TestFissionProductDefinitionFile"], [247, 2, 1, "", "TestLumpedFissionProduct"], [247, 2, 1, "", "TestLumpedFissionProductCollection"], [247, 2, 1, "", "TestLumpedFissionProductsExplicit"], [247, 2, 1, "", "TestLumpedFissionProductsFromReferenceFile"], [247, 2, 1, "", "TestMo99LFP"], [247, 1, 1, "", "getDummyLFPFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile": [[247, 3, 1, "", "test_createLFPs"], [247, 3, 1, "", "test_createReferenceLFPs"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct": [[247, 3, 1, "", "test_gaseousYieldFraction"], [247, 3, 1, "", "test_getYield"], [247, 3, 1, "", "test_isGas"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection": [[247, 3, 1, "", "test_duplicate"], [247, 3, 1, "", "test_getAllFissionProductNames"], [247, 3, 1, "", "test_getAllFissionProductNuclideBases"], [247, 3, 1, "", "test_getMassFrac"], [247, 3, 1, "", "test_getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit": [[247, 3, 1, "", "test_explicitFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile": [[247, 3, 1, "", "test_fissionProductYields"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP": [[247, 3, 1, "", "test_getAllFissionProductNames"]], "armi.physics.neutronics.globalFlux": [[249, 0, 0, "-", "globalFluxInterface"], [250, 0, 0, "-", "tests"]], "armi.physics.neutronics.globalFlux.globalFluxInterface": [[249, 2, 1, "", "DoseResultsMapper"], [249, 2, 1, "", "GlobalFluxExecuter"], [249, 2, 1, "", "GlobalFluxInterface"], [249, 2, 1, "", "GlobalFluxInterfaceUsingExecuters"], [249, 2, 1, "", "GlobalFluxOptions"], [249, 2, 1, "", "GlobalFluxResultMapper"], [249, 1, 1, "", "calcReactionRates"], [249, 1, 1, "", "computeDpaRate"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper": [[249, 3, 1, "", "apply"], [249, 3, 1, "", "updateCycleDoseParams"], [249, 3, 1, "", "updateFluenceAndDpa"], [249, 3, 1, "", "updateLoadpadDose"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter": [[249, 3, 1, "", "edgeAssembliesAreNeeded"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface": [[249, 3, 1, "", "calculateKeff"], [249, 3, 1, "", "checkEnergyBalance"], [249, 4, 1, "", "function"], [249, 3, 1, "", "getHistoryParams"], [249, 3, 1, "", "getIOFileNames"], [249, 3, 1, "", "interactBOC"], [249, 3, 1, "", "interactCoupled"], [249, 3, 1, "", "interactEveryNode"], [249, 4, 1, "", "name"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters": [[249, 3, 1, "", "calculateKeff"], [249, 3, 1, "", "getExecuter"], [249, 3, 1, "", "getExecuterCls"], [249, 3, 1, "", "getExecuterOptions"], [249, 3, 1, "", "getLabel"], [249, 3, 1, "", "getOptionsCls"], [249, 3, 1, "", "getTightCouplingValue"], [249, 3, 1, "", "interactCoupled"], [249, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions": [[249, 3, 1, "", "fromReactor"], [249, 3, 1, "", "fromUserSettings"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper": [[249, 3, 1, "", "clearFlux"], [249, 3, 1, "", "getBurnupPeakingFactor"], [249, 3, 1, "", "getDpaXs"], [249, 3, 1, "", "getKeff"], [249, 3, 1, "", "updateDpaRate"], [249, 3, 1, "", "updateMaxDpaParams"]], "armi.physics.neutronics.globalFlux.tests": [[251, 0, 0, "-", "test_globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface": [[251, 2, 1, "", "MockCore"], [251, 2, 1, "", "MockCoreParams"], [251, 2, 1, "", "MockGlobalFluxExecuter"], [251, 2, 1, "", "MockGlobalFluxInterface"], [251, 2, 1, "", "MockGlobalFluxWithExecuters"], [251, 2, 1, "", "MockGlobalFluxWithExecutersNonUniform"], [251, 2, 1, "", "MockReactor"], [251, 2, 1, "", "MockReactorParams"], [251, 2, 1, "", "TestGlobalFluxInterface"], [251, 2, 1, "", "TestGlobalFluxInterfaceWithExecuters"], [251, 2, 1, "", "TestGlobalFluxInterfaceWithExecutersNonUniform"], [251, 2, 1, "", "TestGlobalFluxOptions"], [251, 2, 1, "", "TestGlobalFluxResultMapper"], [251, 2, 1, "", "TestGlobalFluxUtils"], [251, 1, 1, "", "applyDummyFlux"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface": [[251, 3, 1, "", "interactBOC"], [251, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters": [[251, 3, 1, "", "getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform": [[251, 3, 1, "", "getExecuterOptions"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface": [[251, 3, 1, "", "test_checkEnergyBalance"], [251, 3, 1, "", "test_computeDpaRate"], [251, 3, 1, "", "test_getHistoryParams"], [251, 3, 1, "", "test_getIOFileNames"], [251, 3, 1, "", "test_interaction"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters": [[251, 3, 1, "", "test_calculateKeff"], [251, 3, 1, "", "test_executerInteraction"], [251, 3, 1, "", "test_getExecuterCls"], [251, 3, 1, "", "test_getTightCouplingValue"], [251, 3, 1, "", "test_setTightCouplingDefaults"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform": [[251, 3, 1, "", "test_calculateKeff"], [251, 3, 1, "", "test_executerInteractionNonUniformAssems"], [251, 3, 1, "", "test_getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions": [[251, 3, 1, "", "test_readFromReactors"], [251, 3, 1, "", "test_readFromSettings"], [251, 3, 1, "", "test_savePhysicsFiles"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper": [[251, 3, 1, "", "test_getBurnupPeakingFactor"], [251, 3, 1, "", "test_getBurnupPeakingFactorZero"], [251, 3, 1, "", "test_getDpaXs"], [251, 3, 1, "", "test_mapper"], [251, 3, 1, "", "test_updateCycleDoseParams"], [251, 3, 1, "", "test_updateLoadpadDose"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils": [[251, 3, 1, "", "test_calcReactionRates"]], "armi.physics.neutronics.latticePhysics": [[253, 0, 0, "-", "latticePhysicsInterface"], [254, 0, 0, "-", "latticePhysicsWriter"], [255, 0, 0, "-", "tests"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface": [[253, 2, 1, "", "LatticePhysicsInterface"], [253, 1, 1, "", "setBlockNeutronVelocities"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface": [[253, 3, 1, "", "clearXS"], [253, 3, 1, "", "computeCrossSections"], [253, 4, 1, "", "function"], [253, 3, 1, "", "generateLatticePhysicsInputs"], [253, 3, 1, "", "getReader"], [253, 3, 1, "", "getRepresentativeBlocks"], [253, 3, 1, "", "getWriters"], [253, 3, 1, "", "interactBOC"], [253, 3, 1, "", "interactBOL"], [253, 3, 1, "", "interactCoupled"], [253, 3, 1, "", "interactEOC"], [253, 3, 1, "", "interactEveryNode"], [253, 3, 1, "", "makeCycleXSFilesAsBaseFiles"], [253, 3, 1, "", "readExistingXSLibraries"], [253, 3, 1, "", "updatePhysicsCouplingControl"], [253, 3, 1, "", "updateXSLibrary"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter": [[254, 2, 1, "", "LatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter": [[254, 4, 1, "", "COOLANT_CATEGORY"], [254, 4, 1, "", "DEPLETABLE"], [254, 4, 1, "", "FISSION_PRODUCT_CATEGORY"], [254, 4, 1, "", "FUEL_CATEGORY"], [254, 4, 1, "", "REPRESENTED"], [254, 4, 1, "", "STRUCTURE_CATEGORY"], [254, 4, 1, "", "UNDEPLETABLE"], [254, 4, 1, "", "UNREPRESENTED"], [254, 4, 1, "", "UNUSED_CATEGORY"], [254, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests": [[256, 0, 0, "-", "test_latticeInterface"], [257, 0, 0, "-", "test_latticeWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface": [[256, 2, 1, "", "LatticeInterfaceTester"], [256, 2, 1, "", "LatticeInterfaceTesterLibFalse"], [256, 2, 1, "", "TestLatticePhysicsInterface"], [256, 2, 1, "", "TestLatticePhysicsInterfaceBase"], [256, 2, 1, "", "TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester": [[256, 3, 1, "", "readExistingXSLibraries"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface": [[256, 3, 1, "", "test_getSuffix"], [256, 3, 1, "", "test_includeGammaXS"], [256, 3, 1, "", "test_interactAll"], [256, 3, 1, "", "test_interactBOC"], [256, 3, 1, "", "test_interactBOL"], [256, 3, 1, "", "test_interactEveryNode"], [256, 3, 1, "", "test_interactEveryNodeAll"], [256, 3, 1, "", "test_interactEveryNodeFirstCoupled"], [256, 3, 1, "", "test_interactFirstCoupledIteration"], [256, 3, 1, "", "test_latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation": [[256, 3, 1, "", "test_libCreation_GenXS"], [256, 3, 1, "", "test_libCreation_GenXS_2"], [256, 3, 1, "", "test_libCreation_GenXS_3"], [256, 3, 1, "", "test_libCreation_NoGenXS"], [256, 3, 1, "", "test_libCreation_NoGenXS_2"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter": [[257, 2, 1, "", "FakeLatticePhysicsWriter"], [257, 2, 1, "", "TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter": [[257, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter": [[257, 3, 1, "", "test_getAllNuclidesByTemperatureInC"], [257, 3, 1, "", "test_getAllNuclidesByTemperatureInCExplicitFissionProducts"], [257, 3, 1, "", "test_getAllNuclidesByTemperatureInCNone"], [257, 3, 1, "", "test_getAvgNuclideTemperatureInC"], [257, 3, 1, "", "test_getDetailedFPDensities"], [257, 3, 1, "", "test_getDetailedFissionProducts"], [257, 3, 1, "", "test_getDetailedFissionProductsPass"], [257, 3, 1, "", "test_getDriverBlock"], [257, 3, 1, "", "test_getFuelTemperature"], [257, 3, 1, "", "test_isCriticalBucklingSearchActive"], [257, 3, 1, "", "test_isGammaXSGenerationEnabled"], [257, 3, 1, "", "test_isSourceDriven"], [257, 3, 1, "", "test_latticePhysicsWriter"], [257, 3, 1, "", "test_setBlockNeutronVelocities"], [257, 3, 1, "", "test_writeTitle"]], "armi.physics.neutronics.macroXSGenerationInterface": [[258, 2, 1, "", "MacroXSGenerationInterface"], [258, 2, 1, "", "MacroXSGenerator"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface": [[258, 3, 1, "", "buildMacros"], [258, 4, 1, "", "name"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator": [[258, 3, 1, "", "invokeHook"]], "armi.physics.neutronics.parameters": [[259, 1, 1, "", "getNeutronicsParameterDefinitions"]], "armi.physics.neutronics.reports": [[260, 6, 1, "", "PD_PLOT"], [260, 1, 1, "", "generateLinePlot"], [260, 1, 1, "", "insertInitialCoreFuelAssem"], [260, 1, 1, "", "insertNeutronicsBOLContent"], [260, 1, 1, "", "insertNeutronicsReport"], [260, 1, 1, "", "neutronicsPlotting"]], "armi.physics.neutronics.settings": [[261, 1, 1, "", "defineSettings"], [261, 1, 1, "", "getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[263, 0, 0, "-", "test_crossSectionManager"], [264, 0, 0, "-", "test_crossSectionSettings"], [265, 0, 0, "-", "test_crossSectionTable"], [266, 0, 0, "-", "test_energyGroups"], [267, 0, 0, "-", "test_macroXSGenerationInterface"], [268, 0, 0, "-", "test_neutronicsPlugin"]], "armi.physics.neutronics.tests.test_crossSectionManager": [[263, 2, 1, "", "TestBlockCollection"], [263, 2, 1, "", "TestBlockCollectionAverage"], [263, 2, 1, "", "TestBlockCollectionComponentAverage"], [263, 2, 1, "", "TestBlockCollectionComponentAverage1DCylinder"], [263, 2, 1, "", "TestBlockCollectionFluxWeightedAverage"], [263, 2, 1, "", "TestBlockCollectionMedian"], [263, 2, 1, "", "TestComponentAveraging"], [263, 2, 1, "", "TestCrossSectionGroupManager"], [263, 2, 1, "", "TestXSNumberConverters"], [263, 1, 1, "", "makeBlocks"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection": [[263, 3, 1, "", "test_add"], [263, 3, 1, "", "test_getBlocksInGroup"], [263, 3, 1, "", "test_is_pickleable"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage": [[263, 3, 1, "", "test_checkBlockSimilarity"], [263, 3, 1, "", "test_createRepresentativeBlock"], [263, 3, 1, "", "test_createRepresentativeBlockDissimilar"], [263, 3, 1, "", "test_performAverageByComponent"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage": [[263, 3, 1, "", "test_ComponentAverageRepBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder": [[263, 3, 1, "", "test_ComponentAverage1DCylinder"], [263, 3, 1, "", "test_checkComponentConsistency"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage": [[263, 3, 1, "", "test_createRepresentativeBlock"], [263, 3, 1, "", "test_invalidWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian": [[263, 3, 1, "", "test_createRepresentativeBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging": [[263, 3, 1, "", "test_getAverageComponentNumberDensities"], [263, 3, 1, "", "test_getAverageComponentTemperature"], [263, 3, 1, "", "test_getAverageComponentTemperatureNoMass"], [263, 3, 1, "", "test_getAverageComponentTemperatureVariedWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager": [[263, 3, 1, "", "test_addXsGroupsFromBlocks"], [263, 3, 1, "", "test_calcWeightedBurnup"], [263, 3, 1, "", "test_copyPregeneratedFiles"], [263, 3, 1, "", "test_createRepresentativeBlocksUsingExistingBlocks"], [263, 3, 1, "", "test_createRepresentativeBlocksUsingExistingBlocksDisableValidBlockTypes"], [263, 3, 1, "", "test_disableBuGroupUpdates"], [263, 3, 1, "", "test_enableBuGroupUpdates"], [263, 3, 1, "", "test_getNextAvailableXsType"], [263, 3, 1, "", "test_getRepresentativeBlocks"], [263, 3, 1, "", "test_interactAllCoupled"], [263, 3, 1, "", "test_interactBOC"], [263, 3, 1, "", "test_interactBOL"], [263, 3, 1, "", "test_interactEveryNode"], [263, 3, 1, "", "test_interactFirstCoupledIteration"], [263, 3, 1, "", "test_setBuGroupBounds"], [263, 3, 1, "", "test_updateBurnupGroups"], [263, 3, 1, "", "test_xsgmIsRunBeforeXS"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters": [[263, 3, 1, "", "test_conversion"], [263, 3, 1, "", "test_conversion_2digit"]], "armi.physics.neutronics.tests.test_crossSectionSettings": [[264, 2, 1, "", "TestCrossSectionSettings"], [264, 2, 1, "", "TestXSSettings"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings": [[264, 3, 1, "", "test_badCrossSections"], [264, 3, 1, "", "test_crossSections"], [264, 3, 1, "", "test_homogeneousXsDefaultSettingAssignment"], [264, 3, 1, "", "test_optionalKey"], [264, 3, 1, "", "test_pregeneratedCrossSections"], [264, 3, 1, "", "test_pregeneratedFluxInputs"], [264, 3, 1, "", "test_prioritization"], [264, 3, 1, "", "test_setDefaultSettingsByLowestBuGroupHomogeneous"], [264, 3, 1, "", "test_setDefaultSettingsByLowestBuGroupOneDimensional"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings": [[264, 3, 1, "", "test_caseSettings"], [264, 3, 1, "", "test_csBlockRepresentation"], [264, 3, 1, "", "test_csBlockRepresentationFileLocation"], [264, 3, 1, "", "test_xsSettingsSetDefault"], [264, 3, 1, "", "test_yamlIO"]], "armi.physics.neutronics.tests.test_crossSectionTable": [[265, 2, 1, "", "TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable": [[265, 3, 1, "", "test_isotopicDepletionInterface"], [265, 3, 1, "", "test_makeTable"]], "armi.physics.neutronics.tests.test_energyGroups": [[266, 2, 1, "", "TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups": [[266, 3, 1, "", "test_consistenciesBetweenGroupStructureAndGroupStructureType"], [266, 3, 1, "", "test_getFastFluxGroupCutoff"], [266, 3, 1, "", "test_invalidGroupStructureType"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface": [[267, 2, 1, "", "TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface": [[267, 3, 1, "", "test_macroXSGenerationInterfaceBasics"]], "armi.physics.neutronics.tests.test_neutronicsPlugin": [[268, 2, 1, "", "NeutronicsReactorTests"], [268, 2, 1, "", "TestNeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests": [[268, 3, 1, "", "test_kineticsParameterAssignment"], [268, 3, 1, "", "test_neutronicsSettingsValidators"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin": [[268, 4, 1, "", "plugin"], [268, 3, 1, "", "test_customSettingObjectIO"], [268, 3, 1, "", "test_customSettingRoundTrip"], [268, 3, 1, "", "test_neutronicsSettingsLoaded"]], "armi.physics.safety": [[269, 2, 1, "", "SafetyPlugin"]], "armi.physics.safety.SafetyPlugin": [[269, 3, 1, "", "defineSettings"]], "armi.physics.tests": [[271, 0, 0, "-", "test_executers"]], "armi.physics.tests.test_executers": [[271, 2, 1, "", "MockCore"], [271, 2, 1, "", "MockParams"], [271, 2, 1, "", "MockReactor"], [271, 2, 1, "", "TestExecuters"], [271, 2, 1, "", "TestExecutionOptions"]], "armi.physics.tests.test_executers.TestExecuters": [[271, 3, 1, "", "test_collectInputsAndOutputs"], [271, 3, 1, "", "test_runExternalExecutable"], [271, 3, 1, "", "test_updateRunDir"]], "armi.physics.tests.test_executers.TestExecutionOptions": [[271, 3, 1, "", "test_runningDirectoryPath"]], "armi.physics.thermalHydraulics": [[273, 0, 0, "-", "const"], [274, 0, 0, "-", "parameters"], [275, 0, 0, "-", "plugin"], [276, 0, 0, "-", "settings"], [277, 0, 0, "-", "tests"]], "armi.physics.thermalHydraulics.parameters": [[274, 1, 1, "", "getParameterDefinitions"]], "armi.physics.thermalHydraulics.plugin": [[275, 2, 1, "", "ThermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin": [[275, 3, 1, "", "afterConstructionOfAssemblies"], [275, 3, 1, "", "defineParameters"], [275, 3, 1, "", "defineSettings"], [275, 3, 1, "", "defineSettingsValidators"], [275, 3, 1, "", "exposeInterfaces"]], "armi.physics.thermalHydraulics.settings": [[276, 1, 1, "", "defineSettings"], [276, 1, 1, "", "defineValidators"]], "armi.physics.thermalHydraulics.tests": [[278, 0, 0, "-", "test_thermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin": [[278, 2, 1, "", "TestThermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin": [[278, 4, 1, "", "plugin"], [278, 3, 1, "", "test_thermalHydraulicsSettingsLoaded"], [278, 3, 1, "", "test_thermalHydraulicsSettingsSet"]], "armi.pluginManager": [[279, 2, 1, "", "ArmiPluginManager"]], "armi.pluginManager.ArmiPluginManager": [[279, 5, 1, "", "counter"], [279, 3, 1, "", "register"], [279, 3, 1, "", "unregister"]], "armi.plugins": [[280, 2, 1, "", "ArmiPlugin"], [280, 7, 1, "", "PluginError"], [280, 2, 1, "", "UserPlugin"], [280, 1, 1, "", "collectInterfaceDescriptions"], [280, 1, 1, "", "getNewPluginManager"]], "armi.plugins.ArmiPlugin": [[280, 3, 1, "", "afterConstructionOfAssemblies"], [280, 3, 1, "", "defineAssemblyTypes"], [280, 3, 1, "", "defineBlockTypes"], [280, 3, 1, "", "defineBlueprintsSections"], [280, 3, 1, "", "defineCaseDependencies"], [280, 3, 1, "", "defineEntryPoints"], [280, 3, 1, "", "defineFlags"], [280, 3, 1, "", "defineGuiWidgets"], [280, 3, 1, "", "defineParameterRenames"], [280, 3, 1, "", "defineParameters"], [280, 3, 1, "", "defineSettings"], [280, 3, 1, "", "defineSettingsValidators"], [280, 3, 1, "", "defineSystemBuilders"], [280, 3, 1, "", "exposeInterfaces"], [280, 3, 1, "", "getAxialExpansionChanger"], [280, 3, 1, "", "getOperatorClassFromRunType"], [280, 3, 1, "", "getReportContents"], [280, 3, 1, "", "mpiActionRequiresReset"], [280, 3, 1, "", "onProcessCoreLoading"]], "armi.plugins.UserPlugin": [[280, 3, 1, "", "defineParameterRenames"], [280, 3, 1, "", "defineParameters"], [280, 3, 1, "", "defineSettings"], [280, 3, 1, "", "defineSettingsValidators"]], "armi.reactor": [[281, 2, 1, "", "ReactorPlugin"], [282, 0, 0, "-", "assemblies"], [283, 0, 0, "-", "assemblyParameters"], [284, 0, 0, "-", "blockParameters"], [285, 0, 0, "-", "blocks"], [286, 0, 0, "-", "blueprints"], [302, 0, 0, "-", "components"], [308, 0, 0, "-", "composites"], [309, 0, 0, "-", "converters"], [328, 0, 0, "-", "cores"], [329, 0, 0, "-", "excoreStructure"], [330, 0, 0, "-", "flags"], [331, 0, 0, "-", "geometry"], [332, 0, 0, "-", "grids"], [341, 0, 0, "-", "parameters"], [346, 0, 0, "-", "reactorParameters"], [347, 0, 0, "-", "reactors"], [348, 0, 0, "-", "spentFuelPool"], [349, 0, 0, "-", "systemLayoutInput"], [350, 0, 0, "-", "tests"], [362, 0, 0, "-", "zones"]], "armi.reactor.ReactorPlugin": [[281, 3, 1, "", "defineAssemblyTypes"], [281, 3, 1, "", "defineBlockTypes"], [281, 3, 1, "", "defineSystemBuilders"], [281, 3, 1, "", "getAxialExpansionChanger"]], "armi.reactor.assemblies": [[282, 2, 1, "", "Assembly"], [282, 2, 1, "", "CartesianAssembly"], [282, 2, 1, "", "HexAssembly"], [282, 2, 1, "", "RZAssembly"], [282, 2, 1, "", "ThRZAssembly"]], "armi.reactor.assemblies.Assembly": [[282, 4, 1, "", "DATABASE"], [282, 4, 1, "", "LOAD_QUEUE"], [282, 4, 1, "", "NOT_IN_CORE"], [282, 4, 1, "", "SPENT_FUEL_POOL"], [282, 3, 1, "", "add"], [282, 3, 1, "", "adjustResolution"], [282, 3, 1, "", "calculateZCoords"], [282, 3, 1, "", "coords"], [282, 3, 1, "", "countBlocksWithFlags"], [282, 3, 1, "", "doubleResolution"], [282, 3, 1, "", "dump"], [282, 3, 1, "", "getAge"], [282, 3, 1, "", "getArea"], [282, 3, 1, "", "getAveragePlenumTemperature"], [282, 3, 1, "", "getAxialMesh"], [282, 3, 1, "", "getBIndexFromZIndex"], [282, 3, 1, "", "getBlockAtElevation"], [282, 3, 1, "", "getBlocks"], [282, 3, 1, "", "getBlocksAndZ"], [282, 3, 1, "", "getBlocksBetweenElevations"], [282, 3, 1, "", "getDim"], [282, 3, 1, "", "getElevationBoundariesByBlockType"], [282, 3, 1, "", "getElevationsMatchingParamValue"], [282, 3, 1, "", "getFirstBlock"], [282, 3, 1, "", "getFirstBlockByType"], [282, 3, 1, "", "getHeight"], [282, 3, 1, "", "getLocation"], [282, 3, 1, "", "getNum"], [282, 3, 1, "", "getParamOfZFunction"], [282, 3, 1, "", "getParamValuesAtZ"], [282, 3, 1, "", "getPinPlenumVolumeInCubicMeters"], [282, 3, 1, "", "getReactiveHeight"], [282, 3, 1, "", "getSymmetryFactor"], [282, 3, 1, "", "getTotalHeight"], [282, 3, 1, "", "getVolume"], [282, 3, 1, "", "hasContinuousCoolantChannel"], [282, 3, 1, "", "insert"], [282, 3, 1, "", "isOnWhichSymmetryLine"], [282, 3, 1, "", "makeAxialSnapList"], [282, 3, 1, "", "makeNameFromAssemNum"], [282, 3, 1, "", "makeUnique"], [282, 3, 1, "", "moveTo"], [282, 4, 1, "", "pDefs"], [282, 4, 1, "", "paramCollectionType"], [282, 3, 1, "", "reestablishBlockOrder"], [282, 3, 1, "", "renameBlocksAccordingToAssemblyNum"], [282, 3, 1, "", "renumber"], [282, 3, 1, "", "rotate"], [282, 3, 1, "", "setBlockHeights"], [282, 3, 1, "", "setBlockMesh"]], "armi.reactor.assemblies.CartesianAssembly": [[282, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblies.HexAssembly": [[282, 4, 1, "", "paramCollectionType"], [282, 3, 1, "", "rotate"]], "armi.reactor.assemblies.RZAssembly": [[282, 4, 1, "", "paramCollectionType"], [282, 3, 1, "", "radialInner"], [282, 3, 1, "", "radialOuter"], [282, 3, 1, "", "thetaInner"], [282, 3, 1, "", "thetaOuter"]], "armi.reactor.assemblies.ThRZAssembly": [[282, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblyParameters": [[283, 1, 1, "", "getAssemblyParameterDefinitions"]], "armi.reactor.blockParameters": [[284, 1, 1, "", "getBlockParameterDefinitions"]], "armi.reactor.blocks": [[285, 2, 1, "", "Block"], [285, 2, 1, "", "CartesianBlock"], [285, 2, 1, "", "HexBlock"], [285, 2, 1, "", "ThRZBlock"]], "armi.reactor.blocks.Block": [[285, 4, 1, "", "PITCH_COMPONENT_TYPE"], [285, 4, 1, "", "PITCH_DIMENSION"], [285, 3, 1, "", "add"], [285, 3, 1, "", "adjustDensity"], [285, 3, 1, "", "adjustUEnrich"], [285, 3, 1, "", "autoCreateSpatialGrids"], [285, 3, 1, "", "breakFuelComponentsIntoIndividuals"], [285, 3, 1, "", "completeInitialLoading"], [285, 3, 1, "", "coords"], [285, 5, 1, "", "core"], [285, 3, 1, "", "createHomogenizedCopy"], [285, 3, 1, "", "getArea"], [285, 3, 1, "", "getBlocks"], [285, 3, 1, "", "getBoronMassEnrich"], [285, 3, 1, "", "getCaptureEnergyGenerationConstants"], [285, 3, 1, "", "getComponentAreaFrac"], [285, 3, 1, "", "getComponentsInLinkedOrder"], [285, 3, 1, "", "getComponentsThatAreLinkedTo"], [285, 3, 1, "", "getDim"], [285, 3, 1, "", "getDimensions"], [285, 3, 1, "", "getFissionEnergyGenerationConstants"], [285, 3, 1, "", "getFlowAreaPerPin"], [285, 3, 1, "", "getGammaEnergyDepositionConstants"], [285, 3, 1, "", "getHeight"], [285, 3, 1, "", "getHydraulicDiameter"], [285, 3, 1, "", "getIntegratedMgFlux"], [285, 3, 1, "", "getLargestComponent"], [285, 3, 1, "", "getLocation"], [285, 3, 1, "", "getLumpedFissionProductCollection"], [285, 3, 1, "", "getMaxArea"], [285, 3, 1, "", "getMfp"], [285, 3, 1, "", "getMgFlux"], [285, 3, 1, "", "getMicroSuffix"], [285, 3, 1, "", "getNeutronEnergyDepositionConstants"], [285, 3, 1, "", "getNumPins"], [285, 3, 1, "", "getPinCenterFlatToFlat"], [285, 3, 1, "", "getPinCoordinates"], [285, 3, 1, "", "getPinPitch"], [285, 3, 1, "", "getPitch"], [285, 3, 1, "", "getPlenumPin"], [285, 3, 1, "", "getPuMoles"], [285, 3, 1, "", "getSmearDensity"], [285, 3, 1, "", "getSortedComponentsInsideOfComponent"], [285, 3, 1, "", "getSymmetryFactor"], [285, 3, 1, "", "getTotalEnergyGenerationConstants"], [285, 3, 1, "", "getUraniumMassEnrich"], [285, 3, 1, "", "getVolume"], [285, 3, 1, "", "getWettedPerimeter"], [285, 3, 1, "", "getWireWrapCladGap"], [285, 3, 1, "", "hasPinPitch"], [285, 3, 1, "", "isPlenumPin"], [285, 3, 1, "", "makeName"], [285, 3, 1, "", "mergeWithBlock"], [285, 4, 1, "", "pDefs"], [285, 4, 1, "", "paramCollectionType"], [285, 3, 1, "", "plotFlux"], [285, 3, 1, "", "remove"], [285, 3, 1, "", "removeAll"], [285, 3, 1, "", "replaceBlockWithBlock"], [285, 3, 1, "", "rotate"], [285, 3, 1, "", "setAreaFractionsReport"], [285, 3, 1, "", "setAxialExpTargetComp"], [285, 3, 1, "", "setB10VolParam"], [285, 3, 1, "", "setBuLimitInfo"], [285, 3, 1, "", "setHeight"], [285, 3, 1, "", "setPinMgFluxes"], [285, 3, 1, "", "setPitch"], [285, 4, 1, "", "uniqID"], [285, 3, 1, "", "updateComponentDims"], [285, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.CartesianBlock": [[285, 4, 1, "", "PITCH_COMPONENT_TYPE"], [285, 4, 1, "", "PITCH_DIMENSION"], [285, 3, 1, "", "getMaxArea"], [285, 3, 1, "", "getPinCenterFlatToFlat"], [285, 3, 1, "", "getSymmetryFactor"], [285, 4, 1, "", "paramCollectionType"], [285, 3, 1, "", "setPitch"]], "armi.reactor.blocks.HexBlock": [[285, 4, 1, "", "PITCH_COMPONENT_TYPE"], [285, 3, 1, "", "autoCreateSpatialGrids"], [285, 3, 1, "", "coords"], [285, 3, 1, "", "createHomogenizedCopy"], [285, 3, 1, "", "getDuctIP"], [285, 3, 1, "", "getDuctOP"], [285, 3, 1, "", "getFlowArea"], [285, 3, 1, "", "getHydraulicDiameter"], [285, 3, 1, "", "getMaxArea"], [285, 3, 1, "", "getPinCenterFlatToFlat"], [285, 3, 1, "", "getPinPitch"], [285, 3, 1, "", "getPinToDuctGap"], [285, 3, 1, "", "getRotationNum"], [285, 3, 1, "", "getSymmetryFactor"], [285, 3, 1, "", "getWettedPerimeter"], [285, 3, 1, "", "hasPinPitch"], [285, 3, 1, "", "initializePinLocations"], [285, 4, 1, "", "paramCollectionType"], [285, 3, 1, "", "rotate"], [285, 3, 1, "", "setPinPowers"], [285, 3, 1, "", "setRotationNum"], [285, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.ThRZBlock": [[285, 3, 1, "", "axialInner"], [285, 3, 1, "", "axialOuter"], [285, 3, 1, "", "getMaxArea"], [285, 4, 1, "", "paramCollectionType"], [285, 3, 1, "", "radialInner"], [285, 3, 1, "", "radialOuter"], [285, 3, 1, "", "thetaInner"], [285, 3, 1, "", "thetaOuter"], [285, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blueprints": [[286, 2, 1, "", "Blueprints"], [287, 0, 0, "-", "assemblyBlueprint"], [288, 0, 0, "-", "blockBlueprint"], [289, 0, 0, "-", "componentBlueprint"], [290, 0, 0, "-", "gridBlueprint"], [291, 0, 0, "-", "isotopicOptions"], [286, 1, 1, "", "loadFromCs"], [286, 1, 1, "", "migrate"], [292, 0, 0, "-", "reactorBlueprint"], [293, 0, 0, "-", "tests"]], "armi.reactor.blueprints.Blueprints": [[286, 3, 1, "", "addDefaultSFP"], [286, 4, 1, "", "attributes"], [286, 3, 1, "", "constructAssem"], [286, 3, 1, "", "load"], [286, 3, 1, "", "migrate"]], "armi.reactor.blueprints.assemblyBlueprint": [[287, 2, 1, "", "AssemblyBlueprint"], [287, 2, 1, "", "AssemblyKeyedList"], [287, 2, 1, "", "ByComponentModifications"], [287, 2, 1, "", "MaterialModifications"], [287, 2, 1, "", "Modifications"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint": [[287, 4, 1, "", "attributes"], [287, 3, 1, "", "construct"], [287, 3, 1, "", "getAssemClass"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList": [[287, 4, 1, "", "attributes"], [287, 5, 1, "", "bySpecifier"], [287, 4, 1, "", "item_type"]], "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications": [[287, 4, 1, "", "attributes"], [287, 4, 1, "", "key_type"], [287, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications": [[287, 4, 1, "", "attributes"], [287, 4, 1, "", "key_type"], [287, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.Modifications": [[287, 4, 1, "", "attributes"], [287, 4, 1, "", "key_type"], [287, 4, 1, "", "value_type"]], "armi.reactor.blueprints.blockBlueprint": [[288, 2, 1, "", "BlockBlueprint"], [288, 2, 1, "", "BlockKeyedList"], [288, 2, 1, "", "BlockList"]], "armi.reactor.blueprints.blockBlueprint.BlockBlueprint": [[288, 4, 1, "", "attributes"], [288, 3, 1, "", "construct"], [288, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockKeyedList": [[288, 4, 1, "", "attributes"], [288, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockList": [[288, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint": [[289, 2, 1, "", "ComponentBlueprint"], [289, 2, 1, "", "ComponentDimension"], [289, 2, 1, "", "ComponentGroup"], [289, 2, 1, "", "ComponentGroups"], [289, 2, 1, "", "ComponentKeyedList"], [289, 2, 1, "", "GroupedComponent"], [289, 1, 1, "", "expandElementals"], [289, 1, 1, "", "insertDepletableNuclideKeys"]], "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint": [[289, 4, 1, "", "attributes"], [289, 3, 1, "", "construct"], [289, 3, 1, "", "setCustomDensity"]], "armi.reactor.blueprints.componentBlueprint.ComponentDimension": [[289, 4, 1, "", "attributes"], [289, 3, 1, "", "from_yaml"], [289, 3, 1, "", "to_yaml"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroup": [[289, 4, 1, "", "attributes"], [289, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroups": [[289, 4, 1, "", "attributes"], [289, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList": [[289, 4, 1, "", "attributes"], [289, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.GroupedComponent": [[289, 4, 1, "", "attributes"]], "armi.reactor.blueprints.gridBlueprint": [[290, 2, 1, "", "GridBlueprint"], [290, 2, 1, "", "Grids"], [290, 2, 1, "", "Triplet"], [290, 1, 1, "", "saveToStream"]], "armi.reactor.blueprints.gridBlueprint.GridBlueprint": [[290, 4, 1, "", "attributes"], [290, 3, 1, "", "construct"], [290, 3, 1, "", "expandToFull"], [290, 3, 1, "", "getLocators"], [290, 3, 1, "", "getMultiLocator"], [290, 5, 1, "", "readFromLatticeMap"]], "armi.reactor.blueprints.gridBlueprint.Grids": [[290, 4, 1, "", "attributes"], [290, 4, 1, "", "item_type"]], "armi.reactor.blueprints.gridBlueprint.Triplet": [[290, 4, 1, "", "attributes"]], "armi.reactor.blueprints.isotopicOptions": [[291, 2, 1, "", "CustomIsotopic"], [291, 2, 1, "", "CustomIsotopics"], [291, 2, 1, "", "NuclideFlag"], [291, 2, 1, "", "NuclideFlags"], [291, 1, 1, "", "autoUpdateNuclideFlags"], [291, 1, 1, "", "eleExpandInfoBasedOnCodeENDF"], [291, 1, 1, "", "genDefaultNucFlags"], [291, 1, 1, "", "getAllNuclideBasesByLibrary"], [291, 1, 1, "", "getDefaultNuclideFlags"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopic": [[291, 3, 1, "", "apply"], [291, 4, 1, "", "attributes"], [291, 5, 1, "", "density"], [291, 3, 1, "", "from_yaml"], [291, 3, 1, "", "from_yaml_key_val"], [291, 4, 1, "", "key_type"], [291, 4, 1, "", "value_type"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopics": [[291, 3, 1, "", "apply"], [291, 4, 1, "", "attributes"], [291, 4, 1, "", "item_type"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlag": [[291, 4, 1, "", "attributes"], [291, 3, 1, "", "fileAsActiveOrInert"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlags": [[291, 4, 1, "", "attributes"], [291, 4, 1, "", "item_type"]], "armi.reactor.blueprints.reactorBlueprint": [[292, 2, 1, "", "SystemBlueprint"], [292, 2, 1, "", "Systems"], [292, 1, 1, "", "summarizeMaterialData"]], "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint": [[292, 4, 1, "", "attributes"], [292, 3, 1, "", "construct"]], "armi.reactor.blueprints.reactorBlueprint.Systems": [[292, 4, 1, "", "attributes"], [292, 4, 1, "", "item_type"]], "armi.reactor.blueprints.tests": [[294, 0, 0, "-", "test_assemblyBlueprints"], [295, 0, 0, "-", "test_blockBlueprints"], [296, 0, 0, "-", "test_blueprints"], [297, 0, 0, "-", "test_componentBlueprint"], [298, 0, 0, "-", "test_customIsotopics"], [299, 0, 0, "-", "test_gridBlueprints"], [300, 0, 0, "-", "test_materialModifications"], [301, 0, 0, "-", "test_reactorBlueprints"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints": [[294, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications": [[294, 3, 1, "", "loadCustomAssembly"], [294, 3, 1, "", "test_checkParamConsistency"], [294, 4, 1, "", "twoBlockInput_correct"], [294, 4, 1, "", "twoBlockInput_wrongHeights"], [294, 4, 1, "", "twoBlockInput_wrongMatMods"], [294, 4, 1, "", "twoBlockInput_wrongMeshPoints"], [294, 4, 1, "", "twoBlockInput_wrongXSTypes"]], "armi.reactor.blueprints.tests.test_blockBlueprints": [[295, 2, 1, "", "TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock": [[295, 3, 1, "", "test_blockLattice"], [295, 3, 1, "", "test_constructSpatialGrid"], [295, 3, 1, "", "test_densityConsistentWithComponentConstructor"], [295, 3, 1, "", "test_explicitFlags"], [295, 3, 1, "", "test_getLocatorsAtLatticePositions"], [295, 3, 1, "", "test_nonLatticeComponentHasRightMult"]], "armi.reactor.blueprints.tests.test_blueprints": [[296, 2, 1, "", "TestBlueprints"], [296, 2, 1, "", "TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints": [[296, 3, 1, "", "test_componentDimensions"], [296, 3, 1, "", "test_getAssemblyTypeBySpecifier"], [296, 3, 1, "", "test_nuclides"], [296, 3, 1, "", "test_roundTripCompleteBP"], [296, 3, 1, "", "test_specialIsotopicVectors"], [296, 3, 1, "", "test_traceNuclides"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema": [[296, 3, 1, "", "test_assemblyParameters"], [296, 3, 1, "", "test_cladding_invalid"], [296, 3, 1, "", "test_componentGroupInput"], [296, 3, 1, "", "test_components"], [296, 3, 1, "", "test_customIsotopics"], [296, 3, 1, "", "test_merge"], [296, 3, 1, "", "test_noDuplicateKeysInYamlBlueprints"], [296, 3, 1, "", "test_nuclideFlags"], [296, 3, 1, "", "test_nuclidesMc2v2"], [296, 3, 1, "", "test_nuclidesMc2v3"], [296, 3, 1, "", "test_topLevelComponentInput"], [296, 3, 1, "", "test_withoutBlocks"]], "armi.reactor.blueprints.tests.test_componentBlueprint": [[297, 2, 1, "", "TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint": [[297, 4, 1, "", "componentString"], [297, 3, 1, "", "test_autoDepletable"], [297, 3, 1, "", "test_componentInitializationAmericiumCustomIsotopics"], [297, 3, 1, "", "test_componentInitializationControlCustomIsotopics"], [297, 3, 1, "", "test_componentInitializationIncompleteBurnChain"], [297, 3, 1, "", "test_componentInitializationThoriumBurnCustomIsotopics"], [297, 3, 1, "", "test_componentInitializationThoriumNoBurnCustomIsotopics"]], "armi.reactor.blueprints.tests.test_customIsotopics": [[298, 2, 1, "", "TestCustomIsotopics"], [298, 2, 1, "", "TestCustomIsotopics_ErrorConditions"], [298, 2, 1, "", "TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics": [[298, 3, 1, "", "test_customDensityLogsAndErrors"], [298, 3, 1, "", "test_densitiesAppliedToNonCustomMaterials"], [298, 3, 1, "", "test_expandedNatural"], [298, 3, 1, "", "test_massFractionsAreApplied"], [298, 3, 1, "", "test_numberDensities"], [298, 3, 1, "", "test_numberDensitiesAnchor"], [298, 3, 1, "", "test_numberFractions"], [298, 3, 1, "", "test_unmodified"], [298, 3, 1, "", "test_unrepresentedAreOnlyNatural"], [298, 4, 1, "", "yamlBadBlocks"], [298, 4, 1, "", "yamlGoodBlocks"], [298, 4, 1, "", "yamlPreamble"], [298, 4, 1, "", "yamlString"], [298, 4, 1, "", "yamlStringWithError"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions": [[298, 3, 1, "", "test_densityMustBePositive"], [298, 3, 1, "", "test_nonConformantElementName"], [298, 3, 1, "", "test_numberDensitiesCannotSpecifyDensity"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion": [[298, 3, 1, "", "test_expandedNatural"], [298, 4, 1, "", "yamlString"]], "armi.reactor.blueprints.tests.test_gridBlueprints": [[299, 2, 1, "", "TestGridBPRoundTrip"], [299, 2, 1, "", "TestGridBlueprintsSection"], [299, 2, 1, "", "TestRZTGridBlueprint"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip": [[299, 3, 1, "", "test_contents"], [299, 3, 1, "", "test_roundTrip"], [299, 3, 1, "", "test_tinyMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection": [[299, 3, 1, "", "test_simpleRead"], [299, 3, 1, "", "test_simpleReadLatticeMap"], [299, 3, 1, "", "test_simpleReadNoLatticeMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint": [[299, 3, 1, "", "test_construct"], [299, 3, 1, "", "test_geomFile"]], "armi.reactor.blueprints.tests.test_materialModifications": [[300, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications": [[300, 4, 1, "", "b4cInput"], [300, 3, 1, "", "loadB4CAssembly"], [300, 3, 1, "", "loadUZrAssembly"], [300, 3, 1, "", "test_bothU235ZrWtFracModification"], [300, 3, 1, "", "test_checkByComponentMaterialInput"], [300, 3, 1, "", "test_filterMaterialInput"], [300, 3, 1, "", "test_invalidComponentModification"], [300, 3, 1, "", "test_invalidMatModName"], [300, 3, 1, "", "test_matModsUpTheMRO"], [300, 3, 1, "", "test_materialModificationLength"], [300, 3, 1, "", "test_noMaterialModifications"], [300, 3, 1, "", "test_theoreticalDensity"], [300, 3, 1, "", "test_u235_wt_frac_byComponent_modification1"], [300, 3, 1, "", "test_u235_wt_frac_byComponent_modification2"], [300, 3, 1, "", "test_u235_wt_frac_modification"], [300, 3, 1, "", "test_zrWtFracModification"], [300, 4, 1, "", "uZrInput"]], "armi.reactor.blueprints.tests.test_reactorBlueprints": [[301, 2, 1, "", "TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints": [[301, 3, 1, "", "test_construct"], [301, 3, 1, "", "test_excoreStructure"], [301, 3, 1, "", "test_materialDataSummary"], [301, 3, 1, "", "test_simpleRead"], [301, 3, 1, "", "test_spentFuelPool"]], "armi.reactor.components": [[302, 2, 1, "", "DerivedShape"], [302, 2, 1, "", "NullComponent"], [302, 2, 1, "", "PositiveOrNegativeVolumeComponent"], [302, 2, 1, "", "UnshapedComponent"], [302, 2, 1, "", "UnshapedVolumetricComponent"], [302, 2, 1, "", "ZeroMassComponent"], [303, 0, 0, "-", "basicShapes"], [304, 0, 0, "-", "complexShapes"], [305, 0, 0, "-", "component"], [306, 0, 0, "-", "componentParameters"], [302, 1, 1, "", "factory"], [307, 0, 0, "-", "volumetricShapes"]], "armi.reactor.components.DerivedShape": [[302, 4, 1, "", "DIMENSION_NAMES"], [302, 4, 1, "", "INIT_SIGNATURE"], [302, 3, 1, "", "computeVolume"], [302, 3, 1, "", "getBoundingCircleOuterDiameter"], [302, 3, 1, "", "getComponentArea"], [302, 3, 1, "", "getMaxVolume"], [302, 3, 1, "", "getVolume"], [302, 4, 1, "", "material"], [302, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.NullComponent": [[302, 4, 1, "", "DIMENSION_NAMES"], [302, 4, 1, "", "INIT_SIGNATURE"], [302, 3, 1, "", "getBoundingCircleOuterDiameter"], [302, 3, 1, "", "getDimension"], [302, 4, 1, "", "material"], [302, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.PositiveOrNegativeVolumeComponent": [[302, 4, 1, "", "DIMENSION_NAMES"], [302, 4, 1, "", "INIT_SIGNATURE"], [302, 4, 1, "", "material"], [302, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedComponent": [[302, 4, 1, "", "DIMENSION_NAMES"], [302, 4, 1, "", "INIT_SIGNATURE"], [302, 3, 1, "", "fromComponent"], [302, 3, 1, "", "getBoundingCircleOuterDiameter"], [302, 3, 1, "", "getComponentArea"], [302, 4, 1, "", "material"], [302, 4, 1, "", "pDefs"], [302, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedVolumetricComponent": [[302, 4, 1, "", "DIMENSION_NAMES"], [302, 4, 1, "", "INIT_SIGNATURE"], [302, 3, 1, "", "getComponentArea"], [302, 3, 1, "", "getComponentVolume"], [302, 4, 1, "", "is3D"], [302, 4, 1, "", "material"], [302, 4, 1, "", "paramCollectionType"], [302, 3, 1, "", "setVolume"]], "armi.reactor.components.ZeroMassComponent": [[302, 4, 1, "", "DIMENSION_NAMES"], [302, 4, 1, "", "INIT_SIGNATURE"], [302, 3, 1, "", "getNumberDensity"], [302, 4, 1, "", "material"], [302, 4, 1, "", "paramCollectionType"], [302, 3, 1, "", "setNumberDensity"]], "armi.reactor.components.basicShapes": [[303, 2, 1, "", "Circle"], [303, 2, 1, "", "Hexagon"], [303, 2, 1, "", "Rectangle"], [303, 2, 1, "", "SolidRectangle"], [303, 2, 1, "", "Square"], [303, 2, 1, "", "Triangle"]], "armi.reactor.components.basicShapes.Circle": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [303, 3, 1, "", "getBoundingCircleOuterDiameter"], [303, 3, 1, "", "getCircleInnerDiameter"], [303, 3, 1, "", "getComponentArea"], [303, 4, 1, "", "is3D"], [303, 3, 1, "", "isEncapsulatedBy"], [303, 4, 1, "", "material"], [303, 4, 1, "", "pDefs"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Hexagon": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [303, 3, 1, "", "getBoundingCircleOuterDiameter"], [303, 3, 1, "", "getCircleInnerDiameter"], [303, 3, 1, "", "getComponentArea"], [303, 3, 1, "", "getPerimeter"], [303, 3, 1, "", "getPitchData"], [303, 4, 1, "", "is3D"], [303, 4, 1, "", "material"], [303, 4, 1, "", "pDefs"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Rectangle": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [303, 3, 1, "", "getBoundingCircleOuterDiameter"], [303, 3, 1, "", "getCircleInnerDiameter"], [303, 3, 1, "", "getComponentArea"], [303, 3, 1, "", "getPitchData"], [303, 4, 1, "", "is3D"], [303, 3, 1, "", "isLatticeComponent"], [303, 4, 1, "", "material"], [303, 4, 1, "", "pDefs"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.SolidRectangle": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [303, 3, 1, "", "getComponentArea"], [303, 4, 1, "", "is3D"], [303, 4, 1, "", "material"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Square": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 3, 1, "", "getBoundingCircleOuterDiameter"], [303, 3, 1, "", "getCircleInnerDiameter"], [303, 3, 1, "", "getComponentArea"], [303, 3, 1, "", "getPitchData"], [303, 4, 1, "", "is3D"], [303, 4, 1, "", "material"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Triangle": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [303, 3, 1, "", "getComponentArea"], [303, 4, 1, "", "is3D"], [303, 4, 1, "", "material"], [303, 4, 1, "", "pDefs"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes": [[304, 2, 1, "", "Helix"], [304, 2, 1, "", "HexHoledCircle"], [304, 2, 1, "", "HoledHexagon"], [304, 2, 1, "", "HoledRectangle"], [304, 2, 1, "", "HoledSquare"]], "armi.reactor.components.complexShapes.Helix": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getBoundingCircleOuterDiameter"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "is3D"], [304, 4, 1, "", "material"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HexHoledCircle": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "material"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledHexagon": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "material"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledRectangle": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "material"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledSquare": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "material"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.component": [[305, 2, 1, "", "Component"], [305, 2, 1, "", "ComponentType"], [305, 2, 1, "", "ShapedComponent"], [305, 1, 1, "", "componentTypeIsValid"]], "armi.reactor.components.component.Component": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [305, 3, 1, "", "adjustDensityForHeightExpansion"], [305, 3, 1, "", "adjustMassEnrichment"], [305, 3, 1, "", "applyMaterialMassFracsToNumberDensities"], [305, 3, 1, "", "backUp"], [305, 3, 1, "", "clearCache"], [305, 3, 1, "", "clearLinkedCache"], [305, 3, 1, "", "computeVolume"], [305, 3, 1, "", "containsSolidMaterial"], [305, 3, 1, "", "containsVoidMaterial"], [305, 3, 1, "", "density"], [305, 3, 1, "", "dimensionIsLinked"], [305, 3, 1, "", "finalizeLoadingFromDB"], [305, 5, 1, "", "gasPorosity"], [305, 3, 1, "", "getArea"], [305, 3, 1, "", "getBoundingCircleOuterDiameter"], [305, 3, 1, "", "getCircleInnerDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 3, 1, "", "getComponentVolume"], [305, 3, 1, "", "getDimension"], [305, 3, 1, "", "getDimensionNamesLinkedTo"], [305, 3, 1, "", "getEnrichment"], [305, 3, 1, "", "getFuelMass"], [305, 3, 1, "", "getHeightFactor"], [305, 3, 1, "", "getIntegratedMgFlux"], [305, 3, 1, "", "getLinkedComponents"], [305, 3, 1, "", "getLumpedFissionProductCollection"], [305, 3, 1, "", "getMass"], [305, 3, 1, "", "getMassEnrichment"], [305, 3, 1, "", "getMicroSuffix"], [305, 3, 1, "", "getNuclideNumberDensities"], [305, 3, 1, "", "getNuclides"], [305, 3, 1, "", "getNumberDensity"], [305, 3, 1, "", "getPitchData"], [305, 3, 1, "", "getProperties"], [305, 3, 1, "", "getThermalExpansionFactor"], [305, 3, 1, "", "getVolume"], [305, 4, 1, "", "is3D"], [305, 3, 1, "", "iterComponents"], [305, 5, 1, "", "liquidPorosity"], [305, 4, 1, "", "material"], [305, 3, 1, "", "mergeNuclidesInto"], [305, 4, 1, "", "pDefs"], [305, 4, 1, "", "paramCollectionType"], [305, 3, 1, "", "printContents"], [305, 3, 1, "", "resolveLinkedDims"], [305, 3, 1, "", "restoreBackup"], [305, 3, 1, "", "setArea"], [305, 3, 1, "", "setDimension"], [305, 3, 1, "", "setDimensionReport"], [305, 3, 1, "", "setLink"], [305, 3, 1, "", "setLumpedFissionProducts"], [305, 3, 1, "", "setName"], [305, 3, 1, "", "setNumberDensities"], [305, 3, 1, "", "setNumberDensity"], [305, 3, 1, "", "setProperties"], [305, 3, 1, "", "setTemperature"], [305, 3, 1, "", "setVolume"], [305, 5, 1, "", "temperatureInC"], [305, 5, 1, "", "temperatureInK"], [305, 3, 1, "", "updateDims"], [305, 3, 1, "", "updateNumberDensities"]], "armi.reactor.components.component.ComponentType": [[305, 4, 1, "", "NON_DIMENSION_NAMES"], [305, 4, 1, "", "TYPES"]], "armi.reactor.components.component.ShapedComponent": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "material"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.componentParameters": [[306, 1, 1, "", "getCircleParameterDefinitions"], [306, 1, 1, "", "getComponentParameterDefinitions"], [306, 1, 1, "", "getCubeParameterDefinitions"], [306, 1, 1, "", "getHelixParameterDefinitions"], [306, 1, 1, "", "getHexHoledCircleParameterDefinitions"], [306, 1, 1, "", "getHexagonParameterDefinitions"], [306, 1, 1, "", "getHoledHexagonParameterDefinitions"], [306, 1, 1, "", "getHoledRectangleParameterDefinitions"], [306, 1, 1, "", "getRadialSegmentParameterDefinitions"], [306, 1, 1, "", "getRectangleParameterDefinitions"], [306, 1, 1, "", "getTriangleParameterDefinitions"], [306, 1, 1, "", "getUnshapedParameterDefinitions"]], "armi.reactor.components.volumetricShapes": [[307, 2, 1, "", "Cube"], [307, 2, 1, "", "DifferentialRadialSegment"], [307, 2, 1, "", "RadialSegment"], [307, 2, 1, "", "Sphere"]], "armi.reactor.components.volumetricShapes.Cube": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getComponentArea"], [307, 3, 1, "", "getComponentVolume"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "material"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.DifferentialRadialSegment": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getComponentArea"], [307, 3, 1, "", "getComponentVolume"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "material"], [307, 4, 1, "", "paramCollectionType"], [307, 3, 1, "", "updateDims"]], "armi.reactor.components.volumetricShapes.RadialSegment": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getBoundingCircleOuterDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 3, 1, "", "getComponentVolume"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "material"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.Sphere": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getBoundingCircleOuterDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 3, 1, "", "getComponentVolume"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "material"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.composites": [[308, 2, 1, "", "ArmiObject"], [308, 2, 1, "", "Composite"], [308, 2, 1, "", "CompositeModelType"], [308, 2, 1, "", "FlagSerializer"], [308, 2, 1, "", "StateRetainer"], [308, 1, 1, "", "gatherMaterialsByVolume"], [308, 1, 1, "", "getDominantMaterial"], [308, 1, 1, "", "getReactionRateDict"]], "armi.reactor.composites.ArmiObject": [[308, 3, 1, "", "addMass"], [308, 3, 1, "", "addMasses"], [308, 3, 1, "", "adjustMassEnrichment"], [308, 3, 1, "", "adjustMassFrac"], [308, 3, 1, "", "calcAvgParam"], [308, 3, 1, "", "calcTotalParam"], [308, 3, 1, "", "changeNDensByFactor"], [308, 3, 1, "", "clearCache"], [308, 3, 1, "", "clearNumberDensities"], [308, 3, 1, "", "constituentReport"], [308, 3, 1, "", "containsAtLeastOneChildWithFlags"], [308, 3, 1, "", "containsHeavyMetal"], [308, 3, 1, "", "containsOnlyChildrenWithFlags"], [308, 3, 1, "", "copyParamsFrom"], [308, 3, 1, "", "copyParamsToChildren"], [308, 3, 1, "", "density"], [308, 3, 1, "", "doChildrenHaveFlags"], [308, 3, 1, "", "duplicate"], [308, 3, 1, "", "expandAllElementalsToIsotopics"], [308, 3, 1, "", "expandElementalToIsotopics"], [308, 3, 1, "", "getAncestor"], [308, 3, 1, "", "getAncestorAndDistance"], [308, 3, 1, "", "getAncestorWithFlags"], [308, 3, 1, "", "getArea"], [308, 3, 1, "", "getAtomicWeight"], [308, 3, 1, "", "getAverageTempInC"], [308, 3, 1, "", "getBoundingIndices"], [308, 3, 1, "", "getChildParamValues"], [308, 3, 1, "", "getChildren"], [308, 3, 1, "", "getChildrenWithFlags"], [308, 3, 1, "", "getChildrenWithNuclides"], [308, 3, 1, "", "getComponent"], [308, 3, 1, "", "getComponentByName"], [308, 3, 1, "", "getComponentNames"], [308, 3, 1, "", "getComponents"], [308, 3, 1, "", "getComponentsOfMaterial"], [308, 3, 1, "", "getComponentsOfShape"], [308, 3, 1, "", "getDominantMaterial"], [308, 3, 1, "", "getFPMass"], [308, 3, 1, "", "getFissileMass"], [308, 3, 1, "", "getFissileMassEnrich"], [308, 3, 1, "", "getFuelMass"], [308, 3, 1, "", "getHMDens"], [308, 3, 1, "", "getHMMass"], [308, 3, 1, "", "getHMMoles"], [308, 3, 1, "", "getIntegratedMgFlux"], [308, 3, 1, "", "getLumpedFissionProductCollection"], [308, 3, 1, "", "getMass"], [308, 3, 1, "", "getMassFrac"], [308, 3, 1, "", "getMassFracs"], [308, 3, 1, "", "getMasses"], [308, 3, 1, "", "getMaxArea"], [308, 3, 1, "", "getMaxParam"], [308, 3, 1, "", "getMgFlux"], [308, 3, 1, "", "getMicroSuffix"], [308, 3, 1, "", "getMinParam"], [308, 3, 1, "", "getName"], [308, 3, 1, "", "getNuclideNumberDensities"], [308, 3, 1, "", "getNuclides"], [308, 3, 1, "", "getNumComponents"], [308, 3, 1, "", "getNumberDensities"], [308, 3, 1, "", "getNumberDensity"], [308, 3, 1, "", "getNumberOfAtoms"], [308, 3, 1, "", "getParamNames"], [308, 3, 1, "", "getParameterCollection"], [308, 3, 1, "", "getSymmetryFactor"], [308, 3, 1, "", "getTotalNDens"], [308, 3, 1, "", "getType"], [308, 3, 1, "", "getUraniumNumEnrich"], [308, 3, 1, "", "getVolume"], [308, 3, 1, "", "getVolumeFraction"], [308, 3, 1, "", "getVolumeFractions"], [308, 3, 1, "", "hasComponents"], [308, 3, 1, "", "hasFlags"], [308, 3, 1, "", "isFuel"], [308, 3, 1, "", "iterComponents"], [308, 3, 1, "", "nameContains"], [308, 4, 1, "", "pDefs"], [308, 4, 1, "", "paramCollectionType"], [308, 3, 1, "", "removeMass"], [308, 3, 1, "", "resolveLinkedDims"], [308, 3, 1, "", "setChildrenLumpedFissionProducts"], [308, 3, 1, "", "setComponentDimensionsReport"], [308, 3, 1, "", "setLumpedFissionProducts"], [308, 3, 1, "", "setMass"], [308, 3, 1, "", "setMassFrac"], [308, 3, 1, "", "setMassFracs"], [308, 3, 1, "", "setMasses"], [308, 3, 1, "", "setName"], [308, 3, 1, "", "setNumberDensities"], [308, 3, 1, "", "setNumberDensity"], [308, 3, 1, "", "setType"], [308, 3, 1, "", "updateNumberDensities"], [308, 3, 1, "", "updateParamsFrom"]], "armi.reactor.composites.Composite": [[308, 3, 1, "", "add"], [308, 3, 1, "", "append"], [308, 3, 1, "", "backUp"], [308, 3, 1, "", "extend"], [308, 3, 1, "", "getBoundingCircleOuterDiameter"], [308, 3, 1, "", "getChildren"], [308, 3, 1, "", "getChildrenOfType"], [308, 3, 1, "", "getChildrenWithFlags"], [308, 3, 1, "", "getComponents"], [308, 3, 1, "", "getIntegratedMgFlux"], [308, 3, 1, "", "getLumpedFissionProductCollection"], [308, 3, 1, "", "getLumpedFissionProductsIfNecessary"], [308, 3, 1, "", "getReactionRates"], [308, 3, 1, "", "index"], [308, 3, 1, "", "insert"], [308, 3, 1, "", "iterComponents"], [308, 3, 1, "", "moveTo"], [308, 4, 1, "", "paramCollectionType"], [308, 3, 1, "", "printContents"], [308, 3, 1, "", "remove"], [308, 3, 1, "", "removeAll"], [308, 3, 1, "", "requiresLumpedFissionProducts"], [308, 3, 1, "", "restoreBackup"], [308, 3, 1, "", "retainState"], [308, 3, 1, "", "setChildren"], [308, 3, 1, "", "sort"], [308, 3, 1, "", "syncMpiState"]], "armi.reactor.composites.CompositeModelType": [[308, 4, 1, "", "TYPES"]], "armi.reactor.composites.FlagSerializer": [[308, 3, 1, "", "pack"], [308, 3, 1, "", "unpack"], [308, 4, 1, "", "version"]], "armi.reactor.converters": [[310, 0, 0, "-", "axialExpansionChanger"], [314, 0, 0, "-", "blockConverters"], [315, 0, 0, "-", "geometryConverters"], [316, 0, 0, "-", "meshConverters"], [317, 0, 0, "-", "parameterSweeps"], [319, 0, 0, "-", "pinTypeBlockConverters"], [320, 0, 0, "-", "tests"], [327, 0, 0, "-", "uniformMesh"]], "armi.reactor.converters.axialExpansionChanger": [[311, 0, 0, "-", "assemblyAxialLinkage"], [312, 0, 0, "-", "axialExpansionChanger"], [313, 0, 0, "-", "expansionData"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage": [[311, 2, 1, "", "AssemblyAxialLinkage"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger": [[312, 2, 1, "", "AxialExpansionChanger"], [312, 1, 1, "", "getDefaultReferenceAssem"], [312, 1, 1, "", "makeAssemsAbleToSnapToUniformMesh"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger": [[312, 3, 1, "", "applyColdHeightMassIncrease"], [312, 3, 1, "", "axiallyExpandAssembly"], [312, 3, 1, "", "expandColdDimsToHot"], [312, 3, 1, "", "manageCoreMesh"], [312, 3, 1, "", "performPrescribedAxialExpansion"], [312, 3, 1, "", "performThermalAxialExpansion"], [312, 3, 1, "", "reset"], [312, 3, 1, "", "setAssembly"]], "armi.reactor.converters.axialExpansionChanger.expansionData": [[313, 2, 1, "", "ExpansionData"], [313, 1, 1, "", "getSolidComponents"]], "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData": [[313, 3, 1, "", "computeThermalExpansionFactors"], [313, 3, 1, "", "determineTargetComponent"], [313, 3, 1, "", "getExpansionFactor"], [313, 3, 1, "", "isTargetComponent"], [313, 3, 1, "", "setExpansionFactors"], [313, 3, 1, "", "updateComponentTemp"], [313, 3, 1, "", "updateComponentTempsBy1DTempField"]], "armi.reactor.converters.blockConverters": [[314, 2, 1, "", "BlockAvgToCylConverter"], [314, 2, 1, "", "BlockConverter"], [314, 2, 1, "", "ComponentMerger"], [314, 2, 1, "", "HexComponentsToCylConverter"], [314, 2, 1, "", "MultipleComponentMerger"], [314, 1, 1, "", "getOuterDiamFromIDAndArea"], [314, 1, 1, "", "radiiFromHexPitches"], [314, 1, 1, "", "radiiFromHexSides"], [314, 1, 1, "", "radiiFromRingOfRods"]], "armi.reactor.converters.blockConverters.BlockAvgToCylConverter": [[314, 3, 1, "", "convert"], [314, 3, 1, "", "plotConvertedBlock"]], "armi.reactor.converters.blockConverters.BlockConverter": [[314, 3, 1, "", "convert"], [314, 3, 1, "", "dissolveComponentIntoComponent"], [314, 3, 1, "", "restablishLinks"]], "armi.reactor.converters.blockConverters.ComponentMerger": [[314, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.HexComponentsToCylConverter": [[314, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.MultipleComponentMerger": [[314, 3, 1, "", "convert"]], "armi.reactor.converters.geometryConverters": [[315, 2, 1, "", "EdgeAssemblyChanger"], [315, 2, 1, "", "FuelAssemNumModifier"], [315, 2, 1, "", "GeometryChanger"], [315, 2, 1, "", "GeometryConverter"], [315, 2, 1, "", "HexToRZConverter"], [315, 2, 1, "", "HexToRZThetaConverter"], [315, 2, 1, "", "ThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger": [[315, 3, 1, "", "addEdgeAssemblies"], [315, 3, 1, "", "removeEdgeAssemblies"], [315, 3, 1, "", "scaleParamsRelatedToSymmetry"]], "armi.reactor.converters.geometryConverters.FuelAssemNumModifier": [[315, 3, 1, "", "addRing"], [315, 3, 1, "", "convert"], [315, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.GeometryChanger": [[315, 3, 1, "", "convert"], [315, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.HexToRZThetaConverter": [[315, 3, 1, "", "convert"], [315, 3, 1, "", "createHomogenizedRZTBlock"], [315, 3, 1, "", "plotConvertedReactor"], [315, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger": [[315, 4, 1, "", "EXPECTED_INPUT_SYMMETRY"], [315, 3, 1, "", "convert"], [315, 3, 1, "", "restorePreviousGeometry"]], "armi.reactor.converters.meshConverters": [[316, 2, 1, "", "MeshConverter"], [316, 2, 1, "", "RZThetaReactorMeshConverter"], [316, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialBins"], [316, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"], [316, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialFlags"], [316, 1, 1, "", "checkLastValueInList"], [316, 1, 1, "", "checkListBounds"], [316, 1, 1, "", "generateBins"]], "armi.reactor.converters.meshConverters.MeshConverter": [[316, 3, 1, "", "generateMesh"], [316, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter": [[316, 3, 1, "", "generateMesh"], [316, 3, 1, "", "setAxialMesh"], [316, 3, 1, "", "setRingsToConvert"], [316, 3, 1, "", "setThetaMesh"], [316, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.parameterSweeps": [[318, 0, 0, "-", "generalParameterSweepConverters"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters": [[318, 2, 1, "", "CustomModifier"], [318, 2, 1, "", "NeutronicConvergenceModifier"], [318, 2, 1, "", "ParameterSweepConverter"], [318, 2, 1, "", "SettingsModifier"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier": [[318, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier": [[318, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter": [[318, 4, 1, "", "PRIORITY"], [318, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier": [[318, 3, 1, "", "convert"]], "armi.reactor.converters.pinTypeBlockConverters": [[319, 1, 1, "", "adjustCladThicknessByID"], [319, 1, 1, "", "adjustCladThicknessByOD"], [319, 1, 1, "", "adjustSmearDensity"]], "armi.reactor.converters.tests": [[321, 0, 0, "-", "test_axialExpansionChanger"], [322, 0, 0, "-", "test_blockConverter"], [323, 0, 0, "-", "test_geometryConverters"], [324, 0, 0, "-", "test_meshConverters"], [325, 0, 0, "-", "test_pinTypeBlockConverters"], [326, 0, 0, "-", "test_uniformMesh"]], "armi.reactor.converters.tests.test_axialExpansionChanger": [[321, 2, 1, "", "AxialExpansionTestBase"], [321, 2, 1, "", "FakeMat"], [321, 2, 1, "", "FakeMatException"], [321, 2, 1, "", "Temperature"], [321, 2, 1, "", "TestAxialExpansionHeight"], [321, 2, 1, "", "TestConservation"], [321, 2, 1, "", "TestDetermineTargetComponent"], [321, 2, 1, "", "TestExceptions"], [321, 2, 1, "", "TestGetSolidComponents"], [321, 2, 1, "", "TestInputHeightsConsideredHot"], [321, 2, 1, "", "TestLinkage"], [321, 2, 1, "", "TestManageCoreMesh"], [321, 1, 1, "", "buildTestAssemblyWithFakeMaterial"], [321, 1, 1, "", "checkColdBlockHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase": [[321, 4, 1, "", "Steel_Component_Lst"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat": [[321, 3, 1, "", "linearExpansionPercent"], [321, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException": [[321, 3, 1, "", "linearExpansionPercent"], [321, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight": [[321, 3, 1, "", "test_AssemblyAxialExpansionHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation": [[321, 3, 1, "", "complexConservationTest"], [321, 3, 1, "", "expandAssemForMassConservationTest"], [321, 3, 1, "", "test_computeThermalExpansionFactors"], [321, 3, 1, "", "test_noMovementACLP"], [321, 3, 1, "", "test_prescribedExpansionContractionConservation"], [321, 3, 1, "", "test_reset"], [321, 3, 1, "", "test_targetComponentMassConservation"], [321, 3, 1, "", "test_thermalExpansionContractionConservation_complex"], [321, 3, 1, "", "test_thermalExpansionContractionConservation_simple"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent": [[321, 3, 1, "", "test_determineTargetComponent"], [321, 3, 1, "", "test_determineTargetComponentBlockWithMultipleFlags"], [321, 3, 1, "", "test_manuallySetTargetComponent"], [321, 3, 1, "", "test_specifyTargetComponent_NotFound"], [321, 3, 1, "", "test_specifyTargetComponent_singleSolid"], [321, 3, 1, "", "test_specifyTargetComponet_MultipleFound"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions": [[321, 3, 1, "", "test_AssemblyAxialExpansionException"], [321, 3, 1, "", "test_determineLinked"], [321, 3, 1, "", "test_getLinkedComponents"], [321, 3, 1, "", "test_isFuelLocked"], [321, 3, 1, "", "test_isTopDummyBlockPresent"], [321, 3, 1, "", "test_setExpansionFactors"], [321, 3, 1, "", "test_updateComponentTempsBy1DTempFieldRuntimeError"], [321, 3, 1, "", "test_updateComponentTempsBy1DTempFieldValueError"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents": [[321, 3, 1, "", "test_getSolidComponents"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot": [[321, 3, 1, "", "checkColdHeightBlockMass"], [321, 3, 1, "", "test_coldAssemblyExpansion"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage": [[321, 3, 1, "", "runTest"], [321, 3, 1, "", "test_AnnularHexOverlappingThickAnnularHex"], [321, 3, 1, "", "test_annularPinNotOverlappingWithAnnulus"], [321, 3, 1, "", "test_annularPinOverlappingWithAnnuls"], [321, 3, 1, "", "test_differentMultNotOverlapping"], [321, 3, 1, "", "test_liquids"], [321, 3, 1, "", "test_overlappingSolidPins"], [321, 3, 1, "", "test_solidPinNotOverlappingAnnulus"], [321, 3, 1, "", "test_solidPinOverlappingWithAnnulus"], [321, 3, 1, "", "test_thinAnnularPinOverlappingWithThickAnnulus"], [321, 3, 1, "", "test_unshapedComponentAndCircle"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh": [[321, 3, 1, "", "test_manageCoreMesh"]], "armi.reactor.converters.tests.test_blockConverter": [[322, 2, 1, "", "TestBlockConverter"], [322, 2, 1, "", "TestToCircles"], [322, 1, 1, "", "buildControlBlockWithLinkedNegativeAreaComponent"], [322, 1, 1, "", "buildSimpleFuelBlockNegativeArea"]], "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter": [[322, 3, 1, "", "test_build_NthRing"], [322, 3, 1, "", "test_convert"], [322, 3, 1, "", "test_convertCartesianLatticeWithFuelDriver"], [322, 3, 1, "", "test_convertHexWithFuelDriver"], [322, 3, 1, "", "test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"], [322, 3, 1, "", "test_dissolveIntoNegativeArea"], [322, 3, 1, "", "test_dissolveIntoZeroArea"], [322, 3, 1, "", "test_dissolveLinerIntoClad"], [322, 3, 1, "", "test_dissolveMultiple"], [322, 3, 1, "", "test_dissolveNegativeArea"], [322, 3, 1, "", "test_dissolveWireIntoCoolant"], [322, 3, 1, "", "test_dissolveZeroArea"]], "armi.reactor.converters.tests.test_blockConverter.TestToCircles": [[322, 3, 1, "", "test_fromHex"], [322, 3, 1, "", "test_fromRingOfRods"]], "armi.reactor.converters.tests.test_geometryConverters": [[323, 2, 1, "", "TestEdgeAssemblyChanger"], [323, 2, 1, "", "TestGeometryConverters"], [323, 2, 1, "", "TestHexToRZConverter"], [323, 2, 1, "", "TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger": [[323, 3, 1, "", "test_edgeAssemblies"]], "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters": [[323, 3, 1, "", "test_addRing"], [323, 3, 1, "", "test_getAssembliesInSector"], [323, 3, 1, "", "test_setNumberOfFuelAssems"]], "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter": [[323, 3, 1, "", "test_convert"], [323, 3, 1, "", "test_createHomogenizedRZTBlock"]], "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger": [[323, 3, 1, "", "test_growToFullCoreFromThirdCore"], [323, 3, 1, "", "test_initNewFullReactor"], [323, 3, 1, "", "test_skipGrowToFullCoreWhenAlreadyFullCore"]], "armi.reactor.converters.tests.test_meshConverters": [[324, 2, 1, "", "TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter": [[324, 3, 1, "", "test_meshByRingCompositionAxialBinsLargeCore"], [324, 3, 1, "", "test_meshByRingCompositionAxialBinsSmallCore"], [324, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesLargeCore"], [324, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesSmallCore"], [324, 3, 1, "", "test_meshByRingCompositionAxialFlagsLargeCore"], [324, 3, 1, "", "test_meshByRingCompositionAxialFlagsSmallCore"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters": [[325, 2, 1, "", "MassConservationTests"], [325, 2, 1, "", "TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests": [[325, 3, 1, "", "test_adjustSmearDensity"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters": [[325, 3, 1, "", "test_adjustCladThicknessByID"], [325, 3, 1, "", "test_adjustCladThicknessByOD"]], "armi.reactor.converters.tests.test_uniformMesh": [[326, 2, 1, "", "DummyFluxOptions"], [326, 2, 1, "", "TestAssemblyUniformMesh"], [326, 2, 1, "", "TestConverterFactory"], [326, 2, 1, "", "TestGammaUniformMesh"], [326, 2, 1, "", "TestParamConversion"], [326, 2, 1, "", "TestUniformMesh"], [326, 2, 1, "", "TestUniformMeshComponents"], [326, 2, 1, "", "TestUniformMeshGenerator"], [326, 2, 1, "", "TestUniformMeshNonUniformAssemFlags"], [326, 1, 1, "", "applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh": [[326, 3, 1, "", "test_clearAssemblyState"], [326, 3, 1, "", "test_makeAssemUniformMeshParamMappingSameMesh"], [326, 3, 1, "", "test_makeAssemWithUniformMesh"], [326, 3, 1, "", "test_makeAssemWithUniformMeshSubmesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory": [[326, 3, 1, "", "test_converterFactory"]], "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh": [[326, 3, 1, "", "test_applyStateToOriginal"], [326, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion": [[326, 3, 1, "", "test_setStateFromOverlaps"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh": [[326, 3, 1, "", "test_applyStateToOriginal"], [326, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents": [[326, 3, 1, "", "test_blueprintCopy"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator": [[326, 3, 1, "", "test_computeAverageAxialMesh"], [326, 3, 1, "", "test_filterMesh"], [326, 3, 1, "", "test_filteredTopAndBottom"], [326, 3, 1, "", "test_generateCommonMesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags": [[326, 3, 1, "", "test_reactorConversion"]], "armi.reactor.converters.uniformMesh": [[327, 2, 1, "", "GammaUniformMeshConverter"], [327, 2, 1, "", "NeutronicsUniformMeshConverter"], [327, 2, 1, "", "ParamMapper"], [327, 2, 1, "", "UniformMeshGenerator"], [327, 2, 1, "", "UniformMeshGeometryConverter"], [327, 1, 1, "", "converterFactory"], [327, 1, 1, "", "setNumberDensitiesFromOverlaps"]], "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter": [[327, 4, 1, "", "blockParamMappingCategories"], [327, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter": [[327, 4, 1, "", "blockParamMappingCategories"], [327, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.ParamMapper": [[327, 3, 1, "", "paramGetter"], [327, 3, 1, "", "paramSetter"]], "armi.reactor.converters.uniformMesh.UniformMeshGenerator": [[327, 3, 1, "", "generateCommonMesh"]], "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter": [[327, 3, 1, "", "applyStateToOriginal"], [327, 4, 1, "", "blockParamMappingCategories"], [327, 3, 1, "", "clearStateOnAssemblies"], [327, 3, 1, "", "convert"], [327, 3, 1, "", "initNewReactor"], [327, 3, 1, "", "makeAssemWithUniformMesh"], [327, 3, 1, "", "plotConvertedReactor"], [327, 4, 1, "", "reactorParamMappingCategories"], [327, 3, 1, "", "reset"], [327, 3, 1, "", "setAssemblyStateFromOverlaps"], [327, 3, 1, "", "updateReactionRates"]], "armi.reactor.cores": [[328, 2, 1, "", "Core"]], "armi.reactor.cores.Core": [[328, 3, 1, "", "add"], [328, 3, 1, "", "addMoreNodes"], [328, 3, 1, "", "buildCircularRingDictionary"], [328, 3, 1, "", "buildManualZones"], [328, 3, 1, "", "calcBlockMaxes"], [328, 3, 1, "", "countBlocksWithFlags"], [328, 3, 1, "", "countFuelAxialBlocks"], [328, 3, 1, "", "createAssemblyOfType"], [328, 3, 1, "", "createFreshFeed"], [328, 3, 1, "", "findAllAxialMeshPoints"], [328, 3, 1, "", "findAllAziMeshPoints"], [328, 3, 1, "", "findAllMeshPoints"], [328, 3, 1, "", "findAllRadMeshPoints"], [328, 3, 1, "", "findAxialMeshIndexOf"], [328, 3, 1, "", "findNeighbors"], [328, 3, 1, "", "genAssembliesAddedThisCycle"], [328, 3, 1, "", "genBlocksByLocName"], [328, 5, 1, "", "geomType"], [328, 3, 1, "", "getAllXsSuffixes"], [328, 3, 1, "", "getAssemblies"], [328, 3, 1, "", "getAssembliesInCircularRing"], [328, 3, 1, "", "getAssembliesInRing"], [328, 3, 1, "", "getAssembliesInSquareOrHexRing"], [328, 3, 1, "", "getAssembliesOfType"], [328, 3, 1, "", "getAssembliesOnSymmetryLine"], [328, 3, 1, "", "getAssembly"], [328, 3, 1, "", "getAssemblyByName"], [328, 3, 1, "", "getAssemblyPitch"], [328, 3, 1, "", "getAssemblyWithAssemNum"], [328, 3, 1, "", "getAssemblyWithStringLocation"], [328, 3, 1, "", "getAvgTemp"], [328, 3, 1, "", "getBlockByName"], [328, 3, 1, "", "getBlocks"], [328, 3, 1, "", "getBlocksByIndices"], [328, 3, 1, "", "getCoreRadius"], [328, 3, 1, "", "getFirstAssembly"], [328, 3, 1, "", "getFirstBlock"], [328, 3, 1, "", "getFirstFuelBlockAxialNode"], [328, 3, 1, "", "getFluxVector"], [328, 3, 1, "", "getFuelBottomHeight"], [328, 3, 1, "", "getLocationContents"], [328, 3, 1, "", "getMaxAssembliesInHexRing"], [328, 3, 1, "", "getMaxBlockParam"], [328, 3, 1, "", "getMaxNumPins"], [328, 3, 1, "", "getMinimumPercentFluxInFuel"], [328, 3, 1, "", "getNozzleTypes"], [328, 3, 1, "", "getNuclideCategories"], [328, 3, 1, "", "getNumAssembliesWithAllRingsFilledOut"], [328, 3, 1, "", "getNumEnergyGroups"], [328, 3, 1, "", "getNumHexRings"], [328, 3, 1, "", "getNumRings"], [328, 3, 1, "", "getScalarEvolution"], [328, 3, 1, "", "getTotalBlockParam"], [328, 3, 1, "", "growToFullCore"], [328, 5, 1, "", "isFullCore"], [328, 5, 1, "", "lib"], [328, 3, 1, "", "locateAllAssemblies"], [328, 3, 1, "", "makeLocationLookup"], [328, 3, 1, "", "normalizeInternalBookeeping"], [328, 3, 1, "", "normalizeNames"], [328, 4, 1, "", "pDefs"], [328, 4, 1, "", "paramCollectionType"], [328, 5, 1, "", "powerMultiplier"], [328, 3, 1, "", "processLoading"], [328, 5, 1, "", "r"], [328, 5, 1, "", "refAssem"], [328, 3, 1, "", "regenAssemblyLists"], [328, 3, 1, "", "removeAssembliesInRing"], [328, 3, 1, "", "removeAssembly"], [328, 3, 1, "", "saveAllFlux"], [328, 3, 1, "", "setBlockMassParams"], [328, 3, 1, "", "setMoveList"], [328, 3, 1, "", "setOptionsFromCs"], [328, 3, 1, "", "setPitchUniform"], [328, 3, 1, "", "setPowerFromDensity"], [328, 3, 1, "", "setPowerIfNecessary"], [328, 3, 1, "", "sortAssemsByRing"], [328, 3, 1, "", "summarizeNuclideCategories"], [328, 3, 1, "", "summarizeReactorStats"], [328, 5, 1, "", "symmetry"], [328, 3, 1, "", "updateAxialMesh"]], "armi.reactor.excoreStructure": [[329, 2, 1, "", "ExcoreCollection"], [329, 2, 1, "", "ExcoreStructure"]], "armi.reactor.excoreStructure.ExcoreStructure": [[329, 3, 1, "", "add"], [329, 4, 1, "", "paramCollectionType"], [329, 5, 1, "", "r"]], "armi.reactor.flags": [[330, 2, 1, "", "Flags"], [330, 7, 1, "", "InvalidFlagsError"]], "armi.reactor.flags.Flags": [[330, 4, 1, "", "A"], [330, 4, 1, "", "ACLP"], [330, 4, 1, "", "ANNULAR"], [330, 4, 1, "", "AXIAL"], [330, 4, 1, "", "B"], [330, 4, 1, "", "BATCHMASSADDITION"], [330, 4, 1, "", "BLANKET"], [330, 4, 1, "", "BOND"], [330, 4, 1, "", "BOOSTER"], [330, 4, 1, "", "C"], [330, 4, 1, "", "CLAD"], [330, 4, 1, "", "CONTROL"], [330, 4, 1, "", "COOLANT"], [330, 4, 1, "", "CORE_BARREL"], [330, 4, 1, "", "D"], [330, 4, 1, "", "DEPLETABLE"], [330, 4, 1, "", "DRIVER"], [330, 4, 1, "", "DSPACERINSIDE"], [330, 4, 1, "", "DUCT"], [330, 4, 1, "", "DUMMY"], [330, 4, 1, "", "E"], [330, 4, 1, "", "FEED"], [330, 4, 1, "", "FISSION_CHAMBER"], [330, 4, 1, "", "FUEL"], [330, 4, 1, "", "GAP"], [330, 4, 1, "", "GRID_PLATE"], [330, 4, 1, "", "GUIDE_TUBE"], [330, 4, 1, "", "HANDLING_SOCKET"], [330, 4, 1, "", "HIGH"], [330, 4, 1, "", "IGNITER"], [330, 4, 1, "", "INLET_NOZZLE"], [330, 4, 1, "", "INNER"], [330, 4, 1, "", "INTERCOOLANT"], [330, 4, 1, "", "INTERDUCTCOOLANT"], [330, 4, 1, "", "LINER"], [330, 4, 1, "", "LOAD_PAD"], [330, 4, 1, "", "LOW"], [330, 4, 1, "", "LOWER"], [330, 4, 1, "", "MATERIAL"], [330, 4, 1, "", "MEDIUM"], [330, 4, 1, "", "MIDDLE"], [330, 4, 1, "", "MODERATOR"], [330, 4, 1, "", "MOVEABLE"], [330, 4, 1, "", "MOX"], [330, 4, 1, "", "OUTER"], [330, 4, 1, "", "PIN"], [330, 4, 1, "", "PLENUM"], [330, 4, 1, "", "POISON"], [330, 4, 1, "", "PRIMARY"], [330, 4, 1, "", "RADIAL"], [330, 4, 1, "", "REFLECTOR"], [330, 4, 1, "", "SECONDARY"], [330, 4, 1, "", "SHIELD"], [330, 4, 1, "", "SHIELD_BLOCK"], [330, 4, 1, "", "SHUTDOWN"], [330, 4, 1, "", "SKID"], [330, 4, 1, "", "SLUG"], [330, 4, 1, "", "STARTER"], [330, 4, 1, "", "STRUCTURE"], [330, 4, 1, "", "TARGET"], [330, 4, 1, "", "TERTIARY"], [330, 4, 1, "", "TEST"], [330, 4, 1, "", "ULTIMATE"], [330, 4, 1, "", "UPPER"], [330, 4, 1, "", "VOID"], [330, 4, 1, "", "WIRE"], [330, 3, 1, "", "fromString"], [330, 3, 1, "", "fromStringIgnoreErrors"], [330, 3, 1, "", "toString"]], "armi.reactor.geometry": [[331, 2, 1, "", "BoundaryType"], [331, 2, 1, "", "DomainType"], [331, 2, 1, "", "GeomType"], [331, 2, 1, "", "SymmetryType"], [331, 1, 1, "", "checkValidGeomSymmetryCombo"]], "armi.reactor.geometry.BoundaryType": [[331, 4, 1, "", "NO_SYMMETRY"], [331, 4, 1, "", "PERIODIC"], [331, 4, 1, "", "REFLECTIVE"], [331, 3, 1, "", "fromAny"], [331, 3, 1, "", "fromStr"], [331, 3, 1, "", "hasSymmetry"], [331, 5, 1, "", "label"]], "armi.reactor.geometry.DomainType": [[331, 4, 1, "", "EIGHTH_CORE"], [331, 4, 1, "", "FULL_CORE"], [331, 4, 1, "", "NULL"], [331, 4, 1, "", "QUARTER_CORE"], [331, 4, 1, "", "SIXTEENTH_CORE"], [331, 4, 1, "", "THIRD_CORE"], [331, 3, 1, "", "fromAny"], [331, 3, 1, "", "fromStr"], [331, 5, 1, "", "label"], [331, 3, 1, "", "symmetryFactor"]], "armi.reactor.geometry.GeomType": [[331, 4, 1, "", "CARTESIAN"], [331, 4, 1, "", "HEX"], [331, 4, 1, "", "RZ"], [331, 4, 1, "", "RZT"], [331, 3, 1, "", "fromAny"], [331, 3, 1, "", "fromStr"], [331, 5, 1, "", "label"]], "armi.reactor.geometry.SymmetryType": [[331, 4, 1, "", "VALID_SYMMETRY"], [331, 3, 1, "", "checkValidSymmetry"], [331, 3, 1, "", "createValidSymmetryStrings"], [331, 3, 1, "", "fromAny"], [331, 3, 1, "", "fromStr"], [331, 3, 1, "", "symmetryFactor"]], "armi.reactor.grids": [[333, 0, 0, "-", "axial"], [334, 0, 0, "-", "cartesian"], [335, 0, 0, "-", "constants"], [336, 0, 0, "-", "grid"], [337, 0, 0, "-", "hexagonal"], [338, 0, 0, "-", "locations"], [332, 1, 1, "", "locatorLabelToIndices"], [339, 0, 0, "-", "structuredGrid"], [340, 0, 0, "-", "thetarz"]], "armi.reactor.grids.axial": [[333, 2, 1, "", "AxialGrid"]], "armi.reactor.grids.axial.AxialGrid": [[333, 4, 1, "", "armiObject"], [333, 3, 1, "", "fromNCells"], [333, 3, 1, "", "getIndicesFromRingAndPos"], [333, 3, 1, "", "getMinimumRings"], [333, 3, 1, "", "getPositionsInRing"], [333, 3, 1, "", "getSymmetricEquivalents"], [333, 3, 1, "", "locatorInDomain"], [333, 3, 1, "", "overlapsWhichSymmetryLine"], [333, 5, 1, "", "pitch"]], "armi.reactor.grids.cartesian": [[334, 2, 1, "", "CartesianGrid"]], "armi.reactor.grids.cartesian.CartesianGrid": [[334, 4, 1, "", "armiObject"], [334, 3, 1, "", "changePitch"], [334, 3, 1, "", "fromRectangle"], [334, 3, 1, "", "getIndicesFromRingAndPos"], [334, 3, 1, "", "getMinimumRings"], [334, 3, 1, "", "getPositionsInRing"], [334, 3, 1, "", "getRingPos"], [334, 3, 1, "", "getSymmetricEquivalents"], [334, 3, 1, "", "locatorInDomain"], [334, 3, 1, "", "overlapsWhichSymmetryLine"], [334, 5, 1, "", "pitch"]], "armi.reactor.grids.grid": [[336, 2, 1, "", "Grid"]], "armi.reactor.grids.grid.Grid": [[336, 4, 1, "", "armiObject"], [336, 3, 1, "", "backUp"], [336, 5, 1, "", "geomType"], [336, 3, 1, "", "getCellBase"], [336, 3, 1, "", "getCellTop"], [336, 3, 1, "", "getCoordinates"], [336, 3, 1, "", "getLabel"], [336, 3, 1, "", "getSymmetricEquivalents"], [336, 5, 1, "", "isAxialOnly"], [336, 3, 1, "", "items"], [336, 3, 1, "", "locatorInDomain"], [336, 3, 1, "", "overlapsWhichSymmetryLine"], [336, 3, 1, "", "reduce"], [336, 3, 1, "", "restoreBackup"], [336, 5, 1, "", "symmetry"]], "armi.reactor.grids.hexagonal": [[337, 2, 1, "", "HexGrid"]], "armi.reactor.grids.hexagonal.HexGrid": [[337, 4, 1, "", "armiObject"], [337, 3, 1, "", "changePitch"], [337, 5, 1, "", "cornersUp"], [337, 3, 1, "", "fromPitch"], [337, 3, 1, "", "generateSortedHexLocationList"], [337, 3, 1, "", "getIndicesFromRingAndPos"], [337, 3, 1, "", "getLabel"], [337, 3, 1, "", "getMinimumRings"], [337, 3, 1, "", "getNeighboringCellIndices"], [337, 3, 1, "", "getPositionsInRing"], [337, 3, 1, "", "getRingPos"], [337, 3, 1, "", "getSymmetricEquivalents"], [337, 3, 1, "", "indicesToRingPos"], [337, 3, 1, "", "isInFirstThird"], [337, 3, 1, "", "locatorInDomain"], [337, 3, 1, "", "overlapsWhichSymmetryLine"], [337, 5, 1, "", "pitch"], [337, 3, 1, "", "triangleCoords"]], "armi.reactor.grids.locations": [[338, 2, 1, "", "CoordinateLocation"], [338, 2, 1, "", "IndexLocation"], [338, 2, 1, "", "LocationBase"], [338, 2, 1, "", "MultiIndexLocation"], [338, 1, 1, "", "addingIsValid"]], "armi.reactor.grids.locations.CoordinateLocation": [[338, 3, 1, "", "getCompleteIndices"], [338, 3, 1, "", "getGlobalCellBase"], [338, 3, 1, "", "getGlobalCellTop"], [338, 3, 1, "", "getLocalCoordinates"]], "armi.reactor.grids.locations.IndexLocation": [[338, 3, 1, "", "detachedCopy"], [338, 3, 1, "", "distanceTo"], [338, 3, 1, "", "getCompleteIndices"], [338, 3, 1, "", "getGlobalCellBase"], [338, 3, 1, "", "getGlobalCellTop"], [338, 3, 1, "", "getGlobalCoordinates"], [338, 3, 1, "", "getLocalCoordinates"], [338, 3, 1, "", "getRingPos"], [338, 3, 1, "", "getSymmetricEquivalents"], [338, 5, 1, "", "indices"], [338, 5, 1, "", "parentLocation"]], "armi.reactor.grids.locations.LocationBase": [[338, 3, 1, "", "associate"], [338, 5, 1, "", "grid"], [338, 5, 1, "", "i"], [338, 5, 1, "", "indices"], [338, 5, 1, "", "j"], [338, 5, 1, "", "k"]], "armi.reactor.grids.locations.MultiIndexLocation": [[338, 3, 1, "", "append"], [338, 3, 1, "", "associate"], [338, 3, 1, "", "detachedCopy"], [338, 3, 1, "", "extend"], [338, 3, 1, "", "getCompleteIndices"], [338, 5, 1, "", "indices"], [338, 3, 1, "", "pop"]], "armi.reactor.grids.structuredGrid": [[339, 2, 1, "", "GridParameters"], [339, 2, 1, "", "StructuredGrid"]], "armi.reactor.grids.structuredGrid.GridParameters": [[339, 4, 1, "", "bounds"], [339, 4, 1, "", "geomType"], [339, 4, 1, "", "offset"], [339, 4, 1, "", "symmetry"], [339, 4, 1, "", "unitStepLimits"], [339, 4, 1, "", "unitSteps"]], "armi.reactor.grids.structuredGrid.StructuredGrid": [[339, 4, 1, "", "armiObject"], [339, 3, 1, "", "backUp"], [339, 3, 1, "", "getAboveAndBelowCellIndices"], [339, 3, 1, "", "getAllIndices"], [339, 3, 1, "", "getBounds"], [339, 3, 1, "", "getCellBase"], [339, 3, 1, "", "getCellTop"], [339, 3, 1, "", "getCoordinates"], [339, 3, 1, "", "getIndexBounds"], [339, 3, 1, "", "getIndicesFromRingAndPos"], [339, 3, 1, "", "getLocatorFromRingAndPos"], [339, 3, 1, "", "getMinimumRings"], [339, 3, 1, "", "getNeighboringCellIndices"], [339, 3, 1, "", "getPositionsInRing"], [339, 3, 1, "", "getRingPos"], [339, 5, 1, "", "isAxialOnly"], [339, 3, 1, "", "items"], [339, 5, 1, "", "offset"], [339, 5, 1, "", "pitch"], [339, 3, 1, "", "reduce"], [339, 3, 1, "", "restoreBackup"]], "armi.reactor.grids.thetarz": [[340, 2, 1, "", "ThetaRZGrid"]], "armi.reactor.grids.thetarz.ThetaRZGrid": [[340, 4, 1, "", "armiObject"], [340, 3, 1, "", "fromGeom"], [340, 3, 1, "", "getCoordinates"], [340, 3, 1, "", "getIndicesFromRingAndPos"], [340, 3, 1, "", "getMinimumRings"], [340, 3, 1, "", "getPositionsInRing"], [340, 3, 1, "", "getRingPos"], [340, 3, 1, "", "getSymmetricEquivalents"], [340, 3, 1, "", "indicesOfBounds"], [340, 3, 1, "", "locatorInDomain"], [340, 3, 1, "", "overlapsWhichSymmetryLine"], [340, 3, 1, "", "pitch"]], "armi.reactor.parameters": [[342, 0, 0, "-", "exceptions"], [343, 0, 0, "-", "parameterCollections"], [344, 0, 0, "-", "parameterDefinitions"], [341, 1, 1, "", "reset"], [345, 0, 0, "-", "resolveCollections"]], "armi.reactor.parameters.exceptions": [[342, 7, 1, "", "ParameterDefinitionError"], [342, 7, 1, "", "ParameterError"], [342, 7, 1, "", "UnknownParameterError"]], "armi.reactor.parameters.parameterCollections": [[343, 6, 1, "", "GLOBAL_SERIAL_NUM"], [343, 2, 1, "", "ParameterCollection"], [343, 1, 1, "", "applyAllParameters"], [343, 1, 1, "", "collectPluginParameters"]], "armi.reactor.parameters.parameterCollections.ParameterCollection": [[343, 3, 1, "", "applyParameters"], [343, 3, 1, "", "backUp"], [343, 3, 1, "", "get"], [343, 3, 1, "", "getSyncData"], [343, 3, 1, "", "items"], [343, 3, 1, "", "keys"], [343, 4, 1, "", "pDefs"], [343, 5, 1, "", "paramDefs"], [343, 3, 1, "", "restoreBackup"], [343, 4, 1, "", "serialNum"], [343, 3, 1, "", "update"], [343, 3, 1, "", "values"], [343, 3, 1, "", "where"]], "armi.reactor.parameters.parameterDefinitions": [[344, 2, 1, "", "Category"], [344, 2, 1, "", "NoDefault"], [344, 2, 1, "", "ParamLocation"], [344, 2, 1, "", "Parameter"], [344, 2, 1, "", "ParameterBuilder"], [344, 2, 1, "", "ParameterDefinitionCollection"], [344, 2, 1, "", "Serializer"], [344, 1, 1, "", "isNumpyArray"]], "armi.reactor.parameters.parameterDefinitions.Category": [[344, 4, 1, "", "assignInBlueprints"], [344, 4, 1, "", "cumulative"], [344, 4, 1, "", "cumulativeOverCycle"], [344, 4, 1, "", "depletion"], [344, 4, 1, "", "detailedAxialExpansion"], [344, 4, 1, "", "fluxQuantities"], [344, 4, 1, "", "gamma"], [344, 4, 1, "", "multiGroupQuantities"], [344, 4, 1, "", "neutronics"], [344, 4, 1, "", "pinQuantities"], [344, 4, 1, "", "reactivityCoefficients"], [344, 4, 1, "", "retainOnReplacement"], [344, 4, 1, "", "thermalHydraulics"]], "armi.reactor.parameters.parameterDefinitions.ParamLocation": [[344, 4, 1, "", "AVERAGE"], [344, 4, 1, "", "BOTTOM"], [344, 4, 1, "", "CENTROID"], [344, 4, 1, "", "CHILDREN"], [344, 4, 1, "", "CORNERS"], [344, 4, 1, "", "EDGES"], [344, 4, 1, "", "MAX"], [344, 4, 1, "", "TOP"], [344, 4, 1, "", "VOLUME_INTEGRATED"]], "armi.reactor.parameters.parameterDefinitions.Parameter": [[344, 4, 1, "", "assigned"], [344, 3, 1, "", "atLocation"], [344, 3, 1, "", "backUp"], [344, 4, 1, "", "categories"], [344, 4, 1, "", "collectionType"], [344, 4, 1, "", "default"], [344, 4, 1, "", "description"], [344, 4, 1, "", "fieldName"], [344, 3, 1, "", "hasCategory"], [344, 4, 1, "", "location"], [344, 4, 1, "", "name"], [344, 3, 1, "", "restoreBackup"], [344, 4, 1, "", "saveToDB"], [344, 4, 1, "", "serializer"], [344, 3, 1, "", "setter"], [344, 4, 1, "", "units"]], "armi.reactor.parameters.parameterDefinitions.ParameterBuilder": [[344, 3, 1, "", "associateParameterDefinitionCollection"], [344, 3, 1, "", "defParam"]], "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection": [[344, 3, 1, "", "add"], [344, 3, 1, "", "atLocation"], [344, 3, 1, "", "byNameAndCollectionType"], [344, 3, 1, "", "byNameAndType"], [344, 5, 1, "", "categories"], [344, 3, 1, "", "createBuilder"], [344, 3, 1, "", "extend"], [344, 3, 1, "", "forType"], [344, 3, 1, "", "inCategory"], [344, 3, 1, "", "items"], [344, 3, 1, "", "lock"], [344, 5, 1, "", "locked"], [344, 5, 1, "", "names"], [344, 3, 1, "", "resetAssignmentFlag"], [344, 3, 1, "", "setAssignmentFlag"], [344, 3, 1, "", "since"], [344, 3, 1, "", "toWriteToDB"], [344, 3, 1, "", "unchanged_since"]], "armi.reactor.parameters.parameterDefinitions.Serializer": [[344, 3, 1, "", "pack"], [344, 3, 1, "", "unpack"], [344, 4, 1, "", "version"]], "armi.reactor.parameters.resolveCollections": [[345, 2, 1, "", "ResolveParametersMeta"]], "armi.reactor.reactorParameters": [[346, 1, 1, "", "defineCoreParameters"], [346, 1, 1, "", "defineReactorParameters"]], "armi.reactor.reactors": [[347, 2, 1, "", "Reactor"], [347, 1, 1, "", "factory"], [347, 1, 1, "", "loadFromCs"]], "armi.reactor.reactors.Reactor": [[347, 3, 1, "", "add"], [347, 3, 1, "", "incrementAssemNum"], [347, 3, 1, "", "normalizeNames"], [347, 4, 1, "", "pDefs"], [347, 4, 1, "", "paramCollectionType"]], "armi.reactor.spentFuelPool": [[348, 2, 1, "", "SpentFuelPool"]], "armi.reactor.spentFuelPool.SpentFuelPool": [[348, 3, 1, "", "add"], [348, 3, 1, "", "getAssembly"], [348, 3, 1, "", "normalizeNames"], [348, 4, 1, "", "paramCollectionType"]], "armi.reactor.systemLayoutInput": [[349, 2, 1, "", "SystemLayoutInput"]], "armi.reactor.systemLayoutInput.SystemLayoutInput": [[349, 4, 1, "", "ROOT_TAG"], [349, 3, 1, "", "fromReactor"], [349, 3, 1, "", "growToFullCore"], [349, 3, 1, "", "loadFromCs"], [349, 3, 1, "", "modifyEqPaths"], [349, 3, 1, "", "readGeomFromFile"], [349, 3, 1, "", "readGeomFromStream"], [349, 3, 1, "", "toGridBlueprints"], [349, 3, 1, "", "writeGeom"]], "armi.reactor.tests": [[351, 0, 0, "-", "test_assemblies"], [352, 0, 0, "-", "test_blocks"], [353, 0, 0, "-", "test_components"], [354, 0, 0, "-", "test_composites"], [355, 0, 0, "-", "test_excoreStructures"], [356, 0, 0, "-", "test_flags"], [357, 0, 0, "-", "test_geometry"], [358, 0, 0, "-", "test_parameters"], [359, 0, 0, "-", "test_reactors"], [360, 0, 0, "-", "test_rz_reactors"], [361, 0, 0, "-", "test_zones"]], "armi.reactor.tests.test_assemblies": [[351, 2, 1, "", "AnnularFuelTestCase"], [351, 2, 1, "", "AssemblyInReactor_TestCase"], [351, 2, 1, "", "Assembly_TestCase"], [351, 2, 1, "", "MaterialInAssembly_TestCase"], [351, 1, 1, "", "buildTestAssemblies"], [351, 1, 1, "", "makeTestAssembly"]], "armi.reactor.tests.test_assemblies.AnnularFuelTestCase": [[351, 3, 1, "", "test_areaCheck"]], "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase": [[351, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"], [351, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "armi.reactor.tests.test_assemblies.Assembly_TestCase": [[351, 3, 1, "", "test_add"], [351, 3, 1, "", "test_adjustResolution"], [351, 3, 1, "", "test_append"], [351, 3, 1, "", "test_assem_block_types"], [351, 3, 1, "", "test_assem_hex_type"], [351, 3, 1, "", "test_averagePlenumTemperature"], [351, 3, 1, "", "test_calcAvgParam"], [351, 3, 1, "", "test_calcTotalParam"], [351, 3, 1, "", "test_calculateZCoords"], [351, 3, 1, "", "test_carestianCoordinates"], [351, 3, 1, "", "test_countBlocksOfType"], [351, 3, 1, "", "test_doubleResolution"], [351, 3, 1, "", "test_duplicate"], [351, 3, 1, "", "test_extend"], [351, 3, 1, "", "test_getAge"], [351, 3, 1, "", "test_getArea"], [351, 3, 1, "", "test_getAxialMesh"], [351, 3, 1, "", "test_getBIndexFromZIndex"], [351, 3, 1, "", "test_getBlockData"], [351, 3, 1, "", "test_getBlocks"], [351, 3, 1, "", "test_getBlocksAndZ"], [351, 3, 1, "", "test_getBlocksBetweenElevations"], [351, 3, 1, "", "test_getDim"], [351, 3, 1, "", "test_getDominantMaterial"], [351, 3, 1, "", "test_getElevationBoundariesByBlockType"], [351, 3, 1, "", "test_getElevationsMatchingParamValue"], [351, 3, 1, "", "test_getFirstBlock"], [351, 3, 1, "", "test_getFirstBlockByType"], [351, 3, 1, "", "test_getFissileMass"], [351, 3, 1, "", "test_getHeight"], [351, 3, 1, "", "test_getLocation"], [351, 3, 1, "", "test_getMass"], [351, 3, 1, "", "test_getMaxParam"], [351, 3, 1, "", "test_getName"], [351, 3, 1, "", "test_getNum"], [351, 3, 1, "", "test_getParamValuesAtZ"], [351, 3, 1, "", "test_getReactiveHeight"], [351, 3, 1, "", "test_getTotalHeight"], [351, 3, 1, "", "test_getVolume"], [351, 3, 1, "", "test_hasContinuousCoolantChannel"], [351, 3, 1, "", "test_hasFlags"], [351, 3, 1, "", "test_isOnWhichSymmetryLine"], [351, 3, 1, "", "test_iter"], [351, 3, 1, "", "test_iteration"], [351, 3, 1, "", "test_len"], [351, 3, 1, "", "test_makeAxialSnapList"], [351, 3, 1, "", "test_moveTo"], [351, 3, 1, "", "test_notesParameter"], [351, 3, 1, "", "test_pinPlenumVolume"], [351, 3, 1, "", "test_reattach"], [351, 3, 1, "", "test_reestablishBlockOrder"], [351, 3, 1, "", "test_renameBlocksAccordingToAssemblyNum"], [351, 3, 1, "", "test_rotate"], [351, 3, 1, "", "test_snapAxialMeshToReference"], [351, 3, 1, "", "test_updateFromAssembly"]], "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase": [[351, 3, 1, "", "test_UThZrMaterial"], [351, 3, 1, "", "test_sortNoLocator"]], "armi.reactor.tests.test_blocks": [[352, 2, 1, "", "BlockEnergyDepositionConstants"], [352, 2, 1, "", "Block_TestCase"], [352, 2, 1, "", "CartesianBlock_TestCase"], [352, 2, 1, "", "EmptyBlockRotateTest"], [352, 2, 1, "", "HexBlock_TestCase"], [352, 2, 1, "", "MassConservationTests"], [352, 2, 1, "", "TestDetailedNDensUpdate"], [352, 2, 1, "", "TestNegativeVolume"], [352, 2, 1, "", "ThRZBlock_TestCase"], [352, 1, 1, "", "applyDummyData"], [352, 1, 1, "", "buildSimpleFuelBlock"], [352, 1, 1, "", "getComponentData"], [352, 1, 1, "", "loadTestBlock"]], "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants": [[352, 3, 1, "", "test_getCaptureEnergyGenerationConstants"], [352, 3, 1, "", "test_getFissionEnergyDepositionConstants"], [352, 3, 1, "", "test_getGammaEnergyDepositionConstants"], [352, 3, 1, "", "test_getNeutronEnergyDepositionConstants"], [352, 3, 1, "", "test_getTotalEnergyGenerationConstants"]], "armi.reactor.tests.test_blocks.Block_TestCase": [[352, 3, 1, "", "test_100_getPinPitch"], [352, 3, 1, "", "test_101_getPitch"], [352, 3, 1, "", "test_102_setPitch"], [352, 3, 1, "", "test_106_getAreaFractions"], [352, 3, 1, "", "test_27b_setBuGroup"], [352, 3, 1, "", "test_add"], [352, 3, 1, "", "test_adjustDensity"], [352, 3, 1, "", "test_adjustUEnrich"], [352, 3, 1, "", "test_breakFuelComponentsIntoIndividuals"], [352, 3, 1, "", "test_clearDensity"], [352, 3, 1, "", "test_completeInitialLoading"], [352, 3, 1, "", "test_consistentAreaWithOverlappingComponents"], [352, 3, 1, "", "test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"], [352, 3, 1, "", "test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"], [352, 3, 1, "", "test_duplicate"], [352, 3, 1, "", "test_expandAllElementalsToIsotopics"], [352, 3, 1, "", "test_expandElementalToIsotopics"], [352, 3, 1, "", "test_getComponent"], [352, 3, 1, "", "test_getComponentAreaFrac"], [352, 3, 1, "", "test_getComponentByName"], [352, 3, 1, "", "test_getComponentNames"], [352, 3, 1, "", "test_getComponents"], [352, 3, 1, "", "test_getComponentsInLinkedOrder"], [352, 3, 1, "", "test_getComponentsOfMaterial"], [352, 3, 1, "", "test_getComponentsOfShape"], [352, 3, 1, "", "test_getDimensions"], [352, 3, 1, "", "test_getFissileMassEnrich"], [352, 3, 1, "", "test_getFlowArea"], [352, 3, 1, "", "test_getFlowAreaPerPin"], [352, 3, 1, "", "test_getHMDens"], [352, 3, 1, "", "test_getHydraulicDiameter"], [352, 3, 1, "", "test_getMass"], [352, 3, 1, "", "test_getMasses"], [352, 3, 1, "", "test_getMfp"], [352, 3, 1, "", "test_getMicroSuffix"], [352, 3, 1, "", "test_getNumComponents"], [352, 3, 1, "", "test_getNumPins"], [352, 3, 1, "", "test_getNumberDensity"], [352, 3, 1, "", "test_getNumberOfAtoms"], [352, 3, 1, "", "test_getPlenumPin"], [352, 3, 1, "", "test_getPu"], [352, 3, 1, "", "test_getReactionRates"], [352, 3, 1, "", "test_getSmearDensity"], [352, 3, 1, "", "test_getSmearDensityEdgeCases"], [352, 3, 1, "", "test_getSmearDensityMultipleLiner"], [352, 3, 1, "", "test_getSortedComponentsInsideOfComponentClad"], [352, 3, 1, "", "test_getSortedComponentsInsideOfComponentDuct"], [352, 3, 1, "", "test_getTotalMass"], [352, 3, 1, "", "test_getTotalNDens"], [352, 3, 1, "", "test_getType"], [352, 3, 1, "", "test_getUraniumMassEnrich"], [352, 3, 1, "", "test_getUraniumNumEnrich"], [352, 3, 1, "", "test_getVolumeFractionWithoutParent"], [352, 3, 1, "", "test_getVolumeFractionsWithZeroHeight"], [352, 3, 1, "", "test_getWettedPerimeter"], [352, 3, 1, "", "test_getXsType"], [352, 3, 1, "", "test_hasComponents"], [352, 3, 1, "", "test_hasFlags"], [352, 3, 1, "", "test_hasPinPitch"], [352, 3, 1, "", "test_homogenizedMixture"], [352, 3, 1, "", "test_mergeWithBlock"], [352, 3, 1, "", "test_pinMgFluxes"], [352, 3, 1, "", "test_removeMass"], [352, 3, 1, "", "test_replaceBlockWithBlock"], [352, 3, 1, "", "test_rotatePins"], [352, 3, 1, "", "test_setBuLimitInfo"], [352, 3, 1, "", "test_setImportantParams"], [352, 3, 1, "", "test_setLinPowByPin"], [352, 3, 1, "", "test_setLocation"], [352, 3, 1, "", "test_setMass"], [352, 3, 1, "", "test_setNumberDensities"], [352, 3, 1, "", "test_setNumberDensity"], [352, 3, 1, "", "test_setPitch"], [352, 3, 1, "", "test_setType"], [352, 3, 1, "", "test_setZeroHeight"], [352, 3, 1, "", "test_timeNodeParams"]], "armi.reactor.tests.test_blocks.CartesianBlock_TestCase": [[352, 4, 1, "", "PITCH"], [352, 3, 1, "", "test_getCartesianGrid"], [352, 3, 1, "", "test_getHydraulicDiameter"], [352, 3, 1, "", "test_getPitchHomogeneousBlock"], [352, 3, 1, "", "test_getPitchSquare"], [352, 3, 1, "", "test_getWettedPerimeter"]], "armi.reactor.tests.test_blocks.EmptyBlockRotateTest": [[352, 3, 1, "", "test_orientation"]], "armi.reactor.tests.test_blocks.HexBlock_TestCase": [[352, 3, 1, "", "test_block_dims"], [352, 3, 1, "", "test_component_type"], [352, 3, 1, "", "test_coords"], [352, 3, 1, "", "test_getArea"], [352, 3, 1, "", "test_getDuctPitch"], [352, 3, 1, "", "test_getNumPins"], [352, 3, 1, "", "test_getPinCenterFlatToFlat"], [352, 3, 1, "", "test_getPinCoords"], [352, 3, 1, "", "test_getPitchHomogeneousBlock"], [352, 3, 1, "", "test_gridCreation"], [352, 3, 1, "", "test_gridNotCreatedMultipleMultiplicities"], [352, 3, 1, "", "test_gridNumPinsAndLocations"], [352, 3, 1, "", "test_retainState"], [352, 3, 1, "", "test_symmetryFactor"]], "armi.reactor.tests.test_blocks.MassConservationTests": [[352, 3, 1, "", "test_coldMass"], [352, 3, 1, "", "test_dimensionDuctHeatup"], [352, 3, 1, "", "test_heightExpansionDifferences"], [352, 3, 1, "", "test_massCladHeatup"], [352, 3, 1, "", "test_massConsistency"], [352, 3, 1, "", "test_massCoolHeatup"], [352, 3, 1, "", "test_massDuctHeatup"], [352, 3, 1, "", "test_massFuelHeatup"]], "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate": [[352, 3, 1, "", "test_updateDetailedNdens"]], "armi.reactor.tests.test_blocks.TestNegativeVolume": [[352, 3, 1, "", "test_negativeVolume"]], "armi.reactor.tests.test_blocks.ThRZBlock_TestCase": [[352, 3, 1, "", "test_axial"], [352, 3, 1, "", "test_getHydraulicDiameter"], [352, 3, 1, "", "test_getThetaRZGrid"], [352, 3, 1, "", "test_getWettedPerimeter"], [352, 3, 1, "", "test_radii"], [352, 3, 1, "", "test_theta"], [352, 3, 1, "", "test_verifyBlockDims"]], "armi.reactor.tests.test_components": [[353, 2, 1, "", "TestCircle"], [353, 2, 1, "", "TestComponent"], [353, 2, 1, "", "TestComponentExpansion"], [353, 2, 1, "", "TestComponentFactory"], [353, 2, 1, "", "TestCube"], [353, 2, 1, "", "TestDerivedShape"], [353, 2, 1, "", "TestDerivedShapeGetArea"], [353, 2, 1, "", "TestDifferentialRadialSegment"], [353, 2, 1, "", "TestGeneralComponents"], [353, 2, 1, "", "TestHelix"], [353, 2, 1, "", "TestHexHoledCircle"], [353, 2, 1, "", "TestHexagon"], [353, 2, 1, "", "TestHoledHexagon"], [353, 2, 1, "", "TestHoledRectangle"], [353, 2, 1, "", "TestHoledSquare"], [353, 2, 1, "", "TestMaterialAdjustments"], [353, 2, 1, "", "TestNullComponent"], [353, 2, 1, "", "TestRadialSegment"], [353, 2, 1, "", "TestRectangle"], [353, 2, 1, "", "TestShapedComponent"], [353, 2, 1, "", "TestSolidRectangle"], [353, 2, 1, "", "TestSphere"], [353, 2, 1, "", "TestSquare"], [353, 2, 1, "", "TestTriangle"], [353, 2, 1, "", "TestUnshapedComponent"]], "armi.reactor.tests.test_components.TestCircle": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_badComponentName"], [353, 3, 1, "", "test_changeNumberDensities"], [353, 3, 1, "", "test_componentInteractionsLinkingByDimensions"], [353, 3, 1, "", "test_componentInteractionsLinkingBySubtraction"], [353, 3, 1, "", "test_dimensionThermallyExpands"], [353, 3, 1, "", "test_fuelMass"], [353, 3, 1, "", "test_getArea"], [353, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [353, 3, 1, "", "test_getCircleInnerDiameter"], [353, 3, 1, "", "test_getDimension"], [353, 3, 1, "", "test_getNumberDensities"], [353, 3, 1, "", "test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"], [353, 3, 1, "", "test_theoreticalDensitySetter"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestComponent": [[353, 4, 1, "", "componentCls"], [353, 3, 1, "", "test_initializeComponentMaterial"], [353, 3, 1, "", "test_setNumberDensities"], [353, 3, 1, "", "test_setNumberDensity"], [353, 3, 1, "", "test_solid_material"]], "armi.reactor.tests.test_components.TestComponentExpansion": [[353, 4, 1, "", "coldOuterDiameter"], [353, 3, 1, "", "componentMassIndependentOfInputTemp"], [353, 3, 1, "", "expansionConservationColdHeightDefined"], [353, 3, 1, "", "expansionConservationHotHeightDefined"], [353, 3, 1, "", "runExpansionTests"], [353, 4, 1, "", "tCold"], [353, 4, 1, "", "tHot"], [353, 4, 1, "", "tWarm"], [353, 3, 1, "", "test_B4CExpansion"], [353, 3, 1, "", "test_HT9Expansion"], [353, 3, 1, "", "test_UZrExpansion"]], "armi.reactor.tests.test_components.TestComponentFactory": [[353, 3, 1, "", "getCircleFuelDict"], [353, 3, 1, "", "getCircleVoidDict"], [353, 3, 1, "", "test_componentInitializationAndDuplication"], [353, 3, 1, "", "test_factory"], [353, 3, 1, "", "test_factoryBadShapeName"], [353, 3, 1, "", "test_invalidCoolantComponentAssignment"]], "armi.reactor.tests.test_components.TestCube": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_getVolume"], [353, 3, 1, "", "test_negativeVolume"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestDerivedShape": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 4, 1, "", "componentMaterial"], [353, 3, 1, "", "test_computeVolume"], [353, 3, 1, "", "test_getBoundingCircleOuterDiameter"]], "armi.reactor.tests.test_components.TestDerivedShapeGetArea": [[353, 3, 1, "", "test_getAreaColdTrue"]], "armi.reactor.tests.test_components.TestDifferentialRadialSegment": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [353, 3, 1, "", "test_getVolume"], [353, 3, 1, "", "test_thermallyExpands"], [353, 3, 1, "", "test_updateDims"]], "armi.reactor.tests.test_components.TestGeneralComponents": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 4, 1, "", "componentMaterial"]], "armi.reactor.tests.test_components.TestHelix": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_dimensionThermallyExpands"], [353, 3, 1, "", "test_getArea"], [353, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [353, 3, 1, "", "test_getCircleInnerDiameter"], [353, 3, 1, "", "test_thermallyExpands"], [353, 3, 1, "", "test_validParameters"]], "armi.reactor.tests.test_components.TestHexHoledCircle": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_dimensionThermallyExpands"], [353, 3, 1, "", "test_getArea"], [353, 3, 1, "", "test_getCircleInnerDiameter"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHexagon": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_dimensionThermallyExpands"], [353, 3, 1, "", "test_getArea"], [353, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [353, 3, 1, "", "test_getCircleInnerDiameter"], [353, 3, 1, "", "test_getPerimeter"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledHexagon": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_dimensionThermallyExpands"], [353, 3, 1, "", "test_getArea"], [353, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [353, 3, 1, "", "test_getCircleInnerDiameter"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledRectangle": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 4, 1, "", "dimsToTestExpansion"], [353, 3, 1, "", "setClassDims"], [353, 3, 1, "", "test_dimensionThermallyExpands"], [353, 3, 1, "", "test_getArea"], [353, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [353, 3, 1, "", "test_getCircleInnerDiameter"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledSquare": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 4, 1, "", "dimsToTestExpansion"], [353, 3, 1, "", "setClassDims"], [353, 3, 1, "", "test_getCircleInnerDiameter"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestMaterialAdjustments": [[353, 3, 1, "", "test_adjustMassEnrichment"], [353, 3, 1, "", "test_adjustMassFrac_U"], [353, 3, 1, "", "test_adjustMassFrac_U235"], [353, 3, 1, "", "test_adjustMassFrac_clear_ZR"], [353, 3, 1, "", "test_adjustMassFrac_invalid"], [353, 3, 1, "", "test_adjustMassFrac_leave_same"], [353, 3, 1, "", "test_adjustMassFrac_set_ZR"], [353, 3, 1, "", "test_finalizeLoadDBAdjustsTD"], [353, 3, 1, "", "test_getEnrichment"], [353, 3, 1, "", "test_setMassFrac"], [353, 3, 1, "", "test_setMassFracOnComponentMaterial"]], "armi.reactor.tests.test_components.TestNullComponent": [[353, 4, 1, "", "componentCls"], [353, 3, 1, "", "test_cmp"], [353, 3, 1, "", "test_getDimension"], [353, 3, 1, "", "test_nonzero"]], "armi.reactor.tests.test_components.TestRadialSegment": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [353, 3, 1, "", "test_getVolume"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestRectangle": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_dimensionThermallyExpands"], [353, 3, 1, "", "test_getArea"], [353, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [353, 3, 1, "", "test_getCircleInnerDiameter"], [353, 3, 1, "", "test_negativeArea"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestShapedComponent": [[353, 3, 1, "", "test_density"], [353, 3, 1, "", "test_densityConsistent"], [353, 3, 1, "", "test_preserveMassDuringThermalExpansion"], [353, 3, 1, "", "test_volumeAfterClearCache"]], "armi.reactor.tests.test_components.TestSolidRectangle": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_dimensionThermallyExpands"], [353, 3, 1, "", "test_getArea"], [353, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSphere": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_getVolume"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSquare": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_dimensionThermallyExpands"], [353, 3, 1, "", "test_getArea"], [353, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [353, 3, 1, "", "test_getCircleInnerDiameter"], [353, 3, 1, "", "test_negativeArea"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestTriangle": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 3, 1, "", "test_dimensionThermallyExpands"], [353, 3, 1, "", "test_getArea"], [353, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestUnshapedComponent": [[353, 4, 1, "", "componentCls"], [353, 4, 1, "", "componentDims"], [353, 4, 1, "", "componentMaterial"], [353, 3, 1, "", "test_component_less_than"], [353, 3, 1, "", "test_fromComponent"], [353, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [353, 3, 1, "", "test_getComponentArea"]], "armi.reactor.tests.test_composites": [[354, 2, 1, "", "DummyComposite"], [354, 2, 1, "", "DummyLeaf"], [354, 2, 1, "", "MockBP"], [354, 2, 1, "", "TestCompositePattern"], [354, 2, 1, "", "TestCompositeTree"], [354, 2, 1, "", "TestFlagSerializer"], [354, 2, 1, "", "TestGetReactionRateDict"], [354, 2, 1, "", "TestMiscMethods"], [354, 1, 1, "", "getDummyParamDefs"]], "armi.reactor.tests.test_composites.DummyComposite": [[354, 4, 1, "", "pDefs"], [354, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.DummyLeaf": [[354, 3, 1, "", "getBoundingCircleOuterDiameter"], [354, 3, 1, "", "getChildren"], [354, 3, 1, "", "getChildrenWithFlags"], [354, 3, 1, "", "iterComponents"], [354, 4, 1, "", "pDefs"], [354, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.MockBP": [[354, 4, 1, "", "activeNuclides"], [354, 4, 1, "", "allNuclidesInProblem"], [354, 4, 1, "", "customIsotopics"], [354, 4, 1, "", "elementsToExpand"], [354, 4, 1, "", "inactiveNuclides"]], "armi.reactor.tests.test_composites.TestCompositePattern": [[354, 3, 1, "", "test_areChildernOfType"], [354, 3, 1, "", "test_composite"], [354, 3, 1, "", "test_containsAtLeastOneChildOfType"], [354, 3, 1, "", "test_containsOnlyChildrenOfType"], [354, 3, 1, "", "test_expandLFPs"], [354, 3, 1, "", "test_getBoundingCirlceOuterDiameter"], [354, 3, 1, "", "test_getChildren"], [354, 3, 1, "", "test_getIntegratedMgFlux"], [354, 3, 1, "", "test_getLumpedFissionProductsIfNecessaryNullCase"], [354, 3, 1, "", "test_getName"], [354, 3, 1, "", "test_getParamNames"], [354, 3, 1, "", "test_getReactionRates"], [354, 3, 1, "", "test_hasFlags"], [354, 3, 1, "", "test_hasFlagsNoTypeSpecified"], [354, 3, 1, "", "test_hasFlagsSubstring"], [354, 3, 1, "", "test_iterComponents"], [354, 3, 1, "", "test_nameContains"], [354, 3, 1, "", "test_nucSpec"], [354, 3, 1, "", "test_requiresLumpedFissionProducts"], [354, 3, 1, "", "test_setChildrenLumpedFissionProducts"], [354, 3, 1, "", "test_sort"], [354, 3, 1, "", "test_syncParameters"], [354, 3, 1, "", "test_updateVolume"]], "armi.reactor.tests.test_composites.TestCompositeTree": [[354, 4, 1, "", "blueprintYaml"], [354, 3, 1, "", "test_constituentReport"], [354, 3, 1, "", "test_getChildrenIncludeMaterials"], [354, 3, 1, "", "test_getFPMass"], [354, 3, 1, "", "test_getFissileMass"], [354, 3, 1, "", "test_getFuelMass"], [354, 3, 1, "", "test_getHMMass"], [354, 3, 1, "", "test_getMaxParam"], [354, 3, 1, "", "test_getMinParam"], [354, 3, 1, "", "test_getNuclides"], [354, 3, 1, "", "test_ordering"], [354, 3, 1, "", "test_summing"]], "armi.reactor.tests.test_composites.TestFlagSerializer": [[354, 2, 1, "", "TestFlagsA"], [354, 2, 1, "", "TestFlagsB"], [354, 3, 1, "", "test_flagConversion"], [354, 3, 1, "", "test_flagSerialization"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA": [[354, 4, 1, "", "A"], [354, 4, 1, "", "B"], [354, 4, 1, "", "C"], [354, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB": [[354, 4, 1, "", "A"], [354, 4, 1, "", "B"], [354, 4, 1, "", "BPRIME"], [354, 4, 1, "", "C"], [354, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestGetReactionRateDict": [[354, 3, 1, "", "test_getReactionRateDict"]], "armi.reactor.tests.test_composites.TestMiscMethods": [[354, 3, 1, "", "test_containsHeavyMetal"], [354, 3, 1, "", "test_copyParamsFrom"], [354, 3, 1, "", "test_copyParamsToChildren"], [354, 3, 1, "", "test_dimensionReport"], [354, 3, 1, "", "test_getAtomicWeight"], [354, 3, 1, "", "test_getNumberDensities"], [354, 3, 1, "", "test_getNumberDensitiesWithExpandedFissionProducts"], [354, 3, 1, "", "test_setMass"]], "armi.reactor.tests.test_excoreStructures": [[355, 2, 1, "", "TestExcoreCollection"], [355, 2, 1, "", "TestExcoreStructure"], [355, 2, 1, "", "TestSpentFuelPool"]], "armi.reactor.tests.test_excoreStructures.TestExcoreCollection": [[355, 3, 1, "", "test_addLikeAttribute"], [355, 3, 1, "", "test_addLikeDict"]], "armi.reactor.tests.test_excoreStructures.TestExcoreStructure": [[355, 3, 1, "", "test_add"], [355, 3, 1, "", "test_constructor"], [355, 3, 1, "", "test_parentReactor"], [355, 3, 1, "", "test_representation"]], "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool": [[355, 3, 1, "", "test_add"], [355, 3, 1, "", "test_constructor"], [355, 3, 1, "", "test_getAssembly"], [355, 3, 1, "", "test_getNextLocation"], [355, 3, 1, "", "test_normalizeNames"], [355, 3, 1, "", "test_representation"], [355, 3, 1, "", "test_updateNumberOfColumns"]], "armi.reactor.tests.test_flags": [[356, 2, 1, "", "TestFlags"]], "armi.reactor.tests.test_flags.TestFlags": [[356, 3, 1, "", "test_convertsStringsWithNonFlags"], [356, 3, 1, "", "test_defaultIsFalse"], [356, 3, 1, "", "test_flagsToAndFromString"], [356, 3, 1, "", "test_fromString"], [356, 3, 1, "", "test_fromStringStrict"], [356, 3, 1, "", "test_isPickleable"], [356, 3, 1, "", "test_lookup"], [356, 3, 1, "", "test_toStringAlphabetical"]], "armi.reactor.tests.test_geometry": [[357, 2, 1, "", "TestGeomType"], [357, 2, 1, "", "TestSymmetryType"], [357, 2, 1, "", "TestSystemLayoutInput"], [357, 2, 1, "", "TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry.TestGeomType": [[357, 3, 1, "", "test_fromStr"], [357, 3, 1, "", "test_label"], [357, 3, 1, "", "test_str"]], "armi.reactor.tests.test_geometry.TestSymmetryType": [[357, 3, 1, "", "test_SymmetryFactor"], [357, 3, 1, "", "test_baseConstructor"], [357, 3, 1, "", "test_checkValidGeomSymmetryCombo"], [357, 3, 1, "", "test_domainTypeNulls"], [357, 3, 1, "", "test_fromAny"], [357, 3, 1, "", "test_fromStr"], [357, 3, 1, "", "test_label"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInput": [[357, 3, 1, "", "test_asciimap"], [357, 3, 1, "", "test_growToFullCore"], [357, 3, 1, "", "test_readAsciimap"], [357, 3, 1, "", "test_readHexGeomXML"], [357, 3, 1, "", "test_readReactor"], [357, 3, 1, "", "test_yamlIO"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ": [[357, 3, 1, "", "test_TRZyamlIO"], [357, 3, 1, "", "test_readTRZGeomXML"]], "armi.reactor.tests.test_parameters": [[358, 2, 1, "", "MockComposite"], [358, 2, 1, "", "MockCompositeChild"], [358, 2, 1, "", "MockCompositeGrandParent"], [358, 2, 1, "", "MockCompositeParent"], [358, 2, 1, "", "ParamCollectionWhere"], [358, 2, 1, "", "ParameterTests"]], "armi.reactor.tests.test_parameters.ParamCollectionWhere": [[358, 2, 1, "", "ScopeParamCollection"], [358, 3, 1, "", "test_complicated"], [358, 3, 1, "", "test_onCategory"], [358, 3, 1, "", "test_onLocation"]], "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection": [[358, 4, 1, "", "pDefs"], [358, 4, 1, "", "pb"]], "armi.reactor.tests.test_parameters.ParameterTests": [[358, 3, 1, "", "test_attemptingToSetParamWithoutSetterFails"], [358, 3, 1, "", "test_cannotCreateAttrbuteOnParameterCollectionSubclass"], [358, 3, 1, "", "test_cannotCreateInstanceOf_NoDefault"], [358, 3, 1, "", "test_cannotCreateInstanceOf_Undefined"], [358, 3, 1, "", "test_cannotDefineParameterWithSameName"], [358, 3, 1, "", "test_cannotDefineParameterWithSameNameForCollectionSubclass"], [358, 3, 1, "", "test_categories"], [358, 3, 1, "", "test_defaultLocation"], [358, 3, 1, "", "test_getWithoutDefaultRaisesParameterError"], [358, 3, 1, "", "test_mutableDefaultsNotSupported"], [358, 3, 1, "", "test_paramDefinitionsCompose"], [358, 3, 1, "", "test_paramPropertyDoesNotConflict"], [358, 3, 1, "", "test_paramPropertyDoesNotConflictWithNoneDefault"], [358, 3, 1, "", "test_parameterCollectionsHave__slots__"], [358, 3, 1, "", "test_serializer_pack_unpack"], [358, 3, 1, "", "test_setter"], [358, 3, 1, "", "test_setterGetterBasics"], [358, 3, 1, "", "test_writeSomeParamsToDB"]], "armi.reactor.tests.test_reactors": [[359, 2, 1, "", "CartesianReactorNeighborTests"], [359, 2, 1, "", "CartesianReactorTests"], [359, 2, 1, "", "HexReactorTests"], [359, 2, 1, "", "ReactorTests"], [359, 1, 1, "", "buildOperatorOfEmptyCartesianBlocks"], [359, 1, 1, "", "buildOperatorOfEmptyHexBlocks"], [359, 1, 1, "", "loadTestReactor"], [359, 1, 1, "", "reduceTestReactorRings"]], "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests": [[359, 3, 1, "", "test_findNeighborsCartesian"]], "armi.reactor.tests.test_reactors.CartesianReactorTests": [[359, 3, 1, "", "test_getAssembliesInSquareRing"], [359, 3, 1, "", "test_getAssemblyPitch"], [359, 3, 1, "", "test_getNuclideCategoriesLogging"]], "armi.reactor.tests.test_reactors.HexReactorTests": [[359, 3, 1, "", "test_addMoreNodes"], [359, 3, 1, "", "test_addMultipleCores"], [359, 3, 1, "", "test_applyThermalExpansion_CoreConstruct"], [359, 3, 1, "", "test_buildManualZones"], [359, 3, 1, "", "test_buildManualZonesEmpty"], [359, 3, 1, "", "test_coreSfp"], [359, 3, 1, "", "test_countBlocksOfType"], [359, 3, 1, "", "test_countFuelAxialBlocks"], [359, 3, 1, "", "test_createAssemblyOfType"], [359, 3, 1, "", "test_createAssemblyOfTypeExpandedCore"], [359, 3, 1, "", "test_createFreshFeed"], [359, 3, 1, "", "test_differentNuclideModels"], [359, 3, 1, "", "test_factorySortSetting"], [359, 3, 1, "", "test_findAllAxialMeshPoints"], [359, 3, 1, "", "test_findAllAxialMeshPoints_wSubmesh"], [359, 3, 1, "", "test_findAllAziMeshPoints"], [359, 3, 1, "", "test_findAllMeshPoints"], [359, 3, 1, "", "test_findAllRadMeshPoints"], [359, 3, 1, "", "test_findAxialMeshIndexOf"], [359, 3, 1, "", "test_findNeighbors"], [359, 3, 1, "", "test_genAssembliesAddedThisCycle"], [359, 3, 1, "", "test_genBlocksByLocName"], [359, 3, 1, "", "test_geomType"], [359, 3, 1, "", "test_getAllXsSuffixes"], [359, 3, 1, "", "test_getAssembliesInCircularRing"], [359, 3, 1, "", "test_getAssembliesInHexRing"], [359, 3, 1, "", "test_getAssembliesOnSymmetryLine"], [359, 3, 1, "", "test_getAssemblyPitch"], [359, 3, 1, "", "test_getAssemblyWithLoc"], [359, 3, 1, "", "test_getAssemblyWithName"], [359, 3, 1, "", "test_getAvgTemp"], [359, 3, 1, "", "test_getBlocksByIndices"], [359, 3, 1, "", "test_getDominantMaterial"], [359, 3, 1, "", "test_getFirstFuelBlockAxialNode"], [359, 3, 1, "", "test_getFluxVector"], [359, 3, 1, "", "test_getFuelBottomHeight"], [359, 3, 1, "", "test_getGridBounds"], [359, 3, 1, "", "test_getMass"], [359, 3, 1, "", "test_getMaxAssembliesInHexRing"], [359, 3, 1, "", "test_getMaxNumPins"], [359, 3, 1, "", "test_getMinimumPercentFluxInFuel"], [359, 3, 1, "", "test_getNozzleTypes"], [359, 3, 1, "", "test_getNuclideCategories"], [359, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOut"], [359, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOutBipass"], [359, 3, 1, "", "test_getNumEnergyGroups"], [359, 3, 1, "", "test_getNumRings"], [359, 3, 1, "", "test_getReactor"], [359, 3, 1, "", "test_getScalarEvolution"], [359, 3, 1, "", "test_getSetParameters"], [359, 3, 1, "", "test_getSymmetryFactor"], [359, 3, 1, "", "test_getTotalParam"], [359, 3, 1, "", "test_growToFullCore"], [359, 3, 1, "", "test_ifMissingSpatialGrid"], [359, 3, 1, "", "test_isPickleable"], [359, 3, 1, "", "test_locations"], [359, 3, 1, "", "test_nonUniformAssems"], [359, 3, 1, "", "test_normalizeNames"], [359, 3, 1, "", "test_pinCoordsAllBlocks"], [359, 3, 1, "", "test_removeAssembliesInRing"], [359, 3, 1, "", "test_removeAssembliesInRingByCount"], [359, 3, 1, "", "test_removeAssembliesInRingHex"], [359, 3, 1, "", "test_removeAssembly"], [359, 3, 1, "", "test_removeAssemblyNoSfp"], [359, 3, 1, "", "test_restoreReactor"], [359, 3, 1, "", "test_saveAllFlux"], [359, 3, 1, "", "test_setB10VolOnCreation"], [359, 3, 1, "", "test_setPitchUniform"], [359, 3, 1, "", "test_setPowerIfNecessary"], [359, 3, 1, "", "test_sortAssemByRing"], [359, 3, 1, "", "test_sortChildren"], [359, 3, 1, "", "test_updateBlockBOLHeights_DBLoad"], [359, 3, 1, "", "test_whenNoAssemblies"]], "armi.reactor.tests.test_rz_reactors": [[360, 2, 1, "", "TestRZTReactor"], [360, 2, 1, "", "TestRZTReactorModern"]], "armi.reactor.tests.test_rz_reactors.TestRZTReactor": [[360, 3, 1, "", "test_findAllMeshPoints"], [360, 3, 1, "", "test_loadRZT"]], "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern": [[360, 3, 1, "", "test_loadRZT_reactor"]], "armi.reactor.tests.test_zones": [[361, 2, 1, "", "TestZone"], [361, 2, 1, "", "TestZones"]], "armi.reactor.tests.test_zones.TestZone": [[361, 3, 1, "", "test_addItem"], [361, 3, 1, "", "test_addItems"], [361, 3, 1, "", "test_addLoc"], [361, 3, 1, "", "test_addLocs"], [361, 3, 1, "", "test_blocks"], [361, 3, 1, "", "test_iteration"], [361, 3, 1, "", "test_removeItem"], [361, 3, 1, "", "test_removeItems"], [361, 3, 1, "", "test_removeLoc"], [361, 3, 1, "", "test_removeLocs"], [361, 3, 1, "", "test_repr"]], "armi.reactor.tests.test_zones.TestZones": [[361, 3, 1, "", "test_dictionaryInterface"], [361, 3, 1, "", "test_findZoneItIsIn"], [361, 3, 1, "", "test_getAllLocations"], [361, 3, 1, "", "test_getZoneLocations"], [361, 3, 1, "", "test_sortZones"], [361, 3, 1, "", "test_summary"]], "armi.reactor.zones": [[362, 2, 1, "", "Zone"], [362, 2, 1, "", "Zones"]], "armi.reactor.zones.Zone": [[362, 4, 1, "", "VALID_TYPES"], [362, 3, 1, "", "addItem"], [362, 3, 1, "", "addItems"], [362, 3, 1, "", "addLoc"], [362, 3, 1, "", "addLocs"], [362, 3, 1, "", "removeItem"], [362, 3, 1, "", "removeItems"], [362, 3, 1, "", "removeLoc"], [362, 3, 1, "", "removeLocs"]], "armi.reactor.zones.Zones": [[362, 3, 1, "", "addZone"], [362, 3, 1, "", "addZones"], [362, 3, 1, "", "checkDuplicates"], [362, 3, 1, "", "findZoneItIsIn"], [362, 3, 1, "", "getAllLocations"], [362, 3, 1, "", "getZoneLocations"], [362, 5, 1, "", "names"], [362, 3, 1, "", "removeZone"], [362, 3, 1, "", "removeZones"], [362, 3, 1, "", "sortZones"], [362, 3, 1, "", "summary"]], "armi.runLog": [[363, 2, 1, "", "DeduplicationFilter"], [363, 2, 1, "", "NullLogger"], [363, 2, 1, "", "RunLogger"], [363, 1, 1, "", "close"], [363, 1, 1, "", "concatenateLogs"], [363, 1, 1, "", "createLogDir"], [363, 1, 1, "", "debug"], [363, 1, 1, "", "error"], [363, 1, 1, "", "extra"], [363, 1, 1, "", "getVerbosity"], [363, 1, 1, "", "header"], [363, 1, 1, "", "important"], [363, 1, 1, "", "info"], [363, 1, 1, "", "logFactory"], [363, 1, 1, "", "raw"], [363, 1, 1, "", "setVerbosity"], [363, 1, 1, "", "warning"], [363, 1, 1, "", "warningReport"]], "armi.runLog.DeduplicationFilter": [[363, 3, 1, "", "filter"]], "armi.runLog.NullLogger": [[363, 3, 1, "", "addHandler"]], "armi.runLog.RunLogger": [[363, 4, 1, "", "FMT"], [363, 3, 1, "", "allowStopDuplicates"], [363, 3, 1, "", "close"], [363, 3, 1, "", "flush"], [363, 3, 1, "", "getDuplicatesFilter"], [363, 3, 1, "", "log"], [363, 3, 1, "", "setVerbosity"], [363, 3, 1, "", "warningReport"], [363, 3, 1, "", "write"]], "armi.settings": [[365, 0, 0, "-", "caseSettings"], [366, 0, 0, "-", "fwSettings"], [364, 1, 1, "", "isBoolSetting"], [364, 1, 1, "", "promptForSettingsFile"], [364, 1, 1, "", "recursivelyLoadSettingsFiles"], [371, 0, 0, "-", "setting"], [372, 0, 0, "-", "settingsIO"], [373, 0, 0, "-", "settingsValidation"], [374, 0, 0, "-", "tests"]], "armi.settings.caseSettings": [[365, 2, 1, "", "Settings"]], "armi.settings.caseSettings.Settings": [[365, 5, 1, "", "caseTitle"], [365, 4, 1, "", "defaultCaseTitle"], [365, 3, 1, "", "duplicate"], [365, 5, 1, "", "environmentSettings"], [365, 3, 1, "", "failOnLoad"], [365, 3, 1, "", "getSetting"], [365, 3, 1, "", "getSettingsSetByUser"], [365, 3, 1, "", "initLogVerbosity"], [365, 5, 1, "", "inputDirectory"], [365, 3, 1, "", "items"], [365, 3, 1, "", "keys"], [365, 3, 1, "", "loadFromInputFile"], [365, 3, 1, "", "loadFromString"], [365, 3, 1, "", "modified"], [365, 3, 1, "", "registerUserPlugins"], [365, 3, 1, "", "revertToDefaults"], [365, 3, 1, "", "setModuleVerbosities"], [365, 3, 1, "", "updateEnvironmentSettingsFrom"], [365, 3, 1, "", "values"], [365, 3, 1, "", "writeToYamlFile"], [365, 3, 1, "", "writeToYamlStream"]], "armi.settings.fwSettings": [[367, 0, 0, "-", "databaseSettings"], [366, 1, 1, "", "getFrameworkSettings"], [368, 0, 0, "-", "globalSettings"], [369, 0, 0, "-", "reportSettings"], [370, 0, 0, "-", "tightCouplingSettings"]], "armi.settings.fwSettings.databaseSettings": [[367, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.globalSettings": [[368, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.reportSettings": [[369, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.tightCouplingSettings": [[370, 2, 1, "", "TightCouplingSettingDef"], [370, 2, 1, "", "TightCouplingSettings"], [370, 1, 1, "", "serializeTightCouplingSettings"], [370, 1, 1, "", "tightCouplingSettingsValidator"]], "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef": [[370, 3, 1, "", "dump"]], "armi.settings.setting": [[371, 2, 1, "", "Default"], [371, 2, 1, "", "FlagListSetting"], [371, 2, 1, "", "Option"], [371, 2, 1, "", "Setting"]], "armi.settings.setting.Default": [[371, 4, 1, "", "settingName"], [371, 4, 1, "", "value"]], "armi.settings.setting.FlagListSetting": [[371, 3, 1, "", "dump"], [371, 3, 1, "", "schema"]], "armi.settings.setting.Option": [[371, 4, 1, "", "option"], [371, 4, 1, "", "settingName"]], "armi.settings.setting.Setting": [[371, 3, 1, "", "addOption"], [371, 3, 1, "", "addOptions"], [371, 3, 1, "", "changeDefault"], [371, 5, 1, "", "containedType"], [371, 5, 1, "", "default"], [371, 3, 1, "", "dump"], [371, 3, 1, "", "getCustomAttributes"], [371, 3, 1, "", "getDefaultAttributes"], [371, 3, 1, "", "isDefault"], [371, 5, 1, "", "offDefault"], [371, 3, 1, "", "revertToDefault"], [371, 3, 1, "", "setValue"], [371, 5, 1, "", "underlyingType"], [371, 5, 1, "", "value"]], "armi.settings.settingsIO": [[372, 2, 1, "", "Roots"], [372, 7, 1, "", "RunLogPromptCancel"], [372, 7, 1, "", "RunLogPromptUnresolvable"], [372, 2, 1, "", "SettingRenamer"], [372, 2, 1, "", "SettingsReader"], [372, 2, 1, "", "SettingsWriter"], [372, 1, 1, "", "prompt"]], "armi.settings.settingsIO.Roots": [[372, 4, 1, "", "CUSTOM"], [372, 4, 1, "", "VERSION"]], "armi.settings.settingsIO.SettingRenamer": [[372, 3, 1, "", "renameSetting"]], "armi.settings.settingsIO.SettingsReader": [[372, 2, 1, "", "SettingsInputFormat"], [372, 3, 1, "", "readFromFile"], [372, 3, 1, "", "readFromStream"]], "armi.settings.settingsIO.SettingsReader.SettingsInputFormat": [[372, 4, 1, "", "YAML"], [372, 3, 1, "", "fromExt"]], "armi.settings.settingsIO.SettingsWriter": [[372, 3, 1, "", "writeYaml"]], "armi.settings.settingsValidation": [[373, 2, 1, "", "Inspector"], [373, 2, 1, "", "Query"], [373, 1, 1, "", "createQueryRevertBadPathToDefault"], [373, 1, 1, "", "validateVersion"]], "armi.settings.settingsValidation.Inspector": [[373, 3, 1, "", "NO_ACTION"], [373, 3, 1, "", "addQuery"], [373, 3, 1, "", "addQueryBadLocationWillLikelyFail"], [373, 3, 1, "", "addQueryCurrentSettingMayNotSupportFeatures"], [373, 3, 1, "", "run"]], "armi.settings.settingsValidation.Query": [[373, 3, 1, "", "isCorrective"], [373, 3, 1, "", "resolve"]], "armi.settings.tests": [[375, 0, 0, "-", "test_inspectors"], [376, 0, 0, "-", "test_settings"], [377, 0, 0, "-", "test_settingsIO"]], "armi.settings.tests.test_inspectors": [[375, 2, 1, "", "TestInspector"]], "armi.settings.tests.test_inspectors.TestInspector": [[375, 3, 1, "", "test_assignCS"], [375, 3, 1, "", "test_callableCorrectionCheck"], [375, 3, 1, "", "test_changeOfCS"], [375, 3, 1, "", "test_checkForBothSimpleAndDetailedCyclesInputs"], [375, 3, 1, "", "test_correctCyclesToZeroBurnup"], [375, 3, 1, "", "test_createQueryRevertBadPathToDefault"], [375, 3, 1, "", "test_nonCorrectiveQuery"], [375, 3, 1, "", "test_overwriteSettingsCorrectiveQuery"], [375, 3, 1, "", "test_query"]], "armi.settings.tests.test_settings": [[376, 2, 1, "", "DummySettingPlugin1"], [376, 2, 1, "", "DummySettingPlugin2"], [376, 2, 1, "", "PluginAddsOptions"], [376, 2, 1, "", "TestAddingOptions"], [376, 2, 1, "", "TestFlagListSetting"], [376, 2, 1, "", "TestSettings"], [376, 2, 1, "", "TestSettings2"], [376, 2, 1, "", "TestSettingsUtils"], [376, 2, 1, "", "TestSettingsValidationUtils"]], "armi.settings.tests.test_settings.DummySettingPlugin1": [[376, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.DummySettingPlugin2": [[376, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.PluginAddsOptions": [[376, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.TestAddingOptions": [[376, 3, 1, "", "test_addingOptions"]], "armi.settings.tests.test_settings.TestFlagListSetting": [[376, 3, 1, "", "test_flagListSetting"], [376, 3, 1, "", "test_invalidFlagListTypeError"]], "armi.settings.tests.test_settings.TestSettings": [[376, 3, 1, "", "test_metaData"], [376, 3, 1, "", "test_updateEnvironmentSettingsFrom"]], "armi.settings.tests.test_settings.TestSettings2": [[376, 3, 1, "", "test_copySetting"], [376, 3, 1, "", "test_copySettingNotDefault"], [376, 3, 1, "", "test_csWorks"], [376, 3, 1, "", "test_default"], [376, 3, 1, "", "test_empty"], [376, 3, 1, "", "test_getFailures"], [376, 3, 1, "", "test_getSettingsSetByUser"], [376, 3, 1, "", "test_listCoercion"], [376, 3, 1, "", "test_listsMutable"], [376, 3, 1, "", "test_modified"], [376, 3, 1, "", "test_pluginSettings"], [376, 3, 1, "", "test_pluginValidatorsAreDiscovered"], [376, 3, 1, "", "test_schemaChecksType"], [376, 3, 1, "", "test_setModuleVerbosities"], [376, 3, 1, "", "test_settingIsOkayToGrab"], [376, 3, 1, "", "test_typeDetection"]], "armi.settings.tests.test_settings.TestSettingsUtils": [[376, 3, 1, "", "test_prompt"], [376, 3, 1, "", "test_recursiveScan"]], "armi.settings.tests.test_settings.TestSettingsValidationUtils": [[376, 3, 1, "", "test_validateVersion"]], "armi.settings.tests.test_settingsIO": [[377, 2, 1, "", "MockEntryPoint"], [377, 2, 1, "", "SettingArgsTests"], [377, 2, 1, "", "SettingsFailureTests"], [377, 2, 1, "", "SettingsReaderTests"], [377, 2, 1, "", "SettingsRenameTests"], [377, 2, 1, "", "SettingsWriterTests"]], "armi.settings.tests.test_settingsIO.MockEntryPoint": [[377, 4, 1, "", "name"], [377, 4, 1, "", "settingsArgument"]], "armi.settings.tests.test_settingsIO.SettingArgsTests": [[377, 3, 1, "", "test_cannotLoadSettingsAfterParsingCommandLineSetting"], [377, 3, 1, "", "test_commandLineSetting"]], "armi.settings.tests.test_settingsIO.SettingsFailureTests": [[377, 3, 1, "", "test_invalidFile"], [377, 3, 1, "", "test_loadFromYamlFailsOnBadNames"], [377, 3, 1, "", "test_settingsObjSetting"]], "armi.settings.tests.test_settingsIO.SettingsReaderTests": [[377, 3, 1, "", "test_basicSettingsReader"], [377, 3, 1, "", "test_readFromFile"]], "armi.settings.tests.test_settingsIO.SettingsRenameTests": [[377, 4, 1, "", "testSettings"], [377, 3, 1, "", "test_collidingRenames"], [377, 3, 1, "", "test_rename"]], "armi.settings.tests.test_settingsIO.SettingsWriterTests": [[377, 3, 1, "", "test_errorSettingsWriter"], [377, 3, 1, "", "test_writeFull"], [377, 3, 1, "", "test_writeMedium"], [377, 3, 1, "", "test_writeShort"], [377, 3, 1, "", "test_writeYaml"]], "armi.tests": [[378, 2, 1, "", "ArmiTestHelper"], [378, 2, 1, "", "Fixture"], [378, 1, 1, "", "fixture"], [378, 1, 1, "", "getEmptyCartesianReactor"], [378, 1, 1, "", "getEmptyHexReactor"], [379, 0, 0, "-", "mockRunLogs"], [378, 1, 1, "", "rebaselineTextComparisons"], [380, 0, 0, "-", "refSmallReactorShuffleLogic"], [378, 1, 1, "", "requires_fixture"], [381, 0, 0, "-", "test_apps"], [382, 0, 0, "-", "test_armiTestHelper"], [383, 0, 0, "-", "test_cartesian"], [384, 0, 0, "-", "test_context"], [385, 0, 0, "-", "test_interfaces"], [386, 0, 0, "-", "test_lwrInputs"], [387, 0, 0, "-", "test_mpiActions"], [388, 0, 0, "-", "test_mpiFeatures"], [389, 0, 0, "-", "test_mpiParameters"], [390, 0, 0, "-", "test_notebooks"], [391, 0, 0, "-", "test_plugins"], [392, 0, 0, "-", "test_runLog"], [393, 0, 0, "-", "test_tests"], [394, 0, 0, "-", "test_user_plugins"]], "armi.tests.ArmiTestHelper": [[378, 3, 1, "", "compareFilesLineByLine"], [378, 3, 1, "", "compareLines"]], "armi.tests.mockRunLogs": [[379, 2, 1, "", "BufferLog"], [379, 2, 1, "", "LogCounter"]], "armi.tests.mockRunLogs.BufferLog": [[379, 3, 1, "", "clearSingleWarnings"], [379, 3, 1, "", "emptyStdout"], [379, 3, 1, "", "getStderrValue"], [379, 3, 1, "", "getStdout"], [379, 3, 1, "", "log"]], "armi.tests.mockRunLogs.LogCounter": [[379, 3, 1, "", "log"]], "armi.tests.refSmallReactorShuffleLogic": [[380, 2, 1, "", "EquilibriumShuffler"], [380, 1, 1, "", "getFactorList"]], "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler": [[380, 3, 1, "", "chooseSwaps"]], "armi.tests.test_apps": [[381, 2, 1, "", "TestApps"], [381, 2, 1, "", "TestArmiHighLevel"], [381, 2, 1, "", "TestPlugin1"], [381, 2, 1, "", "TestPlugin2"], [381, 2, 1, "", "TestPlugin3"], [381, 2, 1, "", "TestPlugin4"]], "armi.tests.test_apps.TestApps": [[381, 3, 1, "", "test_disableFutureConfigures"], [381, 3, 1, "", "test_getParamRenames"], [381, 3, 1, "", "test_getParamRenamesInvalids"], [381, 3, 1, "", "test_getSettings"], [381, 3, 1, "", "test_isStableReleaseVersion"], [381, 3, 1, "", "test_registerPluginFlags"], [381, 3, 1, "", "test_splashText"], [381, 3, 1, "", "test_splashTextDifferentApp"], [381, 3, 1, "", "test_version"]], "armi.tests.test_apps.TestArmiHighLevel": [[381, 3, 1, "", "test_getDefaultPluginManager"], [381, 3, 1, "", "test_main"], [381, 3, 1, "", "test_overConfigured"]], "armi.tests.test_apps.TestPlugin1": [[381, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin2": [[381, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin3": [[381, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin4": [[381, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_armiTestHelper": [[382, 2, 1, "", "TestArmiTestHelper"]], "armi.tests.test_armiTestHelper.TestArmiTestHelper": [[382, 3, 1, "", "test_compareFilesFail"], [382, 3, 1, "", "test_compareFilesSucceedFalseNegative"], [382, 3, 1, "", "test_compareFilesSucess"]], "armi.tests.test_cartesian": [[383, 2, 1, "", "CartesianReactorTests"]], "armi.tests.test_cartesian.CartesianReactorTests": [[383, 3, 1, "", "test_custom"]], "armi.tests.test_context": [[384, 2, 1, "", "TestContextSerial"]], "armi.tests.test_context.TestContextSerial": [[384, 3, 1, "", "test_nonNoneData"], [384, 3, 1, "", "test_rank"]], "armi.tests.test_interfaces": [[385, 2, 1, "", "DummyInterface"], [385, 2, 1, "", "TestCodeInterface"], [385, 2, 1, "", "TestTextProcessor"], [385, 2, 1, "", "TestTightCoupler"]], "armi.tests.test_interfaces.DummyInterface": [[385, 4, 1, "", "function"], [385, 4, 1, "", "name"]], "armi.tests.test_interfaces.TestCodeInterface": [[385, 3, 1, "", "test_distributable"], [385, 3, 1, "", "test_duplicate"], [385, 3, 1, "", "test_enabled"], [385, 3, 1, "", "test_isRequestedDetailPoint"], [385, 3, 1, "", "test_nameContains"], [385, 3, 1, "", "test_preDistributeState"]], "armi.tests.test_interfaces.TestTextProcessor": [[385, 3, 1, "", "test_fsearch"], [385, 3, 1, "", "test_fsearch_text"]], "armi.tests.test_interfaces.TestTightCoupler": [[385, 3, 1, "", "test_couplerActive"], [385, 3, 1, "", "test_getListDimension"], [385, 3, 1, "", "test_isConverged"], [385, 3, 1, "", "test_isConvergedRuntimeError"], [385, 3, 1, "", "test_isConvergedValueError"], [385, 3, 1, "", "test_storePreviousIterationValue"], [385, 3, 1, "", "test_storePreviousIterationValueException"]], "armi.tests.test_lwrInputs": [[386, 2, 1, "", "C5G7ReactorTests"]], "armi.tests.test_lwrInputs.C5G7ReactorTests": [[386, 3, 1, "", "test_loadC5G7"]], "armi.tests.test_mpiActions": [[387, 2, 1, "", "MpiIterTests"], [387, 2, 1, "", "QueueActionsTests"], [387, 1, 1, "", "passer"]], "armi.tests.test_mpiActions.MpiIterTests": [[387, 3, 1, "", "test_diagnosePickleErrorTestReactor"], [387, 3, 1, "", "test_excessProcesses"], [387, 3, 1, "", "test_mpiIter"], [387, 3, 1, "", "test_parallel"], [387, 3, 1, "", "test_perfectBalancing"], [387, 3, 1, "", "test_runActionsDistributeStateAction"], [387, 3, 1, "", "test_runActionsDistributionAction"], [387, 3, 1, "", "test_serialGather"], [387, 3, 1, "", "test_typicalBalancing"]], "armi.tests.test_mpiActions.QueueActionsTests": [[387, 3, 1, "", "test_disableForExclusiveTasks"], [387, 3, 1, "", "test_makeQueue"]], "armi.tests.test_mpiFeatures": [[388, 2, 1, "", "BcastAction1"], [388, 2, 1, "", "BcastAction2"], [388, 2, 1, "", "FailingInterface1"], [388, 2, 1, "", "FailingInterface2"], [388, 2, 1, "", "FailingInterface3"], [388, 2, 1, "", "MockInterface"], [388, 2, 1, "", "MpiDistributeStateTests"], [388, 2, 1, "", "MpiOperatorTests"], [388, 2, 1, "", "MpiPathToolsTests"], [388, 2, 1, "", "TestContextMpi"]], "armi.tests.test_mpiFeatures.BcastAction1": [[388, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.BcastAction2": [[388, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.FailingInterface1": [[388, 3, 1, "", "interactEveryNode"], [388, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface2": [[388, 3, 1, "", "interactEveryNode"], [388, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface3": [[388, 3, 1, "", "fail"], [388, 3, 1, "", "interactEveryNode"], [388, 4, 1, "", "name"], [388, 3, 1, "", "workerOperate"]], "armi.tests.test_mpiFeatures.MockInterface": [[388, 3, 1, "", "interactInit"], [388, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.MpiDistributeStateTests": [[388, 3, 1, "", "test_compileResults"], [388, 3, 1, "", "test_distributeInterfaces"], [388, 3, 1, "", "test_distributeReactor"], [388, 3, 1, "", "test_distributeSettings"], [388, 3, 1, "", "test_distributeState"]], "armi.tests.test_mpiFeatures.MpiOperatorTests": [[388, 3, 1, "", "test_basicOperatorMPI"], [388, 3, 1, "", "test_finalizeInteract"], [388, 3, 1, "", "test_primaryCritical"], [388, 3, 1, "", "test_primaryException"]], "armi.tests.test_mpiFeatures.MpiPathToolsTests": [[388, 3, 1, "", "test_cleanPathMpi"]], "armi.tests.test_mpiFeatures.TestContextMpi": [[388, 3, 1, "", "test_nonNoneData"], [388, 3, 1, "", "test_rank"]], "armi.tests.test_mpiParameters": [[389, 2, 1, "", "MockSyncPC"], [389, 2, 1, "", "SynchronizationTests"], [389, 1, 1, "", "makeComp"]], "armi.tests.test_mpiParameters.MockSyncPC": [[389, 4, 1, "", "pDefs"], [389, 4, 1, "", "pb"]], "armi.tests.test_mpiParameters.SynchronizationTests": [[389, 3, 1, "", "test_conflictsMaintainWithStateRetainer"], [389, 3, 1, "", "test_noConflicts"], [389, 3, 1, "", "test_withConflicts"], [389, 3, 1, "", "test_withConflictsButSameValue"]], "armi.tests.test_notebooks": [[390, 2, 1, "", "NotebookTests"], [390, 1, 1, "", "runNotebook"]], "armi.tests.test_notebooks.NotebookTests": [[390, 3, 1, "", "test_runDataModel"], [390, 3, 1, "", "test_runParamSweep"]], "armi.tests.test_plugins": [[391, 2, 1, "", "PluginFlags1"], [391, 2, 1, "", "SillyAxialExpansionChanger"], [391, 2, 1, "", "SillyAxialPlugin"], [391, 2, 1, "", "TestPlugin"], [391, 2, 1, "", "TestPluginBasics"], [391, 2, 1, "", "TestPluginRegistration"]], "armi.tests.test_plugins.PluginFlags1": [[391, 3, 1, "", "defineFlags"]], "armi.tests.test_plugins.SillyAxialPlugin": [[391, 3, 1, "", "getAxialExpansionChanger"]], "armi.tests.test_plugins.TestPlugin": [[391, 4, 1, "", "plugin"], [391, 3, 1, "", "test_defineBlueprintsSections"], [391, 3, 1, "", "test_exposeInterfaces"]], "armi.tests.test_plugins.TestPluginBasics": [[391, 3, 1, "", "test_defineParameters"], [391, 3, 1, "", "test_exposeInterfaces"], [391, 3, 1, "", "test_pluginsExposeInterfaces"]], "armi.tests.test_plugins.TestPluginRegistration": [[391, 3, 1, "", "test_axialExpansionHook"], [391, 3, 1, "", "test_defineFlags"]], "armi.tests.test_runLog": [[392, 2, 1, "", "TestRunLog"], [392, 2, 1, "", "TestRunLogger"]], "armi.tests.test_runLog.TestRunLog": [[392, 3, 1, "", "test_callingStartLogMultipleTimes"], [392, 3, 1, "", "test_closeLogging"], [392, 3, 1, "", "test_concatenateLogs"], [392, 3, 1, "", "test_createLogDir"], [392, 3, 1, "", "test_getWhiteSpace"], [392, 3, 1, "", "test_invalidSetVerbosityByString"], [392, 3, 1, "", "test_parentRunLogging"], [392, 3, 1, "", "test_setVerbosity"], [392, 3, 1, "", "test_setVerbosityBeforeStartLog"], [392, 3, 1, "", "test_setVerbosityFromInteger"], [392, 3, 1, "", "test_setVerbosityFromString"], [392, 3, 1, "", "test_verbosityOutOfRange"], [392, 3, 1, "", "test_warningReport"], [392, 3, 1, "", "test_warningReportInvalid"]], "armi.tests.test_runLog.TestRunLogger": [[392, 3, 1, "", "test_allowStopDuplicates"], [392, 3, 1, "", "test_getDuplicatesFilter"], [392, 3, 1, "", "test_write"]], "armi.tests.test_tests": [[393, 2, 1, "", "TestCompareFiles"]], "armi.tests.test_tests.TestCompareFiles": [[393, 3, 1, "", "test_compareFileLine"]], "armi.tests.test_user_plugins": [[394, 2, 1, "", "TestUserPlugins"], [394, 2, 1, "", "UpInterface"], [394, 2, 1, "", "UserPluginBadDefineParameterRenames"], [394, 2, 1, "", "UserPluginBadDefinesSettings"], [394, 2, 1, "", "UserPluginFlags"], [394, 2, 1, "", "UserPluginFlags2"], [394, 2, 1, "", "UserPluginFlags3"], [394, 2, 1, "", "UserPluginOnProcessCoreLoading"], [394, 2, 1, "", "UserPluginWithInterface"]], "armi.tests.test_user_plugins.TestUserPlugins": [[394, 3, 1, "", "test_registerRepeatedUserPlugins"], [394, 3, 1, "", "test_registerUserPlugins"], [394, 3, 1, "", "test_registerUserPluginsAbsPath"], [394, 3, 1, "", "test_registerUserPluginsFromSettings"], [394, 3, 1, "", "test_userPluginOnProcessCoreLoading"], [394, 3, 1, "", "test_userPluginWithInterfaces"], [394, 3, 1, "", "test_userPluginsFlags"], [394, 3, 1, "", "test_validateUserPluginLimitations"]], "armi.tests.test_user_plugins.UpInterface": [[394, 3, 1, "", "interactEveryNode"], [394, 4, 1, "", "name"]], "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames": [[394, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_user_plugins.UserPluginBadDefinesSettings": [[394, 3, 1, "", "defineSettings"]], "armi.tests.test_user_plugins.UserPluginFlags": [[394, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags2": [[394, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags3": [[394, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading": [[394, 3, 1, "", "onProcessCoreLoading"]], "armi.tests.test_user_plugins.UserPluginWithInterface": [[394, 3, 1, "", "exposeInterfaces"]], "armi.utils": [[395, 2, 1, "", "MergeableDict"], [395, 2, 1, "", "MyPickler"], [396, 0, 0, "-", "asciimaps"], [395, 1, 1, "", "capStrLen"], [395, 1, 1, "", "classesInHierarchy"], [397, 0, 0, "-", "codeTiming"], [395, 1, 1, "", "copyWithoutBlocking"], [395, 1, 1, "", "createFormattedStrWithDelimiter"], [398, 0, 0, "-", "customExceptions"], [399, 0, 0, "-", "densityTools"], [400, 0, 0, "-", "directoryChangers"], [401, 0, 0, "-", "directoryChangersMpi"], [395, 1, 1, "", "doTestPickleOnAllContents2"], [402, 0, 0, "-", "dynamicImporter"], [403, 0, 0, "-", "flags"], [395, 1, 1, "", "getAvailabilityFactors"], [395, 1, 1, "", "getBurnSteps"], [395, 1, 1, "", "getCumulativeNodeNum"], [395, 1, 1, "", "getCycleLengths"], [395, 1, 1, "", "getCycleNames"], [395, 1, 1, "", "getCycleNodeFromCumulativeNode"], [395, 1, 1, "", "getCycleNodeFromCumulativeStep"], [395, 1, 1, "", "getFileSHA1Hash"], [395, 1, 1, "", "getMaxBurnSteps"], [395, 1, 1, "", "getNodesPerCycle"], [395, 1, 1, "", "getPowerFractions"], [395, 1, 1, "", "getPreviousTimeNode"], [395, 1, 1, "", "getStepLengths"], [395, 1, 1, "", "hasBurnup"], [405, 0, 0, "-", "hexagon"], [406, 0, 0, "-", "iterables"], [395, 1, 1, "", "list2str"], [407, 0, 0, "-", "mathematics"], [408, 0, 0, "-", "outputCache"], [409, 0, 0, "-", "parsing"], [410, 0, 0, "-", "pathTools"], [395, 1, 1, "", "plotMatrix"], [411, 0, 0, "-", "plotting"], [395, 1, 1, "", "prependToList"], [412, 0, 0, "-", "properties"], [413, 0, 0, "-", "reportPlotting"], [395, 1, 1, "", "safeCopy"], [395, 1, 1, "", "slantSplit"], [414, 0, 0, "-", "tabulate"], [415, 0, 0, "-", "tests"], [437, 0, 0, "-", "textProcessors"], [438, 0, 0, "-", "triangle"], [395, 1, 1, "", "tryPickleOnAllContents"], [395, 1, 1, "", "tryPickleOnAllContents3"], [439, 0, 0, "-", "units"], [395, 1, 1, "", "userName"]], "armi.utils.MergeableDict": [[395, 3, 1, "", "merge"]], "armi.utils.MyPickler": [[395, 3, 1, "", "save"]], "armi.utils.asciimaps": [[396, 2, 1, "", "AsciiMap"], [396, 2, 1, "", "AsciiMapCartesian"], [396, 2, 1, "", "AsciiMapHexFullFlatsUp"], [396, 2, 1, "", "AsciiMapHexFullTipsUp"], [396, 2, 1, "", "AsciiMapHexThirdFlatsUp"], [396, 1, 1, "", "asciiMapFromGeomAndDomain"]], "armi.utils.asciimaps.AsciiMap": [[396, 4, 1, "", "asciiLabelByIndices"], [396, 4, 1, "", "asciiLines"], [396, 4, 1, "", "asciiOffsets"], [396, 3, 1, "", "fromReactor"], [396, 3, 1, "", "gridContentsToAscii"], [396, 3, 1, "", "items"], [396, 3, 1, "", "keys"], [396, 3, 1, "", "readAscii"], [396, 3, 1, "", "writeAscii"]], "armi.utils.codeTiming": [[397, 2, 1, "", "MasterTimer"], [397, 1, 1, "", "getMasterTimer"], [397, 1, 1, "", "timed"]], "armi.utils.codeTiming.MasterTimer": [[397, 3, 1, "", "endTimer"], [397, 3, 1, "", "getActiveTimers"], [397, 3, 1, "", "getMasterTimer"], [397, 3, 1, "", "getTimer"], [397, 3, 1, "", "report"], [397, 3, 1, "", "startAll"], [397, 3, 1, "", "startTimer"], [397, 3, 1, "", "stopAll"], [397, 3, 1, "", "time"], [397, 3, 1, "", "timeline"]], "armi.utils.customExceptions": [[398, 7, 1, "", "InputError"], [398, 7, 1, "", "InvalidSettingsFileError"], [398, 7, 1, "", "InvalidSettingsStopProcess"], [398, 7, 1, "", "NonexistentSetting"], [398, 7, 1, "", "NonexistentSettingsFileError"], [398, 7, 1, "", "SettingException"], [398, 1, 1, "", "important"], [398, 1, 1, "", "info"], [398, 1, 1, "", "warn"], [398, 1, 1, "", "warn_when_root"]], "armi.utils.densityTools": [[399, 1, 1, "", "applyIsotopicsMix"], [399, 1, 1, "", "calculateMassDensity"], [399, 1, 1, "", "calculateNumberDensity"], [399, 1, 1, "", "expandElementalMassFracsToNuclides"], [399, 1, 1, "", "expandElementalNuclideMassFracs"], [399, 1, 1, "", "filterNuclideList"], [399, 1, 1, "", "formatMaterialCard"], [399, 1, 1, "", "getChemicals"], [399, 1, 1, "", "getMassFractions"], [399, 1, 1, "", "getMassInGrams"], [399, 1, 1, "", "getNDensFromMasses"], [399, 1, 1, "", "normalizeNuclideList"]], "armi.utils.directoryChangers": [[400, 2, 1, "", "DirectoryChanger"], [400, 2, 1, "", "ForcedCreationDirectoryChanger"], [400, 2, 1, "", "TemporaryDirectoryChanger"], [400, 1, 1, "", "directoryChangerFactory"]], "armi.utils.directoryChangers.DirectoryChanger": [[400, 3, 1, "", "close"], [400, 3, 1, "", "moveFiles"], [400, 3, 1, "", "open"], [400, 3, 1, "", "retrieveFiles"]], "armi.utils.directoryChangers.TemporaryDirectoryChanger": [[400, 3, 1, "", "GetRandomDirectory"]], "armi.utils.directoryChangersMpi": [[401, 2, 1, "", "MpiDirectoryChanger"]], "armi.utils.directoryChangersMpi.MpiDirectoryChanger": [[401, 3, 1, "", "close"], [401, 3, 1, "", "open"]], "armi.utils.dynamicImporter": [[402, 1, 1, "", "getEntireFamilyTree"]], "armi.utils.flags": [[403, 2, 1, "", "Flag"], [403, 2, 1, "", "auto"]], "armi.utils.flags.Flag": [[403, 3, 1, "", "extend"], [403, 3, 1, "", "fields"], [403, 3, 1, "", "from_bytes"], [403, 3, 1, "", "sortedFields"], [403, 3, 1, "", "to_bytes"], [403, 3, 1, "", "width"]], "armi.utils.hexagon": [[405, 1, 1, "", "area"], [405, 1, 1, "", "corners"], [405, 1, 1, "", "getIndexOfRotatedCell"], [405, 1, 1, "", "numPositionsInRing"], [405, 1, 1, "", "numRingsToHoldNumCells"], [405, 1, 1, "", "pitch"], [405, 1, 1, "", "side"], [405, 1, 1, "", "totalPositionsUpToRing"]], "armi.utils.iterables": [[406, 2, 1, "", "Sequence"], [406, 1, 1, "", "chunk"], [406, 1, 1, "", "flatten"], [406, 1, 1, "", "packBinaryStrings"], [406, 1, 1, "", "packHexStrings"], [406, 1, 1, "", "pivot"], [406, 1, 1, "", "split"], [406, 1, 1, "", "unpackBinaryStrings"], [406, 1, 1, "", "unpackHexStrings"]], "armi.utils.iterables.Sequence": [[406, 3, 1, "", "append"], [406, 3, 1, "", "copy"], [406, 3, 1, "", "drop"], [406, 3, 1, "", "extend"], [406, 3, 1, "", "select"], [406, 3, 1, "", "transform"]], "armi.utils.mathematics": [[407, 1, 1, "", "average1DWithinTolerance"], [407, 1, 1, "", "convertToSlice"], [407, 1, 1, "", "efmt"], [407, 1, 1, "", "expandRepeatedFloats"], [407, 1, 1, "", "findClosest"], [407, 1, 1, "", "findNearestValue"], [407, 1, 1, "", "findNearestValueAndIndex"], [407, 1, 1, "", "fixThreeDigitExp"], [407, 1, 1, "", "getFloat"], [407, 1, 1, "", "getStepsFromValues"], [407, 1, 1, "", "isMonotonic"], [407, 1, 1, "", "linearInterpolation"], [407, 1, 1, "", "minimizeScalarFunc"], [407, 1, 1, "", "newtonsMethod"], [407, 1, 1, "", "parabolaFromPoints"], [407, 1, 1, "", "parabolicInterpolation"], [407, 1, 1, "", "relErr"], [407, 1, 1, "", "resampleStepwise"], [407, 1, 1, "", "rotateXY"]], "armi.utils.outputCache": [[408, 1, 1, "", "cacheCall"], [408, 1, 1, "", "deleteCache"], [408, 1, 1, "", "retrieveOutput"], [408, 1, 1, "", "store"]], "armi.utils.parsing": [[409, 1, 1, "", "datetimeFromStr"], [409, 1, 1, "", "parseValue"], [409, 1, 1, "", "tryLiteralEval"]], "armi.utils.pathTools": [[410, 1, 1, "", "armiAbsPath"], [410, 1, 1, "", "cleanPath"], [410, 1, 1, "", "copyOrWarn"], [410, 1, 1, "", "importCustomPyModule"], [410, 1, 1, "", "isAccessible"], [410, 1, 1, "", "isFilePathNewer"], [410, 1, 1, "", "moduleAndAttributeExist"], [410, 1, 1, "", "separateModuleAndAttribute"]], "armi.utils.plotting": [[411, 2, 1, "", "DepthSlider"], [411, 1, 1, "", "close"], [411, 1, 1, "", "colorGenerator"], [411, 1, 1, "", "makeHistogram"], [411, 1, 1, "", "plotAssemblyTypes"], [411, 1, 1, "", "plotBlockDepthMap"], [411, 1, 1, "", "plotBlockDiagram"], [411, 1, 1, "", "plotBlockFlux"], [411, 1, 1, "", "plotFaceMap"], [411, 1, 1, "", "plotNucXs"]], "armi.utils.plotting.DepthSlider": [[411, 3, 1, "", "next"], [411, 3, 1, "", "previous"], [411, 3, 1, "", "set_val"], [411, 3, 1, "", "updatePageDepthColor"]], "armi.utils.properties": [[412, 7, 1, "", "ImmutablePropertyError"], [412, 1, 1, "", "areEqual"], [412, 1, 1, "", "createImmutableProperty"], [412, 1, 1, "", "lockImmutableProperties"], [412, 1, 1, "", "numpyHackForEqual"], [412, 1, 1, "", "unlockImmutableProperties"]], "armi.utils.reportPlotting": [[413, 1, 1, "", "buVsTime"], [413, 1, 1, "", "createPlotMetaData"], [413, 1, 1, "", "keffVsTime"], [413, 1, 1, "", "movesVsCycle"], [413, 1, 1, "", "plotAxialProfile"], [413, 1, 1, "", "plotCoreOverviewRadar"], [413, 1, 1, "", "plotReactorPerformance"], [413, 1, 1, "", "valueVsTime"], [413, 1, 1, "", "xsHistoryVsTime"]], "armi.utils.tabulate": [[414, 2, 1, "", "DataRow"], [414, 2, 1, "", "Iterable"], [414, 2, 1, "", "Line"], [414, 2, 1, "", "Sized"], [414, 2, 1, "", "TableFormat"], [414, 2, 1, "", "TextWrapper"], [414, 2, 1, "", "chain"], [414, 1, 1, "", "namedtuple"], [414, 2, 1, "", "partial"], [414, 1, 1, "", "reduce"], [414, 1, 1, "", "tabulate"], [414, 2, 1, "", "zip_longest"]], "armi.utils.tabulate.DataRow": [[414, 4, 1, "", "begin"], [414, 4, 1, "", "end"], [414, 4, 1, "", "sep"]], "armi.utils.tabulate.Line": [[414, 4, 1, "", "begin"], [414, 4, 1, "", "end"], [414, 4, 1, "", "hline"], [414, 4, 1, "", "sep"]], "armi.utils.tabulate.TableFormat": [[414, 4, 1, "", "datarow"], [414, 4, 1, "", "headerrow"], [414, 4, 1, "", "lineabove"], [414, 4, 1, "", "linebelow"], [414, 4, 1, "", "linebelowheader"], [414, 4, 1, "", "linebetweenrows"], [414, 4, 1, "", "padding"], [414, 4, 1, "", "withHeaderHide"]], "armi.utils.tabulate.TextWrapper": [[414, 3, 1, "", "fill"], [414, 4, 1, "", "sentence_end_re"], [414, 4, 1, "", "unicode_whitespace_trans"], [414, 4, 1, "", "uspace"], [414, 4, 1, "", "wordsep_re"], [414, 4, 1, "", "wordsep_simple_re"], [414, 3, 1, "", "wrap"], [414, 4, 1, "", "x"]], "armi.utils.tabulate.chain": [[414, 3, 1, "", "from_iterable"]], "armi.utils.tabulate.partial": [[414, 4, 1, "", "args"], [414, 4, 1, "", "func"], [414, 4, 1, "", "keywords"]], "armi.utils.tests": [[416, 0, 0, "-", "test_asciimaps"], [417, 0, 0, "-", "test_codeTiming"], [418, 0, 0, "-", "test_custom_exceptions"], [419, 0, 0, "-", "test_densityTools"], [420, 0, 0, "-", "test_directoryChangers"], [421, 0, 0, "-", "test_directoryChangersMpi"], [422, 0, 0, "-", "test_flags"], [423, 0, 0, "-", "test_hexagon"], [424, 0, 0, "-", "test_iterables"], [425, 0, 0, "-", "test_mathematics"], [426, 0, 0, "-", "test_outputCache"], [427, 0, 0, "-", "test_parsing"], [428, 0, 0, "-", "test_pathTools"], [429, 0, 0, "-", "test_plotting"], [430, 0, 0, "-", "test_properties"], [431, 0, 0, "-", "test_reportPlotting"], [432, 0, 0, "-", "test_tabulate"], [433, 0, 0, "-", "test_textProcessors"], [434, 0, 0, "-", "test_triangle"], [435, 0, 0, "-", "test_units"], [436, 0, 0, "-", "test_utils"]], "armi.utils.tests.test_asciimaps": [[416, 2, 1, "", "TestAsciiMaps"]], "armi.utils.tests.test_asciimaps.TestAsciiMaps": [[416, 3, 1, "", "test_cartesian"], [416, 3, 1, "", "test_flatHexBases"], [416, 3, 1, "", "test_hexFullCornersUp"], [416, 3, 1, "", "test_hexFullCornersUpSpotCheck"], [416, 3, 1, "", "test_hexFullFlat"], [416, 3, 1, "", "test_hexFullFlatsUp"], [416, 3, 1, "", "test_hexSmallFlat"], [416, 3, 1, "", "test_hexThird"], [416, 3, 1, "", "test_hexWithEmptyRow"], [416, 3, 1, "", "test_hexWithHoles"], [416, 3, 1, "", "test_troublesomeHexThird"]], "armi.utils.tests.test_codeTiming": [[417, 2, 1, "", "CodeTimingTest"]], "armi.utils.tests.test_codeTiming.CodeTimingTest": [[417, 3, 1, "", "test_alternate_usages"], [417, 3, 1, "", "test_master"], [417, 3, 1, "", "test_messy_starts_and_stops"], [417, 3, 1, "", "test_method_definitions"], [417, 3, 1, "", "test_property_access"]], "armi.utils.tests.test_custom_exceptions": [[418, 2, 1, "", "CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions.CustomExceptionTests": [[418, 3, 1, "", "exampleImportantMessage"], [418, 3, 1, "", "exampleInfoMessage"], [418, 3, 1, "", "exampleWarnMessage"], [418, 3, 1, "", "exampleWarnWhenRootMessage"], [418, 3, 1, "", "test_important_decorator"], [418, 3, 1, "", "test_info_decorator"], [418, 3, 1, "", "test_warn_decorator"], [418, 3, 1, "", "test_warn_when_root_decorator"]], "armi.utils.tests.test_densityTools": [[419, 2, 1, "", "TestDensityTools"], [419, 2, 1, "", "UraniumOxide"]], "armi.utils.tests.test_densityTools.TestDensityTools": [[419, 3, 1, "", "test_applyIsotopicsMix"], [419, 3, 1, "", "test_calculateNumberDensity"], [419, 3, 1, "", "test_expandElement"], [419, 3, 1, "", "test_expandElementalMassFracsToNuclides"], [419, 3, 1, "", "test_expandElementalZeroMassFrac"], [419, 3, 1, "", "test_formatMaterialCard"], [419, 3, 1, "", "test_getChemicals"], [419, 3, 1, "", "test_getMassFractions"], [419, 3, 1, "", "test_getMassInGrams"], [419, 3, 1, "", "test_getNDensFromMasses"], [419, 3, 1, "", "test_normalizeNuclideList"]], "armi.utils.tests.test_densityTools.UraniumOxide": [[419, 3, 1, "", "density"], [419, 3, 1, "", "pseudoDensity"]], "armi.utils.tests.test_directoryChangers": [[420, 7, 1, "", "ExpectedException"], [420, 2, 1, "", "TestDirectoryChangers"]], "armi.utils.tests.test_directoryChangers.TestDirectoryChangers": [[420, 3, 1, "", "test_change_to_nonexisting_fails"], [420, 3, 1, "", "test_change_to_nonexisting_works_forced"], [420, 3, 1, "", "test_exception"], [420, 3, 1, "", "test_exception_disabled"], [420, 3, 1, "", "test_file_retrieval"], [420, 3, 1, "", "test_file_retrieval_missing_file"], [420, 3, 1, "", "test_mpiAction"], [420, 3, 1, "", "test_mpiActionFailsOnNonexistentPath"], [420, 3, 1, "", "test_temporary_cleans"]], "armi.utils.tests.test_directoryChangersMpi": [[421, 2, 1, "", "RevealYourDirectory"], [421, 2, 1, "", "TestMPI"]], "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory": [[421, 3, 1, "", "invokeHook"]], "armi.utils.tests.test_directoryChangersMpi.TestMPI": [[421, 3, 1, "", "test_MpiDirectoryChanger"]], "armi.utils.tests.test_flags": [[422, 2, 1, "", "ExampleFlag"], [422, 2, 1, "", "TestFlag"]], "armi.utils.tests.test_flags.ExampleFlag": [[422, 4, 1, "", "BAR"], [422, 4, 1, "", "BAZ"], [422, 4, 1, "", "FOO"]], "armi.utils.tests.test_flags.TestFlag": [[422, 3, 1, "", "test_auto"], [422, 3, 1, "", "test_bitwise"], [422, 3, 1, "", "test_bool"], [422, 3, 1, "", "test_collision_creation"], [422, 3, 1, "", "test_collision_extension"], [422, 3, 1, "", "test_extend"], [422, 3, 1, "", "test_getitem"], [422, 3, 1, "", "test_hashable"], [422, 3, 1, "", "test_inclusion"], [422, 3, 1, "", "test_iteration"]], "armi.utils.tests.test_hexagon": [[423, 2, 1, "", "TestHexagon"]], "armi.utils.tests.test_hexagon.TestHexagon": [[423, 4, 1, "", "N_FUZZY_DRAWS"], [423, 3, 1, "", "test_hexagon_area"], [423, 3, 1, "", "test_indexWithNoRotation"], [423, 3, 1, "", "test_numPositionsInRing"], [423, 3, 1, "", "test_positionsUpToRing"], [423, 3, 1, "", "test_rotateFuzzy"], [423, 3, 1, "", "test_rotatedCellCenter"], [423, 3, 1, "", "test_rotatedCellIndexErrors"], [423, 3, 1, "", "test_rotatedCellOrientationErrors"], [423, 3, 1, "", "test_rotatedFirstRing"]], "armi.utils.tests.test_iterables": [[424, 2, 1, "", "TestIterables"]], "armi.utils.tests.test_iterables.TestIterables": [[424, 3, 1, "", "test_addingSequences"], [424, 3, 1, "", "test_appendSequence"], [424, 3, 1, "", "test_arrayPivot"], [424, 3, 1, "", "test_chunk"], [424, 3, 1, "", "test_copySequence"], [424, 3, 1, "", "test_extendSequence"], [424, 3, 1, "", "test_flatten"], [424, 3, 1, "", "test_listPivot"], [424, 3, 1, "", "test_packingAndUnpackingBinaryStrings"], [424, 3, 1, "", "test_packingAndUnpackingHexStrings"], [424, 3, 1, "", "test_sequence"], [424, 3, 1, "", "test_sequenceInit"], [424, 3, 1, "", "test_split"]], "armi.utils.tests.test_mathematics": [[425, 2, 1, "", "TestMath"]], "armi.utils.tests.test_mathematics.TestMath": [[425, 3, 1, "", "test_average1DWithinTolerance"], [425, 3, 1, "", "test_average1DWithinToleranceInvalid"], [425, 3, 1, "", "test_convertToSlice"], [425, 3, 1, "", "test_efmt"], [425, 3, 1, "", "test_expandRepeatedFloats"], [425, 3, 1, "", "test_findClosest"], [425, 3, 1, "", "test_findNearestValue"], [425, 3, 1, "", "test_fixThreeDigitExp"], [425, 3, 1, "", "test_getFloat"], [425, 3, 1, "", "test_getStepsFromValues"], [425, 3, 1, "", "test_isMonotonic"], [425, 3, 1, "", "test_linearInterpolation"], [425, 3, 1, "", "test_minimizeScalarFunc"], [425, 3, 1, "", "test_newtonsMethod"], [425, 3, 1, "", "test_parabola"], [425, 3, 1, "", "test_parabolicInterpolation"], [425, 3, 1, "", "test_relErr"], [425, 3, 1, "", "test_resampleStepwiseAvg0"], [425, 3, 1, "", "test_resampleStepwiseAvg1"], [425, 3, 1, "", "test_resampleStepwiseAvg2"], [425, 3, 1, "", "test_resampleStepwiseAvg3"], [425, 3, 1, "", "test_resampleStepwiseAvg4"], [425, 3, 1, "", "test_resampleStepwiseAvg5"], [425, 3, 1, "", "test_resampleStepwiseAvg6"], [425, 3, 1, "", "test_resampleStepwiseAvg7"], [425, 3, 1, "", "test_resampleStepwiseAvgAllNones"], [425, 3, 1, "", "test_resampleStepwiseAvgComplicatedNone"], [425, 3, 1, "", "test_resampleStepwiseAvgNpArray"], [425, 3, 1, "", "test_resampleStepwiseAvgNpArrayAverage"], [425, 3, 1, "", "test_resampleStepwiseAvgOneNone"], [425, 3, 1, "", "test_resampleStepwiseSum0"], [425, 3, 1, "", "test_resampleStepwiseSum1"], [425, 3, 1, "", "test_resampleStepwiseSum2"], [425, 3, 1, "", "test_resampleStepwiseSum3"], [425, 3, 1, "", "test_resampleStepwiseSum4"], [425, 3, 1, "", "test_resampleStepwiseSum5"], [425, 3, 1, "", "test_resampleStepwiseSum6"], [425, 3, 1, "", "test_resampleStepwiseSum7"], [425, 3, 1, "", "test_resampleStepwiseSumAllNones"], [425, 3, 1, "", "test_resampleStepwiseSumOneNone"], [425, 3, 1, "", "test_rotateXY"]], "armi.utils.tests.test_outputCache": [[426, 2, 1, "", "TestOutputCache"]], "armi.utils.tests.test_outputCache.TestOutputCache": [[426, 3, 1, "", "test_deleteCache"], [426, 3, 1, "", "test_getCachedFolder"], [426, 3, 1, "", "test_hashFiles"], [426, 3, 1, "", "test_makeOutputManifest"], [426, 3, 1, "", "test_retrieveOutput"]], "armi.utils.tests.test_parsing": [[427, 2, 1, "", "LiteralEvalTest"]], "armi.utils.tests.test_parsing.LiteralEvalTest": [[427, 3, 1, "", "test_parseValue"], [427, 3, 1, "", "test_tryLiteralEval"]], "armi.utils.tests.test_pathTools": [[428, 2, 1, "", "PathToolsTests"]], "armi.utils.tests.test_pathTools.PathToolsTests": [[428, 3, 1, "", "test_cleanPathNoMpi"], [428, 3, 1, "", "test_importCustomModule"], [428, 3, 1, "", "test_isAccessible"], [428, 3, 1, "", "test_isFilePathNewer"], [428, 3, 1, "", "test_moduleAndAttributeExist"], [428, 3, 1, "", "test_separateModuleAndAttribute"]], "armi.utils.tests.test_plotting": [[429, 2, 1, "", "TestPatches"], [429, 2, 1, "", "TestPlotting"]], "armi.utils.tests.test_plotting.TestPatches": [[429, 3, 1, "", "test_makeAssemPatches"]], "armi.utils.tests.test_plotting.TestPlotting": [[429, 3, 1, "", "test_plotAssemblyTypes"], [429, 3, 1, "", "test_plotBlockFlux"], [429, 3, 1, "", "test_plotCartesianBlock"], [429, 3, 1, "", "test_plotDepthMap"], [429, 3, 1, "", "test_plotHexBlock"]], "armi.utils.tests.test_properties": [[430, 2, 1, "", "ImmutableClass"], [430, 2, 1, "", "ImmutablePropertyTests"]], "armi.utils.tests.test_properties.ImmutableClass": [[430, 3, 1, "", "initialize"], [430, 5, 1, "", "myNum"]], "armi.utils.tests.test_properties.ImmutablePropertyTests": [[430, 3, 1, "", "test_cannotAssignValueToImmutableProperty"], [430, 3, 1, "", "test_retreivingUnassignedValueRaisesError"], [430, 3, 1, "", "test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "armi.utils.tests.test_reportPlotting": [[431, 2, 1, "", "TestRadar"]], "armi.utils.tests.test_reportPlotting.TestRadar": [[431, 3, 1, "", "test_buVsTime"], [431, 3, 1, "", "test_createPlotMetaData"], [431, 3, 1, "", "test_keffVsTime"], [431, 3, 1, "", "test_movesVsCycle"], [431, 3, 1, "", "test_plotAxialProfile"], [431, 3, 1, "", "test_radar"], [431, 3, 1, "", "test_valueVsTime"], [431, 3, 1, "", "test_xsHistoryVsTime"]], "armi.utils.tests.test_tabulate": [[432, 2, 1, "", "TestTabulateAPI"], [432, 2, 1, "", "TestTabulateInputs"], [432, 2, 1, "", "TestTabulateInternal"], [432, 2, 1, "", "TestTabulateOutput"]], "armi.utils.tests.test_tabulate.TestTabulateAPI": [[432, 3, 1, "", "test_tabulateFormats"]], "armi.utils.tests.test_tabulate.TestTabulateInputs": [[432, 3, 1, "", "test_dictLike"], [432, 3, 1, "", "test_iterableOfEmpties"], [432, 3, 1, "", "test_iterableOfIterables"], [432, 3, 1, "", "test_iterableOfIterablesFirstrow"], [432, 3, 1, "", "test_iterableOfIterablesHeaders"], [432, 3, 1, "", "test_listBytes"], [432, 3, 1, "", "test_listOfDicts"], [432, 3, 1, "", "test_listOfDictsFirstrow"], [432, 3, 1, "", "test_listOfDictsKeys"], [432, 3, 1, "", "test_listOfDictsWithDictOfHeaders"], [432, 3, 1, "", "test_listOfDictsWithListOfHeaders"], [432, 3, 1, "", "test_listOfDictsWithMissingKeys"], [432, 3, 1, "", "test_listOfLists"], [432, 3, 1, "", "test_listOfListsFirstrow"], [432, 3, 1, "", "test_listOfListsKeys"], [432, 3, 1, "", "test_listOfNamedtuples"], [432, 3, 1, "", "test_listOfNamedtuplesKeys"], [432, 3, 1, "", "test_listOfOrdereddicts"], [432, 3, 1, "", "test_listOfUserdicts"], [432, 3, 1, "", "test_listOfUserdictsKeys"], [432, 3, 1, "", "test_numpy2d"], [432, 3, 1, "", "test_numpy2dFirstrow"], [432, 3, 1, "", "test_numpy2dKeys"], [432, 3, 1, "", "test_numpyRecordArray"], [432, 3, 1, "", "test_numpyRecordArrayHeaders"], [432, 3, 1, "", "test_numpyRecordArrayKeys"], [432, 3, 1, "", "test_tightCouplingExample"]], "armi.utils.tests.test_tabulate.TestTabulateInternal": [[432, 3, 1, "", "test_alignCellVeriticallyBottomMultiTextMultiplePad"], [432, 3, 1, "", "test_alignCellVeriticallyBottomSingleTextMultiplePad"], [432, 3, 1, "", "test_alignCellVeriticallyCenterMultiTextMultiplePad"], [432, 3, 1, "", "test_alignCellVeriticallyCenterSingleTextMultiplePad"], [432, 3, 1, "", "test_alignCellVeriticallyOneLineOnly"], [432, 3, 1, "", "test_alignCellVeriticallyTopMultiTextMultiplePad"], [432, 3, 1, "", "test_alignCellVeriticallyTopSingleTextMultiplePad"], [432, 3, 1, "", "test_alignColumnDecimal"], [432, 3, 1, "", "test_alignColumnDecimalWithIncorrectThousandSeparators"], [432, 3, 1, "", "test_alignColumnDecimalWithThousandSeparators"], [432, 3, 1, "", "test_alignColumnMultiline"], [432, 3, 1, "", "test_alignColumnNone"], [432, 3, 1, "", "test_assortedRareEdgeCases"], [432, 3, 1, "", "test_bool"], [432, 3, 1, "", "test_buildLine"], [432, 3, 1, "", "test_buildRow"], [432, 3, 1, "", "test_format"], [432, 3, 1, "", "test_isMultiline"], [432, 3, 1, "", "test_multilineWidth"], [432, 3, 1, "", "test_normalizeTabularData"], [432, 3, 1, "", "test_type"], [432, 3, 1, "", "test_visibleWidth"], [432, 3, 1, "", "test_wrapTextToColWidths"]], "armi.utils.tests.test_tabulate.TestTabulateOutput": [[432, 3, 1, "", "test_colAlignMulti"], [432, 3, 1, "", "test_colAlignMultiWithSepLine"], [432, 3, 1, "", "test_colAlignOrheadersAlignTooLong"], [432, 3, 1, "", "test_columnAlignment"], [432, 3, 1, "", "test_columnGlobalAndSpecificAlignment"], [432, 3, 1, "", "test_dictLikeWithIndex"], [432, 3, 1, "", "test_disableNumParseDefault"], [432, 3, 1, "", "test_disableNumParseList"], [432, 3, 1, "", "test_disableNumParseTrue"], [432, 3, 1, "", "test_emptyData"], [432, 3, 1, "", "test_emptyDataWithHeaders"], [432, 3, 1, "", "test_emptyDataWithoutHeaders"], [432, 3, 1, "", "test_floatConversions"], [432, 3, 1, "", "test_floatFmt"], [432, 3, 1, "", "test_floatFmtMulti"], [432, 3, 1, "", "test_github"], [432, 3, 1, "", "test_grid"], [432, 3, 1, "", "test_gridHeaderless"], [432, 3, 1, "", "test_gridMultiline"], [432, 3, 1, "", "test_gridMultilineHeaderless"], [432, 3, 1, "", "test_gridMultilineWithEmptyCells"], [432, 3, 1, "", "test_gridMultilineWithEmptyCellsHeaderless"], [432, 3, 1, "", "test_headersGlobalAndSpecificAlignment"], [432, 3, 1, "", "test_intFmt"], [432, 3, 1, "", "test_listOfListsWithIndex"], [432, 3, 1, "", "test_listOfListsWithIndexFirstrow"], [432, 3, 1, "", "test_listOfListsWithIndexWithSepLine"], [432, 3, 1, "", "test_listOfListsWithSuppliedIndex"], [432, 3, 1, "", "test_maxColWidthsingleValue"], [432, 3, 1, "", "test_maxcolwidthHonorDisableParsenum"], [432, 3, 1, "", "test_maxcolwidthPadTailingWidths"], [432, 3, 1, "", "test_missingVal"], [432, 3, 1, "", "test_missingValMulti"], [432, 3, 1, "", "test_noData"], [432, 3, 1, "", "test_noDataWithoutHeaders"], [432, 3, 1, "", "test_plain"], [432, 3, 1, "", "test_plainHeaderless"], [432, 3, 1, "", "test_plainMaxcolwidthAutowraps"], [432, 3, 1, "", "test_plainMaxcolwidthAutowrapsWithSep"], [432, 3, 1, "", "test_plainMultiline"], [432, 3, 1, "", "test_plainMultilineHeaderless"], [432, 3, 1, "", "test_plainMultilineWithEmptyCells"], [432, 3, 1, "", "test_plainMultilineWithEmptyCellsHeaderless"], [432, 3, 1, "", "test_plainMultilineWithLinks"], [432, 3, 1, "", "test_plainmaxHeaderColWidthsAutowraps"], [432, 3, 1, "", "test_pretty"], [432, 3, 1, "", "test_prettyHeaderless"], [432, 3, 1, "", "test_prettyMultiline"], [432, 3, 1, "", "test_prettyMultilineHeaderless"], [432, 3, 1, "", "test_prettyMultilineWithEmptyCells"], [432, 3, 1, "", "test_prettyMultilineWithEmptyCellsHeaderless"], [432, 3, 1, "", "test_prettyMultilineWithLinks"], [432, 3, 1, "", "test_readmeExampleWithSep"], [432, 3, 1, "", "test_rst"], [432, 3, 1, "", "test_rstHeaderless"], [432, 3, 1, "", "test_rstMultiline"], [432, 3, 1, "", "test_rstMultilineWithEmptyCells"], [432, 3, 1, "", "test_rstMultilineWithEmptyCellsHeaderless"], [432, 3, 1, "", "test_rstMultilineWithLinks"], [432, 3, 1, "", "test_rstWithEmptyValuesInFirstColumn"], [432, 3, 1, "", "test_simple"], [432, 3, 1, "", "test_simpleHeaderless"], [432, 3, 1, "", "test_simpleHeaderlessWithSepLine"], [432, 3, 1, "", "test_simpleMultiline"], [432, 3, 1, "", "test_simpleMultiline2"], [432, 3, 1, "", "test_simpleMultiline2WithSepLine"], [432, 3, 1, "", "test_simpleMultilineHeaderless"], [432, 3, 1, "", "test_simpleMultilineWithEmptyCells"], [432, 3, 1, "", "test_simpleMultilineWithEmptyCellsHeaderless"], [432, 3, 1, "", "test_simpleMultilineWithLinks"], [432, 3, 1, "", "test_simpleWithSepLine"]], "armi.utils.tests.test_textProcessors": [[433, 2, 1, "", "SequentialReaderTests"], [433, 2, 1, "", "YamlIncludeTest"]], "armi.utils.tests.test_textProcessors.SequentialReaderTests": [[433, 3, 1, "", "test_readFile"], [433, 3, 1, "", "test_readFileWithPattern"], [433, 4, 1, "", "textStream"]], "armi.utils.tests.test_textProcessors.YamlIncludeTest": [[433, 3, 1, "", "test_findIncludes"], [433, 3, 1, "", "test_resolveIncludes"], [433, 3, 1, "", "test_resolveIncludes_StringIO"]], "armi.utils.tests.test_triangle": [[434, 2, 1, "", "TestTriangle"]], "armi.utils.tests.test_triangle.TestTriangle": [[434, 3, 1, "", "test_checkIfPointIsInTriangle"], [434, 3, 1, "", "test_checkIfPointIsInTriangle2"], [434, 3, 1, "", "test_getTriangleArea"]], "armi.utils.tests.test_units": [[435, 2, 1, "", "TestUnits"]], "armi.utils.tests.test_units.TestUnits": [[435, 3, 1, "", "test_convertXtoPascal"], [435, 3, 1, "", "test_getTc"], [435, 3, 1, "", "test_getTemperature"], [435, 3, 1, "", "test_getTf"], [435, 3, 1, "", "test_getTk"], [435, 3, 1, "", "test_getTmev"], [435, 3, 1, "", "test_getXYLineParameters"], [435, 3, 1, "", "test_pressure_converter"], [435, 3, 1, "", "test_sanitizeAngle"]], "armi.utils.tests.test_utils": [[436, 2, 1, "", "CyclesSettingsTests"], [436, 2, 1, "", "TestGeneralUtils"]], "armi.utils.tests.test_utils.CyclesSettingsTests": [[436, 4, 1, "", "availabilityFactorsDetailedSolution"], [436, 4, 1, "", "availabilityFactorsSimpleSolution"], [436, 4, 1, "", "burnStepsDetailedSolution"], [436, 4, 1, "", "burnStepsSimpleSolution"], [436, 4, 1, "", "cycleLengthsDetailedSolution"], [436, 4, 1, "", "cycleLengthsSimpleSolution"], [436, 4, 1, "", "cycleNamesDetailedSolution"], [436, 4, 1, "", "cycleNamesSimpleSolution"], [436, 4, 1, "", "detailedCyclesSettings"], [436, 4, 1, "", "maxBurnStepsDetailedSolution"], [436, 4, 1, "", "maxBurnStepsSimpleSolution"], [436, 4, 1, "", "nodesPerCycleDetailedSolution"], [436, 4, 1, "", "nodesPerCycleSimpleSolution"], [436, 4, 1, "", "powerFractionsDetailedSolution"], [436, 4, 1, "", "powerFractionsSimpleSolution"], [436, 4, 1, "", "simpleCyclesSettings"], [436, 4, 1, "", "stepLengthsDetailedSolution"], [436, 4, 1, "", "stepLengthsSimpleSolution"], [436, 3, 1, "", "test_getAvailabilityFactors"], [436, 3, 1, "", "test_getBurnSteps"], [436, 3, 1, "", "test_getCumulativeNodeNum"], [436, 3, 1, "", "test_getCycleLengths"], [436, 3, 1, "", "test_getCycleNames"], [436, 3, 1, "", "test_getCycleNodeFromCumulativeNode"], [436, 3, 1, "", "test_getCycleNodeFromCumulativeStep"], [436, 3, 1, "", "test_getMaxBurnSteps"], [436, 3, 1, "", "test_getNodesPerCycle"], [436, 3, 1, "", "test_getPowerFractions"], [436, 3, 1, "", "test_getPreviousTimeNode"], [436, 3, 1, "", "test_getStepLengths"], [436, 3, 1, "", "test_hasBurnup"]], "armi.utils.tests.test_utils.TestGeneralUtils": [[436, 3, 1, "", "test_capStrLen"], [436, 3, 1, "", "test_classesInHierarchy"], [436, 3, 1, "", "test_codeTiming"], [436, 3, 1, "", "test_createFormattedStrWithDelimiter"], [436, 3, 1, "", "test_list2str"], [436, 3, 1, "", "test_mergeableDictionary"], [436, 3, 1, "", "test_plotMatrix"], [436, 3, 1, "", "test_prependToList"], [436, 3, 1, "", "test_safeCopy"], [436, 3, 1, "", "test_slantSplit"]], "armi.utils.textProcessors": [[437, 6, 1, "", "DECIMAL_PATTERN"], [437, 6, 1, "", "FLOATING_PATTERN"], [437, 2, 1, "", "FileMark"], [437, 6, 1, "", "SCIENTIFIC_PATTERN"], [437, 2, 1, "", "SequentialReader"], [437, 2, 1, "", "SequentialStringIOReader"], [437, 2, 1, "", "SmartList"], [437, 2, 1, "", "TextProcessor"], [437, 1, 1, "", "findYamlInclusions"], [437, 1, 1, "", "resolveMarkupInclusions"]], "armi.utils.textProcessors.SequentialReader": [[437, 3, 1, "", "consumeLine"], [437, 3, 1, "", "issueWarningOnFindingText"], [437, 3, 1, "", "raiseErrorOnFindingPattern"], [437, 3, 1, "", "raiseErrorOnFindingText"], [437, 3, 1, "", "searchForPattern"], [437, 3, 1, "", "searchForPatternOnNextLine"], [437, 3, 1, "", "searchForText"]], "armi.utils.textProcessors.SmartList": [[437, 3, 1, "", "close"], [437, 3, 1, "", "next"], [437, 3, 1, "", "seek"]], "armi.utils.textProcessors.TextProcessor": [[437, 3, 1, "", "checkErrors"], [437, 4, 1, "", "decimal"], [437, 3, 1, "", "errorChecking"], [437, 3, 1, "", "fsearch"], [437, 4, 1, "", "number"], [437, 3, 1, "", "reset"], [437, 4, 1, "", "scipat"]], "armi.utils.triangle": [[438, 1, 1, "", "checkIfPointIsInTriangle"], [438, 1, 1, "", "getTriangleArea"], [438, 1, 1, "", "getTriangleCentroid"]], "armi.utils.units": [[439, 1, 1, "", "convertAtmToPascal"], [439, 1, 1, "", "convertBarToPascal"], [439, 1, 1, "", "convertMmhgToPascal"], [439, 1, 1, "", "getTc"], [439, 1, 1, "", "getTemperature"], [439, 1, 1, "", "getTf"], [439, 1, 1, "", "getTk"], [439, 1, 1, "", "getTmev"], [439, 1, 1, "", "getXYLineParameters"], [439, 1, 1, "", "sanitizeAngle"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"armipackag": [0, 2, 3, 11, 21, 28, 32, 36, 39, 45, 47, 51, 56, 59, 72, 78, 117, 143, 147, 151, 155, 163, 164, 179, 195, 202, 208, 211, 214, 221, 225, 230, 235, 241, 245, 248, 250, 252, 255, 262, 269, 270, 272, 277, 281, 286, 293, 302, 309, 310, 317, 320, 332, 341, 350, 364, 366, 374, 378, 395, 415, 441, 451, 490], "note": [0, 1, 3, 5, 6, 7, 9, 14, 18, 19, 27, 46, 48, 49, 53, 54, 55, 73, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 101, 102, 103, 104, 109, 110, 111, 113, 114, 115, 138, 139, 140, 141, 150, 152, 153, 154, 158, 159, 162, 164, 165, 166, 170, 171, 172, 173, 174, 175, 178, 183, 190, 196, 197, 199, 200, 201, 203, 204, 206, 207, 210, 212, 213, 214, 215, 218, 219, 222, 223, 234, 235, 237, 238, 240, 242, 246, 249, 251, 253, 256, 263, 264, 280, 282, 285, 286, 289, 290, 291, 292, 302, 303, 304, 305, 307, 308, 312, 313, 314, 315, 316, 319, 321, 323, 327, 328, 334, 336, 337, 338, 339, 344, 347, 349, 352, 353, 359, 362, 365, 370, 371, 376, 378, 385, 395, 396, 399, 400, 401, 405, 407, 408, 410, 411, 429, 437, 438, 439, 451, 481, 482, 483, 484, 485], "subpackag": [0, 2, 3, 21, 36, 45, 47, 59, 78, 143, 151, 163, 164, 202, 211, 214, 225, 235, 241, 248, 252, 272, 281, 286, 309, 364, 395], "submodul": [0, 2, 3, 11, 21, 28, 32, 36, 39, 45, 47, 51, 56, 59, 72, 78, 117, 143, 147, 151, 155, 163, 164, 179, 195, 202, 208, 211, 214, 221, 225, 230, 235, 241, 245, 248, 250, 252, 255, 262, 270, 272, 277, 281, 286, 293, 302, 309, 310, 317, 320, 332, 341, 350, 364, 366, 374, 378, 395, 415, 488], "app": [1, 446, 488], "modul": [1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 271, 273, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 451], "bookkeep": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "db": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "when": 3, "updat": [3, 441, 480, 507], "version": [3, 451], "databas": [3, 18, 64, 486, 503], "revis": 3, "changelog": 3, "comparedb3": 4, "database3": 5, "databaseinterfac": 6, "factori": [7, 491], "jaggedarrai": 8, "layout": 9, "permiss": 10, "test": [11, 12, 13, 14, 15, 16, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 51, 52, 53, 56, 57, 58, 72, 73, 74, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 147, 148, 149, 155, 156, 157, 158, 159, 160, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 208, 209, 210, 221, 222, 223, 224, 230, 231, 232, 233, 245, 246, 247, 250, 251, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 270, 271, 277, 278, 293, 294, 295, 296, 297, 298, 299, 300, 301, 320, 321, 322, 323, 324, 325, 326, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 443, 450, 451], "test_comparedb3": 12, "test_database3": 13, "test_databaseinterfac": 14, "test_jaggedarrai": 15, "test_layout": 16, "typedef": 17, "historytrack": 18, "get": [18, 444, 479, 480, 507], "histori": [18, 479, 501, 503], "inform": 18, "us": [18, 164, 441, 447, 450, 479], "base": [18, 144, 151, 446, 488], "tracker": 18, "specifi": [18, 492], "paramet": [18, 227, 259, 274, 285, 341, 342, 343, 344, 345, 444, 450, 491, 496, 497, 498, 499, 506], "add": [18, 451], "eol": 18, "report": [18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 260, 449, 495, 501], "block": [18, 285, 451, 458, 463, 465, 492, 493, 497, 501, 504], "assembli": [18, 282, 492, 493, 496, 501], "track": 18, "maininterfac": 19, "memoryprofil": 20, "data": [22, 450, 490, 502], "html": [23, 449], "newreportutil": 24, "newreport": 25, "reportinterfac": 26, "reportingutil": 27, "test_newreport": 29, "test_report": 30, "snapshotinterfac": 31, "test_historytrack": 33, "test_memoryprofil": 34, "test_snapshot": 35, "visual": [36, 37, 38, 39, 40, 41, 42, 43, 44], "dumper": 37, "entrypoint": [38, 65], "test_vi": 40, "test_xdmf": 41, "util": [42, 234, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439], "vtk": 43, "limit": 43, "xdmf": [44, 488], "case": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 479, 501], "inputmodifi": [47, 48, 49, 50, 51, 52, 53], "neutronicsmodifi": 49, "pintypeinputmodifi": 50, "test_inputmodifi": 52, "test_pintypeinputmodifi": 53, "suit": 54, "suitebuild": 55, "test_cas": 57, "test_suitebuild": 58, "cli": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "checkinput": 60, "cleantemp": 61, "clone": 62, "comparecas": 63, "gridgui": 66, "migrateinput": 67, "modifi": [68, 486, 491], "reportsentrypoint": 69, "run": [70, 450, 488, 501], "runsuit": 71, "test_runentrypoint": 73, "test_runsuit": 74, "conftest": 75, "context": 76, "interfac": [77, 444, 488, 504], "materi": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 457, 472, 488, 489], "air": 79, "alloy200": 80, "b4c": 81, "be9": 82, "cah2": 83, "californium": 84, "concret": 85, "copper": 86, "c": 87, "custom": [88, 488, 493, 501], "graphit": 89, "hafnium": 90, "hastelloyn": 91, "ht9": 92, "inconel": 93, "inconel600": 94, "inconel625": 95, "inconel800": 96, "inconelpe16": 97, "inconelx750": 98, "lead": 99, "leadbismuth": 100, "lithium": [101, 490], "magnesium": 102, "mgo": 104, "mixtur": 105, "molybdenum": 106, "mox": [107, 493], "nz": 108, "potassium": 109, "scandiumoxid": 110, "sic": 111, "sodium": 112, "sodiumchlorid": 113, "sulfur": 114, "tzm": 115, "tantalum": 116, "test__init__": 118, "test_air": 119, "test_b4c": 120, "test_be9": 121, "test_graphit": 122, "test_lithium": 123, "test_materi": 124, "test_sic": 125, "test_sulfur": 126, "test_thoriumoxid": 127, "test_uzr": 128, "test_wat": 129, "thu": 130, "thorium": 131, "thoriumoxid": 132, "uthzr": 133, "uzr": 134, "uranium": 135, "uraniumoxid": 136, "void": 137, "water": 138, "yttriumoxid": 139, "zincoxid": 140, "zr": 141, "meta": 142, "migrat": [143, 144, 145, 146, 147, 148, 149], "m0_1_3": 145, "m0_1_6": 146, "test_m0_1_6": 148, "test_migration_bas": 149, "mpiaction": 150, "sampl": 150, "mpi": [150, 447], "action": 150, "workflow": 150, "nucdirectori": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162], "element": [151, 152, 449, 490], "nuclid": [151, 464, 490, 493, 501], "name": [151, 450, 501], "label": [151, 173], "id": 151, "indic": 151, "rapid": 151, "access": [151, 490, 495, 502], "list": [152, 472, 488], "nucdir": 153, "nuclidebas": 154, "test_el": 156, "test_nucdirectori": 157, "test_nuclidebas": 158, "test_thermalscatt": 159, "test_transmut": 160, "thermalscatt": 161, "transmut": [162, 475], "nucleardataio": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "cccc": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "system": [164, 479, 493, 501], "implement": [164, 446], "detail": [164, 446, 464, 501], "discuss": 164, "compx": 166, "dif3d": 167, "dlayx": 168, "fixsrc": 169, "gamiso": 170, "geodst": 171, "isotx": [172, 470], "nhflux": 174, "pmatrx": 175, "pwdint": 176, "rtflux": 177, "rzflux": 178, "test_cccc": 180, "test_compx": 181, "test_dif3d": 182, "test_dlayx": 183, "test_fixsrc": 184, "test_gamiso": 185, "test_geodst": 186, "test_isotx": 187, "test_label": 188, "test_nhflux": 189, "test_pmatrx": 190, "test_pwdint": 191, "test_rtflux": 192, "test_rzflux": 193, "nuclearfilemetadata": 194, "test_xscollect": 196, "test_xslibrari": 197, "test_xsnuclid": 198, "xscollect": 199, "xslibrari": 200, "xsnuclid": 201, "oper": [202, 203, 204, 205, 206, 207, 208, 209, 210, 444, 479, 501], "operatormpi": 204, "runtyp": 205, "settingsvalid": [206, 373], "snapshot": [207, 444], "test_operatorsnapshot": 209, "test_oper": 210, "physic": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 479, 488, 504], "histor": 211, "fun": 211, "fact": 211, "constant": [212, 335], "execut": [213, 226], "fuelcycl": [214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224], "assemblyrotationalgorithm": 215, "fuelhandlerfactori": 216, "fuelhandlerinterfac": 217, "fuelhandl": 218, "hexassemblyfuelmgmtutil": 219, "set": [220, 229, 261, 276, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 488, 492, 493, 501, 502, 503], "test_assemblyrotationalgorithm": 222, "test_fuelhandl": 223, "test_hexassemblyfuelmgmtutil": 224, "fuelperform": [225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "plugin": [228, 275, 280, 441, 444, 446, 488, 501], "test_execut": [231, 271], "test_fuelperformanceplugin": 232, "test_fuelperformanceutil": 233, "neutron": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "const": [236, 273], "crosssectiongroupmanag": 237, "crosssectionset": 238, "diffisotx": 239, "energygroup": 240, "fissionproductmodel": [241, 242, 243, 244, 245, 246, 247], "fissionproductmodelset": 243, "lumpedfissionproduct": 244, "test_fissionproductmodel": 246, "test_lumpedfissionproduct": 247, "globalflux": [248, 249, 250, 251], "globalfluxinterfac": 249, "test_globalfluxinterfac": 251, "latticephys": [252, 253, 254, 255, 256, 257], "latticephysicsinterfac": 253, "latticephysicswrit": 254, "test_latticeinterfac": 256, "test_latticewrit": 257, "macroxsgenerationinterfac": 258, "test_crosssectionmanag": 263, "test_crosssectionset": 264, "test_crosssectiont": 265, "test_energygroup": 266, "test_macroxsgenerationinterfac": 267, "test_neutronicsplugin": 268, "safeti": 269, "thermalhydraul": [272, 273, 274, 275, 276, 277, 278], "test_thermalhydraulicsplugin": 278, "pluginmanag": 279, "reactor": [281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 444, 459, 473, 474, 486, 491, 492, 493, 503, 506], "assemblyparamet": 283, "blockparamet": 284, "blueprint": [286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 444, 492, 493, 501, 503], "assemblyblueprint": 287, "blockblueprint": 288, "componentblueprint": 289, "gridblueprint": 290, "isotopicopt": 291, "reactorblueprint": 292, "test_assemblyblueprint": 294, "test_blockblueprint": 295, "test_blueprint": 296, "test_componentblueprint": 297, "test_customisotop": 298, "test_gridblueprint": 299, "test_materialmodif": 300, "test_reactorblueprint": 301, "compon": [302, 303, 304, 305, 306, 307, 463, 498, 501], "basicshap": 303, "complexshap": 304, "componentparamet": 306, "volumetricshap": 307, "composit": 308, "convert": [309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 444], "axialexpansionchang": [310, 311, 312, 313], "assemblyaxiallinkag": 311, "expansiondata": 313, "blockconvert": 314, "geometryconvert": 315, "meshconvert": 316, "parametersweep": [317, 318], "generalparametersweepconvert": 318, "pintypeblockconvert": 319, "test_axialexpansionchang": 321, "test_blockconvert": 322, "test_geometryconvert": 323, "test_meshconvert": 324, "test_pintypeblockconvert": 325, "test_uniformmesh": 326, "uniformmesh": 327, "requir": [327, 451, 479, 484], "core": [328, 492, 499], "excorestructur": 329, "flag": [330, 403, 493, 501], "geometri": [331, 458, 459], "grid": [332, 333, 334, 335, 336, 337, 338, 339, 340, 467, 468, 469, 493, 501], "axial": [333, 505], "cartesian": [334, 468], "hexagon": [337, 405], "locat": 338, "structuredgrid": 339, "thetarz": 340, "exampl": [341, 447, 501], "basic": 341, "usag": [341, 408, 414], "design": [341, 491], "consider": 341, "except": [342, 450], "parametercollect": 343, "parameterdefinit": 344, "resolvecollect": 345, "reactorparamet": 346, "spentfuelpool": 348, "systemlayoutinput": 349, "test_assembli": 351, "test_block": 352, "test_compon": 353, "test_composit": 354, "test_excorestructur": 355, "test_flag": [356, 422], "test_geometri": 357, "test_paramet": 358, "test_reactor": 359, "test_rz_reactor": 360, "test_zon": 361, "zone": 362, "runlog": [363, 451], "caseset": 365, "fwset": [366, 367, 368, 369, 370], "databaseset": 367, "globalset": 368, "reportset": 369, "tightcouplingset": 370, "settingsio": 372, "test_inspector": 375, "test_set": 376, "test_settingsio": 377, "mockrunlog": 379, "refsmallreactorshufflelog": 380, "test_app": 381, "test_armitesthelp": 382, "test_cartesian": 383, "test_context": 384, "test_interfac": 385, "test_lwrinput": 386, "test_mpiact": 387, "test_mpifeatur": 388, "test_mpiparamet": 389, "test_notebook": 390, "test_plugin": 391, "test_runlog": 392, "test_test": 393, "test_user_plugin": 394, "asciimap": 396, "codetim": 397, "customexcept": 398, "densitytool": 399, "directorychang": 400, "directorychangersmpi": 401, "dynamicimport": 402, "grideditor": 404, "iter": 406, "mathemat": 407, "outputcach": 408, "api": [408, 481, 484], "pars": [409, 414], "pathtool": 410, "plot": [411, 464, 470, 471, 474, 490], "properti": 412, "reportplot": 413, "tabul": 414, "tabl": [414, 449], "header": 414, "column": 414, "align": 414, "format": [414, 450, 488, 503], "number": [414, 486], "width": 414, "auto": 414, "line": 414, "wrap": 414, "test_asciimap": 416, "test_codetim": 417, "test_custom_except": 418, "test_densitytool": 419, "test_directorychang": 420, "test_directorychangersmpi": 421, "test_hexagon": 423, "test_iter": 424, "test_mathemat": 425, "test_outputcach": 426, "test_pars": 427, "test_pathtool": 428, "test_plot": 429, "test_properti": 430, "test_reportplot": 431, "test_tabul": 432, "test_textprocessor": 433, "test_triangl": 434, "test_unit": 435, "test_util": 436, "textprocessor": 437, "triangl": 438, "unit": [439, 450], "document": [441, 451], "build": [441, 473, 482, 492, 493], "link": [441, 479, 501], "from": [441, 470, 486, 496, 497, 498, 499, 506], "automat": [441, 463], "apidoc": 441, "namespac": 441, "galleri": [441, 452, 477, 494], "jupyt": 441, "notebook": 441, "entri": [442, 444, 488, 495], "point": [442, 444, 488, 495], "first": [443, 488], "time": [443, 460, 476], "contributor": 443, "guid": 443, "help": [443, 479], "want": 443, "submit": 443, "chang": [443, 481, 482, 484], "licens": [443, 451, 479], "tool": [443, 451], "framework": [444, 455, 462, 477, 490, 494, 496, 497, 498, 499, 506], "architectur": 444, "The": [444, 449, 479, 480, 489, 490, 493, 501, 503, 504, 507], "model": [444, 450, 486], "find": 444, "object": 444, "standard": [444, 450, 503], "stack": 444, "interact": 444, "hook": [444, 449], "ad": [444, 488], "new": [444, 451, 479, 482, 483, 484, 488], "how": [444, 490, 492], "call": 444, "develop": [445, 480, 507], "doc": [445, 500], "make": [446, 467, 468, 469, 488, 501], "head": 446, "up": [446, 490, 492, 493], "some": [446, 501, 502], "your": [446, 488], "own": 446, "applic": [446, 454, 461, 477, 494], "parallel": 447, "code": [447, 450, 480, 507], "commun": [447, 479], "crash": 447, "cours": 447, "within": [447, 450], "bcast": 447, "scatter": [447, 471], "A": [447, 491], "simplifi": 447, "approach": 447, "profil": 448, "getreportcont": 449, "what": [449, 482, 483, 488, 493], "i": [449, 451], "reportcont": 449, "section": [449, 501], "imag": 449, "timeseri": 449, "summari": 449, "practic": 450, "black": 450, "address": 450, "ruff": 450, "warn": 450, "remov": 450, "comment": 450, "out": 450, "avoid": 450, "hard": 450, "global": [450, 504], "keyword": 450, "convent": 450, "meaning": 450, "gener": 450, "quick": [450, 479], "refer": 450, "common": 450, "prefer": 450, "shorter": 450, "method": 450, "repeat": 450, "public": 450, "should": 450, "have": 450, "docstr": 450, "import": 450, "statement": 450, "order": 450, "don": [450, 451], "t": [450, 451], "creat": [450, 488], "nake": 450, "input": [450, 473, 480, 492, 493, 501, 507], "file": [450, 488, 492, 493, 501, 503], "do": 450, "": [450, 482, 483], "infrastructur": 451, "good": 451, "commit": 451, "messag": 451, "pull": 451, "request": 451, "One": 451, "idea": 451, "pr": 451, "open": 451, "until": 451, "readi": 451, "It": 451, "watch": 451, "releas": [451, 481, 482, 483, 484, 485], "depend": 451, "manag": [451, 486, 492, 493, 501], "pyproject": 451, "toml": 451, "third": 451, "parti": 451, "log": 451, "duplic": 451, "level": 451, "analysi": [453, 456, 477, 479, 494], "write": 457, "mcnp": 457, "card": 457, "hex": [458, 459, 467], "rz": [458, 459], "convers": [458, 459], "comput": [460, 463, 465, 476], "volum": 463, "fraction": 463, "thermal": [463, 488, 493, 505], "expans": [463, 505], "chart": [464, 490], "more": 464, "reaction": [465, 475], "rate": 465, "theta": 469, "r": 469, "z": 469, "multi": [470, 471], "group": [470, 471], "x": 470, "matrix": 471, "librari": [472, 480, 489, 507], "programmat": 473, "facemap": 474, "decai": 475, "glossari": 478, "start": [479, 488], "background": 479, "coupl": [479, 504], "autom": 479, "capabl": 479, "research": 479, "scientist": 479, "nuclear": 479, "startup": 479, "engin": 479, "vendor": 479, "enthusiast": 479, "disclaim": 479, "instal": [480, 507], "prerequisit": [480, 507], "right": [480, 507], "python": [480, 488, 507], "command": [480, 507], "prepar": [480, 507], "virtual": [480, 507], "environ": [480, 501, 507], "step": [480, 507], "0": [480, 481, 482, 483, 484, 507], "pip": [480, 507], "option": [480, 507], "1": [480, 481, 482, 484, 486, 507], "2": [480, 481, 482, 507], "repositori": [480, 507], "verifi": [480, 507], "setup": [480, 507], "gui": [480, 501, 507], "output": [480, 488, 503, 507], "v0": [481, 482, 483, 484], "7": [481, 482, 490], "bug": [481, 482, 483, 484], "fix": [481, 482, 483, 484], "6": [481, 482], "deprec": 481, "bugfix": 481, "5": [481, 482], "user": [481, 500], "face": 481, "enhanc": 481, "backend": 481, "4": [481, 482, 484], "3": [481, 482, 483, 493], "hotfix": 481, "9": 482, "8": 482, "backward": 482, "incompat": 482, "qualiti": [483, 484], "work": [483, 484], "featur": 484, "affect": 484, "hand": 486, "termin": 486, "initi": 486, "explor": [486, 490], "quiz": 486, "question": 486, "state": [486, 502, 503], "densiti": 486, "save": 486, "disk": 486, "fuel": [486, 492, 493, 501], "load": [486, 503], "tutori": 487, "regist": 488, "defin": [488, 490, 492, 493, 501], "class": 488, "v": 488, "ar": [488, 490, 492], "again": 488, "kernel": 488, "dummi": 488, "flux": [488, 504], "hydraul": 488, "debug": 488, "window": 488, "tip": [488, 501], "yet": 488, "anoth": 488, "wai": 488, "why": 488, "__main__": 488, "py": 488, "check": 488, "fanci": 488, "bonu": 488, "hoc": 488, "userplugin": 488, "individu": 490, "attribut": 490, "mani": 490, "total": 490, "look": 490, "u": 490, "235": 490, "li": 490, "sweep": 491, "simpl": 491, "one": 491, "dimension": 491, "full": 491, "post": 491, "process": 491, "result": 491, "fast": 492, "non": 492, "radial": [492, 505], "shield": 492, "reflector": 492, "control": 492, "plenum": 492, "arrang": 492, "map": 492, "isotop": [493, 501], "vector": 493, "uo2": 493, "moder": 493, "d": 493, "definit": 493, "ok": 493, "so": 493, "now": 493, "fuelperformanceplugin": 497, "thermalhydraulicsplugin": 497, "neutronicsplugin": [497, 499], "yaml": 501, "clicker": 501, "tab": 501, "special": 501, "kinet": 501, "cycl": 501, "restart": 501, "type": 501, "pin": 501, "lattic": 501, "behavior": 501, "advanc": 501, "topic": 501, "overlap": 501, "shape": 501, "area": 501, "modif": 501, "put": 501, "all": 501, "togeth": 501, "unshap": 501, "swapassembli": 501, "dischargeswap": 501, "swapcascad": 501, "choos": 501, "move": 501, "converg": 501, "diverg": 501, "branch": 501, "search": 501, "variabl": 502, "interest": 502, "info": 502, "extract": 503, "structur": 503, "loos": 504, "tight": 504, "eigenvalu": 504, "wise": 504, "power": 504, "contract": 505}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"armi package": [[0, "module-armi"]], "Notes": [[0, null], [1, null], [1, null], [1, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [5, null], [5, null], [5, null], [5, null], [5, null], [6, null], [6, null], [6, null], [6, null], [6, null], [7, null], [9, null], [9, null], [14, null], [18, null], [18, null], [18, null], [19, null], [27, null], [46, null], [46, null], [46, null], [46, null], [46, null], [46, null], [48, null], [49, null], [53, null], [54, null], [54, null], [55, null], [73, null], [76, null], [76, null], [76, null], [77, null], [77, null], [77, null], [77, null], [77, null], [77, null], [77, null], [77, null], [77, null], [78, null], [79, null], [79, null], [80, null], [80, null], [81, null], [81, null], [81, null], [82, null], [86, null], [87, null], [88, null], [89, null], [91, null], [92, null], [94, null], [95, null], [96, null], [98, null], [101, null], [102, null], [103, null], [103, null], [103, null], [103, null], [103, null], [103, null], [103, null], [103, null], [103, null], [103, null], [103, null], [104, null], [109, null], [110, null], [110, null], [111, null], [113, null], [113, null], [114, null], [115, null], [138, null], [138, null], [138, null], [138, null], [138, null], [138, null], [138, null], [139, null], [139, null], [140, null], [141, null], [150, null], [150, null], [150, null], [150, null], [150, null], [150, null], [150, null], [150, null], [152, null], [152, null], [152, null], [153, null], [154, null], [154, null], [154, null], [154, null], [154, null], [154, null], [154, null], [154, null], [154, null], [154, null], [158, null], [159, null], [162, null], [162, null], [162, null], [162, null], [164, null], [165, null], [165, null], [165, null], [165, null], [165, null], [165, null], [165, null], [165, null], [165, null], [165, null], [165, null], [166, null], [166, null], [170, null], [171, null], [172, null], [172, null], [172, null], [172, null], [173, null], [174, null], [174, null], [174, null], [175, null], [178, null], [183, null], [190, null], [196, null], [196, null], [197, null], [199, null], [199, null], [199, null], [199, null], [199, null], [200, null], [200, null], [201, null], [201, null], [201, null], [201, null], [203, null], [203, null], [203, null], [203, null], [203, null], [203, null], [203, null], [204, null], [204, null], [206, null], [207, null], [210, null], [212, null], [213, null], [214, null], [215, null], [215, null], [218, null], [218, null], [218, null], [218, null], [218, null], [218, null], [218, null], [218, null], [219, null], [219, null], [219, null], [222, null], [223, null], [234, null], [235, null], [237, null], [237, null], [237, null], [237, null], [237, null], [237, null], [237, null], [237, null], [238, null], [238, null], [238, null], [238, null], [238, null], [238, null], [240, null], [242, null], [242, null], [242, null], [246, null], [249, null], [249, null], [251, null], [253, null], [253, null], [253, null], [256, null], [256, null], [263, null], [263, null], [264, null], [280, null], [280, null], [280, null], [280, null], [280, null], [280, null], [280, null], [280, null], [280, null], [280, null], [282, null], [282, null], [282, null], [282, null], [282, null], [282, null], [282, null], [282, null], [282, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [286, null], [286, null], [289, null], [290, null], [290, null], [291, null], [291, null], [291, null], [292, null], [292, null], [302, null], [302, null], [302, null], [302, null], [303, null], [303, null], [303, null], [303, null], [303, null], [304, null], [305, null], [305, null], [305, null], [305, null], [305, null], [305, null], [305, null], [305, null], [305, null], [307, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [313, null], [313, null], [313, null], [313, null], [314, null], [314, null], [314, null], [314, null], [315, null], [315, null], [315, null], [315, null], [315, null], [316, null], [319, null], [319, null], [321, null], [321, null], [321, null], [321, null], [321, null], [321, null], [321, null], [321, null], [321, null], [321, null], [323, null], [327, null], [327, null], [327, null], [327, null], [327, null], [327, null], [327, null], [328, null], [328, null], [328, null], [328, null], [328, null], [328, null], [328, null], [328, null], [328, null], [328, null], [328, null], [328, null], [328, null], [334, null], [334, null], [334, null], [336, null], [337, null], [337, null], [337, null], [337, null], [337, null], [338, null], [339, null], [339, null], [344, null], [344, null], [344, null], [344, null], [344, null], [347, null], [349, null], [349, null], [352, null], [352, null], [352, null], [353, null], [353, null], [359, null], [359, null], [362, null], [362, null], [365, null], [365, null], [365, null], [365, null], [365, null], [370, null], [370, null], [370, null], [371, null], [371, null], [376, null], [378, null], [385, null], [395, null], [395, null], [395, null], [395, null], [395, null], [395, null], [395, null], [395, null], [395, null], [395, null], [395, null], [395, null], [396, null], [399, null], [400, null], [401, null], [405, null], [405, null], [405, null], [405, null], [407, null], [407, null], [408, null], [408, null], [408, null], [408, null], [410, null], [410, null], [411, null], [411, null], [411, null], [429, null], [437, null], [437, null], [437, null], [437, null], [437, null], [437, null], [438, null], [438, null], [439, null]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [3, "subpackages"], [21, "subpackages"], [36, "subpackages"], [45, "subpackages"], [47, "subpackages"], [59, "subpackages"], [78, "subpackages"], [143, "subpackages"], [151, "subpackages"], [163, "subpackages"], [164, "subpackages"], [202, "subpackages"], [211, "subpackages"], [214, "subpackages"], [225, "subpackages"], [235, "subpackages"], [241, "subpackages"], [248, "subpackages"], [252, "subpackages"], [272, "subpackages"], [281, "subpackages"], [286, "subpackages"], [309, "subpackages"], [364, "subpackages"], [395, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [11, "submodules"], [21, "submodules"], [28, "submodules"], [32, "submodules"], [36, "submodules"], [39, "submodules"], [45, "submodules"], [47, "submodules"], [51, "submodules"], [56, "submodules"], [59, "submodules"], [72, "submodules"], [78, "submodules"], [117, "submodules"], [143, "submodules"], [147, "submodules"], [151, "submodules"], [155, "submodules"], [163, "submodules"], [164, "submodules"], [179, "submodules"], [195, "submodules"], [202, "submodules"], [208, "submodules"], [211, "submodules"], [214, "submodules"], [221, "submodules"], [225, "submodules"], [230, "submodules"], [235, "submodules"], [241, "submodules"], [245, "submodules"], [248, "submodules"], [250, "submodules"], [252, "submodules"], [255, "submodules"], [262, "submodules"], [270, "submodules"], [272, "submodules"], [277, "submodules"], [281, "submodules"], [286, "submodules"], [293, "submodules"], [302, "submodules"], [309, "submodules"], [310, "submodules"], [317, "submodules"], [320, "submodules"], [332, "submodules"], [341, "submodules"], [350, "submodules"], [364, "submodules"], [366, "submodules"], [374, "submodules"], [378, "submodules"], [395, "submodules"], [415, "submodules"]], "armi.apps module": [[1, "module-armi.apps"]], "armi.bookkeeping package": [[2, "module-armi.bookkeeping"]], "armi.bookkeeping.db package": [[3, "module-armi.bookkeeping.db"]], "When updating a db version": [[3, "when-updating-a-db-version"]], "Database revision changelog": [[3, "database-revision-changelog"]], "armi.bookkeeping.db.compareDB3 module": [[4, "module-armi.bookkeeping.db.compareDB3"]], "armi.bookkeeping.db.database3 module": [[5, "module-armi.bookkeeping.db.database3"]], "armi.bookkeeping.db.databaseInterface module": [[6, "module-armi.bookkeeping.db.databaseInterface"]], "armi.bookkeeping.db.factory module": [[7, "module-armi.bookkeeping.db.factory"]], "armi.bookkeeping.db.jaggedArray module": [[8, "module-armi.bookkeeping.db.jaggedArray"]], "armi.bookkeeping.db.layout module": [[9, "module-armi.bookkeeping.db.layout"]], "armi.bookkeeping.db.permissions module": [[10, "module-armi.bookkeeping.db.permissions"]], "armi.bookkeeping.db.tests package": [[11, "module-armi.bookkeeping.db.tests"]], "armi.bookkeeping.db.tests.test_comparedb3 module": [[12, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "armi.bookkeeping.db.tests.test_database3 module": [[13, "module-armi.bookkeeping.db.tests.test_database3"]], "armi.bookkeeping.db.tests.test_databaseInterface module": [[14, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "armi.bookkeeping.db.tests.test_jaggedArray module": [[15, "module-armi.bookkeeping.db.tests.test_jaggedArray"]], "armi.bookkeeping.db.tests.test_layout module": [[16, "module-armi.bookkeeping.db.tests.test_layout"]], "armi.bookkeeping.db.typedefs module": [[17, "module-armi.bookkeeping.db.typedefs"]], "armi.bookkeeping.historyTracker module": [[18, "module-armi.bookkeeping.historyTracker"]], "Getting history information": [[18, "getting-history-information"]], "Using the database-based history trackers": [[18, "using-the-database-based-history-trackers"]], "Specifying parameters to add to the EOL history report": [[18, "specifying-parameters-to-add-to-the-eol-history-report"]], "Specifying blocks and assemblies to track": [[18, "specifying-blocks-and-assemblies-to-track"]], "armi.bookkeeping.mainInterface module": [[19, "module-armi.bookkeeping.mainInterface"]], "armi.bookkeeping.memoryProfiler module": [[20, "module-armi.bookkeeping.memoryProfiler"]], "armi.bookkeeping.report package": [[21, "module-armi.bookkeeping.report"]], "armi.bookkeeping.report.data module": [[22, "module-armi.bookkeeping.report.data"]], "armi.bookkeeping.report.html module": [[23, "module-armi.bookkeeping.report.html"]], "armi.bookkeeping.report.newReportUtils module": [[24, "module-armi.bookkeeping.report.newReportUtils"]], "armi.bookkeeping.report.newReports module": [[25, "module-armi.bookkeeping.report.newReports"]], "armi.bookkeeping.report.reportInterface module": [[26, "module-armi.bookkeeping.report.reportInterface"]], "armi.bookkeeping.report.reportingUtils module": [[27, "module-armi.bookkeeping.report.reportingUtils"]], "armi.bookkeeping.report.tests package": [[28, "module-armi.bookkeeping.report.tests"]], "armi.bookkeeping.report.tests.test_newReport module": [[29, "module-armi.bookkeeping.report.tests.test_newReport"]], "armi.bookkeeping.report.tests.test_report module": [[30, "module-armi.bookkeeping.report.tests.test_report"]], "armi.bookkeeping.snapshotInterface module": [[31, "module-armi.bookkeeping.snapshotInterface"]], "armi.bookkeeping.tests package": [[32, "module-armi.bookkeeping.tests"]], "armi.bookkeeping.tests.test_historyTracker module": [[33, "module-armi.bookkeeping.tests.test_historyTracker"]], "armi.bookkeeping.tests.test_memoryProfiler module": [[34, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "armi.bookkeeping.tests.test_snapshot module": [[35, "module-armi.bookkeeping.tests.test_snapshot"]], "armi.bookkeeping.visualization package": [[36, "module-armi.bookkeeping.visualization"]], "armi.bookkeeping.visualization.dumper module": [[37, "module-armi.bookkeeping.visualization.dumper"]], "armi.bookkeeping.visualization.entryPoint module": [[38, "module-armi.bookkeeping.visualization.entryPoint"]], "armi.bookkeeping.visualization.tests package": [[39, "module-armi.bookkeeping.visualization.tests"]], "armi.bookkeeping.visualization.tests.test_vis module": [[40, "module-armi.bookkeeping.visualization.tests.test_vis"]], "armi.bookkeeping.visualization.tests.test_xdmf module": [[41, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "armi.bookkeeping.visualization.utils module": [[42, "module-armi.bookkeeping.visualization.utils"]], "armi.bookkeeping.visualization.vtk module": [[43, "module-armi.bookkeeping.visualization.vtk"]], "Limitations": [[43, "limitations"]], "armi.bookkeeping.visualization.xdmf module": [[44, "module-armi.bookkeeping.visualization.xdmf"]], "armi.cases package": [[45, "module-armi.cases"]], "armi.cases.case module": [[46, "module-armi.cases.case"]], "armi.cases.inputModifiers package": [[47, "module-armi.cases.inputModifiers"]], "armi.cases.inputModifiers.inputModifiers module": [[48, "module-armi.cases.inputModifiers.inputModifiers"]], "armi.cases.inputModifiers.neutronicsModifiers module": [[49, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "armi.cases.inputModifiers.pinTypeInputModifiers module": [[50, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests package": [[51, "module-armi.cases.inputModifiers.tests"]], "armi.cases.inputModifiers.tests.test_inputModifiers module": [[52, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module": [[53, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "armi.cases.suite module": [[54, "module-armi.cases.suite"]], "armi.cases.suiteBuilder module": [[55, "module-armi.cases.suiteBuilder"]], "armi.cases.tests package": [[56, "module-armi.cases.tests"]], "armi.cases.tests.test_cases module": [[57, "module-armi.cases.tests.test_cases"]], "armi.cases.tests.test_suiteBuilder module": [[58, "module-armi.cases.tests.test_suiteBuilder"]], "armi.cli package": [[59, "module-armi.cli"]], "armi.cli.checkInputs module": [[60, "module-armi.cli.checkInputs"]], "armi.cli.cleanTemps module": [[61, "module-armi.cli.cleanTemps"]], "armi.cli.clone module": [[62, "module-armi.cli.clone"]], "armi.cli.compareCases module": [[63, "module-armi.cli.compareCases"]], "armi.cli.database module": [[64, "module-armi.cli.database"]], "armi.cli.entryPoint module": [[65, "module-armi.cli.entryPoint"]], "armi.cli.gridGui module": [[66, "module-armi.cli.gridGui"]], "armi.cli.migrateInputs module": [[67, "module-armi.cli.migrateInputs"]], "armi.cli.modify module": [[68, "module-armi.cli.modify"]], "armi.cli.reportsEntryPoint module": [[69, "module-armi.cli.reportsEntryPoint"]], "armi.cli.run module": [[70, "module-armi.cli.run"]], "armi.cli.runSuite module": [[71, "module-armi.cli.runSuite"]], "armi.cli.tests package": [[72, "module-armi.cli.tests"]], "armi.cli.tests.test_runEntryPoint module": [[73, "module-armi.cli.tests.test_runEntryPoint"]], "armi.cli.tests.test_runSuite module": [[74, "module-armi.cli.tests.test_runSuite"]], "armi.conftest module": [[75, "module-armi.conftest"]], "armi.context module": [[76, "module-armi.context"]], "armi.interfaces module": [[77, "module-armi.interfaces"]], "armi.materials package": [[78, "module-armi.materials"]], "armi.materials.air module": [[79, "module-armi.materials.air"]], "armi.materials.alloy200 module": [[80, "module-armi.materials.alloy200"]], "armi.materials.b4c module": [[81, "module-armi.materials.b4c"]], "armi.materials.be9 module": [[82, "module-armi.materials.be9"]], "armi.materials.caH2 module": [[83, "module-armi.materials.caH2"]], "armi.materials.californium module": [[84, "module-armi.materials.californium"]], "armi.materials.concrete module": [[85, "module-armi.materials.concrete"]], "armi.materials.copper module": [[86, "module-armi.materials.copper"]], "armi.materials.cs module": [[87, "module-armi.materials.cs"]], "armi.materials.custom module": [[88, "module-armi.materials.custom"]], "armi.materials.graphite module": [[89, "module-armi.materials.graphite"]], "armi.materials.hafnium module": [[90, "module-armi.materials.hafnium"]], "armi.materials.hastelloyN module": [[91, "module-armi.materials.hastelloyN"]], "armi.materials.ht9 module": [[92, "module-armi.materials.ht9"]], "armi.materials.inconel module": [[93, "module-armi.materials.inconel"]], "armi.materials.inconel600 module": [[94, "module-armi.materials.inconel600"]], "armi.materials.inconel625 module": [[95, "module-armi.materials.inconel625"]], "armi.materials.inconel800 module": [[96, "module-armi.materials.inconel800"]], "armi.materials.inconelPE16 module": [[97, "module-armi.materials.inconelPE16"]], "armi.materials.inconelX750 module": [[98, "module-armi.materials.inconelX750"]], "armi.materials.lead module": [[99, "module-armi.materials.lead"]], "armi.materials.leadBismuth module": [[100, "module-armi.materials.leadBismuth"]], "armi.materials.lithium module": [[101, "module-armi.materials.lithium"]], "armi.materials.magnesium module": [[102, "module-armi.materials.magnesium"]], "armi.materials.material module": [[103, "module-armi.materials.material"]], "armi.materials.mgO module": [[104, "module-armi.materials.mgO"]], "armi.materials.mixture module": [[105, "module-armi.materials.mixture"]], "armi.materials.molybdenum module": [[106, "module-armi.materials.molybdenum"]], "armi.materials.mox module": [[107, "module-armi.materials.mox"]], "armi.materials.nZ module": [[108, "module-armi.materials.nZ"]], "armi.materials.potassium module": [[109, "module-armi.materials.potassium"]], "armi.materials.scandiumOxide module": [[110, "module-armi.materials.scandiumOxide"]], "armi.materials.siC module": [[111, "module-armi.materials.siC"]], "armi.materials.sodium module": [[112, "module-armi.materials.sodium"]], "armi.materials.sodiumChloride module": [[113, "module-armi.materials.sodiumChloride"]], "armi.materials.sulfur module": [[114, "module-armi.materials.sulfur"]], "armi.materials.tZM module": [[115, "module-armi.materials.tZM"]], "armi.materials.tantalum module": [[116, "module-armi.materials.tantalum"]], "armi.materials.tests package": [[117, "module-armi.materials.tests"]], "armi.materials.tests.test__init__ module": [[118, "module-armi.materials.tests.test__init__"]], "armi.materials.tests.test_air module": [[119, "module-armi.materials.tests.test_air"]], "armi.materials.tests.test_b4c module": [[120, "module-armi.materials.tests.test_b4c"]], "armi.materials.tests.test_be9 module": [[121, "module-armi.materials.tests.test_be9"]], "armi.materials.tests.test_graphite module": [[122, "module-armi.materials.tests.test_graphite"]], "armi.materials.tests.test_lithium module": [[123, "module-armi.materials.tests.test_lithium"]], "armi.materials.tests.test_materials module": [[124, "module-armi.materials.tests.test_materials"]], "armi.materials.tests.test_sic module": [[125, "module-armi.materials.tests.test_sic"]], "armi.materials.tests.test_sulfur module": [[126, "module-armi.materials.tests.test_sulfur"]], "armi.materials.tests.test_thoriumOxide module": [[127, "module-armi.materials.tests.test_thoriumOxide"]], "armi.materials.tests.test_uZr module": [[128, "module-armi.materials.tests.test_uZr"]], "armi.materials.tests.test_water module": [[129, "module-armi.materials.tests.test_water"]], "armi.materials.thU module": [[130, "module-armi.materials.thU"]], "armi.materials.thorium module": [[131, "module-armi.materials.thorium"]], "armi.materials.thoriumOxide module": [[132, "module-armi.materials.thoriumOxide"]], "armi.materials.uThZr module": [[133, "module-armi.materials.uThZr"]], "armi.materials.uZr module": [[134, "module-armi.materials.uZr"]], "armi.materials.uranium module": [[135, "module-armi.materials.uranium"]], "armi.materials.uraniumOxide module": [[136, "module-armi.materials.uraniumOxide"]], "armi.materials.void module": [[137, "module-armi.materials.void"]], "armi.materials.water module": [[138, "module-armi.materials.water"]], "armi.materials.yttriumOxide module": [[139, "module-armi.materials.yttriumOxide"]], "armi.materials.zincOxide module": [[140, "module-armi.materials.zincOxide"]], "armi.materials.zr module": [[141, "module-armi.materials.zr"]], "armi.meta module": [[142, "module-armi.meta"]], "armi.migration package": [[143, "module-armi.migration"]], "armi.migration.base module": [[144, "module-armi.migration.base"]], "armi.migration.m0_1_3 module": [[145, "module-armi.migration.m0_1_3"]], "armi.migration.m0_1_6 module": [[146, "module-armi.migration.m0_1_6"]], "armi.migration.tests package": [[147, "module-armi.migration.tests"]], "armi.migration.tests.test_m0_1_6 module": [[148, "module-armi.migration.tests.test_m0_1_6"]], "armi.migration.tests.test_migration_base module": [[149, "module-armi.migration.tests.test_migration_base"]], "armi.mpiActions module": [[150, "module-armi.mpiActions"]], "Sample MPI Action Workflow": [[150, "id1"]], "armi.nucDirectory package": [[151, "module-armi.nucDirectory"]], "Elements": [[151, "elements"]], "Nuclide Bases": [[151, "nuclide-bases"]], "Nuclide names, labels, and IDs": [[151, "nuclide-names-labels-and-ids"]], "Indices - rapid access": [[151, "indices-rapid-access"]], "armi.nucDirectory.elements module": [[152, "module-armi.nucDirectory.elements"]], "List of elements": [[152, "nuclide-bases-table"]], "armi.nucDirectory.nucDir module": [[153, "module-armi.nucDirectory.nucDir"]], "armi.nucDirectory.nuclideBases module": [[154, "module-armi.nucDirectory.nuclideBases"]], "armi.nucDirectory.tests package": [[155, "module-armi.nucDirectory.tests"]], "armi.nucDirectory.tests.test_elements module": [[156, "module-armi.nucDirectory.tests.test_elements"]], "armi.nucDirectory.tests.test_nucDirectory module": [[157, "module-armi.nucDirectory.tests.test_nucDirectory"]], "armi.nucDirectory.tests.test_nuclideBases module": [[158, "module-armi.nucDirectory.tests.test_nuclideBases"]], "armi.nucDirectory.tests.test_thermalScattering module": [[159, "module-armi.nucDirectory.tests.test_thermalScattering"]], "armi.nucDirectory.tests.test_transmutations module": [[160, "module-armi.nucDirectory.tests.test_transmutations"]], "armi.nucDirectory.thermalScattering module": [[161, "module-armi.nucDirectory.thermalScattering"]], "armi.nucDirectory.transmutations module": [[162, "module-armi.nucDirectory.transmutations"]], "armi.nuclearDataIO package": [[163, "module-armi.nuclearDataIO"]], "armi.nuclearDataIO.cccc package": [[164, "module-armi.nuclearDataIO.cccc"]], "Using the system": [[164, "using-the-system"]], "Implementation details": [[164, "implementation-details"]], "Discussion": [[164, "discussion"]], "armi.nuclearDataIO.cccc.cccc module": [[165, "module-armi.nuclearDataIO.cccc.cccc"]], "armi.nuclearDataIO.cccc.compxs module": [[166, "module-armi.nuclearDataIO.cccc.compxs"]], "armi.nuclearDataIO.cccc.dif3d module": [[167, "module-armi.nuclearDataIO.cccc.dif3d"]], "armi.nuclearDataIO.cccc.dlayxs module": [[168, "module-armi.nuclearDataIO.cccc.dlayxs"]], "armi.nuclearDataIO.cccc.fixsrc module": [[169, "module-armi.nuclearDataIO.cccc.fixsrc"]], "armi.nuclearDataIO.cccc.gamiso module": [[170, "module-armi.nuclearDataIO.cccc.gamiso"]], "armi.nuclearDataIO.cccc.geodst module": [[171, "module-armi.nuclearDataIO.cccc.geodst"]], "armi.nuclearDataIO.cccc.isotxs module": [[172, "module-armi.nuclearDataIO.cccc.isotxs"]], "armi.nuclearDataIO.cccc.labels module": [[173, "module-armi.nuclearDataIO.cccc.labels"]], "armi.nuclearDataIO.cccc.nhflux module": [[174, "module-armi.nuclearDataIO.cccc.nhflux"]], "armi.nuclearDataIO.cccc.pmatrx module": [[175, "module-armi.nuclearDataIO.cccc.pmatrx"]], "armi.nuclearDataIO.cccc.pwdint module": [[176, "module-armi.nuclearDataIO.cccc.pwdint"]], "armi.nuclearDataIO.cccc.rtflux module": [[177, "module-armi.nuclearDataIO.cccc.rtflux"]], "armi.nuclearDataIO.cccc.rzflux module": [[178, "module-armi.nuclearDataIO.cccc.rzflux"]], "armi.nuclearDataIO.cccc.tests package": [[179, "module-armi.nuclearDataIO.cccc.tests"]], "armi.nuclearDataIO.cccc.tests.test_cccc module": [[180, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "armi.nuclearDataIO.cccc.tests.test_compxs module": [[181, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "armi.nuclearDataIO.cccc.tests.test_dif3d module": [[182, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs module": [[183, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc module": [[184, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"]], "armi.nuclearDataIO.cccc.tests.test_gamiso module": [[185, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "armi.nuclearDataIO.cccc.tests.test_geodst module": [[186, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs module": [[187, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "armi.nuclearDataIO.cccc.tests.test_labels module": [[188, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "armi.nuclearDataIO.cccc.tests.test_nhflux module": [[189, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx module": [[190, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "armi.nuclearDataIO.cccc.tests.test_pwdint module": [[191, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "armi.nuclearDataIO.cccc.tests.test_rtflux module": [[192, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux module": [[193, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "armi.nuclearDataIO.nuclearFileMetadata module": [[194, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "armi.nuclearDataIO.tests package": [[195, "module-armi.nuclearDataIO.tests"]], "armi.nuclearDataIO.tests.test_xsCollections module": [[196, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "armi.nuclearDataIO.tests.test_xsLibraries module": [[197, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "armi.nuclearDataIO.tests.test_xsNuclides module": [[198, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "armi.nuclearDataIO.xsCollections module": [[199, "module-armi.nuclearDataIO.xsCollections"]], "armi.nuclearDataIO.xsLibraries module": [[200, "module-armi.nuclearDataIO.xsLibraries"]], "armi.nuclearDataIO.xsNuclides module": [[201, "module-armi.nuclearDataIO.xsNuclides"]], "armi.operators package": [[202, "module-armi.operators"]], "armi.operators.operator module": [[203, "module-armi.operators.operator"]], "armi.operators.operatorMPI module": [[204, "module-armi.operators.operatorMPI"]], "armi.operators.runTypes module": [[205, "module-armi.operators.runTypes"]], "armi.operators.settingsValidation module": [[206, "module-armi.operators.settingsValidation"]], "armi.operators.snapshots module": [[207, "module-armi.operators.snapshots"]], "armi.operators.tests package": [[208, "module-armi.operators.tests"]], "armi.operators.tests.test_operatorSnapshots module": [[209, "module-armi.operators.tests.test_operatorSnapshots"]], "armi.operators.tests.test_operators module": [[210, "module-armi.operators.tests.test_operators"]], "armi.physics package": [[211, "module-armi.physics"]], "Historical fun fact": [[211, null]], "armi.physics.constants module": [[212, "module-armi.physics.constants"]], "armi.physics.executers module": [[213, "module-armi.physics.executers"]], "armi.physics.fuelCycle package": [[214, "module-armi.physics.fuelCycle"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms module": [[215, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.fuelHandlerFactory module": [[216, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface module": [[217, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlers module": [[218, "module-armi.physics.fuelCycle.fuelHandlers"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module": [[219, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.settings module": [[220, "module-armi.physics.fuelCycle.settings"]], "armi.physics.fuelCycle.tests package": [[221, "module-armi.physics.fuelCycle.tests"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module": [[222, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.tests.test_fuelHandlers module": [[223, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module": [[224, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelPerformance package": [[225, "module-armi.physics.fuelPerformance"]], "armi.physics.fuelPerformance.executers module": [[226, "module-armi.physics.fuelPerformance.executers"]], "armi.physics.fuelPerformance.parameters module": [[227, "module-armi.physics.fuelPerformance.parameters"]], "armi.physics.fuelPerformance.plugin module": [[228, "module-armi.physics.fuelPerformance.plugin"]], "armi.physics.fuelPerformance.settings module": [[229, "module-armi.physics.fuelPerformance.settings"]], "armi.physics.fuelPerformance.tests package": [[230, "module-armi.physics.fuelPerformance.tests"]], "armi.physics.fuelPerformance.tests.test_executers module": [[231, "module-armi.physics.fuelPerformance.tests.test_executers"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module": [[232, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module": [[233, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.utils module": [[234, "module-armi.physics.fuelPerformance.utils"]], "armi.physics.neutronics package": [[235, "module-armi.physics.neutronics"]], "armi.physics.neutronics.const module": [[236, "module-armi.physics.neutronics.const"]], "armi.physics.neutronics.crossSectionGroupManager module": [[237, "module-armi.physics.neutronics.crossSectionGroupManager"]], "armi.physics.neutronics.crossSectionSettings module": [[238, "module-armi.physics.neutronics.crossSectionSettings"]], "armi.physics.neutronics.diffIsotxs module": [[239, "module-armi.physics.neutronics.diffIsotxs"]], "armi.physics.neutronics.energyGroups module": [[240, "module-armi.physics.neutronics.energyGroups"]], "armi.physics.neutronics.fissionProductModel package": [[241, "module-armi.physics.neutronics.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel module": [[242, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module": [[243, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module": [[244, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests package": [[245, "module-armi.physics.neutronics.fissionProductModel.tests"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module": [[246, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module": [[247, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "armi.physics.neutronics.globalFlux package": [[248, "module-armi.physics.neutronics.globalFlux"]], "armi.physics.neutronics.globalFlux.globalFluxInterface module": [[249, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests package": [[250, "module-armi.physics.neutronics.globalFlux.tests"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module": [[251, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "armi.physics.neutronics.latticePhysics package": [[252, "module-armi.physics.neutronics.latticePhysics"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module": [[253, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module": [[254, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests package": [[255, "module-armi.physics.neutronics.latticePhysics.tests"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module": [[256, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module": [[257, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "armi.physics.neutronics.macroXSGenerationInterface module": [[258, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "armi.physics.neutronics.parameters module": [[259, "module-armi.physics.neutronics.parameters"]], "armi.physics.neutronics.reports module": [[260, "module-armi.physics.neutronics.reports"]], "armi.physics.neutronics.settings module": [[261, "module-armi.physics.neutronics.settings"]], "armi.physics.neutronics.tests package": [[262, "module-armi.physics.neutronics.tests"]], "armi.physics.neutronics.tests.test_crossSectionManager module": [[263, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "armi.physics.neutronics.tests.test_crossSectionSettings module": [[264, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "armi.physics.neutronics.tests.test_crossSectionTable module": [[265, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "armi.physics.neutronics.tests.test_energyGroups module": [[266, "module-armi.physics.neutronics.tests.test_energyGroups"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface module": [[267, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_neutronicsPlugin module": [[268, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "armi.physics.safety package": [[269, "module-armi.physics.safety"]], "armi.physics.tests package": [[270, "module-armi.physics.tests"]], "armi.physics.tests.test_executers module": [[271, "module-armi.physics.tests.test_executers"]], "armi.physics.thermalHydraulics package": [[272, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalHydraulics.const module": [[273, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalHydraulics.parameters module": [[274, "module-armi.physics.thermalHydraulics.parameters"]], "armi.physics.thermalHydraulics.plugin module": [[275, "module-armi.physics.thermalHydraulics.plugin"]], "armi.physics.thermalHydraulics.settings module": [[276, "module-armi.physics.thermalHydraulics.settings"]], "armi.physics.thermalHydraulics.tests package": [[277, "module-armi.physics.thermalHydraulics.tests"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin module": [[278, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"]], "armi.pluginManager module": [[279, "module-armi.pluginManager"]], "armi.plugins module": [[280, "module-armi.plugins"]], "armi.reactor package": [[281, "module-armi.reactor"]], "armi.reactor.assemblies module": [[282, "module-armi.reactor.assemblies"]], "armi.reactor.assemblyParameters module": [[283, "module-armi.reactor.assemblyParameters"]], "armi.reactor.blockParameters module": [[284, "module-armi.reactor.blockParameters"]], "armi.reactor.blocks module": [[285, "module-armi.reactor.blocks"]], "Parameter": [[285, "parameter"]], "armi.reactor.blueprints package": [[286, "module-armi.reactor.blueprints"]], "armi.reactor.blueprints.assemblyBlueprint module": [[287, "module-armi.reactor.blueprints.assemblyBlueprint"]], "armi.reactor.blueprints.blockBlueprint module": [[288, "module-armi.reactor.blueprints.blockBlueprint"]], "armi.reactor.blueprints.componentBlueprint module": [[289, "module-armi.reactor.blueprints.componentBlueprint"]], "armi.reactor.blueprints.gridBlueprint module": [[290, "module-armi.reactor.blueprints.gridBlueprint"]], "armi.reactor.blueprints.isotopicOptions module": [[291, "module-armi.reactor.blueprints.isotopicOptions"]], "armi.reactor.blueprints.reactorBlueprint module": [[292, "module-armi.reactor.blueprints.reactorBlueprint"]], "armi.reactor.blueprints.tests package": [[293, "module-armi.reactor.blueprints.tests"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints module": [[294, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "armi.reactor.blueprints.tests.test_blockBlueprints module": [[295, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "armi.reactor.blueprints.tests.test_blueprints module": [[296, "module-armi.reactor.blueprints.tests.test_blueprints"]], "armi.reactor.blueprints.tests.test_componentBlueprint module": [[297, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "armi.reactor.blueprints.tests.test_customIsotopics module": [[298, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "armi.reactor.blueprints.tests.test_gridBlueprints module": [[299, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "armi.reactor.blueprints.tests.test_materialModifications module": [[300, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "armi.reactor.blueprints.tests.test_reactorBlueprints module": [[301, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "armi.reactor.components package": [[302, "module-armi.reactor.components"]], "armi.reactor.components.basicShapes module": [[303, "module-armi.reactor.components.basicShapes"]], "armi.reactor.components.complexShapes module": [[304, "module-armi.reactor.components.complexShapes"]], "armi.reactor.components.component module": [[305, "module-armi.reactor.components.component"]], "armi.reactor.components.componentParameters module": [[306, "module-armi.reactor.components.componentParameters"]], "armi.reactor.components.volumetricShapes module": [[307, "module-armi.reactor.components.volumetricShapes"]], "armi.reactor.composites module": [[308, "module-armi.reactor.composites"]], "armi.reactor.converters package": [[309, "module-armi.reactor.converters"]], "armi.reactor.converters.axialExpansionChanger package": [[310, "module-armi.reactor.converters.axialExpansionChanger"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage module": [[311, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger module": [[312, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"]], "armi.reactor.converters.axialExpansionChanger.expansionData module": [[313, "module-armi.reactor.converters.axialExpansionChanger.expansionData"]], "armi.reactor.converters.blockConverters module": [[314, "module-armi.reactor.converters.blockConverters"]], "armi.reactor.converters.geometryConverters module": [[315, "module-armi.reactor.converters.geometryConverters"]], "armi.reactor.converters.meshConverters module": [[316, "module-armi.reactor.converters.meshConverters"]], "armi.reactor.converters.parameterSweeps package": [[317, "module-armi.reactor.converters.parameterSweeps"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module": [[318, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "armi.reactor.converters.pinTypeBlockConverters module": [[319, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests package": [[320, "module-armi.reactor.converters.tests"]], "armi.reactor.converters.tests.test_axialExpansionChanger module": [[321, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "armi.reactor.converters.tests.test_blockConverter module": [[322, "module-armi.reactor.converters.tests.test_blockConverter"]], "armi.reactor.converters.tests.test_geometryConverters module": [[323, "module-armi.reactor.converters.tests.test_geometryConverters"]], "armi.reactor.converters.tests.test_meshConverters module": [[324, "module-armi.reactor.converters.tests.test_meshConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters module": [[325, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "armi.reactor.converters.tests.test_uniformMesh module": [[326, "module-armi.reactor.converters.tests.test_uniformMesh"]], "armi.reactor.converters.uniformMesh module": [[327, "module-armi.reactor.converters.uniformMesh"]], "Requirements": [[327, "requirements"]], "armi.reactor.cores module": [[328, "module-armi.reactor.cores"]], "armi.reactor.excoreStructure module": [[329, "module-armi.reactor.excoreStructure"]], "armi.reactor.flags module": [[330, "module-armi.reactor.flags"]], "armi.reactor.geometry module": [[331, "module-armi.reactor.geometry"]], "armi.reactor.grids package": [[332, "module-armi.reactor.grids"]], "armi.reactor.grids.axial module": [[333, "module-armi.reactor.grids.axial"]], "armi.reactor.grids.cartesian module": [[334, "module-armi.reactor.grids.cartesian"]], "armi.reactor.grids.constants module": [[335, "module-armi.reactor.grids.constants"]], "armi.reactor.grids.grid module": [[336, "module-armi.reactor.grids.grid"]], "armi.reactor.grids.hexagonal module": [[337, "module-armi.reactor.grids.hexagonal"]], "armi.reactor.grids.locations module": [[338, "module-armi.reactor.grids.locations"]], "armi.reactor.grids.structuredGrid module": [[339, "module-armi.reactor.grids.structuredGrid"]], "armi.reactor.grids.thetarz module": [[340, "module-armi.reactor.grids.thetarz"]], "armi.reactor.parameters package": [[341, "module-armi.reactor.parameters"]], "Example Parameters": [[341, "id1"]], "Basic Usage": [[341, "basic-usage"]], "Design Considerations": [[341, "design-considerations"]], "Design considerations": [[341, "id2"]], "armi.reactor.parameters.exceptions module": [[342, "module-armi.reactor.parameters.exceptions"]], "armi.reactor.parameters.parameterCollections module": [[343, "module-armi.reactor.parameters.parameterCollections"]], "armi.reactor.parameters.parameterDefinitions module": [[344, "module-armi.reactor.parameters.parameterDefinitions"]], "armi.reactor.parameters.resolveCollections module": [[345, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorParameters module": [[346, "module-armi.reactor.reactorParameters"]], "armi.reactor.reactors module": [[347, "module-armi.reactor.reactors"]], "armi.reactor.spentFuelPool module": [[348, "module-armi.reactor.spentFuelPool"]], "armi.reactor.systemLayoutInput module": [[349, "module-armi.reactor.systemLayoutInput"]], "armi.reactor.tests package": [[350, "module-armi.reactor.tests"]], "armi.reactor.tests.test_assemblies module": [[351, "module-armi.reactor.tests.test_assemblies"]], "armi.reactor.tests.test_blocks module": [[352, "module-armi.reactor.tests.test_blocks"]], "armi.reactor.tests.test_components module": [[353, "module-armi.reactor.tests.test_components"]], "armi.reactor.tests.test_composites module": [[354, "module-armi.reactor.tests.test_composites"]], "armi.reactor.tests.test_excoreStructures module": [[355, "module-armi.reactor.tests.test_excoreStructures"]], "armi.reactor.tests.test_flags module": [[356, "module-armi.reactor.tests.test_flags"]], "armi.reactor.tests.test_geometry module": [[357, "module-armi.reactor.tests.test_geometry"]], "armi.reactor.tests.test_parameters module": [[358, "module-armi.reactor.tests.test_parameters"]], "armi.reactor.tests.test_reactors module": [[359, "module-armi.reactor.tests.test_reactors"]], "armi.reactor.tests.test_rz_reactors module": [[360, "module-armi.reactor.tests.test_rz_reactors"]], "armi.reactor.tests.test_zones module": [[361, "module-armi.reactor.tests.test_zones"]], "armi.reactor.zones module": [[362, "module-armi.reactor.zones"]], "armi.runLog module": [[363, "module-armi.runLog"]], "armi.settings package": [[364, "module-armi.settings"]], "armi.settings.caseSettings module": [[365, "module-armi.settings.caseSettings"]], "armi.settings.fwSettings package": [[366, "module-armi.settings.fwSettings"]], "armi.settings.fwSettings.databaseSettings module": [[367, "module-armi.settings.fwSettings.databaseSettings"]], "armi.settings.fwSettings.globalSettings module": [[368, "module-armi.settings.fwSettings.globalSettings"]], "armi.settings.fwSettings.reportSettings module": [[369, "module-armi.settings.fwSettings.reportSettings"]], "armi.settings.fwSettings.tightCouplingSettings module": [[370, "module-armi.settings.fwSettings.tightCouplingSettings"]], "armi.settings.setting module": [[371, "module-armi.settings.setting"]], "armi.settings.settingsIO module": [[372, "module-armi.settings.settingsIO"]], "armi.settings.settingsValidation module": [[373, "module-armi.settings.settingsValidation"]], "armi.settings.tests package": [[374, "module-armi.settings.tests"]], "armi.settings.tests.test_inspectors module": [[375, "module-armi.settings.tests.test_inspectors"]], "armi.settings.tests.test_settings module": [[376, "module-armi.settings.tests.test_settings"]], "armi.settings.tests.test_settingsIO module": [[377, "module-armi.settings.tests.test_settingsIO"]], "armi.tests package": [[378, "module-armi.tests"]], "armi.tests.mockRunLogs module": [[379, "module-armi.tests.mockRunLogs"]], "armi.tests.refSmallReactorShuffleLogic module": [[380, "module-armi.tests.refSmallReactorShuffleLogic"]], "armi.tests.test_apps module": [[381, "module-armi.tests.test_apps"]], "armi.tests.test_armiTestHelper module": [[382, "module-armi.tests.test_armiTestHelper"]], "armi.tests.test_cartesian module": [[383, "module-armi.tests.test_cartesian"]], "armi.tests.test_context module": [[384, "module-armi.tests.test_context"]], "armi.tests.test_interfaces module": [[385, "module-armi.tests.test_interfaces"]], "armi.tests.test_lwrInputs module": [[386, "module-armi.tests.test_lwrInputs"]], "armi.tests.test_mpiActions module": [[387, "module-armi.tests.test_mpiActions"]], "armi.tests.test_mpiFeatures module": [[388, "module-armi.tests.test_mpiFeatures"]], "armi.tests.test_mpiParameters module": [[389, "module-armi.tests.test_mpiParameters"]], "armi.tests.test_notebooks module": [[390, "module-armi.tests.test_notebooks"]], "armi.tests.test_plugins module": [[391, "module-armi.tests.test_plugins"]], "armi.tests.test_runLog module": [[392, "module-armi.tests.test_runLog"]], "armi.tests.test_tests module": [[393, "module-armi.tests.test_tests"]], "armi.tests.test_user_plugins module": [[394, "module-armi.tests.test_user_plugins"]], "armi.utils package": [[395, "module-armi.utils"]], "armi.utils.asciimaps module": [[396, "module-armi.utils.asciimaps"]], "armi.utils.codeTiming module": [[397, "module-armi.utils.codeTiming"]], "armi.utils.customExceptions module": [[398, "module-armi.utils.customExceptions"]], "armi.utils.densityTools module": [[399, "module-armi.utils.densityTools"]], "armi.utils.directoryChangers module": [[400, "module-armi.utils.directoryChangers"]], "armi.utils.directoryChangersMpi module": [[401, "module-armi.utils.directoryChangersMpi"]], "armi.utils.dynamicImporter module": [[402, "module-armi.utils.dynamicImporter"]], "armi.utils.flags module": [[403, "module-armi.utils.flags"]], "armi.utils.gridEditor module": [[404, "armi-utils-grideditor-module"]], "armi.utils.hexagon module": [[405, "module-armi.utils.hexagon"]], "armi.utils.iterables module": [[406, "module-armi.utils.iterables"]], "armi.utils.mathematics module": [[407, "module-armi.utils.mathematics"]], "armi.utils.outputCache module": [[408, "module-armi.utils.outputCache"]], "API usage": [[408, "api-usage"]], "armi.utils.parsing module": [[409, "module-armi.utils.parsing"]], "armi.utils.pathTools module": [[410, "module-armi.utils.pathTools"]], "armi.utils.plotting module": [[411, "module-armi.utils.plotting"]], "armi.utils.properties module": [[412, "module-armi.utils.properties"]], "armi.utils.reportPlotting module": [[413, "module-armi.utils.reportPlotting"]], "armi.utils.tabulate module": [[414, "module-armi.utils.tabulate"]], "Usage": [[414, "usage"]], "Table headers": [[414, "table-headers"]], "Column and Headers alignment": [[414, "column-and-headers-alignment"]], "Table formats": [[414, "table-formats"]], "Number parsing": [[414, "number-parsing"]], "Column Widths and Auto Line Wrapping": [[414, "column-widths-and-auto-line-wrapping"]], "armi.utils.tests package": [[415, "module-armi.utils.tests"]], "armi.utils.tests.test_asciimaps module": [[416, "module-armi.utils.tests.test_asciimaps"]], "armi.utils.tests.test_codeTiming module": [[417, "module-armi.utils.tests.test_codeTiming"]], "armi.utils.tests.test_custom_exceptions module": [[418, "module-armi.utils.tests.test_custom_exceptions"]], "armi.utils.tests.test_densityTools module": [[419, "module-armi.utils.tests.test_densityTools"]], "armi.utils.tests.test_directoryChangers module": [[420, "module-armi.utils.tests.test_directoryChangers"]], "armi.utils.tests.test_directoryChangersMpi module": [[421, "module-armi.utils.tests.test_directoryChangersMpi"]], "armi.utils.tests.test_flags module": [[422, "module-armi.utils.tests.test_flags"]], "armi.utils.tests.test_hexagon module": [[423, "module-armi.utils.tests.test_hexagon"]], "armi.utils.tests.test_iterables module": [[424, "module-armi.utils.tests.test_iterables"]], "armi.utils.tests.test_mathematics module": [[425, "module-armi.utils.tests.test_mathematics"]], "armi.utils.tests.test_outputCache module": [[426, "module-armi.utils.tests.test_outputCache"]], "armi.utils.tests.test_parsing module": [[427, "module-armi.utils.tests.test_parsing"]], "armi.utils.tests.test_pathTools module": [[428, "module-armi.utils.tests.test_pathTools"]], "armi.utils.tests.test_plotting module": [[429, "module-armi.utils.tests.test_plotting"]], "armi.utils.tests.test_properties module": [[430, "module-armi.utils.tests.test_properties"]], "armi.utils.tests.test_reportPlotting module": [[431, "module-armi.utils.tests.test_reportPlotting"]], "armi.utils.tests.test_tabulate module": [[432, "module-armi.utils.tests.test_tabulate"]], "armi.utils.tests.test_textProcessors module": [[433, "module-armi.utils.tests.test_textProcessors"]], "armi.utils.tests.test_triangle module": [[434, "module-armi.utils.tests.test_triangle"]], "armi.utils.tests.test_units module": [[435, "module-armi.utils.tests.test_units"]], "armi.utils.tests.test_utils module": [[436, "module-armi.utils.tests.test_utils"]], "armi.utils.textProcessors module": [[437, "module-armi.utils.textProcessors"]], "armi.utils.triangle module": [[438, "module-armi.utils.triangle"]], "armi.utils.units module": [[439, "module-armi.utils.units"]], "armi": [[440, "armi"]], "Documenting ARMI": [[441, "documenting-armi"]], "Building the documentation": [[441, "building-the-documentation"]], "Documentation for ARMI plugins": [[441, "documentation-for-armi-plugins"]], "Linking to ARMI documentation from plugins": [[441, "linking-to-armi-documentation-from-plugins"]], "Automatically building apidocs of namespace packages": [[441, "automatically-building-apidocs-of-namespace-packages"]], "Updating the Gallery": [[441, "updating-the-gallery"]], "Using Jupyter notebooks": [[441, "using-jupyter-notebooks"]], "Entry Points": [[442, "entry-points"], [444, "entry-points"]], "First Time Contributors Guide": [[443, "first-time-contributors-guide"]], "Help Wanted": [[443, "help-wanted"]], "Testing": [[443, "testing"]], "Submitting Changes": [[443, "submitting-changes"]], "Licensing of Tools": [[443, "licensing-of-tools"]], "Framework Architecture": [[444, "framework-architecture"]], "The Reactor Model": [[444, "the-reactor-model"]], "Finding objects in a model": [[444, "finding-objects-in-a-model"]], "Parameters": [[444, "parameters"]], "Converters": [[444, "converters"]], "Blueprints": [[444, "blueprints"]], "Operators": [[444, "operators"]], "The Standard Operator": [[444, "the-standard-operator"]], "The Snapshots Operator": [[444, "the-snapshots-operator"]], "The Interface Stack": [[444, "the-interface-stack"]], "Interface Interaction Hooks": [[444, "interface-interaction-hooks"]], "Adding a new interface": [[444, "adding-a-new-interface"]], "How interfaces get called": [[444, "how-interfaces-get-called"]], "Plugins": [[444, "plugins"]], "Developer Docs": [[445, "developer-docs"]], "Making ARMI-based Apps": [[446, "making-armi-based-apps"]], "Heads up": [[446, null]], "ARMI Plugins": [[446, "armi-plugins"]], "Some implementation details": [[446, "some-implementation-details"]], "Making your own Plugin": [[446, "making-your-own-plugin"]], "ARMI-Based Applications": [[446, "armi-based-applications"]], "Parallel Code in ARMI": [[447, "parallel-code-in-armi"]], "MPI communication crash course": [[447, "mpi-communication-crash-course"]], "MPI Communication within ARMI": [[447, "mpi-communication-within-armi"]], "Example using bcast": [[447, "example-using-bcast"]], "Example using scatter": [[447, "example-using-scatter"]], "A simplified approach": [[447, "a-simplified-approach"]], "Profiling ARMI": [[448, "profiling-armi"]], "Reports in ARMI": [[449, "reports-in-armi"]], "The Hook: getReportContents()": [[449, "the-hook-getreportcontents"]], "What is ReportContent?": [[449, "what-is-reportcontent"]], "Sections": [[449, "sections"]], "Tables": [[449, "tables"]], "Images": [[449, "images"]], "TimeSeries": [[449, "timeseries"]], "HTML Elements": [[449, "html-elements"]], "Summary": [[449, "summary"]], "Standards and Practices for Coding": [[450, "standards-and-practices-for-coding"]], "Code formatting with Black": [[450, "code-formatting-with-black"]], "Address the ruff warnings": [[450, "address-the-ruff-warnings"]], "Remove commented-out code": [[450, "remove-commented-out-code"]], "Avoid hard-coding run parameters": [[450, "avoid-hard-coding-run-parameters"]], "Avoid the global keyword": [[450, "avoid-the-global-keyword"]], "Naming conventions": [[450, "naming-conventions"]], "Use meaningful names": [[450, "use-meaningful-names"]], "General conventions": [[450, "general-conventions"]], "Naming quick-reference": [[450, "naming-quick-reference"]], "Common naming conventions within ARMI": [[450, "common-naming-conventions-within-armi"]], "Prefer shorter methods": [[450, "prefer-shorter-methods"]], "Avoid repeating code": [[450, "avoid-repeating-code"]], "Public methods should have docstrings": [[450, "public-methods-should-have-docstrings"]], "Unit tests": [[450, "unit-tests"]], "Import statements": [[450, "import-statements"]], "Import ordering": [[450, "import-ordering"]], "Don\u2019t create naked exceptions.": [[450, "don-t-create-naked-exceptions"]], "Data model": [[450, "data-model"]], "Input files": [[450, "input-files"]], "General do\u2019s and don\u2019ts": [[450, "general-do-s-and-don-ts"]], "Tooling and Infrastructure": [[451, "tooling-and-infrastructure"]], "Good Commit Messages": [[451, "good-commit-messages"]], "Good Pull Requests": [[451, "good-pull-requests"]], "One Idea = One PR": [[451, "one-idea-one-pr"]], "Don\u2019t open until it is ready": [[451, "don-t-open-until-it-is-ready"]], "Test It": [[451, "test-it"]], "Document It": [[451, "document-it"]], "Watch for Requirements": [[451, "watch-for-requirements"]], "Add Release Notes": [[451, "add-release-notes"]], "Packaging and dependency management": [[451, "packaging-and-dependency-management"]], "pyproject.toml": [[451, "pyproject-toml"]], "Third-Party Licensing": [[451, "third-party-licensing"]], "Releasing a New Version of ARMI": [[451, "releasing-a-new-version-of-armi"]], "Logging with runLog": [[451, "logging-with-runlog"]], "Blocking Duplicate Logs": [[451, "blocking-duplicate-logs"]], "Module-Level Logging": [[451, "module-level-logging"]], "Gallery": [[452, "gallery"], [477, "gallery"], [494, "gallery"]], "Analysis": [[453, "analysis"], [456, "analysis"], [477, "analysis"], [494, "analysis"]], "Applications": [[454, "applications"], [461, "applications"], [477, "applications"], [494, "applications"]], "Framework": [[455, "framework"], [462, "framework"], [477, "framework"], [494, "framework"]], "Write MCNP Material Cards": [[457, "write-mcnp-material-cards"]], "Hex block to RZ geometry conversion": [[458, "hex-block-to-rz-geometry-conversion"]], "Hex reactor to RZ geometry conversion": [[459, "hex-reactor-to-rz-geometry-conversion"]], "Computation times": [[460, "computation-times"], [476, "computation-times"]], "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion": [[463, "computing-component-volume-fractions-on-a-block-with-automatic-thermal-expansion"]], "Plot a chart of the nuclides.": [[464, "plot-a-chart-of-the-nuclides"]], "More details": [[464, null]], "Computing Reaction Rates on a Block.": [[465, "computing-reaction-rates-on-a-block"]], "Make a hex grid.": [[467, "make-a-hex-grid"]], "Make a Cartesian grid.": [[468, "make-a-cartesian-grid"]], "Make a Theta-R-Z grid.": [[469, "make-a-theta-r-z-grid"]], "Plotting Multi-group XS from ISOTXS.": [[470, "plotting-multi-group-xs-from-isotxs"]], "Plotting a multi-group scatter matrix.": [[471, "plotting-a-multi-group-scatter-matrix"]], "Listing of Material Library.": [[472, "listing-of-material-library"]], "Build Reactor Inputs Programmatically.": [[473, "build-reactor-inputs-programmatically"]], "Plot a reactor facemap.": [[474, "plot-a-reactor-facemap"]], "Transmutation and decay reactions.": [[475, "transmutation-and-decay-reactions"]], "Glossary": [[478, "glossary"]], "ARMI": [[479, "armi"]], "Quick links": [[479, "id3"]], "Quick start": [[479, "quick-start"]], "Background": [[479, "background"]], "Communication and coupling": [[479, "communication-and-coupling"]], "Automation": [[479, "automation"]], "New analysis and physics capabilities": [[479, "new-analysis-and-physics-capabilities"]], "Use cases": [[479, "use-cases"]], "The Research Scientist": [[479, "the-research-scientist"]], "The Nuclear Startup Engineer": [[479, "the-nuclear-startup-engineer"]], "Operating and Vendor Engineers": [[479, "operating-and-vendor-engineers"]], "The Enthusiast": [[479, "the-enthusiast"]], "History of ARMI": [[479, "history-of-armi"]], "System Requirements": [[479, "system-requirements"]], "Getting help": [[479, "getting-help"]], "Disclaimers": [[479, "disclaimers"]], "License": [[479, "license"]], "Installation": [[480, "installation"], [507, "installation"]], "Prerequisites": [[480, "prerequisites"], [507, "prerequisites"]], "The right Python command": [[480, null], [507, null]], "Preparing a Virtual Environment": [[480, "preparing-a-virtual-environment"], [507, "preparing-a-virtual-environment"]], "Getting the code": [[480, "getting-the-code"], [507, "getting-the-code"]], "Step 0: Update PIP": [[480, "step-0-update-pip"], [507, "step-0-update-pip"]], "Option 1: Install as a library": [[480, "option-1-install-as-a-library"], [507, "option-1-install-as-a-library"]], "Option 2: Install as a repository (for developers)": [[480, "option-2-install-as-a-repository-for-developers"], [507, "option-2-install-as-a-repository-for-developers"]], "Verifying installation": [[480, "verifying-installation"], [507, "verifying-installation"]], "Optional Setup": [[480, "optional-setup"], [507, "optional-setup"]], "GUI input": [[480, "gui-input"], [507, "gui-input"]], "GUI output": [[480, "gui-output"], [507, "gui-output"]], "ARMI v0.1 Release Notes": [[481, "armi-v0-1-release-notes"]], "ARMI v0.1.7": [[481, "armi-v0-1-7"]], "API changes": [[481, "api-changes"]], "Bug fixes": [[481, "bug-fixes"], [482, "bug-fixes"], [482, "id6"], [482, "id9"], [482, "id13"], [482, "id16"], [482, "id19"], [482, "id24"], [482, "id26"], [482, "id28"], [482, "id31"]], "ARMI v0.1.6": [[481, "armi-v0-1-6"]], "Deprecations": [[481, "deprecations"]], "Bugfixes": [[481, "bugfixes"], [481, "id1"], [481, "id2"], [481, "id4"]], "ARMI v0.1.5": [[481, "armi-v0-1-5"]], "User-facing enhancements": [[481, "user-facing-enhancements"], [481, "id3"], [481, "id6"]], "Backend changes": [[481, "backend-changes"], [481, "id5"], [481, "id7"]], "ARMI v0.1.4": [[481, "armi-v0-1-4"]], "ARMI v0.1.3": [[481, "armi-v0-1-3"]], "ARMI v0.1.2": [[481, "armi-v0-1-2"]], "Hotfixes": [[481, "hotfixes"]], "ARMI v0.1.1": [[481, "armi-v0-1-1"]], "ARMI v0.1.0": [[481, "armi-v0-1-0"]], "ARMI v0.2 Release Notes": [[482, "armi-v0-2-release-notes"]], "ARMI v0.2.9": [[482, "armi-v0-2-9"]], "What\u2019s new in ARMI": [[482, "what-s-new-in-armi"], [482, "id5"], [482, "id7"], [482, "id11"], [482, "id15"], [482, "id17"], [482, "id22"]], "Build changes": [[482, "build-changes"]], "ARMI v0.2.8": [[482, "armi-v0-2-8"]], "ARMI v0.2.7": [[482, "armi-v0-2-7"]], "ARMI v0.2.6": [[482, "armi-v0-2-6"]], "ARMI v0.2.5": [[482, "armi-v0-2-5"]], "ARMI v0.2.4": [[482, "armi-v0-2-4"]], "ARMI v0.2.3": [[482, "armi-v0-2-3"]], "ARMI v0.2.2": [[482, "armi-v0-2-2"]], "What\u2019s new in ARMI v0.2.2": [[482, "what-s-new-in-armi-v0-2-2"]], "ARMI v0.2.1": [[482, "armi-v0-2-1"]], "What\u2019s new in ARMI v0.2.1": [[482, "what-s-new-in-armi-v0-2-1"]], "ARMI v0.2.0": [[482, "armi-v0-2-0"]], "What\u2019s new in ARMI v0.2.0": [[482, "what-s-new-in-armi-v0-2-0"]], "Backwards incompatible changes": [[482, "backwards-incompatible-changes"]], "ARMI v0.3 Release Notes": [[483, "armi-v0-3-release-notes"]], "ARMI v0.3.0": [[483, "armi-v0-3-0"]], "What\u2019s new in ARMI?": [[483, "what-s-new-in-armi"]], "Bug Fixes": [[483, "bug-fixes"], [484, "bug-fixes"], [484, "id10"]], "Quality Work": [[483, "quality-work"], [484, "quality-work"], [484, "id11"]], "ARMI v0.4 Release Notes": [[484, "armi-v0-4-release-notes"]], "ARMI v0.4.1": [[484, "armi-v0-4-1"]], "New Features": [[484, "new-features"], [484, "id6"]], "API Changes": [[484, "api-changes"], [484, "id7"]], "Changes that Affect Requirements": [[484, "changes-that-affect-requirements"], [484, "id12"]], "ARMI v0.4.0": [[484, "armi-v0-4-0"]], "Release Notes": [[485, "release-notes"]], "Hands-on at the ARMI Terminal": [[486, "Hands-on-at-the-ARMI-Terminal"]], "Initializing and Exploring the ARMI Model": [[486, "Initializing-and-Exploring-the-ARMI-Model"]], "Quiz Question 1": [[486, null]], "Exploring the state of the reactor": [[486, "Exploring-the-state-of-the-reactor"]], "Modifying the state of the reactor": [[486, "Modifying-the-state-of-the-reactor"]], "Modifying number densities": [[486, "Modifying-number-densities"]], "Saving state to disk": [[486, "Saving-state-to-disk"]], "Fuel management": [[486, "Fuel-management"]], "Loading from the database": [[486, "Loading-from-the-database"]], "Tutorials": [[487, "tutorials"]], "Making your first ARMI-based App": [[488, "making-your-first-armi-based-app"]], "Starting a new app": [[488, "starting-a-new-app"]], "Registering the app with ARMI": [[488, "registering-the-app-with-armi"]], "Defining the app class": [[488, "defining-the-app-class"]], "Apps vs. plugins vs. interfaces": [[488, null]], "Defining the physics plugin": [[488, "defining-the-physics-plugin"]], "What are plugins again?": [[488, null]], "Defining custom settings": [[488, "defining-custom-settings"]], "Creating the physics kernels": [[488, "creating-the-physics-kernels"]], "Making the (dummy) flux kernel": [[488, "making-the-dummy-flux-kernel"]], "Making the thermal/hydraulics kernel": [[488, "making-the-thermal-hydraulics-kernel"]], "Adding entry points": [[488, "adding-entry-points"]], "Running the app and debugging": [[488, "running-the-app-and-debugging"]], "Windows tip": [[488, null]], "Submodule tip": [[488, null]], "Yet another way": [[488, null]], "Adding a new material": [[488, "adding-a-new-material"]], "Why __main__.py?": [[488, null]], "Checking the output": [[488, "checking-the-output"]], "Fancy XDMF format": [[488, null]], "Bonus: Ad-hoc UserPlugins": [[488, "bonus-ad-hoc-userplugins"]], "Define the UserPlugin in Python": [[488, "define-the-userplugin-in-python"]], "Define a list of UserPlugins in the Settings File": [[488, "define-a-list-of-userplugins-in-the-settings-file"]], "The ARMI Material Library": [[489, "The-ARMI-Material-Library"]], "The ARMI Nuclide and Element Packages": [[490, "The-ARMI-Nuclide-and-Element-Packages"]], "Accessing Individual Nuclide Data/Attributes": [[490, "Accessing-Individual-Nuclide-Data/Attributes"]], "How many total nuclides and elements are defined in the framework?": [[490, "How-many-total-nuclides-and-elements-are-defined-in-the-framework?"]], "Looking up nuclide and elemental data for U-235": [[490, "Looking-up-nuclide-and-elemental-data-for-U-235"]], "Looking up nuclide and elemental data for Li-7": [[490, "Looking-up-nuclide-and-elemental-data-for-Li-7"]], "Exploring elemental Lithium data": [[490, "Exploring-elemental-Lithium-data"]], "Plotting the Chart of the Nuclides": [[490, "Plotting-the-Chart-of-the-Nuclides"]], "Parameter sweeps": [[491, "Parameter-sweeps"]], "A simple one-dimensional parameter sweep": [[491, "A-simple-one-dimensional-parameter-sweep"]], "Modifying the reactor design": [[491, "Modifying-the-reactor-design"]], "A full factorial parameter sweep": [[491, "A-full-factorial-parameter-sweep"]], "Post-processing the results of the sweep": [[491, "Post-processing-the-results-of-the-sweep"]], "Building input files for a fast reactor": [[492, "building-input-files-for-a-fast-reactor"]], "Setting up the blueprints": [[492, "setting-up-the-blueprints"], [493, "setting-up-the-blueprints"]], "Defining non-fuel blocks": [[492, "defining-non-fuel-blocks"]], "Radial Shields": [[492, "radial-shields"]], "Reflectors": [[492, "reflectors"]], "Control": [[492, "control"]], "Plenum": [[492, "plenum"]], "Defining how the blocks are arranged into assemblies": [[492, "defining-how-the-blocks-are-arranged-into-assemblies"]], "Defining the fuel assemblies": [[492, "defining-the-fuel-assemblies"]], "Defining the non-fuel assemblies": [[492, "defining-the-non-fuel-assemblies"]], "Specifying the core map": [[492, "specifying-the-core-map"]], "Specifying settings": [[492, "specifying-settings"]], "Defining fuel management": [[492, "defining-fuel-management"], [493, "defining-fuel-management"]], "Building input files for a thermal reactor": [[493, "building-input-files-for-a-thermal-reactor"]], "Custom isotopic vectors": [[493, "custom-isotopic-vectors"]], "The UO2 block": [[493, "the-uo2-block"]], "The MOX block": [[493, "the-mox-block"]], "The moderator block": [[493, "the-moderator-block"]], "The 3-D Assembly definitions": [[493, "the-3-d-assembly-definitions"]], "The Systems definition": [[493, "the-systems-definition"]], "The Grids definitions": [[493, "the-grids-definitions"]], "Nuclide Flags": [[493, "nuclide-flags"], [501, "nuclide-flags"]], "The settings file": [[493, "the-settings-file"]], "Ok, so now what?": [[493, "ok-so-now-what"]], "Accessing Entry Points": [[495, "accessing-entry-points"]], "Reports Entry Point": [[495, "reports-entry-point"]], "Assembly Parameters": [[496, "assembly-parameters"]], "Assembly Parameters from Framework": [[496, "id1"]], "Block Parameters": [[497, "block-parameters"]], "Block Parameters from Framework": [[497, "id1"]], "Block Parameters from FuelPerformancePlugin": [[497, "id2"]], "Block Parameters from ThermalHydraulicsPlugin": [[497, "id3"]], "Block Parameters from NeutronicsPlugin": [[497, "id4"]], "Component Parameters": [[498, "component-parameters"]], "Component Parameters from Framework": [[498, "id1"]], "Core Parameters": [[499, "core-parameters"]], "Core Parameters from Framework": [[499, "id1"]], "Core Parameters from NeutronicsPlugin": [[499, "id2"]], "User Docs": [[500, "user-docs"]], "Inputs": [[501, "inputs"]], "YAML Files": [[501, "yaml-files"]], "The Settings Input File": [[501, "the-settings-input-file"]], "The ARMI GUI": [[501, "the-armi-gui"]], "The assembly clicker": [[501, "the-assembly-clicker"]], "The ARMI Environment Tab": [[501, "the-armi-environment-tab"]], "Some special settings": [[501, "some-special-settings"]], "Detail assemblies": [[501, "detail-assemblies"]], "Kinetics settings": [[501, "kinetics-settings"]], "Cycle history": [[501, "cycle-history"]], "Restart cases": [[501, "restart-cases"]], "The Blueprints Input File": [[501, "the-blueprints-input-file"]], "Blueprint sections": [[501, "blueprint-sections"]], "Blocks and Components": [[501, "blocks-and-components"]], "Defining a Component": [[501, "defining-a-component"]], "Component Types": [[501, "component-types"]], "Component Links": [[501, "component-links"]], "Pin lattices": [[501, "pin-lattices"]], "Flags and naming": [[501, "flags-and-naming"]], "Assemblies": [[501, "assemblies"]], "Systems": [[501, "systems"]], "Plugin Behavior": [[501, "plugin-behavior"]], "Grids": [[501, "grids"]], "Custom Isotopics": [[501, "custom-isotopics"]], "Advanced topics": [[501, "advanced-topics"]], "Overlapping shapes": [[501, "overlapping-shapes"]], "Component area modifications": [[501, "component-area-modifications"]], "Putting it all together to make a Block": [[501, "putting-it-all-together-to-make-a-block"]], "Making blocks with unshaped components": [[501, "making-blocks-with-unshaped-components"]], "Fuel Management Input": [[501, "fuel-management-input"]], "Fuel Management Operations": [[501, "fuel-management-operations"]], "swapAssemblies": [[501, "swapassemblies"]], "dischargeSwap": [[501, "dischargeswap"]], "swapCascade": [[501, "swapcascade"]], "Choosing Assemblies to Move": [[501, "choosing-assemblies-to-move"]], "Fuel Management Examples": [[501, "fuel-management-examples"]], "Convergent-Divergent": [[501, "convergent-divergent"]], "Fuel Management Tips": [[501, "fuel-management-tips"]], "Running a branch search": [[501, "running-a-branch-search"]], "Settings Report": [[501, "settings-report"]], "ARMI Settings": [[501, "id14"]], "Accessing Data in ARMI": [[502, "accessing-data-in-armi"]], "Settings and State Variables": [[502, "settings-and-state-variables"]], "Accessing Some Interesting Info": [[502, "accessing-some-interesting-info"]], "Outputs": [[503, "outputs"]], "The Standard Output": [[503, "the-standard-output"]], "The Database File": [[503, "the-database-file"]], "Loading Reactor State": [[503, "loading-reactor-state"]], "Extracting Reactor History": [[503, "extracting-reactor-history"]], "Extracting Settings and Blueprints": [[503, "extracting-settings-and-blueprints"]], "File format": [[503, "file-format"]], "Database Structure": [[503, "database-structure"]], "Database structure": [[503, "id1"]], "Physics Coupling": [[504, "physics-coupling"]], "Loose Coupling": [[504, "loose-coupling"]], "Tight Coupling": [[504, "tight-coupling"]], "Eigenvalue": [[504, "eigenvalue"]], "Block-wise Power": [[504, "block-wise-power"]], "The Global Flux Interface": [[504, "the-global-flux-interface"]], "Radial and Axial Expansion and Contraction": [[505, "radial-and-axial-expansion-and-contraction"]], "Thermal Expansion": [[505, "thermal-expansion"]], "Reactor Parameters": [[506, "reactor-parameters"]], "Reactor Parameters from Framework": [[506, "id1"]]}, "indexentries": {"applyasynciowindowsworkaround() (in module armi)": [[0, "armi.applyAsyncioWindowsWorkaround"]], "armi": [[0, "module-armi"], [478, "term-ARMI"]], "configure() (in module armi)": [[0, "armi.configure"]], "disablefutureconfigures() (in module armi)": [[0, "armi.disableFutureConfigures"]], "getapp() (in module armi)": [[0, "armi.getApp"]], "getdefaultpluginmanager() (in module armi)": [[0, "armi.getDefaultPluginManager"]], "getdefaultplugins() (in module armi)": [[0, "armi.getDefaultPlugins"]], "getpluginmanager() (in module armi)": [[0, "armi.getPluginManager"]], "getpluginmanagerorfail() (in module armi)": [[0, "armi.getPluginManagerOrFail"]], "init() (in module armi)": [[0, "armi.init"]], "isconfigured() (in module armi)": [[0, "armi.isConfigured"]], "isstablereleaseversion() (in module armi)": [[0, "armi.isStableReleaseVersion"]], "module": [[0, "module-armi"], [1, "module-armi.apps"], [2, "module-armi.bookkeeping"], [3, "module-armi.bookkeeping.db"], [4, "module-armi.bookkeeping.db.compareDB3"], [5, "module-armi.bookkeeping.db.database3"], [6, "module-armi.bookkeeping.db.databaseInterface"], [7, "module-armi.bookkeeping.db.factory"], [8, "module-armi.bookkeeping.db.jaggedArray"], [9, "module-armi.bookkeeping.db.layout"], [10, "module-armi.bookkeeping.db.permissions"], [11, "module-armi.bookkeeping.db.tests"], [12, "module-armi.bookkeeping.db.tests.test_comparedb3"], [13, "module-armi.bookkeeping.db.tests.test_database3"], [14, "module-armi.bookkeeping.db.tests.test_databaseInterface"], [15, "module-armi.bookkeeping.db.tests.test_jaggedArray"], [16, "module-armi.bookkeeping.db.tests.test_layout"], [17, "module-armi.bookkeeping.db.typedefs"], [18, "module-armi.bookkeeping.historyTracker"], [19, "module-armi.bookkeeping.mainInterface"], [20, "module-armi.bookkeeping.memoryProfiler"], [21, "module-armi.bookkeeping.report"], [22, "module-armi.bookkeeping.report.data"], [23, "module-armi.bookkeeping.report.html"], [24, "module-armi.bookkeeping.report.newReportUtils"], [25, "module-armi.bookkeeping.report.newReports"], [26, "module-armi.bookkeeping.report.reportInterface"], [27, "module-armi.bookkeeping.report.reportingUtils"], [28, "module-armi.bookkeeping.report.tests"], [29, "module-armi.bookkeeping.report.tests.test_newReport"], [30, "module-armi.bookkeeping.report.tests.test_report"], [31, "module-armi.bookkeeping.snapshotInterface"], [32, "module-armi.bookkeeping.tests"], [33, "module-armi.bookkeeping.tests.test_historyTracker"], [34, "module-armi.bookkeeping.tests.test_memoryProfiler"], [35, "module-armi.bookkeeping.tests.test_snapshot"], [36, "module-armi.bookkeeping.visualization"], [37, "module-armi.bookkeeping.visualization.dumper"], [38, "module-armi.bookkeeping.visualization.entryPoint"], [39, "module-armi.bookkeeping.visualization.tests"], [40, "module-armi.bookkeeping.visualization.tests.test_vis"], [41, "module-armi.bookkeeping.visualization.tests.test_xdmf"], [42, "module-armi.bookkeeping.visualization.utils"], [43, "module-armi.bookkeeping.visualization.vtk"], [44, "module-armi.bookkeeping.visualization.xdmf"], [45, "module-armi.cases"], [46, "module-armi.cases.case"], [47, "module-armi.cases.inputModifiers"], [48, "module-armi.cases.inputModifiers.inputModifiers"], [49, "module-armi.cases.inputModifiers.neutronicsModifiers"], [50, "module-armi.cases.inputModifiers.pinTypeInputModifiers"], [51, "module-armi.cases.inputModifiers.tests"], [52, "module-armi.cases.inputModifiers.tests.test_inputModifiers"], [53, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"], [54, "module-armi.cases.suite"], [55, "module-armi.cases.suiteBuilder"], [56, "module-armi.cases.tests"], [57, "module-armi.cases.tests.test_cases"], [58, "module-armi.cases.tests.test_suiteBuilder"], [59, "module-armi.cli"], [60, "module-armi.cli.checkInputs"], [61, "module-armi.cli.cleanTemps"], [62, "module-armi.cli.clone"], [63, "module-armi.cli.compareCases"], [64, "module-armi.cli.database"], [65, "module-armi.cli.entryPoint"], [66, "module-armi.cli.gridGui"], [67, "module-armi.cli.migrateInputs"], [68, "module-armi.cli.modify"], [69, "module-armi.cli.reportsEntryPoint"], [70, "module-armi.cli.run"], [71, "module-armi.cli.runSuite"], [72, "module-armi.cli.tests"], [73, "module-armi.cli.tests.test_runEntryPoint"], [74, "module-armi.cli.tests.test_runSuite"], [75, "module-armi.conftest"], [76, "module-armi.context"], [77, "module-armi.interfaces"], [78, "module-armi.materials"], [79, "module-armi.materials.air"], [80, "module-armi.materials.alloy200"], [81, "module-armi.materials.b4c"], [82, "module-armi.materials.be9"], [83, "module-armi.materials.caH2"], [84, "module-armi.materials.californium"], [85, "module-armi.materials.concrete"], [86, "module-armi.materials.copper"], [87, "module-armi.materials.cs"], [88, "module-armi.materials.custom"], [89, "module-armi.materials.graphite"], [90, "module-armi.materials.hafnium"], [91, "module-armi.materials.hastelloyN"], [92, "module-armi.materials.ht9"], [93, "module-armi.materials.inconel"], [94, "module-armi.materials.inconel600"], [95, "module-armi.materials.inconel625"], [96, "module-armi.materials.inconel800"], [97, "module-armi.materials.inconelPE16"], [98, "module-armi.materials.inconelX750"], [99, "module-armi.materials.lead"], [100, "module-armi.materials.leadBismuth"], [101, "module-armi.materials.lithium"], [102, "module-armi.materials.magnesium"], [103, "module-armi.materials.material"], [104, "module-armi.materials.mgO"], [105, "module-armi.materials.mixture"], [106, "module-armi.materials.molybdenum"], [107, "module-armi.materials.mox"], [108, "module-armi.materials.nZ"], [109, "module-armi.materials.potassium"], [110, "module-armi.materials.scandiumOxide"], [111, "module-armi.materials.siC"], [112, "module-armi.materials.sodium"], [113, "module-armi.materials.sodiumChloride"], [114, "module-armi.materials.sulfur"], [115, "module-armi.materials.tZM"], [116, "module-armi.materials.tantalum"], [117, "module-armi.materials.tests"], [118, "module-armi.materials.tests.test__init__"], [119, "module-armi.materials.tests.test_air"], [120, "module-armi.materials.tests.test_b4c"], [121, "module-armi.materials.tests.test_be9"], [122, "module-armi.materials.tests.test_graphite"], [123, "module-armi.materials.tests.test_lithium"], [124, "module-armi.materials.tests.test_materials"], [125, "module-armi.materials.tests.test_sic"], [126, "module-armi.materials.tests.test_sulfur"], [127, "module-armi.materials.tests.test_thoriumOxide"], [128, "module-armi.materials.tests.test_uZr"], [129, "module-armi.materials.tests.test_water"], [130, "module-armi.materials.thU"], [131, "module-armi.materials.thorium"], [132, "module-armi.materials.thoriumOxide"], [133, "module-armi.materials.uThZr"], [134, "module-armi.materials.uZr"], [135, "module-armi.materials.uranium"], [136, "module-armi.materials.uraniumOxide"], [137, "module-armi.materials.void"], [138, "module-armi.materials.water"], [139, "module-armi.materials.yttriumOxide"], [140, "module-armi.materials.zincOxide"], [141, "module-armi.materials.zr"], [142, "module-armi.meta"], [143, "module-armi.migration"], [144, "module-armi.migration.base"], [145, "module-armi.migration.m0_1_3"], [146, "module-armi.migration.m0_1_6"], [147, "module-armi.migration.tests"], [148, "module-armi.migration.tests.test_m0_1_6"], [149, "module-armi.migration.tests.test_migration_base"], [150, "module-armi.mpiActions"], [151, "module-armi.nucDirectory"], [152, "module-armi.nucDirectory.elements"], [153, "module-armi.nucDirectory.nucDir"], [154, "module-armi.nucDirectory.nuclideBases"], [155, "module-armi.nucDirectory.tests"], [156, "module-armi.nucDirectory.tests.test_elements"], [157, "module-armi.nucDirectory.tests.test_nucDirectory"], [158, "module-armi.nucDirectory.tests.test_nuclideBases"], [159, "module-armi.nucDirectory.tests.test_thermalScattering"], [160, "module-armi.nucDirectory.tests.test_transmutations"], [161, "module-armi.nucDirectory.thermalScattering"], [162, "module-armi.nucDirectory.transmutations"], [163, "module-armi.nuclearDataIO"], [164, "module-armi.nuclearDataIO.cccc"], [165, "module-armi.nuclearDataIO.cccc.cccc"], [166, "module-armi.nuclearDataIO.cccc.compxs"], [167, "module-armi.nuclearDataIO.cccc.dif3d"], [168, "module-armi.nuclearDataIO.cccc.dlayxs"], [169, "module-armi.nuclearDataIO.cccc.fixsrc"], [170, "module-armi.nuclearDataIO.cccc.gamiso"], [171, "module-armi.nuclearDataIO.cccc.geodst"], [172, "module-armi.nuclearDataIO.cccc.isotxs"], [173, "module-armi.nuclearDataIO.cccc.labels"], [174, "module-armi.nuclearDataIO.cccc.nhflux"], [175, "module-armi.nuclearDataIO.cccc.pmatrx"], [176, "module-armi.nuclearDataIO.cccc.pwdint"], [177, "module-armi.nuclearDataIO.cccc.rtflux"], [178, "module-armi.nuclearDataIO.cccc.rzflux"], [179, "module-armi.nuclearDataIO.cccc.tests"], [180, "module-armi.nuclearDataIO.cccc.tests.test_cccc"], [181, "module-armi.nuclearDataIO.cccc.tests.test_compxs"], [182, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"], [183, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"], [184, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"], [185, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"], [186, "module-armi.nuclearDataIO.cccc.tests.test_geodst"], [187, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"], [188, "module-armi.nuclearDataIO.cccc.tests.test_labels"], [189, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"], [190, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"], [191, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"], [192, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"], [193, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"], [194, "module-armi.nuclearDataIO.nuclearFileMetadata"], [195, "module-armi.nuclearDataIO.tests"], [196, "module-armi.nuclearDataIO.tests.test_xsCollections"], [197, "module-armi.nuclearDataIO.tests.test_xsLibraries"], [198, "module-armi.nuclearDataIO.tests.test_xsNuclides"], [199, "module-armi.nuclearDataIO.xsCollections"], [200, "module-armi.nuclearDataIO.xsLibraries"], [201, "module-armi.nuclearDataIO.xsNuclides"], [202, "module-armi.operators"], [203, "module-armi.operators.operator"], [204, "module-armi.operators.operatorMPI"], [205, "module-armi.operators.runTypes"], [206, "module-armi.operators.settingsValidation"], [207, "module-armi.operators.snapshots"], [208, "module-armi.operators.tests"], [209, "module-armi.operators.tests.test_operatorSnapshots"], [210, "module-armi.operators.tests.test_operators"], [211, "module-armi.physics"], [212, "module-armi.physics.constants"], [213, "module-armi.physics.executers"], [214, "module-armi.physics.fuelCycle"], [215, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"], [216, "module-armi.physics.fuelCycle.fuelHandlerFactory"], [217, "module-armi.physics.fuelCycle.fuelHandlerInterface"], [218, "module-armi.physics.fuelCycle.fuelHandlers"], [219, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"], [220, "module-armi.physics.fuelCycle.settings"], [221, "module-armi.physics.fuelCycle.tests"], [222, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"], [223, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"], [224, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"], [225, "module-armi.physics.fuelPerformance"], [226, "module-armi.physics.fuelPerformance.executers"], [227, "module-armi.physics.fuelPerformance.parameters"], [228, "module-armi.physics.fuelPerformance.plugin"], [229, "module-armi.physics.fuelPerformance.settings"], [230, "module-armi.physics.fuelPerformance.tests"], [231, "module-armi.physics.fuelPerformance.tests.test_executers"], [232, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"], [233, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"], [234, "module-armi.physics.fuelPerformance.utils"], [235, "module-armi.physics.neutronics"], [236, "module-armi.physics.neutronics.const"], [237, "module-armi.physics.neutronics.crossSectionGroupManager"], [238, "module-armi.physics.neutronics.crossSectionSettings"], [239, "module-armi.physics.neutronics.diffIsotxs"], [240, "module-armi.physics.neutronics.energyGroups"], [241, "module-armi.physics.neutronics.fissionProductModel"], [242, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"], [243, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"], [244, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"], [245, "module-armi.physics.neutronics.fissionProductModel.tests"], [246, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"], [247, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"], [248, "module-armi.physics.neutronics.globalFlux"], [249, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"], [250, "module-armi.physics.neutronics.globalFlux.tests"], [251, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"], [252, "module-armi.physics.neutronics.latticePhysics"], [253, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"], [254, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"], [255, "module-armi.physics.neutronics.latticePhysics.tests"], [256, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"], [257, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"], [258, "module-armi.physics.neutronics.macroXSGenerationInterface"], [259, "module-armi.physics.neutronics.parameters"], [260, "module-armi.physics.neutronics.reports"], [261, "module-armi.physics.neutronics.settings"], [262, "module-armi.physics.neutronics.tests"], [263, "module-armi.physics.neutronics.tests.test_crossSectionManager"], [264, "module-armi.physics.neutronics.tests.test_crossSectionSettings"], [265, "module-armi.physics.neutronics.tests.test_crossSectionTable"], [266, "module-armi.physics.neutronics.tests.test_energyGroups"], [267, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"], [268, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"], [269, "module-armi.physics.safety"], [270, "module-armi.physics.tests"], [271, "module-armi.physics.tests.test_executers"], [272, "module-armi.physics.thermalHydraulics"], [273, "module-armi.physics.thermalHydraulics.const"], [274, "module-armi.physics.thermalHydraulics.parameters"], [275, "module-armi.physics.thermalHydraulics.plugin"], [276, "module-armi.physics.thermalHydraulics.settings"], [277, "module-armi.physics.thermalHydraulics.tests"], [278, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"], [279, "module-armi.pluginManager"], [280, "module-armi.plugins"], [281, "module-armi.reactor"], [282, "module-armi.reactor.assemblies"], [283, "module-armi.reactor.assemblyParameters"], [284, "module-armi.reactor.blockParameters"], [285, "module-armi.reactor.blocks"], [286, "module-armi.reactor.blueprints"], [287, "module-armi.reactor.blueprints.assemblyBlueprint"], [288, "module-armi.reactor.blueprints.blockBlueprint"], [289, "module-armi.reactor.blueprints.componentBlueprint"], [290, "module-armi.reactor.blueprints.gridBlueprint"], [291, "module-armi.reactor.blueprints.isotopicOptions"], [292, "module-armi.reactor.blueprints.reactorBlueprint"], [293, "module-armi.reactor.blueprints.tests"], [294, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"], [295, "module-armi.reactor.blueprints.tests.test_blockBlueprints"], [296, "module-armi.reactor.blueprints.tests.test_blueprints"], [297, "module-armi.reactor.blueprints.tests.test_componentBlueprint"], [298, "module-armi.reactor.blueprints.tests.test_customIsotopics"], [299, "module-armi.reactor.blueprints.tests.test_gridBlueprints"], [300, "module-armi.reactor.blueprints.tests.test_materialModifications"], [301, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"], [302, "module-armi.reactor.components"], [303, "module-armi.reactor.components.basicShapes"], [304, "module-armi.reactor.components.complexShapes"], [305, "module-armi.reactor.components.component"], [306, "module-armi.reactor.components.componentParameters"], [307, "module-armi.reactor.components.volumetricShapes"], [308, "module-armi.reactor.composites"], [309, "module-armi.reactor.converters"], [310, "module-armi.reactor.converters.axialExpansionChanger"], [311, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"], [312, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"], [313, "module-armi.reactor.converters.axialExpansionChanger.expansionData"], [314, "module-armi.reactor.converters.blockConverters"], [315, "module-armi.reactor.converters.geometryConverters"], [316, "module-armi.reactor.converters.meshConverters"], [317, "module-armi.reactor.converters.parameterSweeps"], [318, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"], [319, "module-armi.reactor.converters.pinTypeBlockConverters"], [320, "module-armi.reactor.converters.tests"], [321, "module-armi.reactor.converters.tests.test_axialExpansionChanger"], [322, "module-armi.reactor.converters.tests.test_blockConverter"], [323, "module-armi.reactor.converters.tests.test_geometryConverters"], [324, "module-armi.reactor.converters.tests.test_meshConverters"], [325, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"], [326, "module-armi.reactor.converters.tests.test_uniformMesh"], [327, "module-armi.reactor.converters.uniformMesh"], [328, "module-armi.reactor.cores"], [329, "module-armi.reactor.excoreStructure"], [330, "module-armi.reactor.flags"], [331, "module-armi.reactor.geometry"], [332, "module-armi.reactor.grids"], [333, "module-armi.reactor.grids.axial"], [334, "module-armi.reactor.grids.cartesian"], [335, "module-armi.reactor.grids.constants"], [336, "module-armi.reactor.grids.grid"], [337, "module-armi.reactor.grids.hexagonal"], [338, "module-armi.reactor.grids.locations"], [339, "module-armi.reactor.grids.structuredGrid"], [340, "module-armi.reactor.grids.thetarz"], [341, "module-armi.reactor.parameters"], [342, "module-armi.reactor.parameters.exceptions"], [343, "module-armi.reactor.parameters.parameterCollections"], [344, "module-armi.reactor.parameters.parameterDefinitions"], [345, "module-armi.reactor.parameters.resolveCollections"], [346, "module-armi.reactor.reactorParameters"], [347, "module-armi.reactor.reactors"], [348, "module-armi.reactor.spentFuelPool"], [349, "module-armi.reactor.systemLayoutInput"], [350, "module-armi.reactor.tests"], [351, "module-armi.reactor.tests.test_assemblies"], [352, "module-armi.reactor.tests.test_blocks"], [353, "module-armi.reactor.tests.test_components"], [354, "module-armi.reactor.tests.test_composites"], [355, "module-armi.reactor.tests.test_excoreStructures"], [356, "module-armi.reactor.tests.test_flags"], [357, "module-armi.reactor.tests.test_geometry"], [358, "module-armi.reactor.tests.test_parameters"], [359, "module-armi.reactor.tests.test_reactors"], [360, "module-armi.reactor.tests.test_rz_reactors"], [361, "module-armi.reactor.tests.test_zones"], [362, "module-armi.reactor.zones"], [363, "module-armi.runLog"], [364, "module-armi.settings"], [365, "module-armi.settings.caseSettings"], [366, "module-armi.settings.fwSettings"], [367, "module-armi.settings.fwSettings.databaseSettings"], [368, "module-armi.settings.fwSettings.globalSettings"], [369, "module-armi.settings.fwSettings.reportSettings"], [370, "module-armi.settings.fwSettings.tightCouplingSettings"], [371, "module-armi.settings.setting"], [372, "module-armi.settings.settingsIO"], [373, "module-armi.settings.settingsValidation"], [374, "module-armi.settings.tests"], [375, "module-armi.settings.tests.test_inspectors"], [376, "module-armi.settings.tests.test_settings"], [377, "module-armi.settings.tests.test_settingsIO"], [378, "module-armi.tests"], [379, "module-armi.tests.mockRunLogs"], [380, "module-armi.tests.refSmallReactorShuffleLogic"], [381, "module-armi.tests.test_apps"], [382, "module-armi.tests.test_armiTestHelper"], [383, "module-armi.tests.test_cartesian"], [384, "module-armi.tests.test_context"], [385, "module-armi.tests.test_interfaces"], [386, "module-armi.tests.test_lwrInputs"], [387, "module-armi.tests.test_mpiActions"], [388, "module-armi.tests.test_mpiFeatures"], [389, "module-armi.tests.test_mpiParameters"], [390, "module-armi.tests.test_notebooks"], [391, "module-armi.tests.test_plugins"], [392, "module-armi.tests.test_runLog"], [393, "module-armi.tests.test_tests"], [394, "module-armi.tests.test_user_plugins"], [395, "module-armi.utils"], [396, "module-armi.utils.asciimaps"], [397, "module-armi.utils.codeTiming"], [398, "module-armi.utils.customExceptions"], [399, "module-armi.utils.densityTools"], [400, "module-armi.utils.directoryChangers"], [401, "module-armi.utils.directoryChangersMpi"], [402, "module-armi.utils.dynamicImporter"], [403, "module-armi.utils.flags"], [405, "module-armi.utils.hexagon"], [406, "module-armi.utils.iterables"], [407, "module-armi.utils.mathematics"], [408, "module-armi.utils.outputCache"], [409, "module-armi.utils.parsing"], [410, "module-armi.utils.pathTools"], [411, "module-armi.utils.plotting"], [412, "module-armi.utils.properties"], [413, "module-armi.utils.reportPlotting"], [414, "module-armi.utils.tabulate"], [415, "module-armi.utils.tests"], [416, "module-armi.utils.tests.test_asciimaps"], [417, "module-armi.utils.tests.test_codeTiming"], [418, "module-armi.utils.tests.test_custom_exceptions"], [419, "module-armi.utils.tests.test_densityTools"], [420, "module-armi.utils.tests.test_directoryChangers"], [421, "module-armi.utils.tests.test_directoryChangersMpi"], [422, "module-armi.utils.tests.test_flags"], [423, "module-armi.utils.tests.test_hexagon"], [424, "module-armi.utils.tests.test_iterables"], [425, "module-armi.utils.tests.test_mathematics"], [426, "module-armi.utils.tests.test_outputCache"], [427, "module-armi.utils.tests.test_parsing"], [428, "module-armi.utils.tests.test_pathTools"], [429, "module-armi.utils.tests.test_plotting"], [430, "module-armi.utils.tests.test_properties"], [431, "module-armi.utils.tests.test_reportPlotting"], [432, "module-armi.utils.tests.test_tabulate"], [433, "module-armi.utils.tests.test_textProcessors"], [434, "module-armi.utils.tests.test_triangle"], [435, "module-armi.utils.tests.test_units"], [436, "module-armi.utils.tests.test_utils"], [437, "module-armi.utils.textProcessors"], [438, "module-armi.utils.triangle"], [439, "module-armi.utils.units"]], "app (class in armi.apps)": [[1, "armi.apps.App"]], "armi.apps": [[1, "module-armi.apps"]], "getparamrenames() (armi.apps.app method)": [[1, "armi.apps.App.getParamRenames"]], "getsettings() (armi.apps.app method)": [[1, "armi.apps.App.getSettings"]], "name (armi.apps.app attribute)": [[1, "armi.apps.App.name"]], "pluginmanager (armi.apps.app property)": [[1, "armi.apps.App.pluginManager"]], "registerpluginflags() (armi.apps.app method)": [[1, "armi.apps.App.registerPluginFlags"]], "registeruserplugins() (armi.apps.app method)": [[1, "armi.apps.App.registerUserPlugins"]], "splashtext (armi.apps.app property)": [[1, "armi.apps.App.splashText"]], "version (armi.apps.app property)": [[1, "armi.apps.App.version"]], "bookkeepingplugin (class in armi.bookkeeping)": [[2, "armi.bookkeeping.BookkeepingPlugin"]], "armi.bookkeeping": [[2, "module-armi.bookkeeping"]], "definecasedependencies() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineEntryPoints"]], "exposeinterfaces() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.exposeInterfaces"]], "getreportcontents() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.mpiActionRequiresReset"]], "database3 (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.Database3"]], "databaseinterface (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.DatabaseInterface"]], "armi.bookkeeping.db": [[3, "module-armi.bookkeeping.db"]], "close() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.close"]], "closedb() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.closeDB"]], "comparedatabases() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.compareDatabases"]], "database (armi.bookkeeping.db.databaseinterface property)": [[3, "armi.bookkeeping.db.DatabaseInterface.database"]], "databasefactory() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.databaseFactory"]], "distributable() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.distributable"]], "filename (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database3 static method)": [[3, "armi.bookkeeping.db.Database3.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getH5Group"]], "gethistories() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistories"]], "gethistories() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistory"]], "gethistory() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database3 static method)": [[3, "armi.bookkeeping.db.Database3.grabLocalCommitHash"]], "hastimestep() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.hasTimeStep"]], "initdb() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEveryNode"]], "isopen() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.isOpen"]], "keys() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.keys"]], "load() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.load"]], "loadblueprints() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadGeometry"]], "loadoperator() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.loadOperator"]], "loadstate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.loadState"]], "mergehistory() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.mergeHistory"]], "name (armi.bookkeeping.db.databaseinterface attribute)": [[3, "armi.bookkeeping.db.DatabaseInterface.name"]], "open() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.open"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.prepRestartRun"]], "readinputsfromdb() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database3 attribute)": [[3, "armi.bookkeeping.db.Database3.timeNodeGroupPattern"]], "version (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.version"]], "versionmajor (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.versionMajor"]], "versionminor (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.versionMinor"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.writeDBEveryNode"]], "writeinputstodb() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.writeInputsToDB"]], "writesystemattributes() (armi.bookkeeping.db.database3 static method)": [[3, "armi.bookkeeping.db.Database3.writeSystemAttributes"]], "writetodb() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.writeToDB"]], "diffresults (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults"]], "outputwriter (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter"]], "adddiff() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addDiff"]], "addstructurediffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addStructureDiffs"]], "addtimestep() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addTimeStep"]], "armi.bookkeeping.db.comparedb3": [[4, "module-armi.bookkeeping.db.compareDB3"]], "comparedatabases() (in module armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.compareDatabases"]], "ndiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.nDiffs"]], "reportdiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.reportDiffs"]], "writeln() (armi.bookkeeping.db.comparedb3.outputwriter method)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter.writeln"]], "database3 (class in armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.Database3"]], "armi.bookkeeping.db.database3": [[5, "module-armi.bookkeeping.db.database3"]], "close() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.close"]], "collectblocknumberdensities() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.collectBlockNumberDensities"]], "filename (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database3.database3 static method)": [[5, "armi.bookkeeping.db.database3.Database3.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getH5Group"]], "geth5groupname() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.getH5GroupName"]], "gethistories() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database3.database3 static method)": [[5, "armi.bookkeeping.db.database3.Database3.grabLocalCommitHash"]], "h5db (armi.bookkeeping.db.database3.database3 attribute)": [[5, "armi.bookkeeping.db.database3.Database3.h5db"]], "hastimestep() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.hasTimeStep"]], "isopen() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.isOpen"]], "keys() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.keys"]], "load() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.load"]], "loadblueprints() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadGeometry"]], "mergehistory() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.mergeHistory"]], "open() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.open"]], "packspecialdata() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.packSpecialData"]], "readinputsfromdb() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database3.database3 attribute)": [[5, "armi.bookkeeping.db.database3.Database3.timeNodeGroupPattern"]], "unpackspecialdata() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.unpackSpecialData"]], "version (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.version"]], "versionmajor (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.versionMajor"]], "versionminor (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.versionMinor"]], "writeinputstodb() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.writeInputsToDB"]], "writesystemattributes() (armi.bookkeeping.db.database3.database3 static method)": [[5, "armi.bookkeeping.db.database3.Database3.writeSystemAttributes"]], "writetodb() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.writeToDB"]], "databaseinterface (class in armi.bookkeeping.db.databaseinterface)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface"]], "armi.bookkeeping.db.databaseinterface": [[6, "module-armi.bookkeeping.db.databaseInterface"]], "closedb() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.closeDB"]], "database (armi.bookkeeping.db.databaseinterface.databaseinterface property)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.database"]], "describeinterfaces() (in module armi.bookkeeping.db.databaseinterface)": [[6, "armi.bookkeeping.db.databaseInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.distributable"]], "gethistories() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistories"]], "gethistory() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistory"]], "initdb() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEveryNode"]], "loadstate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.loadState"]], "name (armi.bookkeeping.db.databaseinterface.databaseinterface attribute)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.name"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.prepRestartRun"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[7, "module-armi.bookkeeping.db.factory"]], "databasefactory() (in module armi.bookkeeping.db.factory)": [[7, "armi.bookkeeping.db.factory.databaseFactory"]], "jaggedarray (class in armi.bookkeeping.db.jaggedarray)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray"]], "armi.bookkeeping.db.jaggedarray": [[8, "module-armi.bookkeeping.db.jaggedArray"]], "flatten() (armi.bookkeeping.db.jaggedarray.jaggedarray static method)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray.flatten"]], "fromh5() (armi.bookkeeping.db.jaggedarray.jaggedarray class method)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray.fromH5"]], "tolist() (armi.bookkeeping.db.jaggedarray.jaggedarray method)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray.tolist"]], "unpack() (armi.bookkeeping.db.jaggedarray.jaggedarray method)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray.unpack"]], "layout (class in armi.bookkeeping.db.layout)": [[9, "armi.bookkeeping.db.layout.Layout"]], "allsubclasses() (armi.bookkeeping.db.layout.layout static method)": [[9, "armi.bookkeeping.db.layout.Layout.allSubclasses"]], "armi.bookkeeping.db.layout": [[9, "module-armi.bookkeeping.db.layout"]], "computeancestors() (armi.bookkeeping.db.layout.layout static method)": [[9, "armi.bookkeeping.db.layout.Layout.computeAncestors"]], "replacenoneswithnonsense() (in module armi.bookkeeping.db.layout)": [[9, "armi.bookkeeping.db.layout.replaceNonesWithNonsense"]], "replacenonsensewithnones() (in module armi.bookkeeping.db.layout)": [[9, "armi.bookkeeping.db.layout.replaceNonsenseWithNones"]], "writetodb() (armi.bookkeeping.db.layout.layout method)": [[9, "armi.bookkeeping.db.layout.Layout.writeToDB"]], "create_file_fie (armi.bookkeeping.db.permissions.permissions attribute)": [[10, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE"]], "create_file_fie2 (armi.bookkeeping.db.permissions.permissions attribute)": [[10, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE2"]], "create_file_tie (armi.bookkeeping.db.permissions.permissions attribute)": [[10, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_TIE"]], "default (armi.bookkeeping.db.permissions.permissions attribute)": [[10, "armi.bookkeeping.db.permissions.Permissions.DEFAULT"]], "permissions (class in armi.bookkeeping.db.permissions)": [[10, "armi.bookkeeping.db.permissions.Permissions"]], "read_only_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[10, "armi.bookkeeping.db.permissions.Permissions.READ_ONLY_FME"]], "read_write_create (armi.bookkeeping.db.permissions.permissions attribute)": [[10, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_CREATE"]], "read_write_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[10, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_FME"]], "all (armi.bookkeeping.db.permissions.permissions attribute)": [[10, "armi.bookkeeping.db.permissions.Permissions.all"]], "armi.bookkeeping.db.permissions": [[10, "module-armi.bookkeeping.db.permissions"]], "create (armi.bookkeeping.db.permissions.permissions attribute)": [[10, "armi.bookkeeping.db.permissions.Permissions.create"]], "read (armi.bookkeeping.db.permissions.permissions attribute)": [[10, "armi.bookkeeping.db.permissions.Permissions.read"]], "write (armi.bookkeeping.db.permissions.permissions attribute)": [[10, "armi.bookkeeping.db.permissions.Permissions.write"]], "armi.bookkeeping.db.tests": [[11, "module-armi.bookkeeping.db.tests"]], "testcomparedb3 (class in armi.bookkeeping.db.tests.test_comparedb3)": [[12, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3": [[12, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "test_compareauxdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[12, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareAuxData"]], "test_comparedatabaseduplicate() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[12, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseDuplicate"]], "test_comparedatabasesim() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[12, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseSim"]], "test_comparesets() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[12, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareSets"]], "test_diffresultsbasic() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[12, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffResultsBasic"]], "test_diffsimpledata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[12, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSimpleData"]], "test_diffspecialdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[12, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSpecialData"]], "test_outputwriter() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[12, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_outputWriter"]], "small_yaml (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase attribute)": [[13, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.SMALL_YAML"]], "testdatabase3 (class in armi.bookkeeping.db.tests.test_database3)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3"]], "testdatabase3smaller (class in armi.bookkeeping.db.tests.test_database3)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller"]], "testwritereaddatabase (class in armi.bookkeeping.db.tests.test_database3)": [[13, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase"]], "armi.bookkeeping.db.tests.test_database3": [[13, "module-armi.bookkeeping.db.tests.test_database3"]], "makehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.makeHistory"]], "makeshufflehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.makeShuffleHistory"]], "test_auxdata() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_auxData"]], "test_baddata() (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.test_badData"]], "test_computeparents() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_computeParents"]], "test_deleting() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_deleting"]], "test_filename() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_fileName"]], "test_geth5file() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_getH5File"]], "test_grablocalcommithash() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_grabLocalCommitHash"]], "test_history() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_history"]], "test_load() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_load"]], "test_loadblueprints() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_loadBlueprints"]], "test_loadcs() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_loadCS"]], "test_loadsortsetting() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_loadSortSetting"]], "test_mergehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_mergeHistory"]], "test_open() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_open"]], "test_preprestartrun() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_prepRestartRun"]], "test_readinputsfromdb() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_readInputsFromDB"]], "test_readwriteroundtrip() (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.test_readWriteRoundTrip"]], "test_replacenones() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_replaceNones"]], "test_splitdatabase() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_splitDatabase"]], "test_writetodb() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[13, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_writeToDB"]], "mockinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface"]], "testbadname (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName"]], "testdatabaseinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface"]], "testdatabaseinterfacebol (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL"]], "testdatabasereading (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading"]], "testdatabasewriter (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter"]], "teststandardfollowon (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn"]], "armi.bookkeeping.db.tests.test_databaseinterface": [[14, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "getsimpledboperator() (in module armi.bookkeeping.db.tests.test_databaseinterface)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.getSimpleDBOperator"]], "interacteverynode() (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.interactEveryNode"]], "name (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface attribute)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.name"]], "test_baddbname() (armi.bookkeeping.db.tests.test_databaseinterface.testbadname method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName.test_badDBName"]], "test_demonstratewritinginteractions() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_demonstrateWritingInteractions"]], "test_distributable() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_distributable"]], "test_gethistory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistory"]], "test_gethistorybylocation() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistoryByLocation"]], "test_growtofullcore() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCore"]], "test_growtofullcorefromfactory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactory"]], "test_growtofullcorefromfactorywithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactoryWithCS"]], "test_growtofullcorewithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreWithCS"]], "test_interactbol() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterfacebol method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL.test_interactBOL"]], "test_interacteverynodereturntightcoupling() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_interactEveryNodeReturnTightCoupling"]], "test_metadataendfail() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaDataEndFail"]], "test_metadata_endsuccessfully() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaData_endSuccessfully"]], "test_nosyncdbafterwrite() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_noSyncDbAfterWrite"]], "test_readwithoutinputs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWithoutInputs"]], "test_readwritten() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWritten"]], "test_standardrestart() (armi.bookkeeping.db.tests.test_databaseinterface.teststandardfollowon method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn.test_standardRestart"]], "test_syncdbafterwrite() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_syncDbAfterWrite"]], "test_timenodeloop_tightcoupling() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_timeNodeLoop_tightCoupling"]], "test_timesteps() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_timesteps"]], "test_varioustypeswork() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_variousTypesWork"]], "test_writesystemattributes() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[14, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_writeSystemAttributes"]], "testjaggedarray (class in armi.bookkeeping.db.tests.test_jaggedarray)": [[15, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray"]], "armi.bookkeeping.db.tests.test_jaggedarray": [[15, "module-armi.bookkeeping.db.tests.test_jaggedArray"]], "test_backwardscompatible() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[15, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_backwardsCompatible"]], "test_flatten() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[15, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_flatten"]], "test_roundtrip() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[15, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_roundTrip"]], "test_roundtripbool() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[15, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_roundTripBool"]], "testlocationpacking (class in armi.bookkeeping.db.tests.test_layout)": [[16, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout": [[16, "module-armi.bookkeeping.db.tests.test_layout"]], "test_close() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[16, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_close"]], "test_locationpacking() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[16, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPacking"]], "test_locationpackingoldversion() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[16, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOldVersion"]], "test_locationpackingolderversions() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[16, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOlderVersions"]], "armi.bookkeeping.db.typedefs": [[17, "module-armi.bookkeeping.db.typedefs"]], "historytrackerinterface (class in armi.bookkeeping.historytracker)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface"]], "addallfuelassems() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addAllFuelAssems"]], "adddetailassembliesbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembliesBOL"]], "adddetailassembly() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembly"]], "adddetailassemsbyassemnums() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssemsByAssemNums"]], "armi.bookkeeping.historytracker": [[18, "module-armi.bookkeeping.historyTracker"]], "describeinterfaces() (in module armi.bookkeeping.historytracker)": [[18, "armi.bookkeeping.historyTracker.describeInterfaces"]], "filtertimeindices() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.filterTimeIndices"]], "getblockhistoryval() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getBlockHistoryVal"]], "getdetailassemblies() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailAssemblies"]], "getdetailblocks() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailBlocks"]], "gettimesteps() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTimeSteps"]], "gettrackedparams() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTrackedParams"]], "interactboc() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOC"]], "interactbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOL"]], "interacteol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactEOL"]], "name (armi.bookkeeping.historytracker.historytrackerinterface attribute)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.name"]], "preloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.preloadBlockHistoryVals"]], "unloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.unloadBlockHistoryVals"]], "writeassemhistory() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[18, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.writeAssemHistory"]], "maininterface (class in armi.bookkeeping.maininterface)": [[19, "armi.bookkeeping.mainInterface.MainInterface"]], "armi.bookkeeping.maininterface": [[19, "module-armi.bookkeeping.mainInterface"]], "cleanarmifiles() (armi.bookkeeping.maininterface.maininterface method)": [[19, "armi.bookkeeping.mainInterface.MainInterface.cleanARMIFiles"]], "cleanlastcyclefiles() (armi.bookkeeping.maininterface.maininterface method)": [[19, "armi.bookkeeping.mainInterface.MainInterface.cleanLastCycleFiles"]], "describeinterfaces() (in module armi.bookkeeping.maininterface)": [[19, "armi.bookkeeping.mainInterface.describeInterfaces"]], "interactboc() (armi.bookkeeping.maininterface.maininterface method)": [[19, "armi.bookkeeping.mainInterface.MainInterface.interactBOC"]], "interactbol() (armi.bookkeeping.maininterface.maininterface method)": [[19, "armi.bookkeeping.mainInterface.MainInterface.interactBOL"]], "interacteol() (armi.bookkeeping.maininterface.maininterface method)": [[19, "armi.bookkeeping.mainInterface.MainInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.maininterface.maininterface method)": [[19, "armi.bookkeeping.mainInterface.MainInterface.interactEveryNode"]], "name (armi.bookkeeping.maininterface.maininterface attribute)": [[19, "armi.bookkeeping.mainInterface.MainInterface.name"]], "instancecounter (class in armi.bookkeeping.memoryprofiler)": [[20, "armi.bookkeeping.memoryProfiler.InstanceCounter"]], "klasscounter (class in armi.bookkeeping.memoryprofiler)": [[20, "armi.bookkeeping.memoryProfiler.KlassCounter"]], "memoryprofiler (class in armi.bookkeeping.memoryprofiler)": [[20, "armi.bookkeeping.memoryProfiler.MemoryProfiler"]], "printsystemmemoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[20, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction"]], "profilememoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[20, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction"]], "systemandprocessmemoryusage (class in armi.bookkeeping.memoryprofiler)": [[20, "armi.bookkeeping.memoryProfiler.SystemAndProcessMemoryUsage"]], "add() (armi.bookkeeping.memoryprofiler.instancecounter method)": [[20, "armi.bookkeeping.memoryProfiler.InstanceCounter.add"]], "armi.bookkeeping.memoryprofiler": [[20, "module-armi.bookkeeping.memoryProfiler"]], "checkforduplicateobjectsonarmimodel() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[20, "armi.bookkeeping.memoryProfiler.MemoryProfiler.checkForDuplicateObjectsOnArmiModel"]], "countobjects() (armi.bookkeeping.memoryprofiler.klasscounter method)": [[20, "armi.bookkeeping.memoryProfiler.KlassCounter.countObjects"]], "describeinterfaces() (in module armi.bookkeeping.memoryprofiler)": [[20, "armi.bookkeeping.memoryProfiler.describeInterfaces"]], "displaymemoryusage() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[20, "armi.bookkeeping.memoryProfiler.MemoryProfiler.displayMemoryUsage"]], "getreferrers() (armi.bookkeeping.memoryprofiler.memoryprofiler static method)": [[20, "armi.bookkeeping.memoryProfiler.MemoryProfiler.getReferrers"]], "interactbol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[20, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactBOL"]], "interacteol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[20, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEOL"]], "interacteverynode() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[20, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEveryNode"]], "invokehook() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[20, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.invokeHook"]], "invokehook() (armi.bookkeeping.memoryprofiler.profilememoryusageaction method)": [[20, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction.invokeHook"]], "maxprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[20, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.maxProcessMemoryInMB"]], "minprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[20, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.minProcessMemoryInMB"]], "name (armi.bookkeeping.memoryprofiler.memoryprofiler attribute)": [[20, "armi.bookkeeping.memoryProfiler.MemoryProfiler.name"]], "printusage() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[20, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.printUsage"]], "armi.bookkeeping.report": [[21, "module-armi.bookkeeping.report"]], "setdata() (in module armi.bookkeeping.report)": [[21, "armi.bookkeeping.report.setData"]], "group (class in armi.bookkeeping.report.data)": [[22, "armi.bookkeeping.report.data.Group"]], "image (class in armi.bookkeeping.report.data)": [[22, "armi.bookkeeping.report.data.Image"]], "report (class in armi.bookkeeping.report.data)": [[22, "armi.bookkeeping.report.data.Report"]], "table (class in armi.bookkeeping.report.data)": [[22, "armi.bookkeeping.report.data.Table"]], "addtoreport() (armi.bookkeeping.report.data.report method)": [[22, "armi.bookkeeping.report.data.Report.addToReport"]], "armi.bookkeeping.report.data": [[22, "module-armi.bookkeeping.report.data"]], "componentwellgroups (armi.bookkeeping.report.data.report attribute)": [[22, "armi.bookkeeping.report.data.Report.componentWellGroups"]], "count (armi.bookkeeping.report.data.image attribute)": [[22, "armi.bookkeeping.report.data.Image.count"]], "groupsorderfirst (armi.bookkeeping.report.data.report attribute)": [[22, "armi.bookkeeping.report.data.Report.groupsOrderFirst"]], "writegroupshtml() (armi.bookkeeping.report.data.report method)": [[22, "armi.bookkeeping.report.data.Report.writeGroupsHTML"]], "writehtml() (armi.bookkeeping.report.data.group method)": [[22, "armi.bookkeeping.report.data.Group.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.image method)": [[22, "armi.bookkeeping.report.data.Image.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.report method)": [[22, "armi.bookkeeping.report.data.Report.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.table method)": [[22, "armi.bookkeeping.report.data.Table.writeHTML"]], "a (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.A"]], "b (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.B"]], "body (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Body"]], "caption (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Caption"]], "div (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Div"]], "footer (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Footer"]], "h1 (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.H1"]], "h2 (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.H2"]], "h3 (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.H3"]], "h4 (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.H4"]], "htmlfile (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.HTMLFile"]], "head (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Head"]], "html (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Html"]], "img (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Img"]], "li (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.LI"]], "link (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Link"]], "p (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.P"]], "script (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Script"]], "span (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Span"]], "style (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Style"]], "tbody (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.TBody"]], "td (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.TD"]], "th (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.TH"]], "thead (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.THead"]], "tr (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.TR"]], "table (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Table"]], "tag (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Tag"]], "title (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.Title"]], "ul (class in armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.UL"]], "armi.bookkeeping.report.html": [[23, "module-armi.bookkeeping.report.html"]], "encode64() (in module armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.encode64"]], "tag (armi.bookkeeping.report.html.a attribute)": [[23, "armi.bookkeeping.report.html.A.tag"]], "tag (armi.bookkeeping.report.html.b attribute)": [[23, "armi.bookkeeping.report.html.B.tag"]], "tag (armi.bookkeeping.report.html.body attribute)": [[23, "armi.bookkeeping.report.html.Body.tag"]], "tag (armi.bookkeeping.report.html.caption attribute)": [[23, "armi.bookkeeping.report.html.Caption.tag"]], "tag (armi.bookkeeping.report.html.div attribute)": [[23, "armi.bookkeeping.report.html.Div.tag"]], "tag (armi.bookkeeping.report.html.footer attribute)": [[23, "armi.bookkeeping.report.html.Footer.tag"]], "tag (armi.bookkeeping.report.html.h1 attribute)": [[23, "armi.bookkeeping.report.html.H1.tag"]], "tag (armi.bookkeeping.report.html.h2 attribute)": [[23, "armi.bookkeeping.report.html.H2.tag"]], "tag (armi.bookkeeping.report.html.h3 attribute)": [[23, "armi.bookkeeping.report.html.H3.tag"]], "tag (armi.bookkeeping.report.html.h4 attribute)": [[23, "armi.bookkeeping.report.html.H4.tag"]], "tag (armi.bookkeeping.report.html.head attribute)": [[23, "armi.bookkeeping.report.html.Head.tag"]], "tag (armi.bookkeeping.report.html.html attribute)": [[23, "armi.bookkeeping.report.html.Html.tag"]], "tag (armi.bookkeeping.report.html.img attribute)": [[23, "armi.bookkeeping.report.html.Img.tag"]], "tag (armi.bookkeeping.report.html.li attribute)": [[23, "armi.bookkeeping.report.html.LI.tag"]], "tag (armi.bookkeeping.report.html.link attribute)": [[23, "armi.bookkeeping.report.html.Link.tag"]], "tag (armi.bookkeeping.report.html.p attribute)": [[23, "armi.bookkeeping.report.html.P.tag"]], "tag (armi.bookkeeping.report.html.script attribute)": [[23, "armi.bookkeeping.report.html.Script.tag"]], "tag (armi.bookkeeping.report.html.span attribute)": [[23, "armi.bookkeeping.report.html.Span.tag"]], "tag (armi.bookkeeping.report.html.style attribute)": [[23, "armi.bookkeeping.report.html.Style.tag"]], "tag (armi.bookkeeping.report.html.tbody attribute)": [[23, "armi.bookkeeping.report.html.TBody.tag"]], "tag (armi.bookkeeping.report.html.td attribute)": [[23, "armi.bookkeeping.report.html.TD.tag"]], "tag (armi.bookkeeping.report.html.th attribute)": [[23, "armi.bookkeeping.report.html.TH.tag"]], "tag (armi.bookkeeping.report.html.thead attribute)": [[23, "armi.bookkeeping.report.html.THead.tag"]], "tag (armi.bookkeeping.report.html.tr attribute)": [[23, "armi.bookkeeping.report.html.TR.tag"]], "tag (armi.bookkeeping.report.html.table attribute)": [[23, "armi.bookkeeping.report.html.Table.tag"]], "tag (armi.bookkeeping.report.html.tag attribute)": [[23, "armi.bookkeeping.report.html.Tag.tag"]], "tag (armi.bookkeeping.report.html.title attribute)": [[23, "armi.bookkeeping.report.html.Title.tag"]], "tag (armi.bookkeeping.report.html.ul attribute)": [[23, "armi.bookkeeping.report.html.UL.tag"]], "write() (armi.bookkeeping.report.html.htmlfile method)": [[23, "armi.bookkeeping.report.html.HTMLFile.write"]], "writeescaped() (armi.bookkeeping.report.html.htmlfile method)": [[23, "armi.bookkeeping.report.html.HTMLFile.writeEscaped"]], "writestandardreporttemplate() (in module armi.bookkeeping.report.html)": [[23, "armi.bookkeeping.report.html.writeStandardReportTemplate"]], "design (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.DESIGN"]], "armi.bookkeeping.report.newreportutils": [[24, "module-armi.bookkeeping.report.newReportUtils"]], "comprehensivebolcontent() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.comprehensiveBOLContent"]], "createdimensionreport() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.createDimensionReport"]], "getpindesigntable() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.getPinDesignTable"]], "insertareafractionsreport() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.insertAreaFractionsReport"]], "insertblockdesignreport() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.insertBlockDesignReport"]], "insertblockdiagrams() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.insertBlockDiagrams"]], "insertblueprintcontent() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.insertBlueprintContent"]], "insertcoreandassemblymaps() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.insertCoreAndAssemblyMaps"]], "insertcoredesignreport() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.insertCoreDesignReport"]], "insertdesigncontent() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.insertDesignContent"]], "insertendoflifecontent() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.insertEndOfLifeContent"]], "insertgeneralreportcontent() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.insertGeneralReportContent"]], "insertmetatable() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.insertMetaTable"]], "insertsettingsdata() (in module armi.bookkeeping.report.newreportutils)": [[24, "armi.bookkeeping.report.newReportUtils.insertSettingsData"]], "begin (armi.bookkeeping.report.newreports.reportstage attribute)": [[25, "armi.bookkeeping.report.newReports.ReportStage.Begin"]], "end (armi.bookkeeping.report.newreports.reportstage attribute)": [[25, "armi.bookkeeping.report.newReports.ReportStage.End"]], "image (class in armi.bookkeeping.report.newreports)": [[25, "armi.bookkeeping.report.newReports.Image"]], "reportcontent (class in armi.bookkeeping.report.newreports)": [[25, "armi.bookkeeping.report.newReports.ReportContent"]], "reportnode (class in armi.bookkeeping.report.newreports)": [[25, "armi.bookkeeping.report.newReports.ReportNode"]], "reportstage (class in armi.bookkeeping.report.newreports)": [[25, "armi.bookkeeping.report.newReports.ReportStage"]], "section (class in armi.bookkeeping.report.newreports)": [[25, "armi.bookkeeping.report.newReports.Section"]], "standard (armi.bookkeeping.report.newreports.reportstage attribute)": [[25, "armi.bookkeeping.report.newReports.ReportStage.Standard"]], "table (class in armi.bookkeeping.report.newreports)": [[25, "armi.bookkeeping.report.newReports.Table"]], "timeseries (class in armi.bookkeeping.report.newreports)": [[25, "armi.bookkeeping.report.newReports.TimeSeries"]], "add() (armi.bookkeeping.report.newreports.timeseries method)": [[25, "armi.bookkeeping.report.newReports.TimeSeries.add"]], "addchildelement() (armi.bookkeeping.report.newreports.section method)": [[25, "armi.bookkeeping.report.newReports.Section.addChildElement"]], "addrow() (armi.bookkeeping.report.newreports.table method)": [[25, "armi.bookkeeping.report.newReports.Table.addRow"]], "armi.bookkeeping.report.newreports": [[25, "module-armi.bookkeeping.report.newReports"]], "encode64() (in module armi.bookkeeping.report.newreports)": [[25, "armi.bookkeeping.report.newReports.encode64"]], "get() (armi.bookkeeping.report.newreports.reportcontent method)": [[25, "armi.bookkeeping.report.newReports.ReportContent.get"]], "get() (armi.bookkeeping.report.newreports.section method)": [[25, "armi.bookkeeping.report.newReports.Section.get"]], "items() (armi.bookkeeping.report.newreports.section method)": [[25, "armi.bookkeeping.report.newReports.Section.items"]], "leveldict (armi.bookkeeping.report.newreports.reportnode attribute)": [[25, "armi.bookkeeping.report.newReports.ReportNode.levelDict"]], "plot() (armi.bookkeeping.report.newreports.timeseries method)": [[25, "armi.bookkeeping.report.newReports.TimeSeries.plot"]], "render() (armi.bookkeeping.report.newreports.image method)": [[25, "armi.bookkeeping.report.newReports.Image.render"]], "render() (armi.bookkeeping.report.newreports.reportnode method)": [[25, "armi.bookkeeping.report.newReports.ReportNode.render"]], "render() (armi.bookkeeping.report.newreports.section method)": [[25, "armi.bookkeeping.report.newReports.Section.render"]], "render() (armi.bookkeeping.report.newreports.table method)": [[25, "armi.bookkeeping.report.newReports.Table.render"]], "render() (armi.bookkeeping.report.newreports.timeseries method)": [[25, "armi.bookkeeping.report.newReports.TimeSeries.render"]], "tableofcontents() (armi.bookkeeping.report.newreports.reportcontent method)": [[25, "armi.bookkeeping.report.newReports.ReportContent.tableOfContents"]], "writereports() (armi.bookkeeping.report.newreports.reportcontent method)": [[25, "armi.bookkeeping.report.newReports.ReportContent.writeReports"]], "reportinterface (class in armi.bookkeeping.report.reportinterface)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface"]], "armi.bookkeeping.report.reportinterface": [[26, "module-armi.bookkeeping.report.reportInterface"]], "countassembliessfp() (armi.bookkeeping.report.reportinterface.reportinterface static method)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.countAssembliesSFP"]], "describeinterfaces() (in module armi.bookkeeping.report.reportinterface)": [[26, "armi.bookkeeping.report.reportInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.distributable"]], "generatedesignreport() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.generateDesignReport"]], "interactboc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOC"]], "interactbol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOL"]], "interacteoc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOC"]], "interacteol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEveryNode"]], "name (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.name"]], "printreports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.printReports"]], "reportsfp() (armi.bookkeeping.report.reportinterface.reportinterface static method)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.reportSFP"]], "reports (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.reports"]], "writereports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.writeReports"]], "writerunsummary() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[26, "armi.bookkeeping.report.reportInterface.ReportInterface.writeRunSummary"]], "armi.bookkeeping.report.reportingutils": [[27, "module-armi.bookkeeping.report.reportingUtils"]], "getinterfacestacksummary() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.getInterfaceStackSummary"]], "getnodename() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.getNodeName"]], "getsysteminfo() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.getSystemInfo"]], "makeblockdesignreport() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.makeBlockDesignReport"]], "makecoreandassemblymaps() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.makeCoreAndAssemblyMaps"]], "makecoredesignreport() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.makeCoreDesignReport"]], "setneutronbalancesreport() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.setNeutronBalancesReport"]], "summarizepindesign() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.summarizePinDesign"]], "summarizepower() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.summarizePower"]], "summarizepowerpeaking() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.summarizePowerPeaking"]], "writeassemblymasssummary() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.writeAssemblyMassSummary"]], "writecyclesummary() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.writeCycleSummary"]], "writetightcouplingconvergencesummary() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.writeTightCouplingConvergenceSummary"]], "writewelcomeheaders() (in module armi.bookkeeping.report.reportingutils)": [[27, "armi.bookkeeping.report.reportingUtils.writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[28, "module-armi.bookkeeping.report.tests"]], "testreportcontentcreation (class in armi.bookkeeping.report.tests.test_newreport)": [[29, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newreport": [[29, "module-armi.bookkeeping.report.tests.test_newReport"]], "test_neutronicsplotfunctions() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[29, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_neutronicsPlotFunctions"]], "test_reportbasics() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[29, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportBasics"]], "test_reportcontents() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[29, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContents"]], "test_reportcontentsend() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[29, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContentsEnd"]], "test_reportlogs() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[29, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportLogs"]], "test_tablecreation() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[29, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_tableCreation"]], "test_timeseries() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[29, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_timeSeries"]], "test_writereports() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[29, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_writeReports"]], "testreport (class in armi.bookkeeping.report.tests.test_report)": [[30, "armi.bookkeeping.report.tests.test_report.TestReport"]], "testreportinterface (class in armi.bookkeeping.report.tests.test_report)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportInterface"]], "testreportingutils (class in armi.bookkeeping.report.tests.test_report)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportingUtils"]], "armi.bookkeeping.report.tests.test_report": [[30, "module-armi.bookkeeping.report.tests.test_report"]], "test_distributablereportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_distributableReportInt"]], "test_getdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReport.test_getData"]], "test_getnodename() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getNodeName"]], "test_getsysteminfo() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfo"]], "test_getsysteminfolinux() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoLinux"]], "test_getsysteminfomac() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoMac"]], "test_getsysteminfowindows() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoWindows"]], "test_interactboc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOC"]], "test_interactbolreportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOLReportInt"]], "test_interacteoc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOC"]], "test_interacteol() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOL"]], "test_interacteverynode() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEveryNode"]], "test_printreports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_printReports"]], "test_reactorspecificreporting() (armi.bookkeeping.report.tests.test_report.testreport method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReport.test_reactorSpecificReporting"]], "test_setdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReport.test_setData"]], "test_writereports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_writeReports"]], "test_writewelcomeheaders() (armi.bookkeeping.report.tests.test_report.testreport method)": [[30, "armi.bookkeeping.report.tests.test_report.TestReport.test_writeWelcomeHeaders"]], "snapshotinterface (class in armi.bookkeeping.snapshotinterface)": [[31, "armi.bookkeeping.snapshotInterface.SnapshotInterface"]], "activatedefaultsnapshots() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[31, "armi.bookkeeping.snapshotInterface.SnapshotInterface.activateDefaultSnapshots"]], "armi.bookkeeping.snapshotinterface": [[31, "module-armi.bookkeeping.snapshotInterface"]], "describeinterfaces() (in module armi.bookkeeping.snapshotinterface)": [[31, "armi.bookkeeping.snapshotInterface.describeInterfaces"]], "extractcyclenodefromstamp() (in module armi.bookkeeping.snapshotinterface)": [[31, "armi.bookkeeping.snapshotInterface.extractCycleNodeFromStamp"]], "getcyclenodestamp() (in module armi.bookkeeping.snapshotinterface)": [[31, "armi.bookkeeping.snapshotInterface.getCycleNodeStamp"]], "interactbol() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[31, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactBOL"]], "interactcoupled() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[31, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactCoupled"]], "interacteverynode() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[31, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactEveryNode"]], "name (armi.bookkeeping.snapshotinterface.snapshotinterface attribute)": [[31, "armi.bookkeeping.snapshotInterface.SnapshotInterface.name"]], "armi.bookkeeping.tests": [[32, "module-armi.bookkeeping.tests"]], "testhistorytracker (class in armi.bookkeeping.tests.test_historytracker)": [[33, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker"]], "testhistorytrackernomodel (class in armi.bookkeeping.tests.test_historytracker)": [[33, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel"]], "armi.bookkeeping.tests.test_historytracker": [[33, "module-armi.bookkeeping.tests.test_historyTracker"]], "runtutorialnotebook() (in module armi.bookkeeping.tests.test_historytracker)": [[33, "armi.bookkeeping.tests.test_historyTracker.runTutorialNotebook"]], "test_blockname() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[33, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_blockName"]], "test_calcmgfluence() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[33, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_calcMGFluence"]], "test_getblockinassembly() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[33, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_getBlockInAssembly"]], "test_historyparameters() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[33, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyParameters"]], "test_historyreport() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[33, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyReport"]], "test_timestepfiltering() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[33, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFiltering"]], "test_timestepfilteringwithgap() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[33, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFilteringWithGap"]], "klasscountertests (class in armi.bookkeeping.tests.test_memoryprofiler)": [[34, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests"]], "testmemoryprofiler (class in armi.bookkeeping.tests.test_memoryprofiler)": [[34, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryprofiler": [[34, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "get_containers() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[34, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.get_containers"]], "test_checkforduplicateobjectsonarmimodel() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[34, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_checkForDuplicateObjectsOnArmiModel"]], "test_counthandlesrecursion() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[34, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_countHandlesRecursion"]], "test_displaymemoryusage() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[34, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_displayMemoryUsage"]], "test_expandcontainer() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[34, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_expandContainer"]], "test_fullbreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[34, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_fullBreakdown"]], "test_getreferrers() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[34, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_getReferrers"]], "test_printfullmemorybreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[34, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_printFullMemoryBreakdown"]], "test_profilememoryusageaction() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[34, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_profileMemoryUsageAction"]], "mockreactor (class in armi.bookkeeping.tests.test_snapshot)": [[35, "armi.bookkeeping.tests.test_snapshot.MockReactor"]], "mockreactorparams (class in armi.bookkeeping.tests.test_snapshot)": [[35, "armi.bookkeeping.tests.test_snapshot.MockReactorParams"]], "testsnapshotinterface (class in armi.bookkeeping.tests.test_snapshot)": [[35, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot": [[35, "module-armi.bookkeeping.tests.test_snapshot"]], "test_activeatedefaultsnapshots_17cycles5burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[35, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_17cycles5BurnSteps"]], "test_activeatedefaultsnapshots_30cycles2burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[35, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_30cycles2BurnSteps"]], "test_interactcoupled() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[35, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactCoupled"]], "test_interacteverynode() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[35, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactEveryNode"]], "armi.bookkeeping.visualization": [[36, "module-armi.bookkeeping.visualization"]], "visfiledumper (class in armi.bookkeeping.visualization.dumper)": [[37, "armi.bookkeeping.visualization.dumper.VisFileDumper"]], "armi.bookkeeping.visualization.dumper": [[37, "module-armi.bookkeeping.visualization.dumper"]], "dumpstate() (armi.bookkeeping.visualization.dumper.visfiledumper method)": [[37, "armi.bookkeeping.visualization.dumper.VisFileDumper.dumpState"]], "visfileentrypoint (class in armi.bookkeeping.visualization.entrypoint)": [[38, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint"]], "addoptions() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[38, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.addOptions"]], "armi.bookkeeping.visualization.entrypoint": [[38, "module-armi.bookkeeping.visualization.entryPoint"]], "description (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[38, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.description"]], "invoke() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[38, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.invoke"]], "name (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[38, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.name"]], "parse() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[38, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.parse"]], "settingsargument (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[38, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.settingsArgument"]], "armi.bookkeeping.visualization.tests": [[39, "module-armi.bookkeeping.visualization.tests"]], "testvisdump (class in armi.bookkeeping.visualization.tests.test_vis)": [[40, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump"]], "testvtkmesh (class in armi.bookkeeping.visualization.tests.test_vis)": [[40, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis": [[40, "module-armi.bookkeeping.visualization.tests.test_vis"]], "test_cartesianmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[40, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_cartesianMesh"]], "test_dumpreactorvtk() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[40, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorVtk"]], "test_dumpreactorxdmf() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[40, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorXdmf"]], "test_hexmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[40, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_hexMesh"]], "test_testvtkmesh() (armi.bookkeeping.visualization.tests.test_vis.testvtkmesh method)": [[40, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh.test_testVtkMesh"]], "testxdmf (class in armi.bookkeeping.visualization.tests.test_xdmf)": [[41, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[41, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "test_deduptimes() (armi.bookkeeping.visualization.tests.test_xdmf.testxdmf method)": [[41, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf.test_dedupTimes"]], "vtkmesh (class in armi.bookkeeping.visualization.utils)": [[42, "armi.bookkeeping.visualization.utils.VtkMesh"]], "append() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[42, "armi.bookkeeping.visualization.utils.VtkMesh.append"]], "armi.bookkeeping.visualization.utils": [[42, "module-armi.bookkeeping.visualization.utils"]], "createassemmesh() (in module armi.bookkeeping.visualization.utils)": [[42, "armi.bookkeeping.visualization.utils.createAssemMesh"]], "createblockmesh() (in module armi.bookkeeping.visualization.utils)": [[42, "armi.bookkeeping.visualization.utils.createBlockMesh"]], "createreactorassemmesh() (in module armi.bookkeeping.visualization.utils)": [[42, "armi.bookkeeping.visualization.utils.createReactorAssemMesh"]], "createreactorblockmesh() (in module armi.bookkeeping.visualization.utils)": [[42, "armi.bookkeeping.visualization.utils.createReactorBlockMesh"]], "empty() (armi.bookkeeping.visualization.utils.vtkmesh static method)": [[42, "armi.bookkeeping.visualization.utils.VtkMesh.empty"]], "write() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[42, "armi.bookkeeping.visualization.utils.VtkMesh.write"]], "x (armi.bookkeeping.visualization.utils.vtkmesh property)": [[42, "armi.bookkeeping.visualization.utils.VtkMesh.x"]], "y (armi.bookkeeping.visualization.utils.vtkmesh property)": [[42, "armi.bookkeeping.visualization.utils.VtkMesh.y"]], "z (armi.bookkeeping.visualization.utils.vtkmesh property)": [[42, "armi.bookkeeping.visualization.utils.VtkMesh.z"]], "vtkdumper (class in armi.bookkeeping.visualization.vtk)": [[43, "armi.bookkeeping.visualization.vtk.VtkDumper"]], "armi.bookkeeping.visualization.vtk": [[43, "module-armi.bookkeeping.visualization.vtk"]], "dumpstate() (armi.bookkeeping.visualization.vtk.vtkdumper method)": [[43, "armi.bookkeeping.visualization.vtk.VtkDumper.dumpState"]], "xdmfdumper (class in armi.bookkeeping.visualization.xdmf)": [[44, "armi.bookkeeping.visualization.xdmf.XdmfDumper"]], "armi.bookkeeping.visualization.xdmf": [[44, "module-armi.bookkeeping.visualization.xdmf"]], "dumpstate() (armi.bookkeeping.visualization.xdmf.xdmfdumper method)": [[44, "armi.bookkeeping.visualization.xdmf.XdmfDumper.dumpState"]], "armi.cases": [[45, "module-armi.cases"]], "case (class in armi.cases.case)": [[46, "armi.cases.case.Case"]], "addexplicitdependency() (armi.cases.case.case method)": [[46, "armi.cases.case.Case.addExplicitDependency"]], "armi.cases.case": [[46, "module-armi.cases.case"]], "bp (armi.cases.case.case property)": [[46, "armi.cases.case.Case.bp"]], "checkinputs() (armi.cases.case.case method)": [[46, "armi.cases.case.Case.checkInputs"]], "clone() (armi.cases.case.case method)": [[46, "armi.cases.case.Case.clone"]], "compare() (armi.cases.case.case method)": [[46, "armi.cases.case.Case.compare"]], "copyinterfaceinputs() (in module armi.cases.case)": [[46, "armi.cases.case.copyInterfaceInputs"]], "dbname (armi.cases.case.case property)": [[46, "armi.cases.case.Case.dbName"]], "dependencies (armi.cases.case.case property)": [[46, "armi.cases.case.Case.dependencies"]], "directory (armi.cases.case.case property)": [[46, "armi.cases.case.Case.directory"]], "geom (armi.cases.case.case property)": [[46, "armi.cases.case.Case.geom"]], "getpotentialparentfromsettingvalue() (armi.cases.case.case method)": [[46, "armi.cases.case.Case.getPotentialParentFromSettingValue"]], "independentvariables (armi.cases.case.case property)": [[46, "armi.cases.case.Case.independentVariables"]], "initializeoperator() (armi.cases.case.case method)": [[46, "armi.cases.case.Case.initializeOperator"]], "run() (armi.cases.case.case method)": [[46, "armi.cases.case.Case.run"]], "setuptaskdependence() (armi.cases.case.case method)": [[46, "armi.cases.case.Case.setUpTaskDependence"]], "summarizedesign() (armi.cases.case.case method)": [[46, "armi.cases.case.Case.summarizeDesign"]], "title (armi.cases.case.case property)": [[46, "armi.cases.case.Case.title"]], "writeinputs() (armi.cases.case.case method)": [[46, "armi.cases.case.Case.writeInputs"]], "armi.cases.inputmodifiers": [[47, "module-armi.cases.inputModifiers"]], "blueprintblockmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[48, "armi.cases.inputModifiers.inputModifiers.BluePrintBlockModifier"]], "fail_if_after (armi.cases.inputmodifiers.inputmodifiers.inputmodifier attribute)": [[48, "armi.cases.inputModifiers.inputModifiers.InputModifier.FAIL_IF_AFTER"]], "fullcoremodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[48, "armi.cases.inputModifiers.inputModifiers.FullCoreModifier"]], "inputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[48, "armi.cases.inputModifiers.inputModifiers.InputModifier"]], "multisettingmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[48, "armi.cases.inputModifiers.inputModifiers.MultiSettingModifier"]], "samplinginputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[48, "armi.cases.inputModifiers.inputModifiers.SamplingInputModifier"]], "settingsmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[48, "armi.cases.inputModifiers.inputModifiers.SettingsModifier"]], "armi.cases.inputmodifiers.inputmodifiers": [[48, "module-armi.cases.inputModifiers.inputModifiers"]], "neutronicconvergencemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[49, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicConvergenceModifier"]], "neutronicmeshssizemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[49, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicMeshsSizeModifier"]], "armi.cases.inputmodifiers.neutronicsmodifiers": [[49, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "cladthicknessbyidmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[50, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier"]], "cladthicknessbyodmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[50, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyidmodifier attribute)": [[50, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier.FAIL_IF_AFTER"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyodmodifier attribute)": [[50, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier.FAIL_IF_AFTER"]], "smeardensitymodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[50, "armi.cases.inputModifiers.pinTypeInputModifiers.SmearDensityModifier"]], "armi.cases.inputmodifiers.pintypeinputmodifiers": [[50, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputmodifiers.tests": [[51, "module-armi.cases.inputModifiers.tests"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[52, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom"]], "neutronicskernelopts (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[52, "armi.cases.inputModifiers.tests.test_inputModifiers.NeutronicsKernelOpts"]], "testfullcoremodifier (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[52, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier"]], "testsettingsmodifiers (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[52, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers"]], "testsuitebuilderintegrations (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[52, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations"]], "armi.cases.inputmodifiers.tests.test_inputmodifiers": [[52, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_inputmodifiers.mockgeom attribute)": [[52, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom.geomType"]], "test_neutronicconvergencemodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsettingsmodifiers method)": [[52, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers.test_NeutronicConvergenceModifier"]], "test_blueprintblockmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[52, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_bluePrintBlockModifier"]], "test_fullcoreconversion() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testfullcoremodifier method)": [[52, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier.test_fullCoreConversion"]], "test_settingsmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[52, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_settingsModifier"]], "test_smeardensityfail() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[52, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_smearDensityFail"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[53, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom"]], "testblueprintmodifiers (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[53, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers"]], "armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers": [[53, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.mockgeom attribute)": [[53, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom.geomType"]], "test_adjustsmeardensity() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[53, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_AdjustSmearDensity"]], "test_cladthickenessbyidmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[53, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByIDModifier"]], "test_cladthickenessbyodmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[53, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByODModifier"]], "casesuite (class in armi.cases.suite)": [[54, "armi.cases.suite.CaseSuite"]], "add() (armi.cases.suite.casesuite method)": [[54, "armi.cases.suite.CaseSuite.add"]], "armi.cases.suite": [[54, "module-armi.cases.suite"]], "clone() (armi.cases.suite.casesuite method)": [[54, "armi.cases.suite.CaseSuite.clone"]], "compare() (armi.cases.suite.casesuite method)": [[54, "armi.cases.suite.CaseSuite.compare"]], "discover() (armi.cases.suite.casesuite method)": [[54, "armi.cases.suite.CaseSuite.discover"]], "echoconfiguration() (armi.cases.suite.casesuite method)": [[54, "armi.cases.suite.CaseSuite.echoConfiguration"]], "remove() (armi.cases.suite.casesuite method)": [[54, "armi.cases.suite.CaseSuite.remove"]], "run() (armi.cases.suite.casesuite method)": [[54, "armi.cases.suite.CaseSuite.run"]], "writeinputs() (armi.cases.suite.casesuite method)": [[54, "armi.cases.suite.CaseSuite.writeInputs"]], "writetable() (armi.cases.suite.casesuite static method)": [[54, "armi.cases.suite.CaseSuite.writeTable"]], "fullfactorialsuitebuilder (class in armi.cases.suitebuilder)": [[55, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder"]], "fullfactorialsuitebuildernoisy (class in armi.cases.suitebuilder)": [[55, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy"]], "latinhypercubesuitebuilder (class in armi.cases.suitebuilder)": [[55, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder"]], "separateeffectssuitebuilder (class in armi.cases.suitebuilder)": [[55, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder"]], "suitebuilder (class in armi.cases.suitebuilder)": [[55, "armi.cases.suiteBuilder.SuiteBuilder"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuilder method)": [[55, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuildernoisy method)": [[55, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[55, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.separateeffectssuitebuilder method)": [[55, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.suitebuilder method)": [[55, "armi.cases.suiteBuilder.SuiteBuilder.addDegreeOfFreedom"]], "addmodifierset() (armi.cases.suitebuilder.suitebuilder method)": [[55, "armi.cases.suiteBuilder.SuiteBuilder.addModifierSet"]], "armi.cases.suitebuilder": [[55, "module-armi.cases.suiteBuilder"]], "buildsuite() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[55, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.buildSuite"]], "buildsuite() (armi.cases.suitebuilder.suitebuilder method)": [[55, "armi.cases.suiteBuilder.SuiteBuilder.buildSuite"]], "getinputmodifiers() (in module armi.cases.suitebuilder)": [[55, "armi.cases.suiteBuilder.getInputModifiers"]], "armi.cases.tests": [[56, "module-armi.cases.tests"]], "multifilesinterfaces (class in armi.cases.tests.test_cases)": [[57, "armi.cases.tests.test_cases.MultiFilesInterfaces"]], "testarmicase (class in armi.cases.tests.test_cases)": [[57, "armi.cases.tests.test_cases.TestArmiCase"]], "testcasesuitecomparison (class in armi.cases.tests.test_cases)": [[57, "armi.cases.tests.test_cases.TestCaseSuiteComparison"]], "testcasesuitedependencies (class in armi.cases.tests.test_cases)": [[57, "armi.cases.tests.test_cases.TestCaseSuiteDependencies"]], "testcopyinterfaceinputs (class in armi.cases.tests.test_cases)": [[57, "armi.cases.tests.test_cases.TestCopyInterfaceInputs"]], "testextrainputwriting (class in armi.cases.tests.test_cases)": [[57, "armi.cases.tests.test_cases.TestExtraInputWriting"]], "testpluginforcopyinterfacesmultiplefiles (class in armi.cases.tests.test_cases)": [[57, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles"]], "testpluginwithduplicatesetting (class in armi.cases.tests.test_cases)": [[57, "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting"]], "armi.cases.tests.test_cases": [[57, "module-armi.cases.tests.test_cases"]], "definesettings() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[57, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.defineSettings"]], "definesettings() (armi.cases.tests.test_cases.testpluginwithduplicatesetting static method)": [[57, "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting.defineSettings"]], "exposeinterfaces() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[57, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.exposeInterfaces"]], "name (armi.cases.tests.test_cases.multifilesinterfaces attribute)": [[57, "armi.cases.tests.test_cases.MultiFilesInterfaces.name"]], "specifyinputs() (armi.cases.tests.test_cases.multifilesinterfaces static method)": [[57, "armi.cases.tests.test_cases.MultiFilesInterfaces.specifyInputs"]], "test_checkinputs() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[57, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_checkInputs"]], "test_clone() (armi.cases.tests.test_cases.testarmicase method)": [[57, "armi.cases.tests.test_cases.TestArmiCase.test_clone"]], "test_clone() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[57, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_clone"]], "test_comparenodiffs() (armi.cases.tests.test_cases.testcasesuitecomparison method)": [[57, "armi.cases.tests.test_cases.TestCaseSuiteComparison.test_compareNoDiffs"]], "test_copyinputshelper() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[57, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInputsHelper"]], "test_copyinterfaceinputs_abspath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[57, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_absPath"]], "test_copyinterfaceinputs_multiplefiles() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[57, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_multipleFiles"]], "test_copyinterfaceinputs_nonfilepath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[57, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_nonFilePath"]], "test_copyinterfaceinputs_relpath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[57, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_relPath"]], "test_copyinterfaceinputs_singlefile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[57, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_singleFile"]], "test_copyinterfaceinputs_wildcardfile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[57, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_wildcardFile"]], "test_dependencieswithobscurepaths() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[57, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependenciesWithObscurePaths"]], "test_dependencyfromdbname() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[57, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromDBName"]], "test_dependencyfromexplictrepeatshuffles() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[57, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromExplictRepeatShuffles"]], "test_endcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[57, "armi.cases.tests.test_cases.TestArmiCase.test_endCoverage"]], "test_endprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[57, "armi.cases.tests.test_cases.TestArmiCase.test_endProfiling"]], "test_explicitdependency() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[57, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_explicitDependency"]], "test_failonduplicatesetting() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[57, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_failOnDuplicateSetting"]], "test_getcoveragercfile() (armi.cases.tests.test_cases.testarmicase method)": [[57, "armi.cases.tests.test_cases.TestArmiCase.test_getCoverageRcFile"]], "test_independentvariables() (armi.cases.tests.test_cases.testarmicase method)": [[57, "armi.cases.tests.test_cases.TestArmiCase.test_independentVariables"]], "test_run() (armi.cases.tests.test_cases.testarmicase method)": [[57, "armi.cases.tests.test_cases.TestArmiCase.test_run"]], "test_setuptaskdependence() (armi.cases.tests.test_cases.testarmicase method)": [[57, "armi.cases.tests.test_cases.TestArmiCase.test_setUpTaskDependence"]], "test_startcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[57, "armi.cases.tests.test_cases.TestArmiCase.test_startCoverage"]], "test_startprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[57, "armi.cases.tests.test_cases.TestArmiCase.test_startProfiling"]], "test_summarizedesign() (armi.cases.tests.test_cases.testarmicase method)": [[57, "armi.cases.tests.test_cases.TestArmiCase.test_summarizeDesign"]], "test_titlesettergetter() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[57, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_titleSetterGetter"]], "test_writeinput() (armi.cases.tests.test_cases.testextrainputwriting method)": [[57, "armi.cases.tests.test_cases.TestExtraInputWriting.test_writeInput"]], "latinhypercubemodifier (class in armi.cases.tests.test_suitebuilder)": [[58, "armi.cases.tests.test_suiteBuilder.LatinHyperCubeModifier"]], "settingmodifier (class in armi.cases.tests.test_suitebuilder)": [[58, "armi.cases.tests.test_suiteBuilder.SettingModifier"]], "testfullfactorialsuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[58, "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder"]], "testlatinhypercubesuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[58, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder"]], "testseparateeffectsbuilder (class in armi.cases.tests.test_suitebuilder)": [[58, "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder"]], "armi.cases.tests.test_suitebuilder": [[58, "module-armi.cases.tests.test_suiteBuilder"]], "test_adddegreeoffreedom() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[58, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_addDegreeOfFreedom"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testfullfactorialsuitebuilder method)": [[58, "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder.test_buildSuite"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[58, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_buildSuite"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testseparateeffectsbuilder method)": [[58, "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder.test_buildSuite"]], "test_initialize() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[58, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_initialize"]], "armicli (class in armi.cli)": [[59, "armi.cli.ArmiCLI"]], "armiparser (class in armi.cli)": [[59, "armi.cli.ArmiParser"]], "entrypointsplugin (class in armi.cli)": [[59, "armi.cli.EntryPointsPlugin"]], "armi.cli": [[59, "module-armi.cli"]], "defineentrypoints() (armi.cli.entrypointsplugin static method)": [[59, "armi.cli.EntryPointsPlugin.defineEntryPoints"]], "executecommand() (armi.cli.armicli method)": [[59, "armi.cli.ArmiCLI.executeCommand"]], "listcommands() (armi.cli.armicli method)": [[59, "armi.cli.ArmiCLI.listCommands"]], "print_help() (armi.cli.armiparser method)": [[59, "armi.cli.ArmiParser.print_help"]], "run() (armi.cli.armicli method)": [[59, "armi.cli.ArmiCLI.run"]], "showversion() (armi.cli.armicli static method)": [[59, "armi.cli.ArmiCLI.showVersion"]], "splash() (in module armi.cli)": [[59, "armi.cli.splash"]], "checkinputentrypoint (class in armi.cli.checkinputs)": [[60, "armi.cli.checkInputs.CheckInputEntryPoint"]], "expandblueprints (class in armi.cli.checkinputs)": [[60, "armi.cli.checkInputs.ExpandBlueprints"]], "addoptions() (armi.cli.checkinputs.checkinputentrypoint method)": [[60, "armi.cli.checkInputs.CheckInputEntryPoint.addOptions"]], "addoptions() (armi.cli.checkinputs.expandblueprints method)": [[60, "armi.cli.checkInputs.ExpandBlueprints.addOptions"]], "armi.cli.checkinputs": [[60, "module-armi.cli.checkInputs"]], "invoke() (armi.cli.checkinputs.checkinputentrypoint method)": [[60, "armi.cli.checkInputs.CheckInputEntryPoint.invoke"]], "invoke() (armi.cli.checkinputs.expandblueprints method)": [[60, "armi.cli.checkInputs.ExpandBlueprints.invoke"]], "name (armi.cli.checkinputs.checkinputentrypoint attribute)": [[60, "armi.cli.checkInputs.CheckInputEntryPoint.name"]], "name (armi.cli.checkinputs.expandblueprints attribute)": [[60, "armi.cli.checkInputs.ExpandBlueprints.name"]], "settingsargument (armi.cli.checkinputs.checkinputentrypoint attribute)": [[60, "armi.cli.checkInputs.CheckInputEntryPoint.settingsArgument"]], "settingsargument (armi.cli.checkinputs.expandblueprints attribute)": [[60, "armi.cli.checkInputs.ExpandBlueprints.settingsArgument"]], "splash (armi.cli.checkinputs.expandblueprints attribute)": [[60, "armi.cli.checkInputs.ExpandBlueprints.splash"]], "cleantemps (class in armi.cli.cleantemps)": [[61, "armi.cli.cleanTemps.CleanTemps"]], "armi.cli.cleantemps": [[61, "module-armi.cli.cleanTemps"]], "invoke() (armi.cli.cleantemps.cleantemps method)": [[61, "armi.cli.cleanTemps.CleanTemps.invoke"]], "name (armi.cli.cleantemps.cleantemps attribute)": [[61, "armi.cli.cleanTemps.CleanTemps.name"]], "settingsargument (armi.cli.cleantemps.cleantemps attribute)": [[61, "armi.cli.cleanTemps.CleanTemps.settingsArgument"]], "clonearmiruncommandbatch (class in armi.cli.clone)": [[62, "armi.cli.clone.CloneArmiRunCommandBatch"]], "clonearmiruncommandinteractive (class in armi.cli.clone)": [[62, "armi.cli.clone.CloneArmiRunCommandInteractive"]], "clonesuitecommand (class in armi.cli.clone)": [[62, "armi.cli.clone.CloneSuiteCommand"]], "addoptions() (armi.cli.clone.clonearmiruncommandbatch method)": [[62, "armi.cli.clone.CloneArmiRunCommandBatch.addOptions"]], "addoptions() (armi.cli.clone.clonesuitecommand method)": [[62, "armi.cli.clone.CloneSuiteCommand.addOptions"]], "armi.cli.clone": [[62, "module-armi.cli.clone"]], "invoke() (armi.cli.clone.clonearmiruncommandbatch method)": [[62, "armi.cli.clone.CloneArmiRunCommandBatch.invoke"]], "invoke() (armi.cli.clone.clonesuitecommand method)": [[62, "armi.cli.clone.CloneSuiteCommand.invoke"]], "name (armi.cli.clone.clonearmiruncommandbatch attribute)": [[62, "armi.cli.clone.CloneArmiRunCommandBatch.name"]], "name (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[62, "armi.cli.clone.CloneArmiRunCommandInteractive.name"]], "name (armi.cli.clone.clonesuitecommand attribute)": [[62, "armi.cli.clone.CloneSuiteCommand.name"]], "settingsargument (armi.cli.clone.clonearmiruncommandbatch attribute)": [[62, "armi.cli.clone.CloneArmiRunCommandBatch.settingsArgument"]], "settingsargument (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[62, "armi.cli.clone.CloneArmiRunCommandInteractive.settingsArgument"]], "settingsargument (armi.cli.clone.clonesuitecommand attribute)": [[62, "armi.cli.clone.CloneSuiteCommand.settingsArgument"]], "comparecases (class in armi.cli.comparecases)": [[63, "armi.cli.compareCases.CompareCases"]], "comparesuites (class in armi.cli.comparecases)": [[63, "armi.cli.compareCases.CompareSuites"]], "addoptions() (armi.cli.comparecases.comparecases method)": [[63, "armi.cli.compareCases.CompareCases.addOptions"]], "addoptions() (armi.cli.comparecases.comparesuites method)": [[63, "armi.cli.compareCases.CompareSuites.addOptions"]], "armi.cli.comparecases": [[63, "module-armi.cli.compareCases"]], "invoke() (armi.cli.comparecases.comparecases method)": [[63, "armi.cli.compareCases.CompareCases.invoke"]], "invoke() (armi.cli.comparecases.comparesuites method)": [[63, "armi.cli.compareCases.CompareSuites.invoke"]], "name (armi.cli.comparecases.comparecases attribute)": [[63, "armi.cli.compareCases.CompareCases.name"]], "name (armi.cli.comparecases.comparesuites attribute)": [[63, "armi.cli.compareCases.CompareSuites.name"]], "parse() (armi.cli.comparecases.comparecases method)": [[63, "armi.cli.compareCases.CompareCases.parse"]], "settingsargument (armi.cli.comparecases.comparecases attribute)": [[63, "armi.cli.compareCases.CompareCases.settingsArgument"]], "settingsargument (armi.cli.comparecases.comparesuites attribute)": [[63, "armi.cli.compareCases.CompareSuites.settingsArgument"]], "extractinputs (class in armi.cli.database)": [[64, "armi.cli.database.ExtractInputs"]], "injectinputs (class in armi.cli.database)": [[64, "armi.cli.database.InjectInputs"]], "addoptions() (armi.cli.database.extractinputs method)": [[64, "armi.cli.database.ExtractInputs.addOptions"]], "addoptions() (armi.cli.database.injectinputs method)": [[64, "armi.cli.database.InjectInputs.addOptions"]], "armi.cli.database": [[64, "module-armi.cli.database"]], "invoke() (armi.cli.database.extractinputs method)": [[64, "armi.cli.database.ExtractInputs.invoke"]], "invoke() (armi.cli.database.injectinputs method)": [[64, "armi.cli.database.InjectInputs.invoke"]], "mode (armi.cli.database.extractinputs attribute)": [[64, "armi.cli.database.ExtractInputs.mode"]], "mode (armi.cli.database.injectinputs attribute)": [[64, "armi.cli.database.InjectInputs.mode"]], "name (armi.cli.database.extractinputs attribute)": [[64, "armi.cli.database.ExtractInputs.name"]], "name (armi.cli.database.injectinputs attribute)": [[64, "armi.cli.database.InjectInputs.name"]], "parse_args() (armi.cli.database.extractinputs method)": [[64, "armi.cli.database.ExtractInputs.parse_args"]], "settingsargument (armi.cli.database.extractinputs attribute)": [[64, "armi.cli.database.ExtractInputs.settingsArgument"]], "settingsargument (armi.cli.database.injectinputs attribute)": [[64, "armi.cli.database.InjectInputs.settingsArgument"]], "entrypoint (class in armi.cli.entrypoint)": [[65, "armi.cli.entryPoint.EntryPoint"]], "addoptions() (armi.cli.entrypoint.entrypoint method)": [[65, "armi.cli.entryPoint.EntryPoint.addOptions"]], "armi.cli.entrypoint": [[65, "module-armi.cli.entryPoint"]], "createoptionfromsetting() (armi.cli.entrypoint.entrypoint method)": [[65, "armi.cli.entryPoint.EntryPoint.createOptionFromSetting"]], "description (armi.cli.entrypoint.entrypoint attribute)": [[65, "armi.cli.entryPoint.EntryPoint.description"]], "invoke() (armi.cli.entrypoint.entrypoint method)": [[65, "armi.cli.entryPoint.EntryPoint.invoke"]], "loadsettings() (in module armi.cli.entrypoint)": [[65, "armi.cli.entryPoint.loadSettings"]], "mode (armi.cli.entrypoint.entrypoint attribute)": [[65, "armi.cli.entryPoint.EntryPoint.mode"]], "name (armi.cli.entrypoint.entrypoint attribute)": [[65, "armi.cli.entryPoint.EntryPoint.name"]], "parse() (armi.cli.entrypoint.entrypoint method)": [[65, "armi.cli.entryPoint.EntryPoint.parse"]], "parse_args() (armi.cli.entrypoint.entrypoint method)": [[65, "armi.cli.entryPoint.EntryPoint.parse_args"]], "setcasetitle() (in module armi.cli.entrypoint)": [[65, "armi.cli.entryPoint.setCaseTitle"]], "setsetting() (in module armi.cli.entrypoint)": [[65, "armi.cli.entryPoint.setSetting"]], "settingsargument (armi.cli.entrypoint.entrypoint attribute)": [[65, "armi.cli.entryPoint.EntryPoint.settingsArgument"]], "splash (armi.cli.entrypoint.entrypoint attribute)": [[65, "armi.cli.entryPoint.EntryPoint.splash"]], "storebool() (in module armi.cli.entrypoint)": [[65, "armi.cli.entryPoint.storeBool"]], "gridguientrypoint (class in armi.cli.gridgui)": [[66, "armi.cli.gridGui.GridGuiEntryPoint"]], "addoptions() (armi.cli.gridgui.gridguientrypoint method)": [[66, "armi.cli.gridGui.GridGuiEntryPoint.addOptions"]], "armi.cli.gridgui": [[66, "module-armi.cli.gridGui"]], "invoke() (armi.cli.gridgui.gridguientrypoint method)": [[66, "armi.cli.gridGui.GridGuiEntryPoint.invoke"]], "name (armi.cli.gridgui.gridguientrypoint attribute)": [[66, "armi.cli.gridGui.GridGuiEntryPoint.name"]], "settingsargument (armi.cli.gridgui.gridguientrypoint attribute)": [[66, "armi.cli.gridGui.GridGuiEntryPoint.settingsArgument"]], "migrateinputs (class in armi.cli.migrateinputs)": [[67, "armi.cli.migrateInputs.MigrateInputs"]], "addoptions() (armi.cli.migrateinputs.migrateinputs method)": [[67, "armi.cli.migrateInputs.MigrateInputs.addOptions"]], "armi.cli.migrateinputs": [[67, "module-armi.cli.migrateInputs"]], "invoke() (armi.cli.migrateinputs.migrateinputs method)": [[67, "armi.cli.migrateInputs.MigrateInputs.invoke"]], "name (armi.cli.migrateinputs.migrateinputs attribute)": [[67, "armi.cli.migrateInputs.MigrateInputs.name"]], "settingsargument (armi.cli.migrateinputs.migrateinputs attribute)": [[67, "armi.cli.migrateInputs.MigrateInputs.settingsArgument"]], "modifycasesettingscommand (class in armi.cli.modify)": [[68, "armi.cli.modify.ModifyCaseSettingsCommand"]], "addoptions() (armi.cli.modify.modifycasesettingscommand method)": [[68, "armi.cli.modify.ModifyCaseSettingsCommand.addOptions"]], "armi.cli.modify": [[68, "module-armi.cli.modify"]], "invoke() (armi.cli.modify.modifycasesettingscommand method)": [[68, "armi.cli.modify.ModifyCaseSettingsCommand.invoke"]], "name (armi.cli.modify.modifycasesettingscommand attribute)": [[68, "armi.cli.modify.ModifyCaseSettingsCommand.name"]], "settingsargument (armi.cli.modify.modifycasesettingscommand attribute)": [[68, "armi.cli.modify.ModifyCaseSettingsCommand.settingsArgument"]], "reportsentrypoint (class in armi.cli.reportsentrypoint)": [[69, "armi.cli.reportsEntryPoint.ReportsEntryPoint"]], "addoptions() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[69, "armi.cli.reportsEntryPoint.ReportsEntryPoint.addOptions"]], "armi.cli.reportsentrypoint": [[69, "module-armi.cli.reportsEntryPoint"]], "createreportfromsettings() (in module armi.cli.reportsentrypoint)": [[69, "armi.cli.reportsEntryPoint.createReportFromSettings"]], "description (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[69, "armi.cli.reportsEntryPoint.ReportsEntryPoint.description"]], "invoke() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[69, "armi.cli.reportsEntryPoint.ReportsEntryPoint.invoke"]], "name (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[69, "armi.cli.reportsEntryPoint.ReportsEntryPoint.name"]], "report_out_dir (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[69, "armi.cli.reportsEntryPoint.ReportsEntryPoint.report_out_dir"]], "settingsargument (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[69, "armi.cli.reportsEntryPoint.ReportsEntryPoint.settingsArgument"]], "totwotuple() (armi.cli.reportsentrypoint.reportsentrypoint static method)": [[69, "armi.cli.reportsEntryPoint.ReportsEntryPoint.toTwoTuple"]], "runentrypoint (class in armi.cli.run)": [[70, "armi.cli.run.RunEntryPoint"]], "addoptions() (armi.cli.run.runentrypoint method)": [[70, "armi.cli.run.RunEntryPoint.addOptions"]], "armi.cli.run": [[70, "module-armi.cli.run"]], "invoke() (armi.cli.run.runentrypoint method)": [[70, "armi.cli.run.RunEntryPoint.invoke"]], "name (armi.cli.run.runentrypoint attribute)": [[70, "armi.cli.run.RunEntryPoint.name"]], "settingsargument (armi.cli.run.runentrypoint attribute)": [[70, "armi.cli.run.RunEntryPoint.settingsArgument"]], "runsuitecommand (class in armi.cli.runsuite)": [[71, "armi.cli.runSuite.RunSuiteCommand"]], "addoptions() (armi.cli.runsuite.runsuitecommand method)": [[71, "armi.cli.runSuite.RunSuiteCommand.addOptions"]], "armi.cli.runsuite": [[71, "module-armi.cli.runSuite"]], "invoke() (armi.cli.runsuite.runsuitecommand method)": [[71, "armi.cli.runSuite.RunSuiteCommand.invoke"]], "name (armi.cli.runsuite.runsuitecommand attribute)": [[71, "armi.cli.runSuite.RunSuiteCommand.name"]], "settingsargument (armi.cli.runsuite.runsuitecommand attribute)": [[71, "armi.cli.runSuite.RunSuiteCommand.settingsArgument"]], "armi.cli.tests": [[72, "module-armi.cli.tests"]], "testcheckinputentrypoint (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint"]], "testclonearmiruncommandbatch (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch"]], "testclonesuitecommand (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand"]], "testcomparecases (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestCompareCases"]], "testcompareisotxslibsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint"]], "testcomparesuites (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestCompareSuites"]], "testexpandblueprints (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints"]], "testextractinputs (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestExtractInputs"]], "testinitializationentrypoints (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints"]], "testinjectinputs (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestInjectInputs"]], "testmigrateinputs (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs"]], "testmodifycasesettingscommand (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand"]], "testreportsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint"]], "testrunentrypoint (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint"]], "testrunsuitecommand (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand"]], "testvisfileentrypointcommand (class in armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand"]], "armi.cli.tests.test_runentrypoint": [[73, "module-armi.cli.tests.test_runEntryPoint"]], "buildtestdb() (in module armi.cli.tests.test_runentrypoint)": [[73, "armi.cli.tests.test_runEntryPoint.buildTestDB"]], "test_checkinputentrypointbasics() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[73, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointBasics"]], "test_checkinputentrypointinvoke() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[73, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointInvoke"]], "test_cleanargs() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[73, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_cleanArgs"]], "test_clonearmiruncommandbatchbasics() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[73, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchBasics"]], "test_clonearmiruncommandbatchinvokemedium() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[73, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeMedium"]], "test_clonearmiruncommandbatchinvokeshort() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[73, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeShort"]], "test_clonesuitecommandbasics() (armi.cli.tests.test_runentrypoint.testclonesuitecommand method)": [[73, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand.test_cloneSuiteCommandBasics"]], "test_comparecasesbasics() (armi.cli.tests.test_runentrypoint.testcomparecases method)": [[73, "armi.cli.tests.test_runEntryPoint.TestCompareCases.test_compareCasesBasics"]], "test_compareisotxslibsbasics() (armi.cli.tests.test_runentrypoint.testcompareisotxslibsentrypoint method)": [[73, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint.test_compareIsotxsLibsBasics"]], "test_comparesuitesbasics() (armi.cli.tests.test_runentrypoint.testcomparesuites method)": [[73, "armi.cli.tests.test_runEntryPoint.TestCompareSuites.test_compareSuitesBasics"]], "test_entrypointinitialization() (armi.cli.tests.test_runentrypoint.testinitializationentrypoints method)": [[73, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints.test_entryPointInitialization"]], "test_executecommand() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[73, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_executeCommand"]], "test_expandblueprintsbasics() (armi.cli.tests.test_runentrypoint.testexpandblueprints method)": [[73, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints.test_expandBlueprintsBasics"]], "test_extractinputsbasics() (armi.cli.tests.test_runentrypoint.testextractinputs method)": [[73, "armi.cli.tests.test_runEntryPoint.TestExtractInputs.test_extractInputsBasics"]], "test_injectinputsbasics() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[73, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsBasics"]], "test_injectinputsinvokeignore() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[73, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeIgnore"]], "test_injectinputsinvokenodata() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[73, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeNoData"]], "test_migrateinputsbasics() (armi.cli.tests.test_runentrypoint.testmigrateinputs method)": [[73, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs.test_migrateInputsBasics"]], "test_modifycasesettingscommandbasics() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[73, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandBasics"]], "test_modifycasesettingscommandinvoke() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[73, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandInvoke"]], "test_reportsentrypointbasics() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[73, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_reportsEntryPointBasics"]], "test_runcommandhelp() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[73, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runCommandHelp"]], "test_runentrypointbasics() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[73, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runEntryPointBasics"]], "test_runsuitecommandbasics() (armi.cli.tests.test_runentrypoint.testrunsuitecommand method)": [[73, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand.test_runSuiteCommandBasics"]], "test_totwotuple() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[73, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_toTwoTuple"]], "test_visfileentrypointbasics() (armi.cli.tests.test_runentrypoint.testvisfileentrypointcommand method)": [[73, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand.test_visFileEntryPointBasics"]], "testrunsuitesuite (class in armi.cli.tests.test_runsuite)": [[74, "armi.cli.tests.test_runSuite.TestRunSuiteSuite"]], "armi.cli.tests.test_runsuite": [[74, "module-armi.cli.tests.test_runSuite"]], "test_listcommand() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[74, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_listCommand"]], "test_run() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[74, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_run"]], "test_showversion() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[74, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_showVersion"]], "armi.conftest": [[75, "module-armi.conftest"]], "bootstraparmitestenv() (in module armi.conftest)": [[75, "armi.conftest.bootstrapArmiTestEnv"]], "pytest_sessionstart() (in module armi.conftest)": [[75, "armi.conftest.pytest_sessionstart"]], "batch (armi.context.mode attribute)": [[76, "armi.context.Mode.BATCH"]], "gui (armi.context.mode attribute)": [[76, "armi.context.Mode.GUI"]], "interactive (armi.context.mode attribute)": [[76, "armi.context.Mode.INTERACTIVE"]], "mode (class in armi.context)": [[76, "armi.context.Mode"]], "activatelocalfastpath() (in module armi.context)": [[76, "armi.context.activateLocalFastPath"]], "armi.context": [[76, "module-armi.context"]], "cleanallarmitempdirs() (in module armi.context)": [[76, "armi.context.cleanAllArmiTempDirs"]], "cleantempdirs() (in module armi.context)": [[76, "armi.context.cleanTempDirs"]], "disconnectallhdfdbs() (in module armi.context)": [[76, "armi.context.disconnectAllHdfDBs"]], "getfastpath() (in module armi.context)": [[76, "armi.context.getFastPath"]], "setmode() (armi.context.mode class method)": [[76, "armi.context.Mode.setMode"]], "after (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.AFTER"]], "before (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.BEFORE"]], "bookkeeping (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.BOOKKEEPING"]], "critical_control (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.CRITICAL_CONTROL"]], "cross_sections (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.CROSS_SECTIONS"]], "depletion (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.DEPLETION"]], "duplicate (armi.interfaces.interface.distribute attribute)": [[77, "armi.interfaces.Interface.Distribute.DUPLICATE"]], "flux (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.FLUX"]], "fuel_management (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.FUEL_MANAGEMENT"]], "fuel_performance (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.FUEL_PERFORMANCE"]], "inputwriter (class in armi.interfaces)": [[77, "armi.interfaces.InputWriter"]], "interface (class in armi.interfaces)": [[77, "armi.interfaces.Interface"]], "interface.distribute (class in armi.interfaces)": [[77, "armi.interfaces.Interface.Distribute"]], "interfaceinfo (class in armi.interfaces)": [[77, "armi.interfaces.InterfaceInfo"]], "new (armi.interfaces.interface.distribute attribute)": [[77, "armi.interfaces.Interface.Distribute.NEW"]], "outputreader (class in armi.interfaces)": [[77, "armi.interfaces.OutputReader"]], "postprocessing (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.POSTPROCESSING"]], "preprocessing (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.PREPROCESSING"]], "reactivity_coeffs (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.REACTIVITY_COEFFS"]], "skip (armi.interfaces.interface.distribute attribute)": [[77, "armi.interfaces.Interface.Distribute.SKIP"]], "stack_order (class in armi.interfaces)": [[77, "armi.interfaces.STACK_ORDER"]], "thermal_hydraulics (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.THERMAL_HYDRAULICS"]], "transient (armi.interfaces.stack_order attribute)": [[77, "armi.interfaces.STACK_ORDER.TRANSIENT"]], "tightcoupler (class in armi.interfaces)": [[77, "armi.interfaces.TightCoupler"]], "apply() (armi.interfaces.outputreader method)": [[77, "armi.interfaces.OutputReader.apply"]], "armi.interfaces": [[77, "module-armi.interfaces"]], "attachreactor() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.attachReactor"]], "bolforce() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.bolForce"]], "detachreactor() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.detachReactor"]], "distributable() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.distributable"]], "duplicate() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.duplicate"]], "enabled() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.enabled"]], "function (armi.interfaces.interface attribute)": [[77, "armi.interfaces.Interface.function"]], "getactiveinterfaceinfo() (in module armi.interfaces)": [[77, "armi.interfaces.getActiveInterfaceInfo"]], "getdependencies() (armi.interfaces.interface class method)": [[77, "armi.interfaces.Interface.getDependencies"]], "gethistoryparams() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.getHistoryParams"]], "getinputfiles() (armi.interfaces.interface class method)": [[77, "armi.interfaces.Interface.getInputFiles"]], "getinterface() (armi.interfaces.inputwriter method)": [[77, "armi.interfaces.InputWriter.getInterface"]], "getinterface() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.getInterface"]], "getinterface() (armi.interfaces.outputreader method)": [[77, "armi.interfaces.OutputReader.getInterface"]], "getlistdimension() (armi.interfaces.tightcoupler static method)": [[77, "armi.interfaces.TightCoupler.getListDimension"]], "gettightcouplingvalue() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.getTightCouplingValue"]], "interactboc() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.interactBOC"]], "interactbol() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.interactBOL"]], "interactcoupled() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.interactCoupled"]], "interactdistributestate() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.interactDistributeState"]], "interacteoc() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.interactEOC"]], "interacteol() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.interactEOL"]], "interacterror() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.interactError"]], "interacteverynode() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.interactEveryNode"]], "interactinit() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.interactInit"]], "interfacecls (armi.interfaces.interfaceinfo attribute)": [[77, "armi.interfaces.InterfaceInfo.interfaceCls"]], "isconverged() (armi.interfaces.tightcoupler method)": [[77, "armi.interfaces.TightCoupler.isConverged"]], "isinterfaceactive() (in module armi.interfaces)": [[77, "armi.interfaces.isInterfaceActive"]], "isrequesteddetailpoint() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.isRequestedDetailPoint"]], "kwargs (armi.interfaces.interfaceinfo attribute)": [[77, "armi.interfaces.InterfaceInfo.kwargs"]], "name (armi.interfaces.interface attribute)": [[77, "armi.interfaces.Interface.name"]], "namecontains() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.nameContains"]], "order (armi.interfaces.interfaceinfo attribute)": [[77, "armi.interfaces.InterfaceInfo.order"]], "postdistributestate() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.postDistributeState"]], "predistributestate() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.preDistributeState"]], "read() (armi.interfaces.outputreader method)": [[77, "armi.interfaces.OutputReader.read"]], "readoutput() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.readOutput"]], "specifyinputs() (armi.interfaces.interface static method)": [[77, "armi.interfaces.Interface.specifyInputs"]], "storepreviousiterationvalue() (armi.interfaces.tightcoupler method)": [[77, "armi.interfaces.TightCoupler.storePreviousIterationValue"]], "updatephysicscouplingcontrol() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.updatePhysicsCouplingControl"]], "workeroperate() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.workerOperate"]], "write() (armi.interfaces.inputwriter method)": [[77, "armi.interfaces.InputWriter.write"]], "writeinput() (armi.interfaces.interface method)": [[77, "armi.interfaces.Interface.writeInput"]], "armi.materials": [[78, "module-armi.materials"]], "importmaterialsintomodulenamespace() (in module armi.materials)": [[78, "armi.materials.importMaterialsIntoModuleNamespace"]], "iterallmaterialclassesinnamespace() (in module armi.materials)": [[78, "armi.materials.iterAllMaterialClassesInNamespace"]], "resolvematerialclassbyname() (in module armi.materials)": [[78, "armi.materials.resolveMaterialClassByName"]], "setmaterialnamespaceorder() (in module armi.materials)": [[78, "armi.materials.setMaterialNamespaceOrder"]], "air (class in armi.materials.air)": [[79, "armi.materials.air.Air"]], "armi.materials.air": [[79, "module-armi.materials.air"]], "heatcapacity() (armi.materials.air.air method)": [[79, "armi.materials.air.Air.heatCapacity"]], "propertyvalidtemperature (armi.materials.air.air attribute)": [[79, "armi.materials.air.Air.propertyValidTemperature"]], "pseudodensity() (armi.materials.air.air method)": [[79, "armi.materials.air.Air.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.air.air method)": [[79, "armi.materials.air.Air.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.air.air method)": [[79, "armi.materials.air.Air.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.air.air method)": [[79, "armi.materials.air.Air.thermalConductivity"]], "alloy200 (class in armi.materials.alloy200)": [[80, "armi.materials.alloy200.Alloy200"]], "armi.materials.alloy200": [[80, "module-armi.materials.alloy200"]], "density() (armi.materials.alloy200.alloy200 method)": [[80, "armi.materials.alloy200.Alloy200.density"]], "linearexpansion() (armi.materials.alloy200.alloy200 method)": [[80, "armi.materials.alloy200.Alloy200.linearExpansion"]], "linearexpansiontable (armi.materials.alloy200.alloy200 attribute)": [[80, "armi.materials.alloy200.Alloy200.linearExpansionTable"]], "linearexpansiontablek (armi.materials.alloy200.alloy200 attribute)": [[80, "armi.materials.alloy200.Alloy200.linearExpansionTableK"]], "modelconst (armi.materials.alloy200.alloy200 attribute)": [[80, "armi.materials.alloy200.Alloy200.modelConst"]], "propertyvalidtemperature (armi.materials.alloy200.alloy200 attribute)": [[80, "armi.materials.alloy200.Alloy200.propertyValidTemperature"]], "referencemaxpercentimpurites (armi.materials.alloy200.alloy200 attribute)": [[80, "armi.materials.alloy200.Alloy200.referenceMaxPercentImpurites"]], "references (armi.materials.alloy200.alloy200 attribute)": [[80, "armi.materials.alloy200.Alloy200.references"]], "setdefaultmassfracs() (armi.materials.alloy200.alloy200 method)": [[80, "armi.materials.alloy200.Alloy200.setDefaultMassFracs"]], "b4c (class in armi.materials.b4c)": [[81, "armi.materials.b4c.B4C"]], "applyinputparams() (armi.materials.b4c.b4c method)": [[81, "armi.materials.b4c.B4C.applyInputParams"]], "armi.materials.b4c": [[81, "module-armi.materials.b4c"]], "density() (armi.materials.b4c.b4c method)": [[81, "armi.materials.b4c.B4C.density"]], "enrichednuclide (armi.materials.b4c.b4c attribute)": [[81, "armi.materials.b4c.B4C.enrichedNuclide"]], "getmassenrichmentfromnumenrich() (armi.materials.b4c.b4c static method)": [[81, "armi.materials.b4c.B4C.getMassEnrichmentFromNumEnrich"]], "linearexpansionpercent() (armi.materials.b4c.b4c method)": [[81, "armi.materials.b4c.B4C.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.b4c.b4c attribute)": [[81, "armi.materials.b4c.B4C.propertyValidTemperature"]], "pseudodensity() (armi.materials.b4c.b4c method)": [[81, "armi.materials.b4c.B4C.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.b4c.b4c method)": [[81, "armi.materials.b4c.B4C.setDefaultMassFracs"]], "setnewmassfracsfrommassenrich() (armi.materials.b4c.b4c method)": [[81, "armi.materials.b4c.B4C.setNewMassFracsFromMassEnrich"]], "updatetd() (armi.materials.b4c.b4c method)": [[81, "armi.materials.b4c.B4C.updateTD"]], "be9 (class in armi.materials.be9)": [[82, "armi.materials.be9.Be9"]], "armi.materials.be9": [[82, "module-armi.materials.be9"]], "density() (armi.materials.be9.be9 method)": [[82, "armi.materials.be9.Be9.density"]], "linearexpansionpercent() (armi.materials.be9.be9 method)": [[82, "armi.materials.be9.Be9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.be9.be9 attribute)": [[82, "armi.materials.be9.Be9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.be9.be9 method)": [[82, "armi.materials.be9.Be9.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.be9.be9 attribute)": [[82, "armi.materials.be9.Be9.thermalScatteringLaws"]], "cah2 (class in armi.materials.cah2)": [[83, "armi.materials.caH2.CaH2"]], "armi.materials.cah2": [[83, "module-armi.materials.caH2"]], "density() (armi.materials.cah2.cah2 method)": [[83, "armi.materials.caH2.CaH2.density"]], "setdefaultmassfracs() (armi.materials.cah2.cah2 method)": [[83, "armi.materials.caH2.CaH2.setDefaultMassFracs"]], "californium (class in armi.materials.californium)": [[84, "armi.materials.californium.Californium"]], "armi.materials.californium": [[84, "module-armi.materials.californium"]], "density() (armi.materials.californium.californium method)": [[84, "armi.materials.californium.Californium.density"]], "setdefaultmassfracs() (armi.materials.californium.californium method)": [[84, "armi.materials.californium.Californium.setDefaultMassFracs"]], "concrete (class in armi.materials.concrete)": [[85, "armi.materials.concrete.Concrete"]], "armi.materials.concrete": [[85, "module-armi.materials.concrete"]], "density() (armi.materials.concrete.concrete method)": [[85, "armi.materials.concrete.Concrete.density"]], "setdefaultmassfracs() (armi.materials.concrete.concrete method)": [[85, "armi.materials.concrete.Concrete.setDefaultMassFracs"]], "cu (class in armi.materials.copper)": [[86, "armi.materials.copper.Cu"]], "armi.materials.copper": [[86, "module-armi.materials.copper"]], "density() (armi.materials.copper.cu method)": [[86, "armi.materials.copper.Cu.density"]], "linearexpansionpercent() (armi.materials.copper.cu method)": [[86, "armi.materials.copper.Cu.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.copper.cu attribute)": [[86, "armi.materials.copper.Cu.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.copper.cu method)": [[86, "armi.materials.copper.Cu.setDefaultMassFracs"]], "cs (class in armi.materials.cs)": [[87, "armi.materials.cs.Cs"]], "armi.materials.cs": [[87, "module-armi.materials.cs"]], "meltingpoint() (armi.materials.cs.cs method)": [[87, "armi.materials.cs.Cs.meltingPoint"]], "pseudodensity() (armi.materials.cs.cs method)": [[87, "armi.materials.cs.Cs.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.cs.cs method)": [[87, "armi.materials.cs.Cs.setDefaultMassFracs"]], "custom (class in armi.materials.custom)": [[88, "armi.materials.custom.Custom"]], "armi.materials.custom": [[88, "module-armi.materials.custom"]], "density() (armi.materials.custom.custom method)": [[88, "armi.materials.custom.Custom.density"]], "enrichednuclide (armi.materials.custom.custom attribute)": [[88, "armi.materials.custom.Custom.enrichedNuclide"]], "pseudodensity() (armi.materials.custom.custom method)": [[88, "armi.materials.custom.Custom.pseudoDensity"]], "setmassfrac() (armi.materials.custom.custom method)": [[88, "armi.materials.custom.Custom.setMassFrac"]], "graphite (class in armi.materials.graphite)": [[89, "armi.materials.graphite.Graphite"]], "armi.materials.graphite": [[89, "module-armi.materials.graphite"]], "density() (armi.materials.graphite.graphite method)": [[89, "armi.materials.graphite.Graphite.density"]], "linearexpansionpercent() (armi.materials.graphite.graphite method)": [[89, "armi.materials.graphite.Graphite.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.graphite.graphite method)": [[89, "armi.materials.graphite.Graphite.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.graphite.graphite attribute)": [[89, "armi.materials.graphite.Graphite.thermalScatteringLaws"]], "hafnium (class in armi.materials.hafnium)": [[90, "armi.materials.hafnium.Hafnium"]], "armi.materials.hafnium": [[90, "module-armi.materials.hafnium"]], "density() (armi.materials.hafnium.hafnium method)": [[90, "armi.materials.hafnium.Hafnium.density"]], "setdefaultmassfracs() (armi.materials.hafnium.hafnium method)": [[90, "armi.materials.hafnium.Hafnium.setDefaultMassFracs"]], "hastelloyn (class in armi.materials.hastelloyn)": [[91, "armi.materials.hastelloyN.HastelloyN"]], "armi.materials.hastelloyn": [[91, "module-armi.materials.hastelloyN"]], "density() (armi.materials.hastelloyn.hastelloyn method)": [[91, "armi.materials.hastelloyN.HastelloyN.density"]], "heatcapacity() (armi.materials.hastelloyn.hastelloyn method)": [[91, "armi.materials.hastelloyN.HastelloyN.heatCapacity"]], "linearexpansionpercent() (armi.materials.hastelloyn.hastelloyn method)": [[91, "armi.materials.hastelloyN.HastelloyN.linearExpansionPercent"]], "materialintro (armi.materials.hastelloyn.hastelloyn attribute)": [[91, "armi.materials.hastelloyN.HastelloyN.materialIntro"]], "meancoefficientthermalexpansion() (armi.materials.hastelloyn.hastelloyn method)": [[91, "armi.materials.hastelloyN.HastelloyN.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.hastelloyn.hastelloyn attribute)": [[91, "armi.materials.hastelloyN.HastelloyN.propertyValidTemperature"]], "reftempk (armi.materials.hastelloyn.hastelloyn attribute)": [[91, "armi.materials.hastelloyN.HastelloyN.refTempK"]], "setdefaultmassfracs() (armi.materials.hastelloyn.hastelloyn method)": [[91, "armi.materials.hastelloyN.HastelloyN.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.hastelloyn.hastelloyn method)": [[91, "armi.materials.hastelloyN.HastelloyN.thermalConductivity"]], "ht9 (class in armi.materials.ht9)": [[92, "armi.materials.ht9.HT9"]], "armi.materials.ht9": [[92, "module-armi.materials.ht9"]], "density() (armi.materials.ht9.ht9 method)": [[92, "armi.materials.ht9.HT9.density"]], "linearexpansionpercent() (armi.materials.ht9.ht9 method)": [[92, "armi.materials.ht9.HT9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.ht9.ht9 attribute)": [[92, "armi.materials.ht9.HT9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.ht9.ht9 method)": [[92, "armi.materials.ht9.HT9.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.ht9.ht9 method)": [[92, "armi.materials.ht9.HT9.thermalConductivity"]], "inconel (class in armi.materials.inconel)": [[93, "armi.materials.inconel.Inconel"]], "inconel617 (class in armi.materials.inconel)": [[93, "armi.materials.inconel.Inconel617"]], "armi.materials.inconel": [[93, "module-armi.materials.inconel"]], "density() (armi.materials.inconel.inconel method)": [[93, "armi.materials.inconel.Inconel.density"]], "references (armi.materials.inconel.inconel attribute)": [[93, "armi.materials.inconel.Inconel.references"]], "setdefaultmassfracs() (armi.materials.inconel.inconel method)": [[93, "armi.materials.inconel.Inconel.setDefaultMassFracs"]], "inconel600 (class in armi.materials.inconel600)": [[94, "armi.materials.inconel600.Inconel600"]], "armi.materials.inconel600": [[94, "module-armi.materials.inconel600"]], "density() (armi.materials.inconel600.inconel600 method)": [[94, "armi.materials.inconel600.Inconel600.density"]], "heatcapacity() (armi.materials.inconel600.inconel600 method)": [[94, "armi.materials.inconel600.Inconel600.heatCapacity"]], "linearexpansion() (armi.materials.inconel600.inconel600 method)": [[94, "armi.materials.inconel600.Inconel600.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[94, "armi.materials.inconel600.Inconel600.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel600.inconel600 method)": [[94, "armi.materials.inconel600.Inconel600.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[94, "armi.materials.inconel600.Inconel600.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel600.inconel600 method)": [[94, "armi.materials.inconel600.Inconel600.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel600.inconel600 attribute)": [[94, "armi.materials.inconel600.Inconel600.propertyValidTemperature"]], "reftempk (armi.materials.inconel600.inconel600 attribute)": [[94, "armi.materials.inconel600.Inconel600.refTempK"]], "references (armi.materials.inconel600.inconel600 attribute)": [[94, "armi.materials.inconel600.Inconel600.references"]], "setdefaultmassfracs() (armi.materials.inconel600.inconel600 method)": [[94, "armi.materials.inconel600.Inconel600.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel600.inconel600 method)": [[94, "armi.materials.inconel600.Inconel600.thermalConductivity"]], "inconel625 (class in armi.materials.inconel625)": [[95, "armi.materials.inconel625.Inconel625"]], "armi.materials.inconel625": [[95, "module-armi.materials.inconel625"]], "density() (armi.materials.inconel625.inconel625 method)": [[95, "armi.materials.inconel625.Inconel625.density"]], "heatcapacity() (armi.materials.inconel625.inconel625 method)": [[95, "armi.materials.inconel625.Inconel625.heatCapacity"]], "linearexpansion() (armi.materials.inconel625.inconel625 method)": [[95, "armi.materials.inconel625.Inconel625.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[95, "armi.materials.inconel625.Inconel625.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel625.inconel625 method)": [[95, "armi.materials.inconel625.Inconel625.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[95, "armi.materials.inconel625.Inconel625.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel625.inconel625 method)": [[95, "armi.materials.inconel625.Inconel625.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel625.inconel625 attribute)": [[95, "armi.materials.inconel625.Inconel625.propertyValidTemperature"]], "reftempk (armi.materials.inconel625.inconel625 attribute)": [[95, "armi.materials.inconel625.Inconel625.refTempK"]], "references (armi.materials.inconel625.inconel625 attribute)": [[95, "armi.materials.inconel625.Inconel625.references"]], "setdefaultmassfracs() (armi.materials.inconel625.inconel625 method)": [[95, "armi.materials.inconel625.Inconel625.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel625.inconel625 method)": [[95, "armi.materials.inconel625.Inconel625.thermalConductivity"]], "inconel800 (class in armi.materials.inconel800)": [[96, "armi.materials.inconel800.Inconel800"]], "armi.materials.inconel800": [[96, "module-armi.materials.inconel800"]], "density() (armi.materials.inconel800.inconel800 method)": [[96, "armi.materials.inconel800.Inconel800.density"]], "linearexpansionpercent() (armi.materials.inconel800.inconel800 method)": [[96, "armi.materials.inconel800.Inconel800.linearExpansionPercent"]], "meancoefficientthermalexpansion() (armi.materials.inconel800.inconel800 method)": [[96, "armi.materials.inconel800.Inconel800.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.inconel800.inconel800 attribute)": [[96, "armi.materials.inconel800.Inconel800.propertyValidTemperature"]], "reftempk (armi.materials.inconel800.inconel800 attribute)": [[96, "armi.materials.inconel800.Inconel800.refTempK"]], "setdefaultmassfracs() (armi.materials.inconel800.inconel800 method)": [[96, "armi.materials.inconel800.Inconel800.setDefaultMassFracs"]], "inconelpe16 (class in armi.materials.inconelpe16)": [[97, "armi.materials.inconelPE16.InconelPE16"]], "armi.materials.inconelpe16": [[97, "module-armi.materials.inconelPE16"]], "density() (armi.materials.inconelpe16.inconelpe16 method)": [[97, "armi.materials.inconelPE16.InconelPE16.density"]], "references (armi.materials.inconelpe16.inconelpe16 attribute)": [[97, "armi.materials.inconelPE16.InconelPE16.references"]], "setdefaultmassfracs() (armi.materials.inconelpe16.inconelpe16 method)": [[97, "armi.materials.inconelPE16.InconelPE16.setDefaultMassFracs"]], "inconelx750 (class in armi.materials.inconelx750)": [[98, "armi.materials.inconelX750.InconelX750"]], "armi.materials.inconelx750": [[98, "module-armi.materials.inconelX750"]], "density() (armi.materials.inconelx750.inconelx750 method)": [[98, "armi.materials.inconelX750.InconelX750.density"]], "heatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[98, "armi.materials.inconelX750.InconelX750.heatCapacity"]], "linearexpansion() (armi.materials.inconelx750.inconelx750 method)": [[98, "armi.materials.inconelX750.InconelX750.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[98, "armi.materials.inconelX750.InconelX750.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[98, "armi.materials.inconelX750.InconelX750.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[98, "armi.materials.inconelX750.InconelX750.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[98, "armi.materials.inconelX750.InconelX750.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconelx750.inconelx750 attribute)": [[98, "armi.materials.inconelX750.InconelX750.propertyValidTemperature"]], "reftempk (armi.materials.inconelx750.inconelx750 attribute)": [[98, "armi.materials.inconelX750.InconelX750.refTempK"]], "references (armi.materials.inconelx750.inconelx750 attribute)": [[98, "armi.materials.inconelX750.InconelX750.references"]], "setdefaultmassfracs() (armi.materials.inconelx750.inconelx750 method)": [[98, "armi.materials.inconelX750.InconelX750.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[98, "armi.materials.inconelX750.InconelX750.thermalConductivity"]], "lead (class in armi.materials.lead)": [[99, "armi.materials.lead.Lead"]], "armi.materials.lead": [[99, "module-armi.materials.lead"]], "heatcapacity() (armi.materials.lead.lead method)": [[99, "armi.materials.lead.Lead.heatCapacity"]], "propertyvalidtemperature (armi.materials.lead.lead attribute)": [[99, "armi.materials.lead.Lead.propertyValidTemperature"]], "pseudodensity() (armi.materials.lead.lead method)": [[99, "armi.materials.lead.Lead.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.lead.lead method)": [[99, "armi.materials.lead.Lead.setDefaultMassFracs"]], "volumetricexpansion() (armi.materials.lead.lead method)": [[99, "armi.materials.lead.Lead.volumetricExpansion"]], "leadbismuth (class in armi.materials.leadbismuth)": [[100, "armi.materials.leadBismuth.LeadBismuth"]], "armi.materials.leadbismuth": [[100, "module-armi.materials.leadBismuth"]], "dynamicvisc() (armi.materials.leadbismuth.leadbismuth method)": [[100, "armi.materials.leadBismuth.LeadBismuth.dynamicVisc"]], "heatcapacity() (armi.materials.leadbismuth.leadbismuth method)": [[100, "armi.materials.leadBismuth.LeadBismuth.heatCapacity"]], "propertyvalidtemperature (armi.materials.leadbismuth.leadbismuth attribute)": [[100, "armi.materials.leadBismuth.LeadBismuth.propertyValidTemperature"]], "pseudodensity() (armi.materials.leadbismuth.leadbismuth method)": [[100, "armi.materials.leadBismuth.LeadBismuth.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.leadbismuth.leadbismuth method)": [[100, "armi.materials.leadBismuth.LeadBismuth.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.leadbismuth.leadbismuth method)": [[100, "armi.materials.leadBismuth.LeadBismuth.thermalConductivity"]], "volumetricexpansion() (armi.materials.leadbismuth.leadbismuth method)": [[100, "armi.materials.leadBismuth.LeadBismuth.volumetricExpansion"]], "lithium (class in armi.materials.lithium)": [[101, "armi.materials.lithium.Lithium"]], "applyinputparams() (armi.materials.lithium.lithium method)": [[101, "armi.materials.lithium.Lithium.applyInputParams"]], "armi.materials.lithium": [[101, "module-armi.materials.lithium"]], "boilingpoint() (armi.materials.lithium.lithium method)": [[101, "armi.materials.lithium.Lithium.boilingPoint"]], "enrichednuclide (armi.materials.lithium.lithium attribute)": [[101, "armi.materials.lithium.Lithium.enrichedNuclide"]], "heatcapacity() (armi.materials.lithium.lithium method)": [[101, "armi.materials.lithium.Lithium.heatCapacity"]], "meltingpoint() (armi.materials.lithium.lithium method)": [[101, "armi.materials.lithium.Lithium.meltingPoint"]], "pseudodensity() (armi.materials.lithium.lithium method)": [[101, "armi.materials.lithium.Lithium.pseudoDensity"]], "references (armi.materials.lithium.lithium attribute)": [[101, "armi.materials.lithium.Lithium.references"]], "setdefaultmassfracs() (armi.materials.lithium.lithium method)": [[101, "armi.materials.lithium.Lithium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.lithium.lithium method)": [[101, "armi.materials.lithium.Lithium.thermalConductivity"]], "magnesium (class in armi.materials.magnesium)": [[102, "armi.materials.magnesium.Magnesium"]], "armi.materials.magnesium": [[102, "module-armi.materials.magnesium"]], "propertyvalidtemperature (armi.materials.magnesium.magnesium attribute)": [[102, "armi.materials.magnesium.Magnesium.propertyValidTemperature"]], "pseudodensity() (armi.materials.magnesium.magnesium method)": [[102, "armi.materials.magnesium.Magnesium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.magnesium.magnesium method)": [[102, "armi.materials.magnesium.Magnesium.setDefaultMassFracs"]], "data_source (armi.materials.material.material attribute)": [[103, "armi.materials.material.Material.DATA_SOURCE"]], "fluid (class in armi.materials.material)": [[103, "armi.materials.material.Fluid"]], "fuelmaterial (class in armi.materials.material)": [[103, "armi.materials.material.FuelMaterial"]], "material (class in armi.materials.material)": [[103, "armi.materials.material.Material"]], "simplesolid (class in armi.materials.material)": [[103, "armi.materials.material.SimpleSolid"]], "adjustmassenrichment() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.adjustMassEnrichment"]], "adjustmassfrac() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.adjustMassFrac"]], "adjusttd() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.adjustTD"]], "applyinputparams() (armi.materials.material.fuelmaterial method)": [[103, "armi.materials.material.FuelMaterial.applyInputParams"]], "applyinputparams() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.applyInputParams"]], "armi.materials.material": [[103, "module-armi.materials.material"]], "backup() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.backUp"]], "checkpropertytemprange() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.checkPropertyTempRange"]], "checktemprange() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.checkTempRange"]], "class1_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[103, "armi.materials.material.FuelMaterial.class1_custom_isotopics"]], "class1_wt_frac (armi.materials.material.fuelmaterial attribute)": [[103, "armi.materials.material.FuelMaterial.class1_wt_frac"]], "class2_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[103, "armi.materials.material.FuelMaterial.class2_custom_isotopics"]], "clearcache() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.clearCache"]], "clearmassfrac() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.clearMassFrac"]], "density() (armi.materials.material.fluid method)": [[103, "armi.materials.material.Fluid.density"]], "density() (armi.materials.material.fuelmaterial method)": [[103, "armi.materials.material.FuelMaterial.density"]], "density() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.density"]], "density() (armi.materials.material.simplesolid method)": [[103, "armi.materials.material.SimpleSolid.density"]], "densitykgm3() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.densityKgM3"]], "densitytimesheatcapacity() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.densityTimesHeatCapacity"]], "duplicate() (armi.materials.material.fuelmaterial method)": [[103, "armi.materials.material.FuelMaterial.duplicate"]], "duplicate() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.duplicate"]], "enrichednuclide (armi.materials.material.material attribute)": [[103, "armi.materials.material.Material.enrichedNuclide"]], "gasporosity (armi.materials.material.material property)": [[103, "armi.materials.material.Material.gasPorosity"]], "getchildren() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.getChildren"]], "getchildrenwithflags() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.getChildrenWithFlags"]], "getcorrosionrate() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.getCorrosionRate"]], "getmassfrac() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.getMassFrac"]], "getname() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.getName"]], "getnuclides() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.getNuclides"]], "getproperty() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.getProperty"]], "gettd() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.getTD"]], "gettempchangefordensitychange() (armi.materials.material.fluid method)": [[103, "armi.materials.material.Fluid.getTempChangeForDensityChange"]], "gettempchangefordensitychange() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.getTempChangeForDensityChange"]], "gettemperatureatdensity() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.getTemperatureAtDensity"]], "getthermalexpansiondensityreduction() (armi.materials.material.fluid method)": [[103, "armi.materials.material.Fluid.getThermalExpansionDensityReduction"]], "getthermalexpansiondensityreduction() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.getThermalExpansionDensityReduction"]], "heatcapacity() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.heatCapacity"]], "linearexpansion() (armi.materials.material.fluid method)": [[103, "armi.materials.material.Fluid.linearExpansion"]], "linearexpansion() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.linearExpansion"]], "linearexpansionfactor() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.linearExpansionFactor"]], "linearexpansionpercent() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.linearExpansionPercent"]], "linearexpansionpercent() (armi.materials.material.simplesolid method)": [[103, "armi.materials.material.SimpleSolid.linearExpansionPercent"]], "liquidporosity (armi.materials.material.material property)": [[103, "armi.materials.material.Material.liquidPorosity"]], "modelconst (armi.materials.material.material attribute)": [[103, "armi.materials.material.Material.modelConst"]], "name (armi.materials.material.material property)": [[103, "armi.materials.material.Material.name"]], "parentawaredensityredirect() (in module armi.materials.material)": [[103, "armi.materials.material.parentAwareDensityRedirect"]], "propertyvalidtemperature (armi.materials.material.material attribute)": [[103, "armi.materials.material.Material.propertyValidTemperature"]], "pseudodensity() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.pseudoDensity"]], "pseudodensity() (armi.materials.material.simplesolid method)": [[103, "armi.materials.material.SimpleSolid.pseudoDensity"]], "pseudodensitykgm3() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.pseudoDensityKgM3"]], "pufrac (armi.materials.material.fuelmaterial attribute)": [[103, "armi.materials.material.FuelMaterial.puFrac"]], "reftempk (armi.materials.material.simplesolid attribute)": [[103, "armi.materials.material.SimpleSolid.refTempK"]], "references (armi.materials.material.material attribute)": [[103, "armi.materials.material.Material.references"]], "removenucmassfrac() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.removeNucMassFrac"]], "restorebackup() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.restoreBackup"]], "setdefaultmassfracs() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.setDefaultMassFracs"]], "setmassfrac() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.setMassFrac"]], "thermalconductivity() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.thermalConductivity"]], "thermalscatteringlaws (armi.materials.material.material attribute)": [[103, "armi.materials.material.Material.thermalScatteringLaws"]], "ufrac (armi.materials.material.fuelmaterial attribute)": [[103, "armi.materials.material.FuelMaterial.uFrac"]], "volumetricexpansion() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.volumetricExpansion"]], "yieldstrength() (armi.materials.material.material method)": [[103, "armi.materials.material.Material.yieldStrength"]], "zrfrac (armi.materials.material.fuelmaterial attribute)": [[103, "armi.materials.material.FuelMaterial.zrFrac"]], "mgo (class in armi.materials.mgo)": [[104, "armi.materials.mgO.MgO"]], "armi.materials.mgo": [[104, "module-armi.materials.mgO"]], "density() (armi.materials.mgo.mgo method)": [[104, "armi.materials.mgO.MgO.density"]], "linearexpansionpercent() (armi.materials.mgo.mgo method)": [[104, "armi.materials.mgO.MgO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.mgo.mgo attribute)": [[104, "armi.materials.mgO.MgO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.mgo.mgo method)": [[104, "armi.materials.mgO.MgO.setDefaultMassFracs"]], "armi.materials.mixture": [[105, "module-armi.materials.mixture"]], "molybdenum (class in armi.materials.molybdenum)": [[106, "armi.materials.molybdenum.Molybdenum"]], "armi.materials.molybdenum": [[106, "module-armi.materials.molybdenum"]], "density() (armi.materials.molybdenum.molybdenum method)": [[106, "armi.materials.molybdenum.Molybdenum.density"]], "setdefaultmassfracs() (armi.materials.molybdenum.molybdenum method)": [[106, "armi.materials.molybdenum.Molybdenum.setDefaultMassFracs"]], "mox (class in armi.materials.mox)": [[107, "armi.materials.mox.MOX"]], "applyinputparams() (armi.materials.mox.mox method)": [[107, "armi.materials.mox.MOX.applyInputParams"]], "armi.materials.mox": [[107, "module-armi.materials.mox"]], "enrichednuclide (armi.materials.mox.mox attribute)": [[107, "armi.materials.mox.MOX.enrichedNuclide"]], "getmassfracpuo2() (armi.materials.mox.mox method)": [[107, "armi.materials.mox.MOX.getMassFracPuO2"]], "getmolfracpuo2() (armi.materials.mox.mox method)": [[107, "armi.materials.mox.MOX.getMolFracPuO2"]], "meltingpoint() (armi.materials.mox.mox method)": [[107, "armi.materials.mox.MOX.meltingPoint"]], "setdefaultmassfracs() (armi.materials.mox.mox method)": [[107, "armi.materials.mox.MOX.setDefaultMassFracs"]], "setmassfracpuo2() (armi.materials.mox.mox method)": [[107, "armi.materials.mox.MOX.setMassFracPuO2"]], "nz (class in armi.materials.nz)": [[108, "armi.materials.nZ.NZ"]], "armi.materials.nz": [[108, "module-armi.materials.nZ"]], "density() (armi.materials.nz.nz method)": [[108, "armi.materials.nZ.NZ.density"]], "setdefaultmassfracs() (armi.materials.nz.nz method)": [[108, "armi.materials.nZ.NZ.setDefaultMassFracs"]], "potassium (class in armi.materials.potassium)": [[109, "armi.materials.potassium.Potassium"]], "armi.materials.potassium": [[109, "module-armi.materials.potassium"]], "propertyvalidtemperature (armi.materials.potassium.potassium attribute)": [[109, "armi.materials.potassium.Potassium.propertyValidTemperature"]], "pseudodensity() (armi.materials.potassium.potassium method)": [[109, "armi.materials.potassium.Potassium.pseudoDensity"]], "sc2o3 (class in armi.materials.scandiumoxide)": [[110, "armi.materials.scandiumOxide.Sc2O3"]], "armi.materials.scandiumoxide": [[110, "module-armi.materials.scandiumOxide"]], "density() (armi.materials.scandiumoxide.sc2o3 method)": [[110, "armi.materials.scandiumOxide.Sc2O3.density"]], "linearexpansionpercent() (armi.materials.scandiumoxide.sc2o3 method)": [[110, "armi.materials.scandiumOxide.Sc2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.scandiumoxide.sc2o3 attribute)": [[110, "armi.materials.scandiumOxide.Sc2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.scandiumoxide.sc2o3 method)": [[110, "armi.materials.scandiumOxide.Sc2O3.setDefaultMassFracs"]], "sic (class in armi.materials.sic)": [[111, "armi.materials.siC.SiC"]], "armi.materials.sic": [[111, "module-armi.materials.siC"]], "cumulativelinearexpansion() (armi.materials.sic.sic method)": [[111, "armi.materials.siC.SiC.cumulativeLinearExpansion"]], "density() (armi.materials.sic.sic method)": [[111, "armi.materials.siC.SiC.density"]], "heatcapacity() (armi.materials.sic.sic method)": [[111, "armi.materials.siC.SiC.heatCapacity"]], "meltingpoint() (armi.materials.sic.sic method)": [[111, "armi.materials.siC.SiC.meltingPoint"]], "propertyequation (armi.materials.sic.sic attribute)": [[111, "armi.materials.siC.SiC.propertyEquation"]], "propertynotes (armi.materials.sic.sic attribute)": [[111, "armi.materials.siC.SiC.propertyNotes"]], "propertyunits (armi.materials.sic.sic attribute)": [[111, "armi.materials.siC.SiC.propertyUnits"]], "propertyvalidtemperature (armi.materials.sic.sic attribute)": [[111, "armi.materials.siC.SiC.propertyValidTemperature"]], "pseudodensity() (armi.materials.sic.sic method)": [[111, "armi.materials.siC.SiC.pseudoDensity"]], "reftempk (armi.materials.sic.sic attribute)": [[111, "armi.materials.siC.SiC.refTempK"]], "references (armi.materials.sic.sic attribute)": [[111, "armi.materials.siC.SiC.references"]], "setdefaultmassfracs() (armi.materials.sic.sic method)": [[111, "armi.materials.siC.SiC.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.sic.sic method)": [[111, "armi.materials.siC.SiC.thermalConductivity"]], "thermalscatteringlaws (armi.materials.sic.sic attribute)": [[111, "armi.materials.siC.SiC.thermalScatteringLaws"]], "sodium (class in armi.materials.sodium)": [[112, "armi.materials.sodium.Sodium"]], "armi.materials.sodium": [[112, "module-armi.materials.sodium"]], "enthalpy() (armi.materials.sodium.sodium method)": [[112, "armi.materials.sodium.Sodium.enthalpy"]], "propertyvalidtemperature (armi.materials.sodium.sodium attribute)": [[112, "armi.materials.sodium.Sodium.propertyValidTemperature"]], "pseudodensity() (armi.materials.sodium.sodium method)": [[112, "armi.materials.sodium.Sodium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sodium.sodium method)": [[112, "armi.materials.sodium.Sodium.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.sodium.sodium method)": [[112, "armi.materials.sodium.Sodium.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.sodium.sodium method)": [[112, "armi.materials.sodium.Sodium.thermalConductivity"]], "nacl (class in armi.materials.sodiumchloride)": [[113, "armi.materials.sodiumChloride.NaCl"]], "armi.materials.sodiumchloride": [[113, "module-armi.materials.sodiumChloride"]], "density() (armi.materials.sodiumchloride.nacl method)": [[113, "armi.materials.sodiumChloride.NaCl.density"]], "setdefaultmassfracs() (armi.materials.sodiumchloride.nacl method)": [[113, "armi.materials.sodiumChloride.NaCl.setDefaultMassFracs"]], "sulfur (class in armi.materials.sulfur)": [[114, "armi.materials.sulfur.Sulfur"]], "applyinputparams() (armi.materials.sulfur.sulfur method)": [[114, "armi.materials.sulfur.Sulfur.applyInputParams"]], "armi.materials.sulfur": [[114, "module-armi.materials.sulfur"]], "propertyvalidtemperature (armi.materials.sulfur.sulfur attribute)": [[114, "armi.materials.sulfur.Sulfur.propertyValidTemperature"]], "pseudodensity() (armi.materials.sulfur.sulfur method)": [[114, "armi.materials.sulfur.Sulfur.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sulfur.sulfur method)": [[114, "armi.materials.sulfur.Sulfur.setDefaultMassFracs"]], "updatetd() (armi.materials.sulfur.sulfur method)": [[114, "armi.materials.sulfur.Sulfur.updateTD"]], "volumetricexpansion() (armi.materials.sulfur.sulfur method)": [[114, "armi.materials.sulfur.Sulfur.volumetricExpansion"]], "tzm (class in armi.materials.tzm)": [[115, "armi.materials.tZM.TZM"]], "armi.materials.tzm": [[115, "module-armi.materials.tZM"]], "density() (armi.materials.tzm.tzm method)": [[115, "armi.materials.tZM.TZM.density"]], "linearexpansionpercent() (armi.materials.tzm.tzm method)": [[115, "armi.materials.tZM.TZM.linearExpansionPercent"]], "percentthermalexpansion (armi.materials.tzm.tzm attribute)": [[115, "armi.materials.tZM.TZM.percentThermalExpansion"]], "propertyvalidtemperature (armi.materials.tzm.tzm attribute)": [[115, "armi.materials.tZM.TZM.propertyValidTemperature"]], "references (armi.materials.tzm.tzm attribute)": [[115, "armi.materials.tZM.TZM.references"]], "setdefaultmassfracs() (armi.materials.tzm.tzm method)": [[115, "armi.materials.tZM.TZM.setDefaultMassFracs"]], "temperaturec (armi.materials.tzm.tzm attribute)": [[115, "armi.materials.tZM.TZM.temperatureC"]], "tantalum (class in armi.materials.tantalum)": [[116, "armi.materials.tantalum.Tantalum"]], "armi.materials.tantalum": [[116, "module-armi.materials.tantalum"]], "density() (armi.materials.tantalum.tantalum method)": [[116, "armi.materials.tantalum.Tantalum.density"]], "setdefaultmassfracs() (armi.materials.tantalum.tantalum method)": [[116, "armi.materials.tantalum.Tantalum.setDefaultMassFracs"]], "armi.materials.tests": [[117, "module-armi.materials.tests"]], "materials__init__tests (class in armi.materials.tests.test__init__)": [[118, "armi.materials.tests.test__init__.Materials__init__Tests"]], "armi.materials.tests.test__init__": [[118, "module-armi.materials.tests.test__init__"]], "bettersubclasscheck() (in module armi.materials.tests.test__init__)": [[118, "armi.materials.tests.test__init__.betterSubClassCheck"]], "test_canaccessclassesfrompackage() (armi.materials.tests.test__init__.materials__init__tests method)": [[118, "armi.materials.tests.test__init__.Materials__init__Tests.test_canAccessClassesFromPackage"]], "test_packageclassesequalmoduleclasses() (armi.materials.tests.test__init__.materials__init__tests method)": [[118, "armi.materials.tests.test__init__.Materials__init__Tests.test_packageClassesEqualModuleClasses"]], "test_air (class in armi.materials.tests.test_air)": [[119, "armi.materials.tests.test_air.Test_Air"]], "armi.materials.tests.test_air": [[119, "module-armi.materials.tests.test_air"]], "test_heatcapacity() (armi.materials.tests.test_air.test_air method)": [[119, "armi.materials.tests.test_air.Test_Air.test_heatCapacity"]], "test_massfrac() (armi.materials.tests.test_air.test_air method)": [[119, "armi.materials.tests.test_air.Test_Air.test_massFrac"]], "test_pseudodensity() (armi.materials.tests.test_air.test_air method)": [[119, "armi.materials.tests.test_air.Test_Air.test_pseudoDensity"]], "test_thermalconductivity() (armi.materials.tests.test_air.test_air method)": [[119, "armi.materials.tests.test_air.Test_Air.test_thermalConductivity"]], "test_validranges() (armi.materials.tests.test_air.test_air method)": [[119, "armi.materials.tests.test_air.Test_Air.test_validRanges"]], "b4c_testcase (class in armi.materials.tests.test_b4c)": [[120, "armi.materials.tests.test_b4c.B4C_TestCase"]], "mat_class (armi.materials.tests.test_b4c.b4c_testcase attribute)": [[120, "armi.materials.tests.test_b4c.B4C_TestCase.MAT_CLASS"]], "armi.materials.tests.test_b4c": [[120, "module-armi.materials.tests.test_b4c"]], "test_propertyvalidtemperature() (armi.materials.tests.test_b4c.b4c_testcase method)": [[120, "armi.materials.tests.test_b4c.B4C_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_b4c.b4c_testcase method)": [[120, "armi.materials.tests.test_b4c.B4C_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_be9.test_be9 attribute)": [[121, "armi.materials.tests.test_be9.Test_Be9.MAT_CLASS"]], "test_be9 (class in armi.materials.tests.test_be9)": [[121, "armi.materials.tests.test_be9.Test_Be9"]], "armi.materials.tests.test_be9": [[121, "module-armi.materials.tests.test_be9"]], "test_propertyvalidtemperature() (armi.materials.tests.test_be9.test_be9 method)": [[121, "armi.materials.tests.test_be9.Test_Be9.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_be9.test_be9 method)": [[121, "armi.materials.tests.test_be9.Test_Be9.test_pseudoDensity"]], "graphite_testcase (class in armi.materials.tests.test_graphite)": [[122, "armi.materials.tests.test_graphite.Graphite_TestCase"]], "mat_class (armi.materials.tests.test_graphite.graphite_testcase attribute)": [[122, "armi.materials.tests.test_graphite.Graphite_TestCase.MAT_CLASS"]], "armi.materials.tests.test_graphite": [[122, "module-armi.materials.tests.test_graphite"]], "test_density() (armi.materials.tests.test_graphite.graphite_testcase method)": [[122, "armi.materials.tests.test_graphite.Graphite_TestCase.test_density"]], "test_linearexpansionpercent() (armi.materials.tests.test_graphite.graphite_testcase method)": [[122, "armi.materials.tests.test_graphite.Graphite_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_graphite.graphite_testcase method)": [[122, "armi.materials.tests.test_graphite.Graphite_TestCase.test_propertyValidTemperature"]], "lithium_testcase (class in armi.materials.tests.test_lithium)": [[123, "armi.materials.tests.test_lithium.Lithium_TestCase"]], "mat_class (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[123, "armi.materials.tests.test_lithium.Lithium_TestCase.MAT_CLASS"]], "armi.materials.tests.test_lithium": [[123, "module-armi.materials.tests.test_lithium"]], "defaultmassfrac (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[123, "armi.materials.tests.test_lithium.Lithium_TestCase.defaultMassFrac"]], "test_lithium_material_modifications() (armi.materials.tests.test_lithium.lithium_testcase method)": [[123, "armi.materials.tests.test_lithium.Lithium_TestCase.test_Lithium_material_modifications"]], "test_boilingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[123, "armi.materials.tests.test_lithium.Lithium_TestCase.test_boilingPoint"]], "test_heatcapacity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[123, "armi.materials.tests.test_lithium.Lithium_TestCase.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[123, "armi.materials.tests.test_lithium.Lithium_TestCase.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_lithium.lithium_testcase method)": [[123, "armi.materials.tests.test_lithium.Lithium_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[123, "armi.materials.tests.test_lithium.Lithium_TestCase.test_pseudoDensity"]], "alloy200_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Alloy200_TestCase"]], "cah2_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.CaH2_TestCase"]], "californium_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Californium_TestCase"]], "cesium_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Cesium_TestCase"]], "copper_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Copper_TestCase"]], "fuelmaterial_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.FuelMaterial_TestCase"]], "hafnium_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Hafnium_TestCase"]], "hastelloyn_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.HastelloyN_TestCase"]], "inconel600_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Inconel600_TestCase"]], "inconel625_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Inconel625_TestCase"]], "inconelx750_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.InconelX750_TestCase"]], "inconel_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Inconel_TestCase"]], "leadbismuth_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.LeadBismuth_TestCase"]], "lead_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Lead_TestCase"]], "mat_class (armi.materials.tests.test_materials.alloy200_testcase attribute)": [[124, "armi.materials.tests.test_materials.Alloy200_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cah2_testcase attribute)": [[124, "armi.materials.tests.test_materials.CaH2_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.californium_testcase attribute)": [[124, "armi.materials.tests.test_materials.Californium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cesium_testcase attribute)": [[124, "armi.materials.tests.test_materials.Cesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.copper_testcase attribute)": [[124, "armi.materials.tests.test_materials.Copper_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hafnium_testcase attribute)": [[124, "armi.materials.tests.test_materials.Hafnium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hastelloyn_testcase attribute)": [[124, "armi.materials.tests.test_materials.HastelloyN_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel600_testcase attribute)": [[124, "armi.materials.tests.test_materials.Inconel600_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel625_testcase attribute)": [[124, "armi.materials.tests.test_materials.Inconel625_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconelx750_testcase attribute)": [[124, "armi.materials.tests.test_materials.InconelX750_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.leadbismuth_testcase attribute)": [[124, "armi.materials.tests.test_materials.LeadBismuth_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.lead_testcase attribute)": [[124, "armi.materials.tests.test_materials.Lead_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mox_testcase attribute)": [[124, "armi.materials.tests.test_materials.MOX_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesiumoxide_testcase attribute)": [[124, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesium_testcase attribute)": [[124, "armi.materials.tests.test_materials.Magnesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mixture_testcase attribute)": [[124, "armi.materials.tests.test_materials.Mixture_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.molybdenum_testcase attribute)": [[124, "armi.materials.tests.test_materials.Molybdenum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.nacl_testcase attribute)": [[124, "armi.materials.tests.test_materials.NaCl_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.niobiumzirconium_testcase attribute)": [[124, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.potassium_testcase attribute)": [[124, "armi.materials.tests.test_materials.Potassium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.scandiumoxide_testcase attribute)": [[124, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sodium_testcase attribute)": [[124, "armi.materials.tests.test_materials.Sodium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sulfur_testcase attribute)": [[124, "armi.materials.tests.test_materials.Sulfur_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tzm_testcase attribute)": [[124, "armi.materials.tests.test_materials.TZM_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tantalum_testcase attribute)": [[124, "armi.materials.tests.test_materials.Tantalum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumoxide_testcase attribute)": [[124, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumuraniummetal_testcase attribute)": [[124, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thorium_testcase attribute)": [[124, "armi.materials.tests.test_materials.Thorium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uraniumoxide_testcase attribute)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uranium_testcase attribute)": [[124, "armi.materials.tests.test_materials.Uranium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.void_testcase attribute)": [[124, "armi.materials.tests.test_materials.Void_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.yttriumoxide_testcase attribute)": [[124, "armi.materials.tests.test_materials.YttriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zincoxide_testcase attribute)": [[124, "armi.materials.tests.test_materials.ZincOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zr_testcase attribute)": [[124, "armi.materials.tests.test_materials.Zr_TestCase.MAT_CLASS"]], "mox_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.MOX_TestCase"]], "magnesiumoxide_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase"]], "magnesium_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Magnesium_TestCase"]], "materialconstructiontests (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.MaterialConstructionTests"]], "materialfindingtests (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.MaterialFindingTests"]], "mixture_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Mixture_TestCase"]], "molybdenum_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Molybdenum_TestCase"]], "nacl_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.NaCl_TestCase"]], "niobiumzirconium_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase"]], "potassium_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Potassium_TestCase"]], "scandiumoxide_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.ScandiumOxide_TestCase"]], "sodium_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Sodium_TestCase"]], "sulfur_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Sulfur_TestCase"]], "tzm_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.TZM_TestCase"]], "tantalum_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Tantalum_TestCase"]], "thoriumoxide_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.ThoriumOxide_TestCase"]], "thoriumuraniummetal_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase"]], "thorium_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Thorium_TestCase"]], "uraniumoxide_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase"]], "uranium_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Uranium_TestCase"]], "void_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Void_TestCase"]], "yttriumoxide_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.YttriumOxide_TestCase"]], "zincoxide_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.ZincOxide_TestCase"]], "zr_testcase (class in armi.materials.tests.test_materials)": [[124, "armi.materials.tests.test_materials.Zr_TestCase"]], "armi.materials.tests.test_materials": [[124, "module-armi.materials.tests.test_materials"]], "baseinput (armi.materials.tests.test_materials.fuelmaterial_testcase attribute)": [[124, "armi.materials.tests.test_materials.FuelMaterial_TestCase.baseInput"]], "loadassembly() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[124, "armi.materials.tests.test_materials.FuelMaterial_TestCase.loadAssembly"]], "test_00_applyinputparams() (armi.materials.tests.test_materials.tzm_testcase method)": [[124, "armi.materials.tests.test_materials.TZM_TestCase.test_00_applyInputParams"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel600_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel600_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel625_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel625_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[124, "armi.materials.tests.test_materials.InconelX750_TestCase.test_00_setDefaultMassFracs"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel600_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel625_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[124, "armi.materials.tests.test_materials.InconelX750_TestCase.test_01_linearExpansionPercent"]], "test_01_pseudodensity() (armi.materials.tests.test_materials.tzm_testcase method)": [[124, "armi.materials.tests.test_materials.TZM_TestCase.test_01_pseudoDensity"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel600_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel600_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel625_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel625_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[124, "armi.materials.tests.test_materials.InconelX750_TestCase.test_02_linearExpansion"]], "test_02_linearexpansionpercent() (armi.materials.tests.test_materials.tzm_testcase method)": [[124, "armi.materials.tests.test_materials.TZM_TestCase.test_02_linearExpansionPercent"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel600_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel625_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[124, "armi.materials.tests.test_materials.InconelX750_TestCase.test_03_pseudoDensity"]], "test_iconel800_linearexpansion() (armi.materials.tests.test_materials.inconel_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel_TestCase.test_Iconel800_linearExpansion"]], "test_adjustmassenrichment() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_adjustMassEnrichment"]], "test_applyinputparams() (armi.materials.tests.test_materials.mox_testcase method)": [[124, "armi.materials.tests.test_materials.MOX_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uranium_testcase method)": [[124, "armi.materials.tests.test_materials.Uranium_TestCase.test_applyInputParams"]], "test_class1class2_class1_wt_frac() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[124, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_class1_wt_frac"]], "test_class1class2_classx_custom_isotopics() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[124, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_classX_custom_isotopics"]], "test_density() (armi.materials.tests.test_materials.mox_testcase method)": [[124, "armi.materials.tests.test_materials.MOX_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.mixture_testcase method)": [[124, "armi.materials.tests.test_materials.Mixture_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.nacl_testcase method)": [[124, "armi.materials.tests.test_materials.NaCl_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.void_testcase method)": [[124, "armi.materials.tests.test_materials.Void_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[124, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_density"]], "test_densityneverchanges() (armi.materials.tests.test_materials.copper_testcase method)": [[124, "armi.materials.tests.test_materials.Copper_TestCase.test_densityNeverChanges"]], "test_densitytimesheatcapactiy() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_densityTimesHeatCapactiy"]], "test_duplicate() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_duplicate"]], "test_dynamicvisc() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[124, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_dynamicVisc"]], "test_enthalpy() (armi.materials.tests.test_materials.sodium_testcase method)": [[124, "armi.materials.tests.test_materials.Sodium_TestCase.test_enthalpy"]], "test_findmaterial() (armi.materials.tests.test_materials.materialfindingtests method)": [[124, "armi.materials.tests.test_materials.MaterialFindingTests.test_findMaterial"]], "test_getchildren() (armi.materials.tests.test_materials.copper_testcase method)": [[124, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildren"]], "test_getchildrenwithflags() (armi.materials.tests.test_materials.copper_testcase method)": [[124, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildrenWithFlags"]], "test_getcorrosionrate() (armi.materials.tests.test_materials.californium_testcase method)": [[124, "armi.materials.tests.test_materials.Californium_TestCase.test_getCorrosionRate"]], "test_getdensityexpansion3d() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getDensityExpansion3D"]], "test_getmassfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[124, "armi.materials.tests.test_materials.MOX_TestCase.test_getMassFracPuO2"]], "test_getmeltingpoint() (armi.materials.tests.test_materials.mox_testcase method)": [[124, "armi.materials.tests.test_materials.MOX_TestCase.test_getMeltingPoint"]], "test_getmolfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[124, "armi.materials.tests.test_materials.MOX_TestCase.test_getMolFracPuO2"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[124, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_getTempChangeForDensityChange"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTempChangeForDensityChange"]], "test_gettemperatureatdensity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTemperatureAtDensity"]], "test_heatcapacity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[124, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel600_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel625_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[124, "armi.materials.tests.test_materials.InconelX750_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[124, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.lead_testcase method)": [[124, "armi.materials.tests.test_materials.Lead_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_heatCapacity"]], "test_linearexpansion() (armi.materials.tests.test_materials.alloy200_testcase method)": [[124, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[124, "armi.materials.tests.test_materials.Lead_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.mixture_testcase method)": [[124, "armi.materials.tests.test_materials.Mixture_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[124, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thorium_testcase method)": [[124, "armi.materials.tests.test_materials.Thorium_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.void_testcase method)": [[124, "armi.materials.tests.test_materials.Void_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.zr_testcase method)": [[124, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansion"]], "test_linearexpansionhotter() (armi.materials.tests.test_materials.alloy200_testcase method)": [[124, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansionHotter"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.copper_testcase method)": [[124, "armi.materials.tests.test_materials.Copper_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[124, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[124, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zr_testcase method)": [[124, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansionPercent"]], "test_material_initialization() (armi.materials.tests.test_materials.materialconstructiontests method)": [[124, "armi.materials.tests.test_materials.MaterialConstructionTests.test_material_initialization"]], "test_meancoefficientthermalexpansion() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[124, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_meanCoefficientThermalExpansion"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[124, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thorium_testcase method)": [[124, "armi.materials.tests.test_materials.Thorium_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_meltingPoint"]], "test_namespacing() (armi.materials.tests.test_materials.materialfindingtests method)": [[124, "armi.materials.tests.test_materials.MaterialFindingTests.test_namespacing"]], "test_nicklecontent() (armi.materials.tests.test_materials.alloy200_testcase method)": [[124, "armi.materials.tests.test_materials.Alloy200_TestCase.test_nickleContent"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[124, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitHeatCapacity"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[124, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[124, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitThermalConductivity"]], "test_porosities() (armi.materials.tests.test_materials.californium_testcase method)": [[124, "armi.materials.tests.test_materials.Californium_TestCase.test_porosities"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.alloy200_testcase method)": [[124, "armi.materials.tests.test_materials.Alloy200_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cah2_testcase method)": [[124, "armi.materials.tests.test_materials.CaH2_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.californium_testcase method)": [[124, "armi.materials.tests.test_materials.Californium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cesium_testcase method)": [[124, "armi.materials.tests.test_materials.Cesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hafnium_testcase method)": [[124, "armi.materials.tests.test_materials.Hafnium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[124, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel600_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel600_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel625_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel625_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[124, "armi.materials.tests.test_materials.InconelX750_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[124, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.lead_testcase method)": [[124, "armi.materials.tests.test_materials.Lead_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesium_testcase method)": [[124, "armi.materials.tests.test_materials.Magnesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.mixture_testcase method)": [[124, "armi.materials.tests.test_materials.Mixture_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[124, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.nacl_testcase method)": [[124, "armi.materials.tests.test_materials.NaCl_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[124, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.potassium_testcase method)": [[124, "armi.materials.tests.test_materials.Potassium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sodium_testcase method)": [[124, "armi.materials.tests.test_materials.Sodium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sulfur_testcase method)": [[124, "armi.materials.tests.test_materials.Sulfur_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tzm_testcase method)": [[124, "armi.materials.tests.test_materials.TZM_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tantalum_testcase method)": [[124, "armi.materials.tests.test_materials.Tantalum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[124, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thorium_testcase method)": [[124, "armi.materials.tests.test_materials.Thorium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uranium_testcase method)": [[124, "armi.materials.tests.test_materials.Uranium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.void_testcase method)": [[124, "armi.materials.tests.test_materials.Void_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[124, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zr_testcase method)": [[124, "armi.materials.tests.test_materials.Zr_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_materials.cah2_testcase method)": [[124, "armi.materials.tests.test_materials.CaH2_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.californium_testcase method)": [[124, "armi.materials.tests.test_materials.Californium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.cesium_testcase method)": [[124, "armi.materials.tests.test_materials.Cesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.hafnium_testcase method)": [[124, "armi.materials.tests.test_materials.Hafnium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.inconel_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[124, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.lead_testcase method)": [[124, "armi.materials.tests.test_materials.Lead_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesium_testcase method)": [[124, "armi.materials.tests.test_materials.Magnesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[124, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[124, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.potassium_testcase method)": [[124, "armi.materials.tests.test_materials.Potassium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sodium_testcase method)": [[124, "armi.materials.tests.test_materials.Sodium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sulfur_testcase method)": [[124, "armi.materials.tests.test_materials.Sulfur_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.tantalum_testcase method)": [[124, "armi.materials.tests.test_materials.Tantalum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[124, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thorium_testcase method)": [[124, "armi.materials.tests.test_materials.Thorium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.void_testcase method)": [[124, "armi.materials.tests.test_materials.Void_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.zr_testcase method)": [[124, "armi.materials.tests.test_materials.Zr_TestCase.test_pseudoDensity"]], "test_removenucmassfrac() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_removeNucMassFrac"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.copper_testcase method)": [[124, "armi.materials.tests.test_materials.Copper_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel_testcase method)": [[124, "armi.materials.tests.test_materials.Inconel_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[124, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.lead_testcase method)": [[124, "armi.materials.tests.test_materials.Lead_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.mixture_testcase method)": [[124, "armi.materials.tests.test_materials.Mixture_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.sulfur_testcase method)": [[124, "armi.materials.tests.test_materials.Sulfur_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.thorium_testcase method)": [[124, "armi.materials.tests.test_materials.Thorium_TestCase.test_setDefaultMassFracs"]], "test_specificvolumeliquid() (armi.materials.tests.test_materials.sodium_testcase method)": [[124, "armi.materials.tests.test_materials.Sodium_TestCase.test_specificVolumeLiquid"]], "test_thermalconductivity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[124, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.sodium_testcase method)": [[124, "armi.materials.tests.test_materials.Sodium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[124, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thorium_testcase method)": [[124, "armi.materials.tests.test_materials.Thorium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[124, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uranium_testcase method)": [[124, "armi.materials.tests.test_materials.Uranium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.zr_testcase method)": [[124, "armi.materials.tests.test_materials.Zr_TestCase.test_thermalConductivity"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[124, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[124, "armi.materials.tests.test_materials.Lead_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.sulfur_testcase method)": [[124, "armi.materials.tests.test_materials.Sulfur_TestCase.test_volumetricExpansion"]], "mat_class (armi.materials.tests.test_sic.test_sic attribute)": [[125, "armi.materials.tests.test_sic.Test_SiC.MAT_CLASS"]], "test_sic (class in armi.materials.tests.test_sic)": [[125, "armi.materials.tests.test_sic.Test_SiC"]], "armi.materials.tests.test_sic": [[125, "module-armi.materials.tests.test_sic"]], "test_heatcapacity() (armi.materials.tests.test_sic.test_sic method)": [[125, "armi.materials.tests.test_sic.Test_SiC.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_sic.test_sic method)": [[125, "armi.materials.tests.test_sic.Test_SiC.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sic.test_sic method)": [[125, "armi.materials.tests.test_sic.Test_SiC.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_sic.test_sic method)": [[125, "armi.materials.tests.test_sic.Test_SiC.test_pseudoDensity"]], "mat_class (armi.materials.tests.test_sulfur.sulfur_testcase attribute)": [[126, "armi.materials.tests.test_sulfur.Sulfur_TestCase.MAT_CLASS"]], "sulfur_testcase (class in armi.materials.tests.test_sulfur)": [[126, "armi.materials.tests.test_sulfur.Sulfur_TestCase"]], "armi.materials.tests.test_sulfur": [[126, "module-armi.materials.tests.test_sulfur"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[126, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_propertyValidTemperature"]], "test_sulfur_density_frac() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[126, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_sulfur_density_frac"]], "mat_class (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase attribute)": [[127, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.MAT_CLASS"]], "thoriumoxide_testcase (class in armi.materials.tests.test_thoriumoxide)": [[127, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumoxide": [[127, "module-armi.materials.tests.test_thoriumOxide"]], "test_linearexpansionpercent() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[127, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[127, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[127, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_uzr.uzr_testcase attribute)": [[128, "armi.materials.tests.test_uZr.UZR_TestCase.MAT_CLASS"]], "uzr_testcase (class in armi.materials.tests.test_uzr)": [[128, "armi.materials.tests.test_uZr.UZR_TestCase"]], "armi.materials.tests.test_uzr": [[128, "module-armi.materials.tests.test_uZr"]], "test_td() (armi.materials.tests.test_uzr.uzr_testcase method)": [[128, "armi.materials.tests.test_uZr.UZR_TestCase.test_TD"]], "test_cache() (armi.materials.tests.test_uzr.uzr_testcase method)": [[128, "armi.materials.tests.test_uZr.UZR_TestCase.test_cache"]], "test_density() (armi.materials.tests.test_uzr.uzr_testcase method)": [[128, "armi.materials.tests.test_uZr.UZR_TestCase.test_density"]], "test_densitykgm3() (armi.materials.tests.test_uzr.uzr_testcase method)": [[128, "armi.materials.tests.test_uZr.UZR_TestCase.test_densityKgM3"]], "test_duplicate() (armi.materials.tests.test_uzr.uzr_testcase method)": [[128, "armi.materials.tests.test_uZr.UZR_TestCase.test_duplicate"]], "test_ispicklable() (armi.materials.tests.test_uzr.uzr_testcase method)": [[128, "armi.materials.tests.test_uZr.UZR_TestCase.test_isPicklable"]], "test_propertyvalidtemperature() (armi.materials.tests.test_uzr.uzr_testcase method)": [[128, "armi.materials.tests.test_uZr.UZR_TestCase.test_propertyValidTemperature"]], "test_pseudodensitykgm3() (armi.materials.tests.test_uzr.uzr_testcase method)": [[128, "armi.materials.tests.test_uZr.UZR_TestCase.test_pseudoDensityKgM3"]], "test_water (class in armi.materials.tests.test_water)": [[129, "armi.materials.tests.test_water.Test_Water"]], "armi.materials.tests.test_water": [[129, "module-armi.materials.tests.test_water"]], "test_massfrac() (armi.materials.tests.test_water.test_water method)": [[129, "armi.materials.tests.test_water.Test_Water.test_massFrac"]], "test_propertyvalidtemperature() (armi.materials.tests.test_water.test_water method)": [[129, "armi.materials.tests.test_water.Test_Water.test_propertyValidTemperature"]], "test_validatenames() (armi.materials.tests.test_water.test_water method)": [[129, "armi.materials.tests.test_water.Test_Water.test_validateNames"]], "test_water_at_boiling() (armi.materials.tests.test_water.test_water method)": [[129, "armi.materials.tests.test_water.Test_Water.test_water_at_boiling"]], "test_water_at_critcalpoint() (armi.materials.tests.test_water.test_water method)": [[129, "armi.materials.tests.test_water.Test_Water.test_water_at_critcalPoint"]], "test_water_at_freezing() (armi.materials.tests.test_water.test_water method)": [[129, "armi.materials.tests.test_water.Test_Water.test_water_at_freezing"]], "thu (class in armi.materials.thu)": [[130, "armi.materials.thU.ThU"]], "applyinputparams() (armi.materials.thu.thu method)": [[130, "armi.materials.thU.ThU.applyInputParams"]], "armi.materials.thu": [[130, "module-armi.materials.thU"]], "enrichednuclide (armi.materials.thu.thu attribute)": [[130, "armi.materials.thU.ThU.enrichedNuclide"]], "getenrichment() (armi.materials.thu.thu method)": [[130, "armi.materials.thU.ThU.getEnrichment"]], "linearexpansion() (armi.materials.thu.thu method)": [[130, "armi.materials.thU.ThU.linearExpansion"]], "meltingpoint() (armi.materials.thu.thu method)": [[130, "armi.materials.thU.ThU.meltingPoint"]], "propertyvalidtemperature (armi.materials.thu.thu attribute)": [[130, "armi.materials.thU.ThU.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thu.thu method)": [[130, "armi.materials.thU.ThU.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thu.thu method)": [[130, "armi.materials.thU.ThU.thermalConductivity"]], "thorium (class in armi.materials.thorium)": [[131, "armi.materials.thorium.Thorium"]], "armi.materials.thorium": [[131, "module-armi.materials.thorium"]], "linearexpansion() (armi.materials.thorium.thorium method)": [[131, "armi.materials.thorium.Thorium.linearExpansion"]], "meltingpoint() (armi.materials.thorium.thorium method)": [[131, "armi.materials.thorium.Thorium.meltingPoint"]], "propertyvalidtemperature (armi.materials.thorium.thorium attribute)": [[131, "armi.materials.thorium.Thorium.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thorium.thorium method)": [[131, "armi.materials.thorium.Thorium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thorium.thorium method)": [[131, "armi.materials.thorium.Thorium.thermalConductivity"]], "tho2 (class in armi.materials.thoriumoxide)": [[132, "armi.materials.thoriumOxide.ThO2"]], "thoriumoxide (class in armi.materials.thoriumoxide)": [[132, "armi.materials.thoriumOxide.ThoriumOxide"]], "applyinputparams() (armi.materials.thoriumoxide.thoriumoxide method)": [[132, "armi.materials.thoriumOxide.ThoriumOxide.applyInputParams"]], "armi.materials.thoriumoxide": [[132, "module-armi.materials.thoriumOxide"]], "density() (armi.materials.thoriumoxide.thoriumoxide method)": [[132, "armi.materials.thoriumOxide.ThoriumOxide.density"]], "linearexpansion() (armi.materials.thoriumoxide.thoriumoxide method)": [[132, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.thoriumoxide.thoriumoxide method)": [[132, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.thoriumoxide.thoriumoxide method)": [[132, "armi.materials.thoriumOxide.ThoriumOxide.meltingPoint"]], "propertyvalidtemperature (armi.materials.thoriumoxide.thoriumoxide attribute)": [[132, "armi.materials.thoriumOxide.ThoriumOxide.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thoriumoxide.thoriumoxide method)": [[132, "armi.materials.thoriumOxide.ThoriumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thoriumoxide.thoriumoxide method)": [[132, "armi.materials.thoriumOxide.ThoriumOxide.thermalConductivity"]], "uthzr (class in armi.materials.uthzr)": [[133, "armi.materials.uThZr.UThZr"]], "applyinputparams() (armi.materials.uthzr.uthzr method)": [[133, "armi.materials.uThZr.UThZr.applyInputParams"]], "armi.materials.uthzr": [[133, "module-armi.materials.uThZr"]], "enrichednuclide (armi.materials.uthzr.uthzr attribute)": [[133, "armi.materials.uThZr.UThZr.enrichedNuclide"]], "pseudodensity() (armi.materials.uthzr.uthzr method)": [[133, "armi.materials.uThZr.UThZr.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.uthzr.uthzr method)": [[133, "armi.materials.uThZr.UThZr.setDefaultMassFracs"]], "uzr (class in armi.materials.uzr)": [[134, "armi.materials.uZr.UZr"]], "applyinputparams() (armi.materials.uzr.uzr method)": [[134, "armi.materials.uZr.UZr.applyInputParams"]], "armi.materials.uzr": [[134, "module-armi.materials.uZr"]], "enrichednuclide (armi.materials.uzr.uzr attribute)": [[134, "armi.materials.uZr.UZr.enrichedNuclide"]], "linearexpansionpercent() (armi.materials.uzr.uzr method)": [[134, "armi.materials.uZr.UZr.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.uzr.uzr method)": [[134, "armi.materials.uZr.UZr.setDefaultMassFracs"]], "ufracdefault (armi.materials.uzr.uzr attribute)": [[134, "armi.materials.uZr.UZr.uFracDefault"]], "zrfracdefault (armi.materials.uzr.uzr attribute)": [[134, "armi.materials.uZr.UZr.zrFracDefault"]], "uranium (class in armi.materials.uranium)": [[135, "armi.materials.uranium.Uranium"]], "applyinputparams() (armi.materials.uranium.uranium method)": [[135, "armi.materials.uranium.Uranium.applyInputParams"]], "armi.materials.uranium": [[135, "module-armi.materials.uranium"]], "density() (armi.materials.uranium.uranium method)": [[135, "armi.materials.uranium.Uranium.density"]], "enrichednuclide (armi.materials.uranium.uranium attribute)": [[135, "armi.materials.uranium.Uranium.enrichedNuclide"]], "heatcapacity() (armi.materials.uranium.uranium method)": [[135, "armi.materials.uranium.Uranium.heatCapacity"]], "linearexpansion() (armi.materials.uranium.uranium method)": [[135, "armi.materials.uranium.Uranium.linearExpansion"]], "linearexpansionpercent() (armi.materials.uranium.uranium method)": [[135, "armi.materials.uranium.Uranium.linearExpansionPercent"]], "materialintro (armi.materials.uranium.uranium attribute)": [[135, "armi.materials.uranium.Uranium.materialIntro"]], "meltingpoint() (armi.materials.uranium.uranium method)": [[135, "armi.materials.uranium.Uranium.meltingPoint"]], "propertyequation (armi.materials.uranium.uranium attribute)": [[135, "armi.materials.uranium.Uranium.propertyEquation"]], "propertynotes (armi.materials.uranium.uranium attribute)": [[135, "armi.materials.uranium.Uranium.propertyNotes"]], "propertyrawdata (armi.materials.uranium.uranium attribute)": [[135, "armi.materials.uranium.Uranium.propertyRawData"]], "propertyunits (armi.materials.uranium.uranium attribute)": [[135, "armi.materials.uranium.Uranium.propertyUnits"]], "propertyvalidtemperature (armi.materials.uranium.uranium attribute)": [[135, "armi.materials.uranium.Uranium.propertyValidTemperature"]], "pseudodensity() (armi.materials.uranium.uranium method)": [[135, "armi.materials.uranium.Uranium.pseudoDensity"]], "refdens (armi.materials.uranium.uranium attribute)": [[135, "armi.materials.uranium.Uranium.refDens"]], "references (armi.materials.uranium.uranium attribute)": [[135, "armi.materials.uranium.Uranium.references"]], "setdefaultmassfracs() (armi.materials.uranium.uranium method)": [[135, "armi.materials.uranium.Uranium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uranium.uranium method)": [[135, "armi.materials.uranium.Uranium.thermalConductivity"]], "ea (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[136, "armi.materials.uraniumOxide.HeatCapacityConstants.Ea"]], "heatcapacityconstants (class in armi.materials.uraniumoxide)": [[136, "armi.materials.uraniumOxide.HeatCapacityConstants"]], "reference_temperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[136, "armi.materials.uraniumOxide.UraniumOxide.REFERENCE_TEMPERATURE"]], "uo2 (class in armi.materials.uraniumoxide)": [[136, "armi.materials.uraniumOxide.UO2"]], "uraniumoxide (class in armi.materials.uraniumoxide)": [[136, "armi.materials.uraniumOxide.UraniumOxide"]], "applyinputparams() (armi.materials.uraniumoxide.uraniumoxide method)": [[136, "armi.materials.uraniumOxide.UraniumOxide.applyInputParams"]], "armi.materials.uraniumoxide": [[136, "module-armi.materials.uraniumOxide"]], "c1 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[136, "armi.materials.uraniumOxide.HeatCapacityConstants.c1"]], "c2 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[136, "armi.materials.uraniumOxide.HeatCapacityConstants.c2"]], "c3 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[136, "armi.materials.uraniumOxide.HeatCapacityConstants.c3"]], "density() (armi.materials.uraniumoxide.uraniumoxide method)": [[136, "armi.materials.uraniumOxide.UraniumOxide.density"]], "enrichednuclide (armi.materials.uraniumoxide.uraniumoxide attribute)": [[136, "armi.materials.uraniumOxide.UraniumOxide.enrichedNuclide"]], "heatcapacity() (armi.materials.uraniumoxide.uraniumoxide method)": [[136, "armi.materials.uraniumOxide.UraniumOxide.heatCapacity"]], "heatcapacityconstants (armi.materials.uraniumoxide.uraniumoxide attribute)": [[136, "armi.materials.uraniumOxide.UraniumOxide.heatCapacityConstants"]], "linearexpansion() (armi.materials.uraniumoxide.uraniumoxide method)": [[136, "armi.materials.uraniumOxide.UraniumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.uraniumoxide.uraniumoxide method)": [[136, "armi.materials.uraniumOxide.UraniumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.uraniumoxide.uraniumoxide method)": [[136, "armi.materials.uraniumOxide.UraniumOxide.meltingPoint"]], "propertyunits (armi.materials.uraniumoxide.uraniumoxide attribute)": [[136, "armi.materials.uraniumOxide.UraniumOxide.propertyUnits"]], "propertyvalidtemperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[136, "armi.materials.uraniumOxide.UraniumOxide.propertyValidTemperature"]], "references (armi.materials.uraniumoxide.uraniumoxide attribute)": [[136, "armi.materials.uraniumOxide.UraniumOxide.references"]], "setdefaultmassfracs() (armi.materials.uraniumoxide.uraniumoxide method)": [[136, "armi.materials.uraniumOxide.UraniumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uraniumoxide.uraniumoxide method)": [[136, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivity"]], "thermalconductivitytable (armi.materials.uraniumoxide.uraniumoxide attribute)": [[136, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTable"]], "thermalconductivitytablek (armi.materials.uraniumoxide.uraniumoxide attribute)": [[136, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTableK"]], "thermalscatteringlaws (armi.materials.uraniumoxide.uraniumoxide attribute)": [[136, "armi.materials.uraniumOxide.UraniumOxide.thermalScatteringLaws"]], "theta (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[136, "armi.materials.uraniumOxide.HeatCapacityConstants.theta"]], "void (class in armi.materials.void)": [[137, "armi.materials.void.Void"]], "armi.materials.void": [[137, "module-armi.materials.void"]], "density() (armi.materials.void.void method)": [[137, "armi.materials.void.Void.density"]], "pseudodensity() (armi.materials.void.void method)": [[137, "armi.materials.void.Void.pseudoDensity"]], "alpha_0 (armi.materials.water.water attribute)": [[138, "armi.materials.water.Water.ALPHA_0"]], "density_critical_gpercubiccentimeter (armi.materials.water.water attribute)": [[138, "armi.materials.water.Water.DENSITY_CRITICAL_GPERCUBICCENTIMETER"]], "density_critical_kgpercubicmeter (armi.materials.water.water attribute)": [[138, "armi.materials.water.Water.DENSITY_CRITICAL_KGPERCUBICMETER"]], "phi_0 (armi.materials.water.water attribute)": [[138, "armi.materials.water.Water.PHI_0"]], "saturatedsteam (class in armi.materials.water)": [[138, "armi.materials.water.SaturatedSteam"]], "saturatedwater (class in armi.materials.water)": [[138, "armi.materials.water.SaturatedWater"]], "temperature_critical_k (armi.materials.water.water attribute)": [[138, "armi.materials.water.Water.TEMPERATURE_CRITICAL_K"]], "vapor_pressure_critical_mpa (armi.materials.water.water attribute)": [[138, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_MPA"]], "vapor_pressure_critical_pa (armi.materials.water.water attribute)": [[138, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_PA"]], "water (class in armi.materials.water)": [[138, "armi.materials.water.Water"]], "armi.materials.water": [[138, "module-armi.materials.water"]], "auxiliaryquantityspecificenthalpy() (armi.materials.water.water method)": [[138, "armi.materials.water.Water.auxiliaryQuantitySpecificEnthalpy"]], "auxiliaryquantityspecificentropy() (armi.materials.water.water method)": [[138, "armi.materials.water.Water.auxiliaryQuantitySpecificEntropy"]], "d (armi.materials.water.water attribute)": [[138, "armi.materials.water.Water.d"]], "enthalpy() (armi.materials.water.water method)": [[138, "armi.materials.water.Water.enthalpy"]], "entropy() (armi.materials.water.water method)": [[138, "armi.materials.water.Water.entropy"]], "pseudodensity() (armi.materials.water.saturatedsteam method)": [[138, "armi.materials.water.SaturatedSteam.pseudoDensity"]], "pseudodensity() (armi.materials.water.saturatedwater method)": [[138, "armi.materials.water.SaturatedWater.pseudoDensity"]], "pseudodensity() (armi.materials.water.water method)": [[138, "armi.materials.water.Water.pseudoDensity"]], "references (armi.materials.water.water attribute)": [[138, "armi.materials.water.Water.references"]], "setdefaultmassfracs() (armi.materials.water.water method)": [[138, "armi.materials.water.Water.setDefaultMassFracs"]], "tau() (armi.materials.water.water method)": [[138, "armi.materials.water.Water.tau"]], "thermalscatteringlaws (armi.materials.water.water attribute)": [[138, "armi.materials.water.Water.thermalScatteringLaws"]], "theta() (armi.materials.water.water method)": [[138, "armi.materials.water.Water.theta"]], "vaporpressure() (armi.materials.water.water method)": [[138, "armi.materials.water.Water.vaporPressure"]], "vaporpressureprime() (armi.materials.water.water method)": [[138, "armi.materials.water.Water.vaporPressurePrime"]], "y2o3 (class in armi.materials.yttriumoxide)": [[139, "armi.materials.yttriumOxide.Y2O3"]], "armi.materials.yttriumoxide": [[139, "module-armi.materials.yttriumOxide"]], "density() (armi.materials.yttriumoxide.y2o3 method)": [[139, "armi.materials.yttriumOxide.Y2O3.density"]], "linearexpansionpercent() (armi.materials.yttriumoxide.y2o3 method)": [[139, "armi.materials.yttriumOxide.Y2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.yttriumoxide.y2o3 attribute)": [[139, "armi.materials.yttriumOxide.Y2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.yttriumoxide.y2o3 method)": [[139, "armi.materials.yttriumOxide.Y2O3.setDefaultMassFracs"]], "zno (class in armi.materials.zincoxide)": [[140, "armi.materials.zincOxide.ZnO"]], "armi.materials.zincoxide": [[140, "module-armi.materials.zincOxide"]], "density() (armi.materials.zincoxide.zno method)": [[140, "armi.materials.zincOxide.ZnO.density"]], "linearexpansionpercent() (armi.materials.zincoxide.zno method)": [[140, "armi.materials.zincOxide.ZnO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.zincoxide.zno attribute)": [[140, "armi.materials.zincOxide.ZnO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.zincoxide.zno method)": [[140, "armi.materials.zincOxide.ZnO.setDefaultMassFracs"]], "zr (class in armi.materials.zr)": [[141, "armi.materials.zr.Zr"]], "armi.materials.zr": [[141, "module-armi.materials.zr"]], "density() (armi.materials.zr.zr method)": [[141, "armi.materials.zr.Zr.density"]], "linearexpansion() (armi.materials.zr.zr method)": [[141, "armi.materials.zr.Zr.linearExpansion"]], "linearexpansionpercent() (armi.materials.zr.zr method)": [[141, "armi.materials.zr.Zr.linearExpansionPercent"]], "linearexpansiontable (armi.materials.zr.zr attribute)": [[141, "armi.materials.zr.Zr.linearExpansionTable"]], "linearexpansiontablek (armi.materials.zr.zr attribute)": [[141, "armi.materials.zr.Zr.linearExpansionTableK"]], "propertyvalidtemperature (armi.materials.zr.zr attribute)": [[141, "armi.materials.zr.Zr.propertyValidTemperature"]], "reftempk (armi.materials.zr.zr attribute)": [[141, "armi.materials.zr.Zr.refTempK"]], "references (armi.materials.zr.zr attribute)": [[141, "armi.materials.zr.Zr.references"]], "setdefaultmassfracs() (armi.materials.zr.zr method)": [[141, "armi.materials.zr.Zr.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.zr.zr method)": [[141, "armi.materials.zr.Zr.thermalConductivity"]], "armi.meta": [[142, "module-armi.meta"]], "armi.migration": [[143, "module-armi.migration"]], "blueprintsmigration (class in armi.migration.base)": [[144, "armi.migration.base.BlueprintsMigration"]], "databasemigration (class in armi.migration.base)": [[144, "armi.migration.base.DatabaseMigration"]], "migration (class in armi.migration.base)": [[144, "armi.migration.base.Migration"]], "settingsmigration (class in armi.migration.base)": [[144, "armi.migration.base.SettingsMigration"]], "apply() (armi.migration.base.migration method)": [[144, "armi.migration.base.Migration.apply"]], "armi.migration.base": [[144, "module-armi.migration.base"]], "fromversion (armi.migration.base.migration attribute)": [[144, "armi.migration.base.Migration.fromVersion"]], "toversion (armi.migration.base.migration attribute)": [[144, "armi.migration.base.Migration.toVersion"]], "removecentersfromblueprints (class in armi.migration.m0_1_3)": [[145, "armi.migration.m0_1_3.RemoveCentersFromBlueprints"]], "updateelementalnuclides (class in armi.migration.m0_1_3)": [[145, "armi.migration.m0_1_3.UpdateElementalNuclides"]], "armi.migration.m0_1_3": [[145, "module-armi.migration.m0_1_3"]], "deletions (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[145, "armi.migration.m0_1_3.UpdateElementalNuclides.deletions"]], "fromversion (armi.migration.m0_1_3.removecentersfromblueprints attribute)": [[145, "armi.migration.m0_1_3.RemoveCentersFromBlueprints.fromVersion"]], "fromversion (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[145, "armi.migration.m0_1_3.UpdateElementalNuclides.fromVersion"]], "swaps (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[145, "armi.migration.m0_1_3.UpdateElementalNuclides.swaps"]], "toversion (armi.migration.m0_1_3.removecentersfromblueprints attribute)": [[145, "armi.migration.m0_1_3.RemoveCentersFromBlueprints.toVersion"]], "toversion (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[145, "armi.migration.m0_1_3.UpdateElementalNuclides.toVersion"]], "convertalphanumlocationsettingstonum (class in armi.migration.m0_1_6)": [[146, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum"]], "armi.migration.m0_1_6": [[146, "module-armi.migration.m0_1_6"]], "fromversion (armi.migration.m0_1_6.convertalphanumlocationsettingstonum attribute)": [[146, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum.fromVersion"]], "getindicesfromdif3dstylelocatorlabel() (in module armi.migration.m0_1_6)": [[146, "armi.migration.m0_1_6.getIndicesFromDIF3DStyleLocatorLabel"]], "toversion (armi.migration.m0_1_6.convertalphanumlocationsettingstonum attribute)": [[146, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum.toVersion"]], "armi.migration.tests": [[147, "module-armi.migration.tests"]], "testmigration (class in armi.migration.tests.test_m0_1_6)": [[148, "armi.migration.tests.test_m0_1_6.TestMigration"]], "armi.migration.tests.test_m0_1_6": [[148, "module-armi.migration.tests.test_m0_1_6"]], "test_locationlabelmigration() (armi.migration.tests.test_m0_1_6.testmigration method)": [[148, "armi.migration.tests.test_m0_1_6.TestMigration.test_locationLabelMigration"]], "testmigrationbases (class in armi.migration.tests.test_migration_base)": [[149, "armi.migration.tests.test_migration_base.TestMigrationBases"]], "testsettingsmigration (class in armi.migration.tests.test_migration_base)": [[149, "armi.migration.tests.test_migration_base.TestSettingsMigration"]], "armi.migration.tests.test_migration_base": [[149, "module-armi.migration.tests.test_migration_base"]], "test_basic_validation() (armi.migration.tests.test_migration_base.testmigrationbases method)": [[149, "armi.migration.tests.test_migration_base.TestMigrationBases.test_basic_validation"]], "test_loadstreamfrompath() (armi.migration.tests.test_migration_base.testsettingsmigration method)": [[149, "armi.migration.tests.test_migration_base.TestSettingsMigration.test_loadStreamFromPath"]], "distributestateaction (class in armi.mpiactions)": [[150, "armi.mpiActions.DistributeStateAction"]], "distributionaction (class in armi.mpiactions)": [[150, "armi.mpiActions.DistributionAction"]], "mpiaction (class in armi.mpiactions)": [[150, "armi.mpiActions.MpiAction"]], "mpiactionerror": [[150, "armi.mpiActions.MpiActionError"]], "armi.mpiactions": [[150, "module-armi.mpiActions"]], "broadcast() (armi.mpiactions.mpiaction method)": [[150, "armi.mpiActions.MpiAction.broadcast"]], "gather() (armi.mpiactions.mpiaction method)": [[150, "armi.mpiActions.MpiAction.gather"]], "invoke() (armi.mpiactions.mpiaction method)": [[150, "armi.mpiActions.MpiAction.invoke"]], "invokeasmaster() (armi.mpiactions.mpiaction class method)": [[150, "armi.mpiActions.MpiAction.invokeAsMaster"]], "invokehook() (armi.mpiactions.distributestateaction method)": [[150, "armi.mpiActions.DistributeStateAction.invokeHook"]], "invokehook() (armi.mpiactions.distributionaction method)": [[150, "armi.mpiActions.DistributionAction.invokeHook"]], "invokehook() (armi.mpiactions.mpiaction method)": [[150, "armi.mpiActions.MpiAction.invokeHook"]], "mpiflatten() (armi.mpiactions.mpiaction static method)": [[150, "armi.mpiActions.MpiAction.mpiFlatten"]], "mpiiter() (armi.mpiactions.mpiaction static method)": [[150, "armi.mpiActions.MpiAction.mpiIter"]], "parallel (armi.mpiactions.mpiaction property)": [[150, "armi.mpiActions.MpiAction.parallel"]], "runactions() (in module armi.mpiactions)": [[150, "armi.mpiActions.runActions"]], "runactionsinserial() (in module armi.mpiactions)": [[150, "armi.mpiActions.runActionsInSerial"]], "armi.nucdirectory": [[151, "module-armi.nucDirectory"]], "actinide (armi.nucdirectory.elements.chemicalgroup attribute)": [[152, "armi.nucDirectory.elements.ChemicalGroup.ACTINIDE"]], "alkaline_earth_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[152, "armi.nucDirectory.elements.ChemicalGroup.ALKALINE_EARTH_METAL"]], "alkali_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[152, "armi.nucDirectory.elements.ChemicalGroup.ALKALI_METAL"]], "chemicalgroup (class in armi.nucdirectory.elements)": [[152, "armi.nucDirectory.elements.ChemicalGroup"]], "chemicalphase (class in armi.nucdirectory.elements)": [[152, "armi.nucDirectory.elements.ChemicalPhase"]], "element (class in armi.nucdirectory.elements)": [[152, "armi.nucDirectory.elements.Element"]], "gas (armi.nucdirectory.elements.chemicalphase attribute)": [[152, "armi.nucDirectory.elements.ChemicalPhase.GAS"]], "halogen (armi.nucdirectory.elements.chemicalgroup attribute)": [[152, "armi.nucDirectory.elements.ChemicalGroup.HALOGEN"]], "lanthanide (armi.nucdirectory.elements.chemicalgroup attribute)": [[152, "armi.nucDirectory.elements.ChemicalGroup.LANTHANIDE"]], "liquid (armi.nucdirectory.elements.chemicalphase attribute)": [[152, "armi.nucDirectory.elements.ChemicalPhase.LIQUID"]], "metalloid (armi.nucdirectory.elements.chemicalgroup attribute)": [[152, "armi.nucDirectory.elements.ChemicalGroup.METALLOID"]], "noble_gas (armi.nucdirectory.elements.chemicalgroup attribute)": [[152, "armi.nucDirectory.elements.ChemicalGroup.NOBLE_GAS"]], "nonmetal (armi.nucdirectory.elements.chemicalgroup attribute)": [[152, "armi.nucDirectory.elements.ChemicalGroup.NONMETAL"]], "post_transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[152, "armi.nucDirectory.elements.ChemicalGroup.POST_TRANSITION_METAL"]], "solid (armi.nucdirectory.elements.chemicalphase attribute)": [[152, "armi.nucDirectory.elements.ChemicalPhase.SOLID"]], "transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[152, "armi.nucDirectory.elements.ChemicalGroup.TRANSITION_METAL"]], "unknown (armi.nucdirectory.elements.chemicalgroup attribute)": [[152, "armi.nucDirectory.elements.ChemicalGroup.UNKNOWN"]], "unknown (armi.nucdirectory.elements.chemicalphase attribute)": [[152, "armi.nucDirectory.elements.ChemicalPhase.UNKNOWN"]], "addglobalelement() (in module armi.nucdirectory.elements)": [[152, "armi.nucDirectory.elements.addGlobalElement"]], "append() (armi.nucdirectory.elements.element method)": [[152, "armi.nucDirectory.elements.Element.append"]], "armi.nucdirectory.elements": [[152, "module-armi.nucDirectory.elements"]], "destroyglobalelements() (in module armi.nucdirectory.elements)": [[152, "armi.nucDirectory.elements.destroyGlobalElements"]], "factory() (in module armi.nucdirectory.elements)": [[152, "armi.nucDirectory.elements.factory"]], "getelementz() (in module armi.nucdirectory.elements)": [[152, "armi.nucDirectory.elements.getElementZ"]], "getelementsbychemicalgroup() (in module armi.nucdirectory.elements)": [[152, "armi.nucDirectory.elements.getElementsByChemicalGroup"]], "getelementsbychemicalphase() (in module armi.nucdirectory.elements)": [[152, "armi.nucDirectory.elements.getElementsByChemicalPhase"]], "getname() (in module armi.nucdirectory.elements)": [[152, "armi.nucDirectory.elements.getName"]], "getnaturalisotopics() (armi.nucdirectory.elements.element method)": [[152, "armi.nucDirectory.elements.Element.getNaturalIsotopics"]], "getsymbol() (in module armi.nucdirectory.elements)": [[152, "armi.nucDirectory.elements.getSymbol"]], "isheavymetal() (armi.nucdirectory.elements.element method)": [[152, "armi.nucDirectory.elements.Element.isHeavyMetal"]], "isnaturallyoccurring() (armi.nucdirectory.elements.element method)": [[152, "armi.nucDirectory.elements.Element.isNaturallyOccurring"]], "armi.nucdirectory.nucdir": [[153, "module-armi.nucDirectory.nucDir"]], "getatomicweight() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.getAtomicWeight"]], "getelementname() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.getElementName"]], "getelementsymbol() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.getElementSymbol"]], "getmc2label() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.getMc2Label"]], "getnaturalisotopics() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.getNaturalIsotopics"]], "getnaturalmassisotopics() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.getNaturalMassIsotopics"]], "getnuclide() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.getNuclide"]], "getnuclidefromname() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.getNuclideFromName"]], "getnuclidenames() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.getNuclideNames"]], "getnuclides() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.getNuclides"]], "getthresholddisplacementenergy() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.getThresholdDisplacementEnergy"]], "isfissile() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.isFissile"]], "isheavymetal() (in module armi.nucdirectory.nucdir)": [[153, "armi.nucDirectory.nucDir.isHeavyMetal"]], "decay (armi.nucdirectory.nuclidebases.inuclide attribute)": [[154, "armi.nucDirectory.nuclideBases.INuclide.DECAY"]], "dummynuclidebase (class in armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.DummyNuclideBase"]], "imcnpnuclide (class in armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.IMcnpNuclide"]], "inuclide (class in armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.INuclide"]], "lumpnuclidebase (class in armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.LumpNuclideBase"]], "naturalnuclidebase (class in armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.NaturalNuclideBase"]], "nuclidebase (class in armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.NuclideBase"]], "nuclideinterface (class in armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.NuclideInterface"]], "nuclidewrapper (class in armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.NuclideWrapper"]], "spontaneous_fission (armi.nucdirectory.nuclidebases.inuclide attribute)": [[154, "armi.nucDirectory.nuclideBases.INuclide.SPONTANEOUS_FISSION"]], "transmutation (armi.nucdirectory.nuclidebases.inuclide attribute)": [[154, "armi.nucDirectory.nuclideBases.INuclide.TRANSMUTATION"]], "addglobalnuclide() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.addGlobalNuclide"]], "addnuclidebases() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.addNuclideBases"]], "armi.nucdirectory.nuclidebases": [[154, "module-armi.nucDirectory.nuclideBases"]], "changelabel() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.changeLabel"]], "destroyglobalnuclides() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.destroyGlobalNuclides"]], "factory() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.factory"]], "fissile (armi.nucdirectory.nuclidebases.inuclide attribute)": [[154, "armi.nucDirectory.nuclideBases.INuclide.fissile"]], "fromname() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.fromName"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[154, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NuclideBase.getAAAZZZSId"]], "getdatabasename() (armi.nucdirectory.nuclidebases.inuclide method)": [[154, "armi.nucDirectory.nuclideBases.INuclide.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[154, "armi.nucDirectory.nuclideBases.NuclideInterface.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[154, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDatabaseName"]], "getdecay() (armi.nucdirectory.nuclidebases.inuclide method)": [[154, "armi.nucDirectory.nuclideBases.INuclide.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[154, "armi.nucDirectory.nuclideBases.NuclideInterface.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[154, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDecay"]], "getdepletablenuclides() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.getDepletableNuclides"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getEndfMatNum"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NuclideBase.getEndfMatNum"]], "getisotopics() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.getIsotopics"]], "getmcc2id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[154, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[154, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc2Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[154, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[154, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc3Id"]], "getmcnpid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[154, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NuclideBase.getMcnpId"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.inuclide method)": [[154, "armi.nucDirectory.nuclideBases.INuclide.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[154, "armi.nucDirectory.nuclideBases.NuclideInterface.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[154, "armi.nucDirectory.nuclideBases.NuclideWrapper.getNaturalIsotopics"]], "getserpentid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.NuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[154, "armi.nucDirectory.nuclideBases.NuclideInterface.getSerpentId"]], "imposeburnchain() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.imposeBurnChain"]], "initreachableactivenuclidesthroughburnchain() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.initReachableActiveNuclidesThroughBurnChain"]], "isfissile() (armi.nucdirectory.nuclidebases.inuclide method)": [[154, "armi.nucDirectory.nuclideBases.INuclide.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[154, "armi.nucDirectory.nuclideBases.NuclideInterface.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[154, "armi.nucDirectory.nuclideBases.NuclideWrapper.isFissile"]], "isheavymetal() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.DummyNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.inuclide method)": [[154, "armi.nucDirectory.nuclideBases.INuclide.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[154, "armi.nucDirectory.nuclideBases.LumpNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[154, "armi.nucDirectory.nuclideBases.NuclideInterface.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[154, "armi.nucDirectory.nuclideBases.NuclideWrapper.isHeavyMetal"]], "ismonoisotopicelement() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.isMonoIsotopicElement"]], "isotopes() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.isotopes"]], "name (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[154, "armi.nucDirectory.nuclideBases.NuclideWrapper.name"]], "readmccnuclidedata() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.readMCCNuclideData"]], "single() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.single"]], "updatenuclidebasesforspecialcases() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.updateNuclideBasesForSpecialCases"]], "weight (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[154, "armi.nucDirectory.nuclideBases.NuclideWrapper.weight"]], "where() (in module armi.nucdirectory.nuclidebases)": [[154, "armi.nucDirectory.nuclideBases.where"]], "armi.nucdirectory.tests": [[155, "module-armi.nucDirectory.tests"]], "testelement (class in armi.nucdirectory.tests.test_elements)": [[156, "armi.nucDirectory.tests.test_elements.TestElement"]], "armi.nucdirectory.tests.test_elements": [[156, "module-armi.nucDirectory.tests.test_elements"]], "test_abundancesaddtoone() (armi.nucdirectory.tests.test_elements.testelement method)": [[156, "armi.nucDirectory.tests.test_elements.TestElement.test_abundancesAddToOne"]], "test_element_addexistingelementfails() (armi.nucdirectory.tests.test_elements.testelement method)": [[156, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addExistingElementFails"]], "test_element_addedelementappearsinelementlist() (armi.nucdirectory.tests.test_elements.testelement method)": [[156, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addedElementAppearsInElementList"]], "test_element_elementbynamereturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[156, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByNameReturnsElement"]], "test_element_elementbysymbolreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[156, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementBySymbolReturnsElement"]], "test_element_elementbyzreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[156, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByZReturnsElement"]], "test_element_getnatrualisotpicsonlyretrievesabundacegt0() (armi.nucdirectory.tests.test_elements.testelement method)": [[156, "armi.nucDirectory.tests.test_elements.TestElement.test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"]], "test_element_isnaturallyoccurring() (armi.nucdirectory.tests.test_elements.testelement method)": [[156, "armi.nucDirectory.tests.test_elements.TestElement.test_element_isNaturallyOccurring"]], "test_elements_elementbulkproperties() (armi.nucdirectory.tests.test_elements.testelement method)": [[156, "armi.nucDirectory.tests.test_elements.TestElement.test_elements_elementBulkProperties"]], "test_isheavymetal() (armi.nucdirectory.tests.test_elements.testelement method)": [[156, "armi.nucDirectory.tests.test_elements.TestElement.test_isHeavyMetal"]], "testnucdirectory (class in armi.nucdirectory.tests.test_nucdirectory)": [[157, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory"]], "armi.nucdirectory.tests.test_nucdirectory": [[157, "module-armi.nucDirectory.tests.test_nucDirectory"]], "test_getdisplacementenergy() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[157, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_getDisplacementEnergy"]], "test_nucdir_getnameforolddashednames() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[157, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNameForOldDashedNames"]], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclide() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[157, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"]], "test_nucdir_getnuclidesfromforbadname() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[157, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclidesFromForBadName"]], "testaaazzzsid (class in armi.nucdirectory.tests.test_nuclidebases)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId"]], "testnuclide (class in armi.nucdirectory.tests.test_nuclidebases)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide"]], "armi.nucdirectory.tests.test_nuclidebases": [[158, "module-armi.nucDirectory.tests.test_nuclideBases"]], "test_aaazzzsnamegenerator() (armi.nucdirectory.tests.test_nuclidebases.testaaazzzsid method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId.test_AAAZZZSNameGenerator"]], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"]], "test_naturalnuclidebase_getnatrualisotpics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclideBase_getNatrualIsotpics"]], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotopes() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"]], "test_nonmc2nuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NonMc2Nuclide"]], "test_curiedefinitionwithra226() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_curieDefinitionWithRa226"]], "test_getdecay() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getDecay"]], "test_getendfmatnum() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getEndfMatNum"]], "test_kryptondecayconstants() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_kryptonDecayConstants"]], "test_loadmcc2data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc2Data"]], "test_loadmcc3data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc3Data"]], "test_nucbase_allabundancesaddtoone() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBase_AllAbundancesAddToOne"]], "test_nucbases_alldatabasenamesareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllDatabaseNamesAreUnique"]], "test_nucbases_alllabelsareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllLabelsAreUnique"]], "test_nucbases_am242m() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Am242m"]], "test_nucbases_mc2elementals() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Mc2Elementals"]], "test_nucbases_negativezraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_NegativeZRaisesException"]], "test_nucbases_z295raisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Z295RaisesException"]], "test_nucbases_databasenamesstartwith_n() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_databaseNamesStartWith_n"]], "test_nucbases_fromnamebadnameraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_fromNameBadNameRaisesException"]], "test_nucbases_imposeburnchaindecaybulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainDecayBulkStatistics"]], "test_nucbases_imposeburnchaintransmutationbulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainTransmutationBulkStatistics"]], "test_nucbases_imposeburn_nusf() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurn_nuSF"]], "test_nucbases_isheavymetal() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_isHeavyMetal"]], "test_nucbases_labelandnamecollsionsareforsamenuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_labelAndNameCollsionsAreForSameNuclide"]], "test_nucbases_singlefailswithmultiplematches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithMultipleMatches"]], "test_nucbases_singlefailswithnomatches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithNoMatches"]], "test_nucbases_singleisprettyspecific() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[158, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleIsPrettySpecific"]], "testthermalscattering (class in armi.nucdirectory.tests.test_thermalscattering)": [[159, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering"]], "armi.nucdirectory.tests.test_thermalscattering": [[159, "module-armi.nucDirectory.tests.test_thermalScattering"]], "buildblockwithtsl() (in module armi.nucdirectory.tests.test_thermalscattering)": [[159, "armi.nucDirectory.tests.test_thermalScattering.buildBlockWithTSL"]], "getnuclidethermalscatteringdata() (in module armi.nucdirectory.tests.test_thermalscattering)": [[159, "armi.nucDirectory.tests.test_thermalScattering.getNuclideThermalScatteringData"]], "test_acecompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[159, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACECompound"]], "test_aceelementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[159, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEElementInCompound"]], "test_aceisotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[159, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEIsotope"]], "test_endf8compound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[159, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Compound"]], "test_endf8elementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[159, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8ElementInCompound"]], "test_endf8isotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[159, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Isotope"]], "test_failonmultiple() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[159, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_failOnMultiple"]], "test_graphiteonreactor() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[159, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_graphiteOnReactor"]], "decaymodetests (class in armi.nucdirectory.tests.test_transmutations)": [[160, "armi.nucDirectory.tests.test_transmutations.DecayModeTests"]], "transmutationtests (class in armi.nucdirectory.tests.test_transmutations)": [[160, "armi.nucDirectory.tests.test_transmutations.TransmutationTests"]], "armi.nucdirectory.tests.test_transmutations": [[160, "module-armi.nucDirectory.tests.test_transmutations"]], "randomstring() (in module armi.nucdirectory.tests.test_transmutations)": [[160, "armi.nucDirectory.tests.test_transmutations.randomString"]], "test_decaymode_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[160, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_invalidReactionTypes"]], "test_decaymode_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[160, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_validReactionTypes"]], "test_transmutation_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[160, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_invalidReactionTypes"]], "test_transmutation_productparticle() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[160, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_productParticle"]], "test_transmutation_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[160, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_validReactionTypes"]], "thermalscattering (class in armi.nucdirectory.thermalscattering)": [[161, "armi.nucDirectory.thermalScattering.ThermalScattering"]], "armi.nucdirectory.thermalscattering": [[161, "module-armi.nucDirectory.thermalScattering"]], "factory() (in module armi.nucdirectory.thermalscattering)": [[161, "armi.nucDirectory.thermalScattering.factory"]], "getsubjectnuclidebases() (armi.nucdirectory.thermalscattering.thermalscattering method)": [[161, "armi.nucDirectory.thermalScattering.ThermalScattering.getSubjectNuclideBases"]], "decaymode (class in armi.nucdirectory.transmutations)": [[162, "armi.nucDirectory.transmutations.DecayMode"]], "transmutable (class in armi.nucdirectory.transmutations)": [[162, "armi.nucDirectory.transmutations.Transmutable"]], "transmutation (class in armi.nucdirectory.transmutations)": [[162, "armi.nucDirectory.transmutations.Transmutation"]], "armi.nucdirectory.transmutations": [[162, "module-armi.nucDirectory.transmutations"]], "getpreferredproduct() (armi.nucdirectory.transmutations.transmutable method)": [[162, "armi.nucDirectory.transmutations.Transmutable.getPreferredProduct"]], "armi.nucleardataio": [[163, "module-armi.nuclearDataIO"]], "getexpectedcompxsfilename() (in module armi.nucleardataio)": [[163, "armi.nuclearDataIO.getExpectedCOMPXSFileName"]], "getexpectedgamisofilename() (in module armi.nucleardataio)": [[163, "armi.nuclearDataIO.getExpectedGAMISOFileName"]], "getexpectedisotxsfilename() (in module armi.nucleardataio)": [[163, "armi.nuclearDataIO.getExpectedISOTXSFileName"]], "getexpectedpmatrxfilename() (in module armi.nucleardataio)": [[163, "armi.nuclearDataIO.getExpectedPMATRXFileName"]], "armi.nucleardataio.cccc": [[164, "module-armi.nuclearDataIO.cccc"]], "asciirecordreader (class in armi.nucleardataio.cccc.cccc)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader"]], "asciirecordwriter (class in armi.nucleardataio.cccc.cccc)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter"]], "binaryrecordreader (class in armi.nucleardataio.cccc.cccc)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader"]], "binaryrecordwriter (class in armi.nucleardataio.cccc.cccc)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter"]], "datacontainer (class in armi.nucleardataio.cccc.cccc)": [[165, "armi.nuclearDataIO.cccc.cccc.DataContainer"]], "implicit_int (in module armi.nucleardataio.cccc.cccc)": [[165, "armi.nuclearDataIO.cccc.cccc.IMPLICIT_INT"]], "iorecord (class in armi.nucleardataio.cccc.cccc)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord"]], "stream (class in armi.nucleardataio.cccc.cccc)": [[165, "armi.nuclearDataIO.cccc.cccc.Stream"]], "streamwithdatacontainer (class in armi.nucleardataio.cccc.cccc)": [[165, "armi.nuclearDataIO.cccc.cccc.StreamWithDataContainer"]], "armi.nucleardataio.cccc.cccc": [[165, "module-armi.nuclearDataIO.cccc.cccc"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.iorecord method)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.close"]], "count (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.count"]], "createrecord() (armi.nucleardataio.cccc.cccc.stream method)": [[165, "armi.nuclearDataIO.cccc.cccc.Stream.createRecord"]], "getblockbandwidth() (in module armi.nucleardataio.cccc.cccc)": [[165, "armi.nuclearDataIO.cccc.cccc.getBlockBandwidth"]], "maxsize (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.maxsize"]], "open() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.iorecord method)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.open"]], "readascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[165, "armi.nuclearDataIO.cccc.cccc.Stream.readAscii"]], "readbinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[165, "armi.nuclearDataIO.cccc.cccc.Stream.readBinary"]], "readwrite() (armi.nucleardataio.cccc.cccc.stream method)": [[165, "armi.nuclearDataIO.cccc.cccc.Stream.readWrite"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.iorecord method)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.rwBool"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.iorecord method)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDouble"]], "rwdoublematrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDoubleMatrix"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.iorecord method)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.rwFloat"]], "rwimplicitlytypedmap() (armi.nucleardataio.cccc.cccc.iorecord method)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.rwImplicitlyTypedMap"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.iorecord method)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.rwInt"]], "rwintmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.rwIntMatrix"]], "rwlist() (armi.nucleardataio.cccc.cccc.iorecord method)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.rwList"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwLong"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwLong"]], "rwmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.rwMatrix"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[165, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.iorecord method)": [[165, "armi.nuclearDataIO.cccc.cccc.IORecord.rwString"]], "writeascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[165, "armi.nuclearDataIO.cccc.cccc.Stream.writeAscii"]], "writebinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[165, "armi.nuclearDataIO.cccc.cccc.Stream.writeBinary"]], "compxsregion (class in armi.nucleardataio.cccc.compxs)": [[166, "armi.nuclearDataIO.cccc.compxs.CompxsRegion"]], "allocatexs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[166, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.allocateXS"]], "armi.nucleardataio.cccc.compxs": [[166, "module-armi.nuclearDataIO.cccc.compxs"]], "compare() (in module armi.nucleardataio.cccc.compxs)": [[166, "armi.nuclearDataIO.cccc.compxs.compare"]], "getxs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[166, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.getXS"]], "initmetadata() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[166, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.initMetadata"]], "isfissile (armi.nucleardataio.cccc.compxs.compxsregion property)": [[166, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.isFissile"]], "makescatteringmatrices() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[166, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.makeScatteringMatrices"]], "merge() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[166, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.merge"]], "dif3ddata (class in armi.nucleardataio.cccc.dif3d)": [[167, "armi.nuclearDataIO.cccc.dif3d.Dif3dData"]], "dif3dstream (class in armi.nucleardataio.cccc.dif3d)": [[167, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream"]], "armi.nucleardataio.cccc.dif3d": [[167, "module-armi.nuclearDataIO.cccc.dif3d"]], "readwrite() (armi.nucleardataio.cccc.dif3d.dif3dstream method)": [[167, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream.readWrite"]], "delayedneutrondata (class in armi.nucleardataio.cccc.dlayxs)": [[168, "armi.nuclearDataIO.cccc.dlayxs.DelayedNeutronData"]], "dlayxs (class in armi.nucleardataio.cccc.dlayxs)": [[168, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs"]], "dlayxsio (class in armi.nucleardataio.cccc.dlayxs)": [[168, "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO"]], "g (armi.nucleardataio.cccc.dlayxs.dlayxs property)": [[168, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.G"]], "armi.nucleardataio.cccc.dlayxs": [[168, "module-armi.nuclearDataIO.cccc.dlayxs"]], "compare() (in module armi.nucleardataio.cccc.dlayxs)": [[168, "armi.nuclearDataIO.cccc.dlayxs.compare"]], "generateaveragedelayedneutronconstants() (armi.nucleardataio.cccc.dlayxs.dlayxs method)": [[168, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.generateAverageDelayedNeutronConstants"]], "readascii() (in module armi.nucleardataio.cccc.dlayxs)": [[168, "armi.nuclearDataIO.cccc.dlayxs.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.dlayxs)": [[168, "armi.nuclearDataIO.cccc.dlayxs.readBinary"]], "readwrite() (armi.nucleardataio.cccc.dlayxs.dlayxsio method)": [[168, "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO.readWrite"]], "writeascii() (in module armi.nucleardataio.cccc.dlayxs)": [[168, "armi.nuclearDataIO.cccc.dlayxs.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.dlayxs)": [[168, "armi.nuclearDataIO.cccc.dlayxs.writeBinary"]], "fixsrc (class in armi.nucleardataio.cccc.fixsrc)": [[169, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC"]], "armi.nucleardataio.cccc.fixsrc": [[169, "module-armi.nuclearDataIO.cccc.fixsrc"]], "readbinary() (in module armi.nucleardataio.cccc.fixsrc)": [[169, "armi.nuclearDataIO.cccc.fixsrc.readBinary"]], "readwrite() (armi.nucleardataio.cccc.fixsrc.fixsrc method)": [[169, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC.readWrite"]], "writebinary() (in module armi.nucleardataio.cccc.fixsrc)": [[169, "armi.nuclearDataIO.cccc.fixsrc.writeBinary"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.gamiso)": [[170, "armi.nuclearDataIO.cccc.gamiso.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.gamiso": [[170, "module-armi.nuclearDataIO.cccc.gamiso"]], "compare() (in module armi.nucleardataio.cccc.gamiso)": [[170, "armi.nuclearDataIO.cccc.gamiso.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.gamiso)": [[170, "armi.nuclearDataIO.cccc.gamiso.compareNuclideXS"]], "geodstdata (class in armi.nucleardataio.cccc.geodst)": [[171, "armi.nuclearDataIO.cccc.geodst.GeodstData"]], "geodststream (class in armi.nucleardataio.cccc.geodst)": [[171, "armi.nuclearDataIO.cccc.geodst.GeodstStream"]], "armi.nucleardataio.cccc.geodst": [[171, "module-armi.nuclearDataIO.cccc.geodst"]], "readwrite() (armi.nucleardataio.cccc.geodst.geodststream method)": [[171, "armi.nuclearDataIO.cccc.geodst.GeodstStream.readWrite"]], "isotxsio (class in armi.nucleardataio.cccc.isotxs)": [[172, "armi.nuclearDataIO.cccc.isotxs.IsotxsIO"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.isotxs)": [[172, "armi.nuclearDataIO.cccc.isotxs.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.isotxs": [[172, "module-armi.nuclearDataIO.cccc.isotxs"]], "compare() (in module armi.nucleardataio.cccc.isotxs)": [[172, "armi.nuclearDataIO.cccc.isotxs.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.isotxs)": [[172, "armi.nuclearDataIO.cccc.isotxs.compareNuclideXS"]], "compareset() (in module armi.nucleardataio.cccc.isotxs)": [[172, "armi.nuclearDataIO.cccc.isotxs.compareSet"]], "readwrite() (armi.nucleardataio.cccc.isotxs.isotxsio method)": [[172, "armi.nuclearDataIO.cccc.isotxs.IsotxsIO.readWrite"]], "labelsdata (class in armi.nucleardataio.cccc.labels)": [[173, "armi.nuclearDataIO.cccc.labels.LabelsData"]], "labelsstream (class in armi.nucleardataio.cccc.labels)": [[173, "armi.nuclearDataIO.cccc.labels.LabelsStream"]], "armi.nucleardataio.cccc.labels": [[173, "module-armi.nuclearDataIO.cccc.labels"]], "readwrite() (armi.nucleardataio.cccc.labels.labelsstream method)": [[173, "armi.nuclearDataIO.cccc.labels.LabelsStream.readWrite"]], "nhflux (class in armi.nucleardataio.cccc.nhflux)": [[174, "armi.nuclearDataIO.cccc.nhflux.NHFLUX"]], "nafluxstream (class in armi.nucleardataio.cccc.nhflux)": [[174, "armi.nuclearDataIO.cccc.nhflux.NafluxStream"]], "nafluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[174, "armi.nuclearDataIO.cccc.nhflux.NafluxStreamVariant"]], "nhfluxstream (class in armi.nucleardataio.cccc.nhflux)": [[174, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream"]], "nhfluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[174, "armi.nuclearDataIO.cccc.nhflux.NhfluxStreamVariant"]], "armi.nucleardataio.cccc.nhflux": [[174, "module-armi.nuclearDataIO.cccc.nhflux"]], "fluxmoments (armi.nucleardataio.cccc.nhflux.nhflux property)": [[174, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.fluxMoments"]], "getnhfluxreader() (in module armi.nucleardataio.cccc.nhflux)": [[174, "armi.nuclearDataIO.cccc.nhflux.getNhfluxReader"]], "partialcurrentshex (armi.nucleardataio.cccc.nhflux.nhflux property)": [[174, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex"]], "partialcurrentshex_ext (armi.nucleardataio.cccc.nhflux.nhflux property)": [[174, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex_ext"]], "partialcurrentsz (armi.nucleardataio.cccc.nhflux.nhflux property)": [[174, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsZ"]], "readwrite() (armi.nucleardataio.cccc.nhflux.nhfluxstream method)": [[174, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream.readWrite"]], "pmatrxio (class in armi.nucleardataio.cccc.pmatrx)": [[175, "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.pmatrx)": [[175, "armi.nuclearDataIO.cccc.pmatrx.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.pmatrx": [[175, "module-armi.nuclearDataIO.cccc.pmatrx"]], "compare() (in module armi.nucleardataio.cccc.pmatrx)": [[175, "armi.nuclearDataIO.cccc.pmatrx.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.pmatrx)": [[175, "armi.nuclearDataIO.cccc.pmatrx.compareNuclideXS"]], "readascii() (in module armi.nucleardataio.cccc.pmatrx)": [[175, "armi.nuclearDataIO.cccc.pmatrx.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.pmatrx)": [[175, "armi.nuclearDataIO.cccc.pmatrx.readBinary"]], "readwrite() (armi.nucleardataio.cccc.pmatrx.pmatrxio method)": [[175, "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO.readWrite"]], "writeascii() (in module armi.nucleardataio.cccc.pmatrx)": [[175, "armi.nuclearDataIO.cccc.pmatrx.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.pmatrx)": [[175, "armi.nuclearDataIO.cccc.pmatrx.writeBinary"]], "pwdintdata (class in armi.nucleardataio.cccc.pwdint)": [[176, "armi.nuclearDataIO.cccc.pwdint.PwdintData"]], "pwdintstream (class in armi.nucleardataio.cccc.pwdint)": [[176, "armi.nuclearDataIO.cccc.pwdint.PwdintStream"]], "armi.nucleardataio.cccc.pwdint": [[176, "module-armi.nuclearDataIO.cccc.pwdint"]], "readwrite() (armi.nucleardataio.cccc.pwdint.pwdintstream method)": [[176, "armi.nuclearDataIO.cccc.pwdint.PwdintStream.readWrite"]], "atfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[177, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream"]], "rtfluxdata (class in armi.nucleardataio.cccc.rtflux)": [[177, "armi.nuclearDataIO.cccc.rtflux.RtfluxData"]], "rtfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[177, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream"]], "armi.nucleardataio.cccc.rtflux": [[177, "module-armi.nuclearDataIO.cccc.rtflux"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.atfluxstream method)": [[177, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream.getEnergyGroupIndex"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[177, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.getEnergyGroupIndex"]], "getfdfluxreader() (in module armi.nucleardataio.cccc.rtflux)": [[177, "armi.nuclearDataIO.cccc.rtflux.getFDFluxReader"]], "groupfluxes (armi.nucleardataio.cccc.rtflux.rtfluxdata attribute)": [[177, "armi.nuclearDataIO.cccc.rtflux.RtfluxData.groupFluxes"]], "readwrite() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[177, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.readWrite"]], "converged (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[178, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGED"]], "converging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[178, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGING"]], "convergence (class in armi.nucleardataio.cccc.rzflux)": [[178, "armi.nuclearDataIO.cccc.rzflux.Convergence"]], "diverging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[178, "armi.nuclearDataIO.cccc.rzflux.Convergence.DIVERGING"]], "no_iterations (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[178, "armi.nuclearDataIO.cccc.rzflux.Convergence.NO_ITERATIONS"]], "rzfluxdata (class in armi.nucleardataio.cccc.rzflux)": [[178, "armi.nuclearDataIO.cccc.rzflux.RzfluxData"]], "rzfluxstream (class in armi.nucleardataio.cccc.rzflux)": [[178, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream"]], "armi.nucleardataio.cccc.rzflux": [[178, "module-armi.nuclearDataIO.cccc.rzflux"]], "readwrite() (armi.nucleardataio.cccc.rzflux.rzfluxstream method)": [[178, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream.readWrite"]], "armi.nucleardataio.cccc.tests": [[179, "module-armi.nuclearDataIO.cccc.tests"]], "ccccasciirecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[180, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccAsciiRecordTests"]], "ccccbinaryrecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[180, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests"]], "cccciostreamtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[180, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests"]], "armi.nucleardataio.cccc.tests.test_cccc": [[180, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "test_initwithfilemode() (armi.nucleardataio.cccc.tests.test_cccc.cccciostreamtests method)": [[180, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests.test_initWithFileMode"]], "test_notreadinganentirerecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[180, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_notReadingAnEntireRecordRaisesException"]], "test_readingbeyondrecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[180, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_readingBeyondRecordRaisesException"]], "test_writeandreadsimplefloatrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[180, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleFloatRecord"]], "test_writeandreadsimpleintegerrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[180, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleIntegerRecord"]], "test_writeandreadsimplestringrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[180, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleStringRecord"]], "testcompxs (class in armi.nucleardataio.cccc.tests.test_compxs)": [[181, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs"]], "armi.nucleardataio.cccc.tests.test_compxs": [[181, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "asciiwritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[181, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.asciiWritePath"]], "binarywritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[181, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.binaryWritePath"]], "test_asciirw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[181, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_asciiRW"]], "test_binaryrw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[181, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_binaryRW"]], "test_getcompxsfilename() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[181, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_getCOMPXSFileName"]], "test_librarydata() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[181, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_libraryData"]], "test_mergecompxslibraries() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[181, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_mergeCompxsLibraries"]], "test_regionprimaryxs() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[181, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_regionPrimaryXS"]], "test_totalscattermatrix() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[181, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_totalScatterMatrix"]], "testdif3demptyrecords (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[182, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords"]], "testdif3dsimplehexz (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[182, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz"]], "armi.nucleardataio.cccc.tests.test_dif3d": [[182, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "test__rw2drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[182, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw2DRecord"]], "test__rw3drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[182, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw3DRecord"]], "test__rw4drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[182, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw4DRecord"]], "test__rw5drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[182, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw5DRecord"]], "test__rwfile1drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[182, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFile1DRecord"]], "test__rwfileid() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[182, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFileID"]], "test_empty4and5records() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3demptyrecords method)": [[182, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords.test_empty4and5Records"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[182, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test_writeBinary"]], "dlayxstests (class in armi.nucleardataio.cccc.tests.test_dlayxs)": [[183, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests"]], "armi.nucleardataio.cccc.tests.test_dlayxs": [[183, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "test_endfvii1decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1DecayConstants"]], "test_endfvii1neutronsperfission() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1NeutronsPerFission"]], "test_nudelay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_NuDelay"]], "test_avg() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_avg"]], "test_chi_delay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delay"]], "test_chi_delaysumsto1() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delaySumsTo1"]], "test_compare() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_compare"]], "test_decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_decayConstants"]], "test_nuclides() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_nuclides"]], "test_writebinary_mcc3() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_writeBinary_mcc3"]], "testfixsrc (class in armi.nucleardataio.cccc.tests.test_fixsrc)": [[184, "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc"]], "armi.nucleardataio.cccc.tests.test_fixsrc": [[184, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"]], "test_writereadbinaryloop() (armi.nucleardataio.cccc.tests.test_fixsrc.testfixsrc method)": [[184, "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc.test_writeReadBinaryLoop"]], "testgamiso (class in armi.nucleardataio.cccc.tests.test_gamiso)": [[185, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso"]], "armi.nucleardataio.cccc.tests.test_gamiso": [[185, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "test_adddummynuclidestolibrary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[185, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_addDummyNuclidesToLibrary"]], "test_compare() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[185, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_compare"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[185, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_writeBinary"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_geodst)": [[186, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_geodst": [[186, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[186, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[186, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_writeGeodst"]], "isotxs_merge_tests (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[187, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests"]], "testisotxs (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[187, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs"]], "armi.nucleardataio.cccc.tests.test_isotxs": [[187, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "test_getgamisofilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[187, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getGAMISOFileName"]], "test_getisotxsfilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[187, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getISOTXSFileName"]], "test_getnuclide() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[187, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getNuclide"]], "test_getscatterweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[187, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatterWeights"]], "test_getscatteringweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[187, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatteringWeights"]], "test_isotxsdetaileddata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[187, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsDetailedData"]], "test_isotxsgeneraldata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[187, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsGeneralData"]], "test_mergemccv2filesremovesthefilewidechi() (armi.nucleardataio.cccc.tests.test_isotxs.isotxs_merge_tests method)": [[187, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests.test_mergeMccV2FilesRemovesTheFileWideChi"]], "test_n2nisreactionbased() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[187, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_n2nIsReactionBased"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[187, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_writeBinary"]], "testlabels (class in armi.nucleardataio.cccc.tests.test_labels)": [[188, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels"]], "armi.nucleardataio.cccc.tests.test_labels": [[188, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "test_readlabelsbinary() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[188, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_readLabelsBinary"]], "test_writelabelsascii() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[188, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_writeLabelsAscii"]], "testnhflux (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[189, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux"]], "testnhfluxvariant (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[189, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant"]], "armi.nucleardataio.cccc.tests.test_nhflux": [[189, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[189, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fc"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[189, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fc"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[189, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fluxMoments"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[189, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fluxMoments"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[189, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_write"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[189, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_write"]], "test_xypartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[189, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_xyPartialCurrents"]], "test_zpartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[189, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_zPartialCurrents"]], "testpmatrx (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx"]], "testpmatrxnuclides (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides"]], "testproductionmatrix_fromwritten (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten"]], "testproductionmatrix_fromwrittenascii (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWrittenAscii"]], "armi.nucleardataio.cccc.tests.test_pmatrx": [[190, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "test_getpmatrxfilename() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_getPMATRXFileName"]], "test_nuclidedataisdifferent() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_nuclideDataIsDifferent"]], "test_pmatrxdoesnthavedoseconversionfactors() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxDoesntHaveDoseConversionFactors"]], "test_pmatrxgammaenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxGammaEnergies"]], "test_pmatrxneutronenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNeutronEnergies"]], "test_pmatrxnuclidedataaa() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAA"]], "test_pmatrxnuclidedataab() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAB"]], "test_pmatrxnuclidenames() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNuclideNames"]], "test_writtenisidenticaltooriginal() (armi.nucleardataio.cccc.tests.test_pmatrx.testproductionmatrix_fromwritten method)": [[190, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten.test_writtenIsIdenticalToOriginal"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_pwdint)": [[191, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_pwdint": [[191, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_writeGeodst"]], "testrtflux (class in armi.nucleardataio.cccc.tests.test_rtflux)": [[192, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux"]], "armi.nucleardataio.cccc.tests.test_rtflux": [[192, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "test_adjoint() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[192, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_adjoint"]], "test_readrtflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[192, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_readrtflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[192, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_rwAscii"]], "test_writertflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[192, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_writertflux"]], "testrzflux (class in armi.nucleardataio.cccc.tests.test_rzflux)": [[193, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux"]], "armi.nucleardataio.cccc.tests.test_rzflux": [[193, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "binaryfilesequal() (in module armi.nucleardataio.cccc.tests.test_rzflux)": [[193, "armi.nuclearDataIO.cccc.tests.test_rzflux.binaryFilesEqual"]], "test_readrzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[193, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_readRzflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[193, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_rwAscii"]], "test_writerzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[193, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_writeRzflux"]], "filemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[194, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata"]], "nuclidemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[194, "armi.nuclearDataIO.nuclearFileMetadata.NuclideMetadata"]], "nuclidexsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[194, "armi.nuclearDataIO.nuclearFileMetadata.NuclideXSMetadata"]], "regionxsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[194, "armi.nuclearDataIO.nuclearFileMetadata.RegionXSMetadata"]], "armi.nucleardataio.nuclearfilemetadata": [[194, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "update() (armi.nucleardataio.nuclearfilemetadata.filemetadata method)": [[194, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata.update"]], "armi.nucleardataio.tests": [[195, "module-armi.nuclearDataIO.tests"]], "mockblock (class in armi.nucleardataio.tests.test_xscollections)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock"]], "mockblueprints (class in armi.nucleardataio.tests.test_xscollections)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.MockBlueprints"]], "mockreactor (class in armi.nucleardataio.tests.test_xscollections)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.MockReactor"]], "testxscollections (class in armi.nucleardataio.tests.test_xscollections)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections"]], "armi.nucleardataio.tests.test_xscollections": [[196, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "getnuclidenumberdensities() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclideNumberDensities"]], "getnuclides() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclides"]], "getvolume() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getVolume"]], "paramcollectiontype (armi.nucleardataio.tests.test_xscollections.mockblock attribute)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.paramCollectionType"]], "r (armi.nucleardataio.tests.test_xscollections.mockblock property)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.r"]], "setnumberdensity() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.setNumberDensity"]], "test_collapsecrosssection() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_collapseCrossSection"]], "test_createmacrosfrommicros() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_createMacrosFromMicros"]], "test_generatetotalscatteringmatrix() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrix"]], "test_generatetotalscatteringmatrixwithmissingdata() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrixWithMissingData"]], "test_plotnucxs() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[196, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_plotNucXs"]], "abstracttestxslibrarymerging (class in armi.nucleardataio.tests.test_xslibraries)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging"]], "combined_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests"]], "gamiso_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests"]], "isotxs_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests"]], "pmatrx_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests"]], "tempfilemixin (class in armi.nucleardataio.tests.test_xslibraries)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin"]], "testgetisotxsfilesinworkingdirectory (class in armi.nucleardataio.tests.test_xslibraries)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory"]], "testxslibrary (class in armi.nucleardataio.tests.test_xslibraries)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary"]], "armi.nucleardataio.tests.test_xslibraries": [[197, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "assert_contains_only() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.assert_contains_only"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getErrorType"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibAAPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibAA_ABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibABPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibLumpedPath"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getReadFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getWriteFunc"]], "testfilename (armi.nucleardataio.tests.test_xslibraries.tempfilemixin property)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin.testFileName"]], "test_canpickleandunpicklegamiso() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleGAMISO"]], "test_canpickleandunpickleisotxs() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleISOTXS"]], "test_canpickleandunpicklepmatrx() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpicklePMATRX"]], "test_canremoveisotopes() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_canRemoveIsotopes"]], "test_canremoveisotopes() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.test_canRemoveIsotopes"]], "test_canwritegamisofromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteGamisoFromCombinedXSLibrary"]], "test_canwriteisotxsfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteIsotxsFromCombinedXSLibrary"]], "test_canwritepmatrxfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWritePmatrxFromCombinedXSLibrary"]], "test_cannotmergexslibwithsamenuclidenames() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_cannotMergeXSLibWithSameNuclideNames"]], "test_cannotmergexslibswithdifferentgammagroupstructures() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "test_cannotmergexslibxwithdifferentgroupstructure() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_cannotMergeXSLibxWithDifferentGroupStructure"]], "test_comparedifferentcomponentsofanxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareDifferentComponentsOfAnXSLibrary"]], "test_compareworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareWorks"]], "test_gamisolibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_gamisoLibraryAttributes"]], "test_getisotxsfileswithlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithLibrarySuffix"]], "test_getisotxsfileswithoutlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithoutLibrarySuffix"]], "test_isotxslibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_isotxsLibraryAttributes"]], "test_mergeallxslibfiles() (armi.nucleardataio.tests.test_xslibraries.combined_merge_tests method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests.test_mergeAllXSLibFiles"]], "test_mergeemptyxslibwithotheressentiallyclonestheother() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_mergeEmptyXSLibWithOtherEssentiallyClonesTheOther"]], "test_mergefailswithnonisotxsfiles() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeFailsWithNonIsotxsFiles"]], "test_mergetwoxslibfiles() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_mergeTwoXSLibFiles"]], "test_mergexslibrarieswithdifferentdataworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeXSLibrariesWithDifferentDataWorks"]], "test_pmatrxlibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[197, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_pmatrxLibraryAttributes"]], "nuclidetests (class in armi.nucleardataio.tests.test_xsnuclides)": [[198, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests"]], "armi.nucleardataio.tests.test_xsnuclides": [[198, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "test_getmicroxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[198, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getMicroXS"]], "test_getxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[198, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getXS"]], "test_nuclide_2dxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[198, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_2dXsArrangementIsCorrect"]], "test_nuclide_createfromlabelfailsonbadname() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[198, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_createFromLabelFailsOnBadName"]], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[198, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"]], "test_nuclide_isoaadetails() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[198, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_isoaaDetails"]], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclide() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[198, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"]], "test_nuclide_newlabelsdontcausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[198, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_newLabelsDontCauseWarnings"]], "test_nuclide_nuclidebasemethodsshouldnotfail() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[198, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_nuclideBaseMethodsShouldNotFail"]], "test_nuclide_oldlabelscausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[198, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_oldLabelsCauseWarnings"]], "test_nuclide_scatterxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[198, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_scatterXsArrangementIsCorrect"]], "macroscopiccrosssectioncreator (class in armi.nucleardataio.xscollections)": [[199, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator"]], "xscollection (class in armi.nucleardataio.xscollections)": [[199, "armi.nuclearDataIO.xsCollections.XSCollection"]], "armi.nucleardataio.xscollections": [[199, "module-armi.nuclearDataIO.xsCollections"]], "clear() (armi.nucleardataio.xscollections.xscollection method)": [[199, "armi.nuclearDataIO.xsCollections.XSCollection.clear"]], "collapsecrosssection() (armi.nucleardataio.xscollections.xscollection static method)": [[199, "armi.nuclearDataIO.xsCollections.XSCollection.collapseCrossSection"]], "compare() (armi.nucleardataio.xscollections.xscollection method)": [[199, "armi.nuclearDataIO.xsCollections.XSCollection.compare"]], "computeblockaveragechi() (in module armi.nucleardataio.xscollections)": [[199, "armi.nuclearDataIO.xsCollections.computeBlockAverageChi"]], "computecaptureenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[199, "armi.nuclearDataIO.xsCollections.computeCaptureEnergyGenerationConstants"]], "computefissionenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[199, "armi.nuclearDataIO.xsCollections.computeFissionEnergyGenerationConstants"]], "computegammaenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[199, "armi.nuclearDataIO.xsCollections.computeGammaEnergyDepositionConstants"]], "computemacroscopicgroupconstants() (in module armi.nucleardataio.xscollections)": [[199, "armi.nuclearDataIO.xsCollections.computeMacroscopicGroupConstants"]], "computeneutronenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[199, "armi.nuclearDataIO.xsCollections.computeNeutronEnergyDepositionConstants"]], "createmacrosfrommicros() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[199, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosFromMicros"]], "createmacrosonblocklist() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[199, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosOnBlocklist"]], "get() (armi.nucleardataio.xscollections.xscollection method)": [[199, "armi.nuclearDataIO.xsCollections.XSCollection.get"]], "getabsorptionxs() (armi.nucleardataio.xscollections.xscollection method)": [[199, "armi.nuclearDataIO.xsCollections.XSCollection.getAbsorptionXS"]], "getdefaultxs() (armi.nucleardataio.xscollections.xscollection class method)": [[199, "armi.nuclearDataIO.xsCollections.XSCollection.getDefaultXs"]], "gettotalscattermatrix() (armi.nucleardataio.xscollections.xscollection method)": [[199, "armi.nuclearDataIO.xsCollections.XSCollection.getTotalScatterMatrix"]], "merge() (armi.nucleardataio.xscollections.xscollection method)": [[199, "armi.nuclearDataIO.xsCollections.XSCollection.merge"]], "compxslibrary (class in armi.nucleardataio.xslibraries)": [[200, "armi.nuclearDataIO.xsLibraries.CompxsLibrary"]], "isotxslibrary (class in armi.nucleardataio.xslibraries)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary"]], "armi.nucleardataio.xslibraries": [[200, "module-armi.nuclearDataIO.xsLibraries"]], "compare() (in module armi.nucleardataio.xslibraries)": [[200, "armi.nuclearDataIO.xsLibraries.compare"]], "comparelibraryneutronenergies() (in module armi.nucleardataio.xslibraries)": [[200, "armi.nuclearDataIO.xsLibraries.compareLibraryNeutronEnergies"]], "comparexslibraryattribute() (in module armi.nucleardataio.xslibraries)": [[200, "armi.nuclearDataIO.xsLibraries.compareXSLibraryAttribute"]], "gammadoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaDoseConversionFactors"]], "gammaenergyupperbounds (armi.nucleardataio.xslibraries.isotxslibrary property)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaEnergyUpperBounds"]], "get() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.get"]], "getisotxslibrariestomerge() (in module armi.nucleardataio.xslibraries)": [[200, "armi.nuclearDataIO.xsLibraries.getISOTXSLibrariesToMerge"]], "getnuclide() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclide"]], "getnuclides() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclides"]], "getscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getScatterWeights"]], "getsuffixfromnuclidelabel() (in module armi.nucleardataio.xslibraries)": [[200, "armi.nuclearDataIO.xsLibraries.getSuffixFromNuclideLabel"]], "merge() (armi.nucleardataio.xslibraries.compxslibrary method)": [[200, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.merge"]], "merge() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.merge"]], "mergexslibrariesinworkingdirectory() (in module armi.nucleardataio.xslibraries)": [[200, "armi.nuclearDataIO.xsLibraries.mergeXSLibrariesInWorkingDirectory"]], "neutrondoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.neutronDoseConversionFactors"]], "nuclidelabels (armi.nucleardataio.xslibraries.isotxslibrary property)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclideLabels"]], "nuclides (armi.nucleardataio.xslibraries.isotxslibrary property)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclides"]], "numgroups (armi.nucleardataio.xslibraries.isotxslibrary property)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroups"]], "numgroupsgamma (armi.nucleardataio.xslibraries.isotxslibrary property)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroupsGamma"]], "purgefissionproducts() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.purgeFissionProducts"]], "regionlabels (armi.nucleardataio.xslibraries.compxslibrary property)": [[200, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regionLabels"]], "regions (armi.nucleardataio.xslibraries.compxslibrary property)": [[200, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regions"]], "resetscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.resetScatterWeights"]], "xsids (armi.nucleardataio.xslibraries.isotxslibrary property)": [[200, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.xsIDs"]], "xsnuclide (class in armi.nucleardataio.xsnuclides)": [[201, "armi.nuclearDataIO.xsNuclides.XSNuclide"]], "armi.nucleardataio.xsnuclides": [[201, "module-armi.nuclearDataIO.xsNuclides"]], "buildnormalizedscattercolumns() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[201, "armi.nuclearDataIO.xsNuclides.XSNuclide.buildNormalizedScatterColumns"]], "decays (armi.nucleardataio.xsnuclides.xsnuclide property)": [[201, "armi.nuclearDataIO.xsNuclides.XSNuclide.decays"]], "getmicroxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[201, "armi.nuclearDataIO.xsNuclides.XSNuclide.getMicroXS"]], "getxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[201, "armi.nuclearDataIO.xsNuclides.XSNuclide.getXS"]], "merge() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[201, "armi.nuclearDataIO.xsNuclides.XSNuclide.merge"]], "plotcomparescattermatrix() (in module armi.nucleardataio.xsnuclides)": [[201, "armi.nuclearDataIO.xsNuclides.plotCompareScatterMatrix"]], "plotscattermatrix() (in module armi.nucleardataio.xsnuclides)": [[201, "armi.nuclearDataIO.xsNuclides.plotScatterMatrix"]], "trans (armi.nucleardataio.xsnuclides.xsnuclide property)": [[201, "armi.nuclearDataIO.xsNuclides.XSNuclide.trans"]], "updatebasenuclide() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[201, "armi.nuclearDataIO.xsNuclides.XSNuclide.updateBaseNuclide"]], "armi.operators": [[202, "module-armi.operators"]], "factory() (in module armi.operators)": [[202, "armi.operators.factory"]], "getoperatorclassfromsettings() (in module armi.operators)": [[202, "armi.operators.getOperatorClassFromSettings"]], "operator (class in armi.operators.operator)": [[203, "armi.operators.operator.Operator"]], "addinterface() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.addInterface"]], "armi.operators.operator": [[203, "module-armi.operators.operator"]], "ateol (armi.operators.operator.operator property)": [[203, "armi.operators.operator.Operator.atEOL"]], "availabilityfactors (armi.operators.operator.operator property)": [[203, "armi.operators.operator.Operator.availabilityFactors"]], "burnsteps (armi.operators.operator.operator property)": [[203, "armi.operators.operator.Operator.burnSteps"]], "couplingisactive() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.couplingIsActive"]], "createinterfaces() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.createInterfaces"]], "cyclelengths (armi.operators.operator.operator property)": [[203, "armi.operators.operator.Operator.cycleLengths"]], "cyclenames (armi.operators.operator.operator property)": [[203, "armi.operators.operator.Operator.cycleNames"]], "detach() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.detach"]], "getactiveinterfaces() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.getActiveInterfaces"]], "getinterface() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.getInterface"]], "getinterfaces() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.getInterfaces"]], "initializeinterfaces() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.initializeInterfaces"]], "inspector (armi.operators.operator.operator attribute)": [[203, "armi.operators.operator.Operator.inspector"]], "interactallboc() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.interactAllBOC"]], "interactallbol() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.interactAllBOL"]], "interactallcoupled() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.interactAllCoupled"]], "interactalleoc() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.interactAllEOC"]], "interactalleol() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.interactAllEOL"]], "interactallerror() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.interactAllError"]], "interactalleverynode() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.interactAllEveryNode"]], "interactallinit() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.interactAllInit"]], "interfaceisactive() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.interfaceIsActive"]], "loadstate() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.loadState"]], "maxburnsteps (armi.operators.operator.operator property)": [[203, "armi.operators.operator.Operator.maxBurnSteps"]], "operate() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.operate"]], "powerfractions (armi.operators.operator.operator property)": [[203, "armi.operators.operator.Operator.powerFractions"]], "printinterfacesummary() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.printInterfaceSummary"]], "reattach() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.reattach"]], "removeallinterfaces() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.removeAllInterfaces"]], "removeinterface() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.removeInterface"]], "setstatetodefault() (armi.operators.operator.operator static method)": [[203, "armi.operators.operator.Operator.setStateToDefault"]], "snapshotrequest() (armi.operators.operator.operator method)": [[203, "armi.operators.operator.Operator.snapshotRequest"]], "steplengths (armi.operators.operator.operator property)": [[203, "armi.operators.operator.Operator.stepLengths"]], "operatormpi (class in armi.operators.operatormpi)": [[204, "armi.operators.operatorMPI.OperatorMPI"]], "armi.operators.operatormpi": [[204, "module-armi.operators.operatorMPI"]], "collapseallstderrs() (armi.operators.operatormpi.operatormpi method)": [[204, "armi.operators.operatorMPI.OperatorMPI.collapseAllStderrs"]], "operate() (armi.operators.operatormpi.operatormpi method)": [[204, "armi.operators.operatorMPI.OperatorMPI.operate"]], "workeroperate() (armi.operators.operatormpi.operatormpi method)": [[204, "armi.operators.operatorMPI.OperatorMPI.workerOperate"]], "workerquit() (armi.operators.operatormpi.operatormpi static method)": [[204, "armi.operators.operatorMPI.OperatorMPI.workerQuit"]], "equilibrium (armi.operators.runtypes.runtypes attribute)": [[205, "armi.operators.runTypes.RunTypes.EQUILIBRIUM"]], "runtypes (class in armi.operators.runtypes)": [[205, "armi.operators.runTypes.RunTypes"]], "snapshots (armi.operators.runtypes.runtypes attribute)": [[205, "armi.operators.runTypes.RunTypes.SNAPSHOTS"]], "standard (armi.operators.runtypes.runtypes attribute)": [[205, "armi.operators.runTypes.RunTypes.STANDARD"]], "armi.operators.runtypes": [[205, "module-armi.operators.runTypes"]], "armi.operators.settingsvalidation": [[206, "module-armi.operators.settingsValidation"]], "operatorsnapshots (class in armi.operators.snapshots)": [[207, "armi.operators.snapshots.OperatorSnapshots"]], "armi.operators.snapshots": [[207, "module-armi.operators.snapshots"]], "ateol (armi.operators.snapshots.operatorsnapshots property)": [[207, "armi.operators.snapshots.OperatorSnapshots.atEOL"]], "createinterfaces() (armi.operators.snapshots.operatorsnapshots method)": [[207, "armi.operators.snapshots.OperatorSnapshots.createInterfaces"]], "setstatetodefault() (armi.operators.snapshots.operatorsnapshots static method)": [[207, "armi.operators.snapshots.OperatorSnapshots.setStateToDefault"]], "armi.operators.tests": [[208, "module-armi.operators.tests"]], "testoperatorsnapshots (class in armi.operators.tests.test_operatorsnapshots)": [[209, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots"]], "testoperatorsnapshotssettings (class in armi.operators.tests.test_operatorsnapshots)": [[209, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorsnapshots": [[209, "module-armi.operators.tests.test_operatorSnapshots"]], "test_ateol() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[209, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_atEOL"]], "test_createinterfaces() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[209, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfaces"]], "test_createinterfacesdisabled() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[209, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfacesDisabled"]], "test_getoperatorclassfromsettings() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshotssettings method)": [[209, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings.test_getOperatorClassFromSettings"]], "test_mainoperate() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[209, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_mainOperate"]], "test_setstatetodefault() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[209, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_setStateToDefault"]], "cyclessettingstests (class in armi.operators.tests.test_operators)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests"]], "interfacea (class in armi.operators.tests.test_operators)": [[210, "armi.operators.tests.test_operators.InterfaceA"]], "interfaceb (class in armi.operators.tests.test_operators)": [[210, "armi.operators.tests.test_operators.InterfaceB"]], "interfacec (class in armi.operators.tests.test_operators)": [[210, "armi.operators.tests.test_operators.InterfaceC"]], "operatortests (class in armi.operators.tests.test_operators)": [[210, "armi.operators.tests.test_operators.OperatorTests"]], "testcreateoperator (class in armi.operators.tests.test_operators)": [[210, "armi.operators.tests.test_operators.TestCreateOperator"]], "testinterfaceandeventheaders (class in armi.operators.tests.test_operators)": [[210, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders"]], "testtightcoupling (class in armi.operators.tests.test_operators)": [[210, "armi.operators.tests.test_operators.TestTightCoupling"]], "armi.operators.tests.test_operators": [[210, "module-armi.operators.tests.test_operators"]], "availabilityfactorssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.availabilityFactorsSolution"]], "burnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.burnStepsSolution"]], "cyclelengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleLengthsSolution"]], "cyclenamessolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleNamesSolution"]], "dbwriteforcoupling() (armi.operators.tests.test_operators.testtightcoupling method)": [[210, "armi.operators.tests.test_operators.TestTightCoupling.dbWriteForCoupling"]], "detailedcyclessettings (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.detailedCyclesSettings"]], "function (armi.operators.tests.test_operators.interfacea attribute)": [[210, "armi.operators.tests.test_operators.InterfaceA.function"]], "function (armi.operators.tests.test_operators.interfaceb attribute)": [[210, "armi.operators.tests.test_operators.InterfaceB.function"]], "function (armi.operators.tests.test_operators.interfacec attribute)": [[210, "armi.operators.tests.test_operators.InterfaceC.function"]], "maxburnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.maxBurnStepsSolution"]], "name (armi.operators.tests.test_operators.interfacea attribute)": [[210, "armi.operators.tests.test_operators.InterfaceA.name"]], "name (armi.operators.tests.test_operators.interfaceb attribute)": [[210, "armi.operators.tests.test_operators.InterfaceB.name"]], "name (armi.operators.tests.test_operators.interfacec attribute)": [[210, "armi.operators.tests.test_operators.InterfaceC.name"]], "powerfractionssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.powerFractionsSolution"]], "steplengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.stepLengthsSolution"]], "test_addinterfacesubclasscollision() (armi.operators.tests.test_operators.operatortests method)": [[210, "armi.operators.tests.test_operators.OperatorTests.test_addInterfaceSubclassCollision"]], "test_computetightcouplingconvergence() (armi.operators.tests.test_operators.testtightcoupling method)": [[210, "armi.operators.tests.test_operators.TestTightCoupling.test_computeTightCouplingConvergence"]], "test_couplingisactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[210, "armi.operators.tests.test_operators.TestTightCoupling.test_couplingIsActive"]], "test_createoperator() (armi.operators.tests.test_operators.testcreateoperator method)": [[210, "armi.operators.tests.test_operators.TestCreateOperator.test_createOperator"]], "test_expandcycleandtimenodeargs_coupled() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[210, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Coupled"]], "test_expandcycleandtimenodeargs_cycle() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[210, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Cycle"]], "test_expandcycleandtimenodeargs_empty() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[210, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Empty"]], "test_expandcycleandtimenodeargs_everynode() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[210, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_EveryNode"]], "test_getactiveinterfaces() (armi.operators.tests.test_operators.operatortests method)": [[210, "armi.operators.tests.test_operators.OperatorTests.test_getActiveInterfaces"]], "test_getavailabilityfactors() (armi.operators.tests.test_operators.cyclessettingstests method)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getBurnSteps"]], "test_getcyclelengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.operators.tests.test_operators.cyclessettingstests method)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleNames"]], "test_getmaxburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getpowerfractions() (armi.operators.tests.test_operators.cyclessettingstests method)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getPowerFractions"]], "test_getsteplengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[210, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getStepLengths"]], "test_getsteplengths() (armi.operators.tests.test_operators.testtightcoupling method)": [[210, "armi.operators.tests.test_operators.TestTightCoupling.test_getStepLengths"]], "test_interfaceisactive() (armi.operators.tests.test_operators.operatortests method)": [[210, "armi.operators.tests.test_operators.OperatorTests.test_interfaceIsActive"]], "test_loadstateerror() (armi.operators.tests.test_operators.operatortests method)": [[210, "armi.operators.tests.test_operators.OperatorTests.test_loadStateError"]], "test_operatordata() (armi.operators.tests.test_operators.operatortests method)": [[210, "armi.operators.tests.test_operators.OperatorTests.test_operatorData"]], "test_orderedinterfaces() (armi.operators.tests.test_operators.operatortests method)": [[210, "armi.operators.tests.test_operators.OperatorTests.test_orderedInterfaces"]], "test_performtightcoupling_inactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[210, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_Inactive"]], "test_performtightcoupling_nowritedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[210, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_NoWriteDB"]], "test_performtightcoupling_writedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[210, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_WriteDB"]], "test_performtightcoupling_notconverged() (armi.operators.tests.test_operators.testtightcoupling method)": [[210, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_notConverged"]], "test_performtightcoupling_skip() (armi.operators.tests.test_operators.testtightcoupling method)": [[210, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_skip"]], "test_setstatetodefault() (armi.operators.tests.test_operators.operatortests method)": [[210, "armi.operators.tests.test_operators.OperatorTests.test_setStateToDefault"]], "test_snapshotrequest() (armi.operators.tests.test_operators.operatortests method)": [[210, "armi.operators.tests.test_operators.OperatorTests.test_snapshotRequest"]], "armi.physics": [[211, "module-armi.physics"]], "dpa_cross_sections (in module armi.physics.constants)": [[212, "armi.physics.constants.DPA_CROSS_SECTIONS"]], "armi.physics.constants": [[212, "module-armi.physics.constants"]], "defaultexecuter (class in armi.physics.executers)": [[213, "armi.physics.executers.DefaultExecuter"]], "executer (class in armi.physics.executers)": [[213, "armi.physics.executers.Executer"]], "executionoptions (class in armi.physics.executers)": [[213, "armi.physics.executers.ExecutionOptions"]], "armi.physics.executers": [[213, "module-armi.physics.executers"]], "describe() (armi.physics.executers.executionoptions method)": [[213, "armi.physics.executers.ExecutionOptions.describe"]], "fromreactor() (armi.physics.executers.executionoptions method)": [[213, "armi.physics.executers.ExecutionOptions.fromReactor"]], "fromusersettings() (armi.physics.executers.executionoptions method)": [[213, "armi.physics.executers.ExecutionOptions.fromUserSettings"]], "resolvederivedoptions() (armi.physics.executers.executionoptions method)": [[213, "armi.physics.executers.ExecutionOptions.resolveDerivedOptions"]], "run() (armi.physics.executers.defaultexecuter method)": [[213, "armi.physics.executers.DefaultExecuter.run"]], "run() (armi.physics.executers.executer method)": [[213, "armi.physics.executers.Executer.run"]], "setrundirfromcasetitle() (armi.physics.executers.executionoptions method)": [[213, "armi.physics.executers.ExecutionOptions.setRunDirFromCaseTitle"]], "writeinput() (armi.physics.executers.defaultexecuter method)": [[213, "armi.physics.executers.DefaultExecuter.writeInput"]], "fuelhandlerplugin (class in armi.physics.fuelcycle)": [[214, "armi.physics.fuelCycle.FuelHandlerPlugin"]], "armi.physics.fuelcycle": [[214, "module-armi.physics.fuelCycle"]], "definesettings() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[214, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[214, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[214, "armi.physics.fuelCycle.FuelHandlerPlugin.exposeInterfaces"]], "armi.physics.fuelcycle.assemblyrotationalgorithms": [[215, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "bureducingassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[215, "armi.physics.fuelCycle.assemblyRotationAlgorithms.buReducingAssemblyRotation"]], "simpleassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[215, "armi.physics.fuelCycle.assemblyRotationAlgorithms.simpleAssemblyRotation"]], "armi.physics.fuelcycle.fuelhandlerfactory": [[216, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "fuelhandlerfactory() (in module armi.physics.fuelcycle.fuelhandlerfactory)": [[216, "armi.physics.fuelCycle.fuelHandlerFactory.fuelHandlerFactory"]], "fuelhandlerinterface (class in armi.physics.fuelcycle.fuelhandlerinterface)": [[217, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface"]], "armi.physics.fuelcycle.fuelhandlerinterface": [[217, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "interactboc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[217, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactBOC"]], "interacteoc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[217, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOC"]], "interacteol() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[217, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOL"]], "makeshufflereport() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[217, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.makeShuffleReport"]], "managefuel() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[217, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.manageFuel"]], "name (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface attribute)": [[217, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.name"]], "specifyinputs() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface static method)": [[217, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.specifyInputs"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[217, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.workerOperate"]], "fuelhandler (class in armi.physics.fuelcycle.fuelhandlers)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler"]], "armi.physics.fuelcycle.fuelhandlers": [[218, "module-armi.physics.fuelCycle.fuelHandlers"]], "chooseswaps() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.chooseSwaps"]], "cs (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cs"]], "cycle (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cycle"]], "dischargeswap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.dischargeSwap"]], "dorepeatshuffle() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.doRepeatShuffle"]], "findassembly() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.findAssembly"]], "getfactorlist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.getFactorList"]], "isassemblyinazone() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.isAssemblyInAZone"]], "makeshufflearrows() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.makeShuffleArrows"]], "outage() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.outage"]], "prepcore() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepCore"]], "prepshufflemap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepShuffleMap"]], "processmovelist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.processMoveList"]], "r (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.r"]], "readmoves() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.readMoves"]], "repeatshufflepattern() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.repeatShufflePattern"]], "swapassemblies() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapAssemblies"]], "swapcascade() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapCascade"]], "trackchain() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.trackChain"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[218, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.workerOperate"]], "armi.physics.fuelcycle.hexassemblyfuelmgmtutils": [[219, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "buildconvergentringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[219, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildConvergentRingSchedule"]], "buildringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[219, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildRingSchedule"]], "getoptimalassemblyorientation() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[219, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.getOptimalAssemblyOrientation"]], "armi.physics.fuelcycle.settings": [[220, "module-armi.physics.fuelCycle.settings"]], "getfuelcyclesettingvalidators() (in module armi.physics.fuelcycle.settings)": [[220, "armi.physics.fuelCycle.settings.getFuelCycleSettingValidators"]], "getfuelcyclesettings() (in module armi.physics.fuelcycle.settings)": [[220, "armi.physics.fuelCycle.settings.getFuelCycleSettings"]], "armi.physics.fuelcycle.tests": [[221, "module-armi.physics.fuelCycle.tests"]], "testfuelhandlermgmttools (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[222, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools"]], "armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms": [[222, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "test_bureducingassemblyrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[222, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_buReducingAssemblyRotation"]], "test_simpleassemblyrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[222, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_simpleAssemblyRotation"]], "fuelhandlertesthelper (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.FuelHandlerTestHelper"]], "mocklatticephysicsinterface (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface"]], "mockxsgm (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM"]], "testfuelhandler (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler"]], "testfuelplugin (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin"]], "addsomedetailassemblies() (in module armi.physics.fuelcycle.tests.test_fuelhandlers)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.addSomeDetailAssemblies"]], "armi.physics.fuelcycle.tests.test_fuelhandlers": [[223, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.interactBOC"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mockxsgm method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM.interactBOC"]], "name (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface attribute)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.name"]], "runshuffling() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.runShuffling"]], "test_dischargeswap() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwap"]], "test_dischargeswapincompatiblestationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwapIncompatibleStationaryBlocks"]], "test_findbycoords() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findByCoords"]], "test_findhighbu() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findHighBu"]], "test_findinsfp() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findInSFP"]], "test_findmany() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findMany"]], "test_findwithminmax() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findWithMinMax"]], "test_getassembliesinrings() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getAssembliesInRings"]], "test_getfactorlist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getFactorList"]], "test_getparammax() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getParamMax"]], "test_interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_interactBOC"]], "test_isassemblyinazone() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_isAssemblyInAZone"]], "test_linpowbypin() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPin"]], "test_linpowbypingamma() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinGamma"]], "test_linpowbypinneutron() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinNeutron"]], "test_outage() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_outage"]], "test_outageedgecase() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_outageEdgeCase"]], "test_processmovelist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_processMoveList"]], "test_readmoves() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_readMoves"]], "test_repeatshuffles() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_repeatShuffles"]], "test_settingsarediscovered() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelplugin method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin.test_settingsAreDiscovered"]], "test_transferdifferentnumberstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferDifferentNumberStationaryBlocks"]], "test_transferincompatibleheightstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferIncompatibleHeightStationaryBlocks"]], "test_transferstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferStationaryBlocks"]], "test_transferunalignedlocationstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferUnalignedLocationStationaryBlocks"]], "test_width() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[223, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_width"]], "testhexassemmgmttools (class in armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils)": [[224, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools"]], "armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils": [[224, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "test_buildconvergentringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[224, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildConvergentRingSchedule"]], "test_buildringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[224, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildRingSchedule"]], "armi.physics.fuelperformance": [[225, "module-armi.physics.fuelPerformance"]], "fuelperformanceexecuter (class in armi.physics.fuelperformance.executers)": [[226, "armi.physics.fuelPerformance.executers.FuelPerformanceExecuter"]], "fuelperformanceoptions (class in armi.physics.fuelperformance.executers)": [[226, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions"]], "armi.physics.fuelperformance.executers": [[226, "module-armi.physics.fuelPerformance.executers"]], "fromreactor() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[226, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromReactor"]], "fromusersettings() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[226, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromUserSettings"]], "armi.physics.fuelperformance.parameters": [[227, "module-armi.physics.fuelPerformance.parameters"]], "getfuelperformanceparameterdefinitions() (in module armi.physics.fuelperformance.parameters)": [[227, "armi.physics.fuelPerformance.parameters.getFuelPerformanceParameterDefinitions"]], "fuelperformanceplugin (class in armi.physics.fuelperformance.plugin)": [[228, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin"]], "armi.physics.fuelperformance.plugin": [[228, "module-armi.physics.fuelPerformance.plugin"]], "defineparameters() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[228, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineParameters"]], "definesettings() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[228, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[228, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[228, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.exposeInterfaces"]], "armi.physics.fuelperformance.settings": [[229, "module-armi.physics.fuelPerformance.settings"]], "definesettings() (in module armi.physics.fuelperformance.settings)": [[229, "armi.physics.fuelPerformance.settings.defineSettings"]], "definevalidators() (in module armi.physics.fuelperformance.settings)": [[229, "armi.physics.fuelPerformance.settings.defineValidators"]], "armi.physics.fuelperformance.tests": [[230, "module-armi.physics.fuelPerformance.tests"]], "testfuelperformanceoptions (class in armi.physics.fuelperformance.tests.test_executers)": [[231, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions"]], "armi.physics.fuelperformance.tests.test_executers": [[231, "module-armi.physics.fuelPerformance.tests.test_executers"]], "test_fuelperformanceoptions() (armi.physics.fuelperformance.tests.test_executers.testfuelperformanceoptions method)": [[231, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions.test_fuelPerformanceOptions"]], "testfuelperformanceplugin (class in armi.physics.fuelperformance.tests.test_fuelperformanceplugin)": [[232, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin"]], "armi.physics.fuelperformance.tests.test_fuelperformanceplugin": [[232, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "plugin (armi.physics.fuelperformance.tests.test_fuelperformanceplugin.testfuelperformanceplugin attribute)": [[232, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin.plugin"]], "testfuelperformanceutils (class in armi.physics.fuelperformance.tests.test_fuelperformanceutils)": [[233, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils"]], "armi.physics.fuelperformance.tests.test_fuelperformanceutils": [[233, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "test_applyfueldisplacement() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[233, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_applyFuelDisplacement"]], "test_gasconductivitycorrection_morph0() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[233, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph0"]], "test_gasconductivitycorrection_morph1() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[233, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph1"]], "test_gasconductivitycorrection_morph2() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[233, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph2"]], "test_gasconductivitycorrection_morph3() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[233, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph3"]], "test_gasconductivitycorrection_morph4() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[233, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph4"]], "applyfueldisplacement() (in module armi.physics.fuelperformance.utils)": [[234, "armi.physics.fuelPerformance.utils.applyFuelDisplacement"]], "armi.physics.fuelperformance.utils": [[234, "module-armi.physics.fuelPerformance.utils"]], "gasconductivitycorrection() (in module armi.physics.fuelperformance.utils)": [[234, "armi.physics.fuelPerformance.utils.gasConductivityCorrection"]], "boc (armi.physics.neutronics.latticephysicsfrequency attribute)": [[235, "armi.physics.neutronics.LatticePhysicsFrequency.BOC"]], "bol (armi.physics.neutronics.latticephysicsfrequency attribute)": [[235, "armi.physics.neutronics.LatticePhysicsFrequency.BOL"]], "latticephysicsfrequency (class in armi.physics.neutronics)": [[235, "armi.physics.neutronics.LatticePhysicsFrequency"]], "neutronicsplugin (class in armi.physics.neutronics)": [[235, "armi.physics.neutronics.NeutronicsPlugin"]], "adjointcalculationrequested() (in module armi.physics.neutronics)": [[235, "armi.physics.neutronics.adjointCalculationRequested"]], "all (armi.physics.neutronics.latticephysicsfrequency attribute)": [[235, "armi.physics.neutronics.LatticePhysicsFrequency.all"]], "applyeffectivedelayedneutronfractiontocore() (in module armi.physics.neutronics)": [[235, "armi.physics.neutronics.applyEffectiveDelayedNeutronFractionToCore"]], "armi.physics.neutronics": [[235, "module-armi.physics.neutronics"]], "defineentrypoints() (armi.physics.neutronics.neutronicsplugin static method)": [[235, "armi.physics.neutronics.NeutronicsPlugin.defineEntryPoints"]], "defineparameters() (armi.physics.neutronics.neutronicsplugin static method)": [[235, "armi.physics.neutronics.NeutronicsPlugin.defineParameters"]], "definesettings() (armi.physics.neutronics.neutronicsplugin static method)": [[235, "armi.physics.neutronics.NeutronicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.neutronics.neutronicsplugin static method)": [[235, "armi.physics.neutronics.NeutronicsPlugin.defineSettingsValidators"]], "everynode (armi.physics.neutronics.latticephysicsfrequency attribute)": [[235, "armi.physics.neutronics.LatticePhysicsFrequency.everyNode"]], "exposeinterfaces() (armi.physics.neutronics.neutronicsplugin static method)": [[235, "armi.physics.neutronics.NeutronicsPlugin.exposeInterfaces"]], "firstcouplediteration (armi.physics.neutronics.latticephysicsfrequency attribute)": [[235, "armi.physics.neutronics.LatticePhysicsFrequency.firstCoupledIteration"]], "gammatransportisrequested() (in module armi.physics.neutronics)": [[235, "armi.physics.neutronics.gammaTransportIsRequested"]], "gammaxsarerequested() (in module armi.physics.neutronics)": [[235, "armi.physics.neutronics.gammaXsAreRequested"]], "getreportcontents() (armi.physics.neutronics.neutronicsplugin static method)": [[235, "armi.physics.neutronics.NeutronicsPlugin.getReportContents"]], "never (armi.physics.neutronics.latticephysicsfrequency attribute)": [[235, "armi.physics.neutronics.LatticePhysicsFrequency.never"]], "onprocesscoreloading() (armi.physics.neutronics.neutronicsplugin static method)": [[235, "armi.physics.neutronics.NeutronicsPlugin.onProcessCoreLoading"]], "realcalculationrequested() (in module armi.physics.neutronics)": [[235, "armi.physics.neutronics.realCalculationRequested"]], "armi.physics.neutronics.const": [[236, "module-armi.physics.neutronics.const"]], "averageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[237, "armi.physics.neutronics.crossSectionGroupManager.AverageBlockCollection"]], "blockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[237, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection"]], "crosssectiongroupmanager (class in armi.physics.neutronics.crosssectiongroupmanager)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager"]], "cylindricalcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CylindricalComponentsAverageBlockCollection"]], "fluxweightedaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[237, "armi.physics.neutronics.crossSectionGroupManager.FluxWeightedAverageBlockCollection"]], "medianblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[237, "armi.physics.neutronics.crossSectionGroupManager.MedianBlockCollection"]], "slabcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[237, "armi.physics.neutronics.crossSectionGroupManager.SlabComponentsAverageBlockCollection"]], "armi.physics.neutronics.crosssectiongroupmanager": [[237, "module-armi.physics.neutronics.crossSectionGroupManager"]], "blockcollectionfactory() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[237, "armi.physics.neutronics.crossSectionGroupManager.blockCollectionFactory"]], "calcavgnuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.calcAvgNuclideTemperatures"]], "clearrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.clearRepresentativeBlocks"]], "createrepresentativeblock() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.createRepresentativeBlock"]], "createrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocks"]], "createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocksUsingExistingBlocks"]], "describeinterfaces() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[237, "armi.physics.neutronics.crossSectionGroupManager.describeInterfaces"]], "disablebugroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.disableBuGroupUpdates"]], "enablebugroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.enableBuGroupUpdates"]], "fluxsolutionispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.fluxSolutionIsPregenerated"]], "getblocknuclidetemperatureavgterms() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[237, "armi.physics.neutronics.crossSectionGroupManager.getBlockNuclideTemperatureAvgTerms"]], "getcandidateblocks() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getCandidateBlocks"]], "getnextavailablexstypes() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNextAvailableXsTypes"]], "getnuctemperature() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNucTemperature"]], "getweight() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getWeight"]], "getxstypelabelfromnumber() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[237, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeLabelFromNumber"]], "getxstypenumberfromlabel() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[237, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeNumberFromLabel"]], "interactboc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOC"]], "interactbol() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOL"]], "interactcoupled() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactCoupled"]], "interacteoc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEOC"]], "interacteverynode() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEveryNode"]], "makecrosssectiongroups() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.makeCrossSectionGroups"]], "name (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager attribute)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.name"]], "updatenuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.updateNuclideTemperatures"]], "xstypeispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[237, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.xsTypeIsPregenerated"]], "one_dimensional_cylinder (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[238, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_CYLINDER"]], "one_dimensional_slab (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[238, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_SLAB"]], "two_dimensional_hex (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[238, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.TWO_DIMENSIONAL_HEX"]], "xsgeometrytypes (class in armi.physics.neutronics.crosssectionsettings)": [[238, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes"]], "xsmodelingoptions (class in armi.physics.neutronics.crosssectionsettings)": [[238, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions"]], "xssettingdef (class in armi.physics.neutronics.crosssectionsettings)": [[238, "armi.physics.neutronics.crossSectionSettings.XSSettingDef"]], "xssettings (class in armi.physics.neutronics.crosssectionsettings)": [[238, "armi.physics.neutronics.crossSectionSettings.XSSettings"]], "zero_dimensional (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[238, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ZERO_DIMENSIONAL"]], "armi.physics.neutronics.crosssectionsettings": [[238, "module-armi.physics.neutronics.crossSectionSettings"]], "bugroup (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[238, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.buGroup"]], "dump() (armi.physics.neutronics.crosssectionsettings.xssettingdef method)": [[238, "armi.physics.neutronics.crossSectionSettings.XSSettingDef.dump"]], "fluxispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[238, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.fluxIsPregenerated"]], "getstr() (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes class method)": [[238, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.getStr"]], "serialize() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[238, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.serialize"]], "serializexssettings() (in module armi.physics.neutronics.crosssectionsettings)": [[238, "armi.physics.neutronics.crossSectionSettings.serializeXSSettings"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[238, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.setDefaults"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xssettings method)": [[238, "armi.physics.neutronics.crossSectionSettings.XSSettings.setDefaults"]], "validate() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[238, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.validate"]], "xsispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[238, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsIsPregenerated"]], "xssettingsvalidator() (in module armi.physics.neutronics.crosssectionsettings)": [[238, "armi.physics.neutronics.crossSectionSettings.xsSettingsValidator"]], "xstype (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[238, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsType"]], "compareisotxslibraries (class in armi.physics.neutronics.diffisotxs)": [[239, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries"]], "addoptions() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[239, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.addOptions"]], "armi.physics.neutronics.diffisotxs": [[239, "module-armi.physics.neutronics.diffIsotxs"]], "invoke() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[239, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.invoke"]], "name (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[239, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.name"]], "settingsargument (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[239, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.settingsArgument"]], "group_structure (in module armi.physics.neutronics.energygroups)": [[240, "armi.physics.neutronics.energyGroups.GROUP_STRUCTURE"]], "armi.physics.neutronics.energygroups": [[240, "module-armi.physics.neutronics.energyGroups"]], "getfastfluxgroupcutoff() (in module armi.physics.neutronics.energygroups)": [[240, "armi.physics.neutronics.energyGroups.getFastFluxGroupCutoff"]], "getgroupstructure() (in module armi.physics.neutronics.energygroups)": [[240, "armi.physics.neutronics.energyGroups.getGroupStructure"]], "getgroupstructuretype() (in module armi.physics.neutronics.energygroups)": [[240, "armi.physics.neutronics.energyGroups.getGroupStructureType"]], "armi.physics.neutronics.fissionproductmodel": [[241, "module-armi.physics.neutronics.fissionProductModel"]], "fissionproductmodel (class in armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[242, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodel": [[242, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "describeinterfaces() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[242, "armi.physics.neutronics.fissionProductModel.fissionProductModel.describeInterfaces"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[242, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getAllFissionProductNames"]], "getgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[242, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getGlobalLumpedFissionProducts"]], "interactboc() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[242, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOC"]], "interactbol() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[242, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOL"]], "interactdistributestate() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[242, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactDistributeState"]], "name (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel attribute)": [[242, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.name"]], "removefissiongasesfromblocks() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[242, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.removeFissionGasesFromBlocks"]], "setallblocklfps() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[242, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllBlockLFPs"]], "setallcomponentfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[242, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllComponentFissionProducts"]], "setgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[242, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings": [[243, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "definesettings() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.defineSettings"]], "getfissionproductmodelsettingvalidators() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.getFissionProductModelSettingValidators"]], "fissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile"]], "lumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct"]], "lumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection"]], "armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct": [[244, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "createlfpsfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createLFPsFromFile"]], "createsinglelfpfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createSingleLFPFromFile"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.duplicate"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.duplicate"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNames"]], "getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNuclideBases"]], "getgaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getGaseousYieldFraction"]], "getlumpedfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getLumpedFissionProductNames"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFrac"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getMassFrac"]], "getmassfracdenom() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracDenom"]], "getmassfracs() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracs"]], "getnumberdensities() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getNumberDensities"]], "gettotalyield() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getTotalYield"]], "isgas() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.isGas"]], "items() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.items"]], "keys() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.keys"]], "lumpedfissionproductfactory() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.lumpedFissionProductFactory"]], "values() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[244, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.values"]], "armi.physics.neutronics.fissionproductmodel.tests": [[245, "module-armi.physics.neutronics.fissionProductModel.tests"]], "testfissionproductmodelexplicitmc2library (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[246, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library"]], "testfissionproductmodelexplicitmc2libraryslower (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[246, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower"]], "testfissionproductmodellumpedfissionproducts (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[246, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel": [[246, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "test_fpapplication() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[246, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_fpApplication"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[246, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_getAllFissionProductNames"]], "test_loadgloballfpsfromfile() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[246, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_loadGlobalLFPsFromFile"]], "test_nuclideflags() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[246, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclideFlags"]], "test_nuclidesinmodelalldepletableblocks() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2libraryslower method)": [[246, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower.test_nuclidesInModelAllDepletableBlocks"]], "test_nuclidesinmodelfuel() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[246, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclidesInModelFuel"]], "testfissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile"]], "testlumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct"]], "testlumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection"]], "testlumpedfissionproductsexplicit (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit"]], "testlumpedfissionproductsfromreferencefile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile"]], "testmo99lfp (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP"]], "armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct": [[247, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "getdummylfpfile() (in module armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.getDummyLFPFile"]], "test_createlfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createLFPs"]], "test_createreferencelfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createReferenceLFPs"]], "test_duplicate() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_duplicate"]], "test_explicitfissionproducts() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsexplicit method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit.test_explicitFissionProducts"]], "test_fissionproductyields() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsfromreferencefile method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile.test_fissionProductYields"]], "test_gaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_gaseousYieldFraction"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNames"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testmo99lfp method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP.test_getAllFissionProductNames"]], "test_getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNuclideBases"]], "test_getmassfrac() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getMassFrac"]], "test_getnumberdensities() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getNumberDensities"]], "test_getyield() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_getYield"]], "test_isgas() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_isGas"]], "armi.physics.neutronics.globalflux": [[248, "module-armi.physics.neutronics.globalFlux"]], "doseresultsmapper (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper"]], "globalfluxexecuter (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter"]], "globalfluxinterface (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface"]], "globalfluxinterfaceusingexecuters (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters"]], "globalfluxoptions (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions"]], "globalfluxresultmapper (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper"]], "apply() (armi.physics.neutronics.globalflux.globalfluxinterface.doseresultsmapper method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper.apply"]], "armi.physics.neutronics.globalflux.globalfluxinterface": [[249, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "calcreactionrates() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.calcReactionRates"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.calculateKeff"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.calculateKeff"]], "checkenergybalance() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.checkEnergyBalance"]], "clearflux() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.clearFlux"]], "computedparate() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.computeDpaRate"]], "edgeassembliesareneeded() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxexecuter method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter.edgeAssembliesAreNeeded"]], "fromreactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromReactor"]], "fromusersettings() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromUserSettings"]], "function (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.function"]], "getburnuppeakingfactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getBurnupPeakingFactor"]], "getdpaxs() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getDpaXs"]], "getexecuter() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuter"]], "getexecutercls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterOptions"]], "gethistoryparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface static method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getHistoryParams"]], "getiofilenames() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getIOFileNames"]], "getkeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getKeff"]], "getlabel() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getLabel"]], "getoptionscls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getOptionsCls"]], "gettightcouplingvalue() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getTightCouplingValue"]], "interactboc() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactBOC"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactCoupled"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactCoupled"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactEveryNode"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactEveryNode"]], "name (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.name"]], "updatecycledoseparams() (armi.physics.neutronics.globalflux.globalfluxinterface.doseresultsmapper method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper.updateCycleDoseParams"]], "updatedparate() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateDpaRate"]], "updatefluenceanddpa() (armi.physics.neutronics.globalflux.globalfluxinterface.doseresultsmapper method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper.updateFluenceAndDpa"]], "updateloadpaddose() (armi.physics.neutronics.globalflux.globalfluxinterface.doseresultsmapper method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper.updateLoadpadDose"]], "updatemaxdpaparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[249, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateMaxDpaParams"]], "armi.physics.neutronics.globalflux.tests": [[250, "module-armi.physics.neutronics.globalFlux.tests"]], "mockcore (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCore"]], "mockcoreparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCoreParams"]], "mockglobalfluxexecuter (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxExecuter"]], "mockglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface"]], "mockglobalfluxwithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters"]], "mockglobalfluxwithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform"]], "mockreactor (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactor"]], "mockreactorparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactorParams"]], "testglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface"]], "testglobalfluxinterfacewithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters"]], "testglobalfluxinterfacewithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform"]], "testglobalfluxoptions (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions"]], "testglobalfluxresultmapper (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper"]], "testglobalfluxutils (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils"]], "applydummyflux() (in module armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.applyDummyFlux"]], "armi.physics.neutronics.globalflux.tests.test_globalfluxinterface": [[251, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecuters method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecutersnonuniform method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform.getExecuterOptions"]], "interactboc() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactBOC"]], "interacteverynode() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactEveryNode"]], "test_calcreactionrates() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxutils method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils.test_calcReactionRates"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_calculateKeff"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_calculateKeff"]], "test_checkenergybalance() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_checkEnergyBalance"]], "test_computedparate() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_computeDpaRate"]], "test_executerinteraction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_executerInteraction"]], "test_executerinteractionnonuniformassems() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_executerInteractionNonUniformAssems"]], "test_getburnuppeakingfactor() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactor"]], "test_getburnuppeakingfactorzero() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactorZero"]], "test_getdpaxs() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getDpaXs"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getExecuterCls"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_getExecuterCls"]], "test_gethistoryparams() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getHistoryParams"]], "test_getiofilenames() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getIOFileNames"]], "test_gettightcouplingvalue() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getTightCouplingValue"]], "test_interaction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_interaction"]], "test_mapper() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_mapper"]], "test_readfromreactors() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromReactors"]], "test_readfromsettings() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromSettings"]], "test_savephysicsfiles() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_savePhysicsFiles"]], "test_settightcouplingdefaults() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_setTightCouplingDefaults"]], "test_updatecycledoseparams() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_updateCycleDoseParams"]], "test_updateloadpaddose() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[251, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_updateLoadpadDose"]], "armi.physics.neutronics.latticephysics": [[252, "module-armi.physics.neutronics.latticePhysics"]], "latticephysicsinterface (class in armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface"]], "armi.physics.neutronics.latticephysics.latticephysicsinterface": [[253, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "clearxs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.clearXS"]], "computecrosssections() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.computeCrossSections"]], "function (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface attribute)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.function"]], "generatelatticephysicsinputs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.generateLatticePhysicsInputs"]], "getreader() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getReader"]], "getrepresentativeblocks() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getRepresentativeBlocks"]], "getwriters() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getWriters"]], "interactboc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOC"]], "interactbol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOL"]], "interactcoupled() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactCoupled"]], "interacteoc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEOC"]], "interacteverynode() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEveryNode"]], "makecyclexsfilesasbasefiles() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.makeCycleXSFilesAsBaseFiles"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.readExistingXSLibraries"]], "setblockneutronvelocities() (in module armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.setBlockNeutronVelocities"]], "updatephysicscouplingcontrol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updatePhysicsCouplingControl"]], "updatexslibrary() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[253, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updateXSLibrary"]], "coolant_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.COOLANT_CATEGORY"]], "depletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.DEPLETABLE"]], "fission_product_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FISSION_PRODUCT_CATEGORY"]], "fuel_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FUEL_CATEGORY"]], "latticephysicswriter (class in armi.physics.neutronics.latticephysics.latticephysicswriter)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter"]], "represented (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.REPRESENTED"]], "structure_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.STRUCTURE_CATEGORY"]], "undepletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNDEPLETABLE"]], "unrepresented (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNREPRESENTED"]], "unused_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNUSED_CATEGORY"]], "armi.physics.neutronics.latticephysics.latticephysicswriter": [[254, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "write() (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.write"]], "armi.physics.neutronics.latticephysics.tests": [[255, "module-armi.physics.neutronics.latticePhysics.tests"]], "latticeinterfacetester (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester"]], "latticeinterfacetesterlibfalse (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTesterLibFalse"]], "testlatticephysicsinterface (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface"]], "testlatticephysicsinterfacebase (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterfaceBase"]], "testlatticephysicslibrarycreation (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticephysics.tests.test_latticeinterface": [[256, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.latticeinterfacetester method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester.readExistingXSLibraries"]], "test_getsuffix() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_getSuffix"]], "test_includegammaxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_includeGammaXS"]], "test_interactall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactAll"]], "test_interactboc() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNode"]], "test_interacteverynodeall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeAll"]], "test_interacteverynodefirstcoupled() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeFirstCoupled"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactFirstCoupledIteration"]], "test_latticephysicsinterface() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_latticePhysicsInterface"]], "test_libcreation_genxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS"]], "test_libcreation_genxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_2"]], "test_libcreation_genxs_3() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_3"]], "test_libcreation_nogenxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS"]], "test_libcreation_nogenxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[256, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS_2"]], "fakelatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter"]], "testlatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticephysics.tests.test_latticewriter": [[257, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "test_getallnuclidesbytemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInC"]], "test_getallnuclidesbytemperatureincexplicitfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCExplicitFissionProducts"]], "test_getallnuclidesbytemperatureincnone() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCNone"]], "test_getavgnuclidetemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAvgNuclideTemperatureInC"]], "test_getdetailedfpdensities() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFPDensities"]], "test_getdetailedfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProducts"]], "test_getdetailedfissionproductspass() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProductsPass"]], "test_getdriverblock() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDriverBlock"]], "test_getfueltemperature() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getFuelTemperature"]], "test_iscriticalbucklingsearchactive() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isCriticalBucklingSearchActive"]], "test_isgammaxsgenerationenabled() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isGammaXSGenerationEnabled"]], "test_issourcedriven() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isSourceDriven"]], "test_latticephysicswriter() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_latticePhysicsWriter"]], "test_setblockneutronvelocities() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_setBlockNeutronVelocities"]], "test_writetitle() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_writeTitle"]], "write() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.fakelatticephysicswriter method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter.write"]], "macroxsgenerationinterface (class in armi.physics.neutronics.macroxsgenerationinterface)": [[258, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface"]], "macroxsgenerator (class in armi.physics.neutronics.macroxsgenerationinterface)": [[258, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator"]], "armi.physics.neutronics.macroxsgenerationinterface": [[258, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "buildmacros() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface method)": [[258, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.buildMacros"]], "invokehook() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerator method)": [[258, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator.invokeHook"]], "name (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface attribute)": [[258, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.name"]], "armi.physics.neutronics.parameters": [[259, "module-armi.physics.neutronics.parameters"]], "getneutronicsparameterdefinitions() (in module armi.physics.neutronics.parameters)": [[259, "armi.physics.neutronics.parameters.getNeutronicsParameterDefinitions"]], "pd_plot (in module armi.physics.neutronics.reports)": [[260, "armi.physics.neutronics.reports.PD_PLOT"]], "armi.physics.neutronics.reports": [[260, "module-armi.physics.neutronics.reports"]], "generatelineplot() (in module armi.physics.neutronics.reports)": [[260, "armi.physics.neutronics.reports.generateLinePlot"]], "insertinitialcorefuelassem() (in module armi.physics.neutronics.reports)": [[260, "armi.physics.neutronics.reports.insertInitialCoreFuelAssem"]], "insertneutronicsbolcontent() (in module armi.physics.neutronics.reports)": [[260, "armi.physics.neutronics.reports.insertNeutronicsBOLContent"]], "insertneutronicsreport() (in module armi.physics.neutronics.reports)": [[260, "armi.physics.neutronics.reports.insertNeutronicsReport"]], "neutronicsplotting() (in module armi.physics.neutronics.reports)": [[260, "armi.physics.neutronics.reports.neutronicsPlotting"]], "armi.physics.neutronics.settings": [[261, "module-armi.physics.neutronics.settings"]], "definesettings() (in module armi.physics.neutronics.settings)": [[261, "armi.physics.neutronics.settings.defineSettings"]], "getneutronicssettingvalidators() (in module armi.physics.neutronics.settings)": [[261, "armi.physics.neutronics.settings.getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[262, "module-armi.physics.neutronics.tests"]], "testblockcollection (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection"]], "testblockcollectionaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage"]], "testblockcollectioncomponentaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage"]], "testblockcollectioncomponentaverage1dcylinder (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder"]], "testblockcollectionfluxweightedaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage"]], "testblockcollectionmedian (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian"]], "testcomponentaveraging (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging"]], "testcrosssectiongroupmanager (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager"]], "testxsnumberconverters (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters"]], "armi.physics.neutronics.tests.test_crosssectionmanager": [[263, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "makeblocks() (in module armi.physics.neutronics.tests.test_crosssectionmanager)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.makeBlocks"]], "test_componentaverage1dcylinder() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_ComponentAverage1DCylinder"]], "test_componentaveragerepblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage.test_ComponentAverageRepBlock"]], "test_add() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_add"]], "test_addxsgroupsfromblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_addXsGroupsFromBlocks"]], "test_calcweightedburnup() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_calcWeightedBurnup"]], "test_checkblocksimilarity() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_checkBlockSimilarity"]], "test_checkcomponentconsistency() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_checkComponentConsistency"]], "test_conversion() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion"]], "test_conversion_2digit() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion_2digit"]], "test_copypregeneratedfiles() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_copyPregeneratedFiles"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionmedian method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian.test_createRepresentativeBlock"]], "test_createrepresentativeblockdissimilar() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlockDissimilar"]], "test_createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_createRepresentativeBlocksUsingExistingBlocks"]], "test_createrepresentativeblocksusingexistingblocksdisablevalidblocktypes() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_createRepresentativeBlocksUsingExistingBlocksDisableValidBlockTypes"]], "test_disablebugroupupdates() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_disableBuGroupUpdates"]], "test_enablebugroupupdates() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_enableBuGroupUpdates"]], "test_getaveragecomponentnumberdensities() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentNumberDensities"]], "test_getaveragecomponenttemperature() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperature"]], "test_getaveragecomponenttemperaturenomass() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperatureNoMass"]], "test_getaveragecomponenttemperaturevariedweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperatureVariedWeights"]], "test_getblocksingroup() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_getBlocksInGroup"]], "test_getnextavailablexstype() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_getNextAvailableXsType"]], "test_getrepresentativeblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_getRepresentativeBlocks"]], "test_interactallcoupled() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactAllCoupled"]], "test_interactboc() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactEveryNode"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactFirstCoupledIteration"]], "test_invalidweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_invalidWeights"]], "test_is_pickleable() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_is_pickleable"]], "test_performaveragebycomponent() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_performAverageByComponent"]], "test_setbugroupbounds() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_setBuGroupBounds"]], "test_updateburnupgroups() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_updateBurnupGroups"]], "test_xsgmisrunbeforexs() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[263, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_xsgmIsRunBeforeXS"]], "testcrosssectionsettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings"]], "testxssettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings"]], "armi.physics.neutronics.tests.test_crosssectionsettings": [[264, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "test_badcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_badCrossSections"]], "test_casesettings() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_caseSettings"]], "test_crosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_crossSections"]], "test_csblockrepresentation() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_csBlockRepresentation"]], "test_csblockrepresentationfilelocation() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_csBlockRepresentationFileLocation"]], "test_homogeneousxsdefaultsettingassignment() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_homogeneousXsDefaultSettingAssignment"]], "test_optionalkey() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_optionalKey"]], "test_pregeneratedcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedCrossSections"]], "test_pregeneratedfluxinputs() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedFluxInputs"]], "test_prioritization() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_prioritization"]], "test_setdefaultsettingsbylowestbugrouphomogeneous() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestBuGroupHomogeneous"]], "test_setdefaultsettingsbylowestbugrouponedimensional() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestBuGroupOneDimensional"]], "test_xssettingssetdefault() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_xsSettingsSetDefault"]], "test_yamlio() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[264, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_yamlIO"]], "testcrosssectiontable (class in armi.physics.neutronics.tests.test_crosssectiontable)": [[265, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crosssectiontable": [[265, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "test_isotopicdepletioninterface() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[265, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_isotopicDepletionInterface"]], "test_maketable() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[265, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_makeTable"]], "testenergygroups (class in armi.physics.neutronics.tests.test_energygroups)": [[266, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energygroups": [[266, "module-armi.physics.neutronics.tests.test_energyGroups"]], "test_consistenciesbetweengroupstructureandgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[266, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_consistenciesBetweenGroupStructureAndGroupStructureType"]], "test_getfastfluxgroupcutoff() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[266, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_getFastFluxGroupCutoff"]], "test_invalidgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[266, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_invalidGroupStructureType"]], "testmacroxsgenerationinterface (class in armi.physics.neutronics.tests.test_macroxsgenerationinterface)": [[267, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroxsgenerationinterface": [[267, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "test_macroxsgenerationinterfacebasics() (armi.physics.neutronics.tests.test_macroxsgenerationinterface.testmacroxsgenerationinterface method)": [[267, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface.test_macroXSGenerationInterfaceBasics"]], "neutronicsreactortests (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[268, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests"]], "testneutronicsplugin (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[268, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsplugin": [[268, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "plugin (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin attribute)": [[268, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.plugin"]], "test_customsettingobjectio() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[268, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_customSettingObjectIO"]], "test_customsettingroundtrip() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[268, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_customSettingRoundTrip"]], "test_kineticsparameterassignment() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[268, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_kineticsParameterAssignment"]], "test_neutronicssettingsloaded() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[268, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_neutronicsSettingsLoaded"]], "test_neutronicssettingsvalidators() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[268, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_neutronicsSettingsValidators"]], "safetyplugin (class in armi.physics.safety)": [[269, "armi.physics.safety.SafetyPlugin"]], "armi.physics.safety": [[269, "module-armi.physics.safety"]], "definesettings() (armi.physics.safety.safetyplugin static method)": [[269, "armi.physics.safety.SafetyPlugin.defineSettings"]], "armi.physics.tests": [[270, "module-armi.physics.tests"]], "mockcore (class in armi.physics.tests.test_executers)": [[271, "armi.physics.tests.test_executers.MockCore"]], "mockparams (class in armi.physics.tests.test_executers)": [[271, "armi.physics.tests.test_executers.MockParams"]], "mockreactor (class in armi.physics.tests.test_executers)": [[271, "armi.physics.tests.test_executers.MockReactor"]], "testexecuters (class in armi.physics.tests.test_executers)": [[271, "armi.physics.tests.test_executers.TestExecuters"]], "testexecutionoptions (class in armi.physics.tests.test_executers)": [[271, "armi.physics.tests.test_executers.TestExecutionOptions"]], "armi.physics.tests.test_executers": [[271, "module-armi.physics.tests.test_executers"]], "test_collectinputsandoutputs() (armi.physics.tests.test_executers.testexecuters method)": [[271, "armi.physics.tests.test_executers.TestExecuters.test_collectInputsAndOutputs"]], "test_runexternalexecutable() (armi.physics.tests.test_executers.testexecuters method)": [[271, "armi.physics.tests.test_executers.TestExecuters.test_runExternalExecutable"]], "test_runningdirectorypath() (armi.physics.tests.test_executers.testexecutionoptions method)": [[271, "armi.physics.tests.test_executers.TestExecutionOptions.test_runningDirectoryPath"]], "test_updaterundir() (armi.physics.tests.test_executers.testexecuters method)": [[271, "armi.physics.tests.test_executers.TestExecuters.test_updateRunDir"]], "armi.physics.thermalhydraulics": [[272, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalhydraulics.const": [[273, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalhydraulics.parameters": [[274, "module-armi.physics.thermalHydraulics.parameters"]], "getparameterdefinitions() (in module armi.physics.thermalhydraulics.parameters)": [[274, "armi.physics.thermalHydraulics.parameters.getParameterDefinitions"]], "thermalhydraulicsplugin (class in armi.physics.thermalhydraulics.plugin)": [[275, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin"]], "afterconstructionofassemblies() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[275, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.afterConstructionOfAssemblies"]], "armi.physics.thermalhydraulics.plugin": [[275, "module-armi.physics.thermalHydraulics.plugin"]], "defineparameters() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[275, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineParameters"]], "definesettings() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[275, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[275, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[275, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.exposeInterfaces"]], "armi.physics.thermalhydraulics.settings": [[276, "module-armi.physics.thermalHydraulics.settings"]], "definesettings() (in module armi.physics.thermalhydraulics.settings)": [[276, "armi.physics.thermalHydraulics.settings.defineSettings"]], "definevalidators() (in module armi.physics.thermalhydraulics.settings)": [[276, "armi.physics.thermalHydraulics.settings.defineValidators"]], "armi.physics.thermalhydraulics.tests": [[277, "module-armi.physics.thermalHydraulics.tests"]], "testthermalhydraulicsplugin (class in armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin)": [[278, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin"]], "armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin": [[278, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"]], "plugin (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin attribute)": [[278, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.plugin"]], "test_thermalhydraulicssettingsloaded() (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin method)": [[278, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.test_thermalHydraulicsSettingsLoaded"]], "test_thermalhydraulicssettingsset() (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin method)": [[278, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.test_thermalHydraulicsSettingsSet"]], "armipluginmanager (class in armi.pluginmanager)": [[279, "armi.pluginManager.ArmiPluginManager"]], "armi.pluginmanager": [[279, "module-armi.pluginManager"]], "counter (armi.pluginmanager.armipluginmanager property)": [[279, "armi.pluginManager.ArmiPluginManager.counter"]], "register() (armi.pluginmanager.armipluginmanager method)": [[279, "armi.pluginManager.ArmiPluginManager.register"]], "unregister() (armi.pluginmanager.armipluginmanager method)": [[279, "armi.pluginManager.ArmiPluginManager.unregister"]], "armiplugin (class in armi.plugins)": [[280, "armi.plugins.ArmiPlugin"]], "pluginerror": [[280, "armi.plugins.PluginError"]], "userplugin (class in armi.plugins)": [[280, "armi.plugins.UserPlugin"]], "afterconstructionofassemblies() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.afterConstructionOfAssemblies"]], "armi.plugins": [[280, "module-armi.plugins"]], "collectinterfacedescriptions() (in module armi.plugins)": [[280, "armi.plugins.collectInterfaceDescriptions"]], "defineassemblytypes() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.defineBlockTypes"]], "defineblueprintssections() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.defineBlueprintsSections"]], "definecasedependencies() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.defineEntryPoints"]], "defineflags() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.defineFlags"]], "defineguiwidgets() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.defineGuiWidgets"]], "defineparameterrenames() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.defineParameterRenames"]], "defineparameterrenames() (armi.plugins.userplugin static method)": [[280, "armi.plugins.UserPlugin.defineParameterRenames"]], "defineparameters() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.defineParameters"]], "defineparameters() (armi.plugins.userplugin static method)": [[280, "armi.plugins.UserPlugin.defineParameters"]], "definesettings() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.defineSettings"]], "definesettings() (armi.plugins.userplugin static method)": [[280, "armi.plugins.UserPlugin.defineSettings"]], "definesettingsvalidators() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.defineSettingsValidators"]], "definesettingsvalidators() (armi.plugins.userplugin static method)": [[280, "armi.plugins.UserPlugin.defineSettingsValidators"]], "definesystembuilders() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.defineSystemBuilders"]], "exposeinterfaces() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.exposeInterfaces"]], "getaxialexpansionchanger() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.getAxialExpansionChanger"]], "getnewpluginmanager() (in module armi.plugins)": [[280, "armi.plugins.getNewPluginManager"]], "getoperatorclassfromruntype() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.getOperatorClassFromRunType"]], "getreportcontents() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.mpiActionRequiresReset"]], "onprocesscoreloading() (armi.plugins.armiplugin static method)": [[280, "armi.plugins.ArmiPlugin.onProcessCoreLoading"]], "reactorplugin (class in armi.reactor)": [[281, "armi.reactor.ReactorPlugin"]], "armi.reactor": [[281, "module-armi.reactor"]], "defineassemblytypes() (armi.reactor.reactorplugin static method)": [[281, "armi.reactor.ReactorPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.reactor.reactorplugin static method)": [[281, "armi.reactor.ReactorPlugin.defineBlockTypes"]], "definesystembuilders() (armi.reactor.reactorplugin static method)": [[281, "armi.reactor.ReactorPlugin.defineSystemBuilders"]], "getaxialexpansionchanger() (armi.reactor.reactorplugin static method)": [[281, "armi.reactor.ReactorPlugin.getAxialExpansionChanger"]], "assembly (class in armi.reactor.assemblies)": [[282, "armi.reactor.assemblies.Assembly"]], "cartesianassembly (class in armi.reactor.assemblies)": [[282, "armi.reactor.assemblies.CartesianAssembly"]], "database (armi.reactor.assemblies.assembly attribute)": [[282, "armi.reactor.assemblies.Assembly.DATABASE"]], "hexassembly (class in armi.reactor.assemblies)": [[282, "armi.reactor.assemblies.HexAssembly"]], "load_queue (armi.reactor.assemblies.assembly attribute)": [[282, "armi.reactor.assemblies.Assembly.LOAD_QUEUE"]], "not_in_core (armi.reactor.assemblies.assembly attribute)": [[282, "armi.reactor.assemblies.Assembly.NOT_IN_CORE"]], "rzassembly (class in armi.reactor.assemblies)": [[282, "armi.reactor.assemblies.RZAssembly"]], "spent_fuel_pool (armi.reactor.assemblies.assembly attribute)": [[282, "armi.reactor.assemblies.Assembly.SPENT_FUEL_POOL"]], "thrzassembly (class in armi.reactor.assemblies)": [[282, "armi.reactor.assemblies.ThRZAssembly"]], "add() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.add"]], "adjustresolution() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.adjustResolution"]], "armi.reactor.assemblies": [[282, "module-armi.reactor.assemblies"]], "calculatezcoords() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.calculateZCoords"]], "coords() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.coords"]], "countblockswithflags() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.countBlocksWithFlags"]], "doubleresolution() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.doubleResolution"]], "dump() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.dump"]], "getage() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getAge"]], "getarea() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getArea"]], "getaverageplenumtemperature() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getAveragePlenumTemperature"]], "getaxialmesh() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getAxialMesh"]], "getbindexfromzindex() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getBIndexFromZIndex"]], "getblockatelevation() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getBlockAtElevation"]], "getblocks() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getBlocks"]], "getblocksandz() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getBlocksAndZ"]], "getblocksbetweenelevations() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getBlocksBetweenElevations"]], "getdim() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getDim"]], "getelevationboundariesbyblocktype() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getElevationBoundariesByBlockType"]], "getelevationsmatchingparamvalue() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getElevationsMatchingParamValue"]], "getfirstblock() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getFirstBlock"]], "getfirstblockbytype() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getFirstBlockByType"]], "getheight() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getHeight"]], "getlocation() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getLocation"]], "getnum() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getNum"]], "getparamofzfunction() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getParamOfZFunction"]], "getparamvaluesatz() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getParamValuesAtZ"]], "getpinplenumvolumeincubicmeters() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getPinPlenumVolumeInCubicMeters"]], "getreactiveheight() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getReactiveHeight"]], "getsymmetryfactor() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getSymmetryFactor"]], "gettotalheight() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getTotalHeight"]], "getvolume() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.getVolume"]], "hascontinuouscoolantchannel() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.hasContinuousCoolantChannel"]], "insert() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.insert"]], "isonwhichsymmetryline() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.isOnWhichSymmetryLine"]], "makeaxialsnaplist() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.makeAxialSnapList"]], "makenamefromassemnum() (armi.reactor.assemblies.assembly static method)": [[282, "armi.reactor.assemblies.Assembly.makeNameFromAssemNum"]], "makeunique() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.makeUnique"]], "moveto() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.moveTo"]], "pdefs (armi.reactor.assemblies.assembly attribute)": [[282, "armi.reactor.assemblies.Assembly.pDefs"]], "paramcollectiontype (armi.reactor.assemblies.assembly attribute)": [[282, "armi.reactor.assemblies.Assembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.cartesianassembly attribute)": [[282, "armi.reactor.assemblies.CartesianAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.hexassembly attribute)": [[282, "armi.reactor.assemblies.HexAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.rzassembly attribute)": [[282, "armi.reactor.assemblies.RZAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.thrzassembly attribute)": [[282, "armi.reactor.assemblies.ThRZAssembly.paramCollectionType"]], "radialinner() (armi.reactor.assemblies.rzassembly method)": [[282, "armi.reactor.assemblies.RZAssembly.radialInner"]], "radialouter() (armi.reactor.assemblies.rzassembly method)": [[282, "armi.reactor.assemblies.RZAssembly.radialOuter"]], "reestablishblockorder() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.reestablishBlockOrder"]], "renameblocksaccordingtoassemblynum() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.renameBlocksAccordingToAssemblyNum"]], "renumber() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.renumber"]], "rotate() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.rotate"]], "rotate() (armi.reactor.assemblies.hexassembly method)": [[282, "armi.reactor.assemblies.HexAssembly.rotate"]], "setblockheights() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.setBlockHeights"]], "setblockmesh() (armi.reactor.assemblies.assembly method)": [[282, "armi.reactor.assemblies.Assembly.setBlockMesh"]], "thetainner() (armi.reactor.assemblies.rzassembly method)": [[282, "armi.reactor.assemblies.RZAssembly.thetaInner"]], "thetaouter() (armi.reactor.assemblies.rzassembly method)": [[282, "armi.reactor.assemblies.RZAssembly.thetaOuter"]], "armi.reactor.assemblyparameters": [[283, "module-armi.reactor.assemblyParameters"]], "getassemblyparameterdefinitions() (in module armi.reactor.assemblyparameters)": [[283, "armi.reactor.assemblyParameters.getAssemblyParameterDefinitions"]], "armi.reactor.blockparameters": [[284, "module-armi.reactor.blockParameters"]], "getblockparameterdefinitions() (in module armi.reactor.blockparameters)": [[284, "armi.reactor.blockParameters.getBlockParameterDefinitions"]], "block (class in armi.reactor.blocks)": [[285, "armi.reactor.blocks.Block"]], "cartesianblock (class in armi.reactor.blocks)": [[285, "armi.reactor.blocks.CartesianBlock"]], "hexblock (class in armi.reactor.blocks)": [[285, "armi.reactor.blocks.HexBlock"]], "pitch_component_type (armi.reactor.blocks.block attribute)": [[285, "armi.reactor.blocks.Block.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.cartesianblock attribute)": [[285, "armi.reactor.blocks.CartesianBlock.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.hexblock attribute)": [[285, "armi.reactor.blocks.HexBlock.PITCH_COMPONENT_TYPE"]], "pitch_dimension (armi.reactor.blocks.block attribute)": [[285, "armi.reactor.blocks.Block.PITCH_DIMENSION"]], "pitch_dimension (armi.reactor.blocks.cartesianblock attribute)": [[285, "armi.reactor.blocks.CartesianBlock.PITCH_DIMENSION"]], "thrzblock (class in armi.reactor.blocks)": [[285, "armi.reactor.blocks.ThRZBlock"]], "add() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.add"]], "adjustdensity() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.adjustDensity"]], "adjustuenrich() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.adjustUEnrich"]], "armi.reactor.blocks": [[285, "module-armi.reactor.blocks"]], "autocreatespatialgrids() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.autoCreateSpatialGrids"]], "autocreatespatialgrids() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.autoCreateSpatialGrids"]], "axialinner() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.axialInner"]], "axialouter() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.axialOuter"]], "breakfuelcomponentsintoindividuals() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.breakFuelComponentsIntoIndividuals"]], "completeinitialloading() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.completeInitialLoading"]], "coords() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.coords"]], "coords() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.coords"]], "core (armi.reactor.blocks.block property)": [[285, "armi.reactor.blocks.Block.core"]], "createhomogenizedcopy() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.createHomogenizedCopy"]], "createhomogenizedcopy() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.createHomogenizedCopy"]], "getarea() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getArea"]], "getblocks() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getBlocks"]], "getboronmassenrich() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getBoronMassEnrich"]], "getcaptureenergygenerationconstants() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getCaptureEnergyGenerationConstants"]], "getcomponentareafrac() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getComponentAreaFrac"]], "getcomponentsinlinkedorder() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getComponentsInLinkedOrder"]], "getcomponentsthatarelinkedto() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getComponentsThatAreLinkedTo"]], "getdim() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getDim"]], "getdimensions() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getDimensions"]], "getductip() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getDuctIP"]], "getductop() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getDuctOP"]], "getfissionenergygenerationconstants() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getFissionEnergyGenerationConstants"]], "getflowarea() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getFlowArea"]], "getflowareaperpin() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getFlowAreaPerPin"]], "getgammaenergydepositionconstants() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getGammaEnergyDepositionConstants"]], "getheight() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getHeight"]], "gethydraulicdiameter() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getHydraulicDiameter"]], "gethydraulicdiameter() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getHydraulicDiameter"]], "getintegratedmgflux() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getIntegratedMgFlux"]], "getlargestcomponent() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getLargestComponent"]], "getlocation() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getLocation"]], "getlumpedfissionproductcollection() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getLumpedFissionProductCollection"]], "getmaxarea() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.cartesianblock method)": [[285, "armi.reactor.blocks.CartesianBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.getMaxArea"]], "getmfp() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getMfp"]], "getmgflux() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getMgFlux"]], "getmicrosuffix() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getMicroSuffix"]], "getneutronenergydepositionconstants() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getNeutronEnergyDepositionConstants"]], "getnumpins() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getNumPins"]], "getpincenterflattoflat() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.cartesianblock method)": [[285, "armi.reactor.blocks.CartesianBlock.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getPinCenterFlatToFlat"]], "getpincoordinates() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getPinCoordinates"]], "getpinpitch() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getPinPitch"]], "getpinpitch() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getPinPitch"]], "getpintoductgap() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getPinToDuctGap"]], "getpitch() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getPitch"]], "getplenumpin() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getPlenumPin"]], "getpumoles() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getPuMoles"]], "getrotationnum() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getRotationNum"]], "getsmeardensity() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getSmearDensity"]], "getsortedcomponentsinsideofcomponent() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getSortedComponentsInsideOfComponent"]], "getsymmetryfactor() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.cartesianblock method)": [[285, "armi.reactor.blocks.CartesianBlock.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getSymmetryFactor"]], "gettotalenergygenerationconstants() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getTotalEnergyGenerationConstants"]], "geturaniummassenrich() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getUraniumMassEnrich"]], "getvolume() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getVolume"]], "getwettedperimeter() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getWettedPerimeter"]], "getwettedperimeter() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getWettedPerimeter"]], "getwirewrapcladgap() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getWireWrapCladGap"]], "haspinpitch() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.hasPinPitch"]], "haspinpitch() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.hasPinPitch"]], "initializepinlocations() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.initializePinLocations"]], "isplenumpin() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.isPlenumPin"]], "makename() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.makeName"]], "mergewithblock() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.mergeWithBlock"]], "pdefs (armi.reactor.blocks.block attribute)": [[285, "armi.reactor.blocks.Block.pDefs"]], "paramcollectiontype (armi.reactor.blocks.block attribute)": [[285, "armi.reactor.blocks.Block.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.cartesianblock attribute)": [[285, "armi.reactor.blocks.CartesianBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.hexblock attribute)": [[285, "armi.reactor.blocks.HexBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.thrzblock attribute)": [[285, "armi.reactor.blocks.ThRZBlock.paramCollectionType"]], "plotflux() (armi.reactor.blocks.block static method)": [[285, "armi.reactor.blocks.Block.plotFlux"]], "radialinner() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.radialInner"]], "radialouter() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.radialOuter"]], "remove() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.remove"]], "removeall() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.removeAll"]], "replaceblockwithblock() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.replaceBlockWithBlock"]], "rotate() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.rotate"]], "rotate() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.rotate"]], "setareafractionsreport() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setAreaFractionsReport"]], "setaxialexptargetcomp() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setAxialExpTargetComp"]], "setb10volparam() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setB10VolParam"]], "setbulimitinfo() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setBuLimitInfo"]], "setheight() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setHeight"]], "setpinmgfluxes() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setPinMgFluxes"]], "setpinpowers() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.setPinPowers"]], "setpitch() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setPitch"]], "setpitch() (armi.reactor.blocks.cartesianblock method)": [[285, "armi.reactor.blocks.CartesianBlock.setPitch"]], "setrotationnum() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.setRotationNum"]], "thetainner() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.thetaInner"]], "thetaouter() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.thetaOuter"]], "uniqid (armi.reactor.blocks.block attribute)": [[285, "armi.reactor.blocks.Block.uniqID"]], "updatecomponentdims() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.updateComponentDims"]], "verifyblockdims() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.verifyBlockDims"]], "blueprints (class in armi.reactor.blueprints)": [[286, "armi.reactor.blueprints.Blueprints"]], "adddefaultsfp() (armi.reactor.blueprints.blueprints method)": [[286, "armi.reactor.blueprints.Blueprints.addDefaultSFP"]], "armi.reactor.blueprints": [[286, "module-armi.reactor.blueprints"]], "attributes (armi.reactor.blueprints.blueprints attribute)": [[286, "armi.reactor.blueprints.Blueprints.attributes"]], "constructassem() (armi.reactor.blueprints.blueprints method)": [[286, "armi.reactor.blueprints.Blueprints.constructAssem"]], "load() (armi.reactor.blueprints.blueprints class method)": [[286, "armi.reactor.blueprints.Blueprints.load"]], "loadfromcs() (in module armi.reactor.blueprints)": [[286, "armi.reactor.blueprints.loadFromCs"]], "migrate() (armi.reactor.blueprints.blueprints class method)": [[286, "armi.reactor.blueprints.Blueprints.migrate"]], "migrate() (in module armi.reactor.blueprints)": [[286, "armi.reactor.blueprints.migrate"]], "assemblyblueprint (class in armi.reactor.blueprints.assemblyblueprint)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint"]], "assemblykeyedlist (class in armi.reactor.blueprints.assemblyblueprint)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList"]], "bycomponentmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[287, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications"]], "materialmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[287, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications"]], "modifications (class in armi.reactor.blueprints.assemblyblueprint)": [[287, "armi.reactor.blueprints.assemblyBlueprint.Modifications"]], "armi.reactor.blueprints.assemblyblueprint": [[287, "module-armi.reactor.blueprints.assemblyBlueprint"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.Modifications.attributes"]], "byspecifier (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist property)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.bySpecifier"]], "construct() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint method)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.construct"]], "getassemclass() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint class method)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.getAssemClass"]], "item_type (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.item_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.Modifications.key_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.Modifications.value_type"]], "blockblueprint (class in armi.reactor.blueprints.blockblueprint)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint"]], "blockkeyedlist (class in armi.reactor.blueprints.blockblueprint)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList"]], "blocklist (class in armi.reactor.blueprints.blockblueprint)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockList"]], "armi.reactor.blueprints.blockblueprint": [[288, "module-armi.reactor.blueprints.blockBlueprint"]], "attributes (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.attributes"]], "attributes (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.attributes"]], "construct() (armi.reactor.blueprints.blockblueprint.blockblueprint method)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.construct"]], "item_type (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blocklist attribute)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockList.item_type"]], "componentblueprint (class in armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint"]], "componentdimension (class in armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentDimension"]], "componentgroup (class in armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentGroup"]], "componentgroups (class in armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentGroups"]], "componentkeyedlist (class in armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList"]], "groupedcomponent (class in armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.GroupedComponent"]], "armi.reactor.blueprints.componentblueprint": [[289, "module-armi.reactor.blueprints.componentBlueprint"]], "attributes (armi.reactor.blueprints.componentblueprint.componentblueprint attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentdimension attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.groupedcomponent attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.GroupedComponent.attributes"]], "construct() (armi.reactor.blueprints.componentblueprint.componentblueprint method)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.construct"]], "expandelementals() (in module armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.expandElementals"]], "from_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.from_yaml"]], "insertdepletablenuclidekeys() (in module armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.insertDepletableNuclideKeys"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.item_type"]], "setcustomdensity() (armi.reactor.blueprints.componentblueprint.componentblueprint method)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.setCustomDensity"]], "to_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.to_yaml"]], "gridblueprint (class in armi.reactor.blueprints.gridblueprint)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint"]], "grids (class in armi.reactor.blueprints.gridblueprint)": [[290, "armi.reactor.blueprints.gridBlueprint.Grids"]], "triplet (class in armi.reactor.blueprints.gridblueprint)": [[290, "armi.reactor.blueprints.gridBlueprint.Triplet"]], "armi.reactor.blueprints.gridblueprint": [[290, "module-armi.reactor.blueprints.gridBlueprint"]], "attributes (armi.reactor.blueprints.gridblueprint.gridblueprint attribute)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.grids attribute)": [[290, "armi.reactor.blueprints.gridBlueprint.Grids.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.triplet attribute)": [[290, "armi.reactor.blueprints.gridBlueprint.Triplet.attributes"]], "construct() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.construct"]], "expandtofull() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.expandToFull"]], "getlocators() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getLocators"]], "getmultilocator() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getMultiLocator"]], "item_type (armi.reactor.blueprints.gridblueprint.grids attribute)": [[290, "armi.reactor.blueprints.gridBlueprint.Grids.item_type"]], "readfromlatticemap (armi.reactor.blueprints.gridblueprint.gridblueprint property)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.readFromLatticeMap"]], "savetostream() (in module armi.reactor.blueprints.gridblueprint)": [[290, "armi.reactor.blueprints.gridBlueprint.saveToStream"]], "customisotopic (class in armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic"]], "customisotopics (class in armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics"]], "nuclideflag (class in armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.NuclideFlag"]], "nuclideflags (class in armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.NuclideFlags"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopic method)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.apply"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopics method)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.apply"]], "armi.reactor.blueprints.isotopicoptions": [[291, "module-armi.reactor.blueprints.isotopicOptions"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflag attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.attributes"]], "autoupdatenuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.autoUpdateNuclideFlags"]], "density (armi.reactor.blueprints.isotopicoptions.customisotopic property)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.density"]], "eleexpandinfobasedoncodeendf() (in module armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.eleExpandInfoBasedOnCodeENDF"]], "fileasactiveorinert() (armi.reactor.blueprints.isotopicoptions.nuclideflag method)": [[291, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.fileAsActiveOrInert"]], "from_yaml() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml"]], "from_yaml_key_val() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml_key_val"]], "gendefaultnucflags() (in module armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.genDefaultNucFlags"]], "getallnuclidebasesbylibrary() (in module armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.getAllNuclideBasesByLibrary"]], "getdefaultnuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.getDefaultNuclideFlags"]], "item_type (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.item_type"]], "item_type (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.item_type"]], "key_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.key_type"]], "value_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.value_type"]], "systemblueprint (class in armi.reactor.blueprints.reactorblueprint)": [[292, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint"]], "systems (class in armi.reactor.blueprints.reactorblueprint)": [[292, "armi.reactor.blueprints.reactorBlueprint.Systems"]], "armi.reactor.blueprints.reactorblueprint": [[292, "module-armi.reactor.blueprints.reactorBlueprint"]], "attributes (armi.reactor.blueprints.reactorblueprint.systemblueprint attribute)": [[292, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.attributes"]], "attributes (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[292, "armi.reactor.blueprints.reactorBlueprint.Systems.attributes"]], "construct() (armi.reactor.blueprints.reactorblueprint.systemblueprint method)": [[292, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.construct"]], "item_type (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[292, "armi.reactor.blueprints.reactorBlueprint.Systems.item_type"]], "summarizematerialdata() (in module armi.reactor.blueprints.reactorblueprint)": [[292, "armi.reactor.blueprints.reactorBlueprint.summarizeMaterialData"]], "armi.reactor.blueprints.tests": [[293, "module-armi.reactor.blueprints.tests"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_assemblyblueprints)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyblueprints": [[294, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "loadcustomassembly() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.loadCustomAssembly"]], "test_checkparamconsistency() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.test_checkParamConsistency"]], "twoblockinput_correct (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_correct"]], "twoblockinput_wrongheights (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongHeights"]], "twoblockinput_wrongmatmods (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMatMods"]], "twoblockinput_wrongmeshpoints (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMeshPoints"]], "twoblockinput_wrongxstypes (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongXSTypes"]], "testgriddedblock (class in armi.reactor.blueprints.tests.test_blockblueprints)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockblueprints": [[295, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "test_blocklattice() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_blockLattice"]], "test_constructspatialgrid() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_constructSpatialGrid"]], "test_densityconsistentwithcomponentconstructor() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_densityConsistentWithComponentConstructor"]], "test_explicitflags() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_explicitFlags"]], "test_getlocatorsatlatticepositions() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_getLocatorsAtLatticePositions"]], "test_nonlatticecomponenthasrightmult() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_nonLatticeComponentHasRightMult"]], "testblueprints (class in armi.reactor.blueprints.tests.test_blueprints)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints"]], "testblueprintsschema (class in armi.reactor.blueprints.tests.test_blueprints)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints": [[296, "module-armi.reactor.blueprints.tests.test_blueprints"]], "test_assemblyparameters() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_assemblyParameters"]], "test_cladding_invalid() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_cladding_invalid"]], "test_componentdimensions() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_componentDimensions"]], "test_componentgroupinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_componentGroupInput"]], "test_components() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_components"]], "test_customisotopics() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_customIsotopics"]], "test_getassemblytypebyspecifier() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_getAssemblyTypeBySpecifier"]], "test_merge() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_merge"]], "test_noduplicatekeysinyamlblueprints() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_noDuplicateKeysInYamlBlueprints"]], "test_nuclideflags() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclideFlags"]], "test_nuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_nuclides"]], "test_nuclidesmc2v2() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v2"]], "test_nuclidesmc2v3() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v3"]], "test_roundtripcompletebp() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_roundTripCompleteBP"]], "test_specialisotopicvectors() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_specialIsotopicVectors"]], "test_toplevelcomponentinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_topLevelComponentInput"]], "test_tracenuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_traceNuclides"]], "test_withoutblocks() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_withoutBlocks"]], "testcomponentblueprint (class in armi.reactor.blueprints.tests.test_componentblueprint)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentblueprint": [[297, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "componentstring (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint attribute)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.componentString"]], "test_autodepletable() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_autoDepletable"]], "test_componentinitializationamericiumcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationAmericiumCustomIsotopics"]], "test_componentinitializationcontrolcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationControlCustomIsotopics"]], "test_componentinitializationincompleteburnchain() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationIncompleteBurnChain"]], "test_componentinitializationthoriumburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumBurnCustomIsotopics"]], "test_componentinitializationthoriumnoburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumNoBurnCustomIsotopics"]], "testcustomisotopics (class in armi.reactor.blueprints.tests.test_customisotopics)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics"]], "testcustomisotopics_errorconditions (class in armi.reactor.blueprints.tests.test_customisotopics)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions"]], "testnuclideflagsexpansion (class in armi.reactor.blueprints.tests.test_customisotopics)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customisotopics": [[298, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "test_customdensitylogsanderrors() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_customDensityLogsAndErrors"]], "test_densitiesappliedtononcustommaterials() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_densitiesAppliedToNonCustomMaterials"]], "test_densitymustbepositive() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_densityMustBePositive"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_expandedNatural"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.test_expandedNatural"]], "test_massfractionsareapplied() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_massFractionsAreApplied"]], "test_nonconformantelementname() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_nonConformantElementName"]], "test_numberdensities() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensities"]], "test_numberdensitiesanchor() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensitiesAnchor"]], "test_numberdensitiescannotspecifydensity() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_numberDensitiesCannotSpecifyDensity"]], "test_numberfractions() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberFractions"]], "test_unmodified() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_unmodified"]], "test_unrepresentedareonlynatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_unrepresentedAreOnlyNatural"]], "yamlbadblocks (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlBadBlocks"]], "yamlgoodblocks (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlGoodBlocks"]], "yamlpreamble (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlPreamble"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlString"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion attribute)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.yamlString"]], "yamlstringwitherror (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlStringWithError"]], "testgridbproundtrip (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip"]], "testgridblueprintssection (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection"]], "testrztgridblueprint (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint"]], "armi.reactor.blueprints.tests.test_gridblueprints": [[299, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_construct"]], "test_contents() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_contents"]], "test_geomfile() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_geomFile"]], "test_roundtrip() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_roundTrip"]], "test_simpleread() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleRead"]], "test_simplereadlatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadLatticeMap"]], "test_simplereadnolatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadNoLatticeMap"]], "test_tinymap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_tinyMap"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_materialmodifications)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialmodifications": [[300, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "b4cinput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.b4cInput"]], "loadb4cassembly() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.loadB4CAssembly"]], "loaduzrassembly() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.loadUZrAssembly"]], "test_bothu235zrwtfracmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_bothU235ZrWtFracModification"]], "test_checkbycomponentmaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_checkByComponentMaterialInput"]], "test_filtermaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_filterMaterialInput"]], "test_invalidcomponentmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalidComponentModification"]], "test_invalidmatmodname() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalidMatModName"]], "test_matmodsupthemro() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_matModsUpTheMRO"]], "test_materialmodificationlength() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_materialModificationLength"]], "test_nomaterialmodifications() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_noMaterialModifications"]], "test_theoreticaldensity() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_theoreticalDensity"]], "test_u235_wt_frac_bycomponent_modification1() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification1"]], "test_u235_wt_frac_bycomponent_modification2() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification2"]], "test_u235_wt_frac_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_modification"]], "test_zrwtfracmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_zrWtFracModification"]], "uzrinput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.uZrInput"]], "testreactorblueprints (class in armi.reactor.blueprints.tests.test_reactorblueprints)": [[301, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorblueprints": [[301, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[301, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_construct"]], "test_excorestructure() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[301, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_excoreStructure"]], "test_materialdatasummary() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[301, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_materialDataSummary"]], "test_simpleread() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[301, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_simpleRead"]], "test_spentfuelpool() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[301, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_spentFuelPool"]], "dimension_names (armi.reactor.components.derivedshape attribute)": [[302, "armi.reactor.components.DerivedShape.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.nullcomponent attribute)": [[302, "armi.reactor.components.NullComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[302, "armi.reactor.components.PositiveOrNegativeVolumeComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedcomponent attribute)": [[302, "armi.reactor.components.UnshapedComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.zeromasscomponent attribute)": [[302, "armi.reactor.components.ZeroMassComponent.DIMENSION_NAMES"]], "derivedshape (class in armi.reactor.components)": [[302, "armi.reactor.components.DerivedShape"]], "init_signature (armi.reactor.components.derivedshape attribute)": [[302, "armi.reactor.components.DerivedShape.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.nullcomponent attribute)": [[302, "armi.reactor.components.NullComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[302, "armi.reactor.components.PositiveOrNegativeVolumeComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedcomponent attribute)": [[302, "armi.reactor.components.UnshapedComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.zeromasscomponent attribute)": [[302, "armi.reactor.components.ZeroMassComponent.INIT_SIGNATURE"]], "nullcomponent (class in armi.reactor.components)": [[302, "armi.reactor.components.NullComponent"]], "positiveornegativevolumecomponent (class in armi.reactor.components)": [[302, "armi.reactor.components.PositiveOrNegativeVolumeComponent"]], "unshapedcomponent (class in armi.reactor.components)": [[302, "armi.reactor.components.UnshapedComponent"]], "unshapedvolumetriccomponent (class in armi.reactor.components)": [[302, "armi.reactor.components.UnshapedVolumetricComponent"]], "zeromasscomponent (class in armi.reactor.components)": [[302, "armi.reactor.components.ZeroMassComponent"]], "armi.reactor.components": [[302, "module-armi.reactor.components"]], "computevolume() (armi.reactor.components.derivedshape method)": [[302, "armi.reactor.components.DerivedShape.computeVolume"]], "factory() (in module armi.reactor.components)": [[302, "armi.reactor.components.factory"]], "fromcomponent() (armi.reactor.components.unshapedcomponent static method)": [[302, "armi.reactor.components.UnshapedComponent.fromComponent"]], "getboundingcircleouterdiameter() (armi.reactor.components.derivedshape method)": [[302, "armi.reactor.components.DerivedShape.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.nullcomponent method)": [[302, "armi.reactor.components.NullComponent.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.unshapedcomponent method)": [[302, "armi.reactor.components.UnshapedComponent.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.derivedshape method)": [[302, "armi.reactor.components.DerivedShape.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedcomponent method)": [[302, "armi.reactor.components.UnshapedComponent.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedvolumetriccomponent method)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.getComponentVolume"]], "getdimension() (armi.reactor.components.nullcomponent method)": [[302, "armi.reactor.components.NullComponent.getDimension"]], "getmaxvolume() (armi.reactor.components.derivedshape method)": [[302, "armi.reactor.components.DerivedShape.getMaxVolume"]], "getnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[302, "armi.reactor.components.ZeroMassComponent.getNumberDensity"]], "getvolume() (armi.reactor.components.derivedshape method)": [[302, "armi.reactor.components.DerivedShape.getVolume"]], "is3d (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.is3D"]], "material (armi.reactor.components.derivedshape attribute)": [[302, "armi.reactor.components.DerivedShape.material"]], "material (armi.reactor.components.nullcomponent attribute)": [[302, "armi.reactor.components.NullComponent.material"]], "material (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[302, "armi.reactor.components.PositiveOrNegativeVolumeComponent.material"]], "material (armi.reactor.components.unshapedcomponent attribute)": [[302, "armi.reactor.components.UnshapedComponent.material"]], "material (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.material"]], "material (armi.reactor.components.zeromasscomponent attribute)": [[302, "armi.reactor.components.ZeroMassComponent.material"]], "pdefs (armi.reactor.components.unshapedcomponent attribute)": [[302, "armi.reactor.components.UnshapedComponent.pDefs"]], "paramcollectiontype (armi.reactor.components.derivedshape attribute)": [[302, "armi.reactor.components.DerivedShape.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.nullcomponent attribute)": [[302, "armi.reactor.components.NullComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[302, "armi.reactor.components.PositiveOrNegativeVolumeComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedcomponent attribute)": [[302, "armi.reactor.components.UnshapedComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.zeromasscomponent attribute)": [[302, "armi.reactor.components.ZeroMassComponent.paramCollectionType"]], "setnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[302, "armi.reactor.components.ZeroMassComponent.setNumberDensity"]], "setvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.setVolume"]], "circle (class in armi.reactor.components.basicshapes)": [[303, "armi.reactor.components.basicShapes.Circle"]], "dimension_names (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.solidrectangle attribute)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.square attribute)": [[303, "armi.reactor.components.basicShapes.Square.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.DIMENSION_NAMES"]], "hexagon (class in armi.reactor.components.basicshapes)": [[303, "armi.reactor.components.basicShapes.Hexagon"]], "init_signature (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.solidrectangle attribute)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.square attribute)": [[303, "armi.reactor.components.basicShapes.Square.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.INIT_SIGNATURE"]], "rectangle (class in armi.reactor.components.basicshapes)": [[303, "armi.reactor.components.basicShapes.Rectangle"]], "solidrectangle (class in armi.reactor.components.basicshapes)": [[303, "armi.reactor.components.basicShapes.SolidRectangle"]], "square (class in armi.reactor.components.basicshapes)": [[303, "armi.reactor.components.basicShapes.Square"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.solidrectangle attribute)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.THERMAL_EXPANSION_DIMS"]], "triangle (class in armi.reactor.components.basicshapes)": [[303, "armi.reactor.components.basicShapes.Triangle"]], "armi.reactor.components.basicshapes": [[303, "module-armi.reactor.components.basicShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.circle method)": [[303, "armi.reactor.components.basicShapes.Circle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[303, "armi.reactor.components.basicShapes.Hexagon.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[303, "armi.reactor.components.basicShapes.Rectangle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.square method)": [[303, "armi.reactor.components.basicShapes.Square.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.circle method)": [[303, "armi.reactor.components.basicShapes.Circle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[303, "armi.reactor.components.basicShapes.Hexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[303, "armi.reactor.components.basicShapes.Rectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.square method)": [[303, "armi.reactor.components.basicShapes.Square.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.basicshapes.circle method)": [[303, "armi.reactor.components.basicShapes.Circle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.hexagon method)": [[303, "armi.reactor.components.basicShapes.Hexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.rectangle method)": [[303, "armi.reactor.components.basicShapes.Rectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.solidrectangle method)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.square method)": [[303, "armi.reactor.components.basicShapes.Square.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.triangle method)": [[303, "armi.reactor.components.basicShapes.Triangle.getComponentArea"]], "getperimeter() (armi.reactor.components.basicshapes.hexagon method)": [[303, "armi.reactor.components.basicShapes.Hexagon.getPerimeter"]], "getpitchdata() (armi.reactor.components.basicshapes.hexagon method)": [[303, "armi.reactor.components.basicShapes.Hexagon.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.rectangle method)": [[303, "armi.reactor.components.basicShapes.Rectangle.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.square method)": [[303, "armi.reactor.components.basicShapes.Square.getPitchData"]], "is3d (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.is3D"]], "is3d (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.is3D"]], "is3d (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.solidrectangle attribute)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.square attribute)": [[303, "armi.reactor.components.basicShapes.Square.is3D"]], "is3d (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.is3D"]], "isencapsulatedby() (armi.reactor.components.basicshapes.circle method)": [[303, "armi.reactor.components.basicShapes.Circle.isEncapsulatedBy"]], "islatticecomponent() (armi.reactor.components.basicshapes.rectangle method)": [[303, "armi.reactor.components.basicShapes.Rectangle.isLatticeComponent"]], "material (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.material"]], "material (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.material"]], "material (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.material"]], "material (armi.reactor.components.basicshapes.solidrectangle attribute)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.material"]], "material (armi.reactor.components.basicshapes.square attribute)": [[303, "armi.reactor.components.basicShapes.Square.material"]], "material (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.material"]], "pdefs (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.pDefs"]], "pdefs (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.pDefs"]], "paramcollectiontype (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.solidrectangle attribute)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.square attribute)": [[303, "armi.reactor.components.basicShapes.Square.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.paramCollectionType"]], "dimension_names (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedhexagon attribute)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedrectangle attribute)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedsquare attribute)": [[304, "armi.reactor.components.complexShapes.HoledSquare.DIMENSION_NAMES"]], "helix (class in armi.reactor.components.complexshapes)": [[304, "armi.reactor.components.complexShapes.Helix"]], "hexholedcircle (class in armi.reactor.components.complexshapes)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle"]], "holedhexagon (class in armi.reactor.components.complexshapes)": [[304, "armi.reactor.components.complexShapes.HoledHexagon"]], "holedrectangle (class in armi.reactor.components.complexshapes)": [[304, "armi.reactor.components.complexShapes.HoledRectangle"]], "holedsquare (class in armi.reactor.components.complexshapes)": [[304, "armi.reactor.components.complexShapes.HoledSquare"]], "init_signature (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedhexagon attribute)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedrectangle attribute)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedsquare attribute)": [[304, "armi.reactor.components.complexShapes.HoledSquare.INIT_SIGNATURE"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedhexagon attribute)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedrectangle attribute)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedsquare attribute)": [[304, "armi.reactor.components.complexShapes.HoledSquare.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.complexshapes": [[304, "module-armi.reactor.components.complexShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.complexshapes.helix method)": [[304, "armi.reactor.components.complexShapes.Helix.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.helix method)": [[304, "armi.reactor.components.complexShapes.Helix.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.hexholedcircle method)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedhexagon method)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedrectangle method)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedsquare method)": [[304, "armi.reactor.components.complexShapes.HoledSquare.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.complexshapes.helix method)": [[304, "armi.reactor.components.complexShapes.Helix.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.hexholedcircle method)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedhexagon method)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedrectangle method)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedsquare method)": [[304, "armi.reactor.components.complexShapes.HoledSquare.getComponentArea"]], "is3d (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.is3D"]], "material (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.material"]], "material (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.material"]], "material (armi.reactor.components.complexshapes.holedhexagon attribute)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.material"]], "material (armi.reactor.components.complexshapes.holedrectangle attribute)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.material"]], "material (armi.reactor.components.complexshapes.holedsquare attribute)": [[304, "armi.reactor.components.complexShapes.HoledSquare.material"]], "pdefs (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.pDefs"]], "pdefs (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedhexagon attribute)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedrectangle attribute)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedsquare attribute)": [[304, "armi.reactor.components.complexShapes.HoledSquare.pDefs"]], "paramcollectiontype (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedhexagon attribute)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedrectangle attribute)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedsquare attribute)": [[304, "armi.reactor.components.complexShapes.HoledSquare.paramCollectionType"]], "component (class in armi.reactor.components.component)": [[305, "armi.reactor.components.component.Component"]], "componenttype (class in armi.reactor.components.component)": [[305, "armi.reactor.components.component.ComponentType"]], "dimension_names (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.component.shapedcomponent attribute)": [[305, "armi.reactor.components.component.ShapedComponent.DIMENSION_NAMES"]], "init_signature (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.component.shapedcomponent attribute)": [[305, "armi.reactor.components.component.ShapedComponent.INIT_SIGNATURE"]], "non_dimension_names (armi.reactor.components.component.componenttype attribute)": [[305, "armi.reactor.components.component.ComponentType.NON_DIMENSION_NAMES"]], "shapedcomponent (class in armi.reactor.components.component)": [[305, "armi.reactor.components.component.ShapedComponent"]], "thermal_expansion_dims (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.THERMAL_EXPANSION_DIMS"]], "types (armi.reactor.components.component.componenttype attribute)": [[305, "armi.reactor.components.component.ComponentType.TYPES"]], "adjustdensityforheightexpansion() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.adjustDensityForHeightExpansion"]], "adjustmassenrichment() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.adjustMassEnrichment"]], "applymaterialmassfracstonumberdensities() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.applyMaterialMassFracsToNumberDensities"]], "armi.reactor.components.component": [[305, "module-armi.reactor.components.component"]], "backup() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.backUp"]], "clearcache() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.clearCache"]], "clearlinkedcache() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.clearLinkedCache"]], "componenttypeisvalid() (in module armi.reactor.components.component)": [[305, "armi.reactor.components.component.componentTypeIsValid"]], "computevolume() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.computeVolume"]], "containssolidmaterial() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.containsSolidMaterial"]], "containsvoidmaterial() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.containsVoidMaterial"]], "density() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.density"]], "dimensionislinked() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.dimensionIsLinked"]], "finalizeloadingfromdb() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.finalizeLoadingFromDB"]], "gasporosity (armi.reactor.components.component.component property)": [[305, "armi.reactor.components.component.Component.gasPorosity"]], "getarea() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getArea"]], "getboundingcircleouterdiameter() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getComponentVolume"]], "getdimension() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getDimension"]], "getdimensionnameslinkedto() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getDimensionNamesLinkedTo"]], "getenrichment() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getEnrichment"]], "getfuelmass() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getFuelMass"]], "getheightfactor() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getHeightFactor"]], "getintegratedmgflux() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getIntegratedMgFlux"]], "getlinkedcomponents() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getLinkedComponents"]], "getlumpedfissionproductcollection() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getLumpedFissionProductCollection"]], "getmass() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getMass"]], "getmassenrichment() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getMassEnrichment"]], "getmicrosuffix() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getMicroSuffix"]], "getnuclidenumberdensities() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getNuclides"]], "getnumberdensity() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getNumberDensity"]], "getpitchdata() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getPitchData"]], "getproperties() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getProperties"]], "getthermalexpansionfactor() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getThermalExpansionFactor"]], "getvolume() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getVolume"]], "is3d (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.is3D"]], "itercomponents() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.iterComponents"]], "liquidporosity (armi.reactor.components.component.component property)": [[305, "armi.reactor.components.component.Component.liquidPorosity"]], "material (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.material"]], "material (armi.reactor.components.component.shapedcomponent attribute)": [[305, "armi.reactor.components.component.ShapedComponent.material"]], "mergenuclidesinto() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.mergeNuclidesInto"]], "pdefs (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.pDefs"]], "paramcollectiontype (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.component.shapedcomponent attribute)": [[305, "armi.reactor.components.component.ShapedComponent.paramCollectionType"]], "printcontents() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.printContents"]], "resolvelinkeddims() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.resolveLinkedDims"]], "restorebackup() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.restoreBackup"]], "setarea() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setArea"]], "setdimension() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setDimension"]], "setdimensionreport() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setDimensionReport"]], "setlink() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setLink"]], "setlumpedfissionproducts() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setLumpedFissionProducts"]], "setname() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setName"]], "setnumberdensities() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setNumberDensities"]], "setnumberdensity() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setNumberDensity"]], "setproperties() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setProperties"]], "settemperature() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setTemperature"]], "setvolume() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setVolume"]], "temperatureinc (armi.reactor.components.component.component property)": [[305, "armi.reactor.components.component.Component.temperatureInC"]], "temperatureink (armi.reactor.components.component.component property)": [[305, "armi.reactor.components.component.Component.temperatureInK"]], "updatedims() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.updateDims"]], "updatenumberdensities() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.updateNumberDensities"]], "armi.reactor.components.componentparameters": [[306, "module-armi.reactor.components.componentParameters"]], "getcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getCircleParameterDefinitions"]], "getcomponentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getComponentParameterDefinitions"]], "getcubeparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getCubeParameterDefinitions"]], "gethelixparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getHelixParameterDefinitions"]], "gethexholedcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getHexHoledCircleParameterDefinitions"]], "gethexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getHexagonParameterDefinitions"]], "getholedhexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getHoledHexagonParameterDefinitions"]], "getholedrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getHoledRectangleParameterDefinitions"]], "getradialsegmentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getRadialSegmentParameterDefinitions"]], "getrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getRectangleParameterDefinitions"]], "gettriangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getTriangleParameterDefinitions"]], "getunshapedparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getUnshapedParameterDefinitions"]], "cube (class in armi.reactor.components.volumetricshapes)": [[307, "armi.reactor.components.volumetricShapes.Cube"]], "dimension_names (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.DIMENSION_NAMES"]], "differentialradialsegment (class in armi.reactor.components.volumetricshapes)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment"]], "init_signature (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.INIT_SIGNATURE"]], "radialsegment (class in armi.reactor.components.volumetricshapes)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment"]], "sphere (class in armi.reactor.components.volumetricshapes)": [[307, "armi.reactor.components.volumetricShapes.Sphere"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.volumetricshapes": [[307, "module-armi.reactor.components.volumetricShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.radialsegment method)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.sphere method)": [[307, "armi.reactor.components.volumetricShapes.Sphere.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.cube method)": [[307, "armi.reactor.components.volumetricShapes.Cube.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.radialsegment method)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.sphere method)": [[307, "armi.reactor.components.volumetricShapes.Sphere.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.cube method)": [[307, "armi.reactor.components.volumetricShapes.Cube.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.radialsegment method)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.sphere method)": [[307, "armi.reactor.components.volumetricShapes.Sphere.getComponentVolume"]], "is3d (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.is3D"]], "is3d (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.is3D"]], "material (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.material"]], "material (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.material"]], "material (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.material"]], "material (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.material"]], "pdefs (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.pDefs"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.paramCollectionType"]], "updatedims() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.updateDims"]], "armiobject (class in armi.reactor.composites)": [[308, "armi.reactor.composites.ArmiObject"]], "composite (class in armi.reactor.composites)": [[308, "armi.reactor.composites.Composite"]], "compositemodeltype (class in armi.reactor.composites)": [[308, "armi.reactor.composites.CompositeModelType"]], "flagserializer (class in armi.reactor.composites)": [[308, "armi.reactor.composites.FlagSerializer"]], "stateretainer (class in armi.reactor.composites)": [[308, "armi.reactor.composites.StateRetainer"]], "types (armi.reactor.composites.compositemodeltype attribute)": [[308, "armi.reactor.composites.CompositeModelType.TYPES"]], "add() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.add"]], "addmass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.addMass"]], "addmasses() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.addMasses"]], "adjustmassenrichment() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.adjustMassEnrichment"]], "adjustmassfrac() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.adjustMassFrac"]], "append() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.append"]], "armi.reactor.composites": [[308, "module-armi.reactor.composites"]], "backup() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.backUp"]], "calcavgparam() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.calcAvgParam"]], "calctotalparam() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.calcTotalParam"]], "changendensbyfactor() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.changeNDensByFactor"]], "clearcache() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.clearCache"]], "clearnumberdensities() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.clearNumberDensities"]], "constituentreport() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.constituentReport"]], "containsatleastonechildwithflags() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.containsAtLeastOneChildWithFlags"]], "containsheavymetal() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.containsHeavyMetal"]], "containsonlychildrenwithflags() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.containsOnlyChildrenWithFlags"]], "copyparamsfrom() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.copyParamsFrom"]], "copyparamstochildren() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.copyParamsToChildren"]], "density() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.density"]], "dochildrenhaveflags() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.doChildrenHaveFlags"]], "duplicate() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.duplicate"]], "expandallelementalstoisotopics() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.expandAllElementalsToIsotopics"]], "expandelementaltoisotopics() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.expandElementalToIsotopics"]], "extend() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.extend"]], "gathermaterialsbyvolume() (in module armi.reactor.composites)": [[308, "armi.reactor.composites.gatherMaterialsByVolume"]], "getancestor() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getAncestor"]], "getancestoranddistance() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getAncestorAndDistance"]], "getancestorwithflags() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getAncestorWithFlags"]], "getarea() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getArea"]], "getatomicweight() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getAtomicWeight"]], "getaveragetempinc() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getAverageTempInC"]], "getboundingcircleouterdiameter() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getBoundingCircleOuterDiameter"]], "getboundingindices() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getBoundingIndices"]], "getchildparamvalues() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getChildParamValues"]], "getchildren() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getChildren"]], "getchildren() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getChildren"]], "getchildrenoftype() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getChildrenOfType"]], "getchildrenwithflags() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getChildrenWithFlags"]], "getchildrenwithflags() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getChildrenWithFlags"]], "getchildrenwithnuclides() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getChildrenWithNuclides"]], "getcomponent() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getComponent"]], "getcomponentbyname() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getComponentByName"]], "getcomponentnames() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getComponentNames"]], "getcomponents() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getComponents"]], "getcomponents() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getComponents"]], "getcomponentsofmaterial() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getComponentsOfMaterial"]], "getcomponentsofshape() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getComponentsOfShape"]], "getdominantmaterial() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getDominantMaterial"]], "getdominantmaterial() (in module armi.reactor.composites)": [[308, "armi.reactor.composites.getDominantMaterial"]], "getfpmass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getFPMass"]], "getfissilemass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getFissileMass"]], "getfissilemassenrich() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getFissileMassEnrich"]], "getfuelmass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getFuelMass"]], "gethmdens() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getHMDens"]], "gethmmass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getHMMass"]], "gethmmoles() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getHMMoles"]], "getintegratedmgflux() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getIntegratedMgFlux"]], "getintegratedmgflux() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getIntegratedMgFlux"]], "getlumpedfissionproductcollection() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getLumpedFissionProductCollection"]], "getlumpedfissionproductcollection() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getLumpedFissionProductCollection"]], "getlumpedfissionproductsifnecessary() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getLumpedFissionProductsIfNecessary"]], "getmass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMass"]], "getmassfrac() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMassFrac"]], "getmassfracs() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMassFracs"]], "getmasses() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMasses"]], "getmaxarea() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMaxArea"]], "getmaxparam() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMaxParam"]], "getmgflux() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMgFlux"]], "getmicrosuffix() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMicroSuffix"]], "getminparam() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMinParam"]], "getname() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getName"]], "getnuclidenumberdensities() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNuclides"]], "getnumcomponents() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNumComponents"]], "getnumberdensities() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNumberDensities"]], "getnumberdensity() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNumberDensity"]], "getnumberofatoms() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNumberOfAtoms"]], "getparamnames() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getParamNames"]], "getparametercollection() (armi.reactor.composites.armiobject class method)": [[308, "armi.reactor.composites.ArmiObject.getParameterCollection"]], "getreactionratedict() (in module armi.reactor.composites)": [[308, "armi.reactor.composites.getReactionRateDict"]], "getreactionrates() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getReactionRates"]], "getsymmetryfactor() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getSymmetryFactor"]], "gettotalndens() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getTotalNDens"]], "gettype() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getType"]], "geturaniumnumenrich() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getUraniumNumEnrich"]], "getvolume() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getVolume"]], "getvolumefraction() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getVolumeFraction"]], "getvolumefractions() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getVolumeFractions"]], "hascomponents() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.hasComponents"]], "hasflags() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.hasFlags"]], "index() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.index"]], "insert() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.insert"]], "isfuel() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.isFuel"]], "itercomponents() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.iterComponents"]], "itercomponents() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.iterComponents"]], "moveto() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.moveTo"]], "namecontains() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.nameContains"]], "pdefs (armi.reactor.composites.armiobject attribute)": [[308, "armi.reactor.composites.ArmiObject.pDefs"]], "pack() (armi.reactor.composites.flagserializer static method)": [[308, "armi.reactor.composites.FlagSerializer.pack"]], "paramcollectiontype (armi.reactor.composites.armiobject attribute)": [[308, "armi.reactor.composites.ArmiObject.paramCollectionType"]], "paramcollectiontype (armi.reactor.composites.composite attribute)": [[308, "armi.reactor.composites.Composite.paramCollectionType"]], "printcontents() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.printContents"]], "remove() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.remove"]], "removeall() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.removeAll"]], "removemass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.removeMass"]], "requireslumpedfissionproducts() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.requiresLumpedFissionProducts"]], "resolvelinkeddims() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.resolveLinkedDims"]], "restorebackup() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.restoreBackup"]], "retainstate() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.retainState"]], "setchildren() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.setChildren"]], "setchildrenlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setChildrenLumpedFissionProducts"]], "setcomponentdimensionsreport() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setComponentDimensionsReport"]], "setlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setLumpedFissionProducts"]], "setmass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setMass"]], "setmassfrac() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setMassFrac"]], "setmassfracs() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setMassFracs"]], "setmasses() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setMasses"]], "setname() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setName"]], "setnumberdensities() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setNumberDensities"]], "setnumberdensity() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setNumberDensity"]], "settype() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setType"]], "sort() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.sort"]], "syncmpistate() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.syncMpiState"]], "unpack() (armi.reactor.composites.flagserializer class method)": [[308, "armi.reactor.composites.FlagSerializer.unpack"]], "updatenumberdensities() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.updateNumberDensities"]], "updateparamsfrom() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.updateParamsFrom"]], "version (armi.reactor.composites.flagserializer attribute)": [[308, "armi.reactor.composites.FlagSerializer.version"]], "armi.reactor.converters": [[309, "module-armi.reactor.converters"]], "armi.reactor.converters.axialexpansionchanger": [[310, "module-armi.reactor.converters.axialExpansionChanger"]], "assemblyaxiallinkage (class in armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage)": [[311, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage"]], "armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage": [[311, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"]], "axialexpansionchanger (class in armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[312, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger"]], "applycoldheightmassincrease() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[312, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.applyColdHeightMassIncrease"]], "armi.reactor.converters.axialexpansionchanger.axialexpansionchanger": [[312, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"]], "axiallyexpandassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[312, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.axiallyExpandAssembly"]], "expandcolddimstohot() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger class method)": [[312, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.expandColdDimsToHot"]], "getdefaultreferenceassem() (in module armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[312, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.getDefaultReferenceAssem"]], "makeassemsabletosnaptouniformmesh() (in module armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[312, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.makeAssemsAbleToSnapToUniformMesh"]], "managecoremesh() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[312, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.manageCoreMesh"]], "performprescribedaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[312, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.performPrescribedAxialExpansion"]], "performthermalaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[312, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.performThermalAxialExpansion"]], "reset() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[312, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.reset"]], "setassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[312, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.setAssembly"]], "expansiondata (class in armi.reactor.converters.axialexpansionchanger.expansiondata)": [[313, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData"]], "armi.reactor.converters.axialexpansionchanger.expansiondata": [[313, "module-armi.reactor.converters.axialExpansionChanger.expansionData"]], "computethermalexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[313, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.computeThermalExpansionFactors"]], "determinetargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[313, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.determineTargetComponent"]], "getexpansionfactor() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[313, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.getExpansionFactor"]], "getsolidcomponents() (in module armi.reactor.converters.axialexpansionchanger.expansiondata)": [[313, "armi.reactor.converters.axialExpansionChanger.expansionData.getSolidComponents"]], "istargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[313, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.isTargetComponent"]], "setexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[313, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.setExpansionFactors"]], "updatecomponenttemp() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[313, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.updateComponentTemp"]], "updatecomponenttempsby1dtempfield() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[313, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.updateComponentTempsBy1DTempField"]], "blockavgtocylconverter (class in armi.reactor.converters.blockconverters)": [[314, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter"]], "blockconverter (class in armi.reactor.converters.blockconverters)": [[314, "armi.reactor.converters.blockConverters.BlockConverter"]], "componentmerger (class in armi.reactor.converters.blockconverters)": [[314, "armi.reactor.converters.blockConverters.ComponentMerger"]], "hexcomponentstocylconverter (class in armi.reactor.converters.blockconverters)": [[314, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter"]], "multiplecomponentmerger (class in armi.reactor.converters.blockconverters)": [[314, "armi.reactor.converters.blockConverters.MultipleComponentMerger"]], "armi.reactor.converters.blockconverters": [[314, "module-armi.reactor.converters.blockConverters"]], "convert() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[314, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.blockconverter method)": [[314, "armi.reactor.converters.blockConverters.BlockConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.componentmerger method)": [[314, "armi.reactor.converters.blockConverters.ComponentMerger.convert"]], "convert() (armi.reactor.converters.blockconverters.hexcomponentstocylconverter method)": [[314, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.multiplecomponentmerger method)": [[314, "armi.reactor.converters.blockConverters.MultipleComponentMerger.convert"]], "dissolvecomponentintocomponent() (armi.reactor.converters.blockconverters.blockconverter method)": [[314, "armi.reactor.converters.blockConverters.BlockConverter.dissolveComponentIntoComponent"]], "getouterdiamfromidandarea() (in module armi.reactor.converters.blockconverters)": [[314, "armi.reactor.converters.blockConverters.getOuterDiamFromIDAndArea"]], "plotconvertedblock() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[314, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.plotConvertedBlock"]], "radiifromhexpitches() (in module armi.reactor.converters.blockconverters)": [[314, "armi.reactor.converters.blockConverters.radiiFromHexPitches"]], "radiifromhexsides() (in module armi.reactor.converters.blockconverters)": [[314, "armi.reactor.converters.blockConverters.radiiFromHexSides"]], "radiifromringofrods() (in module armi.reactor.converters.blockconverters)": [[314, "armi.reactor.converters.blockConverters.radiiFromRingOfRods"]], "restablishlinks() (armi.reactor.converters.blockconverters.blockconverter method)": [[314, "armi.reactor.converters.blockConverters.BlockConverter.restablishLinks"]], "expected_input_symmetry (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger attribute)": [[315, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.EXPECTED_INPUT_SYMMETRY"]], "edgeassemblychanger (class in armi.reactor.converters.geometryconverters)": [[315, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger"]], "fuelassemnummodifier (class in armi.reactor.converters.geometryconverters)": [[315, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier"]], "geometrychanger (class in armi.reactor.converters.geometryconverters)": [[315, "armi.reactor.converters.geometryConverters.GeometryChanger"]], "geometryconverter (class in armi.reactor.converters.geometryconverters)": [[315, "armi.reactor.converters.geometryConverters.GeometryConverter"]], "hextorzconverter (class in armi.reactor.converters.geometryconverters)": [[315, "armi.reactor.converters.geometryConverters.HexToRZConverter"]], "hextorzthetaconverter (class in armi.reactor.converters.geometryconverters)": [[315, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter"]], "thirdcorehextofullcorechanger (class in armi.reactor.converters.geometryconverters)": [[315, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger"]], "addedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[315, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.addEdgeAssemblies"]], "addring() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[315, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.addRing"]], "armi.reactor.converters.geometryconverters": [[315, "module-armi.reactor.converters.geometryConverters"]], "convert() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[315, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.convert"]], "convert() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[315, "armi.reactor.converters.geometryConverters.GeometryChanger.convert"]], "convert() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[315, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.convert"]], "convert() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[315, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.convert"]], "createhomogenizedrztblock() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[315, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.createHomogenizedRZTBlock"]], "plotconvertedreactor() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[315, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.plotConvertedReactor"]], "removeedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[315, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.removeEdgeAssemblies"]], "reset() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[315, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.reset"]], "reset() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[315, "armi.reactor.converters.geometryConverters.GeometryChanger.reset"]], "reset() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[315, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.reset"]], "restorepreviousgeometry() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[315, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.restorePreviousGeometry"]], "scaleparamsrelatedtosymmetry() (armi.reactor.converters.geometryconverters.edgeassemblychanger static method)": [[315, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.scaleParamsRelatedToSymmetry"]], "meshconverter (class in armi.reactor.converters.meshconverters)": [[316, "armi.reactor.converters.meshConverters.MeshConverter"]], "rzthetareactormeshconverter (class in armi.reactor.converters.meshconverters)": [[316, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter"]], "rzthetareactormeshconverterbyringcompositionaxialbins (class in armi.reactor.converters.meshconverters)": [[316, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialBins"]], "rzthetareactormeshconverterbyringcompositionaxialcoordinates (class in armi.reactor.converters.meshconverters)": [[316, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"]], "rzthetareactormeshconverterbyringcompositionaxialflags (class in armi.reactor.converters.meshconverters)": [[316, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialFlags"]], "armi.reactor.converters.meshconverters": [[316, "module-armi.reactor.converters.meshConverters"]], "checklastvalueinlist() (in module armi.reactor.converters.meshconverters)": [[316, "armi.reactor.converters.meshConverters.checkLastValueInList"]], "checklistbounds() (in module armi.reactor.converters.meshconverters)": [[316, "armi.reactor.converters.meshConverters.checkListBounds"]], "generatebins() (in module armi.reactor.converters.meshconverters)": [[316, "armi.reactor.converters.meshConverters.generateBins"]], "generatemesh() (armi.reactor.converters.meshconverters.meshconverter method)": [[316, "armi.reactor.converters.meshConverters.MeshConverter.generateMesh"]], "generatemesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[316, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.generateMesh"]], "setaxialmesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[316, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setAxialMesh"]], "setringstoconvert() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[316, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setRingsToConvert"]], "setthetamesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[316, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setThetaMesh"]], "writemeshdata() (armi.reactor.converters.meshconverters.meshconverter method)": [[316, "armi.reactor.converters.meshConverters.MeshConverter.writeMeshData"]], "writemeshdata() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[316, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.writeMeshData"]], "armi.reactor.converters.parametersweeps": [[317, "module-armi.reactor.converters.parameterSweeps"]], "custommodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[318, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier"]], "neutronicconvergencemodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[318, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier"]], "priority (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter attribute)": [[318, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.PRIORITY"]], "parametersweepconverter (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[318, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter"]], "settingsmodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[318, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier"]], "armi.reactor.converters.parametersweeps.generalparametersweepconverters": [[318, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.custommodifier method)": [[318, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.neutronicconvergencemodifier method)": [[318, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter method)": [[318, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.settingsmodifier method)": [[318, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier.convert"]], "adjustcladthicknessbyid() (in module armi.reactor.converters.pintypeblockconverters)": [[319, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByID"]], "adjustcladthicknessbyod() (in module armi.reactor.converters.pintypeblockconverters)": [[319, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByOD"]], "adjustsmeardensity() (in module armi.reactor.converters.pintypeblockconverters)": [[319, "armi.reactor.converters.pinTypeBlockConverters.adjustSmearDensity"]], "armi.reactor.converters.pintypeblockconverters": [[319, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests": [[320, "module-armi.reactor.converters.tests"]], "axialexpansiontestbase (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase"]], "fakemat (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat"]], "fakematexception (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException"]], "steel_component_lst (armi.reactor.converters.tests.test_axialexpansionchanger.axialexpansiontestbase attribute)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase.Steel_Component_Lst"]], "temperature (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.Temperature"]], "testaxialexpansionheight (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight"]], "testconservation (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation"]], "testdeterminetargetcomponent (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent"]], "testexceptions (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions"]], "testgetsolidcomponents (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents"]], "testinputheightsconsideredhot (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot"]], "testlinkage (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage"]], "testmanagecoremesh (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh"]], "armi.reactor.converters.tests.test_axialexpansionchanger": [[321, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "buildtestassemblywithfakematerial() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.buildTestAssemblyWithFakeMaterial"]], "checkcoldblockheight() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.checkColdBlockHeight"]], "checkcoldheightblockmass() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.checkColdHeightBlockMass"]], "complexconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.complexConservationTest"]], "expandassemformassconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.expandAssemForMassConservationTest"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.linearExpansionPercent"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.linearExpansionPercent"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat attribute)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.name"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception attribute)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.name"]], "runtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.runTest"]], "test_annularhexoverlappingthickannularhex() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_AnnularHexOverlappingThickAnnularHex"]], "test_assemblyaxialexpansionexception() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_AssemblyAxialExpansionException"]], "test_assemblyaxialexpansionheight() (armi.reactor.converters.tests.test_axialexpansionchanger.testaxialexpansionheight method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight.test_AssemblyAxialExpansionHeight"]], "test_annularpinnotoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_annularPinNotOverlappingWithAnnulus"]], "test_annularpinoverlappingwithannuls() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_annularPinOverlappingWithAnnuls"]], "test_coldassemblyexpansion() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.test_coldAssemblyExpansion"]], "test_computethermalexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_computeThermalExpansionFactors"]], "test_determinelinked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_determineLinked"]], "test_determinetargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponent"]], "test_determinetargetcomponentblockwithmultipleflags() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponentBlockWithMultipleFlags"]], "test_differentmultnotoverlapping() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_differentMultNotOverlapping"]], "test_getlinkedcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_getLinkedComponents"]], "test_getsolidcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testgetsolidcomponents method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents.test_getSolidComponents"]], "test_isfuellocked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isFuelLocked"]], "test_istopdummyblockpresent() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isTopDummyBlockPresent"]], "test_liquids() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_liquids"]], "test_managecoremesh() (armi.reactor.converters.tests.test_axialexpansionchanger.testmanagecoremesh method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh.test_manageCoreMesh"]], "test_manuallysettargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_manuallySetTargetComponent"]], "test_nomovementaclp() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_noMovementACLP"]], "test_overlappingsolidpins() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_overlappingSolidPins"]], "test_prescribedexpansioncontractionconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_prescribedExpansionContractionConservation"]], "test_reset() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_reset"]], "test_setexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_setExpansionFactors"]], "test_solidpinnotoverlappingannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_solidPinNotOverlappingAnnulus"]], "test_solidpinoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_solidPinOverlappingWithAnnulus"]], "test_specifytargetcomponent_notfound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_NotFound"]], "test_specifytargetcomponent_singlesolid() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_singleSolid"]], "test_specifytargetcomponet_multiplefound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponet_MultipleFound"]], "test_targetcomponentmassconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_targetComponentMassConservation"]], "test_thermalexpansioncontractionconservation_complex() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_thermalExpansionContractionConservation_complex"]], "test_thermalexpansioncontractionconservation_simple() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_thermalExpansionContractionConservation_simple"]], "test_thinannularpinoverlappingwiththickannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_thinAnnularPinOverlappingWithThickAnnulus"]], "test_unshapedcomponentandcircle() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_unshapedComponentAndCircle"]], "test_updatecomponenttempsby1dtempfieldruntimeerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldRuntimeError"]], "test_updatecomponenttempsby1dtempfieldvalueerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[321, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldValueError"]], "testblockconverter (class in armi.reactor.converters.tests.test_blockconverter)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter"]], "testtocircles (class in armi.reactor.converters.tests.test_blockconverter)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestToCircles"]], "armi.reactor.converters.tests.test_blockconverter": [[322, "module-armi.reactor.converters.tests.test_blockConverter"]], "buildcontrolblockwithlinkednegativeareacomponent() (in module armi.reactor.converters.tests.test_blockconverter)": [[322, "armi.reactor.converters.tests.test_blockConverter.buildControlBlockWithLinkedNegativeAreaComponent"]], "buildsimplefuelblocknegativearea() (in module armi.reactor.converters.tests.test_blockconverter)": [[322, "armi.reactor.converters.tests.test_blockConverter.buildSimpleFuelBlockNegativeArea"]], "test_build_nthring() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_build_NthRing"]], "test_convert() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convert"]], "test_convertcartesianlatticewithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertCartesianLatticeWithFuelDriver"]], "test_converthexwithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriver"]], "test_converthexwithfueldriveronnegativecomponentareablock() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"]], "test_dissolveintonegativearea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveIntoNegativeArea"]], "test_dissolveintozeroarea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveIntoZeroArea"]], "test_dissolvelinerintoclad() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveLinerIntoClad"]], "test_dissolvemultiple() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveMultiple"]], "test_dissolvenegativearea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveNegativeArea"]], "test_dissolvewireintocoolant() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveWireIntoCoolant"]], "test_dissolvezeroarea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveZeroArea"]], "test_fromhex() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromHex"]], "test_fromringofrods() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[322, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromRingOfRods"]], "testedgeassemblychanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger"]], "testgeometryconverters (class in armi.reactor.converters.tests.test_geometryconverters)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters"]], "testhextorzconverter (class in armi.reactor.converters.tests.test_geometryconverters)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter"]], "testthirdcorehextofullcorechanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryconverters": [[323, "module-armi.reactor.converters.tests.test_geometryConverters"]], "test_addring() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_addRing"]], "test_convert() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_convert"]], "test_createhomogenizedrztblock() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_createHomogenizedRZTBlock"]], "test_edgeassemblies() (armi.reactor.converters.tests.test_geometryconverters.testedgeassemblychanger method)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger.test_edgeAssemblies"]], "test_getassembliesinsector() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_getAssembliesInSector"]], "test_growtofullcorefromthirdcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_growToFullCoreFromThirdCore"]], "test_initnewfullreactor() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_initNewFullReactor"]], "test_setnumberoffuelassems() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_setNumberOfFuelAssems"]], "test_skipgrowtofullcorewhenalreadyfullcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[323, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_skipGrowToFullCoreWhenAlreadyFullCore"]], "testrzreactormeshconverter (class in armi.reactor.converters.tests.test_meshconverters)": [[324, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshconverters": [[324, "module-armi.reactor.converters.tests.test_meshConverters"]], "test_meshbyringcompositionaxialbinslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[324, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsLargeCore"]], "test_meshbyringcompositionaxialbinssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[324, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsSmallCore"]], "test_meshbyringcompositionaxialcoordinateslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[324, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesLargeCore"]], "test_meshbyringcompositionaxialcoordinatessmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[324, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesSmallCore"]], "test_meshbyringcompositionaxialflagslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[324, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsLargeCore"]], "test_meshbyringcompositionaxialflagssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[324, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsSmallCore"]], "massconservationtests (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[325, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests"]], "testpintypeconverters (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[325, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pintypeblockconverters": [[325, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "test_adjustcladthicknessbyid() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[325, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByID"]], "test_adjustcladthicknessbyod() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[325, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByOD"]], "test_adjustsmeardensity() (armi.reactor.converters.tests.test_pintypeblockconverters.massconservationtests method)": [[325, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests.test_adjustSmearDensity"]], "dummyfluxoptions (class in armi.reactor.converters.tests.test_uniformmesh)": [[326, "armi.reactor.converters.tests.test_uniformMesh.DummyFluxOptions"]], "testassemblyuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh"]], "testconverterfactory (class in armi.reactor.converters.tests.test_uniformmesh)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory"]], "testgammauniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh"]], "testparamconversion (class in armi.reactor.converters.tests.test_uniformmesh)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion"]], "testuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh"]], "testuniformmeshcomponents (class in armi.reactor.converters.tests.test_uniformmesh)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents"]], "testuniformmeshgenerator (class in armi.reactor.converters.tests.test_uniformmesh)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator"]], "testuniformmeshnonuniformassemflags (class in armi.reactor.converters.tests.test_uniformmesh)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags"]], "applynonuniformheightdistribution() (in module armi.reactor.converters.tests.test_uniformmesh)": [[326, "armi.reactor.converters.tests.test_uniformMesh.applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformmesh": [[326, "module-armi.reactor.converters.tests.test_uniformMesh"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_applyStateToOriginal"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_applyStateToOriginal"]], "test_blueprintcopy() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshcomponents method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents.test_blueprintCopy"]], "test_clearassemblystate() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_clearAssemblyState"]], "test_computeaverageaxialmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_computeAverageAxialMesh"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_convertNumberDensities"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_convertNumberDensities"]], "test_converterfactory() (armi.reactor.converters.tests.test_uniformmesh.testconverterfactory method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory.test_converterFactory"]], "test_filtermesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filterMesh"]], "test_filteredtopandbottom() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filteredTopAndBottom"]], "test_generatecommonmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_generateCommonMesh"]], "test_makeassemuniformmeshparammappingsamemesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemUniformMeshParamMappingSameMesh"]], "test_makeassemwithuniformmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMesh"]], "test_makeassemwithuniformmeshsubmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMeshSubmesh"]], "test_reactorconversion() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshnonuniformassemflags method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags.test_reactorConversion"]], "test_setstatefromoverlaps() (armi.reactor.converters.tests.test_uniformmesh.testparamconversion method)": [[326, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion.test_setStateFromOverlaps"]], "gammauniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[327, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter"]], "neutronicsuniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[327, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter"]], "parammapper (class in armi.reactor.converters.uniformmesh)": [[327, "armi.reactor.converters.uniformMesh.ParamMapper"]], "uniformmeshgenerator (class in armi.reactor.converters.uniformmesh)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGenerator"]], "uniformmeshgeometryconverter (class in armi.reactor.converters.uniformmesh)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter"]], "applystatetooriginal() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.applyStateToOriginal"]], "armi.reactor.converters.uniformmesh": [[327, "module-armi.reactor.converters.uniformMesh"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[327, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[327, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.blockParamMappingCategories"]], "clearstateonassemblies() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.clearStateOnAssemblies"]], "convert() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.convert"]], "converterfactory() (in module armi.reactor.converters.uniformmesh)": [[327, "armi.reactor.converters.uniformMesh.converterFactory"]], "generatecommonmesh() (armi.reactor.converters.uniformmesh.uniformmeshgenerator method)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGenerator.generateCommonMesh"]], "initnewreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.initNewReactor"]], "makeassemwithuniformmesh() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.makeAssemWithUniformMesh"]], "paramgetter() (armi.reactor.converters.uniformmesh.parammapper method)": [[327, "armi.reactor.converters.uniformMesh.ParamMapper.paramGetter"]], "paramsetter() (armi.reactor.converters.uniformmesh.parammapper static method)": [[327, "armi.reactor.converters.uniformMesh.ParamMapper.paramSetter"]], "plotconvertedreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.plotConvertedReactor"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[327, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[327, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reactorParamMappingCategories"]], "reset() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reset"]], "setassemblystatefromoverlaps() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.setAssemblyStateFromOverlaps"]], "setnumberdensitiesfromoverlaps() (in module armi.reactor.converters.uniformmesh)": [[327, "armi.reactor.converters.uniformMesh.setNumberDensitiesFromOverlaps"]], "updatereactionrates() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[327, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.updateReactionRates"]], "core (class in armi.reactor.cores)": [[328, "armi.reactor.cores.Core"]], "add() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.add"]], "addmorenodes() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.addMoreNodes"]], "armi.reactor.cores": [[328, "module-armi.reactor.cores"]], "buildcircularringdictionary() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.buildCircularRingDictionary"]], "buildmanualzones() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.buildManualZones"]], "calcblockmaxes() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.calcBlockMaxes"]], "countblockswithflags() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.countBlocksWithFlags"]], "countfuelaxialblocks() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.countFuelAxialBlocks"]], "createassemblyoftype() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.createAssemblyOfType"]], "createfreshfeed() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.createFreshFeed"]], "findallaxialmeshpoints() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.findAllAxialMeshPoints"]], "findallazimeshpoints() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.findAllAziMeshPoints"]], "findallmeshpoints() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.findAllMeshPoints"]], "findallradmeshpoints() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.findAllRadMeshPoints"]], "findaxialmeshindexof() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.findAxialMeshIndexOf"]], "findneighbors() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.findNeighbors"]], "genassembliesaddedthiscycle() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.genAssembliesAddedThisCycle"]], "genblocksbylocname() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.genBlocksByLocName"]], "geomtype (armi.reactor.cores.core property)": [[328, "armi.reactor.cores.Core.geomType"]], "getallxssuffixes() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAllXsSuffixes"]], "getassemblies() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAssemblies"]], "getassembliesincircularring() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAssembliesInCircularRing"]], "getassembliesinring() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAssembliesInRing"]], "getassembliesinsquareorhexring() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAssembliesInSquareOrHexRing"]], "getassembliesoftype() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAssembliesOfType"]], "getassembliesonsymmetryline() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAssembliesOnSymmetryLine"]], "getassembly() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAssembly"]], "getassemblybyname() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAssemblyByName"]], "getassemblypitch() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAssemblyPitch"]], "getassemblywithassemnum() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAssemblyWithAssemNum"]], "getassemblywithstringlocation() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAssemblyWithStringLocation"]], "getavgtemp() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getAvgTemp"]], "getblockbyname() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getBlockByName"]], "getblocks() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getBlocks"]], "getblocksbyindices() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getBlocksByIndices"]], "getcoreradius() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getCoreRadius"]], "getfirstassembly() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getFirstAssembly"]], "getfirstblock() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getFirstBlock"]], "getfirstfuelblockaxialnode() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getFirstFuelBlockAxialNode"]], "getfluxvector() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getFluxVector"]], "getfuelbottomheight() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getFuelBottomHeight"]], "getlocationcontents() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getLocationContents"]], "getmaxassembliesinhexring() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getMaxAssembliesInHexRing"]], "getmaxblockparam() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getMaxBlockParam"]], "getmaxnumpins() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getMaxNumPins"]], "getminimumpercentfluxinfuel() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getMinimumPercentFluxInFuel"]], "getnozzletypes() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getNozzleTypes"]], "getnuclidecategories() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getNuclideCategories"]], "getnumassemblieswithallringsfilledout() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getNumAssembliesWithAllRingsFilledOut"]], "getnumenergygroups() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getNumEnergyGroups"]], "getnumhexrings() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getNumHexRings"]], "getnumrings() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getNumRings"]], "getscalarevolution() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getScalarEvolution"]], "gettotalblockparam() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.getTotalBlockParam"]], "growtofullcore() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.growToFullCore"]], "isfullcore (armi.reactor.cores.core property)": [[328, "armi.reactor.cores.Core.isFullCore"]], "lib (armi.reactor.cores.core property)": [[328, "armi.reactor.cores.Core.lib"]], "locateallassemblies() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.locateAllAssemblies"]], "makelocationlookup() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.makeLocationLookup"]], "normalizeinternalbookeeping() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.normalizeInternalBookeeping"]], "normalizenames() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.normalizeNames"]], "pdefs (armi.reactor.cores.core attribute)": [[328, "armi.reactor.cores.Core.pDefs"]], "paramcollectiontype (armi.reactor.cores.core attribute)": [[328, "armi.reactor.cores.Core.paramCollectionType"]], "powermultiplier (armi.reactor.cores.core property)": [[328, "armi.reactor.cores.Core.powerMultiplier"]], "processloading() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.processLoading"]], "r (armi.reactor.cores.core property)": [[328, "armi.reactor.cores.Core.r"]], "refassem (armi.reactor.cores.core property)": [[328, "armi.reactor.cores.Core.refAssem"]], "regenassemblylists() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.regenAssemblyLists"]], "removeassembliesinring() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.removeAssembliesInRing"]], "removeassembly() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.removeAssembly"]], "saveallflux() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.saveAllFlux"]], "setblockmassparams() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.setBlockMassParams"]], "setmovelist() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.setMoveList"]], "setoptionsfromcs() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.setOptionsFromCs"]], "setpitchuniform() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.setPitchUniform"]], "setpowerfromdensity() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.setPowerFromDensity"]], "setpowerifnecessary() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.setPowerIfNecessary"]], "sortassemsbyring() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.sortAssemsByRing"]], "summarizenuclidecategories() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.summarizeNuclideCategories"]], "summarizereactorstats() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.summarizeReactorStats"]], "symmetry (armi.reactor.cores.core property)": [[328, "armi.reactor.cores.Core.symmetry"]], "updateaxialmesh() (armi.reactor.cores.core method)": [[328, "armi.reactor.cores.Core.updateAxialMesh"]], "excorecollection (class in armi.reactor.excorestructure)": [[329, "armi.reactor.excoreStructure.ExcoreCollection"]], "excorestructure (class in armi.reactor.excorestructure)": [[329, "armi.reactor.excoreStructure.ExcoreStructure"]], "add() (armi.reactor.excorestructure.excorestructure method)": [[329, "armi.reactor.excoreStructure.ExcoreStructure.add"]], "armi.reactor.excorestructure": [[329, "module-armi.reactor.excoreStructure"]], "paramcollectiontype (armi.reactor.excorestructure.excorestructure attribute)": [[329, "armi.reactor.excoreStructure.ExcoreStructure.paramCollectionType"]], "r (armi.reactor.excorestructure.excorestructure property)": [[329, "armi.reactor.excoreStructure.ExcoreStructure.r"]], "a (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.A"]], "aclp (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.ACLP"]], "annular (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.ANNULAR"]], "axial (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.AXIAL"]], "b (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.B"]], "batchmassaddition (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.BATCHMASSADDITION"]], "blanket (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.BLANKET"]], "bond (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.BOND"]], "booster (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.BOOSTER"]], "c (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.C"]], "clad (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.CLAD"]], "control (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.CONTROL"]], "coolant (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.COOLANT"]], "core_barrel (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.CORE_BARREL"]], "d (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.D"]], "depletable (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.DEPLETABLE"]], "driver (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.DRIVER"]], "dspacerinside (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.DSPACERINSIDE"]], "duct (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.DUCT"]], "dummy (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.DUMMY"]], "e (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.E"]], "feed (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.FEED"]], "fission_chamber (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.FISSION_CHAMBER"]], "fuel (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.FUEL"]], "flags (class in armi.reactor.flags)": [[330, "armi.reactor.flags.Flags"]], "gap (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.GAP"]], "grid_plate (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.GRID_PLATE"]], "guide_tube (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.GUIDE_TUBE"]], "handling_socket (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.HANDLING_SOCKET"]], "high (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.HIGH"]], "igniter (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.IGNITER"]], "inlet_nozzle (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.INLET_NOZZLE"]], "inner (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.INNER"]], "intercoolant (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.INTERCOOLANT"]], "interductcoolant (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.INTERDUCTCOOLANT"]], "invalidflagserror": [[330, "armi.reactor.flags.InvalidFlagsError"]], "liner (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.LINER"]], "load_pad (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.LOAD_PAD"]], "low (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.LOW"]], "lower (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.LOWER"]], "material (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.MATERIAL"]], "medium (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.MEDIUM"]], "middle (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.MIDDLE"]], "moderator (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.MODERATOR"]], "moveable (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.MOVEABLE"]], "mox (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.MOX"]], "outer (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.OUTER"]], "pin (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.PIN"]], "plenum (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.PLENUM"]], "poison (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.POISON"]], "primary (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.PRIMARY"]], "radial (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.RADIAL"]], "reflector (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.REFLECTOR"]], "secondary (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.SECONDARY"]], "shield (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.SHIELD"]], "shield_block (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.SHIELD_BLOCK"]], "shutdown (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.SHUTDOWN"]], "skid (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.SKID"]], "slug (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.SLUG"]], "starter (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.STARTER"]], "structure (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.STRUCTURE"]], "target (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.TARGET"]], "tertiary (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.TERTIARY"]], "test (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.TEST"]], "ultimate (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.ULTIMATE"]], "upper (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.UPPER"]], "void (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.VOID"]], "wire (armi.reactor.flags.flags attribute)": [[330, "armi.reactor.flags.Flags.WIRE"]], "armi.reactor.flags": [[330, "module-armi.reactor.flags"]], "fromstring() (armi.reactor.flags.flags class method)": [[330, "armi.reactor.flags.Flags.fromString"]], "fromstringignoreerrors() (armi.reactor.flags.flags class method)": [[330, "armi.reactor.flags.Flags.fromStringIgnoreErrors"]], "tostring() (armi.reactor.flags.flags class method)": [[330, "armi.reactor.flags.Flags.toString"]], "boundarytype (class in armi.reactor.geometry)": [[331, "armi.reactor.geometry.BoundaryType"]], "cartesian (armi.reactor.geometry.geomtype attribute)": [[331, "armi.reactor.geometry.GeomType.CARTESIAN"]], "domaintype (class in armi.reactor.geometry)": [[331, "armi.reactor.geometry.DomainType"]], "eighth_core (armi.reactor.geometry.domaintype attribute)": [[331, "armi.reactor.geometry.DomainType.EIGHTH_CORE"]], "full_core (armi.reactor.geometry.domaintype attribute)": [[331, "armi.reactor.geometry.DomainType.FULL_CORE"]], "geomtype (class in armi.reactor.geometry)": [[331, "armi.reactor.geometry.GeomType"]], "hex (armi.reactor.geometry.geomtype attribute)": [[331, "armi.reactor.geometry.GeomType.HEX"]], "no_symmetry (armi.reactor.geometry.boundarytype attribute)": [[331, "armi.reactor.geometry.BoundaryType.NO_SYMMETRY"]], "null (armi.reactor.geometry.domaintype attribute)": [[331, "armi.reactor.geometry.DomainType.NULL"]], "periodic (armi.reactor.geometry.boundarytype attribute)": [[331, "armi.reactor.geometry.BoundaryType.PERIODIC"]], "quarter_core (armi.reactor.geometry.domaintype attribute)": [[331, "armi.reactor.geometry.DomainType.QUARTER_CORE"]], "reflective (armi.reactor.geometry.boundarytype attribute)": [[331, "armi.reactor.geometry.BoundaryType.REFLECTIVE"]], "rz (armi.reactor.geometry.geomtype attribute)": [[331, "armi.reactor.geometry.GeomType.RZ"]], "rzt (armi.reactor.geometry.geomtype attribute)": [[331, "armi.reactor.geometry.GeomType.RZT"]], "sixteenth_core (armi.reactor.geometry.domaintype attribute)": [[331, "armi.reactor.geometry.DomainType.SIXTEENTH_CORE"]], "symmetrytype (class in armi.reactor.geometry)": [[331, "armi.reactor.geometry.SymmetryType"]], "third_core (armi.reactor.geometry.domaintype attribute)": [[331, "armi.reactor.geometry.DomainType.THIRD_CORE"]], "valid_symmetry (armi.reactor.geometry.symmetrytype attribute)": [[331, "armi.reactor.geometry.SymmetryType.VALID_SYMMETRY"]], "armi.reactor.geometry": [[331, "module-armi.reactor.geometry"]], "checkvalidgeomsymmetrycombo() (in module armi.reactor.geometry)": [[331, "armi.reactor.geometry.checkValidGeomSymmetryCombo"]], "checkvalidsymmetry() (armi.reactor.geometry.symmetrytype method)": [[331, "armi.reactor.geometry.SymmetryType.checkValidSymmetry"]], "createvalidsymmetrystrings() (armi.reactor.geometry.symmetrytype class method)": [[331, "armi.reactor.geometry.SymmetryType.createValidSymmetryStrings"]], "fromany() (armi.reactor.geometry.boundarytype class method)": [[331, "armi.reactor.geometry.BoundaryType.fromAny"]], "fromany() (armi.reactor.geometry.domaintype class method)": [[331, "armi.reactor.geometry.DomainType.fromAny"]], "fromany() (armi.reactor.geometry.geomtype class method)": [[331, "armi.reactor.geometry.GeomType.fromAny"]], "fromany() (armi.reactor.geometry.symmetrytype class method)": [[331, "armi.reactor.geometry.SymmetryType.fromAny"]], "fromstr() (armi.reactor.geometry.boundarytype class method)": [[331, "armi.reactor.geometry.BoundaryType.fromStr"]], "fromstr() (armi.reactor.geometry.domaintype class method)": [[331, "armi.reactor.geometry.DomainType.fromStr"]], "fromstr() (armi.reactor.geometry.geomtype class method)": [[331, "armi.reactor.geometry.GeomType.fromStr"]], "fromstr() (armi.reactor.geometry.symmetrytype class method)": [[331, "armi.reactor.geometry.SymmetryType.fromStr"]], "hassymmetry() (armi.reactor.geometry.boundarytype method)": [[331, "armi.reactor.geometry.BoundaryType.hasSymmetry"]], "label (armi.reactor.geometry.boundarytype property)": [[331, "armi.reactor.geometry.BoundaryType.label"]], "label (armi.reactor.geometry.domaintype property)": [[331, "armi.reactor.geometry.DomainType.label"]], "label (armi.reactor.geometry.geomtype property)": [[331, "armi.reactor.geometry.GeomType.label"]], "symmetryfactor() (armi.reactor.geometry.domaintype method)": [[331, "armi.reactor.geometry.DomainType.symmetryFactor"]], "symmetryfactor() (armi.reactor.geometry.symmetrytype method)": [[331, "armi.reactor.geometry.SymmetryType.symmetryFactor"]], "armi.reactor.grids": [[332, "module-armi.reactor.grids"]], "locatorlabeltoindices() (in module armi.reactor.grids)": [[332, "armi.reactor.grids.locatorLabelToIndices"]], "axialgrid (class in armi.reactor.grids.axial)": [[333, "armi.reactor.grids.axial.AxialGrid"]], "armi.reactor.grids.axial": [[333, "module-armi.reactor.grids.axial"]], "armiobject (armi.reactor.grids.axial.axialgrid attribute)": [[333, "armi.reactor.grids.axial.AxialGrid.armiObject"]], "fromncells() (armi.reactor.grids.axial.axialgrid class method)": [[333, "armi.reactor.grids.axial.AxialGrid.fromNCells"]], "getindicesfromringandpos() (armi.reactor.grids.axial.axialgrid static method)": [[333, "armi.reactor.grids.axial.AxialGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.axial.axialgrid static method)": [[333, "armi.reactor.grids.axial.AxialGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.axial.axialgrid static method)": [[333, "armi.reactor.grids.axial.AxialGrid.getPositionsInRing"]], "getsymmetricequivalents() (armi.reactor.grids.axial.axialgrid static method)": [[333, "armi.reactor.grids.axial.AxialGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.axial.axialgrid static method)": [[333, "armi.reactor.grids.axial.AxialGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.axial.axialgrid static method)": [[333, "armi.reactor.grids.axial.AxialGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.axial.axialgrid property)": [[333, "armi.reactor.grids.axial.AxialGrid.pitch"]], "cartesiangrid (class in armi.reactor.grids.cartesian)": [[334, "armi.reactor.grids.cartesian.CartesianGrid"]], "armi.reactor.grids.cartesian": [[334, "module-armi.reactor.grids.cartesian"]], "armiobject (armi.reactor.grids.cartesian.cartesiangrid attribute)": [[334, "armi.reactor.grids.cartesian.CartesianGrid.armiObject"]], "changepitch() (armi.reactor.grids.cartesian.cartesiangrid method)": [[334, "armi.reactor.grids.cartesian.CartesianGrid.changePitch"]], "fromrectangle() (armi.reactor.grids.cartesian.cartesiangrid class method)": [[334, "armi.reactor.grids.cartesian.CartesianGrid.fromRectangle"]], "getindicesfromringandpos() (armi.reactor.grids.cartesian.cartesiangrid static method)": [[334, "armi.reactor.grids.cartesian.CartesianGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.cartesian.cartesiangrid method)": [[334, "armi.reactor.grids.cartesian.CartesianGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.cartesian.cartesiangrid method)": [[334, "armi.reactor.grids.cartesian.CartesianGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.cartesian.cartesiangrid method)": [[334, "armi.reactor.grids.cartesian.CartesianGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.cartesian.cartesiangrid method)": [[334, "armi.reactor.grids.cartesian.CartesianGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.cartesian.cartesiangrid method)": [[334, "armi.reactor.grids.cartesian.CartesianGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.cartesian.cartesiangrid method)": [[334, "armi.reactor.grids.cartesian.CartesianGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.cartesian.cartesiangrid property)": [[334, "armi.reactor.grids.cartesian.CartesianGrid.pitch"]], "armi.reactor.grids.constants": [[335, "module-armi.reactor.grids.constants"]], "grid (class in armi.reactor.grids.grid)": [[336, "armi.reactor.grids.grid.Grid"]], "armi.reactor.grids.grid": [[336, "module-armi.reactor.grids.grid"]], "armiobject (armi.reactor.grids.grid.grid attribute)": [[336, "armi.reactor.grids.grid.Grid.armiObject"]], "backup() (armi.reactor.grids.grid.grid method)": [[336, "armi.reactor.grids.grid.Grid.backUp"]], "geomtype (armi.reactor.grids.grid.grid property)": [[336, "armi.reactor.grids.grid.Grid.geomType"]], "getcellbase() (armi.reactor.grids.grid.grid method)": [[336, "armi.reactor.grids.grid.Grid.getCellBase"]], "getcelltop() (armi.reactor.grids.grid.grid method)": [[336, "armi.reactor.grids.grid.Grid.getCellTop"]], "getcoordinates() (armi.reactor.grids.grid.grid method)": [[336, "armi.reactor.grids.grid.Grid.getCoordinates"]], "getlabel() (armi.reactor.grids.grid.grid static method)": [[336, "armi.reactor.grids.grid.Grid.getLabel"]], "getsymmetricequivalents() (armi.reactor.grids.grid.grid method)": [[336, "armi.reactor.grids.grid.Grid.getSymmetricEquivalents"]], "isaxialonly (armi.reactor.grids.grid.grid property)": [[336, "armi.reactor.grids.grid.Grid.isAxialOnly"]], "items() (armi.reactor.grids.grid.grid method)": [[336, "armi.reactor.grids.grid.Grid.items"]], "locatorindomain() (armi.reactor.grids.grid.grid method)": [[336, "armi.reactor.grids.grid.Grid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.grid.grid method)": [[336, "armi.reactor.grids.grid.Grid.overlapsWhichSymmetryLine"]], "reduce() (armi.reactor.grids.grid.grid method)": [[336, "armi.reactor.grids.grid.Grid.reduce"]], "restorebackup() (armi.reactor.grids.grid.grid method)": [[336, "armi.reactor.grids.grid.Grid.restoreBackup"]], "symmetry (armi.reactor.grids.grid.grid property)": [[336, "armi.reactor.grids.grid.Grid.symmetry"]], "hexgrid (class in armi.reactor.grids.hexagonal)": [[337, "armi.reactor.grids.hexagonal.HexGrid"]], "armi.reactor.grids.hexagonal": [[337, "module-armi.reactor.grids.hexagonal"]], "armiobject (armi.reactor.grids.hexagonal.hexgrid attribute)": [[337, "armi.reactor.grids.hexagonal.HexGrid.armiObject"]], "changepitch() (armi.reactor.grids.hexagonal.hexgrid method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.changePitch"]], "cornersup (armi.reactor.grids.hexagonal.hexgrid property)": [[337, "armi.reactor.grids.hexagonal.HexGrid.cornersUp"]], "frompitch() (armi.reactor.grids.hexagonal.hexgrid static method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.fromPitch"]], "generatesortedhexlocationlist() (armi.reactor.grids.hexagonal.hexgrid method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.generateSortedHexLocationList"]], "getindicesfromringandpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.getIndicesFromRingAndPos"]], "getlabel() (armi.reactor.grids.hexagonal.hexgrid method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.getLabel"]], "getminimumrings() (armi.reactor.grids.hexagonal.hexgrid method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.hexagonal.hexgrid method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.hexagonal.hexgrid method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.hexagonal.hexgrid method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.hexagonal.hexgrid method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.getSymmetricEquivalents"]], "indicestoringpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.indicesToRingPos"]], "isinfirstthird() (armi.reactor.grids.hexagonal.hexgrid method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.isInFirstThird"]], "locatorindomain() (armi.reactor.grids.hexagonal.hexgrid method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.hexagonal.hexgrid method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.hexagonal.hexgrid property)": [[337, "armi.reactor.grids.hexagonal.HexGrid.pitch"]], "trianglecoords() (armi.reactor.grids.hexagonal.hexgrid method)": [[337, "armi.reactor.grids.hexagonal.HexGrid.triangleCoords"]], "coordinatelocation (class in armi.reactor.grids.locations)": [[338, "armi.reactor.grids.locations.CoordinateLocation"]], "indexlocation (class in armi.reactor.grids.locations)": [[338, "armi.reactor.grids.locations.IndexLocation"]], "locationbase (class in armi.reactor.grids.locations)": [[338, "armi.reactor.grids.locations.LocationBase"]], "multiindexlocation (class in armi.reactor.grids.locations)": [[338, "armi.reactor.grids.locations.MultiIndexLocation"]], "addingisvalid() (in module armi.reactor.grids.locations)": [[338, "armi.reactor.grids.locations.addingIsValid"]], "append() (armi.reactor.grids.locations.multiindexlocation method)": [[338, "armi.reactor.grids.locations.MultiIndexLocation.append"]], "armi.reactor.grids.locations": [[338, "module-armi.reactor.grids.locations"]], "associate() (armi.reactor.grids.locations.locationbase method)": [[338, "armi.reactor.grids.locations.LocationBase.associate"]], "associate() (armi.reactor.grids.locations.multiindexlocation method)": [[338, "armi.reactor.grids.locations.MultiIndexLocation.associate"]], "detachedcopy() (armi.reactor.grids.locations.indexlocation method)": [[338, "armi.reactor.grids.locations.IndexLocation.detachedCopy"]], "detachedcopy() (armi.reactor.grids.locations.multiindexlocation method)": [[338, "armi.reactor.grids.locations.MultiIndexLocation.detachedCopy"]], "distanceto() (armi.reactor.grids.locations.indexlocation method)": [[338, "armi.reactor.grids.locations.IndexLocation.distanceTo"]], "extend() (armi.reactor.grids.locations.multiindexlocation method)": [[338, "armi.reactor.grids.locations.MultiIndexLocation.extend"]], "getcompleteindices() (armi.reactor.grids.locations.coordinatelocation method)": [[338, "armi.reactor.grids.locations.CoordinateLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.indexlocation method)": [[338, "armi.reactor.grids.locations.IndexLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.multiindexlocation method)": [[338, "armi.reactor.grids.locations.MultiIndexLocation.getCompleteIndices"]], "getglobalcellbase() (armi.reactor.grids.locations.coordinatelocation method)": [[338, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellBase"]], "getglobalcellbase() (armi.reactor.grids.locations.indexlocation method)": [[338, "armi.reactor.grids.locations.IndexLocation.getGlobalCellBase"]], "getglobalcelltop() (armi.reactor.grids.locations.coordinatelocation method)": [[338, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellTop"]], "getglobalcelltop() (armi.reactor.grids.locations.indexlocation method)": [[338, "armi.reactor.grids.locations.IndexLocation.getGlobalCellTop"]], "getglobalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[338, "armi.reactor.grids.locations.IndexLocation.getGlobalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.coordinatelocation method)": [[338, "armi.reactor.grids.locations.CoordinateLocation.getLocalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[338, "armi.reactor.grids.locations.IndexLocation.getLocalCoordinates"]], "getringpos() (armi.reactor.grids.locations.indexlocation method)": [[338, "armi.reactor.grids.locations.IndexLocation.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.locations.indexlocation method)": [[338, "armi.reactor.grids.locations.IndexLocation.getSymmetricEquivalents"]], "grid (armi.reactor.grids.locations.locationbase property)": [[338, "armi.reactor.grids.locations.LocationBase.grid"]], "i (armi.reactor.grids.locations.locationbase property)": [[338, "armi.reactor.grids.locations.LocationBase.i"]], "indices (armi.reactor.grids.locations.indexlocation property)": [[338, "armi.reactor.grids.locations.IndexLocation.indices"]], "indices (armi.reactor.grids.locations.locationbase property)": [[338, "armi.reactor.grids.locations.LocationBase.indices"]], "indices (armi.reactor.grids.locations.multiindexlocation property)": [[338, "armi.reactor.grids.locations.MultiIndexLocation.indices"]], "j (armi.reactor.grids.locations.locationbase property)": [[338, "armi.reactor.grids.locations.LocationBase.j"]], "k (armi.reactor.grids.locations.locationbase property)": [[338, "armi.reactor.grids.locations.LocationBase.k"]], "parentlocation (armi.reactor.grids.locations.indexlocation property)": [[338, "armi.reactor.grids.locations.IndexLocation.parentLocation"]], "pop() (armi.reactor.grids.locations.multiindexlocation method)": [[338, "armi.reactor.grids.locations.MultiIndexLocation.pop"]], "gridparameters (class in armi.reactor.grids.structuredgrid)": [[339, "armi.reactor.grids.structuredGrid.GridParameters"]], "structuredgrid (class in armi.reactor.grids.structuredgrid)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid"]], "armi.reactor.grids.structuredgrid": [[339, "module-armi.reactor.grids.structuredGrid"]], "armiobject (armi.reactor.grids.structuredgrid.structuredgrid attribute)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.armiObject"]], "backup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.backUp"]], "bounds (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[339, "armi.reactor.grids.structuredGrid.GridParameters.bounds"]], "geomtype (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[339, "armi.reactor.grids.structuredGrid.GridParameters.geomType"]], "getaboveandbelowcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getAboveAndBelowCellIndices"]], "getallindices() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getAllIndices"]], "getbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getBounds"]], "getcellbase() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getCellBase"]], "getcelltop() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getCellTop"]], "getcoordinates() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getCoordinates"]], "getindexbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getIndexBounds"]], "getindicesfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getIndicesFromRingAndPos"]], "getlocatorfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getLocatorFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.getRingPos"]], "isaxialonly (armi.reactor.grids.structuredgrid.structuredgrid property)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.isAxialOnly"]], "items() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.items"]], "offset (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[339, "armi.reactor.grids.structuredGrid.GridParameters.offset"]], "offset (armi.reactor.grids.structuredgrid.structuredgrid property)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.offset"]], "pitch (armi.reactor.grids.structuredgrid.structuredgrid property)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.pitch"]], "reduce() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.reduce"]], "restorebackup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[339, "armi.reactor.grids.structuredGrid.StructuredGrid.restoreBackup"]], "symmetry (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[339, "armi.reactor.grids.structuredGrid.GridParameters.symmetry"]], "unitsteplimits (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[339, "armi.reactor.grids.structuredGrid.GridParameters.unitStepLimits"]], "unitsteps (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[339, "armi.reactor.grids.structuredGrid.GridParameters.unitSteps"]], "thetarzgrid (class in armi.reactor.grids.thetarz)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid"]], "armi.reactor.grids.thetarz": [[340, "module-armi.reactor.grids.thetarz"]], "armiobject (armi.reactor.grids.thetarz.thetarzgrid attribute)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid.armiObject"]], "fromgeom() (armi.reactor.grids.thetarz.thetarzgrid class method)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid.fromGeom"]], "getcoordinates() (armi.reactor.grids.thetarz.thetarzgrid method)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid.getCoordinates"]], "getindicesfromringandpos() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.thetarz.thetarzgrid method)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.thetarz.thetarzgrid method)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid.getSymmetricEquivalents"]], "indicesofbounds() (armi.reactor.grids.thetarz.thetarzgrid method)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid.indicesOfBounds"]], "locatorindomain() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid.overlapsWhichSymmetryLine"]], "pitch() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[340, "armi.reactor.grids.thetarz.ThetaRZGrid.pitch"]], "armi.reactor.parameters": [[341, "module-armi.reactor.parameters"]], "reset() (in module armi.reactor.parameters)": [[341, "armi.reactor.parameters.reset"]], "parameterdefinitionerror": [[342, "armi.reactor.parameters.exceptions.ParameterDefinitionError"]], "parametererror": [[342, "armi.reactor.parameters.exceptions.ParameterError"]], "unknownparametererror": [[342, "armi.reactor.parameters.exceptions.UnknownParameterError"]], "armi.reactor.parameters.exceptions": [[342, "module-armi.reactor.parameters.exceptions"]], "global_serial_num (in module armi.reactor.parameters.parametercollections)": [[343, "armi.reactor.parameters.parameterCollections.GLOBAL_SERIAL_NUM"]], "parametercollection (class in armi.reactor.parameters.parametercollections)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection"]], "applyallparameters() (in module armi.reactor.parameters.parametercollections)": [[343, "armi.reactor.parameters.parameterCollections.applyAllParameters"]], "applyparameters() (armi.reactor.parameters.parametercollections.parametercollection class method)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.applyParameters"]], "armi.reactor.parameters.parametercollections": [[343, "module-armi.reactor.parameters.parameterCollections"]], "backup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.backUp"]], "collectpluginparameters() (in module armi.reactor.parameters.parametercollections)": [[343, "armi.reactor.parameters.parameterCollections.collectPluginParameters"]], "get() (armi.reactor.parameters.parametercollections.parametercollection method)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.get"]], "getsyncdata() (armi.reactor.parameters.parametercollections.parametercollection method)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.getSyncData"]], "items() (armi.reactor.parameters.parametercollections.parametercollection method)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.items"]], "keys() (armi.reactor.parameters.parametercollections.parametercollection method)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.keys"]], "pdefs (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.pDefs"]], "paramdefs (armi.reactor.parameters.parametercollections.parametercollection property)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.paramDefs"]], "restorebackup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.restoreBackup"]], "serialnum (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.serialNum"]], "update() (armi.reactor.parameters.parametercollections.parametercollection method)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.update"]], "values() (armi.reactor.parameters.parametercollections.parametercollection method)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.values"]], "where() (armi.reactor.parameters.parametercollections.parametercollection method)": [[343, "armi.reactor.parameters.parameterCollections.ParameterCollection.where"]], "average (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.ParamLocation.AVERAGE"]], "bottom (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.ParamLocation.BOTTOM"]], "centroid (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CENTROID"]], "children (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CHILDREN"]], "corners (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CORNERS"]], "category (class in armi.reactor.parameters.parameterdefinitions)": [[344, "armi.reactor.parameters.parameterDefinitions.Category"]], "edges (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.ParamLocation.EDGES"]], "max (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.ParamLocation.MAX"]], "nodefault (class in armi.reactor.parameters.parameterdefinitions)": [[344, "armi.reactor.parameters.parameterDefinitions.NoDefault"]], "paramlocation (class in armi.reactor.parameters.parameterdefinitions)": [[344, "armi.reactor.parameters.parameterDefinitions.ParamLocation"]], "parameter (class in armi.reactor.parameters.parameterdefinitions)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter"]], "parameterbuilder (class in armi.reactor.parameters.parameterdefinitions)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder"]], "parameterdefinitioncollection (class in armi.reactor.parameters.parameterdefinitions)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection"]], "serializer (class in armi.reactor.parameters.parameterdefinitions)": [[344, "armi.reactor.parameters.parameterDefinitions.Serializer"]], "top (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.ParamLocation.TOP"]], "volume_integrated (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.ParamLocation.VOLUME_INTEGRATED"]], "add() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.add"]], "armi.reactor.parameters.parameterdefinitions": [[344, "module-armi.reactor.parameters.parameterDefinitions"]], "assigninblueprints (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.assignInBlueprints"]], "assigned (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.assigned"]], "associateparameterdefinitioncollection() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.associateParameterDefinitionCollection"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.atLocation"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.atLocation"]], "backup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.backUp"]], "bynameandcollectiontype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndCollectionType"]], "bynameandtype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndType"]], "categories (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.categories"]], "categories (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.categories"]], "collectiontype (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.collectionType"]], "createbuilder() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.createBuilder"]], "cumulative (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.cumulative"]], "cumulativeovercycle (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.cumulativeOverCycle"]], "defparam() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.defParam"]], "default (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.default"]], "depletion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.depletion"]], "description (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.description"]], "detailedaxialexpansion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.detailedAxialExpansion"]], "extend() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.extend"]], "fieldname (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.fieldName"]], "fluxquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.fluxQuantities"]], "fortype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.forType"]], "gamma (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.gamma"]], "hascategory() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.hasCategory"]], "incategory() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.inCategory"]], "isnumpyarray() (in module armi.reactor.parameters.parameterdefinitions)": [[344, "armi.reactor.parameters.parameterDefinitions.isNumpyArray"]], "items() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.items"]], "location (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.location"]], "lock() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.lock"]], "locked (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.locked"]], "multigroupquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.multiGroupQuantities"]], "name (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.name"]], "names (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.names"]], "neutronics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.neutronics"]], "pack() (armi.reactor.parameters.parameterdefinitions.serializer static method)": [[344, "armi.reactor.parameters.parameterDefinitions.Serializer.pack"]], "pinquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.pinQuantities"]], "reactivitycoefficients (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.reactivityCoefficients"]], "resetassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.resetAssignmentFlag"]], "restorebackup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.restoreBackup"]], "retainonreplacement (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.retainOnReplacement"]], "savetodb (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.saveToDB"]], "serializer (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.serializer"]], "setassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.setAssignmentFlag"]], "setter() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.setter"]], "since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.since"]], "thermalhydraulics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Category.thermalHydraulics"]], "towritetodb() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.toWriteToDB"]], "unchanged_since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[344, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.unchanged_since"]], "units (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Parameter.units"]], "unpack() (armi.reactor.parameters.parameterdefinitions.serializer class method)": [[344, "armi.reactor.parameters.parameterDefinitions.Serializer.unpack"]], "version (armi.reactor.parameters.parameterdefinitions.serializer attribute)": [[344, "armi.reactor.parameters.parameterDefinitions.Serializer.version"]], "resolveparametersmeta (class in armi.reactor.parameters.resolvecollections)": [[345, "armi.reactor.parameters.resolveCollections.ResolveParametersMeta"]], "armi.reactor.parameters.resolvecollections": [[345, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorparameters": [[346, "module-armi.reactor.reactorParameters"]], "definecoreparameters() (in module armi.reactor.reactorparameters)": [[346, "armi.reactor.reactorParameters.defineCoreParameters"]], "definereactorparameters() (in module armi.reactor.reactorparameters)": [[346, "armi.reactor.reactorParameters.defineReactorParameters"]], "reactor (class in armi.reactor.reactors)": [[347, "armi.reactor.reactors.Reactor"]], "add() (armi.reactor.reactors.reactor method)": [[347, "armi.reactor.reactors.Reactor.add"]], "armi.reactor.reactors": [[347, "module-armi.reactor.reactors"]], "factory() (in module armi.reactor.reactors)": [[347, "armi.reactor.reactors.factory"]], "incrementassemnum() (armi.reactor.reactors.reactor method)": [[347, "armi.reactor.reactors.Reactor.incrementAssemNum"]], "loadfromcs() (in module armi.reactor.reactors)": [[347, "armi.reactor.reactors.loadFromCs"]], "normalizenames() (armi.reactor.reactors.reactor method)": [[347, "armi.reactor.reactors.Reactor.normalizeNames"]], "pdefs (armi.reactor.reactors.reactor attribute)": [[347, "armi.reactor.reactors.Reactor.pDefs"]], "paramcollectiontype (armi.reactor.reactors.reactor attribute)": [[347, "armi.reactor.reactors.Reactor.paramCollectionType"]], "spentfuelpool (class in armi.reactor.spentfuelpool)": [[348, "armi.reactor.spentFuelPool.SpentFuelPool"]], "add() (armi.reactor.spentfuelpool.spentfuelpool method)": [[348, "armi.reactor.spentFuelPool.SpentFuelPool.add"]], "armi.reactor.spentfuelpool": [[348, "module-armi.reactor.spentFuelPool"]], "getassembly() (armi.reactor.spentfuelpool.spentfuelpool method)": [[348, "armi.reactor.spentFuelPool.SpentFuelPool.getAssembly"]], "normalizenames() (armi.reactor.spentfuelpool.spentfuelpool method)": [[348, "armi.reactor.spentFuelPool.SpentFuelPool.normalizeNames"]], "paramcollectiontype (armi.reactor.spentfuelpool.spentfuelpool attribute)": [[348, "armi.reactor.spentFuelPool.SpentFuelPool.paramCollectionType"]], "root_tag (armi.reactor.systemlayoutinput.systemlayoutinput attribute)": [[349, "armi.reactor.systemLayoutInput.SystemLayoutInput.ROOT_TAG"]], "systemlayoutinput (class in armi.reactor.systemlayoutinput)": [[349, "armi.reactor.systemLayoutInput.SystemLayoutInput"]], "armi.reactor.systemlayoutinput": [[349, "module-armi.reactor.systemLayoutInput"]], "fromreactor() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[349, "armi.reactor.systemLayoutInput.SystemLayoutInput.fromReactor"]], "growtofullcore() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[349, "armi.reactor.systemLayoutInput.SystemLayoutInput.growToFullCore"]], "loadfromcs() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[349, "armi.reactor.systemLayoutInput.SystemLayoutInput.loadFromCs"]], "modifyeqpaths() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[349, "armi.reactor.systemLayoutInput.SystemLayoutInput.modifyEqPaths"]], "readgeomfromfile() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[349, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromFile"]], "readgeomfromstream() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[349, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromStream"]], "togridblueprints() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[349, "armi.reactor.systemLayoutInput.SystemLayoutInput.toGridBlueprints"]], "writegeom() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[349, "armi.reactor.systemLayoutInput.SystemLayoutInput.writeGeom"]], "armi.reactor.tests": [[350, "module-armi.reactor.tests"]], "annularfueltestcase (class in armi.reactor.tests.test_assemblies)": [[351, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase"]], "assemblyinreactor_testcase (class in armi.reactor.tests.test_assemblies)": [[351, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase"]], "assembly_testcase (class in armi.reactor.tests.test_assemblies)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase"]], "materialinassembly_testcase (class in armi.reactor.tests.test_assemblies)": [[351, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase"]], "armi.reactor.tests.test_assemblies": [[351, "module-armi.reactor.tests.test_assemblies"]], "buildtestassemblies() (in module armi.reactor.tests.test_assemblies)": [[351, "armi.reactor.tests.test_assemblies.buildTestAssemblies"]], "maketestassembly() (in module armi.reactor.tests.test_assemblies)": [[351, "armi.reactor.tests.test_assemblies.makeTestAssembly"]], "test_uthzrmaterial() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_UThZrMaterial"]], "test_add() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_add"]], "test_adjustresolution() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_adjustResolution"]], "test_append() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_append"]], "test_areacheck() (armi.reactor.tests.test_assemblies.annularfueltestcase method)": [[351, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase.test_areaCheck"]], "test_assem_block_types() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_assem_block_types"]], "test_assem_hex_type() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_assem_hex_type"]], "test_averageplenumtemperature() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_averagePlenumTemperature"]], "test_calcavgparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcAvgParam"]], "test_calctotalparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcTotalParam"]], "test_calculatezcoords() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calculateZCoords"]], "test_carestiancoordinates() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_carestianCoordinates"]], "test_countblocksoftype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_countBlocksOfType"]], "test_doubleresolution() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_doubleResolution"]], "test_duplicate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_duplicate"]], "test_extend() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_extend"]], "test_getage() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAge"]], "test_getarea() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getArea"]], "test_getaxialmesh() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAxialMesh"]], "test_getbindexfromzindex() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBIndexFromZIndex"]], "test_getblockdata() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlockData"]], "test_getblocks() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocks"]], "test_getblocksandz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksAndZ"]], "test_getblocksbetweenelevations() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksBetweenElevations"]], "test_getdim() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDim"]], "test_getdominantmaterial() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDominantMaterial"]], "test_getelevationboundariesbyblocktype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getElevationBoundariesByBlockType"]], "test_getelevationsmatchingparamvalue() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getElevationsMatchingParamValue"]], "test_getfirstblock() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlock"]], "test_getfirstblockbytype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlockByType"]], "test_getfissilemass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFissileMass"]], "test_getheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getHeight"]], "test_getlocation() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getLocation"]], "test_getmass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMass"]], "test_getmaxparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMaxParam"]], "test_getname() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getName"]], "test_getnum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getNum"]], "test_getparamvaluesatz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getParamValuesAtZ"]], "test_getreactiveheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getReactiveHeight"]], "test_gettotalheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getTotalHeight"]], "test_getvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getVolume"]], "test_hascontinuouscoolantchannel() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasContinuousCoolantChannel"]], "test_hasflags() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasFlags"]], "test_isonwhichsymmetryline() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_isOnWhichSymmetryLine"]], "test_iter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iter"]], "test_iteration() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iteration"]], "test_len() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_len"]], "test_makeaxialsnaplist() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_makeAxialSnapList"]], "test_moveto() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_moveTo"]], "test_notesparameter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_notesParameter"]], "test_pinplenumvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_pinPlenumVolume"]], "test_reattach() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reattach"]], "test_reestablishblockorder() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reestablishBlockOrder"]], "test_renameblocksaccordingtoassemblynum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_renameBlocksAccordingToAssemblyNum"]], "test_rotate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_rotate"]], "test_snapaxialmeshtoreference() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_snapAxialMeshToReference"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockigniter() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[351, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[351, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "test_sortnolocator() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_sortNoLocator"]], "test_updatefromassembly() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[351, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_updateFromAssembly"]], "blockenergydepositionconstants (class in armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants"]], "block_testcase (class in armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase"]], "cartesianblock_testcase (class in armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase"]], "emptyblockrotatetest (class in armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.EmptyBlockRotateTest"]], "hexblock_testcase (class in armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase"]], "massconservationtests (class in armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.MassConservationTests"]], "pitch (armi.reactor.tests.test_blocks.cartesianblock_testcase attribute)": [[352, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.PITCH"]], "testdetailedndensupdate (class in armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate"]], "testnegativevolume (class in armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.TestNegativeVolume"]], "thrzblock_testcase (class in armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase"]], "applydummydata() (in module armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.applyDummyData"]], "armi.reactor.tests.test_blocks": [[352, "module-armi.reactor.tests.test_blocks"]], "buildsimplefuelblock() (in module armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.buildSimpleFuelBlock"]], "getcomponentdata() (in module armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.getComponentData"]], "loadtestblock() (in module armi.reactor.tests.test_blocks)": [[352, "armi.reactor.tests.test_blocks.loadTestBlock"]], "test_100_getpinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_100_getPinPitch"]], "test_101_getpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_101_getPitch"]], "test_102_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_102_setPitch"]], "test_106_getareafractions() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_106_getAreaFractions"]], "test_27b_setbugroup() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_27b_setBuGroup"]], "test_add() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_add"]], "test_adjustdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustDensity"]], "test_adjustuenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustUEnrich"]], "test_axial() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_axial"]], "test_block_dims() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_block_dims"]], "test_breakfuelcomponentsintoindividuals() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_breakFuelComponentsIntoIndividuals"]], "test_cleardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_clearDensity"]], "test_coldmass() (armi.reactor.tests.test_blocks.massconservationtests method)": [[352, "armi.reactor.tests.test_blocks.MassConservationTests.test_coldMass"]], "test_completeinitialloading() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_completeInitialLoading"]], "test_component_type() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_component_type"]], "test_consistentareawithoverlappingcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentAreaWithOverlappingComponents"]], "test_consistentmassdensityvolumebetweencoldblockandcoldcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"]], "test_consistentmassdensityvolumebetweenhotblockandhotcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"]], "test_coords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_coords"]], "test_dimensionductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[352, "armi.reactor.tests.test_blocks.MassConservationTests.test_dimensionDuctHeatup"]], "test_duplicate() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_duplicate"]], "test_expandallelementalstoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandAllElementalsToIsotopics"]], "test_expandelementaltoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandElementalToIsotopics"]], "test_getarea() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getArea"]], "test_getcaptureenergygenerationconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[352, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getCaptureEnergyGenerationConstants"]], "test_getcartesiangrid() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getCartesianGrid"]], "test_getcomponent() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponent"]], "test_getcomponentareafrac() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentAreaFrac"]], "test_getcomponentbyname() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentByName"]], "test_getcomponentnames() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentNames"]], "test_getcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponents"]], "test_getcomponentsinlinkedorder() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsInLinkedOrder"]], "test_getcomponentsofmaterial() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfMaterial"]], "test_getcomponentsofshape() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfShape"]], "test_getdimensions() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getDimensions"]], "test_getductpitch() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getDuctPitch"]], "test_getfissilemassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFissileMassEnrich"]], "test_getfissionenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[352, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getFissionEnergyDepositionConstants"]], "test_getflowarea() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowArea"]], "test_getflowareaperpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowAreaPerPin"]], "test_getgammaenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[352, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getGammaEnergyDepositionConstants"]], "test_gethmdens() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHMDens"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getHydraulicDiameter"]], "test_getmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMass"]], "test_getmasses() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMasses"]], "test_getmfp() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMfp"]], "test_getmicrosuffix() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMicroSuffix"]], "test_getneutronenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[352, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getNeutronEnergyDepositionConstants"]], "test_getnumcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumComponents"]], "test_getnumpins() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumPins"]], "test_getnumpins() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getNumPins"]], "test_getnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberDensity"]], "test_getnumberofatoms() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberOfAtoms"]], "test_getpincenterflattoflat() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCenterFlatToFlat"]], "test_getpincoords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCoords"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchsquare() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchSquare"]], "test_getplenumpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPlenumPin"]], "test_getpu() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPu"]], "test_getreactionrates() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getReactionRates"]], "test_getsmeardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensity"]], "test_getsmeardensityedgecases() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensityEdgeCases"]], "test_getsmeardensitymultipleliner() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensityMultipleLiner"]], "test_getsortedcomponentsinsideofcomponentclad() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentClad"]], "test_getsortedcomponentsinsideofcomponentduct() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentDuct"]], "test_getthetarzgrid() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getThetaRZGrid"]], "test_gettotalenergygenerationconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[352, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getTotalEnergyGenerationConstants"]], "test_gettotalmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalMass"]], "test_gettotalndens() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalNDens"]], "test_gettype() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getType"]], "test_geturaniummassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumMassEnrich"]], "test_geturaniumnumenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumNumEnrich"]], "test_getvolumefractionwithoutparent() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionWithoutParent"]], "test_getvolumefractionswithzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionsWithZeroHeight"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getWettedPerimeter"]], "test_getxstype() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_getXsType"]], "test_gridcreation() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridCreation"]], "test_gridnotcreatedmultiplemultiplicities() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNotCreatedMultipleMultiplicities"]], "test_gridnumpinsandlocations() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNumPinsAndLocations"]], "test_hascomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasComponents"]], "test_hasflags() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasFlags"]], "test_haspinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasPinPitch"]], "test_heightexpansiondifferences() (armi.reactor.tests.test_blocks.massconservationtests method)": [[352, "armi.reactor.tests.test_blocks.MassConservationTests.test_heightExpansionDifferences"]], "test_homogenizedmixture() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_homogenizedMixture"]], "test_masscladheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[352, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCladHeatup"]], "test_massconsistency() (armi.reactor.tests.test_blocks.massconservationtests method)": [[352, "armi.reactor.tests.test_blocks.MassConservationTests.test_massConsistency"]], "test_masscoolheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[352, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCoolHeatup"]], "test_massductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[352, "armi.reactor.tests.test_blocks.MassConservationTests.test_massDuctHeatup"]], "test_massfuelheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[352, "armi.reactor.tests.test_blocks.MassConservationTests.test_massFuelHeatup"]], "test_mergewithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_mergeWithBlock"]], "test_negativevolume() (armi.reactor.tests.test_blocks.testnegativevolume method)": [[352, "armi.reactor.tests.test_blocks.TestNegativeVolume.test_negativeVolume"]], "test_orientation() (armi.reactor.tests.test_blocks.emptyblockrotatetest method)": [[352, "armi.reactor.tests.test_blocks.EmptyBlockRotateTest.test_orientation"]], "test_pinmgfluxes() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_pinMgFluxes"]], "test_radii() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_radii"]], "test_removemass() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_removeMass"]], "test_replaceblockwithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_replaceBlockWithBlock"]], "test_retainstate() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_retainState"]], "test_rotatepins() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_rotatePins"]], "test_setbulimitinfo() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_setBuLimitInfo"]], "test_setimportantparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_setImportantParams"]], "test_setlinpowbypin() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLinPowByPin"]], "test_setlocation() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLocation"]], "test_setmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_setMass"]], "test_setnumberdensities() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensity"]], "test_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_setPitch"]], "test_settype() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_setType"]], "test_setzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_setZeroHeight"]], "test_symmetryfactor() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_symmetryFactor"]], "test_theta() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_theta"]], "test_timenodeparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[352, "armi.reactor.tests.test_blocks.Block_TestCase.test_timeNodeParams"]], "test_updatedetailedndens() (armi.reactor.tests.test_blocks.testdetailedndensupdate method)": [[352, "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate.test_updateDetailedNdens"]], "test_verifyblockdims() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[352, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_verifyBlockDims"]], "testcircle (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestCircle"]], "testcomponent (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestComponent"]], "testcomponentexpansion (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestComponentExpansion"]], "testcomponentfactory (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestComponentFactory"]], "testcube (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestCube"]], "testderivedshape (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestDerivedShape"]], "testderivedshapegetarea (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestDerivedShapeGetArea"]], "testdifferentialradialsegment (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestDifferentialRadialSegment"]], "testgeneralcomponents (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestGeneralComponents"]], "testhelix (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestHelix"]], "testhexholedcircle (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestHexHoledCircle"]], "testhexagon (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestHexagon"]], "testholedhexagon (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestHoledHexagon"]], "testholedrectangle (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestHoledRectangle"]], "testholedsquare (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestHoledSquare"]], "testmaterialadjustments (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestMaterialAdjustments"]], "testnullcomponent (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestNullComponent"]], "testradialsegment (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestRadialSegment"]], "testrectangle (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestRectangle"]], "testshapedcomponent (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestShapedComponent"]], "testsolidrectangle (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestSolidRectangle"]], "testsphere (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestSphere"]], "testsquare (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestSquare"]], "testtriangle (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestTriangle"]], "testunshapedcomponent (class in armi.reactor.tests.test_components)": [[353, "armi.reactor.tests.test_components.TestUnshapedComponent"]], "armi.reactor.tests.test_components": [[353, "module-armi.reactor.tests.test_components"]], "coldouterdiameter (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[353, "armi.reactor.tests.test_components.TestComponentExpansion.coldOuterDiameter"]], "componentcls (armi.reactor.tests.test_components.testcircle attribute)": [[353, "armi.reactor.tests.test_components.TestCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcomponent attribute)": [[353, "armi.reactor.tests.test_components.TestComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcube attribute)": [[353, "armi.reactor.tests.test_components.TestCube.componentCls"]], "componentcls (armi.reactor.tests.test_components.testderivedshape attribute)": [[353, "armi.reactor.tests.test_components.TestDerivedShape.componentCls"]], "componentcls (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[353, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[353, "armi.reactor.tests.test_components.TestGeneralComponents.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhelix attribute)": [[353, "armi.reactor.tests.test_components.TestHelix.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[353, "armi.reactor.tests.test_components.TestHexHoledCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexagon attribute)": [[353, "armi.reactor.tests.test_components.TestHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedhexagon attribute)": [[353, "armi.reactor.tests.test_components.TestHoledHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedrectangle attribute)": [[353, "armi.reactor.tests.test_components.TestHoledRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedsquare attribute)": [[353, "armi.reactor.tests.test_components.TestHoledSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testnullcomponent attribute)": [[353, "armi.reactor.tests.test_components.TestNullComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testradialsegment attribute)": [[353, "armi.reactor.tests.test_components.TestRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testrectangle attribute)": [[353, "armi.reactor.tests.test_components.TestRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[353, "armi.reactor.tests.test_components.TestSolidRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsphere attribute)": [[353, "armi.reactor.tests.test_components.TestSphere.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsquare attribute)": [[353, "armi.reactor.tests.test_components.TestSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testtriangle attribute)": [[353, "armi.reactor.tests.test_components.TestTriangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[353, "armi.reactor.tests.test_components.TestUnshapedComponent.componentCls"]], "componentdims (armi.reactor.tests.test_components.testcircle attribute)": [[353, "armi.reactor.tests.test_components.TestCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testcube attribute)": [[353, "armi.reactor.tests.test_components.TestCube.componentDims"]], "componentdims (armi.reactor.tests.test_components.testderivedshape attribute)": [[353, "armi.reactor.tests.test_components.TestDerivedShape.componentDims"]], "componentdims (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[353, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[353, "armi.reactor.tests.test_components.TestGeneralComponents.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhelix attribute)": [[353, "armi.reactor.tests.test_components.TestHelix.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[353, "armi.reactor.tests.test_components.TestHexHoledCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexagon attribute)": [[353, "armi.reactor.tests.test_components.TestHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedhexagon attribute)": [[353, "armi.reactor.tests.test_components.TestHoledHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedrectangle attribute)": [[353, "armi.reactor.tests.test_components.TestHoledRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedsquare attribute)": [[353, "armi.reactor.tests.test_components.TestHoledSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testradialsegment attribute)": [[353, "armi.reactor.tests.test_components.TestRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testrectangle attribute)": [[353, "armi.reactor.tests.test_components.TestRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[353, "armi.reactor.tests.test_components.TestSolidRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsphere attribute)": [[353, "armi.reactor.tests.test_components.TestSphere.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsquare attribute)": [[353, "armi.reactor.tests.test_components.TestSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testtriangle attribute)": [[353, "armi.reactor.tests.test_components.TestTriangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[353, "armi.reactor.tests.test_components.TestUnshapedComponent.componentDims"]], "componentmassindependentofinputtemp() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[353, "armi.reactor.tests.test_components.TestComponentExpansion.componentMassIndependentOfInputTemp"]], "componentmaterial (armi.reactor.tests.test_components.testderivedshape attribute)": [[353, "armi.reactor.tests.test_components.TestDerivedShape.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[353, "armi.reactor.tests.test_components.TestGeneralComponents.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[353, "armi.reactor.tests.test_components.TestUnshapedComponent.componentMaterial"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedrectangle attribute)": [[353, "armi.reactor.tests.test_components.TestHoledRectangle.dimsToTestExpansion"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedsquare attribute)": [[353, "armi.reactor.tests.test_components.TestHoledSquare.dimsToTestExpansion"]], "expansionconservationcoldheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[353, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationColdHeightDefined"]], "expansionconservationhotheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[353, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationHotHeightDefined"]], "getcirclefueldict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[353, "armi.reactor.tests.test_components.TestComponentFactory.getCircleFuelDict"]], "getcirclevoiddict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[353, "armi.reactor.tests.test_components.TestComponentFactory.getCircleVoidDict"]], "runexpansiontests() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[353, "armi.reactor.tests.test_components.TestComponentExpansion.runExpansionTests"]], "setclassdims() (armi.reactor.tests.test_components.testholedrectangle method)": [[353, "armi.reactor.tests.test_components.TestHoledRectangle.setClassDims"]], "setclassdims() (armi.reactor.tests.test_components.testholedsquare method)": [[353, "armi.reactor.tests.test_components.TestHoledSquare.setClassDims"]], "tcold (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[353, "armi.reactor.tests.test_components.TestComponentExpansion.tCold"]], "thot (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[353, "armi.reactor.tests.test_components.TestComponentExpansion.tHot"]], "twarm (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[353, "armi.reactor.tests.test_components.TestComponentExpansion.tWarm"]], "test_b4cexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[353, "armi.reactor.tests.test_components.TestComponentExpansion.test_B4CExpansion"]], "test_ht9expansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[353, "armi.reactor.tests.test_components.TestComponentExpansion.test_HT9Expansion"]], "test_uzrexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[353, "armi.reactor.tests.test_components.TestComponentExpansion.test_UZrExpansion"]], "test_adjustmassenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[353, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassEnrichment"]], "test_adjustmassfrac_u() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[353, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U"]], "test_adjustmassfrac_u235() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[353, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U235"]], "test_adjustmassfrac_clear_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[353, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_clear_ZR"]], "test_adjustmassfrac_invalid() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[353, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_invalid"]], "test_adjustmassfrac_leave_same() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[353, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_leave_same"]], "test_adjustmassfrac_set_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[353, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_set_ZR"]], "test_badcomponentname() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_badComponentName"]], "test_changenumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_changeNumberDensities"]], "test_cmp() (armi.reactor.tests.test_components.testnullcomponent method)": [[353, "armi.reactor.tests.test_components.TestNullComponent.test_cmp"]], "test_componentinitializationandduplication() (armi.reactor.tests.test_components.testcomponentfactory method)": [[353, "armi.reactor.tests.test_components.TestComponentFactory.test_componentInitializationAndDuplication"]], "test_componentinteractionslinkingbydimensions() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingByDimensions"]], "test_componentinteractionslinkingbysubtraction() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingBySubtraction"]], "test_component_less_than() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[353, "armi.reactor.tests.test_components.TestUnshapedComponent.test_component_less_than"]], "test_computevolume() (armi.reactor.tests.test_components.testderivedshape method)": [[353, "armi.reactor.tests.test_components.TestDerivedShape.test_computeVolume"]], "test_density() (armi.reactor.tests.test_components.testshapedcomponent method)": [[353, "armi.reactor.tests.test_components.TestShapedComponent.test_density"]], "test_densityconsistent() (armi.reactor.tests.test_components.testshapedcomponent method)": [[353, "armi.reactor.tests.test_components.TestShapedComponent.test_densityConsistent"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[353, "armi.reactor.tests.test_components.TestHelix.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[353, "armi.reactor.tests.test_components.TestHexHoledCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[353, "armi.reactor.tests.test_components.TestHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[353, "armi.reactor.tests.test_components.TestHoledHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[353, "armi.reactor.tests.test_components.TestHoledRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[353, "armi.reactor.tests.test_components.TestRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[353, "armi.reactor.tests.test_components.TestSolidRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[353, "armi.reactor.tests.test_components.TestSquare.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[353, "armi.reactor.tests.test_components.TestTriangle.test_dimensionThermallyExpands"]], "test_factory() (armi.reactor.tests.test_components.testcomponentfactory method)": [[353, "armi.reactor.tests.test_components.TestComponentFactory.test_factory"]], "test_factorybadshapename() (armi.reactor.tests.test_components.testcomponentfactory method)": [[353, "armi.reactor.tests.test_components.TestComponentFactory.test_factoryBadShapeName"]], "test_finalizeloaddbadjuststd() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[353, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_finalizeLoadDBAdjustsTD"]], "test_fromcomponent() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[353, "armi.reactor.tests.test_components.TestUnshapedComponent.test_fromComponent"]], "test_fuelmass() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_fuelMass"]], "test_getarea() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhelix method)": [[353, "armi.reactor.tests.test_components.TestHelix.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexholedcircle method)": [[353, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexagon method)": [[353, "armi.reactor.tests.test_components.TestHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedhexagon method)": [[353, "armi.reactor.tests.test_components.TestHoledHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedrectangle method)": [[353, "armi.reactor.tests.test_components.TestHoledRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testrectangle method)": [[353, "armi.reactor.tests.test_components.TestRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsolidrectangle method)": [[353, "armi.reactor.tests.test_components.TestSolidRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsquare method)": [[353, "armi.reactor.tests.test_components.TestSquare.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testtriangle method)": [[353, "armi.reactor.tests.test_components.TestTriangle.test_getArea"]], "test_getareacoldtrue() (armi.reactor.tests.test_components.testderivedshapegetarea method)": [[353, "armi.reactor.tests.test_components.TestDerivedShapeGetArea.test_getAreaColdTrue"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testderivedshape method)": [[353, "armi.reactor.tests.test_components.TestDerivedShape.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[353, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhelix method)": [[353, "armi.reactor.tests.test_components.TestHelix.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[353, "armi.reactor.tests.test_components.TestHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[353, "armi.reactor.tests.test_components.TestHoledHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[353, "armi.reactor.tests.test_components.TestHoledRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testradialsegment method)": [[353, "armi.reactor.tests.test_components.TestRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[353, "armi.reactor.tests.test_components.TestRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsolidrectangle method)": [[353, "armi.reactor.tests.test_components.TestSolidRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsquare method)": [[353, "armi.reactor.tests.test_components.TestSquare.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[353, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getBoundingCircleOuterDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhelix method)": [[353, "armi.reactor.tests.test_components.TestHelix.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexholedcircle method)": [[353, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[353, "armi.reactor.tests.test_components.TestHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[353, "armi.reactor.tests.test_components.TestHoledHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[353, "armi.reactor.tests.test_components.TestHoledRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedsquare method)": [[353, "armi.reactor.tests.test_components.TestHoledSquare.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[353, "armi.reactor.tests.test_components.TestRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testsquare method)": [[353, "armi.reactor.tests.test_components.TestSquare.test_getCircleInnerDiameter"]], "test_getcomponentarea() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[353, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getComponentArea"]], "test_getdimension() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_getDimension"]], "test_getdimension() (armi.reactor.tests.test_components.testnullcomponent method)": [[353, "armi.reactor.tests.test_components.TestNullComponent.test_getDimension"]], "test_getenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[353, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_getEnrichment"]], "test_getnumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_getNumberDensities"]], "test_getperimeter() (armi.reactor.tests.test_components.testhexagon method)": [[353, "armi.reactor.tests.test_components.TestHexagon.test_getPerimeter"]], "test_getthermalexpansionfactorconservedmassbylinearexpansionpercent() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"]], "test_getvolume() (armi.reactor.tests.test_components.testcube method)": [[353, "armi.reactor.tests.test_components.TestCube.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[353, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testradialsegment method)": [[353, "armi.reactor.tests.test_components.TestRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testsphere method)": [[353, "armi.reactor.tests.test_components.TestSphere.test_getVolume"]], "test_initializecomponentmaterial() (armi.reactor.tests.test_components.testcomponent method)": [[353, "armi.reactor.tests.test_components.TestComponent.test_initializeComponentMaterial"]], "test_invalidcoolantcomponentassignment() (armi.reactor.tests.test_components.testcomponentfactory method)": [[353, "armi.reactor.tests.test_components.TestComponentFactory.test_invalidCoolantComponentAssignment"]], "test_negativearea() (armi.reactor.tests.test_components.testrectangle method)": [[353, "armi.reactor.tests.test_components.TestRectangle.test_negativeArea"]], "test_negativearea() (armi.reactor.tests.test_components.testsquare method)": [[353, "armi.reactor.tests.test_components.TestSquare.test_negativeArea"]], "test_negativevolume() (armi.reactor.tests.test_components.testcube method)": [[353, "armi.reactor.tests.test_components.TestCube.test_negativeVolume"]], "test_nonzero() (armi.reactor.tests.test_components.testnullcomponent method)": [[353, "armi.reactor.tests.test_components.TestNullComponent.test_nonzero"]], "test_preservemassduringthermalexpansion() (armi.reactor.tests.test_components.testshapedcomponent method)": [[353, "armi.reactor.tests.test_components.TestShapedComponent.test_preserveMassDuringThermalExpansion"]], "test_setmassfrac() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[353, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFrac"]], "test_setmassfraconcomponentmaterial() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[353, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFracOnComponentMaterial"]], "test_setnumberdensities() (armi.reactor.tests.test_components.testcomponent method)": [[353, "armi.reactor.tests.test_components.TestComponent.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_components.testcomponent method)": [[353, "armi.reactor.tests.test_components.TestComponent.test_setNumberDensity"]], "test_solid_material() (armi.reactor.tests.test_components.testcomponent method)": [[353, "armi.reactor.tests.test_components.TestComponent.test_solid_material"]], "test_theoreticaldensitysetter() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_theoreticalDensitySetter"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[353, "armi.reactor.tests.test_components.TestCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcube method)": [[353, "armi.reactor.tests.test_components.TestCube.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[353, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[353, "armi.reactor.tests.test_components.TestHelix.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[353, "armi.reactor.tests.test_components.TestHexHoledCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[353, "armi.reactor.tests.test_components.TestHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[353, "armi.reactor.tests.test_components.TestHoledHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[353, "armi.reactor.tests.test_components.TestHoledRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedsquare method)": [[353, "armi.reactor.tests.test_components.TestHoledSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testradialsegment method)": [[353, "armi.reactor.tests.test_components.TestRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[353, "armi.reactor.tests.test_components.TestRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[353, "armi.reactor.tests.test_components.TestSolidRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsphere method)": [[353, "armi.reactor.tests.test_components.TestSphere.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[353, "armi.reactor.tests.test_components.TestSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[353, "armi.reactor.tests.test_components.TestTriangle.test_thermallyExpands"]], "test_updatedims() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[353, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_updateDims"]], "test_validparameters() (armi.reactor.tests.test_components.testhelix method)": [[353, "armi.reactor.tests.test_components.TestHelix.test_validParameters"]], "test_volumeafterclearcache() (armi.reactor.tests.test_components.testshapedcomponent method)": [[353, "armi.reactor.tests.test_components.TestShapedComponent.test_volumeAfterClearCache"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.A"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.A"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.B"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.B"]], "bprime (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.BPRIME"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.C"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.C"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.D"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.D"]], "dummycomposite (class in armi.reactor.tests.test_composites)": [[354, "armi.reactor.tests.test_composites.DummyComposite"]], "dummyleaf (class in armi.reactor.tests.test_composites)": [[354, "armi.reactor.tests.test_composites.DummyLeaf"]], "mockbp (class in armi.reactor.tests.test_composites)": [[354, "armi.reactor.tests.test_composites.MockBP"]], "testcompositepattern (class in armi.reactor.tests.test_composites)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern"]], "testcompositetree (class in armi.reactor.tests.test_composites)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree"]], "testflagserializer (class in armi.reactor.tests.test_composites)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer"]], "testflagserializer.testflagsa (class in armi.reactor.tests.test_composites)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA"]], "testflagserializer.testflagsb (class in armi.reactor.tests.test_composites)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB"]], "testgetreactionratedict (class in armi.reactor.tests.test_composites)": [[354, "armi.reactor.tests.test_composites.TestGetReactionRateDict"]], "testmiscmethods (class in armi.reactor.tests.test_composites)": [[354, "armi.reactor.tests.test_composites.TestMiscMethods"]], "activenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[354, "armi.reactor.tests.test_composites.MockBP.activeNuclides"]], "allnuclidesinproblem (armi.reactor.tests.test_composites.mockbp attribute)": [[354, "armi.reactor.tests.test_composites.MockBP.allNuclidesInProblem"]], "armi.reactor.tests.test_composites": [[354, "module-armi.reactor.tests.test_composites"]], "blueprintyaml (armi.reactor.tests.test_composites.testcompositetree attribute)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree.blueprintYaml"]], "customisotopics (armi.reactor.tests.test_composites.mockbp attribute)": [[354, "armi.reactor.tests.test_composites.MockBP.customIsotopics"]], "elementstoexpand (armi.reactor.tests.test_composites.mockbp attribute)": [[354, "armi.reactor.tests.test_composites.MockBP.elementsToExpand"]], "getboundingcircleouterdiameter() (armi.reactor.tests.test_composites.dummyleaf method)": [[354, "armi.reactor.tests.test_composites.DummyLeaf.getBoundingCircleOuterDiameter"]], "getchildren() (armi.reactor.tests.test_composites.dummyleaf method)": [[354, "armi.reactor.tests.test_composites.DummyLeaf.getChildren"]], "getchildrenwithflags() (armi.reactor.tests.test_composites.dummyleaf method)": [[354, "armi.reactor.tests.test_composites.DummyLeaf.getChildrenWithFlags"]], "getdummyparamdefs() (in module armi.reactor.tests.test_composites)": [[354, "armi.reactor.tests.test_composites.getDummyParamDefs"]], "inactivenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[354, "armi.reactor.tests.test_composites.MockBP.inactiveNuclides"]], "itercomponents() (armi.reactor.tests.test_composites.dummyleaf method)": [[354, "armi.reactor.tests.test_composites.DummyLeaf.iterComponents"]], "pdefs (armi.reactor.tests.test_composites.dummycomposite attribute)": [[354, "armi.reactor.tests.test_composites.DummyComposite.pDefs"]], "pdefs (armi.reactor.tests.test_composites.dummyleaf attribute)": [[354, "armi.reactor.tests.test_composites.DummyLeaf.pDefs"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummycomposite attribute)": [[354, "armi.reactor.tests.test_composites.DummyComposite.paramCollectionType"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummyleaf attribute)": [[354, "armi.reactor.tests.test_composites.DummyLeaf.paramCollectionType"]], "test_arechildernoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_areChildernOfType"]], "test_composite() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_composite"]], "test_constituentreport() (armi.reactor.tests.test_composites.testcompositetree method)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree.test_constituentReport"]], "test_containsatleastonechildoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsAtLeastOneChildOfType"]], "test_containsheavymetal() (armi.reactor.tests.test_composites.testmiscmethods method)": [[354, "armi.reactor.tests.test_composites.TestMiscMethods.test_containsHeavyMetal"]], "test_containsonlychildrenoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsOnlyChildrenOfType"]], "test_copyparamsfrom() (armi.reactor.tests.test_composites.testmiscmethods method)": [[354, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsFrom"]], "test_copyparamstochildren() (armi.reactor.tests.test_composites.testmiscmethods method)": [[354, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsToChildren"]], "test_dimensionreport() (armi.reactor.tests.test_composites.testmiscmethods method)": [[354, "armi.reactor.tests.test_composites.TestMiscMethods.test_dimensionReport"]], "test_expandlfps() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_expandLFPs"]], "test_flagconversion() (armi.reactor.tests.test_composites.testflagserializer method)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagConversion"]], "test_flagserialization() (armi.reactor.tests.test_composites.testflagserializer method)": [[354, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagSerialization"]], "test_getatomicweight() (armi.reactor.tests.test_composites.testmiscmethods method)": [[354, "armi.reactor.tests.test_composites.TestMiscMethods.test_getAtomicWeight"]], "test_getboundingcirlceouterdiameter() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_getBoundingCirlceOuterDiameter"]], "test_getchildren() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_getChildren"]], "test_getchildrenincludematerials() (armi.reactor.tests.test_composites.testcompositetree method)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree.test_getChildrenIncludeMaterials"]], "test_getfpmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFPMass"]], "test_getfissilemass() (armi.reactor.tests.test_composites.testcompositetree method)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFissileMass"]], "test_getfuelmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFuelMass"]], "test_gethmmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree.test_getHMMass"]], "test_getintegratedmgflux() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_getIntegratedMgFlux"]], "test_getlumpedfissionproductsifnecessarynullcase() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_getLumpedFissionProductsIfNecessaryNullCase"]], "test_getmaxparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMaxParam"]], "test_getminparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMinParam"]], "test_getname() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_getName"]], "test_getnuclides() (armi.reactor.tests.test_composites.testcompositetree method)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree.test_getNuclides"]], "test_getnumberdensities() (armi.reactor.tests.test_composites.testmiscmethods method)": [[354, "armi.reactor.tests.test_composites.TestMiscMethods.test_getNumberDensities"]], "test_getnumberdensitieswithexpandedfissionproducts() (armi.reactor.tests.test_composites.testmiscmethods method)": [[354, "armi.reactor.tests.test_composites.TestMiscMethods.test_getNumberDensitiesWithExpandedFissionProducts"]], "test_getparamnames() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_getParamNames"]], "test_getreactionratedict() (armi.reactor.tests.test_composites.testgetreactionratedict method)": [[354, "armi.reactor.tests.test_composites.TestGetReactionRateDict.test_getReactionRateDict"]], "test_getreactionrates() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_getReactionRates"]], "test_hasflags() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlags"]], "test_hasflagsnotypespecified() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsNoTypeSpecified"]], "test_hasflagssubstring() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsSubstring"]], "test_itercomponents() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_iterComponents"]], "test_namecontains() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_nameContains"]], "test_nucspec() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_nucSpec"]], "test_ordering() (armi.reactor.tests.test_composites.testcompositetree method)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree.test_ordering"]], "test_requireslumpedfissionproducts() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_requiresLumpedFissionProducts"]], "test_setchildrenlumpedfissionproducts() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_setChildrenLumpedFissionProducts"]], "test_setmass() (armi.reactor.tests.test_composites.testmiscmethods method)": [[354, "armi.reactor.tests.test_composites.TestMiscMethods.test_setMass"]], "test_sort() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_sort"]], "test_summing() (armi.reactor.tests.test_composites.testcompositetree method)": [[354, "armi.reactor.tests.test_composites.TestCompositeTree.test_summing"]], "test_syncparameters() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_syncParameters"]], "test_updatevolume() (armi.reactor.tests.test_composites.testcompositepattern method)": [[354, "armi.reactor.tests.test_composites.TestCompositePattern.test_updateVolume"]], "testexcorecollection (class in armi.reactor.tests.test_excorestructures)": [[355, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection"]], "testexcorestructure (class in armi.reactor.tests.test_excorestructures)": [[355, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure"]], "testspentfuelpool (class in armi.reactor.tests.test_excorestructures)": [[355, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool"]], "armi.reactor.tests.test_excorestructures": [[355, "module-armi.reactor.tests.test_excoreStructures"]], "test_add() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[355, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_add"]], "test_add() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[355, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_add"]], "test_addlikeattribute() (armi.reactor.tests.test_excorestructures.testexcorecollection method)": [[355, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection.test_addLikeAttribute"]], "test_addlikedict() (armi.reactor.tests.test_excorestructures.testexcorecollection method)": [[355, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection.test_addLikeDict"]], "test_constructor() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[355, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_constructor"]], "test_constructor() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[355, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_constructor"]], "test_getassembly() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[355, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_getAssembly"]], "test_getnextlocation() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[355, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_getNextLocation"]], "test_normalizenames() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[355, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_normalizeNames"]], "test_parentreactor() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[355, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_parentReactor"]], "test_representation() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[355, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_representation"]], "test_representation() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[355, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_representation"]], "test_updatenumberofcolumns() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[355, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_updateNumberOfColumns"]], "testflags (class in armi.reactor.tests.test_flags)": [[356, "armi.reactor.tests.test_flags.TestFlags"]], "armi.reactor.tests.test_flags": [[356, "module-armi.reactor.tests.test_flags"]], "test_convertsstringswithnonflags() (armi.reactor.tests.test_flags.testflags method)": [[356, "armi.reactor.tests.test_flags.TestFlags.test_convertsStringsWithNonFlags"]], "test_defaultisfalse() (armi.reactor.tests.test_flags.testflags method)": [[356, "armi.reactor.tests.test_flags.TestFlags.test_defaultIsFalse"]], "test_flagstoandfromstring() (armi.reactor.tests.test_flags.testflags method)": [[356, "armi.reactor.tests.test_flags.TestFlags.test_flagsToAndFromString"]], "test_fromstring() (armi.reactor.tests.test_flags.testflags method)": [[356, "armi.reactor.tests.test_flags.TestFlags.test_fromString"]], "test_fromstringstrict() (armi.reactor.tests.test_flags.testflags method)": [[356, "armi.reactor.tests.test_flags.TestFlags.test_fromStringStrict"]], "test_ispickleable() (armi.reactor.tests.test_flags.testflags method)": [[356, "armi.reactor.tests.test_flags.TestFlags.test_isPickleable"]], "test_lookup() (armi.reactor.tests.test_flags.testflags method)": [[356, "armi.reactor.tests.test_flags.TestFlags.test_lookup"]], "test_tostringalphabetical() (armi.reactor.tests.test_flags.testflags method)": [[356, "armi.reactor.tests.test_flags.TestFlags.test_toStringAlphabetical"]], "testgeomtype (class in armi.reactor.tests.test_geometry)": [[357, "armi.reactor.tests.test_geometry.TestGeomType"]], "testsymmetrytype (class in armi.reactor.tests.test_geometry)": [[357, "armi.reactor.tests.test_geometry.TestSymmetryType"]], "testsystemlayoutinput (class in armi.reactor.tests.test_geometry)": [[357, "armi.reactor.tests.test_geometry.TestSystemLayoutInput"]], "testsystemlayoutinputtrz (class in armi.reactor.tests.test_geometry)": [[357, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry": [[357, "module-armi.reactor.tests.test_geometry"]], "test_symmetryfactor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[357, "armi.reactor.tests.test_geometry.TestSymmetryType.test_SymmetryFactor"]], "test_trzyamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[357, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_TRZyamlIO"]], "test_asciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[357, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_asciimap"]], "test_baseconstructor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[357, "armi.reactor.tests.test_geometry.TestSymmetryType.test_baseConstructor"]], "test_checkvalidgeomsymmetrycombo() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[357, "armi.reactor.tests.test_geometry.TestSymmetryType.test_checkValidGeomSymmetryCombo"]], "test_domaintypenulls() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[357, "armi.reactor.tests.test_geometry.TestSymmetryType.test_domainTypeNulls"]], "test_fromany() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[357, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromAny"]], "test_fromstr() (armi.reactor.tests.test_geometry.testgeomtype method)": [[357, "armi.reactor.tests.test_geometry.TestGeomType.test_fromStr"]], "test_fromstr() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[357, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromStr"]], "test_growtofullcore() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[357, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_growToFullCore"]], "test_label() (armi.reactor.tests.test_geometry.testgeomtype method)": [[357, "armi.reactor.tests.test_geometry.TestGeomType.test_label"]], "test_label() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[357, "armi.reactor.tests.test_geometry.TestSymmetryType.test_label"]], "test_readasciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[357, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readAsciimap"]], "test_readhexgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[357, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readHexGeomXML"]], "test_readreactor() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[357, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readReactor"]], "test_readtrzgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[357, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_readTRZGeomXML"]], "test_str() (armi.reactor.tests.test_geometry.testgeomtype method)": [[357, "armi.reactor.tests.test_geometry.TestGeomType.test_str"]], "test_yamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[357, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_yamlIO"]], "mockcomposite (class in armi.reactor.tests.test_parameters)": [[358, "armi.reactor.tests.test_parameters.MockComposite"]], "mockcompositechild (class in armi.reactor.tests.test_parameters)": [[358, "armi.reactor.tests.test_parameters.MockCompositeChild"]], "mockcompositegrandparent (class in armi.reactor.tests.test_parameters)": [[358, "armi.reactor.tests.test_parameters.MockCompositeGrandParent"]], "mockcompositeparent (class in armi.reactor.tests.test_parameters)": [[358, "armi.reactor.tests.test_parameters.MockCompositeParent"]], "paramcollectionwhere (class in armi.reactor.tests.test_parameters)": [[358, "armi.reactor.tests.test_parameters.ParamCollectionWhere"]], "paramcollectionwhere.scopeparamcollection (class in armi.reactor.tests.test_parameters)": [[358, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection"]], "parametertests (class in armi.reactor.tests.test_parameters)": [[358, "armi.reactor.tests.test_parameters.ParameterTests"]], "armi.reactor.tests.test_parameters": [[358, "module-armi.reactor.tests.test_parameters"]], "pdefs (armi.reactor.tests.test_parameters.paramcollectionwhere.scopeparamcollection attribute)": [[358, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection.pDefs"]], "pb (armi.reactor.tests.test_parameters.paramcollectionwhere.scopeparamcollection attribute)": [[358, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection.pb"]], "test_attemptingtosetparamwithoutsetterfails() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_attemptingToSetParamWithoutSetterFails"]], "test_cannotcreateattrbuteonparametercollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateAttrbuteOnParameterCollectionSubclass"]], "test_cannotcreateinstanceof_nodefault() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_NoDefault"]], "test_cannotcreateinstanceof_undefined() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_Undefined"]], "test_cannotdefineparameterwithsamename() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameName"]], "test_cannotdefineparameterwithsamenameforcollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameNameForCollectionSubclass"]], "test_categories() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_categories"]], "test_complicated() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[358, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_complicated"]], "test_defaultlocation() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_defaultLocation"]], "test_getwithoutdefaultraisesparametererror() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_getWithoutDefaultRaisesParameterError"]], "test_mutabledefaultsnotsupported() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_mutableDefaultsNotSupported"]], "test_oncategory() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[358, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_onCategory"]], "test_onlocation() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[358, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_onLocation"]], "test_paramdefinitionscompose() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_paramDefinitionsCompose"]], "test_parampropertydoesnotconflict() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflict"]], "test_parampropertydoesnotconflictwithnonedefault() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflictWithNoneDefault"]], "test_parametercollectionshave__slots__() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_parameterCollectionsHave__slots__"]], "test_serializer_pack_unpack() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_serializer_pack_unpack"]], "test_setter() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_setter"]], "test_settergetterbasics() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_setterGetterBasics"]], "test_writesomeparamstodb() (armi.reactor.tests.test_parameters.parametertests method)": [[358, "armi.reactor.tests.test_parameters.ParameterTests.test_writeSomeParamsToDB"]], "cartesianreactorneighbortests (class in armi.reactor.tests.test_reactors)": [[359, "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests"]], "cartesianreactortests (class in armi.reactor.tests.test_reactors)": [[359, "armi.reactor.tests.test_reactors.CartesianReactorTests"]], "hexreactortests (class in armi.reactor.tests.test_reactors)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests"]], "reactortests (class in armi.reactor.tests.test_reactors)": [[359, "armi.reactor.tests.test_reactors.ReactorTests"]], "armi.reactor.tests.test_reactors": [[359, "module-armi.reactor.tests.test_reactors"]], "buildoperatorofemptycartesianblocks() (in module armi.reactor.tests.test_reactors)": [[359, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyCartesianBlocks"]], "buildoperatorofemptyhexblocks() (in module armi.reactor.tests.test_reactors)": [[359, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyHexBlocks"]], "loadtestreactor() (in module armi.reactor.tests.test_reactors)": [[359, "armi.reactor.tests.test_reactors.loadTestReactor"]], "reducetestreactorrings() (in module armi.reactor.tests.test_reactors)": [[359, "armi.reactor.tests.test_reactors.reduceTestReactorRings"]], "test_addmorenodes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_addMoreNodes"]], "test_addmultiplecores() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_addMultipleCores"]], "test_applythermalexpansion_coreconstruct() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_applyThermalExpansion_CoreConstruct"]], "test_buildmanualzones() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZones"]], "test_buildmanualzonesempty() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZonesEmpty"]], "test_coresfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_coreSfp"]], "test_countblocksoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_countBlocksOfType"]], "test_countfuelaxialblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_countFuelAxialBlocks"]], "test_createassemblyoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfType"]], "test_createassemblyoftypeexpandedcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfTypeExpandedCore"]], "test_createfreshfeed() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_createFreshFeed"]], "test_differentnuclidemodels() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_differentNuclideModels"]], "test_factorysortsetting() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_factorySortSetting"]], "test_findallaxialmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints"]], "test_findallaxialmeshpoints_wsubmesh() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints_wSubmesh"]], "test_findallazimeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAziMeshPoints"]], "test_findallmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllMeshPoints"]], "test_findallradmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllRadMeshPoints"]], "test_findaxialmeshindexof() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAxialMeshIndexOf"]], "test_findneighbors() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_findNeighbors"]], "test_findneighborscartesian() (armi.reactor.tests.test_reactors.cartesianreactorneighbortests method)": [[359, "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests.test_findNeighborsCartesian"]], "test_genassembliesaddedthiscycle() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_genAssembliesAddedThisCycle"]], "test_genblocksbylocname() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_genBlocksByLocName"]], "test_geomtype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_geomType"]], "test_getallxssuffixes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAllXsSuffixes"]], "test_getassembliesincircularring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInCircularRing"]], "test_getassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInHexRing"]], "test_getassembliesinsquarering() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[359, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssembliesInSquareRing"]], "test_getassembliesonsymmetryline() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesOnSymmetryLine"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[359, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssemblyPitch"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyPitch"]], "test_getassemblywithloc() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyWithLoc"]], "test_getassemblywithname() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyWithName"]], "test_getavgtemp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAvgTemp"]], "test_getblocksbyindices() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getBlocksByIndices"]], "test_getdominantmaterial() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getDominantMaterial"]], "test_getfirstfuelblockaxialnode() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFirstFuelBlockAxialNode"]], "test_getfluxvector() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFluxVector"]], "test_getfuelbottomheight() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFuelBottomHeight"]], "test_getgridbounds() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getGridBounds"]], "test_getmass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMass"]], "test_getmaxassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxAssembliesInHexRing"]], "test_getmaxnumpins() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxNumPins"]], "test_getminimumpercentfluxinfuel() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMinimumPercentFluxInFuel"]], "test_getnozzletypes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNozzleTypes"]], "test_getnuclidecategories() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNuclideCategories"]], "test_getnuclidecategorieslogging() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[359, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getNuclideCategoriesLogging"]], "test_getnumassemblieswithallringsfilledout() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOut"]], "test_getnumassemblieswithallringsfilledoutbipass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOutBipass"]], "test_getnumenergygroups() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumEnergyGroups"]], "test_getnumrings() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumRings"]], "test_getreactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getReactor"]], "test_getscalarevolution() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getScalarEvolution"]], "test_getsetparameters() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSetParameters"]], "test_getsymmetryfactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSymmetryFactor"]], "test_gettotalparam() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_getTotalParam"]], "test_growtofullcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_growToFullCore"]], "test_ifmissingspatialgrid() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_ifMissingSpatialGrid"]], "test_ispickleable() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_isPickleable"]], "test_locations() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_locations"]], "test_nonuniformassems() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_nonUniformAssems"]], "test_normalizenames() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_normalizeNames"]], "test_pincoordsallblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_pinCoordsAllBlocks"]], "test_removeassembliesinring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRing"]], "test_removeassembliesinringbycount() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingByCount"]], "test_removeassembliesinringhex() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingHex"]], "test_removeassembly() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembly"]], "test_removeassemblynosfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssemblyNoSfp"]], "test_restorereactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_restoreReactor"]], "test_saveallflux() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_saveAllFlux"]], "test_setb10voloncreation() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_setB10VolOnCreation"]], "test_setpitchuniform() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_setPitchUniform"]], "test_setpowerifnecessary() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_setPowerIfNecessary"]], "test_sortassembyring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortAssemByRing"]], "test_sortchildren() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortChildren"]], "test_updateblockbolheights_dbload() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_updateBlockBOLHeights_DBLoad"]], "test_whennoassemblies() (armi.reactor.tests.test_reactors.hexreactortests method)": [[359, "armi.reactor.tests.test_reactors.HexReactorTests.test_whenNoAssemblies"]], "testrztreactor (class in armi.reactor.tests.test_rz_reactors)": [[360, "armi.reactor.tests.test_rz_reactors.TestRZTReactor"]], "testrztreactormodern (class in armi.reactor.tests.test_rz_reactors)": [[360, "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern"]], "armi.reactor.tests.test_rz_reactors": [[360, "module-armi.reactor.tests.test_rz_reactors"]], "test_findallmeshpoints() (armi.reactor.tests.test_rz_reactors.testrztreactor method)": [[360, "armi.reactor.tests.test_rz_reactors.TestRZTReactor.test_findAllMeshPoints"]], "test_loadrzt() (armi.reactor.tests.test_rz_reactors.testrztreactor method)": [[360, "armi.reactor.tests.test_rz_reactors.TestRZTReactor.test_loadRZT"]], "test_loadrzt_reactor() (armi.reactor.tests.test_rz_reactors.testrztreactormodern method)": [[360, "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern.test_loadRZT_reactor"]], "testzone (class in armi.reactor.tests.test_zones)": [[361, "armi.reactor.tests.test_zones.TestZone"]], "testzones (class in armi.reactor.tests.test_zones)": [[361, "armi.reactor.tests.test_zones.TestZones"]], "armi.reactor.tests.test_zones": [[361, "module-armi.reactor.tests.test_zones"]], "test_additem() (armi.reactor.tests.test_zones.testzone method)": [[361, "armi.reactor.tests.test_zones.TestZone.test_addItem"]], "test_additems() (armi.reactor.tests.test_zones.testzone method)": [[361, "armi.reactor.tests.test_zones.TestZone.test_addItems"]], "test_addloc() (armi.reactor.tests.test_zones.testzone method)": [[361, "armi.reactor.tests.test_zones.TestZone.test_addLoc"]], "test_addlocs() (armi.reactor.tests.test_zones.testzone method)": [[361, "armi.reactor.tests.test_zones.TestZone.test_addLocs"]], "test_blocks() (armi.reactor.tests.test_zones.testzone method)": [[361, "armi.reactor.tests.test_zones.TestZone.test_blocks"]], "test_dictionaryinterface() (armi.reactor.tests.test_zones.testzones method)": [[361, "armi.reactor.tests.test_zones.TestZones.test_dictionaryInterface"]], "test_findzoneitisin() (armi.reactor.tests.test_zones.testzones method)": [[361, "armi.reactor.tests.test_zones.TestZones.test_findZoneItIsIn"]], "test_getalllocations() (armi.reactor.tests.test_zones.testzones method)": [[361, "armi.reactor.tests.test_zones.TestZones.test_getAllLocations"]], "test_getzonelocations() (armi.reactor.tests.test_zones.testzones method)": [[361, "armi.reactor.tests.test_zones.TestZones.test_getZoneLocations"]], "test_iteration() (armi.reactor.tests.test_zones.testzone method)": [[361, "armi.reactor.tests.test_zones.TestZone.test_iteration"]], "test_removeitem() (armi.reactor.tests.test_zones.testzone method)": [[361, "armi.reactor.tests.test_zones.TestZone.test_removeItem"]], "test_removeitems() (armi.reactor.tests.test_zones.testzone method)": [[361, "armi.reactor.tests.test_zones.TestZone.test_removeItems"]], "test_removeloc() (armi.reactor.tests.test_zones.testzone method)": [[361, "armi.reactor.tests.test_zones.TestZone.test_removeLoc"]], "test_removelocs() (armi.reactor.tests.test_zones.testzone method)": [[361, "armi.reactor.tests.test_zones.TestZone.test_removeLocs"]], "test_repr() (armi.reactor.tests.test_zones.testzone method)": [[361, "armi.reactor.tests.test_zones.TestZone.test_repr"]], "test_sortzones() (armi.reactor.tests.test_zones.testzones method)": [[361, "armi.reactor.tests.test_zones.TestZones.test_sortZones"]], "test_summary() (armi.reactor.tests.test_zones.testzones method)": [[361, "armi.reactor.tests.test_zones.TestZones.test_summary"]], "valid_types (armi.reactor.zones.zone attribute)": [[362, "armi.reactor.zones.Zone.VALID_TYPES"]], "zone (class in armi.reactor.zones)": [[362, "armi.reactor.zones.Zone"]], "zones (class in armi.reactor.zones)": [[362, "armi.reactor.zones.Zones"]], "additem() (armi.reactor.zones.zone method)": [[362, "armi.reactor.zones.Zone.addItem"]], "additems() (armi.reactor.zones.zone method)": [[362, "armi.reactor.zones.Zone.addItems"]], "addloc() (armi.reactor.zones.zone method)": [[362, "armi.reactor.zones.Zone.addLoc"]], "addlocs() (armi.reactor.zones.zone method)": [[362, "armi.reactor.zones.Zone.addLocs"]], "addzone() (armi.reactor.zones.zones method)": [[362, "armi.reactor.zones.Zones.addZone"]], "addzones() (armi.reactor.zones.zones method)": [[362, "armi.reactor.zones.Zones.addZones"]], "armi.reactor.zones": [[362, "module-armi.reactor.zones"]], "checkduplicates() (armi.reactor.zones.zones method)": [[362, "armi.reactor.zones.Zones.checkDuplicates"]], "findzoneitisin() (armi.reactor.zones.zones method)": [[362, "armi.reactor.zones.Zones.findZoneItIsIn"]], "getalllocations() (armi.reactor.zones.zones method)": [[362, "armi.reactor.zones.Zones.getAllLocations"]], "getzonelocations() (armi.reactor.zones.zones method)": [[362, "armi.reactor.zones.Zones.getZoneLocations"]], "names (armi.reactor.zones.zones property)": [[362, "armi.reactor.zones.Zones.names"]], "removeitem() (armi.reactor.zones.zone method)": [[362, "armi.reactor.zones.Zone.removeItem"]], "removeitems() (armi.reactor.zones.zone method)": [[362, "armi.reactor.zones.Zone.removeItems"]], "removeloc() (armi.reactor.zones.zone method)": [[362, "armi.reactor.zones.Zone.removeLoc"]], "removelocs() (armi.reactor.zones.zone method)": [[362, "armi.reactor.zones.Zone.removeLocs"]], "removezone() (armi.reactor.zones.zones method)": [[362, "armi.reactor.zones.Zones.removeZone"]], "removezones() (armi.reactor.zones.zones method)": [[362, "armi.reactor.zones.Zones.removeZones"]], "sortzones() (armi.reactor.zones.zones method)": [[362, "armi.reactor.zones.Zones.sortZones"]], "summary() (armi.reactor.zones.zones method)": [[362, "armi.reactor.zones.Zones.summary"]], "deduplicationfilter (class in armi.runlog)": [[363, "armi.runLog.DeduplicationFilter"]], "fmt (armi.runlog.runlogger attribute)": [[363, "armi.runLog.RunLogger.FMT"]], "nulllogger (class in armi.runlog)": [[363, "armi.runLog.NullLogger"]], "runlogger (class in armi.runlog)": [[363, "armi.runLog.RunLogger"]], "addhandler() (armi.runlog.nulllogger method)": [[363, "armi.runLog.NullLogger.addHandler"]], "allowstopduplicates() (armi.runlog.runlogger method)": [[363, "armi.runLog.RunLogger.allowStopDuplicates"]], "armi.runlog": [[363, "module-armi.runLog"]], "close() (armi.runlog.runlogger method)": [[363, "armi.runLog.RunLogger.close"]], "close() (in module armi.runlog)": [[363, "armi.runLog.close"]], "concatenatelogs() (in module armi.runlog)": [[363, "armi.runLog.concatenateLogs"]], "createlogdir() (in module armi.runlog)": [[363, "armi.runLog.createLogDir"]], "debug() (in module armi.runlog)": [[363, "armi.runLog.debug"]], "error() (in module armi.runlog)": [[363, "armi.runLog.error"]], "extra() (in module armi.runlog)": [[363, "armi.runLog.extra"]], "filter() (armi.runlog.deduplicationfilter method)": [[363, "armi.runLog.DeduplicationFilter.filter"]], "flush() (armi.runlog.runlogger method)": [[363, "armi.runLog.RunLogger.flush"]], "getduplicatesfilter() (armi.runlog.runlogger method)": [[363, "armi.runLog.RunLogger.getDuplicatesFilter"]], "getverbosity() (in module armi.runlog)": [[363, "armi.runLog.getVerbosity"]], "header() (in module armi.runlog)": [[363, "armi.runLog.header"]], "important() (in module armi.runlog)": [[363, "armi.runLog.important"]], "info() (in module armi.runlog)": [[363, "armi.runLog.info"]], "log() (armi.runlog.runlogger method)": [[363, "armi.runLog.RunLogger.log"]], "logfactory() (in module armi.runlog)": [[363, "armi.runLog.logFactory"]], "raw() (in module armi.runlog)": [[363, "armi.runLog.raw"]], "setverbosity() (armi.runlog.runlogger method)": [[363, "armi.runLog.RunLogger.setVerbosity"]], "setverbosity() (in module armi.runlog)": [[363, "armi.runLog.setVerbosity"]], "warning() (in module armi.runlog)": [[363, "armi.runLog.warning"]], "warningreport() (armi.runlog.runlogger method)": [[363, "armi.runLog.RunLogger.warningReport"]], "warningreport() (in module armi.runlog)": [[363, "armi.runLog.warningReport"]], "write() (armi.runlog.runlogger method)": [[363, "armi.runLog.RunLogger.write"]], "armi.settings": [[364, "module-armi.settings"]], "isboolsetting() (in module armi.settings)": [[364, "armi.settings.isBoolSetting"]], "promptforsettingsfile() (in module armi.settings)": [[364, "armi.settings.promptForSettingsFile"]], "recursivelyloadsettingsfiles() (in module armi.settings)": [[364, "armi.settings.recursivelyLoadSettingsFiles"]], "settings (class in armi.settings.casesettings)": [[365, "armi.settings.caseSettings.Settings"]], "armi.settings.casesettings": [[365, "module-armi.settings.caseSettings"]], "casetitle (armi.settings.casesettings.settings property)": [[365, "armi.settings.caseSettings.Settings.caseTitle"]], "defaultcasetitle (armi.settings.casesettings.settings attribute)": [[365, "armi.settings.caseSettings.Settings.defaultCaseTitle"]], "duplicate() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.duplicate"]], "environmentsettings (armi.settings.casesettings.settings property)": [[365, "armi.settings.caseSettings.Settings.environmentSettings"]], "failonload() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.failOnLoad"]], "getsetting() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.getSetting"]], "getsettingssetbyuser() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.getSettingsSetByUser"]], "initlogverbosity() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.initLogVerbosity"]], "inputdirectory (armi.settings.casesettings.settings property)": [[365, "armi.settings.caseSettings.Settings.inputDirectory"]], "items() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.items"]], "keys() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.keys"]], "loadfrominputfile() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.loadFromInputFile"]], "loadfromstring() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.loadFromString"]], "modified() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.modified"]], "registeruserplugins() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.registerUserPlugins"]], "reverttodefaults() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.revertToDefaults"]], "setmoduleverbosities() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.setModuleVerbosities"]], "updateenvironmentsettingsfrom() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.updateEnvironmentSettingsFrom"]], "values() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.values"]], "writetoyamlfile() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.writeToYamlFile"]], "writetoyamlstream() (armi.settings.casesettings.settings method)": [[365, "armi.settings.caseSettings.Settings.writeToYamlStream"]], "armi.settings.fwsettings": [[366, "module-armi.settings.fwSettings"]], "getframeworksettings() (in module armi.settings.fwsettings)": [[366, "armi.settings.fwSettings.getFrameworkSettings"]], "armi.settings.fwsettings.databasesettings": [[367, "module-armi.settings.fwSettings.databaseSettings"]], "definesettings() (in module armi.settings.fwsettings.databasesettings)": [[367, "armi.settings.fwSettings.databaseSettings.defineSettings"]], "armi.settings.fwsettings.globalsettings": [[368, "module-armi.settings.fwSettings.globalSettings"]], "definesettings() (in module armi.settings.fwsettings.globalsettings)": [[368, "armi.settings.fwSettings.globalSettings.defineSettings"]], "armi.settings.fwsettings.reportsettings": [[369, "module-armi.settings.fwSettings.reportSettings"]], "definesettings() (in module armi.settings.fwsettings.reportsettings)": [[369, "armi.settings.fwSettings.reportSettings.defineSettings"]], "tightcouplingsettingdef (class in armi.settings.fwsettings.tightcouplingsettings)": [[370, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef"]], "tightcouplingsettings (class in armi.settings.fwsettings.tightcouplingsettings)": [[370, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettings"]], "armi.settings.fwsettings.tightcouplingsettings": [[370, "module-armi.settings.fwSettings.tightCouplingSettings"]], "dump() (armi.settings.fwsettings.tightcouplingsettings.tightcouplingsettingdef method)": [[370, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef.dump"]], "serializetightcouplingsettings() (in module armi.settings.fwsettings.tightcouplingsettings)": [[370, "armi.settings.fwSettings.tightCouplingSettings.serializeTightCouplingSettings"]], "tightcouplingsettingsvalidator() (in module armi.settings.fwsettings.tightcouplingsettings)": [[370, "armi.settings.fwSettings.tightCouplingSettings.tightCouplingSettingsValidator"]], "default (class in armi.settings.setting)": [[371, "armi.settings.setting.Default"]], "flaglistsetting (class in armi.settings.setting)": [[371, "armi.settings.setting.FlagListSetting"]], "option (class in armi.settings.setting)": [[371, "armi.settings.setting.Option"]], "setting (class in armi.settings.setting)": [[371, "armi.settings.setting.Setting"]], "addoption() (armi.settings.setting.setting method)": [[371, "armi.settings.setting.Setting.addOption"]], "addoptions() (armi.settings.setting.setting method)": [[371, "armi.settings.setting.Setting.addOptions"]], "armi.settings.setting": [[371, "module-armi.settings.setting"]], "changedefault() (armi.settings.setting.setting method)": [[371, "armi.settings.setting.Setting.changeDefault"]], "containedtype (armi.settings.setting.setting property)": [[371, "armi.settings.setting.Setting.containedType"]], "default (armi.settings.setting.setting property)": [[371, "armi.settings.setting.Setting.default"]], "dump() (armi.settings.setting.flaglistsetting method)": [[371, "armi.settings.setting.FlagListSetting.dump"]], "dump() (armi.settings.setting.setting method)": [[371, "armi.settings.setting.Setting.dump"]], "getcustomattributes() (armi.settings.setting.setting method)": [[371, "armi.settings.setting.Setting.getCustomAttributes"]], "getdefaultattributes() (armi.settings.setting.setting method)": [[371, "armi.settings.setting.Setting.getDefaultAttributes"]], "isdefault() (armi.settings.setting.setting method)": [[371, "armi.settings.setting.Setting.isDefault"]], "offdefault (armi.settings.setting.setting property)": [[371, "armi.settings.setting.Setting.offDefault"]], "option (armi.settings.setting.option attribute)": [[371, "armi.settings.setting.Option.option"]], "reverttodefault() (armi.settings.setting.setting method)": [[371, "armi.settings.setting.Setting.revertToDefault"]], "schema() (armi.settings.setting.flaglistsetting static method)": [[371, "armi.settings.setting.FlagListSetting.schema"]], "setvalue() (armi.settings.setting.setting method)": [[371, "armi.settings.setting.Setting.setValue"]], "settingname (armi.settings.setting.default attribute)": [[371, "armi.settings.setting.Default.settingName"]], "settingname (armi.settings.setting.option attribute)": [[371, "armi.settings.setting.Option.settingName"]], "underlyingtype (armi.settings.setting.setting property)": [[371, "armi.settings.setting.Setting.underlyingType"]], "value (armi.settings.setting.default attribute)": [[371, "armi.settings.setting.Default.value"]], "value (armi.settings.setting.setting property)": [[371, "armi.settings.setting.Setting.value"]], "custom (armi.settings.settingsio.roots attribute)": [[372, "armi.settings.settingsIO.Roots.CUSTOM"]], "roots (class in armi.settings.settingsio)": [[372, "armi.settings.settingsIO.Roots"]], "runlogpromptcancel": [[372, "armi.settings.settingsIO.RunLogPromptCancel"]], "runlogpromptunresolvable": [[372, "armi.settings.settingsIO.RunLogPromptUnresolvable"]], "settingrenamer (class in armi.settings.settingsio)": [[372, "armi.settings.settingsIO.SettingRenamer"]], "settingsreader (class in armi.settings.settingsio)": [[372, "armi.settings.settingsIO.SettingsReader"]], "settingsreader.settingsinputformat (class in armi.settings.settingsio)": [[372, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat"]], "settingswriter (class in armi.settings.settingsio)": [[372, "armi.settings.settingsIO.SettingsWriter"]], "version (armi.settings.settingsio.roots attribute)": [[372, "armi.settings.settingsIO.Roots.VERSION"]], "yaml (armi.settings.settingsio.settingsreader.settingsinputformat attribute)": [[372, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.YAML"]], "armi.settings.settingsio": [[372, "module-armi.settings.settingsIO"]], "fromext() (armi.settings.settingsio.settingsreader.settingsinputformat class method)": [[372, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.fromExt"]], "prompt() (in module armi.settings.settingsio)": [[372, "armi.settings.settingsIO.prompt"]], "readfromfile() (armi.settings.settingsio.settingsreader method)": [[372, "armi.settings.settingsIO.SettingsReader.readFromFile"]], "readfromstream() (armi.settings.settingsio.settingsreader method)": [[372, "armi.settings.settingsIO.SettingsReader.readFromStream"]], "renamesetting() (armi.settings.settingsio.settingrenamer method)": [[372, "armi.settings.settingsIO.SettingRenamer.renameSetting"]], "writeyaml() (armi.settings.settingsio.settingswriter method)": [[372, "armi.settings.settingsIO.SettingsWriter.writeYaml"]], "inspector (class in armi.settings.settingsvalidation)": [[373, "armi.settings.settingsValidation.Inspector"]], "no_action() (armi.settings.settingsvalidation.inspector static method)": [[373, "armi.settings.settingsValidation.Inspector.NO_ACTION"]], "query (class in armi.settings.settingsvalidation)": [[373, "armi.settings.settingsValidation.Query"]], "addquery() (armi.settings.settingsvalidation.inspector method)": [[373, "armi.settings.settingsValidation.Inspector.addQuery"]], "addquerybadlocationwilllikelyfail() (armi.settings.settingsvalidation.inspector method)": [[373, "armi.settings.settingsValidation.Inspector.addQueryBadLocationWillLikelyFail"]], "addquerycurrentsettingmaynotsupportfeatures() (armi.settings.settingsvalidation.inspector method)": [[373, "armi.settings.settingsValidation.Inspector.addQueryCurrentSettingMayNotSupportFeatures"]], "armi.settings.settingsvalidation": [[373, "module-armi.settings.settingsValidation"]], "createqueryrevertbadpathtodefault() (in module armi.settings.settingsvalidation)": [[373, "armi.settings.settingsValidation.createQueryRevertBadPathToDefault"]], "iscorrective() (armi.settings.settingsvalidation.query method)": [[373, "armi.settings.settingsValidation.Query.isCorrective"]], "resolve() (armi.settings.settingsvalidation.query method)": [[373, "armi.settings.settingsValidation.Query.resolve"]], "run() (armi.settings.settingsvalidation.inspector method)": [[373, "armi.settings.settingsValidation.Inspector.run"]], "validateversion() (in module armi.settings.settingsvalidation)": [[373, "armi.settings.settingsValidation.validateVersion"]], "armi.settings.tests": [[374, "module-armi.settings.tests"]], "testinspector (class in armi.settings.tests.test_inspectors)": [[375, "armi.settings.tests.test_inspectors.TestInspector"]], "armi.settings.tests.test_inspectors": [[375, "module-armi.settings.tests.test_inspectors"]], "test_assigncs() (armi.settings.tests.test_inspectors.testinspector method)": [[375, "armi.settings.tests.test_inspectors.TestInspector.test_assignCS"]], "test_callablecorrectioncheck() (armi.settings.tests.test_inspectors.testinspector method)": [[375, "armi.settings.tests.test_inspectors.TestInspector.test_callableCorrectionCheck"]], "test_changeofcs() (armi.settings.tests.test_inspectors.testinspector method)": [[375, "armi.settings.tests.test_inspectors.TestInspector.test_changeOfCS"]], "test_checkforbothsimpleanddetailedcyclesinputs() (armi.settings.tests.test_inspectors.testinspector method)": [[375, "armi.settings.tests.test_inspectors.TestInspector.test_checkForBothSimpleAndDetailedCyclesInputs"]], "test_correctcyclestozeroburnup() (armi.settings.tests.test_inspectors.testinspector method)": [[375, "armi.settings.tests.test_inspectors.TestInspector.test_correctCyclesToZeroBurnup"]], "test_createqueryrevertbadpathtodefault() (armi.settings.tests.test_inspectors.testinspector method)": [[375, "armi.settings.tests.test_inspectors.TestInspector.test_createQueryRevertBadPathToDefault"]], "test_noncorrectivequery() (armi.settings.tests.test_inspectors.testinspector method)": [[375, "armi.settings.tests.test_inspectors.TestInspector.test_nonCorrectiveQuery"]], "test_overwritesettingscorrectivequery() (armi.settings.tests.test_inspectors.testinspector method)": [[375, "armi.settings.tests.test_inspectors.TestInspector.test_overwriteSettingsCorrectiveQuery"]], "test_query() (armi.settings.tests.test_inspectors.testinspector method)": [[375, "armi.settings.tests.test_inspectors.TestInspector.test_query"]], "dummysettingplugin1 (class in armi.settings.tests.test_settings)": [[376, "armi.settings.tests.test_settings.DummySettingPlugin1"]], "dummysettingplugin2 (class in armi.settings.tests.test_settings)": [[376, "armi.settings.tests.test_settings.DummySettingPlugin2"]], "pluginaddsoptions (class in armi.settings.tests.test_settings)": [[376, "armi.settings.tests.test_settings.PluginAddsOptions"]], "testaddingoptions (class in armi.settings.tests.test_settings)": [[376, "armi.settings.tests.test_settings.TestAddingOptions"]], "testflaglistsetting (class in armi.settings.tests.test_settings)": [[376, "armi.settings.tests.test_settings.TestFlagListSetting"]], "testsettings (class in armi.settings.tests.test_settings)": [[376, "armi.settings.tests.test_settings.TestSettings"]], "testsettings2 (class in armi.settings.tests.test_settings)": [[376, "armi.settings.tests.test_settings.TestSettings2"]], "testsettingsutils (class in armi.settings.tests.test_settings)": [[376, "armi.settings.tests.test_settings.TestSettingsUtils"]], "testsettingsvalidationutils (class in armi.settings.tests.test_settings)": [[376, "armi.settings.tests.test_settings.TestSettingsValidationUtils"]], "armi.settings.tests.test_settings": [[376, "module-armi.settings.tests.test_settings"]], "definesettings() (armi.settings.tests.test_settings.dummysettingplugin1 static method)": [[376, "armi.settings.tests.test_settings.DummySettingPlugin1.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.dummysettingplugin2 static method)": [[376, "armi.settings.tests.test_settings.DummySettingPlugin2.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.pluginaddsoptions static method)": [[376, "armi.settings.tests.test_settings.PluginAddsOptions.defineSettings"]], "test_addingoptions() (armi.settings.tests.test_settings.testaddingoptions method)": [[376, "armi.settings.tests.test_settings.TestAddingOptions.test_addingOptions"]], "test_copysetting() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_copySetting"]], "test_copysettingnotdefault() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_copySettingNotDefault"]], "test_csworks() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_csWorks"]], "test_default() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_default"]], "test_empty() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_empty"]], "test_flaglistsetting() (armi.settings.tests.test_settings.testflaglistsetting method)": [[376, "armi.settings.tests.test_settings.TestFlagListSetting.test_flagListSetting"]], "test_getfailures() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_getFailures"]], "test_getsettingssetbyuser() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_getSettingsSetByUser"]], "test_invalidflaglisttypeerror() (armi.settings.tests.test_settings.testflaglistsetting method)": [[376, "armi.settings.tests.test_settings.TestFlagListSetting.test_invalidFlagListTypeError"]], "test_listcoercion() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_listCoercion"]], "test_listsmutable() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_listsMutable"]], "test_metadata() (armi.settings.tests.test_settings.testsettings method)": [[376, "armi.settings.tests.test_settings.TestSettings.test_metaData"]], "test_modified() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_modified"]], "test_pluginsettings() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_pluginSettings"]], "test_pluginvalidatorsarediscovered() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_pluginValidatorsAreDiscovered"]], "test_prompt() (armi.settings.tests.test_settings.testsettingsutils method)": [[376, "armi.settings.tests.test_settings.TestSettingsUtils.test_prompt"]], "test_recursivescan() (armi.settings.tests.test_settings.testsettingsutils method)": [[376, "armi.settings.tests.test_settings.TestSettingsUtils.test_recursiveScan"]], "test_schemacheckstype() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_schemaChecksType"]], "test_setmoduleverbosities() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_setModuleVerbosities"]], "test_settingisokaytograb() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_settingIsOkayToGrab"]], "test_typedetection() (armi.settings.tests.test_settings.testsettings2 method)": [[376, "armi.settings.tests.test_settings.TestSettings2.test_typeDetection"]], "test_updateenvironmentsettingsfrom() (armi.settings.tests.test_settings.testsettings method)": [[376, "armi.settings.tests.test_settings.TestSettings.test_updateEnvironmentSettingsFrom"]], "test_validateversion() (armi.settings.tests.test_settings.testsettingsvalidationutils method)": [[376, "armi.settings.tests.test_settings.TestSettingsValidationUtils.test_validateVersion"]], "mockentrypoint (class in armi.settings.tests.test_settingsio)": [[377, "armi.settings.tests.test_settingsIO.MockEntryPoint"]], "settingargstests (class in armi.settings.tests.test_settingsio)": [[377, "armi.settings.tests.test_settingsIO.SettingArgsTests"]], "settingsfailuretests (class in armi.settings.tests.test_settingsio)": [[377, "armi.settings.tests.test_settingsIO.SettingsFailureTests"]], "settingsreadertests (class in armi.settings.tests.test_settingsio)": [[377, "armi.settings.tests.test_settingsIO.SettingsReaderTests"]], "settingsrenametests (class in armi.settings.tests.test_settingsio)": [[377, "armi.settings.tests.test_settingsIO.SettingsRenameTests"]], "settingswritertests (class in armi.settings.tests.test_settingsio)": [[377, "armi.settings.tests.test_settingsIO.SettingsWriterTests"]], "armi.settings.tests.test_settingsio": [[377, "module-armi.settings.tests.test_settingsIO"]], "name (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[377, "armi.settings.tests.test_settingsIO.MockEntryPoint.name"]], "settingsargument (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[377, "armi.settings.tests.test_settingsIO.MockEntryPoint.settingsArgument"]], "testsettings (armi.settings.tests.test_settingsio.settingsrenametests attribute)": [[377, "armi.settings.tests.test_settingsIO.SettingsRenameTests.testSettings"]], "test_basicsettingsreader() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[377, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_basicSettingsReader"]], "test_cannotloadsettingsafterparsingcommandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[377, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_cannotLoadSettingsAfterParsingCommandLineSetting"]], "test_collidingrenames() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[377, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_collidingRenames"]], "test_commandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[377, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_commandLineSetting"]], "test_errorsettingswriter() (armi.settings.tests.test_settingsio.settingswritertests method)": [[377, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_errorSettingsWriter"]], "test_invalidfile() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[377, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_invalidFile"]], "test_loadfromyamlfailsonbadnames() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[377, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_loadFromYamlFailsOnBadNames"]], "test_readfromfile() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[377, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_readFromFile"]], "test_rename() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[377, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_rename"]], "test_settingsobjsetting() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[377, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_settingsObjSetting"]], "test_writefull() (armi.settings.tests.test_settingsio.settingswritertests method)": [[377, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeFull"]], "test_writemedium() (armi.settings.tests.test_settingsio.settingswritertests method)": [[377, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeMedium"]], "test_writeshort() (armi.settings.tests.test_settingsio.settingswritertests method)": [[377, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeShort"]], "test_writeyaml() (armi.settings.tests.test_settingsio.settingswritertests method)": [[377, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeYaml"]], "armitesthelper (class in armi.tests)": [[378, "armi.tests.ArmiTestHelper"]], "fixture (class in armi.tests)": [[378, "armi.tests.Fixture"]], "armi.tests": [[378, "module-armi.tests"]], "comparefileslinebyline() (armi.tests.armitesthelper method)": [[378, "armi.tests.ArmiTestHelper.compareFilesLineByLine"]], "comparelines() (armi.tests.armitesthelper static method)": [[378, "armi.tests.ArmiTestHelper.compareLines"]], "fixture() (in module armi.tests)": [[378, "armi.tests.fixture"]], "getemptycartesianreactor() (in module armi.tests)": [[378, "armi.tests.getEmptyCartesianReactor"]], "getemptyhexreactor() (in module armi.tests)": [[378, "armi.tests.getEmptyHexReactor"]], "rebaselinetextcomparisons() (in module armi.tests)": [[378, "armi.tests.rebaselineTextComparisons"]], "requires_fixture() (in module armi.tests)": [[378, "armi.tests.requires_fixture"]], "bufferlog (class in armi.tests.mockrunlogs)": [[379, "armi.tests.mockRunLogs.BufferLog"]], "logcounter (class in armi.tests.mockrunlogs)": [[379, "armi.tests.mockRunLogs.LogCounter"]], "armi.tests.mockrunlogs": [[379, "module-armi.tests.mockRunLogs"]], "clearsinglewarnings() (armi.tests.mockrunlogs.bufferlog method)": [[379, "armi.tests.mockRunLogs.BufferLog.clearSingleWarnings"]], "emptystdout() (armi.tests.mockrunlogs.bufferlog method)": [[379, "armi.tests.mockRunLogs.BufferLog.emptyStdout"]], "getstderrvalue() (armi.tests.mockrunlogs.bufferlog method)": [[379, "armi.tests.mockRunLogs.BufferLog.getStderrValue"]], "getstdout() (armi.tests.mockrunlogs.bufferlog method)": [[379, "armi.tests.mockRunLogs.BufferLog.getStdout"]], "log() (armi.tests.mockrunlogs.bufferlog method)": [[379, "armi.tests.mockRunLogs.BufferLog.log"]], "log() (armi.tests.mockrunlogs.logcounter method)": [[379, "armi.tests.mockRunLogs.LogCounter.log"]], "equilibriumshuffler (class in armi.tests.refsmallreactorshufflelogic)": [[380, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler"]], "armi.tests.refsmallreactorshufflelogic": [[380, "module-armi.tests.refSmallReactorShuffleLogic"]], "chooseswaps() (armi.tests.refsmallreactorshufflelogic.equilibriumshuffler method)": [[380, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler.chooseSwaps"]], "getfactorlist() (in module armi.tests.refsmallreactorshufflelogic)": [[380, "armi.tests.refSmallReactorShuffleLogic.getFactorList"]], "testapps (class in armi.tests.test_apps)": [[381, "armi.tests.test_apps.TestApps"]], "testarmihighlevel (class in armi.tests.test_apps)": [[381, "armi.tests.test_apps.TestArmiHighLevel"]], "testplugin1 (class in armi.tests.test_apps)": [[381, "armi.tests.test_apps.TestPlugin1"]], "testplugin2 (class in armi.tests.test_apps)": [[381, "armi.tests.test_apps.TestPlugin2"]], "testplugin3 (class in armi.tests.test_apps)": [[381, "armi.tests.test_apps.TestPlugin3"]], "testplugin4 (class in armi.tests.test_apps)": [[381, "armi.tests.test_apps.TestPlugin4"]], "armi.tests.test_apps": [[381, "module-armi.tests.test_apps"]], "defineparameterrenames() (armi.tests.test_apps.testplugin1 static method)": [[381, "armi.tests.test_apps.TestPlugin1.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin2 static method)": [[381, "armi.tests.test_apps.TestPlugin2.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin3 static method)": [[381, "armi.tests.test_apps.TestPlugin3.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin4 static method)": [[381, "armi.tests.test_apps.TestPlugin4.defineParameterRenames"]], "test_disablefutureconfigures() (armi.tests.test_apps.testapps method)": [[381, "armi.tests.test_apps.TestApps.test_disableFutureConfigures"]], "test_getdefaultpluginmanager() (armi.tests.test_apps.testarmihighlevel method)": [[381, "armi.tests.test_apps.TestArmiHighLevel.test_getDefaultPluginManager"]], "test_getparamrenames() (armi.tests.test_apps.testapps method)": [[381, "armi.tests.test_apps.TestApps.test_getParamRenames"]], "test_getparamrenamesinvalids() (armi.tests.test_apps.testapps method)": [[381, "armi.tests.test_apps.TestApps.test_getParamRenamesInvalids"]], "test_getsettings() (armi.tests.test_apps.testapps method)": [[381, "armi.tests.test_apps.TestApps.test_getSettings"]], "test_isstablereleaseversion() (armi.tests.test_apps.testapps method)": [[381, "armi.tests.test_apps.TestApps.test_isStableReleaseVersion"]], "test_main() (armi.tests.test_apps.testarmihighlevel method)": [[381, "armi.tests.test_apps.TestArmiHighLevel.test_main"]], "test_overconfigured() (armi.tests.test_apps.testarmihighlevel method)": [[381, "armi.tests.test_apps.TestArmiHighLevel.test_overConfigured"]], "test_registerpluginflags() (armi.tests.test_apps.testapps method)": [[381, "armi.tests.test_apps.TestApps.test_registerPluginFlags"]], "test_splashtext() (armi.tests.test_apps.testapps method)": [[381, "armi.tests.test_apps.TestApps.test_splashText"]], "test_splashtextdifferentapp() (armi.tests.test_apps.testapps method)": [[381, "armi.tests.test_apps.TestApps.test_splashTextDifferentApp"]], "test_version() (armi.tests.test_apps.testapps method)": [[381, "armi.tests.test_apps.TestApps.test_version"]], "testarmitesthelper (class in armi.tests.test_armitesthelper)": [[382, "armi.tests.test_armiTestHelper.TestArmiTestHelper"]], "armi.tests.test_armitesthelper": [[382, "module-armi.tests.test_armiTestHelper"]], "test_comparefilesfail() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[382, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesFail"]], "test_comparefilessucceedfalsenegative() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[382, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucceedFalseNegative"]], "test_comparefilessucess() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[382, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucess"]], "cartesianreactortests (class in armi.tests.test_cartesian)": [[383, "armi.tests.test_cartesian.CartesianReactorTests"]], "armi.tests.test_cartesian": [[383, "module-armi.tests.test_cartesian"]], "test_custom() (armi.tests.test_cartesian.cartesianreactortests method)": [[383, "armi.tests.test_cartesian.CartesianReactorTests.test_custom"]], "testcontextserial (class in armi.tests.test_context)": [[384, "armi.tests.test_context.TestContextSerial"]], "armi.tests.test_context": [[384, "module-armi.tests.test_context"]], "test_nonnonedata() (armi.tests.test_context.testcontextserial method)": [[384, "armi.tests.test_context.TestContextSerial.test_nonNoneData"]], "test_rank() (armi.tests.test_context.testcontextserial method)": [[384, "armi.tests.test_context.TestContextSerial.test_rank"]], "dummyinterface (class in armi.tests.test_interfaces)": [[385, "armi.tests.test_interfaces.DummyInterface"]], "testcodeinterface (class in armi.tests.test_interfaces)": [[385, "armi.tests.test_interfaces.TestCodeInterface"]], "testtextprocessor (class in armi.tests.test_interfaces)": [[385, "armi.tests.test_interfaces.TestTextProcessor"]], "testtightcoupler (class in armi.tests.test_interfaces)": [[385, "armi.tests.test_interfaces.TestTightCoupler"]], "armi.tests.test_interfaces": [[385, "module-armi.tests.test_interfaces"]], "function (armi.tests.test_interfaces.dummyinterface attribute)": [[385, "armi.tests.test_interfaces.DummyInterface.function"]], "name (armi.tests.test_interfaces.dummyinterface attribute)": [[385, "armi.tests.test_interfaces.DummyInterface.name"]], "test_coupleractive() (armi.tests.test_interfaces.testtightcoupler method)": [[385, "armi.tests.test_interfaces.TestTightCoupler.test_couplerActive"]], "test_distributable() (armi.tests.test_interfaces.testcodeinterface method)": [[385, "armi.tests.test_interfaces.TestCodeInterface.test_distributable"]], "test_duplicate() (armi.tests.test_interfaces.testcodeinterface method)": [[385, "armi.tests.test_interfaces.TestCodeInterface.test_duplicate"]], "test_enabled() (armi.tests.test_interfaces.testcodeinterface method)": [[385, "armi.tests.test_interfaces.TestCodeInterface.test_enabled"]], "test_fsearch() (armi.tests.test_interfaces.testtextprocessor method)": [[385, "armi.tests.test_interfaces.TestTextProcessor.test_fsearch"]], "test_fsearch_text() (armi.tests.test_interfaces.testtextprocessor method)": [[385, "armi.tests.test_interfaces.TestTextProcessor.test_fsearch_text"]], "test_getlistdimension() (armi.tests.test_interfaces.testtightcoupler method)": [[385, "armi.tests.test_interfaces.TestTightCoupler.test_getListDimension"]], "test_isconverged() (armi.tests.test_interfaces.testtightcoupler method)": [[385, "armi.tests.test_interfaces.TestTightCoupler.test_isConverged"]], "test_isconvergedruntimeerror() (armi.tests.test_interfaces.testtightcoupler method)": [[385, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedRuntimeError"]], "test_isconvergedvalueerror() (armi.tests.test_interfaces.testtightcoupler method)": [[385, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedValueError"]], "test_isrequesteddetailpoint() (armi.tests.test_interfaces.testcodeinterface method)": [[385, "armi.tests.test_interfaces.TestCodeInterface.test_isRequestedDetailPoint"]], "test_namecontains() (armi.tests.test_interfaces.testcodeinterface method)": [[385, "armi.tests.test_interfaces.TestCodeInterface.test_nameContains"]], "test_predistributestate() (armi.tests.test_interfaces.testcodeinterface method)": [[385, "armi.tests.test_interfaces.TestCodeInterface.test_preDistributeState"]], "test_storepreviousiterationvalue() (armi.tests.test_interfaces.testtightcoupler method)": [[385, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValue"]], "test_storepreviousiterationvalueexception() (armi.tests.test_interfaces.testtightcoupler method)": [[385, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValueException"]], "c5g7reactortests (class in armi.tests.test_lwrinputs)": [[386, "armi.tests.test_lwrInputs.C5G7ReactorTests"]], "armi.tests.test_lwrinputs": [[386, "module-armi.tests.test_lwrInputs"]], "test_loadc5g7() (armi.tests.test_lwrinputs.c5g7reactortests method)": [[386, "armi.tests.test_lwrInputs.C5G7ReactorTests.test_loadC5G7"]], "mpiitertests (class in armi.tests.test_mpiactions)": [[387, "armi.tests.test_mpiActions.MpiIterTests"]], "queueactionstests (class in armi.tests.test_mpiactions)": [[387, "armi.tests.test_mpiActions.QueueActionsTests"]], "armi.tests.test_mpiactions": [[387, "module-armi.tests.test_mpiActions"]], "passer() (in module armi.tests.test_mpiactions)": [[387, "armi.tests.test_mpiActions.passer"]], "test_diagnosepickleerrortestreactor() (armi.tests.test_mpiactions.mpiitertests method)": [[387, "armi.tests.test_mpiActions.MpiIterTests.test_diagnosePickleErrorTestReactor"]], "test_disableforexclusivetasks() (armi.tests.test_mpiactions.queueactionstests method)": [[387, "armi.tests.test_mpiActions.QueueActionsTests.test_disableForExclusiveTasks"]], "test_excessprocesses() (armi.tests.test_mpiactions.mpiitertests method)": [[387, "armi.tests.test_mpiActions.MpiIterTests.test_excessProcesses"]], "test_makequeue() (armi.tests.test_mpiactions.queueactionstests method)": [[387, "armi.tests.test_mpiActions.QueueActionsTests.test_makeQueue"]], "test_mpiiter() (armi.tests.test_mpiactions.mpiitertests method)": [[387, "armi.tests.test_mpiActions.MpiIterTests.test_mpiIter"]], "test_parallel() (armi.tests.test_mpiactions.mpiitertests method)": [[387, "armi.tests.test_mpiActions.MpiIterTests.test_parallel"]], "test_perfectbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[387, "armi.tests.test_mpiActions.MpiIterTests.test_perfectBalancing"]], "test_runactionsdistributestateaction() (armi.tests.test_mpiactions.mpiitertests method)": [[387, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributeStateAction"]], "test_runactionsdistributionaction() (armi.tests.test_mpiactions.mpiitertests method)": [[387, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributionAction"]], "test_serialgather() (armi.tests.test_mpiactions.mpiitertests method)": [[387, "armi.tests.test_mpiActions.MpiIterTests.test_serialGather"]], "test_typicalbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[387, "armi.tests.test_mpiActions.MpiIterTests.test_typicalBalancing"]], "bcastaction1 (class in armi.tests.test_mpifeatures)": [[388, "armi.tests.test_mpiFeatures.BcastAction1"]], "bcastaction2 (class in armi.tests.test_mpifeatures)": [[388, "armi.tests.test_mpiFeatures.BcastAction2"]], "failinginterface1 (class in armi.tests.test_mpifeatures)": [[388, "armi.tests.test_mpiFeatures.FailingInterface1"]], "failinginterface2 (class in armi.tests.test_mpifeatures)": [[388, "armi.tests.test_mpiFeatures.FailingInterface2"]], "failinginterface3 (class in armi.tests.test_mpifeatures)": [[388, "armi.tests.test_mpiFeatures.FailingInterface3"]], "mockinterface (class in armi.tests.test_mpifeatures)": [[388, "armi.tests.test_mpiFeatures.MockInterface"]], "mpidistributestatetests (class in armi.tests.test_mpifeatures)": [[388, "armi.tests.test_mpiFeatures.MpiDistributeStateTests"]], "mpioperatortests (class in armi.tests.test_mpifeatures)": [[388, "armi.tests.test_mpiFeatures.MpiOperatorTests"]], "mpipathtoolstests (class in armi.tests.test_mpifeatures)": [[388, "armi.tests.test_mpiFeatures.MpiPathToolsTests"]], "testcontextmpi (class in armi.tests.test_mpifeatures)": [[388, "armi.tests.test_mpiFeatures.TestContextMpi"]], "armi.tests.test_mpifeatures": [[388, "module-armi.tests.test_mpiFeatures"]], "fail() (armi.tests.test_mpifeatures.failinginterface3 method)": [[388, "armi.tests.test_mpiFeatures.FailingInterface3.fail"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface1 method)": [[388, "armi.tests.test_mpiFeatures.FailingInterface1.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface2 method)": [[388, "armi.tests.test_mpiFeatures.FailingInterface2.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface3 method)": [[388, "armi.tests.test_mpiFeatures.FailingInterface3.interactEveryNode"]], "interactinit() (armi.tests.test_mpifeatures.mockinterface method)": [[388, "armi.tests.test_mpiFeatures.MockInterface.interactInit"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction1 method)": [[388, "armi.tests.test_mpiFeatures.BcastAction1.invokeHook"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction2 method)": [[388, "armi.tests.test_mpiFeatures.BcastAction2.invokeHook"]], "name (armi.tests.test_mpifeatures.failinginterface1 attribute)": [[388, "armi.tests.test_mpiFeatures.FailingInterface1.name"]], "name (armi.tests.test_mpifeatures.failinginterface2 attribute)": [[388, "armi.tests.test_mpiFeatures.FailingInterface2.name"]], "name (armi.tests.test_mpifeatures.failinginterface3 attribute)": [[388, "armi.tests.test_mpiFeatures.FailingInterface3.name"]], "name (armi.tests.test_mpifeatures.mockinterface attribute)": [[388, "armi.tests.test_mpiFeatures.MockInterface.name"]], "test_basicoperatormpi() (armi.tests.test_mpifeatures.mpioperatortests method)": [[388, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_basicOperatorMPI"]], "test_cleanpathmpi() (armi.tests.test_mpifeatures.mpipathtoolstests method)": [[388, "armi.tests.test_mpiFeatures.MpiPathToolsTests.test_cleanPathMpi"]], "test_compileresults() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[388, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_compileResults"]], "test_distributeinterfaces() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[388, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeInterfaces"]], "test_distributereactor() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[388, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeReactor"]], "test_distributesettings() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[388, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeSettings"]], "test_distributestate() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[388, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeState"]], "test_finalizeinteract() (armi.tests.test_mpifeatures.mpioperatortests method)": [[388, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_finalizeInteract"]], "test_nonnonedata() (armi.tests.test_mpifeatures.testcontextmpi method)": [[388, "armi.tests.test_mpiFeatures.TestContextMpi.test_nonNoneData"]], "test_primarycritical() (armi.tests.test_mpifeatures.mpioperatortests method)": [[388, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryCritical"]], "test_primaryexception() (armi.tests.test_mpifeatures.mpioperatortests method)": [[388, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryException"]], "test_rank() (armi.tests.test_mpifeatures.testcontextmpi method)": [[388, "armi.tests.test_mpiFeatures.TestContextMpi.test_rank"]], "workeroperate() (armi.tests.test_mpifeatures.failinginterface3 method)": [[388, "armi.tests.test_mpiFeatures.FailingInterface3.workerOperate"]], "mocksyncpc (class in armi.tests.test_mpiparameters)": [[389, "armi.tests.test_mpiParameters.MockSyncPC"]], "synchronizationtests (class in armi.tests.test_mpiparameters)": [[389, "armi.tests.test_mpiParameters.SynchronizationTests"]], "armi.tests.test_mpiparameters": [[389, "module-armi.tests.test_mpiParameters"]], "makecomp() (in module armi.tests.test_mpiparameters)": [[389, "armi.tests.test_mpiParameters.makeComp"]], "pdefs (armi.tests.test_mpiparameters.mocksyncpc attribute)": [[389, "armi.tests.test_mpiParameters.MockSyncPC.pDefs"]], "pb (armi.tests.test_mpiparameters.mocksyncpc attribute)": [[389, "armi.tests.test_mpiParameters.MockSyncPC.pb"]], "test_conflictsmaintainwithstateretainer() (armi.tests.test_mpiparameters.synchronizationtests method)": [[389, "armi.tests.test_mpiParameters.SynchronizationTests.test_conflictsMaintainWithStateRetainer"]], "test_noconflicts() (armi.tests.test_mpiparameters.synchronizationtests method)": [[389, "armi.tests.test_mpiParameters.SynchronizationTests.test_noConflicts"]], "test_withconflicts() (armi.tests.test_mpiparameters.synchronizationtests method)": [[389, "armi.tests.test_mpiParameters.SynchronizationTests.test_withConflicts"]], "test_withconflictsbutsamevalue() (armi.tests.test_mpiparameters.synchronizationtests method)": [[389, "armi.tests.test_mpiParameters.SynchronizationTests.test_withConflictsButSameValue"]], "notebooktests (class in armi.tests.test_notebooks)": [[390, "armi.tests.test_notebooks.NotebookTests"]], "armi.tests.test_notebooks": [[390, "module-armi.tests.test_notebooks"]], "runnotebook() (in module armi.tests.test_notebooks)": [[390, "armi.tests.test_notebooks.runNotebook"]], "test_rundatamodel() (armi.tests.test_notebooks.notebooktests method)": [[390, "armi.tests.test_notebooks.NotebookTests.test_runDataModel"]], "test_runparamsweep() (armi.tests.test_notebooks.notebooktests method)": [[390, "armi.tests.test_notebooks.NotebookTests.test_runParamSweep"]], "pluginflags1 (class in armi.tests.test_plugins)": [[391, "armi.tests.test_plugins.PluginFlags1"]], "sillyaxialexpansionchanger (class in armi.tests.test_plugins)": [[391, "armi.tests.test_plugins.SillyAxialExpansionChanger"]], "sillyaxialplugin (class in armi.tests.test_plugins)": [[391, "armi.tests.test_plugins.SillyAxialPlugin"]], "testplugin (class in armi.tests.test_plugins)": [[391, "armi.tests.test_plugins.TestPlugin"]], "testpluginbasics (class in armi.tests.test_plugins)": [[391, "armi.tests.test_plugins.TestPluginBasics"]], "testpluginregistration (class in armi.tests.test_plugins)": [[391, "armi.tests.test_plugins.TestPluginRegistration"]], "armi.tests.test_plugins": [[391, "module-armi.tests.test_plugins"]], "defineflags() (armi.tests.test_plugins.pluginflags1 static method)": [[391, "armi.tests.test_plugins.PluginFlags1.defineFlags"]], "getaxialexpansionchanger() (armi.tests.test_plugins.sillyaxialplugin static method)": [[391, "armi.tests.test_plugins.SillyAxialPlugin.getAxialExpansionChanger"]], "plugin (armi.tests.test_plugins.testplugin attribute)": [[391, "armi.tests.test_plugins.TestPlugin.plugin"]], "test_axialexpansionhook() (armi.tests.test_plugins.testpluginregistration method)": [[391, "armi.tests.test_plugins.TestPluginRegistration.test_axialExpansionHook"]], "test_defineblueprintssections() (armi.tests.test_plugins.testplugin method)": [[391, "armi.tests.test_plugins.TestPlugin.test_defineBlueprintsSections"]], "test_defineflags() (armi.tests.test_plugins.testpluginregistration method)": [[391, "armi.tests.test_plugins.TestPluginRegistration.test_defineFlags"]], "test_defineparameters() (armi.tests.test_plugins.testpluginbasics method)": [[391, "armi.tests.test_plugins.TestPluginBasics.test_defineParameters"]], "test_exposeinterfaces() (armi.tests.test_plugins.testplugin method)": [[391, "armi.tests.test_plugins.TestPlugin.test_exposeInterfaces"]], "test_exposeinterfaces() (armi.tests.test_plugins.testpluginbasics method)": [[391, "armi.tests.test_plugins.TestPluginBasics.test_exposeInterfaces"]], "test_pluginsexposeinterfaces() (armi.tests.test_plugins.testpluginbasics method)": [[391, "armi.tests.test_plugins.TestPluginBasics.test_pluginsExposeInterfaces"]], "testrunlog (class in armi.tests.test_runlog)": [[392, "armi.tests.test_runLog.TestRunLog"]], "testrunlogger (class in armi.tests.test_runlog)": [[392, "armi.tests.test_runLog.TestRunLogger"]], "armi.tests.test_runlog": [[392, "module-armi.tests.test_runLog"]], "test_allowstopduplicates() (armi.tests.test_runlog.testrunlogger method)": [[392, "armi.tests.test_runLog.TestRunLogger.test_allowStopDuplicates"]], "test_callingstartlogmultipletimes() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_callingStartLogMultipleTimes"]], "test_closelogging() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_closeLogging"]], "test_concatenatelogs() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_concatenateLogs"]], "test_createlogdir() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_createLogDir"]], "test_getduplicatesfilter() (armi.tests.test_runlog.testrunlogger method)": [[392, "armi.tests.test_runLog.TestRunLogger.test_getDuplicatesFilter"]], "test_getwhitespace() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_getWhiteSpace"]], "test_invalidsetverbositybystring() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_invalidSetVerbosityByString"]], "test_parentrunlogging() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_parentRunLogging"]], "test_setverbosity() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_setVerbosity"]], "test_setverbositybeforestartlog() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_setVerbosityBeforeStartLog"]], "test_setverbosityfrominteger() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromInteger"]], "test_setverbosityfromstring() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromString"]], "test_verbosityoutofrange() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_verbosityOutOfRange"]], "test_warningreport() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_warningReport"]], "test_warningreportinvalid() (armi.tests.test_runlog.testrunlog method)": [[392, "armi.tests.test_runLog.TestRunLog.test_warningReportInvalid"]], "test_write() (armi.tests.test_runlog.testrunlogger method)": [[392, "armi.tests.test_runLog.TestRunLogger.test_write"]], "testcomparefiles (class in armi.tests.test_tests)": [[393, "armi.tests.test_tests.TestCompareFiles"]], "armi.tests.test_tests": [[393, "module-armi.tests.test_tests"]], "test_comparefileline() (armi.tests.test_tests.testcomparefiles method)": [[393, "armi.tests.test_tests.TestCompareFiles.test_compareFileLine"]], "testuserplugins (class in armi.tests.test_user_plugins)": [[394, "armi.tests.test_user_plugins.TestUserPlugins"]], "upinterface (class in armi.tests.test_user_plugins)": [[394, "armi.tests.test_user_plugins.UpInterface"]], "userpluginbaddefineparameterrenames (class in armi.tests.test_user_plugins)": [[394, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames"]], "userpluginbaddefinessettings (class in armi.tests.test_user_plugins)": [[394, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings"]], "userpluginflags (class in armi.tests.test_user_plugins)": [[394, "armi.tests.test_user_plugins.UserPluginFlags"]], "userpluginflags2 (class in armi.tests.test_user_plugins)": [[394, "armi.tests.test_user_plugins.UserPluginFlags2"]], "userpluginflags3 (class in armi.tests.test_user_plugins)": [[394, "armi.tests.test_user_plugins.UserPluginFlags3"]], "userpluginonprocesscoreloading (class in armi.tests.test_user_plugins)": [[394, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading"]], "userpluginwithinterface (class in armi.tests.test_user_plugins)": [[394, "armi.tests.test_user_plugins.UserPluginWithInterface"]], "armi.tests.test_user_plugins": [[394, "module-armi.tests.test_user_plugins"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags static method)": [[394, "armi.tests.test_user_plugins.UserPluginFlags.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags2 static method)": [[394, "armi.tests.test_user_plugins.UserPluginFlags2.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags3 static method)": [[394, "armi.tests.test_user_plugins.UserPluginFlags3.defineFlags"]], "defineparameterrenames() (armi.tests.test_user_plugins.userpluginbaddefineparameterrenames static method)": [[394, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames.defineParameterRenames"]], "definesettings() (armi.tests.test_user_plugins.userpluginbaddefinessettings static method)": [[394, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings.defineSettings"]], "exposeinterfaces() (armi.tests.test_user_plugins.userpluginwithinterface static method)": [[394, "armi.tests.test_user_plugins.UserPluginWithInterface.exposeInterfaces"]], "interacteverynode() (armi.tests.test_user_plugins.upinterface method)": [[394, "armi.tests.test_user_plugins.UpInterface.interactEveryNode"]], "name (armi.tests.test_user_plugins.upinterface attribute)": [[394, "armi.tests.test_user_plugins.UpInterface.name"]], "onprocesscoreloading() (armi.tests.test_user_plugins.userpluginonprocesscoreloading static method)": [[394, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading.onProcessCoreLoading"]], "test_registerrepeateduserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[394, "armi.tests.test_user_plugins.TestUserPlugins.test_registerRepeatedUserPlugins"]], "test_registeruserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[394, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPlugins"]], "test_registeruserpluginsabspath() (armi.tests.test_user_plugins.testuserplugins method)": [[394, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsAbsPath"]], "test_registeruserpluginsfromsettings() (armi.tests.test_user_plugins.testuserplugins method)": [[394, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsFromSettings"]], "test_userpluginonprocesscoreloading() (armi.tests.test_user_plugins.testuserplugins method)": [[394, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginOnProcessCoreLoading"]], "test_userpluginwithinterfaces() (armi.tests.test_user_plugins.testuserplugins method)": [[394, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginWithInterfaces"]], "test_userpluginsflags() (armi.tests.test_user_plugins.testuserplugins method)": [[394, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginsFlags"]], "test_validateuserpluginlimitations() (armi.tests.test_user_plugins.testuserplugins method)": [[394, "armi.tests.test_user_plugins.TestUserPlugins.test_validateUserPluginLimitations"]], "mergeabledict (class in armi.utils)": [[395, "armi.utils.MergeableDict"]], "mypickler (class in armi.utils)": [[395, "armi.utils.MyPickler"]], "armi.utils": [[395, "module-armi.utils"]], "capstrlen() (in module armi.utils)": [[395, "armi.utils.capStrLen"]], "classesinhierarchy() (in module armi.utils)": [[395, "armi.utils.classesInHierarchy"]], "copywithoutblocking() (in module armi.utils)": [[395, "armi.utils.copyWithoutBlocking"]], "createformattedstrwithdelimiter() (in module armi.utils)": [[395, "armi.utils.createFormattedStrWithDelimiter"]], "dotestpickleonallcontents2() (in module armi.utils)": [[395, "armi.utils.doTestPickleOnAllContents2"]], "getavailabilityfactors() (in module armi.utils)": [[395, "armi.utils.getAvailabilityFactors"]], "getburnsteps() (in module armi.utils)": [[395, "armi.utils.getBurnSteps"]], "getcumulativenodenum() (in module armi.utils)": [[395, "armi.utils.getCumulativeNodeNum"]], "getcyclelengths() (in module armi.utils)": [[395, "armi.utils.getCycleLengths"]], "getcyclenames() (in module armi.utils)": [[395, "armi.utils.getCycleNames"]], "getcyclenodefromcumulativenode() (in module armi.utils)": [[395, "armi.utils.getCycleNodeFromCumulativeNode"]], "getcyclenodefromcumulativestep() (in module armi.utils)": [[395, "armi.utils.getCycleNodeFromCumulativeStep"]], "getfilesha1hash() (in module armi.utils)": [[395, "armi.utils.getFileSHA1Hash"]], "getmaxburnsteps() (in module armi.utils)": [[395, "armi.utils.getMaxBurnSteps"]], "getnodespercycle() (in module armi.utils)": [[395, "armi.utils.getNodesPerCycle"]], "getpowerfractions() (in module armi.utils)": [[395, "armi.utils.getPowerFractions"]], "getprevioustimenode() (in module armi.utils)": [[395, "armi.utils.getPreviousTimeNode"]], "getsteplengths() (in module armi.utils)": [[395, "armi.utils.getStepLengths"]], "hasburnup() (in module armi.utils)": [[395, "armi.utils.hasBurnup"]], "list2str() (in module armi.utils)": [[395, "armi.utils.list2str"]], "merge() (armi.utils.mergeabledict method)": [[395, "armi.utils.MergeableDict.merge"]], "plotmatrix() (in module armi.utils)": [[395, "armi.utils.plotMatrix"]], "prependtolist() (in module armi.utils)": [[395, "armi.utils.prependToList"]], "safecopy() (in module armi.utils)": [[395, "armi.utils.safeCopy"]], "save() (armi.utils.mypickler method)": [[395, "armi.utils.MyPickler.save"]], "slantsplit() (in module armi.utils)": [[395, "armi.utils.slantSplit"]], "trypickleonallcontents() (in module armi.utils)": [[395, "armi.utils.tryPickleOnAllContents"]], "trypickleonallcontents3() (in module armi.utils)": [[395, "armi.utils.tryPickleOnAllContents3"]], "username() (in module armi.utils)": [[395, "armi.utils.userName"]], "asciimap (class in armi.utils.asciimaps)": [[396, "armi.utils.asciimaps.AsciiMap"]], "asciimapcartesian (class in armi.utils.asciimaps)": [[396, "armi.utils.asciimaps.AsciiMapCartesian"]], "asciimaphexfullflatsup (class in armi.utils.asciimaps)": [[396, "armi.utils.asciimaps.AsciiMapHexFullFlatsUp"]], "asciimaphexfulltipsup (class in armi.utils.asciimaps)": [[396, "armi.utils.asciimaps.AsciiMapHexFullTipsUp"]], "asciimaphexthirdflatsup (class in armi.utils.asciimaps)": [[396, "armi.utils.asciimaps.AsciiMapHexThirdFlatsUp"]], "armi.utils.asciimaps": [[396, "module-armi.utils.asciimaps"]], "asciilabelbyindices (armi.utils.asciimaps.asciimap attribute)": [[396, "armi.utils.asciimaps.AsciiMap.asciiLabelByIndices"]], "asciilines (armi.utils.asciimaps.asciimap attribute)": [[396, "armi.utils.asciimaps.AsciiMap.asciiLines"]], "asciimapfromgeomanddomain() (in module armi.utils.asciimaps)": [[396, "armi.utils.asciimaps.asciiMapFromGeomAndDomain"]], "asciioffsets (armi.utils.asciimaps.asciimap attribute)": [[396, "armi.utils.asciimaps.AsciiMap.asciiOffsets"]], "fromreactor() (armi.utils.asciimaps.asciimap static method)": [[396, "armi.utils.asciimaps.AsciiMap.fromReactor"]], "gridcontentstoascii() (armi.utils.asciimaps.asciimap method)": [[396, "armi.utils.asciimaps.AsciiMap.gridContentsToAscii"]], "items() (armi.utils.asciimaps.asciimap method)": [[396, "armi.utils.asciimaps.AsciiMap.items"]], "keys() (armi.utils.asciimaps.asciimap method)": [[396, "armi.utils.asciimaps.AsciiMap.keys"]], "readascii() (armi.utils.asciimaps.asciimap method)": [[396, "armi.utils.asciimaps.AsciiMap.readAscii"]], "writeascii() (armi.utils.asciimaps.asciimap method)": [[396, "armi.utils.asciimaps.AsciiMap.writeAscii"]], "mastertimer (class in armi.utils.codetiming)": [[397, "armi.utils.codeTiming.MasterTimer"]], "armi.utils.codetiming": [[397, "module-armi.utils.codeTiming"]], "endtimer() (armi.utils.codetiming.mastertimer static method)": [[397, "armi.utils.codeTiming.MasterTimer.endTimer"]], "getactivetimers() (armi.utils.codetiming.mastertimer static method)": [[397, "armi.utils.codeTiming.MasterTimer.getActiveTimers"]], "getmastertimer() (armi.utils.codetiming.mastertimer static method)": [[397, "armi.utils.codeTiming.MasterTimer.getMasterTimer"]], "getmastertimer() (in module armi.utils.codetiming)": [[397, "armi.utils.codeTiming.getMasterTimer"]], "gettimer() (armi.utils.codetiming.mastertimer static method)": [[397, "armi.utils.codeTiming.MasterTimer.getTimer"]], "report() (armi.utils.codetiming.mastertimer static method)": [[397, "armi.utils.codeTiming.MasterTimer.report"]], "startall() (armi.utils.codetiming.mastertimer static method)": [[397, "armi.utils.codeTiming.MasterTimer.startAll"]], "starttimer() (armi.utils.codetiming.mastertimer static method)": [[397, "armi.utils.codeTiming.MasterTimer.startTimer"]], "stopall() (armi.utils.codetiming.mastertimer static method)": [[397, "armi.utils.codeTiming.MasterTimer.stopAll"]], "time() (armi.utils.codetiming.mastertimer static method)": [[397, "armi.utils.codeTiming.MasterTimer.time"]], "timed() (in module armi.utils.codetiming)": [[397, "armi.utils.codeTiming.timed"]], "timeline() (armi.utils.codetiming.mastertimer static method)": [[397, "armi.utils.codeTiming.MasterTimer.timeline"]], "inputerror": [[398, "armi.utils.customExceptions.InputError"]], "invalidsettingsfileerror": [[398, "armi.utils.customExceptions.InvalidSettingsFileError"]], "invalidsettingsstopprocess": [[398, "armi.utils.customExceptions.InvalidSettingsStopProcess"]], "nonexistentsetting": [[398, "armi.utils.customExceptions.NonexistentSetting"]], "nonexistentsettingsfileerror": [[398, "armi.utils.customExceptions.NonexistentSettingsFileError"]], "settingexception": [[398, "armi.utils.customExceptions.SettingException"]], "armi.utils.customexceptions": [[398, "module-armi.utils.customExceptions"]], "important() (in module armi.utils.customexceptions)": [[398, "armi.utils.customExceptions.important"]], "info() (in module armi.utils.customexceptions)": [[398, "armi.utils.customExceptions.info"]], "warn() (in module armi.utils.customexceptions)": [[398, "armi.utils.customExceptions.warn"]], "warn_when_root() (in module armi.utils.customexceptions)": [[398, "armi.utils.customExceptions.warn_when_root"]], "applyisotopicsmix() (in module armi.utils.densitytools)": [[399, "armi.utils.densityTools.applyIsotopicsMix"]], "armi.utils.densitytools": [[399, "module-armi.utils.densityTools"]], "calculatemassdensity() (in module armi.utils.densitytools)": [[399, "armi.utils.densityTools.calculateMassDensity"]], "calculatenumberdensity() (in module armi.utils.densitytools)": [[399, "armi.utils.densityTools.calculateNumberDensity"]], "expandelementalmassfracstonuclides() (in module armi.utils.densitytools)": [[399, "armi.utils.densityTools.expandElementalMassFracsToNuclides"]], "expandelementalnuclidemassfracs() (in module armi.utils.densitytools)": [[399, "armi.utils.densityTools.expandElementalNuclideMassFracs"]], "filternuclidelist() (in module armi.utils.densitytools)": [[399, "armi.utils.densityTools.filterNuclideList"]], "formatmaterialcard() (in module armi.utils.densitytools)": [[399, "armi.utils.densityTools.formatMaterialCard"]], "getchemicals() (in module armi.utils.densitytools)": [[399, "armi.utils.densityTools.getChemicals"]], "getmassfractions() (in module armi.utils.densitytools)": [[399, "armi.utils.densityTools.getMassFractions"]], "getmassingrams() (in module armi.utils.densitytools)": [[399, "armi.utils.densityTools.getMassInGrams"]], "getndensfrommasses() (in module armi.utils.densitytools)": [[399, "armi.utils.densityTools.getNDensFromMasses"]], "normalizenuclidelist() (in module armi.utils.densitytools)": [[399, "armi.utils.densityTools.normalizeNuclideList"]], "directorychanger (class in armi.utils.directorychangers)": [[400, "armi.utils.directoryChangers.DirectoryChanger"]], "forcedcreationdirectorychanger (class in armi.utils.directorychangers)": [[400, "armi.utils.directoryChangers.ForcedCreationDirectoryChanger"]], "getrandomdirectory() (armi.utils.directorychangers.temporarydirectorychanger class method)": [[400, "armi.utils.directoryChangers.TemporaryDirectoryChanger.GetRandomDirectory"]], "temporarydirectorychanger (class in armi.utils.directorychangers)": [[400, "armi.utils.directoryChangers.TemporaryDirectoryChanger"]], "armi.utils.directorychangers": [[400, "module-armi.utils.directoryChangers"]], "close() (armi.utils.directorychangers.directorychanger method)": [[400, "armi.utils.directoryChangers.DirectoryChanger.close"]], "directorychangerfactory() (in module armi.utils.directorychangers)": [[400, "armi.utils.directoryChangers.directoryChangerFactory"]], "movefiles() (armi.utils.directorychangers.directorychanger method)": [[400, "armi.utils.directoryChangers.DirectoryChanger.moveFiles"]], "open() (armi.utils.directorychangers.directorychanger method)": [[400, "armi.utils.directoryChangers.DirectoryChanger.open"]], "retrievefiles() (armi.utils.directorychangers.directorychanger method)": [[400, "armi.utils.directoryChangers.DirectoryChanger.retrieveFiles"]], "mpidirectorychanger (class in armi.utils.directorychangersmpi)": [[401, "armi.utils.directoryChangersMpi.MpiDirectoryChanger"]], "armi.utils.directorychangersmpi": [[401, "module-armi.utils.directoryChangersMpi"]], "close() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[401, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.close"]], "open() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[401, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.open"]], "armi.utils.dynamicimporter": [[402, "module-armi.utils.dynamicImporter"]], "getentirefamilytree() (in module armi.utils.dynamicimporter)": [[402, "armi.utils.dynamicImporter.getEntireFamilyTree"]], "flag (class in armi.utils.flags)": [[403, "armi.utils.flags.Flag"]], "armi.utils.flags": [[403, "module-armi.utils.flags"]], "auto (class in armi.utils.flags)": [[403, "armi.utils.flags.auto"]], "extend() (armi.utils.flags.flag class method)": [[403, "armi.utils.flags.Flag.extend"]], "fields() (armi.utils.flags.flag class method)": [[403, "armi.utils.flags.Flag.fields"]], "from_bytes() (armi.utils.flags.flag class method)": [[403, "armi.utils.flags.Flag.from_bytes"]], "sortedfields() (armi.utils.flags.flag class method)": [[403, "armi.utils.flags.Flag.sortedFields"]], "to_bytes() (armi.utils.flags.flag method)": [[403, "armi.utils.flags.Flag.to_bytes"]], "width() (armi.utils.flags.flag class method)": [[403, "armi.utils.flags.Flag.width"]], "area() (in module armi.utils.hexagon)": [[405, "armi.utils.hexagon.area"]], "armi.utils.hexagon": [[405, "module-armi.utils.hexagon"]], "corners() (in module armi.utils.hexagon)": [[405, "armi.utils.hexagon.corners"]], "getindexofrotatedcell() (in module armi.utils.hexagon)": [[405, "armi.utils.hexagon.getIndexOfRotatedCell"]], "numpositionsinring() (in module armi.utils.hexagon)": [[405, "armi.utils.hexagon.numPositionsInRing"]], "numringstoholdnumcells() (in module armi.utils.hexagon)": [[405, "armi.utils.hexagon.numRingsToHoldNumCells"]], "pitch() (in module armi.utils.hexagon)": [[405, "armi.utils.hexagon.pitch"]], "side() (in module armi.utils.hexagon)": [[405, "armi.utils.hexagon.side"]], "totalpositionsuptoring() (in module armi.utils.hexagon)": [[405, "armi.utils.hexagon.totalPositionsUpToRing"]], "sequence (class in armi.utils.iterables)": [[406, "armi.utils.iterables.Sequence"]], "append() (armi.utils.iterables.sequence method)": [[406, "armi.utils.iterables.Sequence.append"]], "armi.utils.iterables": [[406, "module-armi.utils.iterables"]], "chunk() (in module armi.utils.iterables)": [[406, "armi.utils.iterables.chunk"]], "copy() (armi.utils.iterables.sequence method)": [[406, "armi.utils.iterables.Sequence.copy"]], "drop() (armi.utils.iterables.sequence method)": [[406, "armi.utils.iterables.Sequence.drop"]], "extend() (armi.utils.iterables.sequence method)": [[406, "armi.utils.iterables.Sequence.extend"]], "flatten() (in module armi.utils.iterables)": [[406, "armi.utils.iterables.flatten"]], "packbinarystrings() (in module armi.utils.iterables)": [[406, "armi.utils.iterables.packBinaryStrings"]], "packhexstrings() (in module armi.utils.iterables)": [[406, "armi.utils.iterables.packHexStrings"]], "pivot() (in module armi.utils.iterables)": [[406, "armi.utils.iterables.pivot"]], "select() (armi.utils.iterables.sequence method)": [[406, "armi.utils.iterables.Sequence.select"]], "split() (in module armi.utils.iterables)": [[406, "armi.utils.iterables.split"]], "transform() (armi.utils.iterables.sequence method)": [[406, "armi.utils.iterables.Sequence.transform"]], "unpackbinarystrings() (in module armi.utils.iterables)": [[406, "armi.utils.iterables.unpackBinaryStrings"]], "unpackhexstrings() (in module armi.utils.iterables)": [[406, "armi.utils.iterables.unpackHexStrings"]], "armi.utils.mathematics": [[407, "module-armi.utils.mathematics"]], "average1dwithintolerance() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.average1DWithinTolerance"]], "converttoslice() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.convertToSlice"]], "efmt() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.efmt"]], "expandrepeatedfloats() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.expandRepeatedFloats"]], "findclosest() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.findClosest"]], "findnearestvalue() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.findNearestValue"]], "findnearestvalueandindex() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.findNearestValueAndIndex"]], "fixthreedigitexp() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.fixThreeDigitExp"]], "getfloat() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.getFloat"]], "getstepsfromvalues() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.getStepsFromValues"]], "ismonotonic() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.isMonotonic"]], "linearinterpolation() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.linearInterpolation"]], "minimizescalarfunc() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.minimizeScalarFunc"]], "newtonsmethod() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.newtonsMethod"]], "parabolafrompoints() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.parabolaFromPoints"]], "parabolicinterpolation() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.parabolicInterpolation"]], "relerr() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.relErr"]], "resamplestepwise() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.resampleStepwise"]], "rotatexy() (in module armi.utils.mathematics)": [[407, "armi.utils.mathematics.rotateXY"]], "armi.utils.outputcache": [[408, "module-armi.utils.outputCache"]], "cachecall() (in module armi.utils.outputcache)": [[408, "armi.utils.outputCache.cacheCall"]], "deletecache() (in module armi.utils.outputcache)": [[408, "armi.utils.outputCache.deleteCache"]], "retrieveoutput() (in module armi.utils.outputcache)": [[408, "armi.utils.outputCache.retrieveOutput"]], "store() (in module armi.utils.outputcache)": [[408, "armi.utils.outputCache.store"]], "armi.utils.parsing": [[409, "module-armi.utils.parsing"]], "datetimefromstr() (in module armi.utils.parsing)": [[409, "armi.utils.parsing.datetimeFromStr"]], "parsevalue() (in module armi.utils.parsing)": [[409, "armi.utils.parsing.parseValue"]], "tryliteraleval() (in module armi.utils.parsing)": [[409, "armi.utils.parsing.tryLiteralEval"]], "armi.utils.pathtools": [[410, "module-armi.utils.pathTools"]], "armiabspath() (in module armi.utils.pathtools)": [[410, "armi.utils.pathTools.armiAbsPath"]], "cleanpath() (in module armi.utils.pathtools)": [[410, "armi.utils.pathTools.cleanPath"]], "copyorwarn() (in module armi.utils.pathtools)": [[410, "armi.utils.pathTools.copyOrWarn"]], "importcustompymodule() (in module armi.utils.pathtools)": [[410, "armi.utils.pathTools.importCustomPyModule"]], "isaccessible() (in module armi.utils.pathtools)": [[410, "armi.utils.pathTools.isAccessible"]], "isfilepathnewer() (in module armi.utils.pathtools)": [[410, "armi.utils.pathTools.isFilePathNewer"]], "moduleandattributeexist() (in module armi.utils.pathtools)": [[410, "armi.utils.pathTools.moduleAndAttributeExist"]], "separatemoduleandattribute() (in module armi.utils.pathtools)": [[410, "armi.utils.pathTools.separateModuleAndAttribute"]], "depthslider (class in armi.utils.plotting)": [[411, "armi.utils.plotting.DepthSlider"]], "armi.utils.plotting": [[411, "module-armi.utils.plotting"]], "close() (in module armi.utils.plotting)": [[411, "armi.utils.plotting.close"]], "colorgenerator() (in module armi.utils.plotting)": [[411, "armi.utils.plotting.colorGenerator"]], "makehistogram() (in module armi.utils.plotting)": [[411, "armi.utils.plotting.makeHistogram"]], "next() (armi.utils.plotting.depthslider method)": [[411, "armi.utils.plotting.DepthSlider.next"]], "plotassemblytypes() (in module armi.utils.plotting)": [[411, "armi.utils.plotting.plotAssemblyTypes"]], "plotblockdepthmap() (in module armi.utils.plotting)": [[411, "armi.utils.plotting.plotBlockDepthMap"]], "plotblockdiagram() (in module armi.utils.plotting)": [[411, "armi.utils.plotting.plotBlockDiagram"]], "plotblockflux() (in module armi.utils.plotting)": [[411, "armi.utils.plotting.plotBlockFlux"]], "plotfacemap() (in module armi.utils.plotting)": [[411, "armi.utils.plotting.plotFaceMap"]], "plotnucxs() (in module armi.utils.plotting)": [[411, "armi.utils.plotting.plotNucXs"]], "previous() (armi.utils.plotting.depthslider method)": [[411, "armi.utils.plotting.DepthSlider.previous"]], "set_val() (armi.utils.plotting.depthslider method)": [[411, "armi.utils.plotting.DepthSlider.set_val"]], "updatepagedepthcolor() (armi.utils.plotting.depthslider method)": [[411, "armi.utils.plotting.DepthSlider.updatePageDepthColor"]], "immutablepropertyerror": [[412, "armi.utils.properties.ImmutablePropertyError"]], "areequal() (in module armi.utils.properties)": [[412, "armi.utils.properties.areEqual"]], "armi.utils.properties": [[412, "module-armi.utils.properties"]], "createimmutableproperty() (in module armi.utils.properties)": [[412, "armi.utils.properties.createImmutableProperty"]], "lockimmutableproperties() (in module armi.utils.properties)": [[412, "armi.utils.properties.lockImmutableProperties"]], "numpyhackforequal() (in module armi.utils.properties)": [[412, "armi.utils.properties.numpyHackForEqual"]], "unlockimmutableproperties() (in module armi.utils.properties)": [[412, "armi.utils.properties.unlockImmutableProperties"]], "armi.utils.reportplotting": [[413, "module-armi.utils.reportPlotting"]], "buvstime() (in module armi.utils.reportplotting)": [[413, "armi.utils.reportPlotting.buVsTime"]], "createplotmetadata() (in module armi.utils.reportplotting)": [[413, "armi.utils.reportPlotting.createPlotMetaData"]], "keffvstime() (in module armi.utils.reportplotting)": [[413, "armi.utils.reportPlotting.keffVsTime"]], "movesvscycle() (in module armi.utils.reportplotting)": [[413, "armi.utils.reportPlotting.movesVsCycle"]], "plotaxialprofile() (in module armi.utils.reportplotting)": [[413, "armi.utils.reportPlotting.plotAxialProfile"]], "plotcoreoverviewradar() (in module armi.utils.reportplotting)": [[413, "armi.utils.reportPlotting.plotCoreOverviewRadar"]], "plotreactorperformance() (in module armi.utils.reportplotting)": [[413, "armi.utils.reportPlotting.plotReactorPerformance"]], "valuevstime() (in module armi.utils.reportplotting)": [[413, "armi.utils.reportPlotting.valueVsTime"]], "xshistoryvstime() (in module armi.utils.reportplotting)": [[413, "armi.utils.reportPlotting.xsHistoryVsTime"]], "datarow (class in armi.utils.tabulate)": [[414, "armi.utils.tabulate.DataRow"]], "iterable (class in armi.utils.tabulate)": [[414, "armi.utils.tabulate.Iterable"]], "line (class in armi.utils.tabulate)": [[414, "armi.utils.tabulate.Line"]], "sized (class in armi.utils.tabulate)": [[414, "armi.utils.tabulate.Sized"]], "tableformat (class in armi.utils.tabulate)": [[414, "armi.utils.tabulate.TableFormat"]], "textwrapper (class in armi.utils.tabulate)": [[414, "armi.utils.tabulate.TextWrapper"]], "args (armi.utils.tabulate.partial attribute)": [[414, "armi.utils.tabulate.partial.args"]], "armi.utils.tabulate": [[414, "module-armi.utils.tabulate"]], "begin (armi.utils.tabulate.datarow attribute)": [[414, "armi.utils.tabulate.DataRow.begin"]], "begin (armi.utils.tabulate.line attribute)": [[414, "armi.utils.tabulate.Line.begin"]], "chain (class in armi.utils.tabulate)": [[414, "armi.utils.tabulate.chain"]], "datarow (armi.utils.tabulate.tableformat attribute)": [[414, "armi.utils.tabulate.TableFormat.datarow"]], "end (armi.utils.tabulate.datarow attribute)": [[414, "armi.utils.tabulate.DataRow.end"]], "end (armi.utils.tabulate.line attribute)": [[414, "armi.utils.tabulate.Line.end"]], "fill() (armi.utils.tabulate.textwrapper method)": [[414, "armi.utils.tabulate.TextWrapper.fill"]], "from_iterable() (armi.utils.tabulate.chain method)": [[414, "armi.utils.tabulate.chain.from_iterable"]], "func (armi.utils.tabulate.partial attribute)": [[414, "armi.utils.tabulate.partial.func"]], "headerrow (armi.utils.tabulate.tableformat attribute)": [[414, "armi.utils.tabulate.TableFormat.headerrow"]], "hline (armi.utils.tabulate.line attribute)": [[414, "armi.utils.tabulate.Line.hline"]], "keywords (armi.utils.tabulate.partial attribute)": [[414, "armi.utils.tabulate.partial.keywords"]], "lineabove (armi.utils.tabulate.tableformat attribute)": [[414, "armi.utils.tabulate.TableFormat.lineabove"]], "linebelow (armi.utils.tabulate.tableformat attribute)": [[414, "armi.utils.tabulate.TableFormat.linebelow"]], "linebelowheader (armi.utils.tabulate.tableformat attribute)": [[414, "armi.utils.tabulate.TableFormat.linebelowheader"]], "linebetweenrows (armi.utils.tabulate.tableformat attribute)": [[414, "armi.utils.tabulate.TableFormat.linebetweenrows"]], "namedtuple() (in module armi.utils.tabulate)": [[414, "armi.utils.tabulate.namedtuple"]], "padding (armi.utils.tabulate.tableformat attribute)": [[414, "armi.utils.tabulate.TableFormat.padding"]], "partial (class in armi.utils.tabulate)": [[414, "armi.utils.tabulate.partial"]], "reduce() (in module armi.utils.tabulate)": [[414, "armi.utils.tabulate.reduce"]], "sentence_end_re (armi.utils.tabulate.textwrapper attribute)": [[414, "armi.utils.tabulate.TextWrapper.sentence_end_re"]], "sep (armi.utils.tabulate.datarow attribute)": [[414, "armi.utils.tabulate.DataRow.sep"]], "sep (armi.utils.tabulate.line attribute)": [[414, "armi.utils.tabulate.Line.sep"]], "tabulate() (in module armi.utils.tabulate)": [[414, "armi.utils.tabulate.tabulate"]], "unicode_whitespace_trans (armi.utils.tabulate.textwrapper attribute)": [[414, "armi.utils.tabulate.TextWrapper.unicode_whitespace_trans"]], "uspace (armi.utils.tabulate.textwrapper attribute)": [[414, "armi.utils.tabulate.TextWrapper.uspace"]], "withheaderhide (armi.utils.tabulate.tableformat attribute)": [[414, "armi.utils.tabulate.TableFormat.withHeaderHide"]], "wordsep_re (armi.utils.tabulate.textwrapper attribute)": [[414, "armi.utils.tabulate.TextWrapper.wordsep_re"]], "wordsep_simple_re (armi.utils.tabulate.textwrapper attribute)": [[414, "armi.utils.tabulate.TextWrapper.wordsep_simple_re"]], "wrap() (armi.utils.tabulate.textwrapper method)": [[414, "armi.utils.tabulate.TextWrapper.wrap"]], "x (armi.utils.tabulate.textwrapper attribute)": [[414, "armi.utils.tabulate.TextWrapper.x"]], "zip_longest (class in armi.utils.tabulate)": [[414, "armi.utils.tabulate.zip_longest"]], "armi.utils.tests": [[415, "module-armi.utils.tests"]], "testasciimaps (class in armi.utils.tests.test_asciimaps)": [[416, "armi.utils.tests.test_asciimaps.TestAsciiMaps"]], "armi.utils.tests.test_asciimaps": [[416, "module-armi.utils.tests.test_asciimaps"]], "test_cartesian() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[416, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_cartesian"]], "test_flathexbases() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[416, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_flatHexBases"]], "test_hexfullcornersup() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[416, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullCornersUp"]], "test_hexfullcornersupspotcheck() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[416, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullCornersUpSpotCheck"]], "test_hexfullflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[416, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullFlat"]], "test_hexfullflatsup() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[416, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullFlatsUp"]], "test_hexsmallflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[416, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexSmallFlat"]], "test_hexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[416, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexThird"]], "test_hexwithemptyrow() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[416, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithEmptyRow"]], "test_hexwithholes() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[416, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithHoles"]], "test_troublesomehexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[416, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_troublesomeHexThird"]], "codetimingtest (class in armi.utils.tests.test_codetiming)": [[417, "armi.utils.tests.test_codeTiming.CodeTimingTest"]], "armi.utils.tests.test_codetiming": [[417, "module-armi.utils.tests.test_codeTiming"]], "test_alternate_usages() (armi.utils.tests.test_codetiming.codetimingtest method)": [[417, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_alternate_usages"]], "test_master() (armi.utils.tests.test_codetiming.codetimingtest method)": [[417, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_master"]], "test_messy_starts_and_stops() (armi.utils.tests.test_codetiming.codetimingtest method)": [[417, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_messy_starts_and_stops"]], "test_method_definitions() (armi.utils.tests.test_codetiming.codetimingtest method)": [[417, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_method_definitions"]], "test_property_access() (armi.utils.tests.test_codetiming.codetimingtest method)": [[417, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_property_access"]], "customexceptiontests (class in armi.utils.tests.test_custom_exceptions)": [[418, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions": [[418, "module-armi.utils.tests.test_custom_exceptions"]], "exampleimportantmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[418, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleImportantMessage"]], "exampleinfomessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[418, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleInfoMessage"]], "examplewarnmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[418, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnMessage"]], "examplewarnwhenrootmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[418, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnWhenRootMessage"]], "test_important_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[418, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_important_decorator"]], "test_info_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[418, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_info_decorator"]], "test_warn_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[418, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_decorator"]], "test_warn_when_root_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[418, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_when_root_decorator"]], "testdensitytools (class in armi.utils.tests.test_densitytools)": [[419, "armi.utils.tests.test_densityTools.TestDensityTools"]], "uraniumoxide (class in armi.utils.tests.test_densitytools)": [[419, "armi.utils.tests.test_densityTools.UraniumOxide"]], "armi.utils.tests.test_densitytools": [[419, "module-armi.utils.tests.test_densityTools"]], "density() (armi.utils.tests.test_densitytools.uraniumoxide method)": [[419, "armi.utils.tests.test_densityTools.UraniumOxide.density"]], "pseudodensity() (armi.utils.tests.test_densitytools.uraniumoxide method)": [[419, "armi.utils.tests.test_densityTools.UraniumOxide.pseudoDensity"]], "test_applyisotopicsmix() (armi.utils.tests.test_densitytools.testdensitytools method)": [[419, "armi.utils.tests.test_densityTools.TestDensityTools.test_applyIsotopicsMix"]], "test_calculatenumberdensity() (armi.utils.tests.test_densitytools.testdensitytools method)": [[419, "armi.utils.tests.test_densityTools.TestDensityTools.test_calculateNumberDensity"]], "test_expandelement() (armi.utils.tests.test_densitytools.testdensitytools method)": [[419, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElement"]], "test_expandelementalmassfracstonuclides() (armi.utils.tests.test_densitytools.testdensitytools method)": [[419, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElementalMassFracsToNuclides"]], "test_expandelementalzeromassfrac() (armi.utils.tests.test_densitytools.testdensitytools method)": [[419, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElementalZeroMassFrac"]], "test_formatmaterialcard() (armi.utils.tests.test_densitytools.testdensitytools method)": [[419, "armi.utils.tests.test_densityTools.TestDensityTools.test_formatMaterialCard"]], "test_getchemicals() (armi.utils.tests.test_densitytools.testdensitytools method)": [[419, "armi.utils.tests.test_densityTools.TestDensityTools.test_getChemicals"]], "test_getmassfractions() (armi.utils.tests.test_densitytools.testdensitytools method)": [[419, "armi.utils.tests.test_densityTools.TestDensityTools.test_getMassFractions"]], "test_getmassingrams() (armi.utils.tests.test_densitytools.testdensitytools method)": [[419, "armi.utils.tests.test_densityTools.TestDensityTools.test_getMassInGrams"]], "test_getndensfrommasses() (armi.utils.tests.test_densitytools.testdensitytools method)": [[419, "armi.utils.tests.test_densityTools.TestDensityTools.test_getNDensFromMasses"]], "test_normalizenuclidelist() (armi.utils.tests.test_densitytools.testdensitytools method)": [[419, "armi.utils.tests.test_densityTools.TestDensityTools.test_normalizeNuclideList"]], "expectedexception": [[420, "armi.utils.tests.test_directoryChangers.ExpectedException"]], "testdirectorychangers (class in armi.utils.tests.test_directorychangers)": [[420, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers"]], "armi.utils.tests.test_directorychangers": [[420, "module-armi.utils.tests.test_directoryChangers"]], "test_change_to_nonexisting_fails() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[420, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_fails"]], "test_change_to_nonexisting_works_forced() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[420, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_works_forced"]], "test_exception() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[420, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception"]], "test_exception_disabled() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[420, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception_disabled"]], "test_file_retrieval() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[420, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval"]], "test_file_retrieval_missing_file() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[420, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval_missing_file"]], "test_mpiaction() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[420, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiAction"]], "test_mpiactionfailsonnonexistentpath() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[420, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiActionFailsOnNonexistentPath"]], "test_temporary_cleans() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[420, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_temporary_cleans"]], "revealyourdirectory (class in armi.utils.tests.test_directorychangersmpi)": [[421, "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory"]], "testmpi (class in armi.utils.tests.test_directorychangersmpi)": [[421, "armi.utils.tests.test_directoryChangersMpi.TestMPI"]], "armi.utils.tests.test_directorychangersmpi": [[421, "module-armi.utils.tests.test_directoryChangersMpi"]], "invokehook() (armi.utils.tests.test_directorychangersmpi.revealyourdirectory method)": [[421, "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory.invokeHook"]], "test_mpidirectorychanger() (armi.utils.tests.test_directorychangersmpi.testmpi method)": [[421, "armi.utils.tests.test_directoryChangersMpi.TestMPI.test_MpiDirectoryChanger"]], "bar (armi.utils.tests.test_flags.exampleflag attribute)": [[422, "armi.utils.tests.test_flags.ExampleFlag.BAR"]], "baz (armi.utils.tests.test_flags.exampleflag attribute)": [[422, "armi.utils.tests.test_flags.ExampleFlag.BAZ"]], "exampleflag (class in armi.utils.tests.test_flags)": [[422, "armi.utils.tests.test_flags.ExampleFlag"]], "foo (armi.utils.tests.test_flags.exampleflag attribute)": [[422, "armi.utils.tests.test_flags.ExampleFlag.FOO"]], "testflag (class in armi.utils.tests.test_flags)": [[422, "armi.utils.tests.test_flags.TestFlag"]], "armi.utils.tests.test_flags": [[422, "module-armi.utils.tests.test_flags"]], "test_auto() (armi.utils.tests.test_flags.testflag method)": [[422, "armi.utils.tests.test_flags.TestFlag.test_auto"]], "test_bitwise() (armi.utils.tests.test_flags.testflag method)": [[422, "armi.utils.tests.test_flags.TestFlag.test_bitwise"]], "test_bool() (armi.utils.tests.test_flags.testflag method)": [[422, "armi.utils.tests.test_flags.TestFlag.test_bool"]], "test_collision_creation() (armi.utils.tests.test_flags.testflag method)": [[422, "armi.utils.tests.test_flags.TestFlag.test_collision_creation"]], "test_collision_extension() (armi.utils.tests.test_flags.testflag method)": [[422, "armi.utils.tests.test_flags.TestFlag.test_collision_extension"]], "test_extend() (armi.utils.tests.test_flags.testflag method)": [[422, "armi.utils.tests.test_flags.TestFlag.test_extend"]], "test_getitem() (armi.utils.tests.test_flags.testflag method)": [[422, "armi.utils.tests.test_flags.TestFlag.test_getitem"]], "test_hashable() (armi.utils.tests.test_flags.testflag method)": [[422, "armi.utils.tests.test_flags.TestFlag.test_hashable"]], "test_inclusion() (armi.utils.tests.test_flags.testflag method)": [[422, "armi.utils.tests.test_flags.TestFlag.test_inclusion"]], "test_iteration() (armi.utils.tests.test_flags.testflag method)": [[422, "armi.utils.tests.test_flags.TestFlag.test_iteration"]], "n_fuzzy_draws (armi.utils.tests.test_hexagon.testhexagon attribute)": [[423, "armi.utils.tests.test_hexagon.TestHexagon.N_FUZZY_DRAWS"]], "testhexagon (class in armi.utils.tests.test_hexagon)": [[423, "armi.utils.tests.test_hexagon.TestHexagon"]], "armi.utils.tests.test_hexagon": [[423, "module-armi.utils.tests.test_hexagon"]], "test_hexagon_area() (armi.utils.tests.test_hexagon.testhexagon method)": [[423, "armi.utils.tests.test_hexagon.TestHexagon.test_hexagon_area"]], "test_indexwithnorotation() (armi.utils.tests.test_hexagon.testhexagon method)": [[423, "armi.utils.tests.test_hexagon.TestHexagon.test_indexWithNoRotation"]], "test_numpositionsinring() (armi.utils.tests.test_hexagon.testhexagon method)": [[423, "armi.utils.tests.test_hexagon.TestHexagon.test_numPositionsInRing"]], "test_positionsuptoring() (armi.utils.tests.test_hexagon.testhexagon method)": [[423, "armi.utils.tests.test_hexagon.TestHexagon.test_positionsUpToRing"]], "test_rotatefuzzy() (armi.utils.tests.test_hexagon.testhexagon method)": [[423, "armi.utils.tests.test_hexagon.TestHexagon.test_rotateFuzzy"]], "test_rotatedcellcenter() (armi.utils.tests.test_hexagon.testhexagon method)": [[423, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellCenter"]], "test_rotatedcellindexerrors() (armi.utils.tests.test_hexagon.testhexagon method)": [[423, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellIndexErrors"]], "test_rotatedcellorientationerrors() (armi.utils.tests.test_hexagon.testhexagon method)": [[423, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellOrientationErrors"]], "test_rotatedfirstring() (armi.utils.tests.test_hexagon.testhexagon method)": [[423, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedFirstRing"]], "testiterables (class in armi.utils.tests.test_iterables)": [[424, "armi.utils.tests.test_iterables.TestIterables"]], "armi.utils.tests.test_iterables": [[424, "module-armi.utils.tests.test_iterables"]], "test_addingsequences() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_addingSequences"]], "test_appendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_appendSequence"]], "test_arraypivot() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_arrayPivot"]], "test_chunk() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_chunk"]], "test_copysequence() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_copySequence"]], "test_extendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_extendSequence"]], "test_flatten() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_flatten"]], "test_listpivot() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_listPivot"]], "test_packingandunpackingbinarystrings() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingBinaryStrings"]], "test_packingandunpackinghexstrings() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingHexStrings"]], "test_sequence() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_sequence"]], "test_sequenceinit() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_sequenceInit"]], "test_split() (armi.utils.tests.test_iterables.testiterables method)": [[424, "armi.utils.tests.test_iterables.TestIterables.test_split"]], "testmath (class in armi.utils.tests.test_mathematics)": [[425, "armi.utils.tests.test_mathematics.TestMath"]], "armi.utils.tests.test_mathematics": [[425, "module-armi.utils.tests.test_mathematics"]], "test_average1dwithintolerance() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinTolerance"]], "test_average1dwithintoleranceinvalid() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinToleranceInvalid"]], "test_converttoslice() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_convertToSlice"]], "test_efmt() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_efmt"]], "test_expandrepeatedfloats() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_expandRepeatedFloats"]], "test_findclosest() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_findClosest"]], "test_findnearestvalue() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_findNearestValue"]], "test_fixthreedigitexp() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_fixThreeDigitExp"]], "test_getfloat() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_getFloat"]], "test_getstepsfromvalues() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_getStepsFromValues"]], "test_ismonotonic() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_isMonotonic"]], "test_linearinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_linearInterpolation"]], "test_minimizescalarfunc() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_minimizeScalarFunc"]], "test_newtonsmethod() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_newtonsMethod"]], "test_parabola() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_parabola"]], "test_parabolicinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_parabolicInterpolation"]], "test_relerr() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_relErr"]], "test_resamplestepwiseavg0() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg0"]], "test_resamplestepwiseavg1() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg1"]], "test_resamplestepwiseavg2() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg2"]], "test_resamplestepwiseavg3() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg3"]], "test_resamplestepwiseavg4() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg4"]], "test_resamplestepwiseavg5() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg5"]], "test_resamplestepwiseavg6() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg6"]], "test_resamplestepwiseavg7() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg7"]], "test_resamplestepwiseavgallnones() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgAllNones"]], "test_resamplestepwiseavgcomplicatednone() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgComplicatedNone"]], "test_resamplestepwiseavgnparray() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArray"]], "test_resamplestepwiseavgnparrayaverage() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArrayAverage"]], "test_resamplestepwiseavgonenone() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgOneNone"]], "test_resamplestepwisesum0() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum0"]], "test_resamplestepwisesum1() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum1"]], "test_resamplestepwisesum2() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum2"]], "test_resamplestepwisesum3() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum3"]], "test_resamplestepwisesum4() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum4"]], "test_resamplestepwisesum5() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum5"]], "test_resamplestepwisesum6() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum6"]], "test_resamplestepwisesum7() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum7"]], "test_resamplestepwisesumallnones() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumAllNones"]], "test_resamplestepwisesumonenone() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumOneNone"]], "test_rotatexy() (armi.utils.tests.test_mathematics.testmath method)": [[425, "armi.utils.tests.test_mathematics.TestMath.test_rotateXY"]], "testoutputcache (class in armi.utils.tests.test_outputcache)": [[426, "armi.utils.tests.test_outputCache.TestOutputCache"]], "armi.utils.tests.test_outputcache": [[426, "module-armi.utils.tests.test_outputCache"]], "test_deletecache() (armi.utils.tests.test_outputcache.testoutputcache method)": [[426, "armi.utils.tests.test_outputCache.TestOutputCache.test_deleteCache"]], "test_getcachedfolder() (armi.utils.tests.test_outputcache.testoutputcache method)": [[426, "armi.utils.tests.test_outputCache.TestOutputCache.test_getCachedFolder"]], "test_hashfiles() (armi.utils.tests.test_outputcache.testoutputcache method)": [[426, "armi.utils.tests.test_outputCache.TestOutputCache.test_hashFiles"]], "test_makeoutputmanifest() (armi.utils.tests.test_outputcache.testoutputcache method)": [[426, "armi.utils.tests.test_outputCache.TestOutputCache.test_makeOutputManifest"]], "test_retrieveoutput() (armi.utils.tests.test_outputcache.testoutputcache method)": [[426, "armi.utils.tests.test_outputCache.TestOutputCache.test_retrieveOutput"]], "literalevaltest (class in armi.utils.tests.test_parsing)": [[427, "armi.utils.tests.test_parsing.LiteralEvalTest"]], "armi.utils.tests.test_parsing": [[427, "module-armi.utils.tests.test_parsing"]], "test_parsevalue() (armi.utils.tests.test_parsing.literalevaltest method)": [[427, "armi.utils.tests.test_parsing.LiteralEvalTest.test_parseValue"]], "test_tryliteraleval() (armi.utils.tests.test_parsing.literalevaltest method)": [[427, "armi.utils.tests.test_parsing.LiteralEvalTest.test_tryLiteralEval"]], "pathtoolstests (class in armi.utils.tests.test_pathtools)": [[428, "armi.utils.tests.test_pathTools.PathToolsTests"]], "armi.utils.tests.test_pathtools": [[428, "module-armi.utils.tests.test_pathTools"]], "test_cleanpathnompi() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[428, "armi.utils.tests.test_pathTools.PathToolsTests.test_cleanPathNoMpi"]], "test_importcustommodule() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[428, "armi.utils.tests.test_pathTools.PathToolsTests.test_importCustomModule"]], "test_isaccessible() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[428, "armi.utils.tests.test_pathTools.PathToolsTests.test_isAccessible"]], "test_isfilepathnewer() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[428, "armi.utils.tests.test_pathTools.PathToolsTests.test_isFilePathNewer"]], "test_moduleandattributeexist() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[428, "armi.utils.tests.test_pathTools.PathToolsTests.test_moduleAndAttributeExist"]], "test_separatemoduleandattribute() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[428, "armi.utils.tests.test_pathTools.PathToolsTests.test_separateModuleAndAttribute"]], "testpatches (class in armi.utils.tests.test_plotting)": [[429, "armi.utils.tests.test_plotting.TestPatches"]], "testplotting (class in armi.utils.tests.test_plotting)": [[429, "armi.utils.tests.test_plotting.TestPlotting"]], "armi.utils.tests.test_plotting": [[429, "module-armi.utils.tests.test_plotting"]], "test_makeassempatches() (armi.utils.tests.test_plotting.testpatches method)": [[429, "armi.utils.tests.test_plotting.TestPatches.test_makeAssemPatches"]], "test_plotassemblytypes() (armi.utils.tests.test_plotting.testplotting method)": [[429, "armi.utils.tests.test_plotting.TestPlotting.test_plotAssemblyTypes"]], "test_plotblockflux() (armi.utils.tests.test_plotting.testplotting method)": [[429, "armi.utils.tests.test_plotting.TestPlotting.test_plotBlockFlux"]], "test_plotcartesianblock() (armi.utils.tests.test_plotting.testplotting method)": [[429, "armi.utils.tests.test_plotting.TestPlotting.test_plotCartesianBlock"]], "test_plotdepthmap() (armi.utils.tests.test_plotting.testplotting method)": [[429, "armi.utils.tests.test_plotting.TestPlotting.test_plotDepthMap"]], "test_plothexblock() (armi.utils.tests.test_plotting.testplotting method)": [[429, "armi.utils.tests.test_plotting.TestPlotting.test_plotHexBlock"]], "immutableclass (class in armi.utils.tests.test_properties)": [[430, "armi.utils.tests.test_properties.ImmutableClass"]], "immutablepropertytests (class in armi.utils.tests.test_properties)": [[430, "armi.utils.tests.test_properties.ImmutablePropertyTests"]], "armi.utils.tests.test_properties": [[430, "module-armi.utils.tests.test_properties"]], "initialize() (armi.utils.tests.test_properties.immutableclass method)": [[430, "armi.utils.tests.test_properties.ImmutableClass.initialize"]], "mynum (armi.utils.tests.test_properties.immutableclass property)": [[430, "armi.utils.tests.test_properties.ImmutableClass.myNum"]], "test_cannotassignvaluetoimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[430, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_cannotAssignValueToImmutableProperty"]], "test_retreivingunassignedvalueraiseserror() (armi.utils.tests.test_properties.immutablepropertytests method)": [[430, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_retreivingUnassignedValueRaisesError"]], "test_unlockdoesnotpermitsreassignmentofanimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[430, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "testradar (class in armi.utils.tests.test_reportplotting)": [[431, "armi.utils.tests.test_reportPlotting.TestRadar"]], "armi.utils.tests.test_reportplotting": [[431, "module-armi.utils.tests.test_reportPlotting"]], "test_buvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[431, "armi.utils.tests.test_reportPlotting.TestRadar.test_buVsTime"]], "test_createplotmetadata() (armi.utils.tests.test_reportplotting.testradar method)": [[431, "armi.utils.tests.test_reportPlotting.TestRadar.test_createPlotMetaData"]], "test_keffvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[431, "armi.utils.tests.test_reportPlotting.TestRadar.test_keffVsTime"]], "test_movesvscycle() (armi.utils.tests.test_reportplotting.testradar method)": [[431, "armi.utils.tests.test_reportPlotting.TestRadar.test_movesVsCycle"]], "test_plotaxialprofile() (armi.utils.tests.test_reportplotting.testradar method)": [[431, "armi.utils.tests.test_reportPlotting.TestRadar.test_plotAxialProfile"]], "test_radar() (armi.utils.tests.test_reportplotting.testradar method)": [[431, "armi.utils.tests.test_reportPlotting.TestRadar.test_radar"]], "test_valuevstime() (armi.utils.tests.test_reportplotting.testradar method)": [[431, "armi.utils.tests.test_reportPlotting.TestRadar.test_valueVsTime"]], "test_xshistoryvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[431, "armi.utils.tests.test_reportPlotting.TestRadar.test_xsHistoryVsTime"]], "testtabulateapi (class in armi.utils.tests.test_tabulate)": [[432, "armi.utils.tests.test_tabulate.TestTabulateAPI"]], "testtabulateinputs (class in armi.utils.tests.test_tabulate)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs"]], "testtabulateinternal (class in armi.utils.tests.test_tabulate)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal"]], "testtabulateoutput (class in armi.utils.tests.test_tabulate)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput"]], "armi.utils.tests.test_tabulate": [[432, "module-armi.utils.tests.test_tabulate"]], "test_aligncellveriticallybottommultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyBottomMultiTextMultiplePad"]], "test_aligncellveriticallybottomsingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyBottomSingleTextMultiplePad"]], "test_aligncellveriticallycentermultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyCenterMultiTextMultiplePad"]], "test_aligncellveriticallycentersingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyCenterSingleTextMultiplePad"]], "test_aligncellveriticallyonelineonly() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyOneLineOnly"]], "test_aligncellveriticallytopmultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyTopMultiTextMultiplePad"]], "test_aligncellveriticallytopsingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyTopSingleTextMultiplePad"]], "test_aligncolumndecimal() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimal"]], "test_aligncolumndecimalwithincorrectthousandseparators() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimalWithIncorrectThousandSeparators"]], "test_aligncolumndecimalwiththousandseparators() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimalWithThousandSeparators"]], "test_aligncolumnmultiline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnMultiline"]], "test_aligncolumnnone() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnNone"]], "test_assortedrareedgecases() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_assortedRareEdgeCases"]], "test_bool() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_bool"]], "test_buildline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_buildLine"]], "test_buildrow() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_buildRow"]], "test_colalignmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignMulti"]], "test_colalignmultiwithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignMultiWithSepLine"]], "test_colalignorheadersaligntoolong() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignOrheadersAlignTooLong"]], "test_columnalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_columnAlignment"]], "test_columnglobalandspecificalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_columnGlobalAndSpecificAlignment"]], "test_dictlike() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_dictLike"]], "test_dictlikewithindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_dictLikeWithIndex"]], "test_disablenumparsedefault() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseDefault"]], "test_disablenumparselist() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseList"]], "test_disablenumparsetrue() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseTrue"]], "test_emptydata() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyData"]], "test_emptydatawithheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyDataWithHeaders"]], "test_emptydatawithoutheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyDataWithoutHeaders"]], "test_floatconversions() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatConversions"]], "test_floatfmt() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatFmt"]], "test_floatfmtmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatFmtMulti"]], "test_format() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_format"]], "test_github() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_github"]], "test_grid() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_grid"]], "test_gridheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridHeaderless"]], "test_gridmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultiline"]], "test_gridmultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineHeaderless"]], "test_gridmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineWithEmptyCells"]], "test_gridmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineWithEmptyCellsHeaderless"]], "test_headersglobalandspecificalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_headersGlobalAndSpecificAlignment"]], "test_intfmt() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_intFmt"]], "test_ismultiline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_isMultiline"]], "test_iterableofempties() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfEmpties"]], "test_iterableofiterables() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterables"]], "test_iterableofiterablesfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterablesFirstrow"]], "test_iterableofiterablesheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterablesHeaders"]], "test_listbytes() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listBytes"]], "test_listofdicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDicts"]], "test_listofdictsfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsFirstrow"]], "test_listofdictskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsKeys"]], "test_listofdictswithdictofheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithDictOfHeaders"]], "test_listofdictswithlistofheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithListOfHeaders"]], "test_listofdictswithmissingkeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithMissingKeys"]], "test_listoflists() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfLists"]], "test_listoflistsfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfListsFirstrow"]], "test_listoflistskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfListsKeys"]], "test_listoflistswithindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndex"]], "test_listoflistswithindexfirstrow() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndexFirstrow"]], "test_listoflistswithindexwithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndexWithSepLine"]], "test_listoflistswithsuppliedindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithSuppliedIndex"]], "test_listofnamedtuples() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfNamedtuples"]], "test_listofnamedtupleskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfNamedtuplesKeys"]], "test_listofordereddicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfOrdereddicts"]], "test_listofuserdicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfUserdicts"]], "test_listofuserdictskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfUserdictsKeys"]], "test_maxcolwidthsinglevalue() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxColWidthsingleValue"]], "test_maxcolwidthhonordisableparsenum() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxcolwidthHonorDisableParsenum"]], "test_maxcolwidthpadtailingwidths() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxcolwidthPadTailingWidths"]], "test_missingval() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_missingVal"]], "test_missingvalmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_missingValMulti"]], "test_multilinewidth() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_multilineWidth"]], "test_nodata() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_noData"]], "test_nodatawithoutheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_noDataWithoutHeaders"]], "test_normalizetabulardata() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_normalizeTabularData"]], "test_numpy2d() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2d"]], "test_numpy2dfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2dFirstrow"]], "test_numpy2dkeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2dKeys"]], "test_numpyrecordarray() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArray"]], "test_numpyrecordarrayheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArrayHeaders"]], "test_numpyrecordarraykeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArrayKeys"]], "test_plain() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plain"]], "test_plainheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainHeaderless"]], "test_plainmaxcolwidthautowraps() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMaxcolwidthAutowraps"]], "test_plainmaxcolwidthautowrapswithsep() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMaxcolwidthAutowrapsWithSep"]], "test_plainmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultiline"]], "test_plainmultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineHeaderless"]], "test_plainmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithEmptyCells"]], "test_plainmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithEmptyCellsHeaderless"]], "test_plainmultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithLinks"]], "test_plainmaxheadercolwidthsautowraps() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainmaxHeaderColWidthsAutowraps"]], "test_pretty() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_pretty"]], "test_prettyheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyHeaderless"]], "test_prettymultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultiline"]], "test_prettymultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineHeaderless"]], "test_prettymultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithEmptyCells"]], "test_prettymultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithEmptyCellsHeaderless"]], "test_prettymultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithLinks"]], "test_readmeexamplewithsep() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_readmeExampleWithSep"]], "test_rst() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rst"]], "test_rstheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstHeaderless"]], "test_rstmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultiline"]], "test_rstmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithEmptyCells"]], "test_rstmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithEmptyCellsHeaderless"]], "test_rstmultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithLinks"]], "test_rstwithemptyvaluesinfirstcolumn() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstWithEmptyValuesInFirstColumn"]], "test_simple() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simple"]], "test_simpleheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleHeaderless"]], "test_simpleheaderlesswithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleHeaderlessWithSepLine"]], "test_simplemultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline"]], "test_simplemultiline2() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline2"]], "test_simplemultiline2withsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline2WithSepLine"]], "test_simplemultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineHeaderless"]], "test_simplemultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithEmptyCells"]], "test_simplemultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithEmptyCellsHeaderless"]], "test_simplemultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithLinks"]], "test_simplewithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleWithSepLine"]], "test_tabulateformats() (armi.utils.tests.test_tabulate.testtabulateapi method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateAPI.test_tabulateFormats"]], "test_tightcouplingexample() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_tightCouplingExample"]], "test_type() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_type"]], "test_visiblewidth() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_visibleWidth"]], "test_wraptexttocolwidths() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[432, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_wrapTextToColWidths"]], "sequentialreadertests (class in armi.utils.tests.test_textprocessors)": [[433, "armi.utils.tests.test_textProcessors.SequentialReaderTests"]], "yamlincludetest (class in armi.utils.tests.test_textprocessors)": [[433, "armi.utils.tests.test_textProcessors.YamlIncludeTest"]], "armi.utils.tests.test_textprocessors": [[433, "module-armi.utils.tests.test_textProcessors"]], "test_findincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[433, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_findIncludes"]], "test_readfile() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[433, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFile"]], "test_readfilewithpattern() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[433, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFileWithPattern"]], "test_resolveincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[433, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes"]], "test_resolveincludes_stringio() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[433, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes_StringIO"]], "textstream (armi.utils.tests.test_textprocessors.sequentialreadertests attribute)": [[433, "armi.utils.tests.test_textProcessors.SequentialReaderTests.textStream"]], "testtriangle (class in armi.utils.tests.test_triangle)": [[434, "armi.utils.tests.test_triangle.TestTriangle"]], "armi.utils.tests.test_triangle": [[434, "module-armi.utils.tests.test_triangle"]], "test_checkifpointisintriangle() (armi.utils.tests.test_triangle.testtriangle method)": [[434, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle"]], "test_checkifpointisintriangle2() (armi.utils.tests.test_triangle.testtriangle method)": [[434, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle2"]], "test_gettrianglearea() (armi.utils.tests.test_triangle.testtriangle method)": [[434, "armi.utils.tests.test_triangle.TestTriangle.test_getTriangleArea"]], "testunits (class in armi.utils.tests.test_units)": [[435, "armi.utils.tests.test_units.TestUnits"]], "armi.utils.tests.test_units": [[435, "module-armi.utils.tests.test_units"]], "test_convertxtopascal() (armi.utils.tests.test_units.testunits method)": [[435, "armi.utils.tests.test_units.TestUnits.test_convertXtoPascal"]], "test_gettc() (armi.utils.tests.test_units.testunits method)": [[435, "armi.utils.tests.test_units.TestUnits.test_getTc"]], "test_gettemperature() (armi.utils.tests.test_units.testunits method)": [[435, "armi.utils.tests.test_units.TestUnits.test_getTemperature"]], "test_gettf() (armi.utils.tests.test_units.testunits method)": [[435, "armi.utils.tests.test_units.TestUnits.test_getTf"]], "test_gettk() (armi.utils.tests.test_units.testunits method)": [[435, "armi.utils.tests.test_units.TestUnits.test_getTk"]], "test_gettmev() (armi.utils.tests.test_units.testunits method)": [[435, "armi.utils.tests.test_units.TestUnits.test_getTmev"]], "test_getxylineparameters() (armi.utils.tests.test_units.testunits method)": [[435, "armi.utils.tests.test_units.TestUnits.test_getXYLineParameters"]], "test_pressure_converter() (armi.utils.tests.test_units.testunits method)": [[435, "armi.utils.tests.test_units.TestUnits.test_pressure_converter"]], "test_sanitizeangle() (armi.utils.tests.test_units.testunits method)": [[435, "armi.utils.tests.test_units.TestUnits.test_sanitizeAngle"]], "cyclessettingstests (class in armi.utils.tests.test_utils)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests"]], "testgeneralutils (class in armi.utils.tests.test_utils)": [[436, "armi.utils.tests.test_utils.TestGeneralUtils"]], "armi.utils.tests.test_utils": [[436, "module-armi.utils.tests.test_utils"]], "availabilityfactorsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsDetailedSolution"]], "availabilityfactorssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsSimpleSolution"]], "burnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsDetailedSolution"]], "burnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsSimpleSolution"]], "cyclelengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsDetailedSolution"]], "cyclelengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsSimpleSolution"]], "cyclenamesdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesDetailedSolution"]], "cyclenamessimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesSimpleSolution"]], "detailedcyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.detailedCyclesSettings"]], "maxburnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsDetailedSolution"]], "maxburnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsSimpleSolution"]], "nodespercycledetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleDetailedSolution"]], "nodespercyclesimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleSimpleSolution"]], "powerfractionsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsDetailedSolution"]], "powerfractionssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsSimpleSolution"]], "simplecyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.simpleCyclesSettings"]], "steplengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsDetailedSolution"]], "steplengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsSimpleSolution"]], "test_capstrlen() (armi.utils.tests.test_utils.testgeneralutils method)": [[436, "armi.utils.tests.test_utils.TestGeneralUtils.test_capStrLen"]], "test_classesinhierarchy() (armi.utils.tests.test_utils.testgeneralutils method)": [[436, "armi.utils.tests.test_utils.TestGeneralUtils.test_classesInHierarchy"]], "test_codetiming() (armi.utils.tests.test_utils.testgeneralutils method)": [[436, "armi.utils.tests.test_utils.TestGeneralUtils.test_codeTiming"]], "test_createformattedstrwithdelimiter() (armi.utils.tests.test_utils.testgeneralutils method)": [[436, "armi.utils.tests.test_utils.TestGeneralUtils.test_createFormattedStrWithDelimiter"]], "test_getavailabilityfactors() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getBurnSteps"]], "test_getcumulativenodenum() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCumulativeNodeNum"]], "test_getcyclelengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNames"]], "test_getcyclenodefromcumulativenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeNode"]], "test_getcyclenodefromcumulativestep() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeStep"]], "test_getmaxburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getnodespercycle() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getNodesPerCycle"]], "test_getpowerfractions() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPowerFractions"]], "test_getprevioustimenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPreviousTimeNode"]], "test_getsteplengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getStepLengths"]], "test_hasburnup() (armi.utils.tests.test_utils.cyclessettingstests method)": [[436, "armi.utils.tests.test_utils.CyclesSettingsTests.test_hasBurnup"]], "test_list2str() (armi.utils.tests.test_utils.testgeneralutils method)": [[436, "armi.utils.tests.test_utils.TestGeneralUtils.test_list2str"]], "test_mergeabledictionary() (armi.utils.tests.test_utils.testgeneralutils method)": [[436, "armi.utils.tests.test_utils.TestGeneralUtils.test_mergeableDictionary"]], "test_plotmatrix() (armi.utils.tests.test_utils.testgeneralutils method)": [[436, "armi.utils.tests.test_utils.TestGeneralUtils.test_plotMatrix"]], "test_prependtolist() (armi.utils.tests.test_utils.testgeneralutils method)": [[436, "armi.utils.tests.test_utils.TestGeneralUtils.test_prependToList"]], "test_safecopy() (armi.utils.tests.test_utils.testgeneralutils method)": [[436, "armi.utils.tests.test_utils.TestGeneralUtils.test_safeCopy"]], "test_slantsplit() (armi.utils.tests.test_utils.testgeneralutils method)": [[436, "armi.utils.tests.test_utils.TestGeneralUtils.test_slantSplit"]], "decimal_pattern (in module armi.utils.textprocessors)": [[437, "armi.utils.textProcessors.DECIMAL_PATTERN"]], "floating_pattern (in module armi.utils.textprocessors)": [[437, "armi.utils.textProcessors.FLOATING_PATTERN"]], "filemark (class in armi.utils.textprocessors)": [[437, "armi.utils.textProcessors.FileMark"]], "scientific_pattern (in module armi.utils.textprocessors)": [[437, "armi.utils.textProcessors.SCIENTIFIC_PATTERN"]], "sequentialreader (class in armi.utils.textprocessors)": [[437, "armi.utils.textProcessors.SequentialReader"]], "sequentialstringioreader (class in armi.utils.textprocessors)": [[437, "armi.utils.textProcessors.SequentialStringIOReader"]], "smartlist (class in armi.utils.textprocessors)": [[437, "armi.utils.textProcessors.SmartList"]], "textprocessor (class in armi.utils.textprocessors)": [[437, "armi.utils.textProcessors.TextProcessor"]], "armi.utils.textprocessors": [[437, "module-armi.utils.textProcessors"]], "checkerrors() (armi.utils.textprocessors.textprocessor method)": [[437, "armi.utils.textProcessors.TextProcessor.checkErrors"]], "close() (armi.utils.textprocessors.smartlist method)": [[437, "armi.utils.textProcessors.SmartList.close"]], "consumeline() (armi.utils.textprocessors.sequentialreader method)": [[437, "armi.utils.textProcessors.SequentialReader.consumeLine"]], "decimal (armi.utils.textprocessors.textprocessor attribute)": [[437, "armi.utils.textProcessors.TextProcessor.decimal"]], "errorchecking() (armi.utils.textprocessors.textprocessor method)": [[437, "armi.utils.textProcessors.TextProcessor.errorChecking"]], "findyamlinclusions() (in module armi.utils.textprocessors)": [[437, "armi.utils.textProcessors.findYamlInclusions"]], "fsearch() (armi.utils.textprocessors.textprocessor method)": [[437, "armi.utils.textProcessors.TextProcessor.fsearch"]], "issuewarningonfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[437, "armi.utils.textProcessors.SequentialReader.issueWarningOnFindingText"]], "next() (armi.utils.textprocessors.smartlist method)": [[437, "armi.utils.textProcessors.SmartList.next"]], "number (armi.utils.textprocessors.textprocessor attribute)": [[437, "armi.utils.textProcessors.TextProcessor.number"]], "raiseerroronfindingpattern() (armi.utils.textprocessors.sequentialreader method)": [[437, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingPattern"]], "raiseerroronfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[437, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingText"]], "reset() (armi.utils.textprocessors.textprocessor method)": [[437, "armi.utils.textProcessors.TextProcessor.reset"]], "resolvemarkupinclusions() (in module armi.utils.textprocessors)": [[437, "armi.utils.textProcessors.resolveMarkupInclusions"]], "scipat (armi.utils.textprocessors.textprocessor attribute)": [[437, "armi.utils.textProcessors.TextProcessor.scipat"]], "searchforpattern() (armi.utils.textprocessors.sequentialreader method)": [[437, "armi.utils.textProcessors.SequentialReader.searchForPattern"]], "searchforpatternonnextline() (armi.utils.textprocessors.sequentialreader method)": [[437, "armi.utils.textProcessors.SequentialReader.searchForPatternOnNextLine"]], "searchfortext() (armi.utils.textprocessors.sequentialreader method)": [[437, "armi.utils.textProcessors.SequentialReader.searchForText"]], "seek() (armi.utils.textprocessors.smartlist method)": [[437, "armi.utils.textProcessors.SmartList.seek"]], "armi.utils.triangle": [[438, "module-armi.utils.triangle"]], "checkifpointisintriangle() (in module armi.utils.triangle)": [[438, "armi.utils.triangle.checkIfPointIsInTriangle"]], "gettrianglearea() (in module armi.utils.triangle)": [[438, "armi.utils.triangle.getTriangleArea"]], "gettrianglecentroid() (in module armi.utils.triangle)": [[438, "armi.utils.triangle.getTriangleCentroid"]], "armi.utils.units": [[439, "module-armi.utils.units"]], "convertatmtopascal() (in module armi.utils.units)": [[439, "armi.utils.units.convertAtmToPascal"]], "convertbartopascal() (in module armi.utils.units)": [[439, "armi.utils.units.convertBarToPascal"]], "convertmmhgtopascal() (in module armi.utils.units)": [[439, "armi.utils.units.convertMmhgToPascal"]], "gettc() (in module armi.utils.units)": [[439, "armi.utils.units.getTc"]], "gettemperature() (in module armi.utils.units)": [[439, "armi.utils.units.getTemperature"]], "gettf() (in module armi.utils.units)": [[439, "armi.utils.units.getTf"]], "gettk() (in module armi.utils.units)": [[439, "armi.utils.units.getTk"]], "gettmev() (in module armi.utils.units)": [[439, "armi.utils.units.getTmev"]], "getxylineparameters() (in module armi.utils.units)": [[439, "armi.utils.units.getXYLineParameters"]], "sanitizeangle() (in module armi.utils.units)": [[439, "armi.utils.units.sanitizeAngle"]], "anl": [[478, "term-ANL"]], "boc": [[478, "term-BOC"]], "bol": [[478, "term-BOL"]], "cli": [[478, "term-CLI"]], "fima": [[478, "term-FIMA"]], "gui": [[478, "term-GUI"]], "in-use tests": [[478, "term-In-Use-Tests"]], "lwr": [[478, "term-LWR"]], "liner": [[478, "term-Liner"]], "mpi": [[478, "term-MPI"]], "twr": [[478, "term-TWR"]], "unit tests": [[478, "term-Unit-Tests"]], "v&v": [[478, "term-V-V"]], "xtview": [[478, "term-XTVIEW"]], "assembly": [[478, "term-assembly"]], "block": [[478, "term-block"]], "burnup": [[478, "term-burnup"]], "cladding": [[478, "term-cladding"]], "component": [[478, "term-component"]], "grid plate": [[478, "term-grid-plate"]], "interface": [[478, "term-interface"]], "material": [[478, "term-material"]], "node": [[478, "term-node"]], "operator": [[478, "term-operator"]], "parameter": [[478, "term-parameter"]], "plenum": [[478, "term-plenum"]], "reactor": [[478, "term-reactor"]], "reactor state": [[478, "term-reactor-state"]], "smear density": [[478, "term-smear-density"]]}})