Search.setIndex({"docnames": [".apidocs/armi", ".apidocs/armi.apps", ".apidocs/armi.bookkeeping", ".apidocs/armi.bookkeeping.db", ".apidocs/armi.bookkeeping.db.compareDB3", ".apidocs/armi.bookkeeping.db.database", ".apidocs/armi.bookkeeping.db.database3", ".apidocs/armi.bookkeeping.db.databaseInterface", ".apidocs/armi.bookkeeping.db.factory", ".apidocs/armi.bookkeeping.db.jaggedArray", ".apidocs/armi.bookkeeping.db.layout", ".apidocs/armi.bookkeeping.db.passiveDBLoadPlugin", ".apidocs/armi.bookkeeping.db.permissions", ".apidocs/armi.bookkeeping.db.tests", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3", ".apidocs/armi.bookkeeping.db.tests.test_database3", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface", ".apidocs/armi.bookkeeping.db.tests.test_jaggedArray", ".apidocs/armi.bookkeeping.db.tests.test_layout", ".apidocs/armi.bookkeeping.db.typedefs", ".apidocs/armi.bookkeeping.historyTracker", ".apidocs/armi.bookkeeping.mainInterface", ".apidocs/armi.bookkeeping.memoryProfiler", ".apidocs/armi.bookkeeping.report", ".apidocs/armi.bookkeeping.report.data", ".apidocs/armi.bookkeeping.report.html", ".apidocs/armi.bookkeeping.report.newReportUtils", ".apidocs/armi.bookkeeping.report.newReports", ".apidocs/armi.bookkeeping.report.reportInterface", ".apidocs/armi.bookkeeping.report.reportingUtils", ".apidocs/armi.bookkeeping.report.tests", ".apidocs/armi.bookkeeping.report.tests.test_newReport", ".apidocs/armi.bookkeeping.report.tests.test_report", ".apidocs/armi.bookkeeping.snapshotInterface", ".apidocs/armi.bookkeeping.tests", ".apidocs/armi.bookkeeping.tests.test_historyTracker", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler", ".apidocs/armi.bookkeeping.tests.test_snapshot", ".apidocs/armi.bookkeeping.visualization", ".apidocs/armi.bookkeeping.visualization.dumper", ".apidocs/armi.bookkeeping.visualization.entryPoint", ".apidocs/armi.bookkeeping.visualization.tests", ".apidocs/armi.bookkeeping.visualization.tests.test_vis", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf", ".apidocs/armi.bookkeeping.visualization.utils", ".apidocs/armi.bookkeeping.visualization.vtk", ".apidocs/armi.bookkeeping.visualization.xdmf", ".apidocs/armi.cases", ".apidocs/armi.cases.case", ".apidocs/armi.cases.inputModifiers", ".apidocs/armi.cases.inputModifiers.inputModifiers", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers", ".apidocs/armi.cases.inputModifiers.tests", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers", ".apidocs/armi.cases.suite", ".apidocs/armi.cases.suiteBuilder", ".apidocs/armi.cases.tests", ".apidocs/armi.cases.tests.test_cases", ".apidocs/armi.cases.tests.test_suiteBuilder", ".apidocs/armi.cli", ".apidocs/armi.cli.checkInputs", ".apidocs/armi.cli.cleanTemps", ".apidocs/armi.cli.clone", ".apidocs/armi.cli.compareCases", ".apidocs/armi.cli.database", ".apidocs/armi.cli.entryPoint", ".apidocs/armi.cli.gridGui", ".apidocs/armi.cli.migrateInputs", ".apidocs/armi.cli.modify", ".apidocs/armi.cli.reportsEntryPoint", ".apidocs/armi.cli.run", ".apidocs/armi.cli.runSuite", ".apidocs/armi.cli.tests", ".apidocs/armi.cli.tests.test_runEntryPoint", ".apidocs/armi.cli.tests.test_runSuite", ".apidocs/armi.conftest", ".apidocs/armi.context", ".apidocs/armi.interfaces", ".apidocs/armi.materials", ".apidocs/armi.materials.air", ".apidocs/armi.materials.alloy200", ".apidocs/armi.materials.b4c", ".apidocs/armi.materials.be9", ".apidocs/armi.materials.caH2", ".apidocs/armi.materials.californium", ".apidocs/armi.materials.concrete", ".apidocs/armi.materials.copper", ".apidocs/armi.materials.cs", ".apidocs/armi.materials.custom", ".apidocs/armi.materials.graphite", ".apidocs/armi.materials.hafnium", ".apidocs/armi.materials.hastelloyN", ".apidocs/armi.materials.ht9", ".apidocs/armi.materials.inconel", ".apidocs/armi.materials.inconel600", ".apidocs/armi.materials.inconel625", ".apidocs/armi.materials.inconel800", ".apidocs/armi.materials.inconelPE16", ".apidocs/armi.materials.inconelX750", ".apidocs/armi.materials.lead", ".apidocs/armi.materials.leadBismuth", ".apidocs/armi.materials.lithium", ".apidocs/armi.materials.magnesium", ".apidocs/armi.materials.material", ".apidocs/armi.materials.mgO", ".apidocs/armi.materials.mixture", ".apidocs/armi.materials.molybdenum", ".apidocs/armi.materials.mox", ".apidocs/armi.materials.nZ", ".apidocs/armi.materials.potassium", ".apidocs/armi.materials.scandiumOxide", ".apidocs/armi.materials.siC", ".apidocs/armi.materials.sodium", ".apidocs/armi.materials.sodiumChloride", ".apidocs/armi.materials.sulfur", ".apidocs/armi.materials.tZM", ".apidocs/armi.materials.tantalum", ".apidocs/armi.materials.tests", ".apidocs/armi.materials.tests.test__init__", ".apidocs/armi.materials.tests.test_air", ".apidocs/armi.materials.tests.test_b4c", ".apidocs/armi.materials.tests.test_be9", ".apidocs/armi.materials.tests.test_graphite", ".apidocs/armi.materials.tests.test_lithium", ".apidocs/armi.materials.tests.test_materials", ".apidocs/armi.materials.tests.test_sic", ".apidocs/armi.materials.tests.test_sulfur", ".apidocs/armi.materials.tests.test_thoriumOxide", ".apidocs/armi.materials.tests.test_uZr", ".apidocs/armi.materials.tests.test_water", ".apidocs/armi.materials.thU", ".apidocs/armi.materials.thorium", ".apidocs/armi.materials.thoriumOxide", ".apidocs/armi.materials.uThZr", ".apidocs/armi.materials.uZr", ".apidocs/armi.materials.uranium", ".apidocs/armi.materials.uraniumOxide", ".apidocs/armi.materials.void", ".apidocs/armi.materials.water", ".apidocs/armi.materials.yttriumOxide", ".apidocs/armi.materials.zincOxide", ".apidocs/armi.materials.zr", ".apidocs/armi.meta", ".apidocs/armi.migration", ".apidocs/armi.migration.base", ".apidocs/armi.migration.m0_1_3", ".apidocs/armi.migration.m0_1_6", ".apidocs/armi.migration.tests", ".apidocs/armi.migration.tests.test_m0_1_6", ".apidocs/armi.migration.tests.test_migration_base", ".apidocs/armi.mpiActions", ".apidocs/armi.nucDirectory", ".apidocs/armi.nucDirectory.elements", ".apidocs/armi.nucDirectory.nucDir", ".apidocs/armi.nucDirectory.nuclideBases", ".apidocs/armi.nucDirectory.tests", ".apidocs/armi.nucDirectory.tests.test_elements", ".apidocs/armi.nucDirectory.tests.test_nucDirectory", ".apidocs/armi.nucDirectory.tests.test_nuclideBases", ".apidocs/armi.nucDirectory.tests.test_thermalScattering", ".apidocs/armi.nucDirectory.tests.test_transmutations", ".apidocs/armi.nucDirectory.thermalScattering", ".apidocs/armi.nucDirectory.transmutations", ".apidocs/armi.nuclearDataIO", ".apidocs/armi.nuclearDataIO.cccc", ".apidocs/armi.nuclearDataIO.cccc.cccc", ".apidocs/armi.nuclearDataIO.cccc.compxs", ".apidocs/armi.nuclearDataIO.cccc.dif3d", ".apidocs/armi.nuclearDataIO.cccc.dlayxs", ".apidocs/armi.nuclearDataIO.cccc.fixsrc", ".apidocs/armi.nuclearDataIO.cccc.gamiso", ".apidocs/armi.nuclearDataIO.cccc.geodst", ".apidocs/armi.nuclearDataIO.cccc.isotxs", ".apidocs/armi.nuclearDataIO.cccc.labels", ".apidocs/armi.nuclearDataIO.cccc.nhflux", ".apidocs/armi.nuclearDataIO.cccc.pmatrx", ".apidocs/armi.nuclearDataIO.cccc.pwdint", ".apidocs/armi.nuclearDataIO.cccc.rtflux", ".apidocs/armi.nuclearDataIO.cccc.rzflux", ".apidocs/armi.nuclearDataIO.cccc.tests", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_fixsrc", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata", ".apidocs/armi.nuclearDataIO.tests", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides", ".apidocs/armi.nuclearDataIO.xsCollections", ".apidocs/armi.nuclearDataIO.xsLibraries", ".apidocs/armi.nuclearDataIO.xsNuclides", ".apidocs/armi.operators", ".apidocs/armi.operators.operator", ".apidocs/armi.operators.operatorMPI", ".apidocs/armi.operators.runTypes", ".apidocs/armi.operators.settingsValidation", ".apidocs/armi.operators.snapshots", ".apidocs/armi.operators.tests", ".apidocs/armi.operators.tests.test_operatorSnapshots", ".apidocs/armi.operators.tests.test_operators", ".apidocs/armi.physics", ".apidocs/armi.physics.constants", ".apidocs/armi.physics.executers", ".apidocs/armi.physics.fuelCycle", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface", ".apidocs/armi.physics.fuelCycle.fuelHandlers", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelCycle.settings", ".apidocs/armi.physics.fuelCycle.tests", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelPerformance", ".apidocs/armi.physics.fuelPerformance.executers", ".apidocs/armi.physics.fuelPerformance.parameters", ".apidocs/armi.physics.fuelPerformance.plugin", ".apidocs/armi.physics.fuelPerformance.settings", ".apidocs/armi.physics.fuelPerformance.tests", ".apidocs/armi.physics.fuelPerformance.tests.test_executers", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils", ".apidocs/armi.physics.fuelPerformance.utils", ".apidocs/armi.physics.neutronics", ".apidocs/armi.physics.neutronics.const", ".apidocs/armi.physics.neutronics.crossSectionGroupManager", ".apidocs/armi.physics.neutronics.crossSectionSettings", ".apidocs/armi.physics.neutronics.diffIsotxs", ".apidocs/armi.physics.neutronics.energyGroups", ".apidocs/armi.physics.neutronics.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct", ".apidocs/armi.physics.neutronics.fissionProductModel.tests", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct", ".apidocs/armi.physics.neutronics.globalFlux", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface", ".apidocs/armi.physics.neutronics.globalFlux.tests", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface", ".apidocs/armi.physics.neutronics.latticePhysics", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter", ".apidocs/armi.physics.neutronics.latticePhysics.tests", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.parameters", ".apidocs/armi.physics.neutronics.reports", ".apidocs/armi.physics.neutronics.settings", ".apidocs/armi.physics.neutronics.tests", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable", ".apidocs/armi.physics.neutronics.tests.test_energyGroups", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin", ".apidocs/armi.physics.safety", ".apidocs/armi.physics.tests", ".apidocs/armi.physics.tests.test_executers", ".apidocs/armi.physics.thermalHydraulics", ".apidocs/armi.physics.thermalHydraulics.const", ".apidocs/armi.physics.thermalHydraulics.parameters", ".apidocs/armi.physics.thermalHydraulics.plugin", ".apidocs/armi.physics.thermalHydraulics.settings", ".apidocs/armi.physics.thermalHydraulics.tests", ".apidocs/armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin", ".apidocs/armi.pluginManager", ".apidocs/armi.plugins", ".apidocs/armi.reactor", ".apidocs/armi.reactor.assemblies", ".apidocs/armi.reactor.assemblyParameters", ".apidocs/armi.reactor.blockParameters", ".apidocs/armi.reactor.blocks", ".apidocs/armi.reactor.blueprints", ".apidocs/armi.reactor.blueprints.assemblyBlueprint", ".apidocs/armi.reactor.blueprints.blockBlueprint", ".apidocs/armi.reactor.blueprints.componentBlueprint", ".apidocs/armi.reactor.blueprints.gridBlueprint", ".apidocs/armi.reactor.blueprints.isotopicOptions", ".apidocs/armi.reactor.blueprints.reactorBlueprint", ".apidocs/armi.reactor.blueprints.tests", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blueprints", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints", ".apidocs/armi.reactor.components", ".apidocs/armi.reactor.components.basicShapes", ".apidocs/armi.reactor.components.complexShapes", ".apidocs/armi.reactor.components.component", ".apidocs/armi.reactor.components.componentParameters", ".apidocs/armi.reactor.components.volumetricShapes", ".apidocs/armi.reactor.composites", ".apidocs/armi.reactor.converters", ".apidocs/armi.reactor.converters.axialExpansionChanger", ".apidocs/armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage", ".apidocs/armi.reactor.converters.axialExpansionChanger.axialExpansionChanger", ".apidocs/armi.reactor.converters.axialExpansionChanger.expansionData", ".apidocs/armi.reactor.converters.blockConverters", ".apidocs/armi.reactor.converters.geometryConverters", ".apidocs/armi.reactor.converters.meshConverters", ".apidocs/armi.reactor.converters.parameterSweeps", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters", ".apidocs/armi.reactor.converters.pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger", ".apidocs/armi.reactor.converters.tests.test_blockConverter", ".apidocs/armi.reactor.converters.tests.test_geometryConverters", ".apidocs/armi.reactor.converters.tests.test_meshConverters", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests.test_uniformMesh", ".apidocs/armi.reactor.converters.uniformMesh", ".apidocs/armi.reactor.cores", ".apidocs/armi.reactor.excoreStructure", ".apidocs/armi.reactor.flags", ".apidocs/armi.reactor.geometry", ".apidocs/armi.reactor.grids", ".apidocs/armi.reactor.grids.axial", ".apidocs/armi.reactor.grids.cartesian", ".apidocs/armi.reactor.grids.constants", ".apidocs/armi.reactor.grids.grid", ".apidocs/armi.reactor.grids.hexagonal", ".apidocs/armi.reactor.grids.locations", ".apidocs/armi.reactor.grids.structuredGrid", ".apidocs/armi.reactor.grids.thetarz", ".apidocs/armi.reactor.parameters", ".apidocs/armi.reactor.parameters.exceptions", ".apidocs/armi.reactor.parameters.parameterCollections", ".apidocs/armi.reactor.parameters.parameterDefinitions", ".apidocs/armi.reactor.parameters.resolveCollections", ".apidocs/armi.reactor.reactorParameters", ".apidocs/armi.reactor.reactors", ".apidocs/armi.reactor.spentFuelPool", ".apidocs/armi.reactor.systemLayoutInput", ".apidocs/armi.reactor.tests", ".apidocs/armi.reactor.tests.test_assemblies", ".apidocs/armi.reactor.tests.test_blocks", ".apidocs/armi.reactor.tests.test_components", ".apidocs/armi.reactor.tests.test_composites", ".apidocs/armi.reactor.tests.test_excoreStructures", ".apidocs/armi.reactor.tests.test_flags", ".apidocs/armi.reactor.tests.test_geometry", ".apidocs/armi.reactor.tests.test_parameters", ".apidocs/armi.reactor.tests.test_reactors", ".apidocs/armi.reactor.tests.test_rz_reactors", ".apidocs/armi.reactor.tests.test_zones", ".apidocs/armi.reactor.zones", ".apidocs/armi.runLog", ".apidocs/armi.settings", ".apidocs/armi.settings.caseSettings", ".apidocs/armi.settings.fwSettings", ".apidocs/armi.settings.fwSettings.databaseSettings", ".apidocs/armi.settings.fwSettings.globalSettings", ".apidocs/armi.settings.fwSettings.reportSettings", ".apidocs/armi.settings.fwSettings.tightCouplingSettings", ".apidocs/armi.settings.setting", ".apidocs/armi.settings.settingsIO", ".apidocs/armi.settings.settingsValidation", ".apidocs/armi.settings.tests", ".apidocs/armi.settings.tests.test_inspectors", ".apidocs/armi.settings.tests.test_settings", ".apidocs/armi.settings.tests.test_settingsIO", ".apidocs/armi.tests", ".apidocs/armi.tests.mockRunLogs", ".apidocs/armi.tests.refSmallReactorShuffleLogic", ".apidocs/armi.tests.test_apps", ".apidocs/armi.tests.test_armiTestHelper", ".apidocs/armi.tests.test_cartesian", ".apidocs/armi.tests.test_context", ".apidocs/armi.tests.test_interfaces", ".apidocs/armi.tests.test_lwrInputs", ".apidocs/armi.tests.test_mpiActions", ".apidocs/armi.tests.test_mpiFeatures", ".apidocs/armi.tests.test_mpiParameters", ".apidocs/armi.tests.test_notebooks", ".apidocs/armi.tests.test_plugins", ".apidocs/armi.tests.test_runLog", ".apidocs/armi.tests.test_tests", ".apidocs/armi.tests.test_user_plugins", ".apidocs/armi.utils", ".apidocs/armi.utils.asciimaps", ".apidocs/armi.utils.codeTiming", ".apidocs/armi.utils.customExceptions", ".apidocs/armi.utils.densityTools", ".apidocs/armi.utils.directoryChangers", ".apidocs/armi.utils.directoryChangersMpi", ".apidocs/armi.utils.dynamicImporter", ".apidocs/armi.utils.flags", ".apidocs/armi.utils.gridEditor", ".apidocs/armi.utils.hexagon", ".apidocs/armi.utils.iterables", ".apidocs/armi.utils.mathematics", ".apidocs/armi.utils.outputCache", ".apidocs/armi.utils.parsing", ".apidocs/armi.utils.pathTools", ".apidocs/armi.utils.plotting", ".apidocs/armi.utils.properties", ".apidocs/armi.utils.reportPlotting", ".apidocs/armi.utils.tabulate", ".apidocs/armi.utils.tests", ".apidocs/armi.utils.tests.test_asciimaps", ".apidocs/armi.utils.tests.test_codeTiming", ".apidocs/armi.utils.tests.test_custom_exceptions", ".apidocs/armi.utils.tests.test_densityTools", ".apidocs/armi.utils.tests.test_directoryChangers", ".apidocs/armi.utils.tests.test_directoryChangersMpi", ".apidocs/armi.utils.tests.test_flags", ".apidocs/armi.utils.tests.test_hexagon", ".apidocs/armi.utils.tests.test_iterables", ".apidocs/armi.utils.tests.test_mathematics", ".apidocs/armi.utils.tests.test_outputCache", ".apidocs/armi.utils.tests.test_parsing", ".apidocs/armi.utils.tests.test_pathTools", ".apidocs/armi.utils.tests.test_plotting", ".apidocs/armi.utils.tests.test_properties", ".apidocs/armi.utils.tests.test_reportPlotting", ".apidocs/armi.utils.tests.test_tabulate", ".apidocs/armi.utils.tests.test_textProcessors", ".apidocs/armi.utils.tests.test_triangle", ".apidocs/armi.utils.tests.test_units", ".apidocs/armi.utils.tests.test_utils", ".apidocs/armi.utils.textProcessors", ".apidocs/armi.utils.triangle", ".apidocs/armi.utils.units", ".apidocs/modules", "developer/documenting", "developer/entrypoints", "developer/first_time_contributors", "developer/guide", "developer/index", "developer/making_armi_based_apps", "developer/parallel_coding", "developer/profiling", "developer/reports", "developer/standards_and_practices", "developer/tooling", "gallery-src/README", "gallery-src/analysis/README", "gallery-src/applications/README", "gallery-src/framework/README", "gallery/analysis/index", "gallery/analysis/run_blockMcnpMaterialCard", "gallery/analysis/run_hexBlockToRZConversion", "gallery/analysis/run_hexReactorToRZ", "gallery/analysis/sg_execution_times", "gallery/applications/index", "gallery/framework/index", "gallery/framework/run_blockVolumeFractions", "gallery/framework/run_chartOfNuclides", "gallery/framework/run_computeReactionRates", "gallery/framework/run_fuelManagement", "gallery/framework/run_grids1_hex", "gallery/framework/run_grids2_cartesian", "gallery/framework/run_grids3_rzt", "gallery/framework/run_isotxs", "gallery/framework/run_isotxs2_matrix", "gallery/framework/run_materials", "gallery/framework/run_programmaticReactorDefinition", "gallery/framework/run_reactorFacemap", "gallery/framework/run_transmutationMatrix", "gallery/framework/sg_execution_times", "gallery/index", "glossary", "index", "installation", "release/0.1", "release/0.2", "release/0.3", "release/0.4", "release/index", "tutorials/data_model", "tutorials/index", "tutorials/making_your_first_app", "tutorials/materials_demo", "tutorials/nuclide_demo", "tutorials/param_sweep", "tutorials/walkthrough_inputs", "tutorials/walkthrough_lwr_inputs", "user/_gallery/index", "user/accessingEntryPoints", "user/assembly_parameters_report", "user/block_parameters_report", "user/component_parameters_report", "user/core_parameters_report", "user/index", "user/inputs", "user/manual_data_access", "user/outputs", "user/physics_coupling", "user/radial_and_axial_expansion", "user/reactor_parameters_report", "user/user_install"], "filenames": [".apidocs/armi.rst", ".apidocs/armi.apps.rst", ".apidocs/armi.bookkeeping.rst", ".apidocs/armi.bookkeeping.db.rst", ".apidocs/armi.bookkeeping.db.compareDB3.rst", ".apidocs/armi.bookkeeping.db.database.rst", ".apidocs/armi.bookkeeping.db.database3.rst", ".apidocs/armi.bookkeeping.db.databaseInterface.rst", ".apidocs/armi.bookkeeping.db.factory.rst", ".apidocs/armi.bookkeeping.db.jaggedArray.rst", ".apidocs/armi.bookkeeping.db.layout.rst", ".apidocs/armi.bookkeeping.db.passiveDBLoadPlugin.rst", ".apidocs/armi.bookkeeping.db.permissions.rst", ".apidocs/armi.bookkeeping.db.tests.rst", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3.rst", ".apidocs/armi.bookkeeping.db.tests.test_database3.rst", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface.rst", ".apidocs/armi.bookkeeping.db.tests.test_jaggedArray.rst", ".apidocs/armi.bookkeeping.db.tests.test_layout.rst", ".apidocs/armi.bookkeeping.db.typedefs.rst", ".apidocs/armi.bookkeeping.historyTracker.rst", ".apidocs/armi.bookkeeping.mainInterface.rst", ".apidocs/armi.bookkeeping.memoryProfiler.rst", ".apidocs/armi.bookkeeping.report.rst", ".apidocs/armi.bookkeeping.report.data.rst", ".apidocs/armi.bookkeeping.report.html.rst", ".apidocs/armi.bookkeeping.report.newReportUtils.rst", ".apidocs/armi.bookkeeping.report.newReports.rst", ".apidocs/armi.bookkeeping.report.reportInterface.rst", ".apidocs/armi.bookkeeping.report.reportingUtils.rst", ".apidocs/armi.bookkeeping.report.tests.rst", ".apidocs/armi.bookkeeping.report.tests.test_newReport.rst", ".apidocs/armi.bookkeeping.report.tests.test_report.rst", ".apidocs/armi.bookkeeping.snapshotInterface.rst", ".apidocs/armi.bookkeeping.tests.rst", ".apidocs/armi.bookkeeping.tests.test_historyTracker.rst", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler.rst", ".apidocs/armi.bookkeeping.tests.test_snapshot.rst", ".apidocs/armi.bookkeeping.visualization.rst", ".apidocs/armi.bookkeeping.visualization.dumper.rst", ".apidocs/armi.bookkeeping.visualization.entryPoint.rst", ".apidocs/armi.bookkeeping.visualization.tests.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_vis.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf.rst", ".apidocs/armi.bookkeeping.visualization.utils.rst", ".apidocs/armi.bookkeeping.visualization.vtk.rst", ".apidocs/armi.bookkeeping.visualization.xdmf.rst", ".apidocs/armi.cases.rst", ".apidocs/armi.cases.case.rst", ".apidocs/armi.cases.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers.rst", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.rst", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.rst", ".apidocs/armi.cases.suite.rst", ".apidocs/armi.cases.suiteBuilder.rst", ".apidocs/armi.cases.tests.rst", ".apidocs/armi.cases.tests.test_cases.rst", ".apidocs/armi.cases.tests.test_suiteBuilder.rst", ".apidocs/armi.cli.rst", ".apidocs/armi.cli.checkInputs.rst", ".apidocs/armi.cli.cleanTemps.rst", ".apidocs/armi.cli.clone.rst", ".apidocs/armi.cli.compareCases.rst", ".apidocs/armi.cli.database.rst", ".apidocs/armi.cli.entryPoint.rst", ".apidocs/armi.cli.gridGui.rst", ".apidocs/armi.cli.migrateInputs.rst", ".apidocs/armi.cli.modify.rst", ".apidocs/armi.cli.reportsEntryPoint.rst", ".apidocs/armi.cli.run.rst", ".apidocs/armi.cli.runSuite.rst", ".apidocs/armi.cli.tests.rst", ".apidocs/armi.cli.tests.test_runEntryPoint.rst", ".apidocs/armi.cli.tests.test_runSuite.rst", ".apidocs/armi.conftest.rst", ".apidocs/armi.context.rst", ".apidocs/armi.interfaces.rst", ".apidocs/armi.materials.rst", ".apidocs/armi.materials.air.rst", ".apidocs/armi.materials.alloy200.rst", ".apidocs/armi.materials.b4c.rst", ".apidocs/armi.materials.be9.rst", ".apidocs/armi.materials.caH2.rst", ".apidocs/armi.materials.californium.rst", ".apidocs/armi.materials.concrete.rst", ".apidocs/armi.materials.copper.rst", ".apidocs/armi.materials.cs.rst", ".apidocs/armi.materials.custom.rst", ".apidocs/armi.materials.graphite.rst", ".apidocs/armi.materials.hafnium.rst", ".apidocs/armi.materials.hastelloyN.rst", ".apidocs/armi.materials.ht9.rst", ".apidocs/armi.materials.inconel.rst", ".apidocs/armi.materials.inconel600.rst", ".apidocs/armi.materials.inconel625.rst", ".apidocs/armi.materials.inconel800.rst", ".apidocs/armi.materials.inconelPE16.rst", ".apidocs/armi.materials.inconelX750.rst", ".apidocs/armi.materials.lead.rst", ".apidocs/armi.materials.leadBismuth.rst", ".apidocs/armi.materials.lithium.rst", ".apidocs/armi.materials.magnesium.rst", ".apidocs/armi.materials.material.rst", ".apidocs/armi.materials.mgO.rst", ".apidocs/armi.materials.mixture.rst", ".apidocs/armi.materials.molybdenum.rst", ".apidocs/armi.materials.mox.rst", ".apidocs/armi.materials.nZ.rst", ".apidocs/armi.materials.potassium.rst", ".apidocs/armi.materials.scandiumOxide.rst", ".apidocs/armi.materials.siC.rst", ".apidocs/armi.materials.sodium.rst", ".apidocs/armi.materials.sodiumChloride.rst", ".apidocs/armi.materials.sulfur.rst", ".apidocs/armi.materials.tZM.rst", ".apidocs/armi.materials.tantalum.rst", ".apidocs/armi.materials.tests.rst", ".apidocs/armi.materials.tests.test__init__.rst", ".apidocs/armi.materials.tests.test_air.rst", ".apidocs/armi.materials.tests.test_b4c.rst", ".apidocs/armi.materials.tests.test_be9.rst", ".apidocs/armi.materials.tests.test_graphite.rst", ".apidocs/armi.materials.tests.test_lithium.rst", ".apidocs/armi.materials.tests.test_materials.rst", ".apidocs/armi.materials.tests.test_sic.rst", ".apidocs/armi.materials.tests.test_sulfur.rst", ".apidocs/armi.materials.tests.test_thoriumOxide.rst", ".apidocs/armi.materials.tests.test_uZr.rst", ".apidocs/armi.materials.tests.test_water.rst", ".apidocs/armi.materials.thU.rst", ".apidocs/armi.materials.thorium.rst", ".apidocs/armi.materials.thoriumOxide.rst", ".apidocs/armi.materials.uThZr.rst", ".apidocs/armi.materials.uZr.rst", ".apidocs/armi.materials.uranium.rst", ".apidocs/armi.materials.uraniumOxide.rst", ".apidocs/armi.materials.void.rst", ".apidocs/armi.materials.water.rst", ".apidocs/armi.materials.yttriumOxide.rst", ".apidocs/armi.materials.zincOxide.rst", ".apidocs/armi.materials.zr.rst", ".apidocs/armi.meta.rst", ".apidocs/armi.migration.rst", ".apidocs/armi.migration.base.rst", ".apidocs/armi.migration.m0_1_3.rst", ".apidocs/armi.migration.m0_1_6.rst", ".apidocs/armi.migration.tests.rst", ".apidocs/armi.migration.tests.test_m0_1_6.rst", ".apidocs/armi.migration.tests.test_migration_base.rst", ".apidocs/armi.mpiActions.rst", ".apidocs/armi.nucDirectory.rst", ".apidocs/armi.nucDirectory.elements.rst", ".apidocs/armi.nucDirectory.nucDir.rst", ".apidocs/armi.nucDirectory.nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.rst", ".apidocs/armi.nucDirectory.tests.test_elements.rst", ".apidocs/armi.nucDirectory.tests.test_nucDirectory.rst", ".apidocs/armi.nucDirectory.tests.test_nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.test_thermalScattering.rst", ".apidocs/armi.nucDirectory.tests.test_transmutations.rst", ".apidocs/armi.nucDirectory.thermalScattering.rst", ".apidocs/armi.nucDirectory.transmutations.rst", ".apidocs/armi.nuclearDataIO.rst", ".apidocs/armi.nuclearDataIO.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.fixsrc.rst", ".apidocs/armi.nuclearDataIO.cccc.gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.labels.rst", ".apidocs/armi.nuclearDataIO.cccc.nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.rzflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_fixsrc.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux.rst", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata.rst", ".apidocs/armi.nuclearDataIO.tests.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides.rst", ".apidocs/armi.nuclearDataIO.xsCollections.rst", ".apidocs/armi.nuclearDataIO.xsLibraries.rst", ".apidocs/armi.nuclearDataIO.xsNuclides.rst", ".apidocs/armi.operators.rst", ".apidocs/armi.operators.operator.rst", ".apidocs/armi.operators.operatorMPI.rst", ".apidocs/armi.operators.runTypes.rst", ".apidocs/armi.operators.settingsValidation.rst", ".apidocs/armi.operators.snapshots.rst", ".apidocs/armi.operators.tests.rst", ".apidocs/armi.operators.tests.test_operatorSnapshots.rst", ".apidocs/armi.operators.tests.test_operators.rst", ".apidocs/armi.physics.rst", ".apidocs/armi.physics.constants.rst", ".apidocs/armi.physics.executers.rst", ".apidocs/armi.physics.fuelCycle.rst", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelCycle.settings.rst", ".apidocs/armi.physics.fuelCycle.tests.rst", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelPerformance.rst", ".apidocs/armi.physics.fuelPerformance.executers.rst", ".apidocs/armi.physics.fuelPerformance.parameters.rst", ".apidocs/armi.physics.fuelPerformance.plugin.rst", ".apidocs/armi.physics.fuelPerformance.settings.rst", ".apidocs/armi.physics.fuelPerformance.tests.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_executers.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.rst", ".apidocs/armi.physics.fuelPerformance.utils.rst", ".apidocs/armi.physics.neutronics.rst", ".apidocs/armi.physics.neutronics.const.rst", ".apidocs/armi.physics.neutronics.crossSectionGroupManager.rst", ".apidocs/armi.physics.neutronics.crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.diffIsotxs.rst", ".apidocs/armi.physics.neutronics.energyGroups.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.globalFlux.rst", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.rst", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.parameters.rst", ".apidocs/armi.physics.neutronics.reports.rst", ".apidocs/armi.physics.neutronics.settings.rst", ".apidocs/armi.physics.neutronics.tests.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable.rst", ".apidocs/armi.physics.neutronics.tests.test_energyGroups.rst", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin.rst", ".apidocs/armi.physics.safety.rst", ".apidocs/armi.physics.tests.rst", ".apidocs/armi.physics.tests.test_executers.rst", ".apidocs/armi.physics.thermalHydraulics.rst", ".apidocs/armi.physics.thermalHydraulics.const.rst", ".apidocs/armi.physics.thermalHydraulics.parameters.rst", ".apidocs/armi.physics.thermalHydraulics.plugin.rst", ".apidocs/armi.physics.thermalHydraulics.settings.rst", ".apidocs/armi.physics.thermalHydraulics.tests.rst", ".apidocs/armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.rst", ".apidocs/armi.pluginManager.rst", ".apidocs/armi.plugins.rst", ".apidocs/armi.reactor.rst", ".apidocs/armi.reactor.assemblies.rst", ".apidocs/armi.reactor.assemblyParameters.rst", ".apidocs/armi.reactor.blockParameters.rst", ".apidocs/armi.reactor.blocks.rst", ".apidocs/armi.reactor.blueprints.rst", ".apidocs/armi.reactor.blueprints.assemblyBlueprint.rst", ".apidocs/armi.reactor.blueprints.blockBlueprint.rst", ".apidocs/armi.reactor.blueprints.componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.gridBlueprint.rst", ".apidocs/armi.reactor.blueprints.isotopicOptions.rst", ".apidocs/armi.reactor.blueprints.reactorBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.rst", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics.rst", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications.rst", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints.rst", ".apidocs/armi.reactor.components.rst", ".apidocs/armi.reactor.components.basicShapes.rst", ".apidocs/armi.reactor.components.complexShapes.rst", ".apidocs/armi.reactor.components.component.rst", ".apidocs/armi.reactor.components.componentParameters.rst", ".apidocs/armi.reactor.components.volumetricShapes.rst", ".apidocs/armi.reactor.composites.rst", ".apidocs/armi.reactor.converters.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.expansionData.rst", ".apidocs/armi.reactor.converters.blockConverters.rst", ".apidocs/armi.reactor.converters.geometryConverters.rst", ".apidocs/armi.reactor.converters.meshConverters.rst", ".apidocs/armi.reactor.converters.parameterSweeps.rst", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.rst", ".apidocs/armi.reactor.converters.pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.rst", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.tests.test_blockConverter.rst", ".apidocs/armi.reactor.converters.tests.test_geometryConverters.rst", ".apidocs/armi.reactor.converters.tests.test_meshConverters.rst", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.test_uniformMesh.rst", ".apidocs/armi.reactor.converters.uniformMesh.rst", ".apidocs/armi.reactor.cores.rst", ".apidocs/armi.reactor.excoreStructure.rst", ".apidocs/armi.reactor.flags.rst", ".apidocs/armi.reactor.geometry.rst", ".apidocs/armi.reactor.grids.rst", ".apidocs/armi.reactor.grids.axial.rst", ".apidocs/armi.reactor.grids.cartesian.rst", ".apidocs/armi.reactor.grids.constants.rst", ".apidocs/armi.reactor.grids.grid.rst", ".apidocs/armi.reactor.grids.hexagonal.rst", ".apidocs/armi.reactor.grids.locations.rst", ".apidocs/armi.reactor.grids.structuredGrid.rst", ".apidocs/armi.reactor.grids.thetarz.rst", ".apidocs/armi.reactor.parameters.rst", ".apidocs/armi.reactor.parameters.exceptions.rst", ".apidocs/armi.reactor.parameters.parameterCollections.rst", ".apidocs/armi.reactor.parameters.parameterDefinitions.rst", ".apidocs/armi.reactor.parameters.resolveCollections.rst", ".apidocs/armi.reactor.reactorParameters.rst", ".apidocs/armi.reactor.reactors.rst", ".apidocs/armi.reactor.spentFuelPool.rst", ".apidocs/armi.reactor.systemLayoutInput.rst", ".apidocs/armi.reactor.tests.rst", ".apidocs/armi.reactor.tests.test_assemblies.rst", ".apidocs/armi.reactor.tests.test_blocks.rst", ".apidocs/armi.reactor.tests.test_components.rst", ".apidocs/armi.reactor.tests.test_composites.rst", ".apidocs/armi.reactor.tests.test_excoreStructures.rst", ".apidocs/armi.reactor.tests.test_flags.rst", ".apidocs/armi.reactor.tests.test_geometry.rst", ".apidocs/armi.reactor.tests.test_parameters.rst", ".apidocs/armi.reactor.tests.test_reactors.rst", ".apidocs/armi.reactor.tests.test_rz_reactors.rst", ".apidocs/armi.reactor.tests.test_zones.rst", ".apidocs/armi.reactor.zones.rst", ".apidocs/armi.runLog.rst", ".apidocs/armi.settings.rst", ".apidocs/armi.settings.caseSettings.rst", ".apidocs/armi.settings.fwSettings.rst", ".apidocs/armi.settings.fwSettings.databaseSettings.rst", ".apidocs/armi.settings.fwSettings.globalSettings.rst", ".apidocs/armi.settings.fwSettings.reportSettings.rst", ".apidocs/armi.settings.fwSettings.tightCouplingSettings.rst", ".apidocs/armi.settings.setting.rst", ".apidocs/armi.settings.settingsIO.rst", ".apidocs/armi.settings.settingsValidation.rst", ".apidocs/armi.settings.tests.rst", ".apidocs/armi.settings.tests.test_inspectors.rst", ".apidocs/armi.settings.tests.test_settings.rst", ".apidocs/armi.settings.tests.test_settingsIO.rst", ".apidocs/armi.tests.rst", ".apidocs/armi.tests.mockRunLogs.rst", ".apidocs/armi.tests.refSmallReactorShuffleLogic.rst", ".apidocs/armi.tests.test_apps.rst", ".apidocs/armi.tests.test_armiTestHelper.rst", ".apidocs/armi.tests.test_cartesian.rst", ".apidocs/armi.tests.test_context.rst", ".apidocs/armi.tests.test_interfaces.rst", ".apidocs/armi.tests.test_lwrInputs.rst", ".apidocs/armi.tests.test_mpiActions.rst", ".apidocs/armi.tests.test_mpiFeatures.rst", ".apidocs/armi.tests.test_mpiParameters.rst", ".apidocs/armi.tests.test_notebooks.rst", ".apidocs/armi.tests.test_plugins.rst", ".apidocs/armi.tests.test_runLog.rst", ".apidocs/armi.tests.test_tests.rst", ".apidocs/armi.tests.test_user_plugins.rst", ".apidocs/armi.utils.rst", ".apidocs/armi.utils.asciimaps.rst", ".apidocs/armi.utils.codeTiming.rst", ".apidocs/armi.utils.customExceptions.rst", ".apidocs/armi.utils.densityTools.rst", ".apidocs/armi.utils.directoryChangers.rst", ".apidocs/armi.utils.directoryChangersMpi.rst", ".apidocs/armi.utils.dynamicImporter.rst", ".apidocs/armi.utils.flags.rst", ".apidocs/armi.utils.gridEditor.rst", ".apidocs/armi.utils.hexagon.rst", ".apidocs/armi.utils.iterables.rst", ".apidocs/armi.utils.mathematics.rst", ".apidocs/armi.utils.outputCache.rst", ".apidocs/armi.utils.parsing.rst", ".apidocs/armi.utils.pathTools.rst", ".apidocs/armi.utils.plotting.rst", ".apidocs/armi.utils.properties.rst", ".apidocs/armi.utils.reportPlotting.rst", ".apidocs/armi.utils.tabulate.rst", ".apidocs/armi.utils.tests.rst", ".apidocs/armi.utils.tests.test_asciimaps.rst", ".apidocs/armi.utils.tests.test_codeTiming.rst", ".apidocs/armi.utils.tests.test_custom_exceptions.rst", ".apidocs/armi.utils.tests.test_densityTools.rst", ".apidocs/armi.utils.tests.test_directoryChangers.rst", ".apidocs/armi.utils.tests.test_directoryChangersMpi.rst", ".apidocs/armi.utils.tests.test_flags.rst", ".apidocs/armi.utils.tests.test_hexagon.rst", ".apidocs/armi.utils.tests.test_iterables.rst", ".apidocs/armi.utils.tests.test_mathematics.rst", ".apidocs/armi.utils.tests.test_outputCache.rst", ".apidocs/armi.utils.tests.test_parsing.rst", ".apidocs/armi.utils.tests.test_pathTools.rst", ".apidocs/armi.utils.tests.test_plotting.rst", ".apidocs/armi.utils.tests.test_properties.rst", ".apidocs/armi.utils.tests.test_reportPlotting.rst", ".apidocs/armi.utils.tests.test_tabulate.rst", ".apidocs/armi.utils.tests.test_textProcessors.rst", ".apidocs/armi.utils.tests.test_triangle.rst", ".apidocs/armi.utils.tests.test_units.rst", ".apidocs/armi.utils.tests.test_utils.rst", ".apidocs/armi.utils.textProcessors.rst", ".apidocs/armi.utils.triangle.rst", ".apidocs/armi.utils.units.rst", ".apidocs/modules.rst", "developer/documenting.rst", "developer/entrypoints.rst", "developer/first_time_contributors.rst", "developer/guide.rst", "developer/index.rst", "developer/making_armi_based_apps.rst", "developer/parallel_coding.rst", "developer/profiling.rst", "developer/reports.rst", "developer/standards_and_practices.rst", "developer/tooling.rst", "gallery-src/README.rst", "gallery-src/analysis/README.rst", "gallery-src/applications/README.rst", "gallery-src/framework/README.rst", "gallery/analysis/index.rst", "gallery/analysis/run_blockMcnpMaterialCard.rst", "gallery/analysis/run_hexBlockToRZConversion.rst", "gallery/analysis/run_hexReactorToRZ.rst", "gallery/analysis/sg_execution_times.rst", "gallery/applications/index.rst", "gallery/framework/index.rst", "gallery/framework/run_blockVolumeFractions.rst", "gallery/framework/run_chartOfNuclides.rst", "gallery/framework/run_computeReactionRates.rst", "gallery/framework/run_fuelManagement.rst", "gallery/framework/run_grids1_hex.rst", "gallery/framework/run_grids2_cartesian.rst", "gallery/framework/run_grids3_rzt.rst", "gallery/framework/run_isotxs.rst", "gallery/framework/run_isotxs2_matrix.rst", "gallery/framework/run_materials.rst", "gallery/framework/run_programmaticReactorDefinition.rst", "gallery/framework/run_reactorFacemap.rst", "gallery/framework/run_transmutationMatrix.rst", "gallery/framework/sg_execution_times.rst", "gallery/index.rst", "glossary.rst", "index.rst", "installation.rst", "release/0.1.rst", "release/0.2.rst", "release/0.3.rst", "release/0.4.rst", "release/index.rst", "tutorials/data_model.nblink", "tutorials/index.rst", "tutorials/making_your_first_app.rst", "tutorials/materials_demo.ipynb", "tutorials/nuclide_demo.ipynb", "tutorials/param_sweep.nblink", "tutorials/walkthrough_inputs.rst", "tutorials/walkthrough_lwr_inputs.rst", "user/_gallery/index.rst", "user/accessingEntryPoints.rst", "user/assembly_parameters_report.rst", "user/block_parameters_report.rst", "user/component_parameters_report.rst", "user/core_parameters_report.rst", "user/index.rst", "user/inputs.rst", "user/manual_data_access.rst", "user/outputs.rst", "user/physics_coupling.rst", "user/radial_and_axial_expansion.rst", "user/reactor_parameters_report.rst", "user/user_install.rst"], "titles": ["armi package", "armi.apps module", "armi.bookkeeping package", "armi.bookkeeping.db package", "armi.bookkeeping.db.compareDB3 module", "armi.bookkeeping.db.database module", "armi.bookkeeping.db.database3 module", "armi.bookkeeping.db.databaseInterface module", "armi.bookkeeping.db.factory module", "armi.bookkeeping.db.jaggedArray module", "armi.bookkeeping.db.layout module", "armi.bookkeeping.db.passiveDBLoadPlugin module", "armi.bookkeeping.db.permissions module", "armi.bookkeeping.db.tests package", "armi.bookkeeping.db.tests.test_comparedb3 module", "armi.bookkeeping.db.tests.test_database3 module", "armi.bookkeeping.db.tests.test_databaseInterface module", "armi.bookkeeping.db.tests.test_jaggedArray module", "armi.bookkeeping.db.tests.test_layout module", "armi.bookkeeping.db.typedefs module", "armi.bookkeeping.historyTracker module", "armi.bookkeeping.mainInterface module", "armi.bookkeeping.memoryProfiler module", "armi.bookkeeping.report package", "armi.bookkeeping.report.data module", "armi.bookkeeping.report.html module", "armi.bookkeeping.report.newReportUtils module", "armi.bookkeeping.report.newReports module", "armi.bookkeeping.report.reportInterface module", "armi.bookkeeping.report.reportingUtils module", "armi.bookkeeping.report.tests package", "armi.bookkeeping.report.tests.test_newReport module", "armi.bookkeeping.report.tests.test_report module", "armi.bookkeeping.snapshotInterface module", "armi.bookkeeping.tests package", "armi.bookkeeping.tests.test_historyTracker module", "armi.bookkeeping.tests.test_memoryProfiler module", "armi.bookkeeping.tests.test_snapshot module", "armi.bookkeeping.visualization package", "armi.bookkeeping.visualization.dumper module", "armi.bookkeeping.visualization.entryPoint module", "armi.bookkeeping.visualization.tests package", "armi.bookkeeping.visualization.tests.test_vis module", "armi.bookkeeping.visualization.tests.test_xdmf module", "armi.bookkeeping.visualization.utils module", "armi.bookkeeping.visualization.vtk module", "armi.bookkeeping.visualization.xdmf module", "armi.cases package", "armi.cases.case module", "armi.cases.inputModifiers package", "armi.cases.inputModifiers.inputModifiers module", "armi.cases.inputModifiers.neutronicsModifiers module", "armi.cases.inputModifiers.pinTypeInputModifiers module", "armi.cases.inputModifiers.tests package", "armi.cases.inputModifiers.tests.test_inputModifiers module", "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module", "armi.cases.suite module", "armi.cases.suiteBuilder module", "armi.cases.tests package", "armi.cases.tests.test_cases module", "armi.cases.tests.test_suiteBuilder module", "armi.cli package", "armi.cli.checkInputs module", "armi.cli.cleanTemps module", "armi.cli.clone module", "armi.cli.compareCases module", "armi.cli.database module", "armi.cli.entryPoint module", "armi.cli.gridGui module", "armi.cli.migrateInputs module", "armi.cli.modify module", "armi.cli.reportsEntryPoint module", "armi.cli.run module", "armi.cli.runSuite module", "armi.cli.tests package", "armi.cli.tests.test_runEntryPoint module", "armi.cli.tests.test_runSuite module", "armi.conftest module", "armi.context module", "armi.interfaces module", "armi.materials package", "armi.materials.air module", "armi.materials.alloy200 module", "armi.materials.b4c module", "armi.materials.be9 module", "armi.materials.caH2 module", "armi.materials.californium module", "armi.materials.concrete module", "armi.materials.copper module", "armi.materials.cs module", "armi.materials.custom module", "armi.materials.graphite module", "armi.materials.hafnium module", "armi.materials.hastelloyN module", "armi.materials.ht9 module", "armi.materials.inconel module", "armi.materials.inconel600 module", "armi.materials.inconel625 module", "armi.materials.inconel800 module", "armi.materials.inconelPE16 module", "armi.materials.inconelX750 module", "armi.materials.lead module", "armi.materials.leadBismuth module", "armi.materials.lithium module", "armi.materials.magnesium module", "armi.materials.material module", "armi.materials.mgO module", "armi.materials.mixture module", "armi.materials.molybdenum module", "armi.materials.mox module", "armi.materials.nZ module", "armi.materials.potassium module", "armi.materials.scandiumOxide module", "armi.materials.siC module", "armi.materials.sodium module", "armi.materials.sodiumChloride module", "armi.materials.sulfur module", "armi.materials.tZM module", "armi.materials.tantalum module", "armi.materials.tests package", "armi.materials.tests.test__init__ module", "armi.materials.tests.test_air module", "armi.materials.tests.test_b4c module", "armi.materials.tests.test_be9 module", "armi.materials.tests.test_graphite module", "armi.materials.tests.test_lithium module", "armi.materials.tests.test_materials module", "armi.materials.tests.test_sic module", "armi.materials.tests.test_sulfur module", "armi.materials.tests.test_thoriumOxide module", "armi.materials.tests.test_uZr module", "armi.materials.tests.test_water module", "armi.materials.thU module", "armi.materials.thorium module", "armi.materials.thoriumOxide module", "armi.materials.uThZr module", "armi.materials.uZr module", "armi.materials.uranium module", "armi.materials.uraniumOxide module", "armi.materials.void module", "armi.materials.water module", "armi.materials.yttriumOxide module", "armi.materials.zincOxide module", "armi.materials.zr module", "armi.meta module", "armi.migration package", "armi.migration.base module", "armi.migration.m0_1_3 module", "armi.migration.m0_1_6 module", "armi.migration.tests package", "armi.migration.tests.test_m0_1_6 module", "armi.migration.tests.test_migration_base module", "armi.mpiActions module", "armi.nucDirectory package", "armi.nucDirectory.elements module", "armi.nucDirectory.nucDir module", "armi.nucDirectory.nuclideBases module", "armi.nucDirectory.tests package", "armi.nucDirectory.tests.test_elements module", "armi.nucDirectory.tests.test_nucDirectory module", "armi.nucDirectory.tests.test_nuclideBases module", "armi.nucDirectory.tests.test_thermalScattering module", "armi.nucDirectory.tests.test_transmutations module", "armi.nucDirectory.thermalScattering module", "armi.nucDirectory.transmutations module", "armi.nuclearDataIO package", "armi.nuclearDataIO.cccc package", "armi.nuclearDataIO.cccc.cccc module", "armi.nuclearDataIO.cccc.compxs module", "armi.nuclearDataIO.cccc.dif3d module", "armi.nuclearDataIO.cccc.dlayxs module", "armi.nuclearDataIO.cccc.fixsrc module", "armi.nuclearDataIO.cccc.gamiso module", "armi.nuclearDataIO.cccc.geodst module", "armi.nuclearDataIO.cccc.isotxs module", "armi.nuclearDataIO.cccc.labels module", "armi.nuclearDataIO.cccc.nhflux module", "armi.nuclearDataIO.cccc.pmatrx module", "armi.nuclearDataIO.cccc.pwdint module", "armi.nuclearDataIO.cccc.rtflux module", "armi.nuclearDataIO.cccc.rzflux module", "armi.nuclearDataIO.cccc.tests package", "armi.nuclearDataIO.cccc.tests.test_cccc module", "armi.nuclearDataIO.cccc.tests.test_compxs module", "armi.nuclearDataIO.cccc.tests.test_dif3d module", "armi.nuclearDataIO.cccc.tests.test_dlayxs module", "armi.nuclearDataIO.cccc.tests.test_fixsrc module", "armi.nuclearDataIO.cccc.tests.test_gamiso module", "armi.nuclearDataIO.cccc.tests.test_geodst module", "armi.nuclearDataIO.cccc.tests.test_isotxs module", "armi.nuclearDataIO.cccc.tests.test_labels module", "armi.nuclearDataIO.cccc.tests.test_nhflux module", "armi.nuclearDataIO.cccc.tests.test_pmatrx module", "armi.nuclearDataIO.cccc.tests.test_pwdint module", "armi.nuclearDataIO.cccc.tests.test_rtflux module", "armi.nuclearDataIO.cccc.tests.test_rzflux module", "armi.nuclearDataIO.nuclearFileMetadata module", "armi.nuclearDataIO.tests package", "armi.nuclearDataIO.tests.test_xsCollections module", "armi.nuclearDataIO.tests.test_xsLibraries module", "armi.nuclearDataIO.tests.test_xsNuclides module", "armi.nuclearDataIO.xsCollections module", "armi.nuclearDataIO.xsLibraries module", "armi.nuclearDataIO.xsNuclides module", "armi.operators package", "armi.operators.operator module", "armi.operators.operatorMPI module", "armi.operators.runTypes module", "armi.operators.settingsValidation module", "armi.operators.snapshots module", "armi.operators.tests package", "armi.operators.tests.test_operatorSnapshots module", "armi.operators.tests.test_operators module", "armi.physics package", "armi.physics.constants module", "armi.physics.executers module", "armi.physics.fuelCycle package", "armi.physics.fuelCycle.assemblyRotationAlgorithms module", "armi.physics.fuelCycle.fuelHandlerFactory module", "armi.physics.fuelCycle.fuelHandlerInterface module", "armi.physics.fuelCycle.fuelHandlers module", "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module", "armi.physics.fuelCycle.settings module", "armi.physics.fuelCycle.tests package", "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module", "armi.physics.fuelCycle.tests.test_fuelHandlers module", "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module", "armi.physics.fuelPerformance package", "armi.physics.fuelPerformance.executers module", "armi.physics.fuelPerformance.parameters module", "armi.physics.fuelPerformance.plugin module", "armi.physics.fuelPerformance.settings module", "armi.physics.fuelPerformance.tests package", "armi.physics.fuelPerformance.tests.test_executers module", "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module", "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module", "armi.physics.fuelPerformance.utils module", "armi.physics.neutronics package", "armi.physics.neutronics.const module", "armi.physics.neutronics.crossSectionGroupManager module", "armi.physics.neutronics.crossSectionSettings module", "armi.physics.neutronics.diffIsotxs module", "armi.physics.neutronics.energyGroups module", "armi.physics.neutronics.fissionProductModel package", "armi.physics.neutronics.fissionProductModel.fissionProductModel module", "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module", "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module", "armi.physics.neutronics.fissionProductModel.tests package", "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module", "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module", "armi.physics.neutronics.globalFlux package", "armi.physics.neutronics.globalFlux.globalFluxInterface module", "armi.physics.neutronics.globalFlux.tests package", "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module", "armi.physics.neutronics.latticePhysics package", "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module", "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module", "armi.physics.neutronics.latticePhysics.tests package", "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module", "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module", "armi.physics.neutronics.macroXSGenerationInterface module", "armi.physics.neutronics.parameters module", "armi.physics.neutronics.reports module", "armi.physics.neutronics.settings module", "armi.physics.neutronics.tests package", "armi.physics.neutronics.tests.test_crossSectionManager module", "armi.physics.neutronics.tests.test_crossSectionSettings module", "armi.physics.neutronics.tests.test_crossSectionTable module", "armi.physics.neutronics.tests.test_energyGroups module", "armi.physics.neutronics.tests.test_macroXSGenerationInterface module", "armi.physics.neutronics.tests.test_neutronicsPlugin module", "armi.physics.safety package", "armi.physics.tests package", "armi.physics.tests.test_executers module", "armi.physics.thermalHydraulics package", "armi.physics.thermalHydraulics.const module", "armi.physics.thermalHydraulics.parameters module", "armi.physics.thermalHydraulics.plugin module", "armi.physics.thermalHydraulics.settings module", "armi.physics.thermalHydraulics.tests package", "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin module", "armi.pluginManager module", "armi.plugins module", "armi.reactor package", "armi.reactor.assemblies module", "armi.reactor.assemblyParameters module", "armi.reactor.blockParameters module", "armi.reactor.blocks module", "armi.reactor.blueprints package", "armi.reactor.blueprints.assemblyBlueprint module", "armi.reactor.blueprints.blockBlueprint module", "armi.reactor.blueprints.componentBlueprint module", "armi.reactor.blueprints.gridBlueprint module", "armi.reactor.blueprints.isotopicOptions module", "armi.reactor.blueprints.reactorBlueprint module", "armi.reactor.blueprints.tests package", "armi.reactor.blueprints.tests.test_assemblyBlueprints module", "armi.reactor.blueprints.tests.test_blockBlueprints module", "armi.reactor.blueprints.tests.test_blueprints module", "armi.reactor.blueprints.tests.test_componentBlueprint module", "armi.reactor.blueprints.tests.test_customIsotopics module", "armi.reactor.blueprints.tests.test_gridBlueprints module", "armi.reactor.blueprints.tests.test_materialModifications module", "armi.reactor.blueprints.tests.test_reactorBlueprints module", "armi.reactor.components package", "armi.reactor.components.basicShapes module", "armi.reactor.components.complexShapes module", "armi.reactor.components.component module", "armi.reactor.components.componentParameters module", "armi.reactor.components.volumetricShapes module", "armi.reactor.composites module", "armi.reactor.converters package", "armi.reactor.converters.axialExpansionChanger package", "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage module", "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger module", "armi.reactor.converters.axialExpansionChanger.expansionData module", "armi.reactor.converters.blockConverters module", "armi.reactor.converters.geometryConverters module", "armi.reactor.converters.meshConverters module", "armi.reactor.converters.parameterSweeps package", "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module", "armi.reactor.converters.pinTypeBlockConverters module", "armi.reactor.converters.tests package", "armi.reactor.converters.tests.test_axialExpansionChanger module", "armi.reactor.converters.tests.test_blockConverter module", "armi.reactor.converters.tests.test_geometryConverters module", "armi.reactor.converters.tests.test_meshConverters module", "armi.reactor.converters.tests.test_pinTypeBlockConverters module", "armi.reactor.converters.tests.test_uniformMesh module", "armi.reactor.converters.uniformMesh module", "armi.reactor.cores module", "armi.reactor.excoreStructure module", "armi.reactor.flags module", "armi.reactor.geometry module", "armi.reactor.grids package", "armi.reactor.grids.axial module", "armi.reactor.grids.cartesian module", "armi.reactor.grids.constants module", "armi.reactor.grids.grid module", "armi.reactor.grids.hexagonal module", "armi.reactor.grids.locations module", "armi.reactor.grids.structuredGrid module", "armi.reactor.grids.thetarz module", "armi.reactor.parameters package", "armi.reactor.parameters.exceptions module", "armi.reactor.parameters.parameterCollections module", "armi.reactor.parameters.parameterDefinitions module", "armi.reactor.parameters.resolveCollections module", "armi.reactor.reactorParameters module", "armi.reactor.reactors module", "armi.reactor.spentFuelPool module", "armi.reactor.systemLayoutInput module", "armi.reactor.tests package", "armi.reactor.tests.test_assemblies module", "armi.reactor.tests.test_blocks module", "armi.reactor.tests.test_components module", "armi.reactor.tests.test_composites module", "armi.reactor.tests.test_excoreStructures module", "armi.reactor.tests.test_flags module", "armi.reactor.tests.test_geometry module", "armi.reactor.tests.test_parameters module", "armi.reactor.tests.test_reactors module", "armi.reactor.tests.test_rz_reactors module", "armi.reactor.tests.test_zones module", "armi.reactor.zones module", "armi.runLog module", "armi.settings package", "armi.settings.caseSettings module", "armi.settings.fwSettings package", "armi.settings.fwSettings.databaseSettings module", "armi.settings.fwSettings.globalSettings module", "armi.settings.fwSettings.reportSettings module", "armi.settings.fwSettings.tightCouplingSettings module", "armi.settings.setting module", "armi.settings.settingsIO module", "armi.settings.settingsValidation module", "armi.settings.tests package", "armi.settings.tests.test_inspectors module", "armi.settings.tests.test_settings module", "armi.settings.tests.test_settingsIO module", "armi.tests package", "armi.tests.mockRunLogs module", "armi.tests.refSmallReactorShuffleLogic module", "armi.tests.test_apps module", "armi.tests.test_armiTestHelper module", "armi.tests.test_cartesian module", "armi.tests.test_context module", "armi.tests.test_interfaces module", "armi.tests.test_lwrInputs module", "armi.tests.test_mpiActions module", "armi.tests.test_mpiFeatures module", "armi.tests.test_mpiParameters module", "armi.tests.test_notebooks module", "armi.tests.test_plugins module", "armi.tests.test_runLog module", "armi.tests.test_tests module", "armi.tests.test_user_plugins module", "armi.utils package", "armi.utils.asciimaps module", "armi.utils.codeTiming module", "armi.utils.customExceptions module", "armi.utils.densityTools module", "armi.utils.directoryChangers module", "armi.utils.directoryChangersMpi module", "armi.utils.dynamicImporter module", "armi.utils.flags module", "armi.utils.gridEditor module", "armi.utils.hexagon module", "armi.utils.iterables module", "armi.utils.mathematics module", "armi.utils.outputCache module", "armi.utils.parsing module", "armi.utils.pathTools module", "armi.utils.plotting module", "armi.utils.properties module", "armi.utils.reportPlotting module", "armi.utils.tabulate module", "armi.utils.tests package", "armi.utils.tests.test_asciimaps module", "armi.utils.tests.test_codeTiming module", "armi.utils.tests.test_custom_exceptions module", "armi.utils.tests.test_densityTools module", "armi.utils.tests.test_directoryChangers module", "armi.utils.tests.test_directoryChangersMpi module", "armi.utils.tests.test_flags module", "armi.utils.tests.test_hexagon module", "armi.utils.tests.test_iterables module", "armi.utils.tests.test_mathematics module", "armi.utils.tests.test_outputCache module", "armi.utils.tests.test_parsing module", "armi.utils.tests.test_pathTools module", "armi.utils.tests.test_plotting module", "armi.utils.tests.test_properties module", "armi.utils.tests.test_reportPlotting module", "armi.utils.tests.test_tabulate module", "armi.utils.tests.test_textProcessors module", "armi.utils.tests.test_triangle module", "armi.utils.tests.test_units module", "armi.utils.tests.test_utils module", "armi.utils.textProcessors module", "armi.utils.triangle module", "armi.utils.units module", "armi", "<span class=\"section-number\">4. </span>Documenting ARMI", "<span class=\"section-number\">3. </span>Entry Points", "<span class=\"section-number\">8. </span>First Time Contributors Guide", "<span class=\"section-number\">1. </span>Framework Architecture", "Developer Docs", "<span class=\"section-number\">2. </span>Making ARMI-based Apps", "<span class=\"section-number\">5. </span>Parallel Code in ARMI", "<span class=\"section-number\">6. </span>Profiling ARMI", "<span class=\"section-number\">7. </span>Reports in ARMI", "<span class=\"section-number\">9. </span>Standards and Practices for Coding", "<span class=\"section-number\">10. </span>Tooling and Infrastructure", "Gallery", "Analysis", "Applications", "Framework", "Analysis", "Write MCNP Material Cards", "Hex block to RZ geometry conversion", "Hex reactor to RZ geometry conversion", "Computation times", "Applications", "Framework", "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion", "Plot a chart of the nuclides.", "Computing Reaction Rates on a Block.", "&lt;no title&gt;", "Make a hex grid.", "Make a Cartesian grid.", "Make a Theta-R-Z grid.", "Plotting Multi-group XS from ISOTXS.", "Plotting a multi-group scatter matrix.", "Listing of Material Library.", "Build Reactor Inputs Programmatically.", "Plot a reactor facemap.", "Transmutation and decay reactions.", "Computation times", "Gallery", "Glossary", "ARMI", "Installation", "ARMI v0.1 Release Notes", "ARMI v0.2 Release Notes", "ARMI v0.3 Release Notes", "ARMI v0.4 Release Notes", "Release Notes", "<span class=\"section-number\">5. </span>Hands-on at the ARMI Terminal", "Tutorials", "<span class=\"section-number\">6. </span>Making your first ARMI-based App", "<span class=\"section-number\">2. </span>The ARMI Material Library", "<span class=\"section-number\">1. </span>The ARMI Nuclide and Element Packages", "<span class=\"section-number\">7. </span>Parameter sweeps", "<span class=\"section-number\">3. </span>Building input files for a fast reactor", "<span class=\"section-number\">4. </span>Building input files for a thermal reactor", "Gallery", "<span class=\"section-number\">11. </span>Accessing Entry Points", "<span class=\"section-number\">7. </span>Assembly Parameters", "<span class=\"section-number\">8. </span>Block Parameters", "<span class=\"section-number\">6. </span>Component Parameters", "<span class=\"section-number\">5. </span>Core Parameters", "User Docs", "<span class=\"section-number\">1. </span>Inputs", "<span class=\"section-number\">3. </span>Accessing Data in ARMI", "<span class=\"section-number\">2. </span>Outputs", "<span class=\"section-number\">9. </span>Physics Coupling", "<span class=\"section-number\">10. </span>Radial and Axial Expansion and Contraction", "<span class=\"section-number\">4. </span>Reactor Parameters", "Installation"], "terms": {"welcom": [0, 29, 311, 484], "advanc": [0, 3, 8, 93, 239, 240, 310, 311, 372, 407, 480, 481, 482, 488, 493, 509], "reactor": [0, 2, 3, 5, 7, 10, 11, 15, 16, 20, 21, 22, 26, 27, 29, 32, 33, 35, 39, 42, 44, 45, 46, 47, 48, 49, 59, 61, 62, 71, 79, 80, 83, 86, 90, 91, 93, 102, 105, 152, 156, 161, 165, 166, 167, 170, 176, 177, 188, 193, 202, 204, 205, 212, 213, 215, 216, 217, 219, 220, 221, 225, 226, 227, 228, 239, 244, 246, 248, 251, 253, 255, 262, 265, 277, 282, 373, 380, 385, 387, 389, 390, 391, 393, 396, 397, 398, 401, 403, 405, 407, 415, 442, 445, 447, 448, 449, 451, 452, 454, 457, 458, 459, 460, 462, 464, 465, 467, 468, 469, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 486, 489, 490, 491, 496, 498, 499, 500, 501, 502, 503, 504, 509], "model": [0, 3, 5, 7, 10, 11, 22, 35, 47, 48, 57, 61, 79, 81, 82, 83, 84, 88, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143, 160, 161, 164, 175, 204, 212, 213, 215, 227, 236, 237, 239, 240, 243, 244, 245, 248, 249, 266, 277, 282, 283, 287, 288, 289, 290, 291, 292, 293, 298, 304, 306, 307, 310, 311, 316, 317, 321, 330, 332, 336, 343, 345, 346, 347, 349, 360, 362, 366, 375, 391, 397, 447, 448, 455, 457, 458, 460, 464, 467, 477, 479, 480, 481, 482, 483, 484, 486, 489, 490, 491, 493, 494, 495, 496, 499, 501, 503, 505, 509], "interfac": [0, 1, 3, 4, 5, 7, 8, 10, 16, 20, 21, 22, 28, 33, 35, 48, 59, 152, 156, 166, 167, 175, 176, 179, 180, 190, 204, 205, 206, 212, 215, 216, 219, 220, 225, 230, 237, 239, 244, 248, 251, 253, 254, 255, 258, 260, 267, 269, 277, 282, 284, 310, 330, 333, 338, 343, 369, 371, 372, 383, 387, 390, 393, 396, 405, 408, 415, 416, 442, 443, 444, 448, 449, 452, 453, 468, 475, 476, 480, 481, 482, 483, 484, 486, 488, 493, 503, 505, 509], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 20, 21, 22, 24, 26, 27, 28, 29, 32, 33, 34, 35, 38, 40, 43, 44, 45, 46, 48, 50, 51, 52, 56, 57, 59, 61, 62, 63, 66, 67, 70, 71, 75, 77, 78, 79, 80, 81, 83, 90, 91, 94, 95, 102, 104, 105, 106, 109, 114, 115, 116, 117, 120, 126, 134, 135, 136, 138, 139, 140, 146, 152, 153, 154, 155, 156, 161, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 188, 189, 191, 192, 193, 196, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 225, 228, 236, 237, 239, 240, 241, 242, 244, 246, 248, 251, 253, 255, 258, 260, 262, 265, 266, 273, 281, 282, 284, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 302, 304, 305, 307, 309, 310, 311, 314, 315, 316, 317, 318, 321, 323, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 359, 360, 361, 362, 364, 365, 366, 367, 368, 370, 372, 373, 374, 375, 380, 381, 383, 387, 389, 390, 391, 393, 394, 396, 397, 398, 399, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 421, 433, 434, 435, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 467, 468, 469, 470, 471, 472, 474, 475, 477, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509], "modul": [0, 2, 3, 13, 23, 30, 34, 38, 41, 47, 49, 53, 58, 61, 74, 80, 119, 145, 149, 153, 157, 165, 166, 181, 197, 204, 210, 213, 216, 223, 227, 232, 237, 243, 247, 250, 252, 254, 257, 264, 272, 274, 279, 283, 288, 295, 304, 311, 312, 319, 322, 334, 343, 352, 366, 368, 376, 380, 397, 417, 442, 444, 446, 448, 449, 452, 480, 481, 483, 484, 490, 492, 493, 494, 503, 505], "initi": [0, 1, 3, 7, 48, 60, 62, 75, 79, 152, 154, 163, 167, 168, 171, 176, 202, 205, 217, 244, 254, 262, 282, 287, 289, 290, 291, 292, 293, 294, 302, 307, 310, 314, 315, 323, 329, 330, 343, 346, 355, 373, 375, 393, 399, 401, 402, 414, 416, 417, 425, 432, 446, 465, 468, 475, 476, 480, 481, 483, 484, 486, 489, 499, 500, 503], "platform": [0, 56, 481, 482, 484, 509], "The": [0, 1, 2, 3, 4, 5, 7, 9, 10, 15, 16, 17, 20, 21, 22, 26, 27, 28, 29, 33, 38, 40, 43, 45, 46, 48, 51, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 82, 83, 89, 90, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 109, 113, 117, 137, 138, 140, 143, 146, 152, 153, 154, 155, 156, 160, 163, 164, 166, 167, 168, 170, 171, 173, 174, 175, 176, 179, 180, 189, 191, 198, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 215, 216, 218, 219, 220, 221, 225, 227, 236, 237, 239, 240, 241, 243, 244, 245, 246, 251, 255, 260, 263, 266, 281, 282, 283, 284, 287, 288, 289, 290, 292, 293, 294, 304, 305, 306, 307, 309, 310, 314, 316, 317, 324, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 354, 355, 356, 361, 362, 364, 365, 366, 367, 372, 373, 374, 375, 379, 380, 387, 390, 394, 396, 397, 398, 401, 407, 408, 409, 412, 413, 414, 415, 416, 439, 441, 443, 444, 445, 447, 448, 449, 450, 452, 453, 460, 475, 477, 480, 483, 484, 485, 488, 489, 490, 493, 494, 497, 498, 499, 500, 501, 502, 504, 507, 508], "bootstrap": 0, "process": [0, 3, 4, 5, 22, 24, 40, 46, 48, 78, 105, 152, 176, 205, 215, 216, 219, 220, 225, 227, 228, 237, 240, 251, 255, 282, 310, 323, 329, 330, 345, 367, 374, 389, 390, 391, 400, 416, 439, 444, 445, 446, 449, 452, 453, 480, 481, 483, 484, 486, 487, 488, 489, 490, 501, 503, 505, 506], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 20, 21, 22, 24, 26, 27, 28, 29, 32, 33, 34, 35, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 109, 112, 113, 114, 115, 116, 117, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 146, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 189, 191, 196, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 225, 227, 228, 236, 237, 239, 240, 241, 242, 244, 246, 249, 251, 253, 255, 258, 259, 260, 262, 265, 266, 273, 277, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 358, 360, 361, 362, 364, 365, 367, 372, 373, 374, 375, 377, 378, 379, 380, 381, 384, 387, 390, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 421, 422, 425, 427, 430, 431, 433, 434, 435, 436, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 459, 460, 465, 467, 468, 469, 470, 471, 474, 475, 477, 480, 481, 482, 483, 484, 486, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 503, 505, 506, 507, 508, 509], "broken": [0, 152, 287, 339, 408, 416, 452, 483, 486, 490, 503], "sever": [0, 78, 166, 220, 255, 282, 329, 343, 416, 443, 446, 452, 472, 481, 484, 486, 490, 492, 503], "phase": [0, 112, 141, 154, 163, 249, 503], "import": [0, 1, 3, 5, 7, 34, 45, 77, 78, 80, 153, 155, 156, 166, 168, 174, 176, 213, 216, 220, 238, 239, 244, 255, 282, 307, 317, 329, 330, 332, 341, 343, 354, 365, 378, 397, 400, 403, 404, 412, 413, 416, 439, 442, 444, 447, 448, 449, 450, 451, 453, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 488, 490, 491, 492, 493, 494, 495, 503, 505, 509], "fundament": [0, 47, 61, 80, 81, 121, 142, 153, 154, 156, 310, 346, 407, 494], "depend": [0, 20, 27, 32, 33, 38, 47, 48, 56, 57, 59, 79, 80, 105, 152, 153, 166, 169, 170, 175, 205, 206, 207, 225, 236, 239, 240, 244, 282, 284, 287, 292, 293, 307, 309, 310, 317, 329, 330, 336, 338, 339, 346, 355, 361, 378, 380, 416, 439, 443, 445, 446, 447, 451, 474, 477, 481, 482, 483, 484, 486, 490, 491, 493, 501, 503, 504, 509], "python": [0, 1, 22, 38, 40, 67, 70, 71, 79, 80, 166, 167, 213, 220, 282, 287, 340, 343, 346, 373, 390, 397, 405, 408, 411, 412, 416, 423, 434, 439, 443, 444, 445, 446, 448, 449, 450, 452, 453, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 483, 484, 486, 488, 493, 494, 495, 503, 505], "librari": [0, 22, 38, 155, 156, 163, 164, 168, 170, 172, 174, 176, 177, 183, 189, 192, 196, 198, 201, 202, 203, 244, 251, 255, 260, 287, 293, 300, 307, 310, 330, 365, 405, 413, 444, 445, 448, 449, 452, 453, 464, 467, 472, 473, 478, 479, 481, 483, 484, 489, 490, 495, 496, 503], "some": [0, 2, 3, 4, 5, 8, 10, 15, 20, 21, 22, 29, 32, 33, 40, 42, 45, 47, 50, 56, 57, 78, 79, 90, 105, 109, 146, 152, 153, 155, 156, 161, 166, 167, 168, 170, 173, 176, 180, 196, 200, 201, 205, 213, 214, 215, 220, 225, 226, 227, 237, 239, 240, 244, 251, 263, 277, 282, 287, 288, 291, 292, 293, 303, 307, 310, 311, 314, 315, 328, 329, 330, 331, 332, 337, 338, 339, 341, 343, 345, 346, 347, 350, 353, 354, 361, 364, 365, 366, 367, 373, 374, 378, 380, 389, 391, 393, 398, 405, 408, 409, 412, 413, 415, 416, 418, 425, 427, 431, 434, 438, 439, 443, 445, 446, 447, 449, 451, 452, 453, 454, 460, 474, 477, 479, 481, 482, 483, 484, 488, 490, 493, 494, 495, 496, 498, 500, 502, 505, 509], "third": [0, 33, 98, 168, 179, 212, 251, 282, 284, 292, 310, 317, 325, 330, 338, 361, 409, 416, 440, 445, 452, 475, 481, 494, 503], "parti": [0, 33, 205, 445, 452, 481], "lib": [0, 84, 168, 172, 174, 177, 201, 202, 215, 251, 255, 258, 260, 283, 310, 330, 397, 414, 452, 467, 472, 473], "investig": [0, 491], "environ": [0, 77, 78, 367, 373, 390, 423, 443, 452, 481, 483, 494], "check": [0, 1, 4, 32, 37, 43, 48, 56, 62, 75, 79, 105, 126, 166, 191, 199, 200, 212, 215, 220, 237, 239, 240, 251, 253, 265, 270, 282, 287, 298, 307, 310, 315, 316, 318, 323, 325, 328, 330, 332, 333, 339, 342, 345, 353, 354, 355, 373, 375, 377, 380, 381, 388, 393, 397, 408, 409, 410, 412, 414, 418, 422, 425, 431, 438, 445, 446, 448, 451, 452, 480, 482, 483, 484, 486, 488, 489, 493, 494, 503, 509], "version": [0, 1, 2, 4, 5, 7, 8, 10, 15, 29, 45, 50, 61, 66, 69, 105, 145, 163, 166, 176, 212, 240, 281, 282, 283, 293, 310, 330, 343, 346, 366, 372, 373, 374, 375, 405, 408, 409, 413, 438, 446, 447, 481, 482, 483, 484, 486, 488, 490, 493, 494, 495, 503, 505, 509], "code": [0, 1, 3, 4, 5, 7, 8, 20, 21, 22, 28, 33, 49, 61, 67, 69, 79, 80, 145, 152, 153, 155, 156, 161, 163, 166, 167, 168, 169, 170, 174, 177, 201, 204, 205, 213, 215, 216, 219, 220, 222, 237, 239, 244, 253, 255, 256, 271, 282, 288, 290, 291, 293, 311, 321, 328, 329, 332, 333, 338, 339, 341, 346, 351, 365, 367, 387, 393, 396, 398, 399, 402, 405, 409, 419, 431, 439, 443, 444, 445, 446, 447, 448, 450, 451, 453, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 483, 484, 486, 490, 492, 494, 499, 503, 505], "mpi": [0, 2, 3, 5, 22, 28, 79, 130, 205, 206, 219, 220, 240, 260, 282, 310, 345, 389, 390, 391, 397, 403, 412, 423, 430, 447, 480, 481, 482, 484, 503, 509], "situat": [0, 10, 291, 304, 310, 332, 333, 340, 365, 375, 394, 416, 481, 490, 503], "tty": 0, "gui": [0, 61, 66, 67, 68, 78, 282, 336, 367, 373, 375, 409, 444, 446, 480, 481, 483, 484, 490, 494, 504], "interact": [0, 3, 5, 7, 8, 10, 16, 20, 21, 64, 66, 67, 78, 79, 156, 168, 203, 204, 205, 212, 227, 237, 239, 253, 255, 258, 282, 345, 363, 390, 443, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 499, 501, 503, 505, 506, 509], "set": [0, 1, 3, 4, 5, 7, 10, 11, 15, 21, 22, 26, 29, 32, 33, 37, 40, 44, 45, 46, 47, 48, 50, 51, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 83, 90, 91, 96, 97, 100, 105, 146, 148, 150, 152, 155, 156, 164, 165, 168, 172, 174, 175, 176, 177, 198, 201, 202, 204, 205, 206, 207, 208, 212, 213, 215, 216, 217, 218, 220, 227, 228, 230, 237, 239, 240, 241, 242, 244, 245, 246, 248, 251, 253, 255, 258, 262, 265, 266, 270, 271, 273, 274, 277, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 298, 300, 307, 310, 314, 315, 316, 317, 318, 320, 323, 327, 328, 329, 330, 331, 332, 333, 338, 340, 341, 343, 344, 345, 346, 349, 351, 354, 355, 356, 361, 364, 387, 390, 394, 396, 397, 400, 401, 408, 409, 410, 412, 413, 414, 415, 416, 424, 435, 438, 439, 442, 444, 446, 448, 449, 451, 452, 453, 460, 461, 465, 467, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 497, 498, 499, 501, 502, 506, 507, 509], "up": [0, 3, 4, 5, 10, 20, 22, 27, 32, 46, 48, 68, 78, 79, 80, 94, 105, 145, 147, 152, 153, 154, 155, 156, 163, 164, 166, 201, 203, 205, 213, 215, 220, 236, 239, 251, 266, 273, 284, 287, 291, 293, 302, 307, 310, 314, 317, 329, 330, 332, 336, 339, 340, 341, 345, 346, 354, 364, 375, 387, 391, 397, 398, 401, 407, 409, 413, 415, 418, 422, 427, 443, 444, 446, 449, 451, 452, 453, 477, 481, 482, 483, 484, 486, 488, 489, 490, 491, 493, 498, 499, 501, 503, 505, 509], "temp": [0, 26, 63, 75, 78, 109, 307, 314, 315, 323, 413, 484, 490, 503], "dir": [0, 63, 215, 402, 484, 503], "printout": [0, 22, 56, 251, 303, 330, 483], "tabl": [0, 2, 4, 23, 24, 25, 26, 27, 56, 62, 81, 91, 93, 98, 106, 112, 114, 117, 124, 137, 141, 154, 155, 163, 185, 220, 262, 267, 284, 318, 330, 358, 397, 407, 434, 447, 449, 493, 494, 495, 503, 504, 505], "format": [0, 1, 3, 4, 5, 15, 17, 24, 25, 29, 38, 44, 46, 47, 81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 126, 132, 133, 134, 137, 138, 141, 142, 143, 156, 166, 167, 168, 173, 174, 175, 176, 178, 179, 180, 186, 194, 195, 220, 246, 284, 289, 292, 293, 299, 300, 307, 330, 351, 359, 365, 367, 381, 397, 401, 413, 415, 421, 434, 447, 449, 451, 472, 473, 481, 483, 486, 488, 493, 495, 503], "prepar": [0, 79, 172, 212, 220, 244, 255, 310, 317, 329, 330, 397, 398, 491], "log": [0, 3, 5, 56, 205, 361, 365, 367, 380, 381, 390, 394, 400, 415, 447, 467, 472, 484, 486, 490, 493, 505], "info": [0, 20, 22, 79, 114, 137, 170, 176, 184, 191, 282, 310, 341, 343, 351, 365, 381, 397, 400, 442, 446, 453, 474, 488, 490, 493, 494, 499, 502, 503, 505], "all": [0, 1, 3, 4, 5, 7, 9, 10, 12, 20, 21, 22, 38, 45, 46, 48, 51, 52, 56, 61, 63, 67, 70, 73, 75, 78, 79, 80, 90, 105, 126, 130, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 166, 167, 168, 170, 172, 174, 175, 176, 177, 185, 189, 192, 196, 199, 201, 203, 205, 206, 207, 213, 215, 217, 219, 220, 221, 228, 237, 239, 240, 244, 246, 248, 251, 255, 256, 258, 260, 265, 282, 284, 287, 288, 291, 293, 304, 307, 310, 315, 317, 323, 325, 329, 330, 331, 332, 333, 334, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 361, 364, 365, 374, 379, 380, 381, 389, 396, 397, 398, 399, 401, 403, 404, 405, 408, 409, 410, 413, 415, 416, 422, 427, 439, 443, 445, 446, 448, 449, 451, 452, 453, 465, 474, 477, 480, 481, 482, 484, 485, 488, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 505, 508, 509], "possibl": [0, 3, 5, 7, 20, 21, 78, 79, 152, 166, 167, 205, 221, 251, 281, 282, 284, 287, 288, 289, 293, 307, 317, 330, 332, 341, 343, 345, 346, 361, 373, 375, 380, 405, 409, 410, 412, 413, 416, 439, 451, 452, 453, 477, 481, 485, 490, 494, 497, 503], "nuclid": [0, 5, 80, 83, 84, 90, 91, 103, 105, 109, 113, 132, 135, 136, 137, 138, 140, 147, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 170, 172, 174, 175, 177, 196, 198, 200, 201, 202, 203, 239, 240, 244, 246, 248, 249, 256, 287, 288, 290, 291, 293, 298, 300, 302, 307, 310, 316, 323, 325, 329, 330, 361, 401, 413, 421, 442, 464, 467, 468, 475, 476, 477, 478, 479, 480, 483, 484, 488, 489, 491, 496, 498, 499, 500, 501], "object": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 37, 44, 46, 47, 48, 49, 50, 54, 55, 56, 57, 59, 61, 67, 71, 78, 79, 80, 105, 146, 152, 153, 154, 155, 156, 163, 164, 166, 167, 168, 170, 172, 174, 176, 177, 198, 199, 201, 202, 203, 204, 205, 206, 207, 212, 215, 217, 218, 219, 220, 221, 228, 237, 240, 244, 246, 251, 253, 255, 260, 266, 270, 273, 282, 284, 287, 288, 289, 290, 291, 292, 293, 294, 298, 304, 305, 306, 307, 309, 310, 313, 314, 315, 316, 317, 318, 320, 321, 323, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 350, 351, 353, 356, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 375, 378, 380, 387, 389, 390, 391, 396, 397, 398, 399, 401, 402, 405, 408, 409, 411, 413, 414, 415, 416, 432, 439, 444, 448, 449, 451, 452, 454, 475, 479, 480, 481, 483, 484, 486, 488, 491, 493, 496, 498, 499, 500, 503, 505], "directori": [0, 3, 5, 16, 47, 48, 56, 57, 59, 63, 64, 70, 75, 77, 78, 79, 155, 159, 163, 202, 205, 215, 251, 273, 330, 361, 365, 366, 380, 402, 403, 412, 422, 439, 444, 452, 466, 481, 482, 483, 484, 488, 490, 495, 503, 505, 509], "discov": [0, 47, 48, 56, 57, 205, 225, 282, 446, 482, 493, 494, 509], "regist": [0, 1, 48, 76, 79, 281, 282, 366, 378, 393, 448, 481, 489, 503, 506], "avail": [0, 1, 3, 5, 7, 20, 61, 67, 152, 153, 155, 163, 176, 201, 203, 205, 207, 212, 215, 239, 240, 244, 248, 287, 293, 298, 310, 329, 346, 366, 378, 397, 405, 438, 443, 445, 446, 448, 449, 451, 454, 479, 481, 488, 491, 492, 494, 495, 496, 501, 503, 504, 505, 506, 508], "built": [0, 10, 61, 202, 210, 220, 228, 237, 260, 265, 277, 282, 283, 284, 287, 288, 294, 310, 316, 323, 334, 396, 443, 444, 446, 448, 452, 467, 480, 481, 488, 490, 503, 505], "plugin": [0, 1, 2, 11, 26, 33, 48, 51, 56, 59, 61, 77, 79, 80, 94, 105, 114, 136, 153, 204, 207, 213, 214, 216, 220, 225, 227, 228, 229, 232, 234, 237, 244, 245, 251, 261, 264, 270, 271, 274, 276, 279, 280, 281, 283, 287, 291, 293, 307, 311, 329, 343, 345, 346, 366, 367, 370, 375, 378, 380, 383, 392, 393, 396, 405, 442, 447, 451, 459, 468, 474, 477, 481, 483, 485, 486, 488, 489, 491, 495, 505], "custom": [0, 1, 61, 67, 80, 94, 105, 109, 152, 204, 216, 219, 220, 225, 237, 240, 246, 251, 255, 266, 281, 282, 288, 291, 293, 300, 320, 329, 365, 366, 372, 373, 374, 385, 390, 398, 401, 412, 413, 414, 416, 420, 426, 434, 439, 446, 448, 453, 475, 481, 483, 486, 488, 489, 494, 505], "ones": [0, 61, 90, 156, 164, 167, 201, 225, 239, 287, 310, 330, 398, 468, 488, 490, 503], "after": [0, 2, 9, 16, 27, 56, 73, 78, 79, 90, 105, 153, 168, 170, 176, 203, 205, 215, 220, 251, 255, 277, 282, 284, 287, 300, 307, 310, 314, 317, 328, 329, 330, 340, 341, 343, 345, 347, 354, 355, 361, 365, 367, 390, 396, 399, 405, 407, 408, 409, 413, 414, 415, 416, 446, 448, 449, 452, 453, 480, 484, 485, 486, 488, 490, 493, 499, 501, 503, 505], "input": [0, 1, 3, 5, 7, 9, 15, 20, 21, 26, 29, 33, 40, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 59, 61, 62, 64, 66, 67, 69, 70, 75, 79, 80, 90, 105, 126, 136, 145, 146, 147, 156, 160, 169, 170, 171, 174, 184, 187, 189, 200, 201, 205, 212, 215, 216, 219, 220, 225, 239, 240, 244, 251, 255, 256, 282, 284, 287, 288, 289, 290, 291, 292, 293, 294, 298, 300, 301, 304, 305, 307, 310, 311, 317, 321, 323, 329, 332, 333, 341, 342, 349, 351, 354, 355, 359, 361, 364, 366, 367, 372, 373, 380, 388, 397, 398, 400, 401, 404, 409, 410, 411, 416, 421, 427, 434, 435, 438, 441, 444, 446, 447, 454, 464, 467, 468, 476, 477, 478, 479, 481, 483, 484, 488, 489, 490, 493, 496, 498, 499, 500, 502, 504, 505], "defin": [0, 1, 3, 5, 8, 9, 11, 20, 21, 27, 33, 50, 59, 71, 79, 80, 81, 89, 103, 104, 105, 109, 111, 116, 140, 146, 154, 156, 160, 163, 164, 166, 167, 173, 174, 176, 179, 180, 198, 199, 201, 202, 205, 206, 207, 212, 216, 217, 220, 222, 224, 230, 231, 237, 239, 245, 251, 255, 263, 266, 271, 277, 278, 282, 284, 287, 288, 289, 290, 291, 292, 293, 294, 298, 301, 302, 304, 305, 307, 309, 310, 315, 316, 328, 329, 330, 332, 334, 338, 340, 341, 343, 344, 345, 346, 347, 355, 358, 359, 367, 369, 371, 373, 375, 378, 387, 390, 393, 396, 398, 405, 409, 412, 413, 415, 416, 440, 441, 446, 448, 451, 452, 453, 454, 460, 465, 467, 475, 477, 479, 480, 483, 484, 486, 488, 489, 491, 493, 496, 499, 501, 505], "potenti": [0, 22, 50, 79, 105, 134, 163, 164, 205, 215, 282, 338, 349, 374, 375, 403, 410, 445, 446, 448, 451, 453, 481, 490, 493, 498, 501, 503, 508], "configur": [0, 1, 4, 77, 78, 240, 266, 282, 317, 373, 442, 446, 448, 452, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 481, 482, 483, 484, 488, 490, 493, 495, 498, 503, 509], "from": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 20, 21, 22, 26, 27, 29, 33, 34, 35, 38, 40, 44, 45, 47, 48, 50, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 105, 109, 111, 112, 114, 115, 117, 121, 124, 126, 130, 131, 132, 133, 134, 136, 137, 138, 141, 142, 145, 146, 147, 152, 153, 154, 155, 156, 160, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 188, 191, 192, 193, 196, 198, 201, 202, 203, 204, 205, 206, 209, 212, 215, 216, 220, 221, 225, 228, 237, 239, 240, 241, 242, 244, 246, 248, 249, 251, 253, 255, 260, 265, 266, 270, 281, 282, 284, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 300, 301, 302, 304, 306, 307, 310, 311, 314, 315, 316, 317, 321, 323, 325, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 343, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 358, 360, 361, 364, 365, 366, 367, 373, 374, 375, 379, 380, 381, 387, 388, 390, 391, 396, 397, 398, 401, 402, 405, 407, 408, 409, 410, 413, 415, 416, 421, 423, 434, 439, 441, 444, 445, 446, 448, 449, 451, 452, 453, 454, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 505, 507, 509], "read": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 17, 20, 35, 48, 79, 146, 156, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 219, 220, 225, 240, 246, 253, 266, 282, 288, 289, 294, 298, 301, 307, 310, 329, 330, 340, 345, 346, 348, 351, 359, 360, 367, 374, 379, 388, 398, 409, 414, 418, 438, 439, 443, 444, 448, 449, 452, 481, 483, 484, 486, 493, 494, 503, 505], "file": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 20, 21, 24, 26, 27, 29, 33, 34, 35, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 82, 90, 120, 145, 146, 152, 153, 156, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 205, 206, 208, 215, 217, 219, 220, 225, 238, 239, 240, 241, 244, 246, 248, 249, 251, 255, 262, 265, 282, 284, 288, 289, 291, 292, 293, 294, 296, 297, 298, 301, 310, 311, 329, 330, 332, 343, 346, 349, 350, 351, 359, 361, 364, 365, 366, 367, 373, 374, 375, 377, 379, 380, 388, 394, 397, 398, 399, 400, 402, 403, 405, 410, 411, 412, 413, 415, 416, 422, 434, 439, 443, 444, 445, 446, 447, 450, 451, 453, 462, 467, 468, 472, 475, 476, 478, 481, 482, 483, 484, 486, 488, 489, 493, 497, 502, 509], "updat": [0, 2, 7, 48, 50, 59, 79, 105, 145, 147, 156, 160, 165, 166, 176, 196, 201, 203, 205, 209, 214, 215, 219, 237, 239, 244, 251, 253, 255, 258, 265, 273, 283, 284, 287, 291, 293, 304, 307, 309, 310, 314, 315, 317, 318, 323, 329, 330, 341, 343, 345, 346, 351, 354, 355, 360, 361, 367, 373, 375, 378, 380, 398, 401, 413, 447, 449, 452, 465, 481, 483, 484, 486, 487, 488, 490, 503, 506], "deplet": [0, 79, 156, 164, 213, 239, 240, 244, 248, 251, 254, 256, 267, 283, 284, 287, 291, 293, 332, 343, 346, 397, 409, 446, 468, 480, 483, 484, 488, 494, 498, 499, 503], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 230, 233, 234, 235, 237, 239, 240, 241, 244, 246, 248, 249, 251, 253, 255, 256, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 273, 277, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 446, 447, 451, 452, 453, 456, 460, 461, 463, 466, 477, 479, 481, 483, 484, 488, 489, 491, 492, 493, 494, 495, 496, 499, 501, 503, 506], "config": [0, 77, 443], "state": [0, 1, 2, 3, 5, 7, 20, 21, 39, 45, 78, 79, 81, 91, 94, 105, 114, 130, 137, 152, 156, 163, 170, 172, 176, 177, 201, 205, 209, 212, 213, 215, 219, 237, 239, 251, 253, 255, 277, 282, 287, 307, 310, 315, 317, 323, 328, 329, 330, 338, 343, 345, 346, 351, 367, 375, 391, 396, 446, 448, 449, 451, 452, 457, 464, 477, 479, 480, 481, 486, 489, 490, 494, 496, 501, 502, 503, 507], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 21, 23, 26, 27, 29, 33, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 59, 61, 67, 71, 75, 78, 79, 80, 81, 82, 83, 93, 96, 97, 98, 100, 105, 109, 114, 117, 140, 152, 154, 155, 156, 163, 167, 168, 171, 172, 173, 174, 176, 177, 178, 179, 180, 184, 201, 202, 203, 204, 205, 212, 213, 217, 220, 221, 227, 230, 236, 237, 239, 240, 246, 251, 255, 260, 262, 274, 277, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 323, 328, 329, 330, 331, 332, 336, 338, 339, 341, 342, 348, 349, 350, 351, 354, 355, 356, 360, 361, 364, 366, 367, 372, 373, 374, 375, 380, 387, 390, 391, 393, 396, 397, 398, 399, 401, 402, 403, 405, 407, 408, 409, 412, 413, 414, 415, 416, 434, 439, 440, 441, 447, 448, 449, 475, 476, 480, 481, 483, 484, 485, 486, 488, 489, 494, 502, 503, 504, 505, 506], "data": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 15, 17, 20, 23, 25, 27, 28, 44, 45, 46, 57, 78, 79, 81, 82, 93, 96, 97, 100, 106, 113, 117, 132, 133, 134, 138, 146, 153, 154, 155, 156, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 196, 200, 202, 203, 212, 214, 215, 219, 220, 240, 244, 246, 251, 255, 260, 277, 281, 282, 283, 284, 287, 289, 293, 294, 298, 301, 303, 305, 307, 310, 314, 315, 317, 318, 329, 330, 331, 338, 341, 343, 345, 346, 351, 354, 372, 373, 375, 380, 397, 398, 405, 413, 415, 416, 434, 435, 439, 444, 446, 447, 449, 451, 455, 457, 458, 461, 464, 465, 468, 475, 476, 479, 480, 481, 484, 486, 488, 489, 490, 493, 494, 495, 496, 498, 502, 503, 505], "possibli": [0, 3, 5, 56, 204, 304, 316, 413, 416, 480, 488, 490, 503], "entri": [0, 1, 5, 38, 40, 47, 48, 56, 61, 62, 66, 67, 68, 69, 70, 75, 76, 78, 79, 164, 220, 237, 282, 287, 290, 291, 292, 307, 310, 323, 351, 402, 408, 409, 447, 483, 489, 494, 502, 503, 505], "point": [0, 1, 3, 5, 27, 33, 38, 40, 46, 47, 48, 50, 51, 56, 57, 61, 62, 66, 67, 68, 69, 70, 75, 76, 78, 79, 109, 113, 116, 126, 132, 133, 134, 137, 138, 156, 164, 167, 170, 174, 184, 185, 203, 204, 205, 220, 237, 240, 244, 251, 281, 282, 284, 288, 290, 292, 293, 296, 299, 300, 302, 311, 315, 317, 318, 329, 330, 334, 336, 339, 340, 341, 346, 354, 356, 387, 409, 413, 416, 434, 436, 440, 447, 449, 451, 453, 460, 461, 480, 483, 488, 489, 493, 494, 495, 498, 499, 502, 503, 505], "choos": [0, 80, 146, 163, 204, 215, 293, 416, 482, 490, 494, 509], "user": [0, 1, 3, 5, 8, 20, 24, 28, 33, 40, 48, 50, 56, 57, 61, 78, 80, 90, 94, 95, 105, 114, 136, 145, 153, 163, 164, 166, 168, 174, 202, 203, 204, 205, 216, 217, 218, 220, 237, 239, 240, 244, 246, 251, 255, 266, 282, 283, 287, 289, 291, 293, 294, 298, 307, 310, 315, 330, 333, 341, 343, 361, 364, 365, 366, 367, 373, 374, 375, 379, 394, 397, 398, 400, 402, 409, 412, 434, 444, 445, 446, 448, 451, 452, 453, 477, 480, 481, 482, 484, 488, 490, 491, 495, 503, 504, 505, 506, 509], "command": [0, 20, 29, 40, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 168, 206, 219, 220, 241, 282, 367, 373, 375, 379, 399, 410, 423, 443, 444, 449, 450, 452, 480, 481, 486, 488, 490, 493, 503, 505], "If": [0, 1, 3, 5, 7, 20, 22, 28, 40, 44, 48, 50, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 105, 136, 152, 153, 155, 156, 164, 165, 167, 168, 170, 171, 201, 202, 204, 205, 206, 213, 215, 220, 221, 239, 240, 241, 244, 251, 255, 260, 281, 282, 284, 287, 288, 289, 293, 302, 304, 307, 310, 311, 314, 315, 316, 317, 323, 328, 329, 330, 331, 334, 336, 338, 339, 341, 343, 345, 346, 347, 350, 351, 354, 365, 367, 373, 374, 375, 379, 380, 397, 401, 402, 407, 408, 409, 412, 413, 415, 416, 439, 443, 446, 449, 451, 452, 453, 481, 482, 488, 490, 494, 495, 498, 499, 503, 505, 506, 509], "us": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 16, 17, 18, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 97, 98, 100, 105, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 138, 139, 140, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 174, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 215, 217, 219, 220, 221, 224, 225, 226, 228, 233, 234, 235, 236, 239, 240, 241, 242, 244, 246, 248, 249, 251, 253, 255, 256, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 280, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 314, 315, 316, 317, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 408, 409, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 444, 445, 446, 447, 448, 450, 451, 453, 454, 455, 458, 460, 461, 466, 468, 469, 475, 477, 479, 480, 482, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509], "run": [0, 1, 3, 4, 5, 7, 16, 20, 21, 22, 26, 28, 32, 33, 34, 35, 38, 40, 47, 48, 49, 56, 57, 59, 61, 62, 63, 66, 67, 69, 70, 71, 73, 75, 76, 77, 78, 79, 105, 152, 156, 163, 166, 182, 192, 198, 199, 204, 205, 206, 207, 209, 213, 215, 219, 220, 228, 237, 239, 240, 251, 253, 254, 255, 260, 265, 273, 282, 284, 287, 298, 310, 311, 316, 317, 323, 330, 343, 346, 361, 365, 366, 367, 375, 380, 389, 390, 391, 392, 397, 399, 410, 423, 431, 434, 443, 444, 445, 446, 447, 449, 450, 451, 453, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 484, 488, 489, 491, 493, 494, 495, 498, 499, 501, 502, 505, 509], "addit": [0, 1, 2, 48, 61, 67, 152, 156, 166, 168, 174, 204, 205, 220, 240, 277, 282, 287, 289, 304, 307, 310, 317, 330, 332, 340, 345, 347, 373, 445, 446, 451, 453, 481, 484, 503], "work": [0, 3, 5, 15, 16, 22, 44, 45, 46, 47, 48, 54, 56, 57, 78, 79, 90, 105, 126, 145, 152, 189, 192, 202, 215, 220, 221, 246, 251, 253, 268, 287, 292, 293, 294, 297, 298, 302, 307, 310, 314, 317, 321, 330, 332, 333, 338, 347, 351, 354, 355, 358, 361, 365, 373, 378, 380, 381, 387, 391, 394, 397, 398, 399, 402, 407, 408, 412, 414, 421, 424, 430, 434, 439, 443, 445, 446, 448, 449, 451, 453, 460, 461, 480, 481, 482, 484, 488, 490, 492, 494, 495, 497, 498, 503, 505, 508, 509], "done": [0, 3, 22, 33, 48, 101, 102, 170, 220, 236, 244, 251, 253, 281, 307, 310, 311, 323, 330, 332, 338, 345, 380, 408, 409, 410, 443, 444, 445, 446, 449, 453, 467, 481, 488, 490, 495, 503], "build": [0, 3, 26, 29, 35, 47, 54, 57, 61, 75, 80, 153, 185, 202, 203, 204, 205, 215, 216, 220, 221, 239, 244, 246, 251, 260, 270, 282, 284, 287, 291, 292, 294, 304, 314, 316, 324, 329, 330, 331, 334, 336, 339, 342, 349, 351, 353, 354, 361, 364, 373, 393, 447, 448, 453, 454, 460, 461, 464, 467, 469, 470, 471, 478, 479, 480, 481, 488, 489, 490, 491, 493, 496, 503, 504], "oper": [0, 1, 2, 3, 5, 7, 10, 16, 29, 32, 47, 48, 61, 78, 79, 152, 153, 203, 218, 219, 220, 244, 282, 287, 293, 307, 310, 317, 321, 323, 328, 330, 332, 333, 339, 341, 345, 346, 361, 375, 378, 382, 390, 397, 398, 408, 412, 414, 424, 442, 447, 448, 449, 452, 476, 480, 482, 483, 484, 486, 488, 489, 490, 494, 495, 500, 508, 509], "specif": [0, 1, 2, 3, 4, 5, 10, 20, 21, 26, 33, 42, 43, 44, 48, 50, 57, 59, 67, 79, 80, 81, 93, 96, 97, 100, 105, 109, 114, 140, 153, 154, 155, 156, 160, 167, 168, 170, 173, 175, 178, 201, 202, 203, 204, 205, 206, 212, 214, 215, 220, 226, 240, 244, 251, 255, 270, 281, 282, 284, 287, 289, 292, 293, 304, 307, 310, 311, 318, 321, 323, 329, 330, 332, 343, 345, 346, 347, 350, 354, 355, 365, 381, 387, 390, 393, 396, 398, 405, 409, 410, 415, 416, 443, 444, 445, 446, 448, 451, 452, 453, 459, 480, 481, 484, 490, 492, 493, 494, 495, 498, 503, 504, 505, 506], "calcul": [0, 3, 5, 33, 79, 83, 93, 96, 97, 100, 105, 109, 111, 135, 140, 152, 155, 156, 164, 170, 176, 198, 203, 204, 205, 212, 215, 228, 236, 237, 239, 240, 242, 244, 251, 254, 255, 258, 265, 282, 284, 287, 305, 307, 310, 311, 314, 315, 316, 317, 323, 329, 330, 341, 346, 353, 354, 355, 401, 407, 410, 416, 425, 436, 446, 460, 465, 480, 481, 483, 484, 486, 488, 490, 491, 493, 494, 495, 499, 501, 503, 506], "loop": [0, 16, 20, 152, 204, 205, 206, 209, 212, 220, 228, 330, 353, 375, 397, 413, 415, 446, 452, 477, 481, 488, 490, 493, 501, 505], "order": [0, 3, 7, 10, 57, 79, 80, 93, 96, 97, 98, 100, 106, 152, 153, 156, 164, 166, 167, 168, 170, 174, 176, 179, 205, 209, 212, 220, 221, 239, 265, 282, 284, 287, 307, 315, 316, 329, 330, 339, 345, 353, 354, 358, 360, 364, 391, 397, 408, 410, 413, 414, 416, 446, 449, 451, 460, 481, 482, 483, 484, 486, 488, 490, 494, 499, 503, 505, 509], "stack": [0, 3, 7, 10, 20, 21, 79, 205, 206, 282, 284, 287, 323, 396, 468, 475, 476, 480, 484, 488, 490, 494, 495, 503], "begin": [0, 2, 3, 5, 7, 21, 23, 26, 27, 71, 79, 166, 167, 205, 219, 237, 239, 262, 282, 284, 316, 330, 339, 397, 398, 416, 446, 451, 480, 488, 490, 491, 492, 498, 499, 501, 503, 505, 507], "over": [0, 1, 20, 29, 34, 80, 81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143, 152, 163, 170, 176, 204, 205, 209, 212, 244, 253, 255, 284, 287, 309, 310, 316, 317, 323, 329, 330, 340, 343, 345, 346, 353, 408, 410, 413, 424, 446, 465, 467, 477, 481, 482, 486, 493, 499, 503, 506, 508, 509], "upon": [0, 5, 27, 45, 62, 67, 79, 153, 156, 204, 205, 215, 218, 307, 310, 330, 332, 341, 345, 346, 354, 380, 405, 424, 444, 446, 467, 481, 503], "accord": [0, 23, 57, 64, 170, 176, 239, 287, 330, 398, 416, 446, 491, 503, 505], "design": [0, 1, 2, 11, 20, 22, 23, 26, 29, 48, 50, 56, 57, 62, 79, 84, 105, 126, 154, 156, 214, 220, 240, 282, 283, 284, 287, 288, 291, 294, 310, 311, 314, 317, 321, 327, 330, 334, 341, 354, 367, 446, 447, 448, 451, 452, 460, 480, 481, 483, 489, 491, 494, 503, 504], "until": [0, 46, 220, 282, 294, 304, 307, 316, 345, 347, 373, 407, 409, 416, 439, 449, 451, 481, 503, 506], "complet": [0, 3, 16, 56, 67, 75, 79, 153, 215, 251, 293, 294, 305, 306, 310, 316, 329, 330, 340, 354, 380, 397, 416, 445, 448, 452, 453, 468, 475, 476, 488, 490, 493, 494, 503, 505], "wrap": [0, 22, 24, 27, 105, 205, 287, 306, 307, 354, 380, 397, 438, 448, 451, 485, 488, 493, 494], "quit": [0, 1, 213, 316, 390, 481, 490, 491, 494, 503], "disablefutureconfigur": [0, 442], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 248, 249, 251, 253, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 445, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 487, 488, 490, 492, 499, 501, 503, 504, 509], "expos": [0, 7, 20, 21, 22, 28, 33, 230, 237, 239, 244, 277, 281, 282, 283, 393, 396, 448, 488], "function": [0, 1, 3, 5, 7, 10, 20, 21, 22, 28, 29, 33, 38, 43, 44, 48, 54, 57, 59, 61, 62, 67, 75, 79, 82, 90, 105, 109, 117, 126, 156, 167, 179, 205, 210, 212, 220, 221, 239, 240, 244, 246, 250, 251, 254, 255, 258, 260, 263, 282, 284, 287, 288, 293, 297, 298, 310, 327, 329, 330, 333, 339, 341, 343, 345, 346, 349, 351, 354, 355, 360, 365, 368, 372, 373, 375, 378, 380, 383, 384, 387, 389, 393, 394, 396, 397, 399, 405, 408, 409, 410, 412, 413, 415, 416, 434, 435, 438, 439, 441, 444, 446, 448, 449, 451, 452, 453, 467, 480, 481, 483, 484, 485, 486, 488, 490, 491, 493, 503, 506, 507], "ensur": [0, 16, 54, 59, 75, 76, 154, 167, 188, 193, 194, 195, 200, 212, 215, 225, 239, 244, 248, 249, 251, 253, 255, 266, 291, 297, 298, 300, 304, 318, 323, 325, 328, 329, 330, 340, 354, 355, 356, 358, 359, 361, 365, 378, 381, 387, 416, 421, 424, 443, 449, 451, 452, 453, 483, 490, 495, 503], "isn": [0, 10, 43, 79, 199, 203, 330, 332, 451, 452, 453, 490, 494], "t": [0, 2, 3, 4, 5, 7, 10, 20, 21, 35, 43, 45, 48, 56, 59, 79, 80, 82, 84, 90, 91, 93, 94, 95, 96, 97, 98, 100, 105, 106, 109, 112, 113, 117, 137, 140, 141, 143, 154, 156, 160, 163, 164, 168, 189, 199, 201, 202, 203, 205, 206, 209, 220, 236, 239, 240, 249, 251, 260, 266, 277, 282, 287, 288, 307, 310, 316, 330, 332, 333, 334, 339, 340, 343, 345, 347, 359, 361, 367, 372, 375, 380, 399, 401, 407, 408, 409, 412, 413, 414, 416, 422, 427, 431, 439, 441, 443, 444, 445, 447, 448, 449, 451, 474, 481, 482, 484, 488, 490, 491, 493, 494, 495, 498, 499, 503, 505, 507, 509], "call": [0, 3, 5, 7, 10, 16, 20, 21, 27, 32, 33, 40, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 105, 146, 152, 154, 156, 163, 205, 206, 213, 215, 217, 218, 220, 221, 225, 237, 239, 240, 241, 244, 246, 251, 255, 281, 282, 284, 287, 292, 294, 302, 307, 310, 314, 317, 325, 329, 330, 333, 335, 336, 339, 341, 342, 345, 346, 347, 354, 360, 365, 367, 373, 375, 379, 380, 381, 391, 394, 396, 397, 399, 402, 405, 408, 410, 412, 416, 431, 448, 449, 451, 452, 453, 484, 486, 488, 490, 494, 495, 497, 503, 505], "more": [0, 1, 3, 4, 5, 7, 10, 11, 20, 33, 35, 38, 44, 45, 48, 51, 56, 57, 61, 80, 94, 105, 126, 145, 156, 161, 163, 164, 166, 167, 174, 176, 203, 205, 220, 221, 228, 240, 244, 246, 251, 282, 287, 288, 292, 294, 298, 307, 309, 310, 311, 314, 316, 329, 330, 332, 333, 334, 336, 338, 340, 341, 343, 345, 364, 367, 373, 375, 380, 398, 399, 405, 407, 413, 415, 416, 434, 439, 440, 445, 446, 448, 449, 451, 452, 453, 454, 468, 469, 470, 471, 474, 477, 479, 481, 484, 486, 488, 489, 490, 491, 493, 494, 495, 496, 503, 504, 505], "than": [0, 3, 4, 5, 20, 35, 45, 49, 50, 57, 78, 105, 126, 136, 140, 155, 156, 161, 164, 167, 168, 176, 179, 202, 205, 209, 212, 215, 220, 237, 239, 240, 251, 282, 284, 287, 293, 304, 306, 307, 310, 323, 330, 332, 335, 336, 338, 339, 341, 342, 364, 367, 373, 398, 399, 405, 407, 408, 412, 413, 415, 416, 452, 453, 467, 475, 477, 481, 483, 486, 488, 490, 494, 495, 498, 499, 503, 505], "onc": [0, 5, 156, 166, 213, 266, 287, 288, 317, 321, 324, 328, 329, 348, 354, 367, 446, 448, 450, 451, 453, 488, 490, 493, 497, 498, 503], "isstablereleasevers": [0, 442], "none": [0, 3, 4, 5, 7, 8, 9, 10, 11, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 33, 40, 45, 46, 48, 50, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 152, 154, 155, 156, 163, 164, 165, 167, 184, 198, 201, 202, 203, 205, 212, 215, 219, 220, 221, 225, 228, 239, 240, 241, 244, 246, 251, 253, 255, 256, 258, 260, 282, 283, 284, 287, 288, 291, 294, 304, 305, 306, 307, 309, 310, 314, 315, 316, 317, 318, 320, 321, 323, 329, 330, 331, 334, 335, 336, 338, 339, 341, 342, 345, 346, 347, 349, 350, 353, 356, 360, 361, 364, 365, 366, 367, 372, 373, 375, 379, 380, 381, 382, 387, 390, 391, 393, 396, 397, 401, 402, 403, 408, 409, 410, 413, 415, 416, 421, 427, 434, 438, 439, 441, 443, 444, 449, 451, 470, 475, 476, 483, 488, 490, 493, 494, 503, 505], "determin": [0, 3, 5, 10, 11, 27, 29, 48, 56, 57, 79, 152, 155, 156, 164, 166, 167, 168, 198, 202, 204, 205, 207, 220, 221, 239, 240, 244, 251, 255, 282, 284, 287, 289, 293, 304, 305, 307, 310, 313, 314, 315, 316, 317, 323, 330, 343, 345, 354, 355, 366, 380, 381, 407, 409, 410, 413, 430, 439, 446, 452, 481, 484, 486, 488, 490, 499, 503], "should": [0, 1, 3, 4, 5, 7, 20, 22, 32, 44, 48, 56, 57, 59, 62, 67, 78, 79, 94, 105, 140, 145, 152, 153, 154, 156, 161, 163, 164, 166, 167, 168, 170, 176, 199, 201, 202, 203, 205, 207, 212, 215, 217, 221, 236, 237, 240, 244, 246, 251, 255, 260, 282, 284, 287, 288, 289, 291, 293, 294, 305, 306, 307, 309, 310, 314, 315, 316, 317, 318, 323, 329, 330, 332, 333, 336, 338, 340, 341, 343, 345, 346, 347, 354, 356, 360, 365, 367, 370, 373, 380, 381, 383, 389, 391, 394, 398, 399, 405, 408, 409, 410, 413, 414, 415, 418, 437, 443, 445, 446, 447, 449, 453, 481, 482, 489, 490, 493, 494, 495, 498, 499, 501, 503, 509], "consid": [0, 48, 79, 105, 155, 167, 240, 244, 246, 251, 255, 282, 284, 287, 310, 311, 314, 323, 330, 338, 340, 346, 373, 405, 445, 452, 453, 460, 461, 465, 481, 495, 503], "stabl": [0, 3, 5, 156, 338, 453, 484, 493], "releas": [0, 140, 156, 166, 170, 227, 447, 481, 503], "init": [0, 78, 163, 205, 314, 332, 356, 367, 405, 424, 442, 443, 468, 475, 476, 484, 486, 488, 495, 503], "choic": [0, 282, 293, 366, 488, 493], "fname": [0, 3, 4, 7, 20, 27, 79, 176, 203, 220, 251, 284, 287, 316, 330, 351, 367, 397, 413, 415, 439, 488, 495], "c": [0, 1, 2, 3, 4, 5, 7, 10, 11, 15, 16, 20, 21, 22, 26, 28, 29, 33, 37, 47, 48, 50, 56, 57, 59, 67, 71, 79, 80, 81, 82, 83, 84, 91, 93, 94, 96, 97, 98, 100, 105, 111, 113, 114, 117, 126, 152, 154, 156, 161, 163, 166, 172, 176, 198, 201, 202, 204, 205, 206, 209, 212, 215, 216, 219, 220, 221, 225, 228, 230, 237, 239, 240, 244, 246, 251, 253, 255, 258, 260, 262, 277, 282, 283, 287, 288, 289, 290, 291, 293, 294, 300, 302, 306, 307, 310, 314, 315, 317, 318, 320, 323, 328, 329, 330, 332, 349, 351, 352, 356, 361, 367, 372, 374, 375, 382, 387, 390, 393, 396, 397, 402, 409, 441, 444, 449, 451, 452, 461, 465, 466, 467, 475, 483, 488, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 503, 505], "scan": [0, 22, 366, 380, 439], "load": [0, 1, 2, 3, 5, 7, 11, 15, 16, 20, 21, 26, 29, 35, 48, 56, 66, 68, 90, 105, 126, 153, 154, 156, 166, 201, 205, 209, 212, 219, 220, 225, 228, 237, 240, 246, 248, 249, 251, 270, 280, 282, 283, 284, 287, 288, 294, 296, 298, 302, 323, 326, 328, 330, 349, 351, 355, 359, 361, 362, 366, 367, 374, 388, 389, 396, 398, 408, 446, 448, 449, 452, 459, 476, 477, 483, 484, 486, 489, 490, 493, 494, 495, 501, 503, 504], "one": [0, 1, 3, 4, 5, 7, 9, 10, 16, 20, 21, 22, 27, 28, 33, 44, 45, 47, 48, 56, 57, 59, 61, 73, 77, 78, 79, 105, 145, 146, 152, 154, 161, 163, 164, 166, 170, 173, 176, 191, 201, 202, 205, 206, 212, 216, 219, 220, 221, 225, 239, 240, 244, 246, 251, 253, 255, 260, 282, 287, 302, 304, 305, 306, 307, 309, 310, 311, 316, 317, 324, 329, 330, 334, 335, 336, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 354, 361, 364, 365, 366, 367, 373, 374, 375, 380, 381, 387, 390, 396, 397, 398, 405, 408, 409, 412, 413, 415, 416, 418, 427, 443, 446, 449, 451, 452, 453, 459, 477, 481, 482, 484, 488, 489, 490, 494, 495, 500, 503, 505, 506, 507, 509], "int": [0, 3, 4, 5, 7, 10, 20, 27, 48, 51, 56, 57, 61, 66, 67, 75, 78, 79, 96, 97, 100, 154, 155, 156, 167, 170, 176, 205, 220, 221, 236, 239, 240, 251, 255, 282, 284, 290, 291, 310, 316, 330, 334, 335, 336, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 366, 397, 401, 405, 407, 408, 409, 413, 415, 425, 441, 505], "option": [0, 3, 4, 5, 6, 7, 8, 10, 16, 20, 21, 22, 27, 28, 33, 38, 40, 45, 46, 48, 50, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 96, 97, 100, 105, 114, 137, 138, 139, 140, 152, 154, 155, 156, 163, 164, 167, 168, 171, 176, 201, 202, 205, 212, 215, 217, 219, 220, 221, 225, 228, 236, 237, 239, 240, 241, 244, 246, 251, 253, 255, 260, 266, 282, 284, 287, 288, 289, 291, 293, 294, 304, 307, 309, 310, 314, 316, 317, 321, 323, 329, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 342, 345, 346, 349, 350, 356, 360, 361, 364, 365, 366, 367, 373, 374, 379, 380, 387, 390, 391, 393, 396, 397, 399, 401, 402, 403, 408, 409, 413, 415, 416, 438, 439, 444, 446, 448, 449, 451, 453, 481, 483, 484, 488, 490, 492, 493, 494, 495, 503, 504, 506], "automat": [0, 57, 79, 156, 163, 237, 240, 244, 287, 310, 330, 346, 347, 372, 373, 405, 416, 452, 460, 461, 464, 478, 479, 481, 482, 488, 491, 494, 496, 503, 509], "item": [0, 22, 23, 27, 56, 57, 120, 153, 163, 164, 167, 220, 243, 246, 284, 289, 290, 310, 334, 338, 341, 343, 345, 346, 363, 364, 366, 367, 397, 398, 399, 407, 408, 409, 415, 416, 443, 451, 452, 459, 466, 470, 474, 475, 482, 488, 492, 509], "out": [0, 3, 4, 5, 8, 10, 16, 20, 22, 24, 29, 33, 44, 46, 48, 49, 56, 57, 79, 105, 154, 156, 161, 166, 168, 189, 201, 202, 203, 205, 220, 221, 225, 227, 239, 244, 282, 287, 288, 306, 307, 309, 310, 317, 329, 330, 332, 336, 343, 351, 367, 374, 394, 396, 398, 399, 401, 415, 416, 427, 434, 439, 445, 446, 447, 448, 449, 453, 459, 465, 481, 483, 484, 488, 490, 493, 494, 495, 498, 499, 503, 504, 505, 506], "menu": [0, 503], "would": [0, 1, 2, 3, 5, 10, 20, 32, 46, 57, 62, 67, 78, 79, 105, 152, 156, 163, 166, 170, 220, 240, 244, 246, 282, 284, 287, 307, 310, 316, 330, 332, 333, 335, 338, 341, 343, 345, 346, 347, 361, 364, 373, 375, 390, 397, 398, 403, 405, 409, 415, 416, 439, 446, 449, 451, 452, 459, 468, 477, 480, 483, 484, 488, 490, 491, 493, 494, 495, 503, 506], "produc": [0, 1, 4, 38, 40, 46, 48, 57, 62, 67, 83, 86, 105, 117, 130, 170, 175, 176, 192, 198, 199, 201, 205, 239, 240, 246, 282, 287, 292, 323, 330, 333, 335, 341, 342, 345, 374, 399, 400, 410, 413, 415, 416, 431, 450, 480, 481, 483, 490, 493, 499, 501, 503, 505, 508], "exist": [0, 3, 5, 6, 7, 38, 45, 47, 48, 56, 61, 64, 66, 70, 78, 79, 80, 153, 154, 156, 158, 163, 164, 171, 201, 202, 203, 205, 208, 244, 251, 255, 260, 265, 266, 268, 282, 284, 287, 290, 294, 307, 310, 317, 325, 329, 330, 343, 345, 346, 351, 365, 367, 375, 400, 402, 405, 410, 412, 415, 422, 430, 444, 446, 448, 449, 451, 452, 453, 472, 480, 481, 482, 483, 490, 492, 499, 501, 503, 505, 509], "yaml": [0, 15, 47, 48, 70, 75, 160, 164, 225, 244, 266, 282, 288, 289, 290, 291, 292, 294, 298, 323, 333, 351, 359, 361, 366, 367, 373, 374, 379, 388, 439, 444, 452, 468, 477, 483, 484, 488, 490, 493, 494, 495, 497, 502], "str": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 16, 20, 21, 22, 23, 28, 29, 33, 40, 44, 45, 46, 48, 50, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 105, 154, 155, 156, 163, 164, 167, 169, 171, 173, 175, 176, 178, 179, 180, 201, 202, 205, 212, 215, 219, 220, 225, 239, 240, 241, 244, 246, 251, 255, 260, 282, 283, 284, 287, 288, 290, 292, 293, 302, 304, 307, 310, 316, 317, 318, 323, 329, 330, 333, 334, 336, 338, 343, 345, 346, 351, 355, 361, 364, 365, 366, 367, 372, 373, 374, 375, 379, 380, 387, 390, 396, 397, 398, 399, 401, 402, 403, 405, 409, 412, 413, 414, 415, 416, 439, 441, 451, 459, 486], "path": [0, 1, 3, 4, 5, 8, 16, 27, 44, 47, 48, 56, 57, 59, 75, 77, 78, 79, 80, 146, 147, 148, 173, 178, 179, 180, 202, 215, 220, 240, 246, 251, 273, 287, 292, 351, 354, 361, 366, 367, 374, 375, 380, 397, 399, 400, 402, 410, 412, 422, 439, 443, 444, 452, 475, 477, 482, 483, 484, 485, 488, 490, 503, 509], "my_cas": 0, "suppli": [0, 3, 20, 48, 51, 57, 64, 79, 105, 152, 203, 288, 310, 345, 351, 410, 413, 416, 434, 481, 503], "superced": [0, 453], "other": [0, 3, 4, 5, 7, 9, 20, 21, 22, 28, 32, 33, 38, 44, 48, 50, 56, 57, 61, 67, 73, 77, 78, 79, 105, 136, 152, 153, 163, 164, 166, 168, 170, 174, 184, 185, 196, 201, 202, 203, 205, 209, 215, 220, 227, 239, 240, 244, 249, 251, 258, 260, 282, 287, 288, 292, 294, 304, 305, 306, 307, 310, 311, 314, 315, 316, 317, 330, 334, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 354, 361, 367, 372, 380, 396, 397, 398, 405, 408, 409, 413, 416, 430, 444, 446, 448, 449, 451, 452, 453, 480, 481, 482, 483, 488, 490, 491, 492, 493, 494, 495, 500, 503, 504, 505, 506, 509], "case": [0, 2, 3, 5, 7, 8, 10, 15, 26, 29, 33, 46, 61, 62, 64, 65, 66, 72, 73, 78, 79, 80, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 145, 152, 153, 154, 156, 161, 163, 164, 166, 170, 174, 204, 205, 215, 219, 220, 225, 227, 237, 240, 251, 253, 255, 262, 265, 266, 273, 280, 282, 287, 289, 293, 306, 307, 310, 311, 317, 321, 323, 329, 330, 332, 336, 338, 343, 346, 359, 361, 365, 367, 373, 377, 388, 389, 394, 397, 398, 409, 410, 412, 415, 416, 427, 434, 442, 444, 446, 451, 452, 453, 454, 459, 460, 461, 468, 475, 476, 479, 480, 482, 483, 484, 486, 488, 490, 491, 493, 495, 496, 498, 501, 505, 507, 509], "method": [0, 1, 3, 4, 5, 14, 15, 16, 17, 18, 20, 22, 24, 31, 32, 35, 36, 37, 42, 43, 48, 50, 54, 55, 56, 57, 59, 60, 67, 75, 76, 79, 83, 90, 103, 105, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 146, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 166, 167, 172, 174, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 205, 206, 209, 211, 212, 215, 217, 220, 224, 225, 226, 233, 234, 235, 236, 239, 240, 245, 246, 248, 249, 251, 253, 256, 258, 259, 260, 263, 265, 266, 267, 268, 269, 270, 273, 280, 282, 284, 287, 288, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 309, 310, 314, 316, 317, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 341, 343, 345, 346, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 405, 407, 408, 409, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 444, 446, 447, 448, 449, 451, 453, 469, 480, 481, 482, 484, 486, 488, 490, 503, 505, 506, 509], "directli": [0, 3, 4, 5, 20, 46, 78, 80, 105, 156, 164, 173, 178, 199, 244, 282, 287, 289, 292, 304, 307, 310, 313, 330, 335, 336, 339, 341, 342, 347, 373, 375, 380, 451, 467, 475, 477, 481, 484, 490, 493, 495, 503, 505], "exampl": [0, 1, 3, 5, 9, 10, 20, 27, 47, 50, 56, 57, 61, 77, 79, 80, 105, 146, 152, 153, 154, 155, 156, 161, 163, 164, 165, 166, 168, 173, 174, 175, 176, 178, 179, 180, 201, 202, 205, 217, 220, 221, 239, 240, 246, 251, 282, 284, 287, 288, 289, 291, 292, 293, 294, 307, 310, 311, 316, 317, 329, 330, 331, 332, 334, 336, 340, 341, 342, 345, 346, 347, 354, 360, 364, 372, 373, 380, 393, 397, 399, 405, 408, 409, 410, 413, 414, 416, 434, 435, 439, 443, 444, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 488, 490, 491, 492, 493, 494, 495, 496, 498, 499, 501, 505, 506], "o": [0, 3, 22, 29, 32, 79, 109, 111, 138, 147, 152, 154, 166, 215, 246, 251, 258, 287, 293, 310, 317, 346, 361, 375, 380, 402, 412, 449, 450, 452, 461, 468, 475, 477, 484, 488, 491, 495, 499, 503, 504], "getdefaultplugin": [0, 442], "list": [0, 1, 3, 5, 9, 10, 11, 20, 22, 27, 33, 34, 35, 40, 45, 48, 50, 56, 57, 60, 61, 67, 71, 79, 80, 96, 97, 100, 105, 152, 153, 155, 156, 164, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 196, 198, 201, 202, 205, 212, 215, 219, 220, 221, 239, 240, 244, 246, 251, 255, 282, 284, 287, 289, 290, 291, 292, 293, 304, 307, 310, 313, 314, 315, 316, 318, 323, 329, 330, 332, 333, 335, 338, 339, 340, 342, 345, 346, 350, 351, 356, 360, 364, 366, 367, 368, 370, 373, 378, 380, 381, 387, 391, 397, 398, 401, 402, 404, 405, 408, 409, 410, 412, 413, 415, 416, 421, 434, 439, 443, 446, 449, 451, 453, 464, 465, 478, 479, 480, 483, 484, 488, 492, 494, 495, 496, 498, 499, 500, 501, 503, 505, 508], "type": [0, 3, 4, 5, 8, 9, 10, 15, 16, 20, 26, 27, 29, 42, 44, 48, 50, 56, 57, 67, 71, 75, 78, 79, 80, 81, 82, 83, 85, 93, 95, 96, 97, 98, 99, 100, 103, 105, 113, 114, 117, 126, 137, 138, 140, 143, 152, 154, 155, 156, 160, 161, 164, 167, 168, 175, 179, 196, 201, 202, 203, 204, 205, 207, 220, 221, 225, 236, 237, 239, 240, 246, 251, 253, 255, 282, 283, 284, 287, 288, 289, 292, 293, 294, 296, 299, 300, 302, 304, 307, 310, 311, 314, 316, 317, 321, 323, 325, 327, 329, 330, 332, 333, 335, 338, 339, 341, 342, 343, 345, 346, 347, 349, 350, 356, 361, 364, 366, 367, 373, 375, 378, 383, 393, 397, 398, 401, 405, 407, 408, 409, 411, 412, 413, 414, 415, 416, 439, 441, 444, 445, 446, 448, 449, 451, 452, 460, 467, 477, 481, 482, 483, 484, 486, 488, 490, 492, 494, 495, 498, 499, 500, 505, 507, 509], "armiplugin": [0, 1, 2, 11, 59, 61, 216, 230, 237, 271, 277, 282, 283, 378, 383, 393, 442, 448, 490, 503], "return": [0, 1, 3, 4, 5, 7, 8, 9, 10, 16, 20, 25, 26, 27, 29, 32, 33, 44, 48, 56, 57, 61, 67, 71, 75, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 93, 94, 96, 97, 98, 100, 104, 105, 106, 109, 112, 113, 114, 115, 117, 138, 140, 141, 142, 143, 152, 154, 155, 156, 161, 163, 165, 167, 168, 170, 172, 174, 176, 177, 179, 183, 198, 200, 201, 202, 203, 204, 205, 212, 218, 220, 221, 229, 236, 237, 239, 240, 242, 244, 246, 251, 253, 255, 261, 276, 282, 284, 287, 292, 293, 294, 304, 305, 306, 307, 308, 310, 314, 315, 316, 323, 324, 328, 329, 330, 333, 335, 336, 338, 339, 340, 341, 342, 345, 346, 349, 350, 351, 354, 356, 358, 360, 361, 364, 366, 367, 370, 372, 373, 374, 375, 380, 396, 397, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 415, 416, 422, 425, 439, 440, 441, 448, 449, 451, 452, 467, 475, 477, 484, 488, 490, 493, 494, 503, 507], "contain": [0, 1, 3, 5, 10, 17, 22, 27, 38, 44, 46, 48, 56, 57, 78, 79, 93, 96, 97, 100, 105, 152, 153, 156, 160, 161, 163, 164, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 196, 199, 201, 202, 203, 205, 209, 213, 220, 237, 239, 240, 242, 244, 246, 248, 251, 256, 260, 268, 282, 283, 284, 287, 289, 290, 291, 292, 294, 304, 305, 307, 310, 311, 314, 315, 317, 323, 324, 329, 330, 331, 332, 333, 334, 338, 343, 346, 347, 349, 351, 354, 364, 367, 368, 370, 372, 374, 375, 380, 381, 393, 397, 398, 400, 401, 405, 407, 408, 409, 411, 412, 414, 415, 416, 435, 439, 441, 446, 448, 449, 450, 451, 453, 455, 456, 458, 463, 467, 479, 480, 481, 482, 488, 490, 493, 495, 496, 498, 499, 503, 504, 505, 509], "default": [0, 1, 3, 4, 5, 12, 20, 26, 27, 29, 33, 45, 47, 48, 50, 57, 61, 66, 67, 75, 79, 80, 83, 85, 90, 93, 105, 126, 154, 156, 164, 174, 201, 202, 205, 212, 215, 220, 221, 236, 237, 240, 251, 253, 255, 266, 282, 284, 287, 288, 292, 293, 294, 310, 314, 329, 330, 332, 341, 343, 344, 345, 346, 350, 355, 361, 364, 365, 366, 367, 373, 374, 375, 378, 379, 383, 393, 397, 402, 409, 413, 416, 434, 439, 443, 444, 448, 451, 453, 482, 483, 484, 486, 488, 490, 493, 495, 498, 503, 506, 509], "framework": [0, 1, 77, 79, 80, 153, 154, 156, 161, 204, 205, 213, 220, 237, 240, 244, 282, 332, 347, 366, 368, 370, 380, 383, 403, 445, 447, 448, 455, 458, 459, 468, 481, 482, 484, 488, 490, 491, 493, 503, 505, 509], "an": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 40, 42, 43, 44, 46, 47, 48, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 84, 92, 94, 105, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 140, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 204, 205, 209, 211, 212, 213, 215, 217, 218, 219, 220, 221, 224, 225, 226, 233, 234, 235, 237, 238, 239, 240, 241, 244, 246, 248, 249, 251, 253, 255, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 273, 280, 282, 284, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 311, 313, 314, 316, 317, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 345, 346, 347, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 373, 374, 375, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 444, 446, 447, 448, 449, 450, 451, 452, 453, 460, 461, 465, 467, 469, 472, 473, 480, 481, 483, 484, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 503, 505, 506, 507], "applic": [0, 1, 11, 57, 59, 61, 67, 77, 79, 145, 154, 156, 237, 240, 244, 282, 283, 329, 346, 354, 381, 398, 416, 444, 445, 447, 452, 481, 482, 484, 490, 492, 494, 499, 503, 509], "fold": 0, "": [0, 1, 3, 4, 5, 7, 10, 16, 20, 21, 22, 27, 28, 33, 35, 40, 46, 48, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 82, 86, 102, 105, 109, 114, 136, 137, 138, 140, 143, 145, 152, 153, 154, 156, 158, 161, 163, 166, 167, 168, 170, 179, 201, 202, 203, 204, 205, 209, 215, 219, 220, 236, 239, 241, 244, 251, 282, 284, 287, 288, 290, 292, 304, 307, 310, 311, 317, 330, 331, 332, 334, 336, 340, 341, 343, 345, 346, 347, 350, 353, 354, 355, 364, 365, 367, 373, 375, 379, 394, 396, 397, 398, 401, 405, 407, 408, 409, 410, 412, 413, 415, 416, 439, 440, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 458, 466, 467, 475, 479, 481, 482, 486, 488, 490, 491, 492, 494, 495, 496, 498, 499, 501, 503, 504, 505, 509], "capabl": [0, 48, 56, 171, 205, 213, 220, 225, 237, 354, 431, 439, 448, 449, 454, 479, 483, 484, 488, 494, 495, 496, 503], "its": [0, 1, 3, 5, 7, 16, 79, 105, 117, 126, 152, 153, 156, 170, 205, 221, 236, 249, 283, 284, 287, 292, 298, 304, 307, 309, 310, 316, 326, 329, 330, 343, 345, 347, 361, 366, 367, 373, 375, 381, 383, 401, 409, 413, 416, 443, 446, 448, 451, 452, 457, 464, 479, 480, 481, 482, 483, 488, 491, 496, 498, 499, 501, 502, 503, 505, 506, 509], "own": [0, 1, 16, 27, 57, 152, 163, 166, 170, 215, 220, 240, 244, 246, 251, 282, 298, 310, 311, 343, 347, 366, 373, 383, 405, 444, 452, 454, 460, 461, 474, 477, 479, 481, 483, 484, 490, 493, 496, 503, 506, 507], "getdefaultpluginmanag": [0, 442], "armipluginmanag": [0, 1, 281, 282, 442], "manag": [0, 1, 3, 7, 28, 45, 48, 50, 152, 153, 205, 209, 213, 216, 219, 220, 221, 225, 237, 239, 240, 244, 246, 265, 281, 282, 310, 314, 323, 330, 332, 346, 372, 375, 380, 383, 387, 402, 446, 447, 464, 468, 479, 480, 481, 482, 484, 489, 490, 493, 496, 499, 502, 505, 509], "when": [0, 2, 4, 5, 10, 14, 15, 16, 17, 18, 20, 22, 24, 27, 31, 32, 33, 35, 36, 37, 40, 42, 43, 45, 46, 48, 51, 54, 55, 56, 57, 59, 60, 66, 67, 71, 75, 76, 77, 78, 79, 80, 82, 83, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 141, 143, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 173, 174, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 205, 206, 211, 212, 215, 220, 221, 224, 225, 226, 233, 234, 235, 237, 239, 240, 244, 248, 249, 251, 253, 255, 258, 259, 262, 265, 266, 267, 268, 269, 270, 273, 280, 281, 282, 284, 287, 288, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 310, 314, 316, 317, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 338, 340, 341, 343, 345, 346, 347, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 373, 374, 375, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 405, 408, 409, 410, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 443, 444, 445, 446, 448, 449, 451, 452, 453, 475, 481, 482, 483, 484, 485, 486, 490, 492, 493, 494, 495, 497, 498, 499, 500, 503, 505, 506, 509], "standalon": [0, 24, 202, 481], "facil": 0, "without": [0, 3, 10, 11, 43, 46, 48, 56, 79, 90, 105, 126, 138, 145, 152, 155, 161, 202, 205, 220, 240, 251, 287, 291, 293, 298, 316, 329, 336, 341, 343, 354, 365, 375, 380, 381, 390, 408, 410, 412, 413, 416, 423, 434, 443, 451, 452, 453, 477, 480, 481, 482, 483, 484, 494, 499, 503, 509], "isconfigur": [0, 442, 488, 493], "whether": [0, 3, 5, 10, 27, 40, 48, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 105, 146, 156, 176, 200, 205, 237, 241, 244, 251, 287, 293, 294, 307, 310, 314, 336, 338, 339, 343, 346, 364, 366, 373, 374, 375, 379, 381, 393, 397, 412, 439, 451, 452, 481, 482, 484, 494, 503, 505, 509], "ha": [0, 1, 3, 5, 10, 16, 20, 22, 27, 35, 38, 48, 56, 57, 62, 78, 79, 84, 86, 92, 93, 105, 120, 126, 152, 153, 155, 161, 166, 167, 176, 179, 198, 205, 206, 208, 212, 215, 220, 221, 244, 246, 251, 253, 258, 260, 266, 281, 282, 284, 287, 289, 293, 297, 298, 300, 304, 307, 309, 310, 314, 317, 323, 324, 325, 328, 329, 330, 332, 333, 336, 339, 340, 341, 343, 344, 345, 346, 347, 349, 350, 351, 354, 355, 356, 359, 360, 361, 366, 367, 373, 375, 378, 380, 397, 402, 405, 408, 409, 412, 414, 433, 435, 439, 446, 449, 451, 453, 469, 477, 480, 481, 482, 483, 484, 487, 488, 490, 491, 493, 494, 495, 498, 499, 501, 503, 505, 509], "been": [0, 3, 4, 5, 7, 20, 45, 46, 48, 56, 79, 166, 168, 198, 201, 206, 208, 215, 219, 220, 266, 281, 282, 284, 287, 289, 300, 307, 310, 314, 330, 332, 340, 343, 344, 345, 346, 347, 350, 351, 355, 356, 360, 378, 380, 402, 404, 405, 408, 409, 414, 446, 451, 452, 477, 480, 481, 483, 490, 493, 495, 499, 503, 506], "app": [0, 11, 56, 61, 80, 213, 261, 282, 375, 383, 442, 444, 446, 447, 483, 488, 489, 493, 495, 503, 506], "getpluginmanag": [0, 442], "getpluginmanagerorfail": [0, 282, 442], "rais": [0, 3, 7, 14, 15, 16, 17, 18, 20, 21, 31, 32, 33, 35, 36, 37, 42, 43, 48, 54, 55, 56, 57, 59, 60, 75, 76, 78, 79, 80, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 152, 156, 158, 159, 160, 161, 162, 167, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 204, 205, 211, 212, 224, 225, 226, 233, 234, 235, 237, 239, 240, 248, 249, 251, 253, 255, 258, 259, 265, 266, 267, 268, 269, 270, 273, 280, 282, 284, 287, 288, 294, 296, 297, 298, 299, 300, 301, 302, 303, 315, 323, 324, 325, 326, 327, 328, 332, 339, 344, 345, 346, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 373, 375, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 402, 407, 412, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 453, 486], "error": [0, 1, 3, 5, 7, 59, 61, 62, 79, 105, 126, 152, 161, 163, 168, 199, 201, 205, 206, 215, 240, 251, 282, 294, 298, 300, 302, 310, 311, 332, 333, 339, 342, 343, 344, 347, 354, 365, 366, 373, 374, 375, 378, 383, 397, 400, 402, 408, 409, 414, 425, 439, 442, 446, 451, 452, 453, 481, 482, 484, 486, 490, 493, 494, 499, 501, 503, 505, 509], "getapp": [0, 442], "permiss": [0, 2, 3, 5, 6, 8, 412, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 481, 486, 494], "fals": [0, 3, 5, 7, 16, 20, 26, 29, 48, 56, 62, 67, 79, 105, 126, 152, 154, 156, 167, 168, 170, 172, 174, 176, 177, 201, 202, 205, 212, 215, 220, 239, 240, 244, 255, 256, 258, 260, 284, 287, 288, 292, 294, 296, 300, 302, 304, 305, 306, 307, 309, 310, 314, 315, 317, 318, 323, 329, 330, 333, 335, 336, 338, 339, 340, 341, 342, 355, 356, 364, 365, 367, 373, 375, 381, 382, 393, 397, 399, 401, 409, 411, 412, 413, 415, 416, 439, 444, 446, 484, 488, 492, 493, 495, 503], "intern": [0, 3, 4, 7, 46, 57, 93, 140, 164, 176, 201, 221, 240, 307, 330, 333, 338, 341, 345, 360, 391, 434, 446, 448, 452, 480, 485, 487, 490, 503], "those": [0, 5, 43, 46, 57, 79, 156, 168, 220, 282, 284, 287, 293, 307, 310, 311, 329, 330, 332, 333, 343, 346, 354, 358, 397, 408, 413, 416, 446, 448, 451, 452, 482, 488, 490, 494, 495, 503, 509], "instanc": [0, 3, 4, 5, 9, 10, 14, 15, 16, 17, 18, 22, 31, 32, 35, 36, 37, 42, 43, 45, 54, 55, 57, 59, 60, 75, 76, 78, 79, 84, 91, 105, 113, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 140, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 167, 168, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 203, 211, 212, 220, 224, 225, 226, 233, 234, 235, 240, 248, 249, 253, 255, 258, 259, 265, 266, 267, 268, 269, 270, 273, 280, 282, 288, 289, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 316, 317, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 338, 341, 343, 345, 346, 347, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 373, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 405, 408, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 445, 446, 448, 449, 452, 453, 477, 481, 483, 488, 491, 492, 498, 503, 505], "which": [0, 1, 3, 4, 5, 9, 10, 20, 27, 43, 44, 46, 48, 56, 57, 66, 67, 77, 78, 79, 80, 81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 140, 141, 142, 143, 152, 153, 156, 160, 164, 166, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 198, 201, 202, 203, 204, 205, 206, 207, 218, 220, 221, 225, 227, 239, 240, 242, 244, 246, 251, 253, 255, 261, 262, 282, 284, 287, 289, 292, 293, 294, 304, 305, 306, 307, 310, 314, 315, 317, 323, 329, 330, 332, 333, 338, 339, 340, 343, 346, 347, 349, 351, 360, 361, 366, 367, 374, 375, 380, 381, 397, 399, 402, 405, 407, 408, 409, 415, 416, 439, 446, 448, 449, 450, 451, 452, 453, 460, 461, 477, 481, 482, 483, 488, 490, 491, 493, 494, 495, 498, 499, 503, 505, 506, 509], "provid": [0, 1, 3, 5, 7, 11, 20, 22, 29, 34, 40, 44, 48, 50, 57, 61, 67, 71, 75, 78, 79, 80, 87, 94, 105, 114, 136, 152, 153, 154, 156, 163, 166, 172, 174, 177, 196, 202, 205, 208, 213, 220, 239, 240, 245, 246, 251, 255, 256, 263, 273, 282, 284, 287, 292, 293, 294, 307, 310, 314, 315, 316, 323, 329, 330, 331, 332, 333, 341, 343, 346, 350, 354, 355, 365, 367, 373, 375, 378, 380, 393, 396, 399, 402, 405, 408, 413, 416, 439, 441, 443, 444, 448, 451, 452, 453, 457, 464, 468, 470, 474, 477, 479, 481, 482, 484, 486, 490, 491, 494, 495, 496, 498, 499, 500, 501, 503, 505, 508, 509], "onli": [0, 2, 3, 5, 7, 8, 9, 10, 16, 17, 20, 24, 33, 38, 45, 46, 57, 77, 79, 105, 136, 146, 152, 153, 156, 163, 164, 167, 176, 185, 201, 202, 203, 205, 208, 212, 215, 217, 218, 220, 221, 237, 239, 246, 251, 253, 255, 260, 266, 282, 284, 287, 288, 292, 294, 300, 304, 305, 306, 307, 310, 315, 317, 321, 323, 328, 329, 330, 332, 334, 336, 338, 339, 340, 343, 345, 346, 348, 349, 351, 354, 355, 360, 361, 365, 367, 370, 373, 374, 379, 380, 381, 390, 391, 397, 400, 404, 405, 408, 409, 410, 415, 416, 421, 434, 439, 445, 448, 449, 451, 452, 453, 460, 461, 481, 484, 488, 490, 493, 494, 495, 498, 499, 501, 503, 504, 505, 506], "true": [0, 3, 5, 16, 22, 26, 27, 29, 47, 48, 56, 61, 67, 79, 105, 126, 152, 153, 154, 156, 167, 168, 170, 172, 174, 177, 195, 199, 201, 202, 205, 220, 237, 239, 240, 244, 246, 251, 253, 255, 260, 265, 282, 284, 287, 288, 293, 294, 296, 300, 302, 304, 305, 307, 309, 310, 314, 315, 316, 317, 323, 329, 330, 332, 333, 336, 340, 345, 346, 354, 355, 356, 366, 367, 373, 374, 375, 397, 402, 408, 409, 411, 412, 413, 416, 434, 439, 443, 453, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 481, 486, 488, 492, 494, 495, 503, 504, 506], "under": [0, 3, 5, 77, 109, 215, 220, 237, 282, 290, 304, 307, 310, 353, 364, 390, 445, 446, 452, 453, 481, 482, 490, 494, 503, 505, 506, 509], "test": [0, 2, 3, 23, 38, 47, 48, 49, 56, 61, 62, 77, 78, 80, 145, 153, 165, 166, 202, 204, 213, 216, 227, 237, 243, 250, 254, 274, 281, 283, 287, 288, 294, 310, 311, 332, 334, 338, 339, 343, 366, 367, 373, 397, 410, 440, 442, 443, 446, 447, 454, 459, 460, 461, 465, 467, 468, 472, 473, 476, 479, 480, 481, 482, 483, 484, 485, 486, 490, 493, 495, 496, 503, 509], "demonstr": [0, 265, 354, 355, 361, 384, 431, 451, 454, 467, 468, 479, 480, 483, 489, 495, 496], "purpos": [0, 3, 5, 80, 153, 167, 202, 204, 215, 237, 239, 266, 287, 310, 330, 333, 338, 370, 451, 452, 453, 468, 480, 483, 503], "where": [0, 2, 3, 5, 10, 20, 21, 27, 29, 33, 44, 55, 57, 59, 79, 80, 105, 109, 153, 154, 155, 156, 163, 167, 168, 176, 203, 205, 212, 213, 215, 220, 221, 225, 239, 240, 244, 255, 266, 282, 284, 287, 302, 304, 307, 310, 314, 315, 317, 323, 324, 329, 330, 332, 333, 334, 335, 336, 338, 340, 341, 343, 345, 346, 347, 360, 377, 387, 390, 396, 397, 409, 412, 416, 439, 448, 451, 452, 453, 481, 483, 484, 486, 490, 495, 498, 499, 501, 503, 505, 506, 507], "content": [0, 2, 3, 5, 10, 24, 26, 27, 167, 176, 199, 237, 246, 262, 282, 292, 338, 380, 381, 398, 402, 439, 451, 453, 474, 488, 503], "otherwis": [0, 1, 3, 5, 7, 48, 79, 152, 156, 163, 164, 167, 220, 251, 282, 284, 287, 291, 307, 329, 330, 332, 336, 338, 339, 341, 343, 345, 380, 398, 409, 410, 412, 416, 439, 449, 481, 491, 501, 503, 506], "independ": [0, 3, 5, 48, 50, 56, 57, 168, 170, 209, 237, 238, 244, 316, 329, 449, 453, 481, 490, 494, 503, 507], "script": [0, 2, 23, 25, 78, 237, 241, 449, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 483, 490, 493, 494, 495, 503, 505, 509], "need": [0, 3, 5, 8, 10, 11, 20, 28, 32, 45, 48, 50, 56, 57, 59, 66, 75, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 145, 146, 152, 153, 156, 166, 170, 176, 198, 202, 205, 206, 207, 215, 220, 239, 240, 244, 251, 255, 260, 282, 284, 287, 288, 289, 292, 293, 294, 307, 310, 311, 314, 315, 317, 329, 330, 331, 332, 333, 336, 339, 341, 343, 346, 347, 354, 361, 365, 367, 373, 375, 380, 390, 398, 405, 409, 410, 413, 414, 416, 421, 434, 439, 443, 444, 445, 446, 448, 449, 451, 452, 453, 459, 468, 481, 482, 483, 488, 490, 491, 492, 493, 494, 495, 498, 503, 504, 505, 509], "same": [0, 3, 4, 5, 7, 20, 48, 50, 56, 67, 78, 81, 89, 103, 104, 105, 111, 116, 140, 152, 153, 156, 161, 167, 176, 179, 182, 183, 189, 201, 205, 206, 239, 240, 244, 282, 284, 287, 310, 314, 316, 317, 329, 330, 332, 333, 339, 342, 343, 344, 345, 346, 354, 356, 365, 389, 391, 399, 409, 410, 412, 413, 414, 416, 434, 439, 443, 446, 449, 451, 452, 453, 465, 481, 482, 484, 488, 490, 492, 494, 495, 499, 503, 509], "sinc": [0, 1, 3, 7, 8, 20, 46, 48, 57, 79, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 120, 141, 143, 152, 156, 163, 166, 167, 168, 170, 172, 174, 177, 184, 203, 205, 206, 209, 239, 240, 251, 255, 260, 265, 282, 284, 287, 292, 304, 307, 310, 316, 330, 332, 335, 341, 343, 345, 346, 347, 354, 361, 383, 397, 399, 403, 405, 439, 451, 477, 481, 483, 488, 490, 492, 494, 495, 498, 501, 503], "affect": [0, 5, 77, 105, 227, 287, 310, 332, 348, 396, 397, 413, 452, 453, 484, 494, 503], "behavior": [0, 1, 3, 5, 35, 79, 120, 146, 180, 206, 221, 227, 237, 240, 248, 282, 291, 292, 304, 310, 329, 332, 343, 346, 366, 373, 400, 405, 414, 448, 483, 484], "time": [0, 1, 2, 3, 4, 5, 7, 15, 16, 20, 27, 33, 45, 46, 48, 51, 78, 79, 105, 145, 152, 153, 156, 161, 164, 168, 176, 204, 205, 209, 212, 213, 220, 237, 239, 240, 244, 251, 253, 255, 260, 262, 281, 282, 284, 293, 307, 310, 316, 323, 329, 330, 340, 346, 365, 380, 381, 394, 396, 397, 399, 408, 409, 410, 412, 413, 415, 419, 446, 447, 449, 451, 453, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 488, 490, 494, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509], "gener": [0, 2, 3, 4, 5, 20, 23, 24, 26, 28, 29, 35, 40, 44, 46, 47, 57, 62, 67, 71, 78, 79, 90, 145, 146, 147, 152, 153, 154, 156, 160, 161, 163, 166, 175, 177, 198, 201, 204, 205, 213, 215, 220, 221, 222, 227, 230, 231, 233, 234, 237, 239, 240, 244, 246, 251, 253, 255, 256, 258, 262, 263, 265, 269, 271, 273, 277, 278, 282, 284, 287, 288, 293, 294, 304, 307, 310, 311, 314, 316, 317, 318, 320, 329, 330, 331, 332, 338, 339, 341, 343, 347, 366, 370, 371, 374, 375, 380, 390, 397, 398, 399, 402, 407, 408, 413, 415, 423, 439, 440, 443, 445, 446, 447, 449, 451, 453, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 481, 483, 484, 490, 491, 493, 494, 495, 496, 497, 499, 501, 503, 505, 506], "safe": [0, 48, 281, 282, 307, 333, 341, 345, 365, 373, 383, 501], "re": [0, 3, 5, 9, 21, 66, 85, 105, 114, 146, 154, 156, 163, 167, 220, 284, 304, 310, 311, 317, 329, 340, 354, 364, 387, 408, 410, 416, 439, 446, 452, 468, 477, 482, 483, 490, 493, 494, 495, 498, 499, 503, 509], "therefor": [0, 3, 5, 152, 170, 205, 239, 244, 282, 298, 310, 323, 330, 332, 336, 346, 410, 413, 415, 433, 446, 452, 503, 505], "runtimeerror": [0, 3, 7, 21, 33, 48, 57, 59, 79, 161, 205, 212, 251, 282, 287, 315, 323, 354, 375, 387, 390, 396], "attempt": [0, 3, 4, 5, 48, 50, 56, 59, 66, 239, 282, 289, 292, 294, 329, 332, 344, 345, 347, 367, 374, 397, 398, 408, 410, 414, 439, 481, 483, 485, 503, 506], "unless": [0, 21, 45, 154, 156, 163, 330, 338, 408, 416, 448, 449, 451, 452, 453, 481, 482, 494, 503, 509], "we": [0, 1, 2, 3, 4, 5, 6, 7, 10, 15, 17, 20, 27, 32, 46, 56, 59, 75, 78, 81, 82, 84, 89, 90, 91, 93, 94, 96, 97, 98, 100, 103, 105, 106, 111, 112, 113, 116, 117, 130, 140, 141, 143, 155, 156, 160, 161, 163, 166, 167, 170, 176, 188, 189, 193, 194, 195, 198, 202, 205, 206, 212, 213, 220, 221, 228, 237, 239, 249, 251, 255, 258, 261, 262, 265, 266, 282, 284, 287, 288, 291, 292, 293, 294, 298, 302, 304, 307, 310, 311, 315, 328, 329, 330, 333, 338, 340, 341, 343, 345, 346, 347, 349, 354, 355, 358, 359, 360, 361, 364, 365, 373, 378, 381, 388, 389, 390, 391, 392, 394, 396, 398, 405, 409, 410, 412, 416, 418, 424, 434, 439, 443, 445, 446, 448, 449, 450, 451, 452, 453, 459, 470, 473, 480, 481, 482, 486, 487, 488, 490, 491, 492, 493, 494, 495, 498, 503, 505, 506, 507, 509], "ar": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 16, 20, 21, 22, 27, 33, 34, 38, 40, 43, 44, 45, 46, 47, 48, 51, 56, 57, 59, 61, 67, 78, 79, 80, 81, 82, 83, 84, 88, 90, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 109, 111, 112, 113, 114, 116, 117, 126, 130, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 145, 146, 152, 153, 154, 155, 156, 160, 163, 164, 166, 168, 169, 170, 174, 175, 176, 183, 185, 189, 191, 195, 198, 201, 202, 203, 204, 205, 206, 209, 212, 213, 214, 215, 217, 220, 221, 224, 225, 227, 228, 239, 240, 242, 244, 246, 248, 249, 251, 253, 255, 258, 260, 262, 265, 270, 277, 280, 281, 282, 283, 284, 287, 288, 289, 291, 292, 293, 294, 297, 298, 300, 302, 304, 305, 307, 309, 310, 311, 314, 315, 316, 317, 318, 321, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 358, 361, 364, 366, 367, 370, 372, 373, 374, 375, 378, 379, 380, 387, 388, 390, 391, 393, 396, 397, 398, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 423, 425, 427, 431, 439, 441, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 465, 467, 472, 474, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 491, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509], "plan": [0, 168, 448, 482, 494, 503, 509], "encapsul": [0, 1, 201], "much": [0, 1, 3, 5, 20, 52, 94, 137, 153, 199, 205, 240, 282, 287, 288, 289, 330, 332, 336, 338, 355, 361, 398, 405, 439, 446, 448, 449, 453, 480, 481, 488, 490, 494, 503], "global": [0, 1, 78, 80, 154, 156, 170, 174, 176, 205, 215, 244, 246, 248, 250, 251, 253, 266, 282, 284, 287, 307, 310, 329, 330, 334, 340, 341, 343, 346, 365, 367, 370, 400, 416, 434, 447, 468, 481, 483, 484, 492, 495, 501, 503, 504], "get": [0, 2, 3, 4, 5, 7, 15, 22, 23, 27, 29, 34, 46, 48, 56, 57, 61, 78, 79, 80, 83, 90, 94, 103, 105, 136, 145, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 168, 174, 184, 201, 202, 203, 205, 215, 220, 221, 239, 246, 251, 268, 282, 284, 287, 289, 292, 293, 297, 304, 307, 310, 317, 323, 327, 329, 330, 338, 339, 340, 341, 343, 344, 345, 346, 350, 353, 354, 355, 356, 361, 364, 365, 373, 378, 381, 388, 389, 397, 398, 401, 403, 409, 410, 415, 418, 421, 422, 439, 440, 444, 445, 447, 448, 449, 450, 451, 453, 483, 488, 490, 491, 493, 494, 502, 503, 504, 505], "itself": [0, 3, 5, 46, 50, 66, 152, 153, 201, 287, 304, 330, 341, 343, 347, 354, 366, 397, 398, 439, 443, 444, 446, 448, 451, 475, 481, 483, 488, 490, 493, 494, 503, 506], "thing": [0, 1, 3, 5, 7, 11, 20, 24, 26, 29, 56, 61, 105, 152, 155, 164, 199, 216, 244, 251, 282, 287, 292, 293, 302, 304, 310, 329, 330, 331, 332, 333, 334, 338, 340, 341, 343, 345, 356, 365, 366, 367, 375, 381, 398, 409, 412, 444, 446, 448, 449, 451, 452, 453, 454, 479, 480, 481, 483, 488, 490, 493, 494, 495, 496, 503, 505], "go": [0, 10, 20, 105, 156, 217, 220, 270, 282, 284, 287, 288, 307, 317, 330, 332, 345, 409, 413, 443, 448, 449, 453, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 490, 503, 504, 509], "number": [0, 3, 4, 5, 10, 11, 20, 27, 32, 45, 48, 51, 56, 75, 79, 83, 90, 105, 121, 138, 152, 153, 154, 155, 156, 167, 168, 170, 173, 176, 183, 198, 201, 202, 205, 212, 220, 221, 225, 236, 239, 240, 244, 246, 251, 255, 260, 265, 284, 287, 290, 291, 300, 302, 306, 307, 310, 315, 316, 317, 318, 323, 325, 328, 329, 330, 332, 336, 339, 341, 343, 345, 349, 350, 354, 355, 356, 358, 361, 365, 367, 373, 381, 387, 389, 397, 398, 401, 405, 407, 408, 409, 413, 414, 415, 421, 425, 432, 434, 439, 446, 449, 453, 466, 474, 483, 484, 485, 486, 489, 490, 491, 492, 494, 495, 498, 499, 500, 501, 503, 504, 505, 508], "benefit": [0, 3, 46, 57, 134, 339, 340, 343, 443, 446, 475, 481], "main": [0, 3, 5, 7, 21, 43, 46, 61, 75, 81, 152, 153, 168, 202, 205, 206, 215, 237, 281, 282, 287, 290, 291, 310, 345, 351, 390, 416, 445, 446, 453, 468, 475, 476, 482, 484, 488, 490, 503, 505, 509], "being": [0, 3, 4, 5, 20, 22, 38, 48, 50, 67, 79, 80, 105, 146, 152, 153, 156, 164, 167, 173, 178, 179, 180, 184, 205, 220, 221, 225, 227, 237, 240, 244, 255, 282, 284, 287, 292, 299, 307, 310, 316, 317, 323, 328, 329, 332, 334, 338, 347, 360, 375, 387, 397, 404, 409, 412, 414, 415, 439, 440, 453, 477, 481, 484, 490, 498, 503, 505, 506], "becom": [0, 20, 44, 164, 282, 287, 306, 307, 316, 330, 340, 342, 343, 378, 413, 416, 444, 445, 446, 481, 503], "trivial": [0, 50, 307, 310, 333, 346, 393, 405, 410, 449, 453], "current": [0, 2, 3, 5, 7, 20, 27, 33, 48, 50, 56, 64, 78, 79, 105, 152, 163, 165, 166, 168, 171, 172, 174, 176, 177, 191, 201, 202, 205, 213, 215, 220, 221, 239, 240, 244, 251, 255, 262, 282, 287, 288, 292, 307, 310, 315, 317, 330, 332, 334, 341, 346, 349, 351, 354, 367, 373, 374, 375, 397, 398, 400, 409, 416, 439, 448, 449, 451, 452, 453, 460, 483, 486, 488, 498, 499, 500, 503, 506, 508], "applyasynciowindowsworkaround": [0, 442], "appli": [0, 1, 3, 7, 57, 79, 80, 83, 90, 105, 106, 136, 145, 146, 156, 201, 215, 221, 239, 240, 251, 266, 270, 280, 282, 284, 287, 288, 289, 291, 292, 293, 294, 300, 307, 310, 314, 315, 329, 330, 332, 338, 341, 343, 345, 347, 366, 397, 408, 416, 443, 445, 449, 453, 467, 468, 475, 476, 483, 484, 488, 490, 494, 495, 498, 499, 500, 503, 505], "asyncio": 0, "workaround": 0, "window": [0, 1, 22, 29, 32, 78, 412, 443, 481, 482, 486, 503, 509], "3": [0, 3, 5, 10, 20, 22, 27, 35, 47, 57, 70, 71, 79, 81, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 109, 112, 113, 114, 117, 130, 136, 137, 138, 140, 141, 143, 147, 152, 153, 154, 156, 164, 168, 172, 174, 177, 178, 180, 188, 193, 201, 212, 220, 221, 236, 237, 244, 248, 284, 287, 291, 292, 300, 304, 307, 309, 310, 311, 317, 325, 328, 330, 332, 333, 336, 339, 340, 341, 354, 355, 364, 375, 397, 398, 407, 408, 409, 416, 418, 435, 438, 443, 446, 449, 453, 459, 461, 467, 469, 471, 477, 481, 482, 486, 487, 488, 491, 492, 493, 494, 498, 499, 500, 501, 503, 505, 507, 509], "8": [0, 10, 79, 82, 113, 138, 143, 154, 221, 240, 246, 292, 316, 317, 332, 333, 336, 340, 341, 356, 362, 401, 405, 408, 413, 416, 451, 459, 466, 467, 468, 469, 470, 488, 492, 493, 494, 495, 503], "prevent": [0, 2, 34, 251, 282, 329, 343, 345, 360, 381, 392, 414, 482, 509], "notimplementederror": [0, 25, 490], "hi": [0, 498, 499], "show": [0, 20, 22, 28, 29, 35, 46, 160, 168, 174, 189, 191, 192, 203, 266, 302, 329, 340, 354, 355, 381, 392, 396, 397, 399, 409, 413, 415, 416, 449, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 477, 480, 492, 495, 503, 505], "dure": [0, 1, 3, 5, 15, 16, 20, 22, 33, 77, 79, 80, 90, 105, 152, 156, 163, 164, 166, 170, 203, 205, 215, 227, 237, 239, 251, 255, 258, 282, 283, 287, 291, 307, 310, 313, 314, 315, 321, 323, 327, 329, 330, 345, 354, 355, 360, 365, 375, 392, 425, 443, 444, 446, 453, 480, 481, 482, 484, 486, 488, 490, 499, 503, 505, 509], "jupyt": [0, 34, 35, 392, 447, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 488], "notebook": [0, 34, 35, 392, 447, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "document": [0, 24, 27, 28, 34, 35, 95, 96, 97, 98, 99, 100, 105, 166, 168, 175, 201, 284, 288, 294, 332, 339, 343, 439, 445, 446, 447, 448, 451, 452, 480, 481, 483, 484, 488, 490, 493, 494, 495, 498, 499, 500, 501, 503, 505, 506, 508], "see": [0, 1, 3, 5, 8, 20, 27, 67, 105, 117, 143, 156, 163, 166, 172, 177, 179, 201, 205, 206, 240, 282, 283, 284, 287, 288, 294, 307, 310, 315, 317, 321, 323, 329, 330, 332, 334, 336, 339, 342, 343, 346, 360, 375, 397, 398, 405, 410, 413, 415, 440, 443, 445, 448, 449, 452, 473, 481, 482, 484, 488, 490, 491, 493, 494, 495, 498, 499, 500, 501, 503, 505, 506, 508, 509], "http": [0, 22, 81, 82, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 109, 114, 131, 134, 136, 138, 140, 153, 163, 166, 168, 174, 176, 185, 305, 306, 346, 413, 416, 434, 439, 440, 443, 481, 482, 484, 494, 509], "bug": [0, 145, 174, 282, 340, 445, 448, 452, 453, 481], "org": [0, 22, 85, 86, 87, 89, 100, 102, 131, 134, 136, 140, 166, 413, 440, 443, 481, 494], "issue37373": 0, "bookkeep": [0, 79, 139, 287, 330, 346, 415, 442, 451, 484, 486, 488, 503, 505], "bookkeepingplugin": [0, 2, 442], "exposeinterfac": [0, 2, 58, 59, 213, 216, 227, 230, 237, 274, 277, 282, 380, 393, 396, 490], "defineentrypoint": [0, 2, 61, 213, 237, 282, 490], "definecasedepend": [0, 2, 282, 490], "mpiactionrequiresreset": [0, 2, 282, 483], "getreportcont": [0, 2, 213, 237, 282, 447], "db": [0, 2, 20, 21, 35, 75, 146, 154, 155, 205, 212, 330, 346, 361, 396, 415, 452, 483, 486, 488, 493, 495, 503, 505], "databas": [0, 2, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 40, 46, 47, 48, 61, 65, 71, 75, 79, 145, 146, 156, 205, 209, 237, 255, 282, 283, 284, 307, 310, 333, 338, 340, 343, 345, 346, 360, 369, 397, 413, 446, 452, 468, 475, 476, 480, 481, 483, 484, 486, 489, 490, 493, 495, 502, 503], "revis": [0, 2, 140, 443], "changelog": [0, 2], "database3": [0, 2, 3, 483, 484], "databaseinterfac": [0, 2, 3, 5, 16, 415, 484, 486, 503], "comparedatabas": [0, 2, 3, 4, 14], "databasefactori": [0, 2, 3, 8, 488, 505], "loadoper": [0, 2, 3, 205, 484], "report": [0, 2, 4, 22, 35, 42, 62, 71, 79, 102, 117, 168, 213, 219, 237, 282, 287, 307, 371, 373, 394, 397, 399, 413, 415, 446, 447, 468, 475, 481, 484, 488, 493, 495, 502, 504], "setdata": [0, 2, 23], "visual": [0, 2, 5, 239, 306, 413, 450, 480, 481, 483, 490, 499], "historytrack": [0, 2, 415, 488], "histori": [0, 2, 3, 5, 7, 35, 79, 212, 220, 251, 255, 282, 330, 332, 345, 409, 415, 438, 446, 452, 468, 475, 476, 483, 488], "inform": [0, 2, 3, 5, 7, 10, 11, 22, 24, 28, 29, 32, 46, 48, 56, 57, 78, 79, 84, 91, 105, 113, 138, 140, 152, 153, 154, 156, 163, 167, 168, 170, 172, 173, 174, 177, 180, 183, 196, 202, 203, 205, 206, 215, 220, 239, 251, 258, 277, 282, 284, 287, 289, 290, 292, 310, 314, 316, 329, 330, 332, 340, 341, 343, 345, 354, 365, 374, 375, 401, 413, 415, 421, 439, 440, 445, 446, 449, 451, 452, 468, 475, 476, 481, 486, 488, 494, 495, 499, 503, 504, 505], "describeinterfac": [0, 2, 3, 7, 20, 21, 22, 23, 28, 33, 79, 213, 237, 239, 243, 244, 282], "historytrackerinterfac": [0, 2, 20, 415, 488], "maininterfac": [0, 2], "memoryprofil": [0, 2, 36, 468, 475, 476, 488], "klasscount": [0, 2, 22], "instancecount": [0, 2, 22], "profilememoryusageact": [0, 2, 22], "systemandprocessmemoryusag": [0, 2, 22], "printsystemmemoryusageact": [0, 2, 22], "snapshotinterfac": [0, 2, 484], "extractcyclenodefromstamp": [0, 2, 33], "getcyclenodestamp": [0, 2, 33], "inputmodifi": [0, 47, 57, 60, 311, 321, 493], "copyinterfaceinput": [0, 47, 48, 59, 484, 486], "suit": [0, 2, 47, 48, 54, 57, 59, 60, 61, 64, 65, 73, 76, 282, 311, 328, 334, 444, 446, 476, 483, 484, 490, 493], "casesuit": [0, 47, 48, 56, 57, 59, 65, 79, 282, 493], "suitebuild": [0, 47, 48, 60, 483, 493], "getinputmodifi": [0, 47, 57], "fullfactorialsuitebuild": [0, 47, 57, 60, 493], "fullfactorialsuitebuildernoisi": [0, 47, 57], "separateeffectssuitebuild": [0, 47, 57, 493], "latinhypercubesuitebuild": [0, 47, 57, 60], "cli": [0, 47, 78, 282, 442, 444, 446, 453, 480, 484, 486, 490, 504], "entrypointsplugin": [0, 61, 442], "armipars": [0, 61, 442], "print_help": [0, 61], "armicli": [0, 61, 76, 442, 490], "showvers": [0, 61, 76], "listcommand": [0, 61], "executecommand": [0, 61, 75], "splash": [0, 1, 61, 62, 67, 442, 482, 490, 509], "checkinput": [0, 47, 48, 59, 61], "expandblueprint": [0, 61, 62], "checkinputentrypoint": [0, 61, 62], "cleantemp": [0, 61], "clone": [0, 47, 48, 56, 59, 61, 75, 79, 282, 367, 408, 443, 481, 482, 483, 484, 509], "clonearmiruncommandbatch": [0, 61, 64], "clonearmiruncommandinteract": [0, 61, 64], "clonesuitecommand": [0, 61, 64], "comparecas": [0, 61, 486], "comparesuit": [0, 61, 65], "extractinput": [0, 61, 66], "injectinput": [0, 61, 66], "entrypoint": [0, 2, 38, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 241, 282, 379, 444, 484], "storebool": [0, 61, 67], "setset": [0, 61, 67], "setcasetitl": [0, 61, 67], "loadset": [0, 61, 67], "gridgui": [0, 61], "gridguientrypoint": [0, 61, 68], "migrateinput": [0, 61], "modifi": [0, 3, 48, 50, 51, 54, 55, 57, 61, 64, 66, 105, 153, 156, 160, 174, 188, 193, 194, 195, 198, 239, 244, 246, 253, 255, 281, 284, 287, 307, 311, 313, 314, 317, 320, 321, 325, 328, 329, 330, 338, 345, 346, 348, 351, 355, 356, 361, 366, 367, 373, 378, 401, 408, 414, 453, 465, 481, 482, 484, 486, 489, 494, 503, 509], "modifycasesettingscommand": [0, 61, 70], "reportsentrypoint": [0, 61, 486], "createreportfromset": [0, 61, 71], "runentrypoint": [0, 61, 72, 73, 446], "runsuit": [0, 61, 76], "runsuitecommand": [0, 61, 73], "materi": [0, 10, 155, 156, 163, 214, 227, 236, 240, 251, 282, 283, 284, 287, 288, 289, 290, 291, 293, 294, 296, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 315, 317, 318, 323, 329, 332, 353, 354, 355, 356, 380, 385, 401, 413, 421, 442, 445, 446, 448, 458, 460, 462, 464, 465, 467, 468, 475, 476, 478, 479, 480, 481, 483, 484, 486, 488, 489, 494, 495, 496, 498, 499, 500, 503, 504, 505, 508], "setmaterialnamespaceord": [0, 80, 442, 490], "importmaterialsintomodulenamespac": [0, 80, 442], "iterallmaterialclassesinnamespac": [0, 80, 442, 474], "resolvematerialclassbynam": [0, 80, 126, 442], "air": [0, 80, 121], "alloy200": [0, 80, 126, 484], "b4c": [0, 80, 122, 302, 484, 488, 493, 494, 499, 503], "be9": [0, 80, 123], "cah2": [0, 80, 126], "californium": [0, 80, 126, 154, 474], "concret": [0, 3, 7, 16, 20, 21, 22, 28, 33, 59, 79, 80, 146, 156, 161, 167, 212, 219, 225, 239, 244, 251, 260, 292, 310, 329, 387, 390, 396, 484, 486], "copper": [0, 80, 154, 484], "cu": [0, 80, 82, 88, 126, 154, 503], "graphit": [0, 80, 124, 161, 163], "hafnium": [0, 80, 126, 154], "hastelloyn": [0, 80, 126], "ht9": [0, 80, 105, 161, 300, 323, 355, 356, 467, 475, 483, 488, 494, 503, 504], "inconel": [0, 80, 96, 97, 99, 100, 484], "inconel617": [0, 80, 95], "inconel600": [0, 80, 126], "inconel625": [0, 80, 126], "inconel800": [0, 80], "inconelpe16": [0, 80], "inconelx750": [0, 80, 126], "lead": [0, 3, 4, 5, 79, 80, 102, 126, 154, 166, 167, 201, 220, 248, 282, 287, 310, 332, 343, 383, 394, 399, 405, 416, 424, 446, 448, 452, 483, 486, 503], "leadbismuth": [0, 80, 126], "lithium": [0, 80, 125, 154, 484, 503], "magnesium": [0, 80, 106, 126, 154], "parentawaredensityredirect": [0, 80, 105], "fluid": [0, 80, 81, 89, 101, 102, 103, 104, 105, 111, 114, 116, 139, 140, 213, 220, 315, 332, 486, 503], "simplesolid": [0, 80, 85, 86, 92, 95, 99, 105, 108, 110, 115, 118, 134, 138], "fuelmateri": [0, 80, 105, 132, 133, 134, 135, 136, 137, 138, 401, 503], "mgo": [0, 80, 126], "mixtur": [0, 80, 109, 287, 323, 341, 401, 483, 503], "molybdenum": [0, 80, 126, 154], "mox": [0, 80, 126, 138, 283, 293, 332, 356, 484], "nz": [0, 80, 126], "potassium": [0, 80, 126, 154, 484], "scandiumoxid": [0, 80], "sc2o3": [0, 80, 112, 126], "sic": [0, 80, 127], "sodium": [0, 80, 111, 115, 126, 154, 227, 284, 293, 354, 355, 356, 448, 467, 475, 480, 481, 488, 490, 494, 495, 503], "sodiumchlorid": [0, 80], "nacl": [0, 80, 115, 126], "sulfur": [0, 80, 126, 128, 154, 503], "tzm": [0, 80, 126], "tantalum": [0, 80, 126, 154], "thu": [0, 35, 50, 80, 126, 163, 173, 213, 215, 240, 284, 287, 310, 317, 340, 341, 390, 398, 468, 481, 494, 495, 503], "thorium": [0, 80, 126, 132, 134, 135, 154, 503], "thoriumoxid": [0, 80, 126, 129, 484, 503], "tho2": [0, 80, 129, 134], "uthzr": [0, 80, 353, 503], "uzr": [0, 80, 105, 126, 130, 296, 300, 302, 310, 353, 356, 467, 488, 494, 503], "uranium": [0, 80, 105, 126, 132, 135, 138, 153, 154, 156, 300, 307, 310, 481, 488, 491, 492, 494, 503], "uraniumoxid": [0, 80, 109, 126, 300, 397, 417, 421, 484, 491, 503], "heatcapacityconst": [0, 80, 138], "uo2": [0, 80, 109, 138, 300, 310, 491], "void": [0, 80, 94, 105, 126, 239, 255, 283, 287, 300, 305, 307, 310, 316, 332, 355, 362, 475, 488, 494, 495, 499, 501, 503], "water": [0, 80, 131, 161, 244, 480, 495], "saturatedwat": [0, 80, 140, 495], "saturatedsteam": [0, 80, 140], "yttriumoxid": [0, 80], "y2o3": [0, 80, 126, 141], "zincoxid": [0, 80], "zno": [0, 80, 126, 142], "zr": [0, 80, 105, 126, 135, 136, 154, 155, 156, 287, 293, 296, 298, 300, 302, 310, 488, 493, 495, 500], "migrat": [0, 3, 5, 48, 61, 66, 69, 282, 283, 288, 294, 311, 330, 332, 351, 373, 374, 442, 483, 488], "blueprintsmigr": [0, 145, 146, 147], "settingsmigr": [0, 145, 146, 148], "databasemigr": [0, 145, 146], "m0_1_3": [0, 145], "removecentersfromblueprint": [0, 145, 147], "updateelementalnuclid": [0, 145, 147], "m0_1_6": [0, 145], "convertalphanumlocationsettingstonum": [0, 145, 148], "getindicesfromdif3dstylelocatorlabel": [0, 145, 148], "nucdirectori": [0, 1, 168, 203, 310, 413, 442, 459, 466, 474, 477, 492], "element": [0, 4, 5, 9, 10, 27, 46, 81, 83, 86, 92, 105, 147, 155, 156, 158, 163, 216, 282, 291, 293, 307, 309, 310, 341, 351, 354, 380, 397, 401, 405, 408, 409, 416, 421, 442, 446, 447, 467, 474, 481, 483, 488, 489, 493, 495, 503], "name": [0, 1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 40, 42, 43, 45, 48, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 88, 90, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 111, 112, 113, 114, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 146, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 166, 167, 168, 171, 174, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 205, 210, 211, 212, 213, 215, 216, 219, 220, 223, 224, 225, 226, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 253, 255, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 273, 280, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 340, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 405, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 444, 446, 447, 451, 453, 465, 466, 474, 475, 477, 480, 482, 483, 484, 488, 490, 492, 493, 494, 495, 498, 499, 500, 501, 505, 508, 509], "label": [0, 3, 5, 27, 84, 91, 105, 113, 138, 140, 148, 155, 156, 160, 163, 165, 166, 190, 202, 203, 215, 220, 228, 239, 251, 253, 262, 273, 283, 284, 287, 310, 333, 334, 338, 339, 364, 365, 373, 381, 398, 413, 415, 451, 465, 467, 472, 477, 483, 484, 490, 492, 500, 503], "id": [0, 27, 44, 55, 156, 160, 202, 239, 240, 255, 265, 284, 292, 300, 305, 306, 307, 309, 316, 321, 331, 355, 356, 416, 467, 468, 475, 476, 484, 488, 494, 495, 499, 503, 504], "indic": [0, 3, 9, 10, 20, 27, 44, 79, 105, 148, 156, 163, 166, 167, 168, 173, 176, 178, 179, 180, 183, 191, 202, 203, 205, 240, 244, 282, 284, 287, 292, 293, 310, 314, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 345, 346, 351, 375, 380, 393, 398, 409, 413, 415, 416, 425, 434, 446, 452, 469, 483, 494, 499, 503, 505], "rapid": [0, 481], "access": [0, 1, 20, 21, 102, 152, 161, 167, 168, 205, 212, 246, 256, 282, 287, 288, 307, 310, 314, 329, 331, 343, 345, 346, 400, 412, 414, 416, 446, 451, 481, 483, 488, 489, 490, 502, 503], "chemicalphas": [0, 153, 154, 492], "chemicalgroup": [0, 153, 154, 492], "getelementsbychemicalphas": [0, 153, 154], "getelementsbychemicalgroup": [0, 153, 154], "getnam": [0, 20, 80, 105, 153, 154, 283, 310, 356, 488], "getsymbol": [0, 153, 154], "getelementz": [0, 153, 154], "factori": [0, 2, 3, 57, 60, 80, 153, 154, 156, 163, 204, 205, 218, 283, 304, 307, 346, 349, 442, 446, 449, 469, 489], "addglobalel": [0, 153, 154], "destroyglobalel": [0, 153, 154], "nucdir": [0, 153], "getnuclidefromnam": [0, 153, 155], "getnaturalisotop": [0, 153, 154, 155, 156], "getnaturalmassisotop": [0, 153, 155], "getmc2label": [0, 153, 155], "getelementnam": [0, 153, 155], "getelementsymbol": [0, 153, 155], "getnuclid": [0, 80, 105, 153, 155, 165, 174, 197, 198, 202, 283, 304, 307, 310, 356, 472, 473], "getnuclidenam": [0, 153, 155], "getatomicweight": [0, 153, 155, 283, 310], "isheavymet": [0, 153, 154, 155, 156, 492], "isfissil": [0, 153, 155, 156, 166, 168], "getthresholddisplacementenergi": [0, 153, 155], "nuclidebas": [0, 1, 153, 155, 160, 161, 163, 164, 170, 246, 293, 310, 401, 459, 466, 467, 474, 477, 492], "nuclideinterfac": [0, 153, 156], "nuclidewrapp": [0, 153, 156, 203], "inuclid": [0, 153, 155, 156, 163, 203], "imcnpnuclid": [0, 153, 156], "naturalnuclidebas": [0, 84, 91, 113, 138, 140, 153, 154, 155, 156, 163, 293, 492], "dummynuclidebas": [0, 153, 156, 492], "lumpnuclidebas": [0, 153, 156, 492], "initreachableactivenuclidesthroughburnchain": [0, 153, 156], "isotop": [0, 90, 92, 105, 109, 126, 153, 155, 156, 163, 166, 174, 201, 240, 244, 246, 267, 287, 288, 291, 293, 298, 299, 300, 304, 305, 306, 307, 309, 310, 355, 401, 413, 421, 446, 480, 483, 486, 488, 492, 493, 494, 500], "getisotop": [0, 153, 156], "fromnam": [0, 153, 156, 477], "ismonoisotopicel": [0, 153, 156], "singl": [0, 3, 5, 7, 9, 20, 39, 46, 48, 57, 153, 156, 167, 168, 201, 203, 205, 220, 239, 240, 284, 287, 291, 293, 304, 306, 307, 310, 317, 325, 330, 332, 334, 336, 341, 353, 354, 355, 364, 365, 381, 389, 393, 396, 397, 405, 408, 413, 416, 434, 449, 451, 452, 453, 467, 477, 481, 484, 486, 490, 494, 499, 503, 505, 506], "changelabel": [0, 153, 156], "getdepletablenuclid": [0, 153, 156], "imposeburnchain": [0, 153, 156, 477], "addnuclidebas": [0, 153, 156], "readmccnuclidedata": [0, 153, 156], "updatenuclidebasesforspecialcas": [0, 153, 156], "addglobalnuclid": [0, 153, 156], "destroyglobalnuclid": [0, 153, 156], "thermalscatt": [0, 84, 91, 105, 113, 138, 140, 153, 161], "transmut": [0, 153, 156, 160, 162, 203, 237, 293, 464, 478, 479, 496, 499, 503], "decaymod": [0, 153, 156, 164], "nucleardataio": [0, 260, 330, 442, 467, 472, 473], "getexpectedisotxsfilenam": [0, 165, 442], "getexpectedcompxsfilenam": [0, 165, 442], "getexpectedgamisofilenam": [0, 165, 442], "getexpectedpmatrxfilenam": [0, 165, 442], "cccc": [0, 153, 165, 202, 467, 472, 473, 483], "system": [0, 3, 5, 7, 20, 28, 29, 32, 34, 38, 78, 156, 165, 176, 204, 205, 206, 213, 215, 219, 220, 227, 240, 244, 251, 282, 283, 288, 292, 294, 303, 307, 332, 333, 334, 336, 339, 340, 343, 345, 346, 347, 348, 349, 350, 351, 358, 373, 375, 377, 378, 390, 391, 398, 399, 402, 405, 410, 412, 443, 446, 448, 453, 460, 461, 475, 480, 482, 483, 486, 487, 488, 493, 494, 505, 509], "implement": [0, 1, 3, 5, 9, 21, 33, 45, 46, 50, 57, 59, 61, 67, 79, 80, 94, 105, 140, 146, 152, 153, 156, 165, 167, 170, 174, 212, 216, 220, 237, 239, 240, 244, 251, 255, 281, 282, 287, 292, 310, 317, 318, 323, 329, 330, 336, 338, 341, 343, 345, 350, 354, 387, 390, 393, 396, 397, 398, 405, 408, 444, 446, 451, 453, 484, 485, 486, 490, 492, 495, 503, 505, 506], "detail": [0, 3, 5, 7, 20, 33, 40, 62, 67, 71, 75, 79, 94, 105, 165, 204, 212, 217, 220, 221, 236, 240, 244, 251, 255, 282, 287, 288, 290, 292, 310, 311, 330, 332, 387, 438, 446, 453, 460, 461, 481, 483, 484, 486, 488, 489, 491, 493, 494, 495, 499, 504, 505], "discuss": [0, 5, 153, 165, 213, 244, 282, 343, 446, 448, 449, 481, 490, 494, 503], "nuclearfilemetadata": [0, 165], "filemetadata": [0, 165, 196], "nuclidexsmetadata": [0, 165, 196], "regionxsmetadata": [0, 165, 196], "nuclidemetadata": [0, 165, 196], "xscollect": [0, 165, 198, 203, 354, 413], "macroscopiccrosssectioncr": [0, 165, 201], "computeblockaveragechi": [0, 165, 201], "computeneutronenergydepositionconst": [0, 165, 201], "computegammaenergydepositionconst": [0, 165, 201], "computefissionenergygenerationconst": [0, 165, 201], "computecaptureenergygenerationconst": [0, 165, 201], "computemacroscopicgroupconst": [0, 165, 201], "xslibrari": [0, 165, 168, 170, 172, 174, 177, 199, 201, 203, 251], "compar": [0, 1, 3, 4, 33, 47, 48, 56, 57, 59, 65, 165, 166, 168, 170, 172, 173, 174, 177, 183, 187, 200, 201, 202, 203, 220, 225, 241, 323, 330, 333, 340, 341, 362, 375, 380, 413, 415, 503], "comparexslibraryattribut": [0, 165, 202], "comparelibraryneutronenergi": [0, 165, 202], "getsuffixfromnuclidelabel": [0, 165, 202], "getisotxslibrariestomerg": [0, 165, 202], "mergexslibrariesinworkingdirectori": [0, 165, 202], "isotxslibrari": [0, 165, 173, 177, 180, 199, 202, 330, 413], "compxslibrari": [0, 165, 168, 202], "xsnuclid": [0, 165, 168, 201, 473], "plotscattermatrix": [0, 165, 203, 413, 473], "plotcomparescattermatrix": [0, 165, 203], "getoperatorclassfromset": [0, 204, 442], "operatormpi": [0, 2, 152, 204, 209, 282, 446], "runtyp": [0, 204, 212, 282, 438, 446, 503], "settingsvalid": [0, 204, 282, 366, 484, 486, 490], "snapshot": [0, 3, 5, 26, 33, 37, 48, 79, 204, 205, 207, 211, 237, 255, 284, 468, 475, 476, 483, 484, 488, 503], "operatorsnapshot": [0, 204, 205, 209, 446], "physic": [0, 33, 51, 79, 80, 87, 88, 104, 106, 138, 153, 156, 163, 164, 165, 166, 167, 170, 174, 185, 204, 205, 209, 282, 284, 287, 291, 293, 307, 309, 310, 311, 314, 315, 316, 329, 330, 338, 343, 346, 354, 370, 442, 443, 446, 448, 460, 468, 472, 480, 483, 484, 486, 488, 489, 491, 493, 494, 498, 502, 503, 505], "fuelcycl": [0, 213, 255, 282, 468, 488, 494], "fuelhandlerplugin": [0, 213, 216], "fuelperform": [0, 213], "neutron": [0, 29, 51, 79, 86, 102, 155, 156, 160, 163, 164, 166, 168, 170, 171, 180, 201, 202, 203, 213, 227, 282, 284, 287, 290, 291, 304, 307, 310, 311, 320, 329, 343, 346, 413, 448, 451, 466, 472, 477, 481, 483, 484, 486, 490, 491, 492, 494, 495, 499, 501, 503], "neutronicsplugin": [0, 213, 237, 270, 282, 448], "gammatransportisrequest": [0, 213, 237], "gammaxsarerequest": [0, 213, 237], "adjointcalculationrequest": [0, 213, 237], "realcalculationrequest": [0, 213, 237], "applyeffectivedelayedneutronfractiontocor": [0, 213, 237], "latticephysicsfrequ": [0, 213, 237, 239, 258, 484, 503], "safeti": [0, 170, 213, 405, 412, 481], "safetyplugin": [0, 213, 271], "thermalhydraul": [0, 213, 343, 346, 506], "constant": [0, 26, 78, 79, 82, 90, 104, 105, 160, 166, 170, 185, 201, 207, 213, 237, 238, 242, 255, 262, 270, 283, 287, 307, 310, 321, 333, 334, 338, 339, 341, 354, 370, 401, 441, 452, 467, 477, 484, 486, 490, 499, 501, 503], "dpa_cross_sect": [0, 213, 214], "execut": [0, 14, 15, 16, 17, 18, 31, 32, 35, 36, 37, 42, 43, 48, 54, 55, 56, 59, 60, 61, 62, 67, 75, 76, 78, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 152, 158, 159, 160, 161, 162, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 205, 211, 212, 213, 224, 225, 226, 227, 233, 234, 235, 240, 248, 249, 251, 253, 255, 258, 259, 265, 266, 267, 268, 269, 270, 273, 280, 282, 287, 296, 297, 298, 299, 300, 301, 302, 303, 310, 323, 324, 325, 326, 327, 328, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 402, 410, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 443, 446, 449, 460, 462, 478, 481, 482, 483, 484, 490, 503, 505, 509], "executionopt": [0, 213, 215, 228, 251], "defaultexecut": [0, 213, 215, 228, 251], "reactorplugin": [0, 282, 283, 442, 503], "beforereactorconstruct": [0, 282, 283, 380, 393, 486], "defineblocktyp": [0, 282, 283], "defineassemblytyp": [0, 282, 283], "definesystembuild": [0, 282, 283, 503], "getaxialexpansionchang": [0, 282, 283, 380, 393, 486], "blueprint": [0, 2, 3, 5, 11, 26, 48, 50, 56, 57, 62, 90, 105, 109, 146, 147, 156, 196, 205, 237, 239, 244, 282, 283, 284, 287, 307, 310, 323, 328, 330, 332, 346, 349, 351, 354, 361, 398, 413, 451, 452, 467, 475, 483, 484, 486, 488, 489, 490, 493, 498, 500, 502], "loadfromc": [0, 283, 288, 349, 351], "compon": [0, 3, 4, 5, 10, 26, 45, 50, 52, 79, 105, 147, 154, 168, 183, 239, 240, 244, 265, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 302, 310, 312, 313, 314, 315, 316, 323, 324, 325, 330, 332, 340, 343, 349, 354, 355, 356, 412, 413, 446, 448, 451, 459, 464, 467, 475, 478, 479, 480, 481, 483, 484, 485, 486, 488, 491, 493, 494, 495, 496, 499, 502, 504, 505], "nullcompon": [0, 283, 304, 355, 503], "unshapedcompon": [0, 283, 304, 308, 355, 503], "unshapedvolumetriccompon": [0, 283, 304, 503], "zeromasscompon": [0, 283, 304, 503], "positiveornegativevolumecompon": [0, 283, 304, 503], "derivedshap": [0, 283, 287, 304, 307, 355, 356, 359, 465, 467, 475, 486, 488, 494, 495, 503], "convert": [0, 3, 4, 5, 10, 27, 40, 49, 71, 96, 97, 100, 105, 148, 155, 156, 167, 191, 201, 220, 239, 251, 260, 282, 283, 287, 307, 310, 330, 332, 333, 334, 339, 340, 346, 348, 351, 358, 373, 378, 393, 398, 401, 405, 408, 409, 411, 412, 416, 437, 441, 451, 459, 460, 461, 483, 484, 486, 488, 503], "grid": [0, 3, 5, 10, 15, 46, 50, 68, 240, 251, 282, 283, 284, 287, 288, 292, 294, 297, 301, 310, 314, 315, 316, 323, 330, 331, 350, 351, 354, 361, 398, 407, 413, 416, 418, 434, 446, 464, 465, 467, 472, 474, 475, 478, 479, 480, 481, 482, 483, 484, 486, 488, 491, 494, 496, 501, 509], "locatorlabeltoindic": [0, 283, 334], "basic": [0, 4, 15, 17, 21, 29, 32, 33, 47, 140, 152, 153, 156, 253, 258, 259, 260, 283, 288, 298, 305, 310, 320, 329, 334, 339, 354, 356, 373, 388, 394, 401, 420, 422, 431, 434, 436, 439, 444, 446, 449, 450, 453, 480, 481, 490, 493, 494, 495, 503, 504], "usag": [0, 4, 22, 61, 152, 203, 283, 344, 397, 398, 413, 415, 449, 452, 484, 503], "consider": [0, 45, 237, 239, 282, 283, 341, 399, 446], "reset": [0, 2, 79, 251, 282, 283, 304, 310, 311, 312, 314, 317, 329, 343, 367, 381, 390, 394, 397, 439, 486, 488, 499], "assembli": [0, 2, 3, 5, 15, 16, 26, 27, 28, 29, 44, 45, 48, 51, 79, 83, 90, 176, 217, 220, 221, 224, 225, 226, 251, 253, 262, 277, 282, 283, 285, 287, 288, 289, 290, 294, 296, 299, 302, 304, 307, 310, 311, 312, 313, 314, 315, 316, 317, 323, 325, 328, 329, 330, 332, 334, 336, 338, 339, 340, 341, 343, 349, 350, 351, 353, 356, 361, 364, 373, 387, 393, 397, 398, 401, 409, 413, 415, 446, 449, 451, 452, 460, 467, 468, 475, 476, 480, 481, 483, 484, 485, 486, 488, 490, 493, 499, 501, 502, 504, 505, 506, 508], "hexassembli": [0, 282, 283, 284, 467], "cartesianassembli": [0, 282, 283, 284], "rzassembli": [0, 283, 284], "thrzassembli": [0, 282, 283, 284], "assemblyparamet": [0, 283], "getassemblyparameterdefinit": [0, 283, 285], "blockparamet": [0, 283], "getblockparameterdefinit": [0, 283, 286], "block": [0, 2, 3, 4, 5, 15, 16, 26, 29, 42, 44, 45, 50, 51, 80, 126, 152, 153, 161, 167, 176, 198, 201, 220, 225, 236, 239, 240, 244, 246, 248, 251, 255, 259, 260, 265, 266, 282, 283, 284, 286, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 302, 304, 305, 307, 309, 310, 313, 314, 315, 316, 317, 318, 321, 323, 324, 325, 327, 328, 329, 330, 332, 334, 335, 340, 343, 345, 346, 347, 349, 350, 353, 354, 355, 356, 361, 364, 387, 396, 397, 401, 409, 413, 446, 449, 451, 452, 458, 459, 462, 464, 475, 476, 478, 479, 480, 483, 484, 485, 486, 488, 490, 491, 493, 496, 498, 501, 502, 504, 505], "hexblock": [0, 10, 198, 282, 283, 287, 310, 316, 317, 323, 353, 467, 484, 486], "cartesianblock": [0, 282, 283, 287, 316], "thrzblock": [0, 282, 283, 287], "composit": [0, 3, 5, 10, 80, 81, 82, 105, 153, 168, 170, 175, 183, 201, 227, 239, 240, 265, 282, 283, 284, 287, 288, 293, 294, 304, 307, 316, 317, 318, 330, 331, 332, 336, 338, 340, 341, 343, 345, 346, 347, 349, 356, 391, 439, 446, 449, 461, 468, 475, 476, 480, 483, 484, 486, 488, 491, 494, 495, 503, 505], "flagseri": [0, 283, 310, 346], "compositemodeltyp": [0, 282, 283, 307, 310], "armiobject": [0, 3, 5, 7, 229, 246, 251, 261, 276, 282, 283, 292, 310, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 342, 343, 347, 350, 452, 467, 486], "stateretain": [0, 283, 310, 356], "gathermaterialsbyvolum": [0, 283, 310], "getdominantmateri": [0, 283, 310], "getreactionratedict": [0, 283, 310], "core": [0, 3, 5, 10, 11, 15, 20, 26, 27, 29, 32, 45, 50, 54, 90, 168, 171, 176, 205, 216, 217, 220, 221, 225, 237, 239, 240, 244, 248, 251, 258, 260, 262, 282, 283, 284, 287, 288, 292, 294, 303, 310, 314, 316, 317, 318, 320, 323, 325, 329, 331, 332, 334, 336, 338, 339, 340, 341, 342, 343, 345, 348, 349, 350, 351, 353, 361, 362, 364, 367, 396, 398, 413, 415, 418, 446, 451, 453, 459, 460, 461, 467, 468, 475, 476, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 493, 495, 498, 499, 502, 503, 504, 505, 506, 509], "excorestructur": [0, 282, 283, 350, 503], "excorecollect": [0, 283, 331], "flag": [0, 1, 12, 20, 27, 79, 105, 126, 147, 180, 205, 220, 237, 244, 248, 251, 282, 283, 284, 287, 288, 291, 292, 293, 296, 297, 298, 299, 300, 302, 304, 310, 315, 317, 318, 323, 330, 343, 345, 346, 354, 356, 358, 373, 378, 393, 396, 397, 402, 407, 412, 413, 415, 424, 441, 446, 449, 459, 460, 465, 467, 468, 483, 484, 486, 488, 490, 493, 504, 505], "invalidflagserror": [0, 283, 332], "geometri": [0, 3, 5, 46, 48, 56, 57, 166, 173, 175, 176, 179, 188, 193, 205, 215, 239, 240, 251, 282, 283, 284, 287, 289, 292, 294, 307, 309, 311, 316, 317, 318, 323, 325, 328, 329, 330, 334, 336, 338, 339, 341, 342, 349, 351, 359, 398, 446, 458, 462, 467, 468, 471, 475, 476, 479, 481, 483, 488, 494, 495, 496, 503, 505], "geomtyp": [0, 53, 54, 55, 251, 283, 330, 333, 334, 335, 336, 338, 339, 341, 342, 398, 467, 483], "domaintyp": [0, 283, 333, 398, 467], "boundarytyp": [0, 283, 333, 467], "symmetrytyp": [0, 283, 317, 330, 333, 338, 467], "checkvalidgeomsymmetrycombo": [0, 283, 333], "reactorparamet": [0, 283], "definereactorparamet": [0, 283, 348], "definecoreparamet": [0, 283, 348], "makeparametersreadonli": [0, 283, 348], "spentfuelpool": [0, 282, 283, 476, 503], "systemlayoutinput": [0, 48, 50, 57, 283, 294, 342, 349, 483], "zone": [0, 166, 173, 175, 179, 180, 220, 283, 317, 330, 363, 468, 475, 476, 484, 488, 494, 495, 498, 499, 503], "isboolset": [0, 366, 442], "recursivelyloadsettingsfil": [0, 366, 442], "promptforsettingsfil": [0, 366, 442], "fwset": [0, 366, 490], "getframeworkset": [0, 366, 368], "caseset": [0, 26, 29, 152, 366, 475, 503], "flaglistset": [0, 366, 373], "settingsio": [0, 366, 379], "root": [0, 3, 5, 10, 48, 56, 78, 152, 156, 213, 289, 347, 366, 374, 380, 400, 402, 409, 439, 449, 452, 490, 505], "settingrenam": [0, 366, 374], "settingsread": [0, 366, 374], "settingswrit": [0, 366, 367, 374, 484], "prompt": [0, 366, 374, 375, 453, 490, 501, 503], "runlogpromptcancel": [0, 366, 374], "runlogpromptunresolv": [0, 366, 374], "queri": [0, 220, 282, 310, 366, 375, 377, 490], "inspector": [0, 204, 205, 216, 222, 230, 231, 237, 245, 263, 277, 278, 282, 366, 375, 490], "createqueryrevertbadpathtodefault": [0, 366, 375], "validatevers": [0, 366, 375], "getemptyhexreactor": [0, 380, 442], "getemptycartesianreactor": [0, 380, 442], "fixtur": [0, 35, 380, 442], "requires_fixtur": [0, 380, 442], "armitesthelp": [0, 35, 225, 226, 380, 384, 442], "comparefileslinebylin": [0, 380], "comparelin": [0, 380], "rebaselinetextcomparison": [0, 380, 442], "mockrunlog": [0, 380], "bufferlog": [0, 380, 381], "logcount": [0, 380, 381], "refsmallreactorshufflelog": [0, 380], "equilibriumshuffl": [0, 380, 382], "getfactorlist": [0, 216, 220, 380, 382, 494, 503], "test_app": [0, 380], "testplugin1": [0, 380, 383], "testplugin2": [0, 380, 383], "testplugin3": [0, 380, 383], "testplugin4": [0, 380, 383], "testapp": [0, 380, 383], "testarmihighlevel": [0, 380, 383], "test_armitesthelp": [0, 380], "testarmitesthelp": [0, 380, 384], "test_cartesian": [0, 380, 417, 418], "cartesianreactortest": [0, 283, 352, 361, 380, 385], "test_context": [0, 380], "testcontextseri": [0, 380, 386], "test_interfac": [0, 380], "dummyinterfac": [0, 380, 387], "testcodeinterfac": [0, 380, 387], "testtextprocessor": [0, 380, 387], "testtightcoupl": [0, 204, 210, 212, 380, 387], "test_lwrinput": [0, 380], "c5g7reactortest": [0, 380, 388], "test_mpiact": [0, 380, 417, 422], "mpiitertest": [0, 380, 389], "queueactionstest": [0, 380, 389], "passer": [0, 365, 380, 381, 389], "test_mpifeatur": [0, 380], "failinginterface1": [0, 380, 390], "failinginterface2": [0, 380, 390], "failinginterface3": [0, 380, 390], "mockinterfac": [0, 3, 13, 16, 380, 390], "mpioperatortest": [0, 380, 390], "bcastaction1": [0, 380, 390], "bcastaction2": [0, 380, 390], "mpidistributestatetest": [0, 380, 390], "mpipathtoolstest": [0, 380, 390], "testcontextmpi": [0, 380, 390], "test_mpiparamet": [0, 380], "mocksyncpc": [0, 380, 391], "makecomp": [0, 380, 391], "synchronizationtest": [0, 380, 391], "test_notebook": [0, 380], "notebooktest": [0, 380, 392], "runnotebook": [0, 380, 392], "test_plugin": [0, 380], "pluginflags1": [0, 380, 393], "sillyaxialexpansionchang": [0, 380, 393], "sillyaxialplugin": [0, 380, 393], "beforereactorplugin": [0, 380, 393], "testpluginregistr": [0, 380, 393], "testpluginbas": [0, 380, 393], "testplugin": [0, 234, 270, 280, 380, 393], "test_runlog": [0, 380], "testrunlog": [0, 380, 394], "testrunlogg": [0, 380, 394], "test_test": [0, 380], "testcomparefil": [0, 380, 395], "test_user_plugin": [0, 380, 490], "userpluginflag": [0, 380, 396], "userpluginflags2": [0, 380, 396], "userpluginflags3": [0, 380, 396], "userpluginbaddefinesset": [0, 380, 396], "userpluginbaddefineparameterrenam": [0, 380, 396], "userpluginonprocesscoreload": [0, 380, 396], "upinterfac": [0, 380, 396], "userpluginwithinterfac": [0, 380, 396], "testuserplugin": [0, 380, 396], "util": [0, 2, 4, 32, 38, 42, 62, 67, 78, 199, 201, 213, 215, 221, 227, 235, 282, 289, 290, 292, 314, 321, 329, 332, 334, 374, 378, 390, 393, 442, 443, 446, 449, 457, 459, 461, 464, 465, 468, 475, 476, 479, 481, 483, 484, 486, 488, 490, 494, 496, 503], "getfilesha1hash": [0, 397, 442], "copywithoutblock": [0, 397, 442], "getpowerfract": [0, 397, 442], "getcyclenam": [0, 397, 442], "getavailabilityfactor": [0, 397, 442], "getsteplength": [0, 397, 442], "getcyclelength": [0, 397, 442], "getburnstep": [0, 397, 442], "hasburnup": [0, 397, 442], "getmaxburnstep": [0, 397, 442], "getcumulativenodenum": [0, 397, 442], "getcyclenodefromcumulativestep": [0, 397, 442], "getcyclenodefromcumulativenod": [0, 397, 442], "getnodespercycl": [0, 397, 442], "getprevioustimenod": [0, 397, 442], "trypickleonallcont": [0, 397, 442], "dotestpickleonallcontents2": [0, 397, 442], "mypickl": [0, 397, 442], "save": [0, 7, 40, 79, 205, 237, 260, 287, 292, 301, 310, 329, 330, 343, 367, 397, 413, 415, 416, 446, 451, 453, 481, 484, 489, 503], "trypickleonallcontents3": [0, 397, 442], "classesinhierarchi": [0, 397, 438, 442], "slantsplit": [0, 397, 442], "prependtolist": [0, 397, 442], "capstrlen": [0, 397, 442], "list2str": [0, 397, 442], "createformattedstrwithdelimit": [0, 397, 442], "plotmatrix": [0, 397, 442], "usernam": [0, 397, 442], "mergeabledict": [0, 79, 397, 442], "merg": [0, 1, 165, 166, 167, 168, 183, 189, 199, 201, 202, 203, 240, 287, 307, 316, 383, 397, 483, 486, 500], "safecopi": [0, 397, 442, 486], "asciimap": [0, 292, 397, 484], "asciimapcartesian": [0, 397, 398], "asciimaphexthirdflatsup": [0, 397, 398], "asciimaphexfullflatsup": [0, 397, 398], "asciimaphexfulltipsup": [0, 397, 398], "asciimapfromgeomanddomain": [0, 397, 398], "codetim": [0, 397, 438, 485], "getmastertim": [0, 397, 399], "mastertim": [0, 397, 399], "customexcept": [0, 397, 483], "warn": [0, 3, 5, 79, 90, 105, 201, 202, 212, 240, 284, 300, 310, 333, 365, 374, 381, 388, 394, 397, 400, 402, 412, 439, 442, 447, 453, 488, 490, 493, 495, 503, 505], "warn_when_root": [0, 397, 400], "inputerror": [0, 397, 400], "settingexcept": [0, 397, 400], "invalidsettingsstopprocess": [0, 397, 400], "nonexistentset": [0, 397, 400], "invalidsettingsfileerror": [0, 397, 400], "nonexistentsettingsfileerror": [0, 397, 400], "densitytool": [0, 397, 421, 459], "getndensfrommass": [0, 397, 401], "getmassfract": [0, 397, 401], "calculatemassdens": [0, 397, 401], "calculatenumberdens": [0, 397, 401], "getmassingram": [0, 397, 401], "formatmaterialcard": [0, 397, 401, 459], "filternuclidelist": [0, 397, 401], "normalizenuclidelist": [0, 397, 401], "expandelementalmassfracstonuclid": [0, 397, 401], "expandelementalnuclidemassfrac": [0, 397, 401], "getchem": [0, 397, 401], "applyisotopicsmix": [0, 397, 401], "directorychang": [0, 215, 397, 403, 422, 484], "temporarydirectorychang": [0, 273, 397, 402, 484], "forcedcreationdirectorychang": [0, 47, 273, 397, 402], "directorychangerfactori": [0, 397, 402], "directorychangersmpi": [0, 397], "mpidirectorychang": [0, 397, 403, 423, 486], "dynamicimport": [0, 397], "getentirefamilytre": [0, 397, 404], "auto": [0, 3, 5, 8, 78, 105, 147, 215, 251, 282, 284, 291, 310, 356, 359, 375, 397, 405, 424, 443, 453, 483, 484, 503], "grideditor": [0, 68, 397, 503], "hexagon": [0, 46, 126, 176, 282, 283, 284, 287, 296, 299, 300, 302, 304, 305, 306, 307, 308, 310, 311, 316, 317, 330, 334, 338, 341, 353, 354, 355, 356, 397, 398, 425, 446, 465, 467, 469, 475, 481, 486, 488, 494, 499, 503, 504], "area": [0, 26, 55, 175, 221, 265, 282, 284, 287, 304, 305, 306, 307, 309, 310, 316, 324, 339, 353, 354, 355, 359, 397, 407, 425, 436, 440, 451, 480, 486, 490, 494, 498, 499, 500], "side": [0, 27, 220, 287, 305, 306, 316, 338, 339, 380, 397, 407, 413, 460], "corner": [0, 191, 221, 287, 307, 310, 336, 339, 343, 346, 397, 398, 407, 418, 425, 486, 499], "pitch": [0, 15, 287, 292, 305, 306, 307, 316, 317, 330, 334, 335, 336, 339, 341, 342, 352, 354, 380, 397, 407, 469, 488, 493, 494, 495, 503, 504], "numringstoholdnumcel": [0, 397, 407], "numpositionsinr": [0, 397, 407, 425], "totalpositionsuptor": [0, 397, 407, 425], "getindexofrotatedcel": [0, 397, 407, 486], "iter": [0, 3, 5, 9, 10, 33, 48, 79, 80, 156, 205, 212, 237, 239, 251, 255, 258, 284, 287, 310, 317, 330, 338, 341, 345, 349, 380, 397, 409, 413, 415, 416, 424, 426, 434, 449, 465, 467, 486, 490, 501, 503, 506], "flatten": [0, 3, 9, 17, 152, 397, 408, 449, 505], "chunk": [0, 10, 287, 397, 405, 408, 439, 449, 452], "split": [0, 46, 152, 284, 287, 317, 328, 336, 338, 343, 380, 397, 408, 449, 481, 484, 494, 498, 503], "unpackbinarystr": [0, 397, 408], "packbinarystr": [0, 397, 408], "unpackhexstr": [0, 397, 408], "packhexstr": [0, 397, 408], "sequenc": [0, 3, 4, 5, 7, 48, 56, 57, 61, 105, 212, 215, 255, 282, 289, 290, 291, 292, 293, 294, 310, 341, 346, 356, 397, 405, 408, 413, 415, 416, 446, 480, 481, 503], "pivot": [0, 397, 408], "mathemat": [0, 105, 397, 427], "average1dwithintoler": [0, 329, 397, 409], "converttoslic": [0, 397, 409], "efmt": [0, 397, 409], "expandrepeatedfloat": [0, 397, 409], "findclosest": [0, 397, 409], "findnearestvalu": [0, 397, 409], "findnearestvalueandindex": [0, 397, 409], "fixthreedigitexp": [0, 397, 409], "getfloat": [0, 397, 409], "getstepsfromvalu": [0, 397, 409], "ismonoton": [0, 397, 409], "linearinterpol": [0, 397, 409], "minimizescalarfunc": [0, 397, 409], "newtonsmethod": [0, 397, 409], "parabolafrompoint": [0, 397, 409], "parabolicinterpol": [0, 397, 409], "relerr": [0, 397, 409], "resamplestepwis": [0, 397, 409, 427], "rotatexi": [0, 397, 409], "outputcach": [0, 397], "api": [0, 3, 6, 282, 310, 397, 434, 443, 446, 448, 452, 453, 468, 481, 484, 488, 493, 503], "retrieveoutput": [0, 397, 410], "store": [0, 3, 4, 5, 9, 10, 20, 23, 27, 33, 44, 46, 48, 79, 105, 154, 156, 171, 173, 176, 179, 183, 196, 201, 205, 220, 240, 255, 284, 287, 294, 307, 310, 313, 314, 315, 316, 323, 329, 330, 332, 333, 338, 340, 341, 343, 345, 346, 347, 374, 397, 405, 408, 410, 415, 421, 446, 451, 452, 483, 484, 488, 490, 498, 499, 500, 503, 504, 505, 506], "deletecach": [0, 397, 410], "cachecal": [0, 397, 410], "pars": [0, 38, 40, 48, 61, 65, 67, 219, 333, 380, 397, 429, 434, 439, 486, 503], "tryliteralev": [0, 397, 411], "parsevalu": [0, 397, 411], "datetimefromstr": [0, 397, 411], "pathtool": [0, 397, 430], "armiabspath": [0, 397, 412], "copyorwarn": [0, 397, 412], "isfilepathnew": [0, 397, 412], "isaccess": [0, 397, 412], "separatemoduleandattribut": [0, 397, 412], "importcustompymodul": [0, 397, 412, 430], "moduleandattributeexist": [0, 397, 412], "cleanpath": [0, 397, 412, 430], "plot": [0, 23, 26, 27, 29, 46, 50, 168, 198, 203, 220, 262, 317, 341, 397, 415, 431, 433, 451, 460, 461, 464, 465, 467, 468, 470, 475, 477, 478, 479, 481, 483, 484, 486, 488, 489, 490, 491, 493, 495, 496, 503], "colorgener": [0, 397, 413], "plotblockdepthmap": [0, 397, 413, 488], "plotfacemap": [0, 397, 413, 461, 468, 476, 488], "close": [0, 2, 3, 5, 7, 78, 160, 166, 167, 220, 310, 365, 394, 397, 401, 402, 403, 413, 415, 439, 442, 461, 468, 476, 488, 503], "depthslid": [0, 397, 413], "plotassemblytyp": [0, 397, 413, 475], "plotblockflux": [0, 397, 413], "makehistogram": [0, 397, 413], "plotblockdiagram": [0, 397, 413], "plotnucx": [0, 397, 413], "properti": [0, 1, 3, 4, 5, 7, 22, 44, 48, 80, 81, 82, 83, 84, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 111, 112, 113, 114, 115, 116, 117, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 152, 156, 168, 170, 176, 183, 198, 199, 202, 203, 205, 209, 220, 227, 239, 240, 281, 287, 288, 289, 292, 293, 307, 310, 316, 329, 330, 331, 333, 335, 336, 338, 339, 340, 341, 343, 345, 346, 354, 356, 364, 367, 373, 380, 397, 432, 446, 448, 474, 480, 481, 483, 486, 488, 490, 491, 495, 500, 503], "areequ": [0, 397, 414], "numpyhackforequ": [0, 397, 414], "createimmutableproperti": [0, 397, 414], "immutablepropertyerror": [0, 397, 414], "unlockimmutableproperti": [0, 397, 414], "lockimmutableproperti": [0, 397, 414], "reportplot": [0, 397], "plotreactorperform": [0, 397, 415], "valuevstim": [0, 397, 415], "keffvstim": [0, 397, 415], "buvstim": [0, 397, 415], "xshistoryvstim": [0, 397, 415], "movesvscycl": [0, 397, 415], "plotcoreoverviewradar": [0, 397, 415], "createplotmetadata": [0, 397, 415], "plotaxialprofil": [0, 397, 415], "tabul": [0, 397, 434, 465, 486], "header": [0, 24, 27, 365, 397, 434, 442, 448, 451, 453, 465, 484, 506], "column": [0, 27, 167, 168, 183, 203, 397, 398, 415, 434, 439, 486, 494], "align": [0, 316, 329, 397, 407, 413, 434, 481, 503, 507], "width": [0, 220, 221, 225, 336, 341, 397, 405, 467, 477, 501], "line": [0, 4, 27, 40, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 138, 147, 167, 205, 213, 241, 251, 282, 284, 287, 310, 311, 317, 330, 336, 338, 339, 354, 360, 367, 373, 375, 379, 380, 397, 398, 399, 409, 412, 418, 423, 427, 431, 434, 435, 439, 441, 444, 449, 451, 452, 453, 467, 480, 482, 486, 488, 490, 494, 503, 505, 509], "datarow": [0, 397, 416], "size": [0, 22, 27, 57, 166, 167, 203, 220, 310, 329, 330, 341, 361, 397, 398, 405, 409, 413, 416, 494, 495, 503], "tableformat": [0, 397, 416], "textwrapp": [0, 397, 416], "chain": [0, 156, 160, 164, 220, 237, 244, 293, 310, 334, 340, 397, 408, 415, 416, 477, 481, 503], "namedtupl": [0, 79, 340, 397, 416], "partial": [0, 176, 191, 251, 282, 287, 292, 330, 339, 365, 397, 408, 416, 503], "reduc": [0, 5, 284, 310, 329, 334, 338, 341, 345, 361, 397, 416, 483, 488, 503], "zip_longest": [0, 397, 416], "textprocessor": [0, 397, 435], "scientific_pattern": [0, 397, 439], "floating_pattern": [0, 397, 439], "decimal_pattern": [0, 397, 439], "filemark": [0, 397, 439], "resolvemarkupinclus": [0, 397, 435, 439], "findyamlinclus": [0, 397, 439], "sequentialread": [0, 397, 439], "sequentialstringioread": [0, 397, 439], "smartlist": [0, 397, 439], "triangl": [0, 283, 304, 305, 308, 339, 355, 397, 436, 503], "gettrianglearea": [0, 397, 436, 440], "gettrianglecentroid": [0, 397, 440], "checkifpointisintriangl": [0, 397, 440], "unit": [0, 11, 16, 54, 55, 59, 60, 77, 78, 81, 91, 94, 105, 114, 121, 123, 126, 131, 137, 162, 172, 176, 177, 201, 270, 280, 287, 300, 323, 326, 327, 330, 334, 335, 336, 341, 343, 346, 354, 373, 380, 389, 392, 395, 397, 407, 419, 429, 430, 437, 445, 447, 453, 480, 484, 486, 490, 494, 498, 499, 500, 501, 503, 508], "gettk": [0, 397, 441], "gettc": [0, 397, 441, 490], "gettf": [0, 397, 441], "gettemperatur": [0, 397, 441], "gettmev": [0, 397, 441], "convertmmhgtopasc": [0, 397, 441], "convertbartopasc": [0, 397, 441], "convertatmtopasc": [0, 397, 441], "sanitizeangl": [0, 397, 441], "getxylineparamet": [0, 397, 441], "pluginmanag": [0, 1, 282, 442, 448], "getset": [0, 1, 366, 367], "getparamrenam": [0, 1], "registerpluginflag": [0, 1], "registeruserplugin": [0, 1, 366, 367], "splashtext": [0, 1, 448, 490], "conftest": [0, 442], "pytest_sessionstart": [0, 77, 442], "bootstraparmitestenv": [0, 77, 442], "context": [0, 29, 45, 48, 152, 260, 287, 294, 333, 386, 390, 397, 402, 442, 449, 453, 477, 481, 483, 495, 505], "mode": [0, 3, 5, 61, 66, 67, 78, 86, 148, 153, 156, 167, 251, 292, 330, 348, 374, 387, 442, 453, 486, 494, 501], "batch": [0, 64, 66, 67, 75, 78, 255, 304, 486, 494], "setmod": [0, 78], "activatelocalfastpath": [0, 78, 442], "getfastpath": [0, 78, 442, 483], "cleantempdir": [0, 78, 442], "cleanallarmitempdir": [0, 78, 442], "disconnectallhdfdb": [0, 78, 442], "stack_ord": [0, 79, 205, 442, 490], "befor": [0, 3, 5, 11, 20, 48, 79, 152, 202, 205, 213, 215, 219, 220, 221, 236, 239, 240, 265, 282, 283, 287, 307, 310, 315, 316, 317, 328, 330, 333, 343, 345, 365, 393, 394, 397, 398, 404, 409, 416, 443, 445, 448, 449, 451, 452, 468, 481, 482, 483, 484, 486, 488, 490, 499, 501, 503, 509], "preprocess": [0, 79], "fuel_manag": [0, 79], "fuel_perform": [0, 79], "cross_sect": [0, 79], "critical_control": [0, 79], "flux": [0, 20, 35, 79, 166, 168, 170, 172, 174, 176, 179, 180, 191, 201, 221, 239, 240, 244, 250, 251, 253, 261, 265, 282, 284, 287, 304, 307, 310, 328, 329, 330, 332, 343, 346, 354, 413, 446, 467, 468, 480, 481, 483, 484, 488, 499, 501, 503], "thermal_hydraul": [0, 79, 490], "reactivity_coeff": [0, 79], "transient": [0, 33, 79, 204, 209, 213, 451, 481, 503], "postprocess": [0, 79], "tightcoupl": [0, 16, 79, 253, 387, 442, 503, 506], "storepreviousiterationvalu": [0, 79], "isconverg": [0, 79, 387], "getlistdimens": [0, 79], "getdepend": [0, 79], "getinputfil": [0, 79], "distribut": [0, 2, 3, 5, 7, 23, 28, 79, 144, 152, 153, 166, 220, 221, 237, 253, 287, 310, 314, 315, 316, 341, 413, 449, 468, 476, 481, 484, 486, 488, 490, 494, 495, 499, 501, 503, 506], "duplic": [0, 22, 45, 57, 59, 79, 80, 105, 126, 130, 154, 243, 246, 249, 283, 284, 298, 310, 330, 341, 355, 365, 366, 367, 399, 410, 421, 424, 484, 494, 503, 505], "new": [0, 3, 4, 5, 6, 17, 20, 27, 31, 46, 48, 56, 57, 64, 66, 79, 81, 93, 105, 111, 121, 138, 143, 145, 148, 150, 152, 156, 183, 201, 203, 209, 213, 215, 218, 239, 240, 251, 255, 260, 265, 277, 282, 284, 287, 288, 291, 293, 304, 310, 315, 316, 317, 318, 321, 329, 330, 332, 341, 345, 346, 347, 349, 350, 351, 360, 361, 364, 367, 373, 378, 391, 393, 396, 397, 402, 403, 405, 407, 408, 409, 416, 439, 443, 444, 445, 447, 448, 451, 452, 461, 482, 483, 488, 489, 493, 494, 495, 503, 505, 506, 507, 509], "skip": [0, 56, 79, 163, 170, 176, 201, 205, 212, 240, 287, 329, 347, 361, 372, 373, 402, 413, 448, 477, 484, 486, 495, 503], "namecontain": [0, 79, 283, 310], "predistributest": [0, 79], "postdistributest": [0, 79], "attachreactor": [0, 79], "detachreactor": [0, 79], "gethistoryparam": [0, 20, 79, 250, 251], "getinterfac": [0, 20, 79, 204, 205, 446, 488], "interactinit": [0, 79, 205, 380, 390, 446], "interactbol": [0, 2, 3, 7, 20, 21, 22, 23, 28, 33, 79, 205, 237, 239, 240, 243, 244, 254, 255, 258, 330, 446], "interacteol": [0, 2, 3, 7, 20, 21, 22, 23, 28, 79, 205, 216, 219, 446], "interactboc": [0, 2, 20, 21, 23, 28, 79, 216, 219, 223, 225, 237, 239, 243, 244, 250, 251, 252, 253, 254, 255, 258, 446], "interacteoc": [0, 2, 3, 7, 23, 28, 79, 216, 219, 237, 239, 254, 255, 446, 486], "interacteverynod": [0, 2, 3, 7, 13, 16, 21, 22, 23, 28, 33, 79, 205, 237, 239, 250, 251, 252, 253, 254, 255, 258, 380, 390, 396, 446, 449, 490], "interactcoupl": [0, 2, 33, 79, 237, 239, 250, 251, 254, 255, 258, 446, 484, 503], "gettightcouplingvalu": [0, 79, 250, 251, 253], "interacterror": [0, 2, 3, 7, 79, 446], "interactdistributest": [0, 2, 3, 7, 79, 243, 244], "isrequesteddetailpoint": [0, 33, 79], "workeroper": [0, 2, 79, 152, 204, 205, 206, 216, 219, 220, 282, 380, 390], "enabl": [0, 3, 7, 48, 79, 95, 105, 171, 205, 240, 244, 248, 249, 251, 261, 284, 288, 289, 291, 312, 314, 330, 340, 367, 443, 446, 448, 453, 481, 483, 484, 486, 488, 493, 499, 503, 506, 507], "bolforc": [0, 79, 205], "writeinput": [0, 47, 48, 56, 79, 213, 215, 317, 475, 493], "readoutput": [0, 79], "specifyinput": [0, 58, 59, 79, 216, 219, 282], "updatephysicscouplingcontrol": [0, 79, 254, 255], "inputwrit": [0, 79, 256, 442], "write": [0, 3, 5, 6, 7, 8, 10, 12, 15, 17, 20, 23, 24, 25, 29, 32, 38, 44, 45, 48, 49, 56, 79, 146, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 215, 220, 225, 254, 255, 256, 257, 259, 266, 270, 284, 288, 298, 311, 318, 330, 346, 351, 359, 365, 367, 373, 374, 380, 394, 398, 399, 400, 409, 413, 446, 448, 451, 452, 453, 458, 462, 465, 475, 479, 481, 482, 483, 484, 486, 488, 490, 493, 494, 496, 503, 505, 506, 509], "outputread": [0, 79, 251, 253, 442], "getactiveinterfaceinfo": [0, 79, 205, 442], "isinterfaceact": [0, 79, 442], "interfaceinfo": [0, 79, 442, 490], "interfacecl": [0, 79], "kwarg": [0, 11, 79, 83, 90, 103, 105, 109, 132, 134, 135, 136, 137, 138, 152, 170, 198, 239, 240, 281, 282, 289, 290, 291, 292, 293, 294, 304, 330, 342, 346, 356, 365, 381, 396, 413, 420], "meta": [0, 156, 203, 214, 293, 300, 307, 343, 346, 356, 442], "mpiaction": [0, 22, 206, 215, 260, 282, 390, 423, 442, 446, 449, 484], "parallel": [0, 73, 78, 152, 205, 206, 255, 260, 310, 390, 446, 447, 453, 480, 481, 482, 503, 509], "invokeasmast": [0, 152, 449], "broadcast": [0, 28, 79, 152, 206, 310, 403, 449], "gather": [0, 2, 3, 5, 20, 56, 152, 287, 341, 449, 504], "invok": [0, 1, 38, 40, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 152, 237, 241, 320, 347, 414, 439, 443, 444, 446, 449, 482, 483, 509], "mpiflatten": [0, 152, 449], "mpiiter": [0, 152, 449], "invokehook": [0, 2, 22, 152, 237, 260, 380, 390, 417, 423, 449], "runact": [0, 152, 442, 449], "runactionsinseri": [0, 152, 442], "distributionact": [0, 152, 442], "mpiactionerror": [0, 152, 442], "distributestateact": [0, 152, 442, 449], "counter": [0, 79, 281, 284, 287, 336, 339, 345, 407, 408, 499], "unregist": [0, 281], "defineparamet": [0, 3, 11, 213, 227, 230, 237, 274, 277, 282, 490], "afterconstructionofassembli": [0, 274, 277, 282], "onprocesscoreload": [0, 213, 237, 282, 380, 396, 490], "defineflag": [0, 1, 282, 380, 393, 396, 503], "defineblueprintssect": [0, 3, 11, 282, 393], "defineset": [0, 58, 59, 213, 216, 227, 230, 231, 237, 243, 245, 263, 271, 274, 277, 278, 282, 366, 368, 369, 370, 371, 376, 378, 380, 396, 490], "definesettingsvalid": [0, 213, 216, 227, 230, 237, 274, 277, 282, 490], "defineguiwidget": [0, 282], "getoperatorclassfromruntyp": [0, 282], "defineparameterrenam": [0, 282, 380, 383, 396, 490], "userplugin": [0, 282, 396, 442, 484, 489, 503], "getnewpluginmanag": [0, 282, 442], "collectinterfacedescript": [0, 282, 442], "pluginerror": [0, 282, 442], "runlog": [0, 4, 29, 61, 212, 316, 374, 381, 394, 442, 447, 452, 484, 490, 505], "concatenatelog": [0, 365, 442], "raw": [0, 365, 439, 442, 449], "extra": [0, 1, 4, 33, 59, 288, 310, 340, 343, 365, 373, 442, 443, 446, 453, 503, 505], "debug": [0, 2, 22, 330, 365, 397, 442, 446, 453, 484, 489, 503, 505], "warningreport": [0, 365, 394, 442], "setverbos": [0, 365, 394, 442, 453], "getverbos": [0, 365, 442], "deduplicationfilt": [0, 365, 442], "filter": [0, 20, 22, 56, 154, 156, 310, 328, 332, 346, 360, 365, 401, 408, 413, 468, 505], "runlogg": [0, 365, 442], "fmt": [0, 365, 374, 397, 467], "allowstopdupl": [0, 365], "flush": [0, 365, 416, 484], "getduplicatesfilt": [0, 365], "nulllogg": [0, 365, 442], "addhandl": [0, 365], "createlogdir": [0, 365, 394, 442], "logfactori": [0, 365, 442], "k": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509], "class": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 215, 216, 219, 220, 224, 225, 226, 228, 230, 233, 234, 235, 237, 239, 240, 241, 244, 246, 248, 249, 251, 253, 255, 256, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 273, 277, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 313, 314, 315, 316, 317, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 408, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 443, 444, 446, 448, 449, 451, 452, 453, 483, 484, 486, 489, 491, 492, 493, 494, 503, 506], "simpl": [1, 3, 7, 16, 32, 38, 71, 75, 80, 81, 87, 94, 105, 114, 115, 152, 153, 161, 183, 196, 215, 239, 240, 282, 284, 287, 293, 324, 329, 333, 341, 348, 350, 354, 372, 393, 394, 396, 398, 416, 425, 430, 434, 438, 446, 449, 453, 456, 463, 479, 481, 484, 489, 490, 494, 495, 496, 503], "histor": [1, 3, 5, 7, 95, 307, 332, 333, 349, 365, 415, 446, 495, 503], "fun": [1, 220], "fact": [1, 330, 449, 494], "pattern": [1, 48, 56, 79, 166, 167, 215, 251, 310, 341, 356, 366, 435, 439, 446, 493, 499, 503], "mani": [1, 10, 20, 22, 35, 45, 48, 56, 61, 67, 105, 145, 153, 156, 164, 166, 167, 170, 201, 215, 227, 239, 244, 251, 255, 287, 305, 310, 316, 329, 330, 332, 340, 341, 343, 345, 346, 354, 366, 367, 380, 407, 408, 416, 434, 439, 445, 446, 451, 452, 454, 474, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 495, 496, 499, 500, 503, 505, 509], "wai": [1, 3, 5, 7, 11, 22, 46, 48, 50, 56, 90, 105, 152, 153, 164, 166, 184, 205, 215, 239, 251, 282, 284, 287, 310, 317, 329, 330, 332, 341, 343, 346, 354, 361, 364, 365, 373, 389, 409, 410, 416, 443, 446, 450, 451, 453, 480, 481, 482, 484, 488, 491, 494, 497, 503, 506, 509], "what": [1, 3, 4, 5, 10, 16, 20, 32, 33, 90, 105, 153, 154, 156, 163, 167, 199, 206, 215, 220, 221, 244, 255, 262, 282, 284, 287, 292, 311, 330, 332, 338, 343, 346, 347, 354, 366, 378, 398, 405, 408, 410, 418, 439, 444, 445, 446, 447, 448, 449, 453, 481, 488, 489, 491, 492, 494, 503, 505], "made": [1, 3, 5, 7, 45, 47, 56, 86, 105, 153, 244, 284, 287, 288, 289, 310, 316, 317, 330, 347, 380, 399, 402, 416, 434, 446, 449, 451, 453, 459, 481, 483, 484, 488, 490, 494, 495, 503], "heavi": [1, 62, 102, 154, 156, 287, 310, 330, 401, 413, 415, 480, 492, 499, 500, 501, 503], "e": [1, 3, 4, 5, 8, 9, 10, 22, 27, 33, 38, 48, 61, 78, 79, 80, 90, 94, 96, 97, 100, 143, 152, 153, 154, 155, 156, 161, 163, 164, 166, 167, 168, 176, 196, 201, 202, 203, 204, 205, 221, 227, 239, 240, 244, 251, 255, 282, 283, 284, 287, 288, 291, 292, 304, 307, 310, 314, 315, 317, 323, 329, 330, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 365, 367, 372, 373, 381, 397, 401, 408, 409, 412, 413, 416, 439, 443, 445, 446, 448, 449, 452, 475, 480, 481, 482, 483, 484, 488, 490, 493, 494, 499, 500, 503, 506, 509], "g": [1, 3, 5, 8, 10, 22, 33, 38, 48, 61, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 111, 112, 113, 114, 117, 134, 135, 136, 137, 138, 140, 141, 143, 152, 154, 155, 156, 161, 163, 164, 166, 168, 170, 176, 179, 185, 196, 201, 202, 203, 204, 205, 221, 227, 236, 239, 240, 251, 255, 260, 282, 284, 287, 288, 291, 292, 304, 307, 310, 317, 323, 329, 330, 332, 333, 334, 338, 339, 341, 343, 345, 346, 365, 373, 381, 397, 401, 408, 412, 413, 416, 445, 446, 448, 449, 452, 472, 475, 480, 481, 482, 483, 484, 488, 490, 491, 493, 494, 499, 500, 501, 503, 506, 509], "take": [1, 9, 20, 29, 35, 49, 57, 109, 134, 146, 152, 174, 203, 205, 206, 215, 220, 239, 240, 251, 282, 284, 287, 310, 330, 341, 343, 375, 397, 399, 409, 413, 416, 439, 448, 449, 450, 451, 452, 453, 481, 483, 488, 490, 491, 501, 503, 507], "bit": [1, 21, 34, 57, 163, 167, 174, 244, 282, 284, 287, 307, 310, 336, 405, 416, 449, 452, 477, 490, 494, 498, 504, 505], "effort": [1, 45, 287, 321, 329, 341, 409, 453, 481, 503], "refactor": [1, 291, 333, 443, 452, 486], "through": [1, 15, 33, 48, 70, 78, 114, 152, 153, 155, 156, 164, 168, 173, 178, 179, 180, 202, 203, 205, 206, 239, 244, 282, 284, 287, 304, 307, 310, 323, 329, 330, 332, 336, 338, 339, 340, 341, 343, 344, 345, 348, 355, 360, 361, 373, 375, 389, 396, 397, 401, 409, 413, 425, 437, 439, 446, 447, 448, 449, 451, 452, 453, 480, 481, 482, 484, 488, 490, 494, 497, 498, 499, 501, 503, 505, 506, 509], "highest": [1, 217, 220, 221, 242, 284, 349, 397, 468, 488, 499, 501, 503], "level": [1, 3, 4, 5, 27, 28, 33, 79, 80, 81, 156, 163, 166, 172, 174, 177, 201, 206, 220, 225, 240, 244, 246, 253, 260, 282, 287, 291, 292, 294, 298, 307, 310, 314, 316, 323, 329, 330, 334, 340, 346, 347, 348, 349, 354, 361, 365, 367, 368, 380, 408, 446, 449, 451, 452, 468, 481, 484, 490, 491, 492, 493, 494, 499, 501, 503, 505], "abstract": [1, 24, 27, 39, 44, 48, 50, 67, 79, 140, 152, 156, 166, 167, 174, 176, 251, 259, 307, 309, 310, 320, 338, 340, 341, 346, 355, 374, 490], "happen": [1, 2, 48, 59, 145, 146, 152, 156, 213, 220, 221, 251, 255, 282, 287, 302, 310, 317, 329, 330, 343, 366, 446, 448, 449, 451, 453, 491, 503, 505], "mostli": [1, 3, 5, 7, 59, 138, 251, 282, 294, 310, 317, 367, 381, 394, 396, 412, 477, 481, 495], "subclass": [1, 10, 50, 57, 61, 67, 75, 79, 80, 146, 163, 166, 179, 204, 220, 228, 240, 251, 255, 258, 259, 281, 282, 284, 304, 307, 309, 310, 317, 329, 332, 338, 343, 345, 346, 347, 373, 381, 404, 416, 439, 444, 446, 448, 449, 484, 490, 503], "free": [1, 105, 163, 287, 354, 413, 415, 448, 486, 503], "adopt": [1, 347, 448], "throw": [1, 484], "awai": [1, 336], "start": [1, 3, 7, 10, 27, 79, 156, 166, 173, 205, 220, 239, 240, 244, 251, 255, 311, 329, 330, 339, 341, 350, 397, 398, 399, 407, 408, 409, 413, 415, 416, 434, 439, 445, 446, 447, 448, 450, 451, 452, 453, 459, 460, 461, 482, 484, 485, 489, 493, 494, 500, 501, 503, 505, 509], "scratch": [1, 78, 287, 475, 488, 490, 494, 495, 503], "thei": [1, 4, 5, 35, 48, 57, 67, 78, 79, 80, 105, 126, 145, 152, 153, 156, 166, 173, 175, 176, 201, 203, 205, 206, 209, 215, 217, 221, 224, 237, 240, 244, 246, 251, 255, 266, 282, 284, 287, 288, 289, 294, 302, 304, 310, 311, 314, 330, 332, 334, 338, 340, 341, 342, 343, 345, 346, 347, 350, 354, 356, 361, 364, 366, 374, 375, 379, 380, 397, 399, 409, 416, 418, 431, 444, 445, 446, 448, 449, 451, 452, 453, 475, 481, 483, 484, 488, 490, 493, 494, 495, 499, 503, 505], "do": [1, 3, 4, 8, 16, 20, 21, 22, 28, 35, 45, 46, 47, 48, 50, 51, 59, 61, 65, 78, 79, 80, 105, 130, 152, 153, 154, 156, 163, 164, 166, 170, 201, 202, 215, 220, 221, 239, 244, 282, 284, 287, 310, 314, 317, 323, 329, 330, 332, 338, 340, 341, 342, 343, 345, 347, 364, 365, 374, 380, 387, 389, 390, 399, 402, 403, 408, 409, 410, 416, 422, 423, 431, 439, 443, 444, 446, 447, 448, 449, 451, 453, 468, 481, 482, 483, 488, 490, 491, 493, 494, 495, 501, 503, 505, 509], "wish": [1, 3, 4, 5, 176, 244, 288, 289, 439, 448, 488, 490], "For": [1, 3, 4, 5, 8, 9, 10, 20, 27, 45, 50, 56, 57, 61, 78, 79, 104, 105, 140, 146, 152, 153, 154, 164, 165, 166, 170, 176, 183, 205, 208, 220, 240, 251, 255, 282, 287, 289, 292, 293, 304, 305, 306, 307, 310, 311, 316, 317, 323, 329, 330, 332, 333, 336, 338, 340, 341, 343, 346, 347, 354, 361, 373, 397, 398, 405, 408, 409, 416, 418, 439, 443, 445, 446, 448, 449, 451, 452, 453, 460, 461, 477, 481, 488, 490, 491, 492, 493, 494, 495, 498, 499, 501, 503, 505, 506], "descript": [1, 21, 22, 24, 38, 40, 46, 61, 67, 71, 105, 115, 166, 167, 196, 288, 292, 310, 330, 343, 346, 373, 412, 414, 416, 444, 451, 452, 453, 460, 481, 484, 488, 490, 494, 498, 499, 500, 501, 503, 505, 508], "can": [1, 3, 4, 5, 7, 9, 10, 11, 15, 17, 20, 22, 27, 33, 43, 45, 46, 47, 48, 49, 51, 56, 57, 59, 61, 62, 66, 67, 77, 78, 79, 80, 87, 90, 94, 105, 126, 130, 145, 152, 153, 156, 161, 163, 164, 166, 167, 168, 170, 173, 174, 176, 178, 180, 183, 188, 189, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 209, 212, 213, 214, 215, 216, 217, 219, 220, 221, 227, 228, 239, 240, 244, 246, 248, 251, 255, 258, 260, 265, 266, 270, 273, 282, 284, 287, 288, 291, 292, 293, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 314, 317, 323, 325, 328, 329, 330, 331, 332, 333, 334, 336, 338, 340, 341, 343, 345, 346, 347, 350, 354, 355, 359, 361, 364, 365, 367, 373, 374, 375, 378, 380, 381, 387, 390, 392, 393, 394, 396, 397, 399, 401, 404, 405, 407, 408, 409, 412, 413, 416, 418, 424, 434, 436, 439, 443, 444, 445, 446, 448, 449, 451, 452, 453, 460, 461, 474, 475, 476, 477, 480, 481, 482, 483, 484, 486, 488, 490, 491, 493, 494, 495, 498, 503, 504, 505, 506, 507, 509], "program": [1, 117, 343, 344, 375, 450, 452, 453, 480, 481, 490, 493, 503], "actual": [1, 3, 5, 35, 46, 78, 79, 164, 166, 167, 205, 208, 213, 216, 220, 239, 240, 287, 300, 303, 307, 310, 317, 333, 338, 339, 340, 341, 343, 346, 367, 374, 380, 398, 413, 439, 443, 444, 448, 453, 468, 477, 484, 490, 494, 495, 503], "appropri": [1, 3, 8, 21, 22, 27, 33, 48, 59, 77, 79, 155, 163, 166, 176, 179, 212, 229, 237, 261, 276, 282, 289, 290, 323, 329, 343, 355, 387, 390, 396, 439, 449, 460, 461, 481, 482, 490, 503, 509], "__main__": [1, 446, 448, 475, 477], "expect": [1, 3, 4, 7, 32, 75, 80, 102, 150, 160, 163, 167, 170, 198, 218, 220, 221, 239, 244, 255, 265, 282, 284, 288, 293, 298, 304, 310, 316, 318, 323, 325, 330, 331, 355, 362, 365, 380, 389, 404, 410, 411, 416, 446, 448, 449, 454, 479, 488, 490, 491, 493, 496, 503, 506], "m": [1, 40, 67, 70, 71, 78, 81, 84, 93, 94, 96, 97, 98, 100, 102, 105, 113, 114, 130, 132, 133, 134, 137, 143, 166, 167, 172, 176, 341, 390, 397, 409, 416, 423, 444, 446, 450, 452, 453, 474, 482, 483, 490, 493, 495, 498, 499, 501, 505, 509], "myapp": [1, 444, 448, 490], "grab": [1, 15, 20, 153, 284, 367, 488, 505], "ridabl": 1, "develop": [1, 22, 48, 77, 145, 153, 220, 244, 282, 283, 287, 310, 316, 332, 347, 353, 375, 399, 409, 414, 443, 444, 445, 446, 448, 452, 453, 475, 480, 481, 490, 495, 503, 506], "dict": [1, 3, 5, 7, 22, 48, 50, 79, 80, 105, 156, 161, 167, 170, 201, 203, 220, 239, 240, 246, 255, 282, 283, 290, 292, 293, 304, 307, 310, 313, 317, 318, 323, 330, 331, 343, 345, 346, 351, 361, 372, 374, 397, 401, 405, 414, 415, 416, 434, 477, 493], "dictionari": [1, 3, 4, 5, 48, 79, 81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143, 153, 154, 156, 161, 170, 196, 220, 239, 240, 242, 244, 246, 255, 282, 291, 292, 304, 310, 318, 323, 329, 330, 331, 343, 345, 346, 351, 361, 367, 372, 373, 397, 401, 405, 408, 415, 416, 434, 446, 451, 484, 492, 503, 505], "renam": [1, 48, 215, 282, 330, 344, 349, 350, 374, 416, 422, 452, 483, 486, 488, 490, 493], "render": [1, 3, 5, 23, 24, 27, 28, 46, 316, 443, 448, 450, 451], "It": [1, 3, 4, 5, 10, 16, 20, 21, 22, 32, 44, 48, 57, 78, 80, 82, 84, 86, 87, 90, 91, 93, 94, 96, 97, 98, 100, 102, 105, 106, 112, 113, 114, 117, 138, 141, 143, 152, 153, 154, 164, 167, 170, 176, 179, 180, 203, 205, 215, 219, 220, 239, 240, 244, 255, 260, 282, 283, 284, 287, 291, 293, 310, 314, 316, 329, 330, 335, 336, 339, 340, 341, 342, 345, 346, 347, 348, 354, 360, 365, 367, 373, 381, 407, 408, 409, 410, 412, 413, 415, 446, 447, 448, 451, 452, 470, 480, 481, 488, 490, 494, 497, 499, 502, 503, 505], "also": [1, 3, 4, 5, 9, 10, 34, 45, 48, 50, 62, 67, 78, 80, 87, 105, 152, 153, 156, 164, 166, 167, 173, 179, 180, 202, 203, 205, 213, 217, 219, 220, 237, 239, 244, 251, 253, 255, 265, 282, 284, 287, 293, 306, 307, 310, 321, 323, 330, 332, 333, 336, 340, 343, 345, 346, 348, 350, 373, 388, 398, 405, 408, 409, 413, 416, 439, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 466, 467, 470, 473, 475, 480, 481, 482, 483, 486, 488, 490, 493, 494, 495, 497, 498, 499, 503, 505, 509], "perform": [1, 3, 5, 10, 20, 21, 47, 48, 51, 56, 61, 62, 66, 77, 78, 79, 88, 105, 152, 153, 166, 170, 203, 204, 212, 215, 219, 220, 227, 228, 229, 230, 231, 233, 234, 235, 236, 240, 251, 255, 282, 287, 288, 293, 310, 314, 316, 317, 329, 330, 332, 341, 345, 346, 355, 373, 380, 387, 408, 409, 412, 414, 446, 449, 452, 455, 458, 460, 465, 479, 480, 481, 483, 486, 488, 490, 492, 493, 494, 496, 499, 503, 504, 505, 506], "result": [1, 3, 5, 10, 20, 22, 27, 38, 48, 57, 62, 79, 83, 105, 121, 124, 131, 145, 152, 164, 166, 168, 184, 198, 202, 215, 227, 239, 240, 246, 251, 253, 255, 281, 282, 287, 294, 297, 304, 310, 314, 316, 323, 329, 330, 345, 346, 373, 378, 399, 408, 410, 416, 434, 439, 446, 449, 451, 453, 468, 480, 481, 482, 486, 489, 490, 499, 503, 504, 505, 506, 509], "cach": [1, 20, 48, 105, 130, 202, 281, 284, 307, 310, 328, 329, 330, 355, 374, 410, 428, 493, 503], "somewhat": [1, 4, 44, 166, 251, 304, 310, 330, 340, 341, 453, 481, 490, 503], "expens": [1, 79, 281, 287, 310, 449], "detect": [1, 3, 5, 8, 10, 78, 281, 282, 302, 346, 416], "chang": [1, 3, 4, 5, 6, 20, 48, 49, 78, 80, 105, 109, 152, 156, 174, 176, 213, 227, 237, 255, 282, 284, 287, 288, 293, 304, 307, 310, 313, 314, 315, 316, 317, 321, 325, 329, 330, 336, 338, 339, 341, 345, 346, 365, 373, 378, 380, 402, 403, 409, 414, 416, 434, 443, 444, 446, 447, 449, 452, 453, 465, 481, 482, 488, 490, 491, 493, 498, 499, 503, 506, 507, 509], "invalid": [1, 3, 57, 59, 79, 146, 147, 255, 287, 298, 302, 307, 310, 343, 355, 394, 396, 400, 425, 441, 453, 483, 484, 488, 493, 503], "recomput": [1, 105, 239, 287, 304, 307, 310], "specifi": [1, 2, 3, 5, 7, 14, 15, 16, 17, 18, 23, 31, 32, 35, 36, 37, 40, 42, 43, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 143, 150, 151, 156, 158, 159, 160, 161, 162, 164, 167, 174, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 205, 211, 212, 224, 225, 226, 233, 234, 235, 237, 239, 240, 241, 244, 246, 248, 249, 251, 253, 255, 258, 259, 260, 265, 266, 267, 268, 269, 270, 273, 280, 284, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 307, 310, 315, 317, 318, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 403, 405, 412, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 451, 453, 461, 471, 475, 483, 484, 486, 488, 489, 495, 498, 499, 503, 505, 506], "pass": [1, 3, 5, 7, 9, 10, 20, 26, 32, 44, 48, 57, 59, 78, 79, 80, 152, 156, 167, 199, 215, 239, 282, 284, 287, 288, 292, 310, 315, 323, 330, 336, 338, 341, 345, 346, 360, 366, 367, 373, 374, 375, 380, 391, 401, 402, 409, 437, 439, 444, 445, 448, 449, 453, 474, 477, 480, 493, 503], "pluginpath": 1, "These": [1, 4, 5, 20, 27, 35, 47, 49, 50, 61, 79, 109, 153, 156, 163, 164, 176, 201, 205, 207, 209, 217, 220, 224, 228, 240, 244, 246, 248, 251, 260, 282, 284, 292, 304, 305, 310, 317, 321, 329, 330, 332, 336, 343, 346, 370, 372, 373, 375, 381, 390, 398, 423, 431, 446, 449, 451, 452, 453, 480, 481, 482, 483, 490, 491, 494, 499, 503, 504, 505, 506, 507, 509], "mai": [1, 3, 4, 5, 20, 21, 27, 33, 34, 38, 44, 45, 47, 48, 50, 51, 56, 59, 61, 67, 70, 79, 80, 82, 105, 109, 152, 153, 154, 155, 156, 164, 166, 167, 174, 201, 204, 205, 209, 212, 215, 216, 220, 237, 240, 244, 246, 251, 255, 282, 284, 287, 288, 289, 292, 304, 307, 309, 310, 311, 314, 316, 317, 329, 330, 332, 333, 334, 338, 341, 343, 345, 346, 350, 356, 365, 366, 375, 387, 390, 394, 396, 405, 408, 413, 415, 439, 444, 446, 448, 451, 452, 453, 466, 481, 482, 483, 484, 488, 490, 493, 494, 495, 498, 499, 500, 503, 504, 505, 506, 509], "startup": [1, 205, 212], "full": [1, 3, 5, 11, 15, 20, 29, 48, 50, 54, 56, 57, 60, 61, 80, 90, 164, 168, 201, 202, 205, 240, 251, 287, 292, 293, 306, 310, 311, 316, 317, 325, 328, 330, 339, 340, 341, 348, 351, 359, 361, 362, 367, 374, 379, 398, 412, 413, 415, 418, 422, 446, 448, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 484, 488, 489, 490, 494, 495, 498, 499, 501, 503, 505, 508, 509], "namespac": [1, 10, 40, 80, 126, 213, 282, 346, 421, 448, 452, 484, 490, 503], "There": [1, 3, 5, 11, 22, 61, 79, 153, 166, 170, 185, 216, 225, 237, 244, 251, 287, 288, 293, 304, 316, 329, 330, 333, 343, 346, 351, 392, 408, 416, 445, 446, 449, 451, 452, 484, 490, 493, 494, 495, 497, 503, 505], "comma": [1, 452], "between": [1, 3, 4, 5, 7, 15, 20, 51, 65, 78, 79, 105, 161, 163, 164, 166, 167, 173, 176, 201, 203, 204, 205, 220, 221, 225, 239, 244, 251, 265, 282, 284, 287, 288, 293, 306, 310, 311, 321, 323, 324, 329, 330, 332, 336, 338, 339, 340, 341, 343, 346, 355, 373, 380, 397, 403, 407, 409, 413, 416, 441, 449, 451, 452, 467, 480, 481, 483, 484, 488, 490, 491, 492, 493, 494, 498, 499, 500, 503, 505, 506, 507], "individu": [1, 3, 5, 20, 47, 56, 61, 73, 79, 156, 205, 206, 220, 237, 244, 246, 287, 294, 310, 317, 328, 332, 355, 375, 399, 449, 452, 488, 489, 494, 503], "dot": [1, 341, 434, 450, 490], "repres": [1, 3, 5, 9, 47, 71, 78, 95, 105, 152, 154, 156, 163, 166, 170, 176, 201, 202, 203, 215, 220, 221, 239, 240, 244, 246, 251, 254, 255, 256, 265, 282, 283, 284, 287, 288, 290, 292, 305, 306, 307, 309, 310, 329, 330, 331, 334, 336, 338, 339, 340, 341, 343, 346, 349, 355, 356, 364, 366, 398, 405, 416, 446, 484, 485, 488, 490, 494, 495, 498, 499, 501, 503, 505], "stuff": [1, 5, 48, 288, 399, 403, 439, 449, 452, 453], "plugindir": 1, "pluginmod": 1, "plugincl": 1, "whatev": [1, 3, 4, 8, 56, 67, 215, 347, 399, 402, 409, 448, 449, 490, 503], "plugmod2": 1, "plugcls2": 1, "linux": [1, 29, 32, 481, 482, 484, 486, 490, 505, 509], "unix": [1, 490], "py": [1, 3, 7, 29, 120, 126, 156, 202, 207, 208, 213, 217, 220, 224, 310, 353, 354, 361, 390, 412, 423, 424, 426, 435, 437, 443, 446, 448, 449, 452, 453, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 483, 484, 486, 488, 494, 496, 503, 505], "meant": [1, 156, 282, 307, 329, 331, 367, 431, 445, 451, 453, 481, 495, 498, 505], "taken": [1, 239, 240, 310, 339, 343, 347, 355, 439, 493, 495], "though": [1, 4, 102, 166, 201, 253, 287, 310, 342, 354, 398, 416, 434, 439, 446, 453, 483, 490, 503], "public": [1, 4, 57, 81, 134, 166, 176, 310, 416, 447, 453, 483], "idea": [1, 209, 298, 307, 331, 349, 439, 444, 448, 449, 452, 481, 490], "differ": [1, 3, 4, 5, 8, 15, 22, 29, 48, 51, 56, 78, 79, 80, 83, 105, 126, 163, 166, 168, 174, 176, 194, 198, 204, 205, 207, 209, 215, 225, 236, 237, 239, 240, 244, 251, 255, 258, 284, 287, 293, 294, 299, 307, 310, 311, 315, 317, 323, 329, 330, 332, 339, 340, 343, 350, 354, 361, 367, 380, 387, 398, 402, 405, 409, 410, 413, 416, 421, 434, 449, 451, 452, 453, 460, 481, 484, 488, 490, 491, 494, 495, 498, 499, 503, 505, 506, 507], "regular": [1, 40, 48, 166, 179, 180, 339, 341, 416, 435, 439, 490, 495, 503], "becaus": [1, 2, 3, 5, 11, 15, 16, 20, 38, 57, 75, 78, 94, 105, 156, 161, 163, 164, 167, 174, 176, 198, 201, 203, 205, 217, 220, 227, 240, 242, 251, 255, 282, 284, 287, 288, 304, 306, 307, 310, 314, 316, 329, 330, 336, 338, 339, 340, 341, 346, 359, 364, 373, 389, 396, 397, 398, 403, 409, 410, 414, 415, 416, 439, 445, 448, 449, 451, 468, 481, 482, 488, 493, 503, 509], "As": [1, 3, 5, 6, 48, 56, 59, 80, 136, 166, 228, 282, 287, 294, 307, 310, 317, 332, 343, 397, 398, 421, 446, 448, 453, 481, 487, 488, 491, 494, 495, 499, 503, 505], "restrict": [1, 56, 202, 282, 284, 310, 317, 330, 343, 503, 506], "flexibl": [1, 3, 205, 215, 282, 329, 468, 481, 483, 490, 503], "power": [1, 29, 57, 96, 97, 100, 140, 145, 166, 168, 178, 179, 201, 205, 212, 213, 217, 219, 220, 221, 237, 239, 251, 253, 255, 287, 310, 317, 329, 330, 343, 366, 367, 397, 398, 438, 439, 446, 448, 451, 476, 481, 484, 488, 490, 493, 494, 495, 498, 499, 501, 503, 504, 505, 508], "usual": [1, 3, 5, 35, 80, 104, 156, 160, 176, 201, 220, 251, 282, 287, 330, 332, 346, 397, 448, 452, 453, 483, 495, 503], "textual": [1, 475, 495], "screen": [1, 413, 482, 490, 509], "want": [1, 2, 3, 5, 8, 11, 22, 33, 48, 56, 75, 79, 80, 105, 145, 163, 166, 167, 170, 174, 179, 213, 215, 220, 237, 239, 251, 255, 282, 284, 287, 292, 294, 304, 307, 310, 311, 329, 330, 343, 346, 347, 350, 354, 364, 365, 367, 397, 398, 405, 409, 413, 416, 424, 443, 446, 447, 448, 449, 451, 452, 453, 475, 481, 482, 488, 490, 493, 495, 503, 505, 506, 509], "handl": [2, 3, 5, 7, 15, 17, 27, 29, 44, 45, 48, 56, 61, 78, 79, 80, 93, 105, 152, 161, 163, 167, 206, 220, 225, 226, 237, 239, 282, 284, 287, 291, 292, 310, 318, 330, 332, 338, 341, 346, 354, 365, 373, 381, 397, 400, 408, 422, 435, 439, 481, 483, 484, 486, 488, 491, 495, 498, 503], "persist": [2, 3, 7, 332, 343, 446, 451, 481, 484], "static": [2, 3, 5, 9, 10, 11, 15, 17, 22, 28, 44, 56, 59, 61, 71, 79, 83, 152, 201, 205, 206, 209, 216, 219, 220, 230, 237, 251, 271, 277, 282, 283, 284, 287, 304, 310, 317, 329, 335, 336, 338, 339, 341, 342, 346, 373, 375, 378, 380, 383, 393, 396, 398, 399, 448, 459, 480, 481, 486], "cmd": [2, 219, 220, 282, 390, 449], "bool": [2, 3, 5, 7, 26, 29, 48, 56, 67, 79, 105, 156, 167, 168, 176, 202, 205, 212, 215, 220, 237, 240, 251, 255, 282, 284, 287, 292, 293, 294, 304, 307, 310, 314, 315, 317, 323, 329, 330, 333, 335, 336, 338, 339, 341, 342, 345, 346, 364, 366, 367, 373, 374, 375, 393, 397, 399, 402, 409, 412, 413, 415, 416, 439, 440, 486], "certain": [2, 61, 153, 205, 239, 251, 282, 284, 287, 293, 310, 311, 321, 332, 346, 375, 381, 397, 448, 449, 451, 460, 481, 483, 490, 493, 494, 503, 505], "action": [2, 16, 40, 67, 71, 212, 260, 307, 323, 346, 375, 389, 399, 403, 414, 444, 446, 449, 451, 484], "memori": [2, 3, 4, 5, 7, 20, 22, 48, 78, 79, 153, 206, 215, 239, 251, 282, 310, 330, 341, 343, 408, 413, 415, 449, 484, 486, 495, 498, 501, 503], "profil": [2, 22, 48, 399, 415, 445, 447, 452, 482, 484, 493, 503, 509], "small": [2, 174, 188, 193, 330, 332, 469, 480, 481, 484, 490, 491, 499, 503], "enough": [2, 38, 44, 57, 140, 161, 166, 170, 206, 221, 225, 258, 287, 310, 323, 407, 408, 452, 453, 481, 491, 494, 501, 505], "don": [2, 3, 10, 20, 79, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 154, 156, 163, 205, 209, 220, 249, 282, 287, 307, 310, 330, 361, 367, 407, 408, 409, 416, 427, 431, 444, 447, 449, 451, 474, 482, 488, 503, 505, 509], "undon": 2, "so": [2, 3, 4, 5, 7, 10, 20, 21, 22, 34, 38, 44, 45, 48, 50, 78, 79, 90, 105, 130, 145, 152, 153, 154, 156, 163, 167, 170, 176, 179, 203, 205, 215, 216, 220, 221, 239, 242, 244, 246, 248, 258, 259, 282, 284, 287, 288, 291, 292, 293, 298, 302, 304, 305, 307, 310, 311, 314, 316, 317, 329, 330, 332, 336, 338, 339, 340, 341, 343, 345, 346, 347, 349, 350, 354, 365, 367, 374, 380, 381, 397, 405, 407, 408, 409, 410, 413, 415, 416, 439, 443, 445, 446, 448, 449, 450, 451, 452, 453, 459, 470, 477, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 499, 501, 503, 505, 508, 509], "r": [2, 3, 5, 6, 7, 8, 10, 12, 16, 20, 21, 22, 26, 27, 28, 29, 33, 39, 44, 45, 46, 48, 59, 79, 93, 94, 116, 143, 152, 166, 167, 172, 176, 197, 198, 202, 205, 212, 216, 219, 220, 221, 225, 237, 239, 244, 251, 253, 255, 256, 258, 259, 260, 262, 282, 283, 287, 301, 306, 310, 311, 314, 317, 318, 320, 325, 329, 330, 331, 334, 339, 342, 343, 345, 348, 353, 361, 387, 390, 396, 397, 409, 413, 416, 446, 449, 451, 452, 459, 460, 461, 464, 467, 472, 477, 478, 479, 481, 483, 484, 488, 490, 493, 494, 495, 496, 503, 504, 505], "stage": [2, 26, 237, 262, 282, 451], "diagram": [2, 26, 156, 239, 304, 413, 443, 451, 484], "come": [2, 4, 45, 66, 78, 80, 105, 166, 173, 178, 201, 202, 204, 206, 213, 237, 251, 282, 287, 331, 343, 345, 346, 360, 391, 397, 405, 416, 439, 444, 446, 448, 453, 456, 463, 468, 477, 479, 481, 484, 488, 490, 491, 493, 494, 496, 503], "togeth": [2, 10, 46, 152, 202, 239, 240, 244, 287, 292, 334, 340, 347, 364, 439, 448, 451, 480, 490, 505], "end": [2, 3, 5, 7, 14, 20, 21, 22, 23, 26, 27, 46, 78, 79, 105, 153, 164, 166, 167, 170, 205, 253, 255, 262, 282, 291, 316, 340, 365, 387, 397, 398, 416, 446, 451, 453, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 491, 493, 494, 499, 503, 505, 507], "section": [2, 3, 5, 11, 23, 26, 27, 92, 137, 138, 153, 156, 164, 166, 168, 172, 174, 175, 177, 183, 196, 198, 200, 201, 202, 203, 213, 214, 225, 237, 239, 240, 244, 251, 253, 255, 260, 262, 265, 266, 267, 282, 284, 287, 292, 293, 298, 301, 310, 316, 330, 343, 351, 413, 415, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 460, 463, 464, 467, 472, 473, 479, 481, 482, 483, 484, 486, 487, 488, 494, 495, 496, 498, 499, 500, 505, 506, 507, 509], "creat": [2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 26, 27, 29, 31, 32, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 59, 60, 61, 62, 63, 67, 71, 75, 76, 78, 79, 105, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 172, 174, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 211, 212, 219, 220, 224, 225, 226, 233, 234, 235, 239, 240, 246, 248, 249, 253, 255, 256, 258, 259, 262, 265, 266, 267, 268, 269, 270, 273, 280, 282, 284, 287, 288, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 310, 317, 323, 324, 325, 326, 327, 328, 329, 330, 333, 338, 340, 341, 343, 344, 345, 346, 347, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 373, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 443, 445, 446, 447, 448, 449, 451, 456, 463, 467, 468, 469, 475, 476, 479, 481, 482, 484, 486, 488, 489, 493, 494, 495, 496, 503, 505, 507, 508, 509], "graph": [2, 27, 415, 451, 467], "across": [2, 48, 57, 92, 163, 166, 172, 174, 177, 310, 330, 343, 350, 364, 380, 391, 407, 412, 413, 449, 481, 483, 492, 493, 494, 498, 503, 504, 505], "timenodegrouppattern": [2, 3, 5], "versionmajor": [2, 3, 5], "versionminor": [2, 3, 5], "open": [2, 3, 5, 7, 11, 46, 61, 78, 166, 167, 236, 330, 397, 402, 403, 443, 444, 445, 452, 477, 481, 482, 486, 487, 488, 494, 503, 505, 509], "isopen": [2, 3, 5], "writesystemattribut": [2, 3, 5, 16], "grablocalcommithash": [2, 3, 5], "splitdatabas": [2, 3, 5], "filenam": [2, 3, 5, 6, 7, 75, 79, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 196, 205, 366, 392, 402, 412, 413, 451], "loadc": [2, 3, 5, 488], "loadblueprint": [2, 3, 5], "loadgeometri": [2, 3, 5], "writeinputstodb": [2, 3, 5], "readinputsfromdb": [2, 3, 5], "mergehistori": [2, 3, 5], "gentimestepgroup": [2, 3, 5], "getlayout": [2, 3, 5], "gentimestep": [2, 3, 5], "genauxiliarydata": [2, 3, 5], "getauxiliarydatapath": [2, 3, 5], "kei": [2, 3, 5, 20, 27, 48, 79, 105, 145, 156, 161, 167, 170, 198, 201, 203, 220, 239, 240, 243, 244, 246, 255, 266, 282, 283, 287, 288, 289, 290, 291, 292, 293, 294, 304, 307, 309, 310, 313, 323, 330, 343, 345, 356, 361, 366, 367, 372, 397, 398, 401, 405, 413, 415, 416, 434, 451, 459, 467, 468, 482, 488, 492, 493, 498, 499, 501, 503, 509], "geth5group": [2, 3, 5], "hastimestep": [2, 3, 5], "writetodb": [2, 3, 5, 10, 488], "synctosharedfold": [2, 3, 5], "loadreadonli": [2, 3, 5], "gethistorybyloc": [2, 3, 5], "gethistoriesbyloc": [2, 3, 5], "gethistori": [2, 3, 5, 7, 505], "h5db": [2, 3, 5, 6, 497], "initdb": [2, 3, 7, 488], "writedbeverynod": [2, 3, 7], "closedb": [2, 3, 7], "preprestartrun": [2, 3, 7], "loadstat": [2, 3, 7, 204, 205], "comparedb3": [2, 3, 14], "outputwrit": [2, 3, 4], "diffresult": [2, 3, 4], "geth5groupnam": [2, 3, 5], "packspecialdata": [2, 3, 5, 346, 505], "unpackspecialdata": [2, 3, 5, 346, 505], "collectblocknumberdens": [2, 3, 5], "jaggedarrai": [2, 3, 5, 17, 486], "layout": [2, 3, 5, 18, 282, 288, 294, 316, 329, 340, 351, 398, 451, 503, 505], "replacenoneswithnonsens": [2, 3, 10], "replacenonsensewithnon": [2, 3, 10], "passivedbloadplugin": [2, 3], "passthroughyaml": [2, 3, 11], "typedef": [2, 3], "group": [2, 3, 4, 5, 10, 23, 24, 27, 35, 45, 48, 153, 154, 166, 168, 170, 174, 175, 176, 179, 180, 183, 185, 194, 198, 201, 202, 203, 205, 225, 237, 239, 240, 242, 244, 251, 253, 255, 265, 268, 282, 287, 290, 291, 298, 307, 310, 317, 329, 330, 341, 346, 364, 401, 415, 446, 449, 451, 452, 464, 467, 478, 479, 484, 486, 488, 495, 496, 499, 501, 503, 505], "imag": [2, 23, 24, 25, 27, 309, 316, 329, 399, 413, 415, 431, 447, 450, 468, 484], "html": [2, 22, 23, 24, 27, 32, 48, 71, 84, 102, 166, 174, 306, 346, 413, 440, 443, 447, 481, 497, 503], "htmlfile": [2, 23, 25], "tag": [2, 23, 25, 27, 156, 251, 317, 439, 453, 503], "head": [2, 23, 25, 27, 262, 330, 451, 481, 503], "bodi": [2, 23, 25, 67, 152, 480], "img": [2, 23, 25, 27], "b": [2, 11, 23, 25, 44, 50, 56, 83, 94, 96, 97, 100, 117, 137, 138, 154, 156, 163, 176, 185, 201, 202, 220, 221, 236, 239, 244, 251, 283, 284, 287, 300, 302, 310, 315, 329, 330, 332, 343, 347, 352, 356, 361, 409, 439, 441, 446, 449, 465, 467, 468, 472, 476, 483, 484, 488, 490, 493, 494, 495, 499, 501, 503, 504, 506], "p": [2, 3, 23, 25, 27, 81, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 104, 105, 106, 112, 113, 114, 116, 117, 121, 137, 141, 143, 154, 164, 170, 172, 176, 177, 287, 306, 307, 310, 315, 329, 343, 345, 361, 407, 416, 439, 444, 449, 451, 467, 468, 476, 484, 488, 490, 494, 498, 499, 501, 503, 505], "A": [2, 3, 5, 9, 10, 11, 21, 23, 24, 25, 27, 28, 29, 33, 40, 44, 45, 47, 48, 56, 57, 59, 67, 71, 79, 80, 81, 84, 91, 94, 105, 106, 109, 113, 126, 138, 139, 140, 146, 152, 153, 154, 155, 156, 161, 164, 166, 167, 168, 172, 174, 176, 199, 201, 202, 203, 205, 212, 215, 217, 219, 220, 221, 225, 236, 239, 240, 244, 246, 251, 255, 282, 283, 284, 287, 289, 290, 291, 292, 294, 296, 299, 300, 302, 304, 305, 306, 307, 309, 310, 314, 317, 318, 323, 329, 330, 331, 332, 333, 339, 340, 341, 342, 345, 346, 347, 349, 350, 352, 356, 364, 365, 367, 373, 375, 380, 387, 390, 393, 394, 396, 397, 398, 405, 409, 413, 415, 416, 421, 439, 441, 443, 446, 448, 451, 452, 453, 467, 475, 477, 480, 481, 483, 488, 489, 490, 492, 494, 495, 498, 499, 500, 503, 504, 505], "titl": [2, 23, 24, 25, 27, 47, 48, 56, 57, 215, 273, 367, 397, 413, 415, 444, 451, 466, 467, 488, 491, 492, 493, 503], "h1": [2, 23, 25, 27], "h2": [2, 23, 25, 27, 85], "h3": [2, 23, 25], "h4": [2, 23, 25, 27], "ul": [2, 23, 25], "li": [2, 23, 25, 154, 176, 255, 305, 310, 330, 439], "style": [2, 23, 25, 48, 56, 105, 148, 156, 167, 282, 330, 343, 345, 351, 367, 374, 452, 481, 484, 503], "div": [2, 23, 25, 27, 451], "caption": [2, 23, 25, 27, 262, 451], "tbodi": [2, 23, 25], "thead": [2, 23, 25], "tr": [2, 23, 25], "th": [2, 10, 23, 25, 27, 134, 154, 176, 205, 310, 341, 416, 446, 490, 499, 501, 503, 506], "td": [2, 23, 25, 83, 116], "span": [2, 23, 25, 336, 365], "footer": [2, 23, 25], "link": [2, 23, 25, 27, 105, 164, 205, 220, 287, 291, 294, 300, 304, 307, 310, 313, 314, 317, 324, 330, 340, 355, 434, 446, 451, 452, 453, 480, 483, 494, 499, 504], "encode64": [2, 23, 25, 27], "writestandardreporttempl": [2, 23, 25], "newreportutil": [2, 23, 451], "insertblueprintcont": [2, 23, 26], "insertgeneralreportcont": [2, 23, 26], "comprehensivebolcont": [2, 23, 26], "insertdesigncont": [2, 23, 26], "insertblockdesignreport": [2, 23, 26], "insertcoredesignreport": [2, 23, 26], "insertendoflifecont": [2, 23, 26], "insertblockdiagram": [2, 23, 26], "insertmetat": [2, 23, 26], "insertsettingsdata": [2, 23, 26], "getpindesignt": [2, 23, 26], "insertareafractionsreport": [2, 23, 26], "createdimensionreport": [2, 23, 26], "insertcoreandassemblymap": [2, 23, 26], "newreport": [2, 23, 26, 451, 484], "reportcont": [2, 23, 26, 27, 262, 282, 447], "reportnod": [2, 23, 27], "timeseri": [2, 23, 27, 31, 262, 447], "reportstag": [2, 23, 27, 262, 282, 451], "reportinterfac": [2, 23, 29, 48, 446], "reportingutil": [2, 23], "writewelcomehead": [2, 23, 29], "getnodenam": [2, 23, 29, 32], "getsysteminfo": [2, 23, 29, 32], "getinterfacestacksummari": [2, 23, 29], "writetightcouplingconvergencesummari": [2, 23, 29], "writeassemblymasssummari": [2, 23, 29], "writecyclesummari": [2, 23, 29], "setneutronbalancesreport": [2, 23, 29], "summarizepindesign": [2, 23, 29], "summarizepowerpeak": [2, 23, 29], "summarizepow": [2, 23, 29], "makecoredesignreport": [2, 23, 29], "makeblockdesignreport": [2, 23, 29], "makecoreandassemblymap": [2, 23, 29], "test_historytrack": [2, 34], "runtutorialnotebook": [2, 34, 35], "testhistorytrack": [2, 34, 35], "testhistorytrackernomodel": [2, 34, 35], "test_memoryprofil": [2, 34], "testmemoryprofil": [2, 34, 36], "klasscountertest": [2, 34, 36], "test_snapshot": [2, 34], "mockreactorparam": [2, 34, 37, 250, 252, 253], "mockreactor": [2, 34, 37, 165, 197, 198, 213, 250, 252, 253, 272, 273], "testsnapshotinterfac": [2, 34, 37], "dumper": [2, 38, 45, 46, 291], "visfiledump": [2, 38, 39, 45, 46], "visfileentrypoint": [2, 38, 40], "vtkmesh": [2, 38, 42, 44], "createreactorblockmesh": [2, 38, 44], "createreactorassemmesh": [2, 38, 44], "createblockmesh": [2, 38, 44], "createassemmesh": [2, 38, 44], "vtk": [2, 38, 44, 482, 483, 490, 509], "limit": [2, 3, 5, 38, 105, 156, 220, 227, 251, 255, 282, 287, 288, 311, 341, 342, 405, 439, 448, 452, 481, 483, 490, 494, 498, 499, 500, 503, 506], "vtkdumper": [2, 38, 45], "xdmf": [2, 38, 43, 482, 483, 509], "xdmfdumper": [2, 38, 46], "tracker": [2, 35, 79, 415, 481], "add": [2, 4, 22, 23, 26, 27, 28, 44, 47, 48, 56, 57, 59, 67, 79, 105, 152, 154, 156, 172, 174, 177, 205, 209, 244, 251, 253, 262, 282, 283, 284, 287, 304, 310, 316, 317, 323, 325, 330, 331, 340, 343, 345, 346, 347, 349, 350, 354, 360, 364, 365, 367, 375, 381, 396, 397, 399, 412, 413, 415, 439, 443, 444, 445, 446, 449, 451, 452, 467, 477, 482, 483, 484, 486, 488, 490, 493, 495, 500, 503, 509], "eol": [2, 3, 33, 79, 205, 209, 219, 282, 446, 451, 488, 503, 505], "track": [2, 3, 4, 7, 22, 45, 48, 154, 164, 168, 220, 244, 251, 262, 284, 287, 310, 317, 330, 345, 367, 394, 439, 443, 453, 483, 484, 503], "adddetailassembliesbol": [2, 20], "addallfuelassem": [2, 20], "adddetailassemsbyassemnum": [2, 20], "gettrackedparam": [2, 20], "adddetailassembli": [2, 20], "getdetailassembli": [2, 20], "getdetailblock": [2, 20], "filtertimeindic": [2, 20], "writeassemhistori": [2, 20], "preloadblockhistoryv": [2, 20], "unloadblockhistoryv": [2, 20], "getblockhistoryv": [2, 20], "gettimestep": [2, 20], "cleanarmifil": [2, 21], "cleanlastcyclefil": [2, 21], "displaymemoryusag": [2, 22], "checkforduplicateobjectsonarmimodel": [2, 22], "getreferr": [2, 22], "countobject": [2, 22], "minprocessmemoryinmb": [2, 22, 501], "maxprocessmemoryinmb": [2, 22, 501], "printusag": [2, 22], "activatedefaultsnapshot": [2, 33], "respons": [3, 10, 48, 56, 152, 255, 282, 289, 293, 305, 307, 330, 347, 453, 488, 490, 503], "disk": [3, 48, 166, 205, 215, 489], "progress": [3, 10, 215, 446, 481, 505], "period": [3, 78, 92, 154, 205, 283, 292, 333, 355, 452, 467, 475, 494, 499, 501, 503], "primari": [3, 7, 61, 79, 152, 183, 205, 206, 225, 282, 283, 314, 330, 332, 446, 448, 449, 452, 488, 490, 493, 498, 501, 503, 505], "output": [3, 4, 5, 21, 22, 45, 47, 48, 62, 66, 67, 69, 79, 145, 146, 174, 176, 189, 205, 215, 220, 251, 273, 287, 292, 310, 316, 317, 329, 338, 341, 351, 367, 379, 381, 394, 402, 403, 408, 410, 416, 422, 428, 434, 439, 443, 446, 450, 451, 481, 483, 484, 489, 493, 495, 497, 502, 503], "follow": [3, 4, 10, 20, 33, 145, 153, 164, 166, 202, 204, 205, 213, 220, 227, 244, 246, 282, 307, 310, 316, 323, 329, 330, 332, 336, 339, 347, 374, 380, 408, 409, 412, 414, 416, 439, 443, 444, 446, 448, 449, 451, 452, 453, 481, 482, 488, 489, 490, 492, 494, 495, 497, 503, 504, 505, 506, 507, 509], "analysi": [3, 5, 20, 22, 33, 48, 56, 80, 166, 177, 204, 205, 213, 215, 227, 236, 244, 282, 364, 398, 410, 415, 446, 448, 451, 460, 477, 480, 488, 490, 493, 494, 495, 503, 504], "restart": [3, 5, 7, 16, 21, 209, 219, 220, 251, 293, 397, 399, 446, 484, 505], "select": [3, 5, 38, 79, 166, 221, 239, 240, 244, 273, 293, 346, 366, 397, 408, 409, 413, 425, 434, 468, 481, 488, 492, 503], "relat": [3, 5, 16, 34, 45, 47, 51, 56, 61, 78, 140, 154, 170, 192, 201, 213, 228, 231, 239, 245, 263, 271, 278, 287, 310, 329, 343, 345, 346, 347, 369, 370, 371, 399, 409, 412, 448, 483, 485, 490, 493, 498, 499, 503, 507], "associ": [3, 5, 18, 27, 45, 48, 50, 64, 140, 145, 152, 154, 165, 213, 237, 244, 289, 310, 330, 331, 334, 340, 341, 343, 345, 346, 347, 375, 397, 446, 448, 475, 490, 498, 503, 505], "repeat": [3, 168, 175, 219, 220, 225, 282, 316, 317, 330, 341, 400, 409, 413, 439, 447, 451, 481, 483, 503, 506], "yourself": [3, 90, 153, 413, 452], "dry": [3, 5, 81, 503], "practic": [3, 5, 90, 163, 282, 307, 323, 346, 347, 375, 405, 445, 447, 449, 453, 481, 490, 503], "share": [3, 33, 170, 199, 205, 206, 215, 244, 284, 321, 343, 347, 380, 398, 449, 494, 495, 503], "major": [3, 205, 213, 288, 341, 343, 415, 446, 451, 453, 481], "you": [3, 5, 7, 8, 11, 20, 21, 22, 33, 40, 48, 56, 57, 59, 67, 71, 79, 90, 103, 105, 136, 153, 154, 155, 156, 163, 164, 166, 170, 173, 174, 179, 192, 199, 201, 205, 213, 215, 220, 239, 240, 246, 251, 282, 284, 287, 292, 294, 298, 304, 307, 310, 311, 330, 331, 339, 340, 347, 348, 350, 354, 365, 367, 375, 390, 397, 398, 407, 409, 412, 413, 414, 415, 416, 423, 439, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 474, 475, 476, 479, 481, 482, 488, 489, 490, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 509], "1": [3, 10, 15, 16, 22, 27, 35, 44, 50, 55, 57, 66, 71, 75, 78, 79, 81, 82, 83, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 109, 111, 112, 113, 114, 117, 121, 126, 134, 136, 137, 138, 140, 141, 142, 143, 147, 148, 152, 154, 156, 160, 164, 167, 168, 170, 173, 174, 175, 176, 180, 183, 185, 188, 193, 198, 201, 205, 212, 220, 221, 236, 237, 239, 240, 246, 251, 253, 255, 260, 282, 284, 287, 292, 296, 299, 300, 302, 305, 306, 307, 309, 310, 313, 314, 316, 317, 321, 323, 325, 330, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 346, 351, 353, 354, 355, 356, 364, 373, 374, 375, 389, 396, 397, 398, 399, 401, 405, 407, 408, 409, 414, 415, 416, 418, 424, 438, 439, 446, 451, 452, 453, 459, 460, 461, 467, 469, 470, 471, 474, 475, 477, 481, 487, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 503, 506, 507], "origin": [3, 4, 5, 9, 15, 40, 46, 48, 56, 152, 153, 155, 160, 166, 191, 192, 203, 205, 206, 237, 239, 249, 265, 287, 292, 304, 310, 313, 317, 323, 325, 328, 329, 330, 332, 336, 339, 340, 374, 378, 397, 398, 402, 407, 449, 453, 475, 481, 484, 490, 494, 495, 499, 500, 503, 505], "were": [3, 4, 5, 56, 78, 152, 166, 206, 207, 217, 220, 225, 244, 282, 287, 294, 307, 310, 321, 329, 330, 331, 332, 343, 347, 381, 446, 451, 452, 481, 483, 484, 485, 488, 490, 495, 503, 505], "sql": [3, 79], "2": [3, 4, 10, 15, 22, 27, 35, 37, 55, 57, 78, 79, 84, 85, 91, 93, 94, 96, 97, 100, 105, 109, 111, 113, 114, 124, 126, 134, 136, 137, 138, 140, 147, 152, 153, 154, 155, 156, 164, 168, 172, 173, 176, 179, 180, 189, 201, 202, 212, 220, 221, 236, 237, 239, 240, 246, 249, 251, 287, 292, 300, 304, 305, 306, 307, 310, 316, 317, 321, 323, 325, 330, 332, 333, 334, 336, 339, 340, 341, 342, 343, 346, 351, 353, 354, 355, 356, 361, 364, 375, 390, 397, 398, 401, 407, 408, 409, 414, 415, 416, 418, 423, 424, 435, 438, 439, 441, 446, 451, 452, 459, 461, 467, 468, 469, 471, 472, 474, 476, 477, 481, 487, 488, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 503, 505, 506], "storag": [3, 7, 24, 78, 282, 340, 343, 350, 360, 415, 503], "wa": [3, 4, 5, 7, 11, 38, 78, 81, 93, 105, 152, 156, 160, 166, 167, 170, 185, 188, 192, 193, 198, 205, 220, 221, 237, 255, 282, 287, 288, 294, 307, 310, 316, 330, 332, 339, 340, 341, 349, 374, 375, 381, 392, 399, 409, 412, 439, 441, 451, 452, 453, 475, 481, 483, 484, 485, 488, 490, 493, 494, 495, 498, 503, 504, 505], "hdf5": [3, 4, 5, 9, 12, 35, 46, 78, 346, 405, 483, 486, 490, 493, 505], "requir": [3, 15, 21, 32, 33, 35, 38, 40, 46, 50, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 105, 152, 155, 156, 164, 201, 205, 212, 215, 220, 225, 239, 240, 241, 244, 248, 251, 255, 282, 283, 284, 287, 289, 291, 292, 293, 298, 306, 310, 311, 317, 318, 321, 330, 332, 334, 335, 341, 343, 346, 351, 359, 364, 372, 373, 379, 380, 387, 390, 396, 403, 407, 410, 439, 443, 444, 445, 449, 451, 452, 477, 480, 482, 483, 484, 485, 490, 491, 492, 494, 495, 498, 501, 503, 508, 509], "less": [3, 50, 105, 156, 164, 167, 168, 205, 221, 287, 306, 307, 316, 330, 333, 338, 399, 407, 408, 409, 415, 416, 439, 451, 452, 483, 484, 490, 493, 503], "extern": [3, 79, 81, 170, 176, 205, 215, 219, 239, 240, 251, 273, 282, 330, 401, 409, 446, 448, 452, 480, 481, 484, 490, 499, 503, 505], "infrastructur": [3, 282, 445, 447, 481], "howev": [3, 5, 8, 9, 10, 50, 79, 153, 196, 239, 287, 293, 304, 310, 317, 330, 332, 338, 343, 346, 354, 390, 405, 416, 448, 450, 451, 452, 488, 490, 494, 503], "did": [3, 4, 307, 310, 340, 439, 483, 495], "ghost": 3, "could": [3, 4, 5, 38, 48, 50, 56, 57, 79, 105, 153, 161, 163, 164, 196, 199, 202, 205, 213, 237, 240, 244, 251, 255, 287, 288, 293, 307, 330, 342, 343, 346, 373, 397, 407, 408, 409, 410, 412, 413, 439, 451, 453, 481, 484, 488, 490, 493, 495, 498, 499, 503, 505], "long": [3, 5, 33, 40, 67, 71, 105, 174, 205, 282, 287, 310, 339, 397, 398, 399, 416, 434, 444, 451, 453, 481, 490], "dimens": [3, 4, 5, 9, 26, 29, 50, 57, 79, 93, 98, 105, 168, 236, 239, 284, 287, 288, 291, 292, 298, 304, 305, 307, 309, 310, 321, 323, 336, 341, 346, 353, 355, 387, 398, 446, 471, 480, 483, 484, 486, 488, 494, 499, 503, 504, 507], "consist": [3, 48, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 152, 156, 160, 166, 167, 170, 172, 174, 177, 185, 201, 213, 215, 239, 255, 284, 287, 293, 310, 316, 323, 330, 338, 354, 356, 380, 398, 416, 425, 439, 449, 452, 480, 481, 483, 484, 490, 494, 499, 503], "inconveni": 3, "prone": [3, 311, 332, 333, 347, 481], "kept": [3, 105, 332], "schema": [3, 240, 282, 298, 366, 372, 373, 378], "permit": [3, 5, 10, 284, 310, 405, 483], "entir": [3, 5, 11, 79, 105, 167, 205, 239, 282, 287, 289, 292, 310, 314, 330, 333, 350, 367, 402, 412, 416, 418, 439, 452, 453, 461, 494, 495, 501, 503, 505], "written": [3, 4, 5, 7, 9, 16, 20, 45, 46, 48, 56, 59, 166, 167, 171, 173, 175, 176, 178, 179, 180, 184, 185, 189, 191, 192, 212, 301, 340, 346, 360, 367, 413, 446, 451, 452, 453, 481, 483, 484, 488, 495, 503], "recov": [3, 10, 66, 323, 505], "just": [3, 5, 6, 8, 10, 11, 20, 22, 34, 46, 47, 50, 59, 79, 80, 105, 114, 116, 145, 152, 153, 155, 163, 164, 166, 199, 206, 209, 217, 240, 251, 282, 283, 284, 287, 288, 292, 302, 304, 307, 310, 323, 329, 330, 338, 340, 341, 343, 354, 362, 365, 367, 394, 396, 397, 407, 408, 409, 413, 416, 430, 437, 439, 444, 448, 449, 451, 452, 453, 470, 481, 484, 488, 490, 492, 493, 494, 495, 503, 504, 505, 506], "improv": [3, 45, 48, 163, 282, 287, 332, 483, 484, 486, 487, 503, 506], "strategi": [3, 46], "larg": [3, 15, 79, 86, 145, 221, 237, 240, 248, 282, 310, 311, 329, 330, 361, 380, 397, 403, 404, 407, 413, 446, 449, 452, 481, 483, 490, 494, 498, 503, 504], "attribut": [3, 4, 5, 9, 10, 11, 25, 27, 56, 67, 79, 105, 152, 154, 156, 163, 168, 170, 176, 201, 202, 203, 239, 240, 244, 260, 265, 266, 282, 283, 288, 289, 290, 291, 292, 293, 294, 307, 310, 317, 328, 329, 330, 331, 334, 343, 345, 346, 347, 360, 372, 381, 412, 414, 416, 430, 438, 439, 444, 446, 449, 452, 483, 484, 485, 488, 489, 490, 503, 505], "special": [3, 4, 5, 10, 33, 47, 80, 98, 105, 156, 163, 164, 167, 174, 205, 220, 239, 240, 270, 282, 291, 306, 310, 330, 343, 346, 365, 390, 399, 412, 416, 439, 443, 446, 451, 453, 480, 483, 488, 490, 494, 505], "string": [3, 5, 8, 11, 27, 32, 34, 40, 57, 67, 71, 79, 80, 156, 167, 173, 174, 178, 179, 180, 196, 202, 205, 206, 212, 215, 220, 240, 255, 262, 282, 284, 287, 289, 290, 291, 292, 293, 294, 299, 304, 307, 310, 323, 330, 332, 333, 338, 339, 343, 346, 353, 358, 365, 367, 372, 373, 374, 378, 380, 394, 397, 398, 399, 401, 408, 409, 411, 413, 414, 416, 434, 439, 449, 452, 453, 483, 494, 498, 499, 503, 505], "symbol": [3, 105, 153, 154, 155, 156, 158, 401], "c00n00": [3, 5, 488], "attr": [3, 4, 5, 25, 307, 310, 346, 347, 412], "5_linkeddim": 3, "support": [3, 5, 6, 9, 10, 11, 20, 38, 44, 46, 48, 77, 79, 80, 87, 153, 156, 160, 163, 164, 166, 206, 207, 239, 244, 282, 287, 294, 317, 323, 336, 343, 346, 349, 351, 355, 365, 375, 394, 398, 405, 408, 416, 439, 446, 452, 453, 481, 483, 484, 486, 490, 495, 503, 505, 506, 507], "copi": [3, 5, 16, 33, 48, 79, 105, 152, 172, 174, 177, 205, 215, 228, 240, 242, 246, 251, 265, 273, 287, 292, 310, 329, 330, 340, 364, 367, 378, 397, 402, 408, 410, 412, 422, 443, 448, 452, 481, 483, 484, 485, 493, 494, 495, 503], "node": [3, 5, 7, 10, 11, 16, 20, 21, 22, 27, 28, 29, 33, 45, 61, 75, 78, 79, 152, 165, 176, 191, 202, 205, 206, 209, 212, 220, 237, 239, 251, 253, 255, 258, 284, 291, 293, 310, 330, 374, 390, 396, 397, 400, 403, 413, 415, 446, 449, 451, 480, 486, 488, 490, 499, 503, 505, 506, 508], "dataset": [3, 4, 5, 9, 46, 191, 505], "anoth": [3, 5, 33, 44, 48, 56, 57, 79, 134, 138, 145, 161, 164, 184, 196, 203, 220, 240, 251, 253, 282, 304, 307, 310, 311, 316, 317, 324, 329, 340, 341, 346, 375, 397, 409, 415, 416, 427, 439, 449, 451, 452, 453, 477, 481, 482, 486, 493, 500, 503, 507, 509], "refer": [3, 4, 5, 27, 48, 80, 81, 82, 84, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 112, 113, 117, 134, 137, 138, 140, 141, 143, 152, 153, 154, 155, 156, 167, 175, 196, 220, 240, 249, 284, 287, 292, 307, 310, 313, 314, 315, 330, 334, 354, 355, 367, 380, 397, 413, 439, 443, 446, 448, 449, 451, 453, 454, 479, 482, 484, 485, 486, 494, 496, 499, 501, 503, 505, 507, 509], "maintain": [3, 105, 139, 155, 156, 170, 205, 284, 310, 323, 347, 425, 460, 481, 482, 483, 503, 509], "previou": [3, 5, 21, 79, 145, 176, 189, 204, 209, 220, 221, 251, 282, 287, 310, 373, 397, 413, 439, 446, 483, 490, 495, 499, 503, 506], "old": [3, 4, 5, 17, 145, 146, 148, 150, 167, 282, 288, 294, 307, 310, 316, 346, 349, 351, 366, 373, 396, 402, 452, 481, 483, 484, 485, 486, 503, 505, 506], "cannot": [3, 4, 79, 80, 105, 152, 156, 204, 239, 240, 304, 307, 310, 311, 343, 344, 346, 347, 348, 355, 374, 380, 397, 409, 413, 414, 416, 424, 488, 490, 493, 503], "compress": 3, "locat": [3, 5, 9, 10, 17, 18, 40, 44, 48, 56, 78, 79, 148, 215, 220, 221, 225, 282, 283, 284, 287, 292, 294, 297, 310, 314, 315, 323, 325, 330, 331, 333, 334, 335, 336, 338, 339, 341, 342, 343, 346, 350, 351, 353, 354, 361, 363, 364, 367, 380, 398, 404, 425, 439, 446, 468, 482, 483, 484, 486, 488, 493, 495, 498, 499, 501, 503, 505, 509], "allow": [3, 4, 5, 7, 8, 11, 22, 40, 46, 48, 56, 57, 61, 67, 71, 79, 80, 105, 152, 153, 160, 163, 164, 166, 168, 174, 202, 205, 215, 219, 220, 221, 244, 251, 281, 282, 287, 288, 291, 293, 299, 304, 310, 316, 318, 329, 330, 331, 332, 340, 343, 345, 346, 365, 366, 372, 373, 374, 375, 397, 398, 405, 409, 410, 412, 416, 444, 445, 446, 448, 451, 452, 453, 460, 468, 481, 483, 484, 486, 493, 494, 495, 503, 506], "multiindex": 3, "4": [3, 5, 10, 22, 35, 55, 57, 78, 79, 81, 82, 83, 84, 85, 91, 109, 112, 113, 126, 137, 138, 140, 153, 154, 156, 160, 164, 167, 176, 185, 220, 221, 236, 237, 240, 287, 292, 300, 316, 317, 325, 330, 332, 333, 336, 339, 341, 346, 354, 355, 356, 397, 408, 416, 424, 435, 438, 445, 449, 459, 467, 468, 470, 475, 477, 481, 487, 488, 491, 492, 493, 494, 495, 503, 506, 507], "includ": [3, 5, 15, 27, 45, 48, 57, 62, 79, 80, 109, 138, 145, 153, 154, 164, 166, 170, 176, 183, 201, 205, 213, 216, 220, 236, 239, 240, 244, 251, 260, 262, 282, 287, 292, 293, 307, 310, 317, 329, 330, 332, 341, 343, 344, 347, 350, 356, 360, 361, 362, 370, 379, 397, 401, 405, 412, 416, 439, 443, 445, 446, 448, 452, 453, 460, 474, 477, 480, 481, 483, 484, 488, 490, 494, 497, 499, 503, 508], "compos": [3, 4, 24, 56, 333, 343, 349], "multipl": [3, 5, 27, 29, 48, 50, 51, 59, 62, 73, 78, 92, 152, 164, 176, 205, 215, 239, 240, 282, 287, 291, 297, 302, 307, 310, 315, 316, 317, 323, 324, 329, 330, 334, 340, 343, 354, 355, 358, 361, 364, 375, 394, 397, 409, 435, 449, 451, 452, 453, 481, 484, 488, 490, 493, 494, 498, 499, 500, 501, 503, 504], "have": [3, 4, 5, 7, 10, 14, 15, 16, 17, 18, 20, 27, 31, 32, 34, 35, 36, 37, 42, 43, 45, 46, 47, 48, 50, 54, 55, 56, 59, 60, 75, 76, 77, 78, 79, 80, 90, 105, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 145, 148, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 170, 176, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 205, 209, 211, 212, 213, 215, 219, 220, 221, 224, 225, 226, 233, 234, 235, 239, 240, 244, 248, 249, 253, 255, 258, 259, 262, 265, 266, 267, 268, 269, 270, 273, 280, 282, 284, 287, 288, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 310, 314, 315, 316, 317, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 336, 338, 340, 341, 343, 345, 346, 347, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 373, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 408, 409, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 474, 475, 480, 481, 482, 484, 488, 489, 490, 493, 494, 495, 499, 501, 503, 504, 505, 506, 507, 509], "effici": [3, 10, 57, 153, 163, 201, 240, 310, 328, 330, 333, 341, 345, 398, 460, 481, 484, 486, 494], "mean": [3, 4, 10, 93, 96, 97, 98, 100, 167, 215, 240, 258, 287, 310, 332, 339, 354, 367, 397, 407, 409, 446, 448, 452, 453, 481, 483, 494, 495, 498, 499, 503], "extract": [3, 5, 48, 66, 215, 220, 246, 256, 297, 310, 446, 480, 493], "pathlik": [3, 5, 6, 7], "serial": [3, 4, 5, 10, 152, 167, 237, 240, 283, 284, 289, 290, 291, 310, 343, 345, 346, 358, 360, 372, 373, 386, 483, 484, 486, 505], "push": [3, 5, 236, 354, 448, 452, 453, 483, 499], "aid": [3, 5, 213, 332, 343, 346, 350, 373, 483, 499], "pack": [3, 5, 10, 283, 287, 310, 341, 343, 346, 360, 483, 503], "unpack": [3, 5, 9, 10, 17, 48, 283, 310, 343, 346, 360, 408, 416, 483], "structur": [3, 4, 5, 9, 50, 56, 79, 87, 93, 105, 153, 154, 156, 163, 166, 167, 168, 170, 173, 174, 175, 178, 179, 180, 205, 207, 214, 215, 219, 220, 240, 242, 246, 251, 256, 268, 282, 283, 284, 288, 292, 293, 294, 318, 329, 330, 331, 332, 334, 338, 342, 343, 345, 349, 357, 372, 398, 446, 447, 465, 467, 480, 481, 483, 484, 486, 488, 490, 495, 499, 501, 503], "relationship": [3, 5, 334, 355, 507], "non": [3, 4, 5, 9, 17, 32, 78, 79, 105, 152, 167, 168, 202, 217, 239, 240, 251, 253, 256, 258, 268, 282, 284, 287, 292, 294, 297, 304, 306, 307, 310, 316, 323, 328, 329, 330, 333, 340, 341, 345, 346, 349, 354, 378, 400, 405, 410, 411, 413, 425, 444, 446, 453, 484, 486, 493, 499, 503, 505, 507], "doc": [3, 5, 22, 61, 93, 240, 283, 291, 310, 405, 414, 443, 446, 448, 452, 453, 466, 484, 488, 490, 495, 503], "w": [3, 5, 6, 12, 81, 84, 91, 93, 94, 96, 97, 100, 102, 105, 113, 114, 132, 133, 134, 137, 138, 140, 143, 147, 154, 156, 167, 236, 246, 300, 339, 361, 416, 439, 481, 488, 492, 493, 498, 499, 501], "compil": [3, 5, 288, 345, 347, 416, 443], "d": [3, 5, 20, 44, 80, 94, 140, 143, 154, 163, 164, 165, 168, 176, 220, 221, 282, 283, 284, 291, 292, 300, 307, 310, 311, 330, 332, 334, 335, 336, 339, 340, 341, 342, 351, 352, 356, 365, 416, 439, 441, 444, 446, 449, 452, 460, 461, 468, 469, 471, 481, 482, 488, 490, 494, 499, 503, 509], "n": [3, 5, 15, 77, 79, 84, 91, 93, 94, 114, 126, 136, 137, 147, 154, 164, 167, 172, 176, 177, 179, 201, 212, 236, 237, 287, 296, 299, 300, 302, 306, 307, 310, 317, 329, 335, 336, 339, 341, 342, 346, 356, 390, 397, 408, 413, 416, 423, 438, 445, 449, 452, 465, 466, 472, 473, 477, 481, 483, 488, 492, 493, 494, 499, 501, 503, 505], "try": [3, 5, 11, 29, 105, 201, 220, 251, 284, 287, 293, 298, 333, 343, 365, 367, 380, 390, 409, 412, 414, 421, 423, 446, 449, 452, 453, 474, 481, 488, 490, 492, 503], "local": [3, 5, 15, 73, 78, 215, 251, 287, 334, 340, 341, 365, 445, 449, 481, 483, 484, 490, 493, 499], "git": [3, 5, 416, 443, 452, 453, 481, 482, 484, 490, 509], "commit": [3, 5, 15, 443, 445, 447, 452, 490], "sure": [3, 5, 59, 67, 126, 150, 160, 166, 183, 192, 225, 266, 282, 287, 297, 298, 300, 302, 310, 343, 347, 354, 355, 356, 358, 361, 364, 375, 377, 378, 381, 390, 391, 392, 393, 405, 418, 422, 424, 431, 443, 448, 451, 452, 453, 481, 484, 490, 494, 495, 503], "doesn": [3, 5, 7, 21, 48, 56, 94, 95, 201, 202, 203, 205, 206, 287, 288, 307, 310, 316, 343, 345, 361, 380, 408, 412, 416, 422, 443, 448, 453, 490, 494, 495, 503], "instal": [3, 5, 390, 423, 443, 445, 450, 451, 453, 481, 483, 489, 490, 502], "Or": [3, 5, 331, 343, 365, 453, 482, 503, 509], "simpli": [3, 4, 5, 22, 79, 152, 155, 161, 185, 215, 220, 221, 282, 310, 341, 343, 354, 446, 449, 481, 488, 494, 495, 503], "insid": [3, 5, 22, 52, 75, 220, 227, 240, 282, 287, 304, 305, 310, 316, 340, 341, 396, 398, 436, 480, 490, 494, 499, 503, 505], "repo": [3, 5, 105, 445, 452, 453, 490], "hash": [3, 5, 15, 282, 329, 397, 453, 484, 488], "unknown": [3, 5, 11, 153, 154, 346, 486], "completedsuccessfulli": [3, 5], "cleanup": [3, 5, 21, 78, 156, 310, 484], "convers": [3, 4, 5, 54, 105, 164, 168, 173, 202, 213, 251, 293, 310, 311, 316, 317, 318, 324, 328, 329, 330, 333, 441, 458, 462, 479, 483, 484, 491, 496, 499, 501, 503], "keeptimestep": [3, 5], "tupl": [3, 4, 5, 7, 9, 10, 20, 22, 57, 71, 79, 84, 91, 105, 113, 138, 140, 155, 163, 205, 215, 220, 282, 284, 287, 310, 323, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 345, 346, 373, 374, 401, 408, 409, 413, 416, 434, 439, 452, 499, 500, 503, 505], "discard": [3, 5, 203, 239, 316, 448, 484], "except": [3, 5, 78, 152, 156, 160, 167, 176, 179, 201, 205, 282, 283, 287, 323, 332, 343, 345, 346, 358, 373, 374, 389, 400, 402, 405, 414, 420, 422, 439, 447, 453, 474, 481, 483, 494], "step": [3, 4, 5, 7, 15, 20, 46, 47, 152, 173, 178, 179, 180, 205, 212, 215, 219, 253, 287, 294, 310, 323, 329, 330, 334, 336, 338, 339, 341, 346, 353, 397, 409, 438, 443, 446, 448, 472, 481, 483, 484, 488, 490, 493, 494, 498, 499, 503, 505, 508], "retain": [3, 5, 9, 40, 67, 71, 79, 196, 220, 304, 310, 316, 346, 356, 374, 391, 483, 505], "separ": [3, 5, 24, 46, 56, 60, 80, 163, 205, 213, 240, 244, 310, 317, 328, 329, 330, 332, 341, 397, 403, 412, 413, 416, 434, 452, 481, 482, 484, 490, 494, 495, 503, 508, 509], "exot": [3, 5], "analys": [3, 5, 49, 56, 201, 332, 446, 455, 458, 479, 481, 490, 494, 496, 503], "each": [3, 5, 7, 9, 10, 20, 27, 28, 33, 44, 46, 48, 56, 57, 73, 78, 79, 83, 152, 154, 155, 156, 163, 166, 167, 168, 170, 176, 180, 203, 205, 206, 212, 220, 221, 229, 237, 239, 242, 244, 255, 261, 276, 282, 284, 287, 289, 290, 293, 304, 305, 307, 309, 310, 314, 316, 317, 318, 323, 329, 330, 332, 334, 335, 340, 341, 343, 345, 346, 347, 354, 361, 364, 367, 372, 373, 375, 392, 397, 398, 399, 407, 409, 410, 413, 415, 416, 434, 439, 446, 448, 449, 451, 452, 453, 459, 460, 487, 488, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 503, 505, 506, 507], "someth": [3, 5, 22, 33, 34, 47, 80, 152, 161, 192, 202, 205, 287, 310, 317, 330, 332, 338, 343, 367, 380, 439, 445, 446, 449, 451, 452, 453, 490, 494, 495, 503], "nuanc": [3, 5, 453], "equilibrium": [3, 5, 20, 204, 207, 255, 287, 351, 382, 481, 494, 499, 501, 503], "cycl": [3, 5, 7, 16, 20, 21, 22, 28, 29, 33, 37, 75, 79, 134, 135, 165, 176, 204, 205, 212, 213, 216, 218, 219, 220, 222, 225, 237, 239, 244, 251, 253, 255, 258, 330, 346, 351, 366, 367, 382, 390, 396, 397, 401, 409, 413, 415, 438, 439, 446, 449, 451, 453, 468, 475, 476, 480, 481, 484, 486, 488, 490, 494, 495, 498, 499, 501, 505, 506, 508], "converg": [3, 5, 51, 79, 165, 166, 180, 184, 212, 213, 221, 251, 255, 320, 329, 372, 382, 494, 501, 506], "At": [3, 4, 5, 20, 33, 205, 218, 282, 288, 321, 354, 446, 451, 452, 487, 493, 505], "last": [3, 5, 152, 153, 176, 202, 205, 209, 221, 251, 318, 334, 338, 399, 407, 408, 416, 439, 449, 484, 486, 499, 503, 505], "wherea": [3, 5, 336, 341, 503], "constitut": [3, 5, 282, 310, 446, 448], "typic": [3, 4, 5, 21, 56, 61, 79, 83, 105, 154, 156, 170, 201, 202, 219, 220, 227, 239, 240, 242, 244, 246, 251, 282, 287, 293, 306, 307, 310, 314, 336, 343, 346, 366, 389, 446, 448, 480, 481, 488, 490, 494, 498, 503, 505], "further": [3, 5, 244, 317, 330, 345, 398, 416, 449, 451], "collect": [3, 4, 5, 11, 22, 27, 29, 33, 45, 46, 47, 48, 56, 61, 79, 152, 167, 201, 202, 205, 237, 239, 240, 244, 246, 249, 255, 262, 265, 282, 284, 287, 307, 310, 331, 333, 334, 340, 343, 345, 346, 364, 391, 401, 405, 409, 413, 444, 446, 448, 449, 451, 465, 467, 469, 477, 481, 484, 488, 490, 491, 492, 503, 505], "back": [3, 5, 40, 48, 49, 56, 79, 166, 189, 215, 221, 242, 251, 270, 273, 310, 317, 323, 329, 332, 343, 345, 346, 364, 367, 373, 378, 402, 409, 410, 422, 449, 453, 481, 483, 484, 490, 494, 503, 505], "like": [3, 4, 5, 7, 9, 10, 20, 21, 22, 29, 34, 47, 48, 50, 70, 79, 80, 105, 145, 148, 153, 155, 161, 163, 166, 170, 202, 203, 205, 207, 215, 216, 220, 239, 240, 244, 246, 251, 282, 284, 287, 288, 291, 292, 294, 309, 310, 311, 316, 317, 329, 330, 331, 333, 336, 338, 339, 340, 343, 347, 350, 354, 359, 366, 367, 374, 375, 397, 398, 408, 409, 410, 414, 416, 430, 439, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 467, 481, 482, 483, 484, 488, 490, 492, 493, 494, 499, 503, 505, 509], "Will": [3, 5, 7, 50, 79, 103, 205, 220, 246, 255, 282, 287, 307, 310, 317, 330, 399, 413, 415, 488, 493, 503], "interpos": [3, 5], "h5": [3, 4, 5, 8, 15, 27, 488, 490, 497, 503, 505], "extens": [3, 5, 27, 44, 46, 282, 284, 317, 399, 405, 415, 483, 484, 499, 503], "guarante": [3, 5, 10, 189, 244, 336, 402, 449, 499], "here": [3, 5, 9, 15, 32, 45, 48, 61, 67, 79, 80, 146, 153, 154, 156, 163, 167, 168, 173, 175, 178, 189, 198, 201, 206, 207, 213, 215, 220, 221, 237, 239, 244, 251, 255, 282, 288, 292, 293, 298, 304, 307, 310, 311, 317, 321, 323, 328, 330, 331, 338, 339, 340, 354, 365, 373, 392, 398, 405, 439, 444, 446, 448, 449, 451, 452, 453, 459, 467, 473, 474, 480, 481, 488, 490, 491, 492, 494, 495, 497, 499, 502, 503, 505], "usabl": [3, 5, 430, 505], "vastli": [3, 5], "futur": [3, 4, 5, 20, 45, 48, 50, 79, 80, 207, 240, 282, 287, 288, 292, 294, 330, 332, 333, 345, 356, 405, 416, 439, 495, 503], "primarili": [3, 5, 105, 168, 220, 481], "replac": [3, 5, 10, 11, 80, 220, 225, 282, 287, 294, 307, 310, 330, 333, 340, 346, 351, 407, 416, 439, 477, 483, 484, 486, 494, 503], "csstring": [3, 5], "geomstr": [3, 5, 333], "bpstring": [3, 5], "goal": [3, 5, 9, 333, 361, 409, 452, 453, 481, 488], "ani": [3, 4, 5, 7, 10, 11, 16, 20, 21, 22, 23, 28, 32, 33, 56, 59, 63, 66, 77, 78, 79, 80, 83, 95, 105, 152, 154, 156, 166, 167, 179, 201, 202, 205, 206, 212, 219, 220, 221, 225, 236, 237, 239, 240, 244, 246, 251, 255, 260, 281, 282, 284, 287, 293, 294, 300, 304, 306, 307, 309, 310, 314, 330, 331, 332, 334, 339, 340, 341, 343, 345, 346, 347, 348, 349, 351, 354, 355, 360, 361, 364, 365, 367, 370, 380, 381, 387, 390, 391, 396, 397, 398, 402, 407, 413, 415, 416, 430, 439, 443, 445, 446, 448, 449, 451, 452, 453, 476, 477, 481, 482, 483, 484, 488, 490, 491, 492, 494, 495, 499, 501, 503, 505, 506, 509], "particular": [3, 5, 15, 24, 33, 47, 48, 79, 80, 90, 117, 155, 163, 164, 203, 205, 215, 220, 236, 237, 239, 240, 287, 293, 304, 310, 330, 331, 340, 343, 364, 370, 373, 416, 445, 453, 482, 488, 492, 495, 509], "veri": [3, 4, 5, 14, 16, 21, 22, 33, 83, 115, 153, 164, 174, 175, 204, 209, 213, 282, 287, 310, 311, 329, 330, 332, 338, 343, 346, 367, 375, 409, 439, 446, 448, 449, 452, 453, 468, 481, 486, 488, 490, 493, 494, 495, 503], "dont": [3, 5, 7], "easi": [3, 5, 20, 251, 284, 340, 341, 409, 439, 448, 451, 452, 453, 481, 494, 503], "hard": [3, 5, 32, 43, 46, 78, 80, 215, 298, 332, 447, 481], "geom": [3, 5, 15, 47, 48, 57, 173, 288, 292, 294, 342, 349, 475, 483, 493, 494, 495, 503], "In": [3, 5, 8, 15, 22, 40, 46, 48, 67, 71, 80, 81, 89, 90, 103, 105, 111, 116, 140, 152, 161, 163, 166, 216, 219, 220, 227, 236, 238, 251, 255, 282, 287, 289, 300, 306, 310, 311, 316, 317, 329, 330, 332, 334, 336, 339, 340, 341, 343, 345, 365, 375, 378, 389, 397, 398, 405, 409, 410, 412, 439, 445, 446, 449, 451, 452, 453, 467, 472, 475, 480, 481, 482, 488, 490, 491, 494, 495, 503, 505, 506, 509], "abl": [3, 4, 5, 17, 46, 48, 145, 282, 347, 398, 424, 452, 482, 503, 505, 509], "reproduc": [3, 5, 121, 124, 131, 505], "confid": [3, 5], "ident": [3, 5, 156, 163, 170, 179, 191, 192, 195, 265, 317, 330, 449, 481], "inputdb": [3, 5], "startcycl": [3, 5, 7, 15, 503], "startnod": [3, 5, 7, 15, 503], "standard": [3, 5, 16, 22, 23, 27, 57, 62, 67, 71, 79, 140, 152, 153, 154, 166, 167, 171, 179, 185, 204, 205, 206, 207, 212, 215, 219, 221, 245, 251, 255, 262, 263, 282, 287, 316, 323, 330, 333, 375, 380, 391, 400, 405, 415, 438, 443, 444, 445, 447, 451, 481, 483, 484, 488, 499, 502, 503, 507], "timestep": [3, 5, 7, 20, 28, 35, 46, 251, 345, 503], "request": [3, 5, 7, 20, 33, 78, 79, 152, 156, 198, 201, 205, 209, 212, 219, 237, 239, 251, 255, 258, 284, 293, 307, 310, 330, 332, 338, 339, 345, 347, 402, 405, 407, 422, 445, 446, 447, 452, 481, 488, 490, 503], "present": [3, 5, 7, 8, 20, 79, 136, 161, 163, 168, 173, 175, 176, 178, 198, 202, 225, 249, 258, 282, 310, 330, 333, 341, 345, 347, 366, 375, 380, 397, 410, 416, 446, 453, 495, 503], "auxiliari": [3, 5, 140, 205, 215], "statepointnam": [3, 5], "h5group": [3, 5, 10, 505], "place": [3, 5, 10, 22, 27, 28, 46, 48, 56, 79, 105, 152, 156, 215, 219, 220, 221, 239, 240, 282, 284, 288, 290, 317, 321, 330, 336, 341, 345, 350, 397, 401, 407, 408, 416, 445, 446, 452, 453, 481, 482, 483, 488, 490, 495, 503, 505, 509], "correct": [3, 5, 16, 24, 48, 160, 200, 225, 236, 240, 251, 253, 258, 265, 287, 300, 307, 310, 323, 325, 340, 354, 355, 365, 375, 377, 378, 452, 482, 503, 509], "timenod": [3, 5, 7, 15, 33, 79, 204, 205, 239, 310, 488, 490, 503, 505, 508], "fuel": [3, 5, 20, 27, 28, 50, 52, 55, 94, 105, 109, 126, 134, 135, 136, 137, 138, 143, 154, 202, 213, 216, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 244, 248, 251, 256, 262, 282, 283, 284, 287, 288, 292, 294, 296, 300, 302, 307, 310, 314, 315, 316, 317, 321, 323, 324, 325, 329, 330, 332, 334, 348, 350, 351, 353, 354, 355, 356, 357, 361, 362, 413, 446, 451, 459, 460, 464, 465, 467, 468, 475, 476, 479, 480, 481, 483, 484, 489, 490, 493, 496, 498, 499, 501, 502, 504, 505], "varieti": [3, 5, 57, 163, 282, 287, 310, 341, 356, 380, 446, 451, 452, 481, 488, 491, 503], "client": [3, 5, 8, 161, 163, 251, 281, 310, 330, 333], "server": [3, 5], "kind": [3, 5, 24, 105, 158, 167, 205, 209, 213, 215, 251, 284, 287, 292, 310, 332, 340, 398, 453, 460, 480, 481, 493, 494, 502, 503], "unnecessari": [3, 5, 57, 287], "bp": [3, 5, 11, 47, 48, 57, 62, 288, 294, 349, 409, 467, 475, 493, 503], "allowmiss": [3, 5, 484], "mid": [3, 5, 156, 367], "simul": [3, 5, 7, 21, 33, 61, 138, 213, 220, 237, 253, 255, 282, 283, 290, 330, 365, 366, 396, 449, 452, 453, 481, 488, 490, 494, 495, 501, 503, 506, 508], "valu": [3, 4, 5, 7, 10, 17, 20, 23, 24, 25, 27, 48, 50, 51, 52, 57, 60, 67, 78, 79, 80, 81, 90, 96, 97, 100, 105, 145, 148, 150, 152, 154, 156, 161, 164, 167, 168, 180, 191, 198, 201, 202, 203, 207, 214, 220, 228, 237, 239, 240, 242, 243, 246, 251, 253, 255, 262, 266, 270, 282, 284, 287, 288, 289, 290, 291, 292, 293, 294, 300, 307, 310, 313, 314, 315, 317, 318, 321, 323, 329, 330, 333, 338, 343, 344, 345, 346, 349, 356, 360, 361, 366, 367, 372, 373, 374, 375, 378, 379, 380, 391, 394, 397, 401, 405, 408, 409, 411, 413, 414, 415, 416, 424, 427, 434, 439, 444, 449, 451, 453, 481, 483, 484, 488, 490, 492, 493, 494, 498, 499, 500, 503, 505, 506], "neg": [3, 5, 251, 284, 287, 300, 304, 310, 314, 323, 324, 339, 346, 354, 375, 409, 503], "index": [3, 4, 5, 10, 44, 57, 153, 154, 164, 167, 176, 203, 205, 242, 246, 251, 268, 283, 284, 287, 290, 310, 313, 330, 334, 336, 338, 339, 340, 341, 397, 398, 401, 409, 413, 416, 434, 443, 477, 481, 483, 484, 486, 488, 499, 503, 505], "eoc": [3, 5, 20, 79, 205, 239, 446, 499, 501], "backward": [3, 5, 6, 105, 179, 208, 220, 288, 413], "statepoint": [3, 5, 488], "emit": [3, 5, 61, 164, 170, 300, 381], "rather": [3, 5, 10, 20, 46, 48, 79, 105, 120, 140, 154, 155, 156, 167, 179, 205, 215, 220, 239, 240, 251, 282, 293, 310, 330, 332, 335, 336, 339, 341, 342, 343, 347, 367, 373, 398, 413, 416, 448, 467, 475, 477, 481, 483, 486, 488, 490, 494, 495, 498, 503], "crash": [3, 5, 63, 78, 161, 205, 365, 397, 447, 448, 483, 503], "undefin": [3, 5, 7, 16, 20, 21, 22, 28, 33, 59, 79, 212, 219, 225, 239, 244, 251, 260, 304, 305, 306, 332, 387, 390, 396, 503], "top": [3, 5, 22, 27, 80, 207, 220, 284, 287, 290, 291, 294, 298, 310, 323, 329, 330, 334, 335, 340, 341, 343, 346, 349, 353, 354, 409, 434, 448, 453, 488, 490, 498, 499, 501, 503, 505], "comp": [3, 5, 7, 10, 26, 287, 505], "param": [3, 5, 7, 10, 11, 20, 45, 79, 220, 251, 253, 284, 287, 310, 317, 328, 329, 330, 345, 346, 354, 383, 391, 401, 413, 449, 468, 476, 483, 484, 486, 488, 490, 493, 498, 499, 503], "too": [3, 5, 45, 174, 310, 330, 346, 354, 397, 416, 434, 449, 484, 493, 494, 503], "must": [3, 5, 7, 15, 16, 20, 21, 22, 28, 33, 50, 56, 59, 67, 77, 78, 79, 146, 152, 160, 163, 164, 167, 170, 173, 202, 205, 212, 219, 220, 221, 225, 239, 240, 244, 251, 259, 260, 282, 284, 287, 293, 304, 307, 310, 316, 321, 329, 330, 332, 338, 340, 341, 343, 345, 346, 347, 358, 375, 387, 390, 391, 396, 401, 413, 414, 439, 443, 444, 445, 446, 449, 452, 453, 460, 481, 482, 484, 490, 494, 497, 503, 506, 509], "indexloc": [3, 5, 283, 334, 338, 339, 340, 341, 446], "make": [3, 5, 9, 16, 20, 27, 28, 51, 56, 57, 59, 62, 67, 79, 80, 126, 145, 150, 152, 153, 160, 161, 164, 166, 167, 170, 173, 183, 192, 213, 215, 219, 220, 221, 225, 239, 246, 251, 260, 266, 267, 281, 282, 284, 287, 288, 292, 293, 294, 297, 298, 300, 302, 307, 310, 314, 316, 317, 320, 330, 332, 333, 334, 340, 341, 343, 345, 346, 347, 348, 354, 355, 356, 358, 361, 364, 375, 377, 378, 380, 381, 390, 391, 392, 393, 397, 398, 405, 409, 412, 413, 415, 416, 418, 422, 424, 431, 434, 439, 443, 444, 445, 446, 447, 449, 451, 452, 453, 461, 464, 475, 477, 478, 479, 480, 481, 483, 484, 488, 489, 491, 493, 494, 495, 496, 498, 502], "sens": [3, 5, 10, 51, 56, 80, 282, 287, 293, 307, 330, 345, 364, 397, 449, 494], "hierarchi": [3, 5, 10, 228, 310, 343, 347, 349, 361, 439, 446, 488, 503, 505], "serv": [3, 5, 28, 79, 253, 282, 333, 345, 346, 408, 416, 483, 490], "anchor": [3, 5, 292, 294, 339, 340, 341, 353, 439, 494, 495, 503], "fulli": [3, 5, 10, 80, 105, 167, 217, 284, 292, 310, 341, 355, 367, 451, 481, 483, 491, 495, 498, 501, 503, 505], "extend": [3, 5, 7, 16, 20, 21, 22, 24, 28, 33, 59, 79, 153, 207, 212, 219, 225, 239, 244, 251, 260, 282, 283, 284, 310, 329, 334, 340, 343, 346, 373, 387, 390, 396, 397, 405, 408, 424, 439, 448, 466, 475, 488, 491, 503], "littl": [3, 4, 5, 10, 34, 35, 59, 167, 282, 396, 398, 405, 452, 467, 488, 490, 505], "complic": [3, 5, 10, 15, 251, 293, 304, 307, 310, 375, 390, 398, 449, 490, 494, 503], "depth": [3, 5, 10, 413, 448, 449, 488], "below": [3, 4, 5, 48, 67, 153, 164, 170, 220, 236, 282, 283, 284, 309, 310, 329, 330, 334, 336, 343, 347, 380, 409, 435, 446, 448, 449, 451, 481, 482, 490, 493, 494, 495, 503, 505, 509], "occupi": [3, 5, 52, 221, 351, 499, 503], "easier": [3, 5, 205, 310, 339, 387, 448, 452], "figur": [3, 5, 8, 27, 33, 44, 88, 126, 142, 201, 205, 221, 287, 329, 330, 332, 342, 401, 413, 415, 453, 466, 470, 471, 473, 481, 488, 492, 494], "given": [3, 4, 5, 10, 20, 44, 71, 79, 81, 83, 84, 105, 109, 114, 146, 154, 155, 156, 159, 164, 201, 204, 205, 212, 220, 239, 240, 242, 244, 246, 251, 256, 282, 284, 287, 288, 292, 293, 310, 314, 315, 316, 317, 321, 325, 329, 330, 333, 336, 338, 339, 341, 342, 343, 345, 346, 361, 364, 405, 407, 408, 409, 412, 413, 415, 416, 439, 440, 441, 446, 449, 451, 452, 460, 465, 468, 481, 486, 490, 494, 498, 501, 503, 505, 506, 507], "pair": [3, 5, 27, 50, 215, 240, 284, 287, 288, 289, 290, 291, 292, 293, 294, 307, 310, 330, 339, 340, 341, 366, 372, 380, 401, 449, 503], "unawar": [3, 5], "outsid": [3, 5, 78, 213, 220, 227, 237, 240, 298, 310, 316, 317, 331, 338, 344, 345, 367, 397, 436, 481, 488, 494, 499, 503], "normal": [3, 4, 5, 105, 140, 166, 170, 179, 185, 203, 205, 240, 251, 260, 282, 287, 316, 339, 349, 365, 372, 390, 401, 421, 439, 446, 453, 459, 477, 481, 488, 490, 494, 503], "know": [3, 4, 5, 7, 32, 95, 153, 154, 163, 166, 213, 282, 284, 287, 293, 302, 304, 310, 330, 332, 343, 346, 347, 367, 398, 401, 408, 409, 410, 414, 451, 490, 492, 494, 503, 504, 505], "about": [3, 4, 5, 20, 22, 29, 47, 56, 79, 84, 91, 105, 113, 138, 140, 152, 153, 166, 167, 170, 185, 196, 201, 205, 220, 282, 284, 287, 292, 293, 310, 316, 332, 333, 338, 343, 345, 346, 347, 354, 367, 439, 448, 449, 451, 453, 469, 470, 471, 474, 481, 484, 488, 490, 492, 494, 495, 498, 499, 503, 505], "plu": [3, 5, 44, 156, 221, 284, 341, 347, 397, 481, 491, 503], "similar": [3, 5, 20, 48, 56, 61, 80, 152, 153, 156, 164, 166, 168, 170, 174, 175, 176, 240, 265, 284, 310, 330, 338, 341, 345, 380, 405, 413, 416, 449, 481, 490, 495], "omit": [3, 5, 287, 307, 310, 331, 397, 398, 503], "temporari": [3, 6, 16, 21, 63, 78, 251, 402, 415, 422], "placehold": [3, 6, 156, 208, 284, 365, 398, 416, 494], "eas": [3, 6, 145, 307, 481, 483], "break": [3, 6, 63, 78, 95, 156, 205, 287, 310, 343, 346, 392, 408, 416, 445, 449, 451, 452, 453], "transit": [3, 6, 215, 333, 448, 481, 487, 490], "help": [3, 7, 9, 10, 22, 40, 56, 61, 67, 71, 78, 79, 153, 163, 199, 282, 310, 329, 374, 401, 404, 408, 409, 410, 416, 439, 443, 444, 447, 448, 449, 452, 453, 483, 486, 488, 490, 494, 503, 505], "deriv": [3, 7, 21, 33, 44, 57, 59, 79, 140, 163, 196, 212, 215, 239, 251, 281, 282, 287, 304, 310, 329, 332, 341, 347, 354, 373, 374, 387, 390, 396, 405, 409, 481, 493, 499, 503], "overridden": [3, 7, 16, 20, 21, 22, 28, 33, 59, 67, 79, 105, 152, 212, 219, 225, 239, 244, 251, 260, 307, 310, 387, 390, 396, 501, 503], "life": [3, 7, 22, 26, 79, 83, 88, 160, 205, 237, 239, 446, 451, 452, 480, 488, 492, 503, 508], "underli": [3, 5, 7, 11, 48, 154, 156, 310, 338, 340, 343, 346, 405, 453, 488, 493, 505, 507], "earli": [3, 7, 21, 208, 448, 503], "while": [3, 7, 22, 38, 40, 44, 46, 67, 71, 79, 139, 161, 166, 196, 206, 215, 236, 237, 255, 282, 287, 307, 310, 311, 316, 317, 321, 328, 329, 330, 333, 334, 341, 347, 397, 402, 405, 408, 439, 446, 448, 452, 460, 481, 482, 490, 491, 494, 503, 505, 509], "first": [3, 5, 7, 10, 15, 21, 29, 35, 44, 46, 48, 79, 80, 105, 152, 156, 166, 167, 168, 170, 176, 202, 205, 212, 219, 220, 221, 237, 239, 240, 258, 282, 284, 287, 291, 302, 307, 310, 316, 317, 330, 331, 338, 339, 341, 343, 345, 351, 361, 397, 407, 408, 409, 413, 416, 418, 425, 434, 439, 440, 444, 446, 447, 448, 449, 451, 452, 453, 465, 470, 477, 481, 484, 488, 489, 493, 494, 497, 503, 505], "receiv": [3, 7, 79, 152, 298, 347, 389, 449], "tight": [3, 7, 79, 205, 212, 253, 255, 287, 372, 387, 434, 446, 484, 502, 503], "coupl": [3, 7, 10, 16, 33, 44, 59, 79, 205, 212, 227, 237, 239, 244, 251, 253, 255, 258, 282, 287, 330, 361, 372, 434, 446, 448, 484, 486, 492, 499, 501, 502, 503], "_timenodeloop": [3, 7], "via": [3, 7, 77, 94, 105, 136, 170, 204, 251, 282, 287, 293, 300, 307, 310, 314, 315, 323, 343, 393, 446, 449, 474, 477, 481, 484, 486, 490, 494, 503], "tend": [3, 7, 38, 44, 307, 332, 346, 444, 491, 505], "decai": [3, 7, 86, 153, 156, 158, 160, 164, 165, 170, 185, 203, 205, 237, 270, 293, 464, 478, 479, 481, 496, 498, 499, 501, 503, 505], "next": [3, 7, 21, 44, 218, 239, 255, 287, 307, 310, 316, 330, 349, 397, 413, 416, 439, 443, 444, 448, 449, 453, 488, 490, 491, 493, 494, 495, 503, 505], "shutdown": [3, 7, 212, 283, 332, 365, 481, 488, 493, 494, 501, 503], "even": [3, 4, 7, 11, 22, 56, 78, 79, 145, 152, 156, 176, 205, 220, 221, 260, 282, 284, 288, 304, 310, 323, 330, 336, 339, 354, 374, 399, 408, 413, 415, 422, 446, 448, 449, 453, 481, 490, 494, 503], "encount": [3, 4, 5, 7, 20, 56], "reconnect": [3, 7], "pre": [3, 7, 10, 11, 20, 202, 219, 239, 240, 265, 282, 287, 329, 330, 339, 397, 439, 484, 490, 501, 503], "still": [3, 5, 7, 11, 20, 56, 78, 79, 105, 153, 160, 189, 206, 215, 220, 221, 237, 240, 281, 282, 287, 288, 294, 305, 307, 310, 330, 331, 332, 340, 346, 351, 364, 392, 394, 405, 422, 445, 446, 452, 453, 460, 481, 483, 490, 495, 503, 505], "connect": [3, 7, 44, 168, 287, 341, 503], "worker": [3, 7, 22, 79, 152, 202, 205, 206, 220, 310, 390, 403, 449, 486, 493], "reloaddbnam": [3, 7, 15, 446, 503], "put": [3, 7, 105, 167, 215, 217, 239, 282, 284, 287, 310, 330, 350, 409, 415, 453, 484, 490, 505], "prior": [3, 7, 79, 205, 282, 317, 380, 449, 483, 503], "mix": [3, 7, 109, 220, 236, 244, 287, 310, 421, 424, 481, 490, 494, 503], "v": [3, 7, 29, 79, 80, 101, 102, 154, 156, 166, 201, 205, 213, 220, 236, 262, 282, 287, 300, 307, 310, 409, 415, 480, 481, 484, 488, 491, 494], "equival": [3, 7, 105, 109, 170, 176, 184, 185, 191, 316, 317, 339, 340, 408, 449, 460, 482, 509], "reload": [3, 7, 21, 205, 220, 251, 255, 503], "doe": [3, 4, 7, 10, 11, 14, 15, 16, 17, 18, 22, 31, 32, 33, 35, 36, 37, 42, 43, 46, 50, 54, 55, 59, 60, 75, 76, 78, 79, 105, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 152, 156, 158, 159, 160, 161, 162, 167, 168, 172, 174, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 205, 211, 212, 215, 220, 221, 224, 225, 226, 233, 234, 235, 239, 240, 242, 248, 249, 251, 253, 258, 259, 260, 265, 266, 267, 268, 269, 270, 273, 280, 282, 284, 287, 289, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 310, 311, 316, 317, 318, 323, 324, 325, 326, 327, 328, 329, 330, 338, 339, 340, 346, 347, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 405, 409, 412, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 445, 449, 452, 453, 468, 481, 488, 490, 493, 494, 495, 499, 503], "gaurante": [3, 7], "decad": [3, 7, 176, 481], "ago": [3, 5, 7], "easili": [3, 4, 7, 10, 11, 251, 310, 334, 375, 389, 397, 399, 407, 409, 452, 481, 493, 495], "timestepnam": [3, 7, 205], "fresh": [3, 7, 205, 310, 480, 481, 485, 491, 494, 503], "preferenti": [3, 7], "neither": [3, 7, 240, 288], "nor": [3, 7, 288], "mutablesequ": [3, 7], "byloc": [3, 7], "wrapper": [3, 7, 152, 156, 189, 192, 203, 288, 333, 365, 381, 413], "around": [3, 7, 8, 48, 78, 152, 164, 203, 216, 220, 282, 287, 288, 306, 317, 330, 336, 365, 381, 439, 444, 449, 469, 480, 481, 488, 494, 495, 498, 499, 501, 503], "how": [3, 4, 5, 7, 8, 9, 10, 32, 45, 46, 52, 57, 126, 164, 167, 168, 196, 201, 220, 221, 240, 244, 246, 282, 284, 287, 291, 292, 294, 310, 316, 317, 332, 334, 338, 341, 343, 346, 347, 354, 355, 366, 367, 396, 398, 399, 413, 414, 416, 431, 439, 447, 448, 449, 451, 453, 460, 461, 467, 475, 480, 481, 483, 484, 488, 489, 490, 491, 499, 500, 502, 503, 504, 505], "well": [3, 4, 5, 7, 10, 20, 44, 46, 50, 56, 57, 79, 80, 138, 153, 163, 225, 227, 244, 282, 287, 291, 293, 307, 310, 311, 329, 330, 341, 343, 345, 366, 401, 405, 408, 412, 413, 443, 446, 451, 452, 473, 475, 481, 488, 490, 493, 494, 503, 505], "reffilenam": [3, 4], "srcfilenam": [3, 4], "exclus": [3, 4, 48, 56, 220, 240, 288, 292, 330, 333, 341, 361, 364, 484, 488, 503], "toler": [3, 4, 48, 56, 79, 168, 174, 202, 409, 506], "float": [3, 4, 5, 27, 50, 79, 81, 82, 83, 84, 85, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 114, 117, 137, 138, 139, 140, 141, 143, 155, 156, 164, 167, 168, 174, 176, 184, 201, 205, 220, 221, 236, 240, 246, 251, 284, 287, 290, 291, 292, 304, 307, 310, 314, 315, 316, 321, 323, 329, 330, 333, 335, 336, 339, 340, 341, 342, 343, 346, 372, 380, 387, 397, 399, 401, 408, 409, 413, 415, 434, 440, 441, 484, 493, 505, 506], "0": [3, 4, 15, 24, 27, 35, 48, 55, 56, 57, 79, 82, 83, 84, 85, 90, 93, 96, 97, 98, 100, 105, 109, 113, 114, 117, 125, 126, 136, 137, 138, 140, 147, 148, 152, 156, 160, 163, 164, 165, 167, 168, 170, 174, 175, 176, 179, 180, 201, 202, 203, 205, 212, 220, 221, 236, 237, 239, 240, 246, 249, 251, 253, 255, 260, 282, 284, 287, 291, 292, 296, 299, 300, 302, 304, 305, 306, 307, 309, 310, 313, 316, 318, 321, 323, 328, 330, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 345, 346, 350, 353, 355, 356, 373, 380, 396, 397, 398, 399, 401, 405, 407, 408, 409, 412, 413, 414, 416, 424, 435, 438, 439, 441, 446, 449, 451, 453, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 488, 490, 491, 492, 493, 494, 495, 498, 499, 501, 503, 505, 506], "timestepcompar": [3, 4, 48, 56], "high": [3, 4, 5, 28, 78, 88, 92, 93, 95, 201, 225, 227, 251, 258, 282, 283, 287, 330, 332, 348, 409, 413, 468, 481, 484, 488, 493, 495, 498, 499, 501, 503, 505], "two": [3, 4, 10, 11, 48, 65, 71, 116, 152, 153, 156, 164, 168, 170, 172, 174, 177, 191, 195, 201, 202, 203, 204, 205, 213, 225, 237, 240, 241, 282, 284, 287, 289, 293, 305, 310, 316, 317, 323, 329, 330, 333, 338, 339, 340, 343, 344, 351, 354, 380, 401, 409, 415, 416, 446, 449, 451, 452, 477, 482, 483, 486, 490, 493, 494, 497, 503, 506, 509], "dbname": [3, 8, 47, 48, 492], "basecas": [3, 8, 47, 57], "bookeep": [3, 8, 35, 205], "most": [3, 5, 8, 16, 44, 46, 79, 80, 105, 114, 140, 152, 156, 163, 164, 166, 174, 228, 240, 282, 287, 304, 307, 310, 330, 336, 338, 341, 343, 345, 347, 354, 365, 367, 381, 398, 405, 416, 443, 446, 449, 451, 452, 453, 480, 481, 482, 483, 490, 494, 495, 498, 501, 503, 509], "proper": [3, 8, 139, 204, 239, 287, 340, 354, 446, 452, 503], "common": [3, 4, 8, 80, 138, 152, 153, 156, 167, 215, 251, 256, 284, 293, 310, 323, 329, 332, 340, 341, 374, 380, 411, 449, 453, 454, 479, 481, 482, 494, 496, 503, 509], "least": [3, 8, 67, 255, 310, 351, 439, 443, 452, 481, 494, 503], "knowledg": [3, 4, 8, 47, 287, 310, 317, 482, 509], "probe": [3, 8, 48], "interrog": [3, 8], "pathtodb": 3, "loadcycl": 3, "loadnod": 3, "c0n2eoc": 3, "alreadi": [3, 5, 57, 61, 78, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 156, 170, 201, 205, 220, 244, 266, 287, 288, 310, 325, 330, 333, 346, 367, 373, 451, 490, 494, 503], "vari": [3, 4, 9, 57, 163, 255, 287, 294, 330, 336, 343, 481, 493, 503], "middl": [3, 49, 205, 283, 332, 339, 397, 477, 488, 493, 494], "attach": [3, 21, 33, 59, 79, 80, 205, 212, 244, 282, 316, 338, 387, 390, 396, 488, 499], "pathtodatabas": 3, "getfpmass": [3, 283, 310], "fission": [3, 86, 156, 160, 164, 168, 170, 174, 177, 185, 201, 202, 227, 237, 239, 240, 243, 244, 245, 246, 248, 249, 251, 256, 260, 287, 293, 307, 310, 329, 330, 332, 413, 472, 477, 480, 481, 484, 488, 492, 494, 495, 499, 501, 503], "product": [3, 45, 57, 158, 164, 177, 189, 192, 201, 202, 237, 239, 240, 243, 244, 245, 246, 248, 249, 251, 256, 293, 307, 310, 330, 341, 452, 470, 471, 477, 481, 484, 488, 499, 503], "12345": 3, "67": [3, 154], "test_comparedb3": [3, 13], "testcomparedb3": [3, 13, 14], "test_database3": [3, 13], "testdatabas": [3, 13, 15], "testdatabasesmal": [3, 13, 15], "testwritereaddatabas": [3, 13, 15], "test_databaseinterfac": [3, 13], "getsimpledboper": [3, 13, 16], "testdatabaseinterfacebol": [3, 13, 16], "testdatabaseinterfac": [3, 13, 16], "testdatabasewrit": [3, 13, 16], "testdatabaseread": [3, 13, 16], "testbadnam": [3, 13, 16], "teststandardfollowon": [3, 13, 16], "test_jaggedarrai": [3, 13], "testjaggedarrai": [3, 13, 17], "test_layout": [3, 13], "testlocationpack": [3, 13, 18], "writeln": [3, 4], "adddiff": [3, 4], "addstructurediff": [3, 4], "addtimestep": [3, 4], "reportdiff": [3, 4], "ndiff": [3, 4], "fromh5": [3, 9], "tolist": [3, 9], "computeancestor": [3, 10], "allsubclass": [3, 10], "from_yaml": [3, 11, 288, 291, 293], "skip_bp_sect": [3, 11], "unknown_param": [3, 11], "buildparamcol": [3, 11], "read_only_fm": [3, 12], "read_write_fm": [3, 12], "create_file_ti": [3, 12], "create_file_fi": [3, 12], "create_file_fie2": [3, 12], "read_write_cr": [3, 12], "assum": [4, 29, 82, 105, 152, 171, 189, 201, 202, 236, 284, 287, 310, 314, 323, 330, 341, 354, 360, 392, 413, 448, 449, 482, 490, 493, 494, 495, 499, 503, 509], "intim": [4, 340], "h5py": [4, 78, 346, 505], "within": [4, 10, 24, 27, 56, 61, 73, 79, 105, 152, 153, 154, 156, 167, 172, 196, 198, 202, 205, 207, 212, 215, 227, 239, 240, 244, 248, 282, 284, 287, 288, 289, 290, 291, 294, 298, 304, 307, 310, 314, 315, 317, 318, 323, 329, 330, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 346, 353, 354, 355, 364, 402, 439, 440, 446, 447, 448, 451, 465, 481, 484, 487, 490, 494, 495, 498, 499, 503, 505, 506, 507], "correspond": [4, 10, 26, 153, 201, 202, 205, 220, 221, 282, 284, 287, 292, 293, 304, 309, 310, 323, 330, 342, 343, 347, 374, 397, 413, 441, 446, 451, 487, 494, 499, 501, 503, 505], "pull": [4, 48, 205, 220, 225, 287, 415, 445, 447, 452, 484, 490, 493], "cross": [4, 92, 153, 156, 163, 164, 166, 168, 172, 174, 175, 177, 183, 196, 198, 200, 201, 202, 203, 213, 214, 225, 237, 239, 240, 244, 251, 253, 255, 260, 265, 266, 267, 282, 284, 287, 293, 310, 316, 330, 413, 415, 439, 443, 449, 452, 460, 467, 472, 473, 481, 484, 486, 488, 494, 495, 498, 499, 500, 503, 505, 506], "probabl": [4, 40, 45, 48, 67, 71, 94, 153, 156, 246, 260, 282, 288, 307, 310, 345, 409, 410, 416, 439, 453, 481, 490, 498, 504], "speak": [4, 244], "issu": [4, 16, 22, 46, 78, 136, 164, 166, 202, 239, 240, 253, 282, 287, 316, 332, 343, 354, 381, 416, 439, 445, 451, 452, 453, 481, 483, 484, 490, 505], "aris": [4, 79, 153, 156, 282, 293, 391], "against": [4, 40, 48, 50, 79, 126, 239, 310, 330, 332, 362, 373, 375, 380, 399, 418, 445, 481, 484], "sometim": [4, 48, 78, 156, 202, 220, 240, 311, 343, 453, 475, 488, 490, 503, 505], "That": [4, 5, 59, 90, 253, 287, 291, 310, 364, 365, 373, 453, 488, 490, 494, 503], "worri": [4, 338, 347, 449, 451, 453, 490], "especi": [4, 244, 412, 452], "temperatur": [4, 10, 80, 81, 82, 83, 84, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 109, 111, 112, 113, 114, 116, 117, 126, 132, 133, 134, 137, 138, 140, 141, 142, 143, 154, 219, 227, 236, 237, 239, 255, 265, 277, 284, 287, 304, 307, 310, 311, 314, 315, 316, 317, 322, 323, 330, 343, 346, 353, 354, 355, 441, 446, 451, 465, 474, 480, 481, 484, 488, 490, 491, 493, 494, 495, 498, 499, 500, 501, 503, 504, 505, 506, 507], "uniformli": [4, 293, 465, 503], "realli": [4, 32, 45, 105, 203, 209, 292, 294, 330, 336, 365, 448, 449, 451, 481, 495], "suppos": [4, 292, 416, 451], "volum": [4, 81, 88, 105, 114, 136, 138, 139, 198, 201, 236, 239, 284, 287, 291, 298, 304, 307, 309, 310, 317, 329, 330, 342, 353, 354, 355, 362, 401, 464, 478, 479, 496, 499, 500, 501, 503], "rel": [4, 44, 48, 56, 79, 105, 167, 185, 215, 221, 292, 304, 307, 310, 311, 321, 323, 330, 332, 342, 343, 380, 409, 439, 452, 485, 490, 495, 499, 501, 503, 505, 507], "self": [4, 9, 20, 40, 57, 67, 79, 105, 152, 163, 166, 201, 220, 239, 246, 258, 260, 287, 288, 291, 307, 310, 315, 317, 323, 330, 339, 341, 346, 350, 378, 408, 414, 416, 439, 444, 448, 449, 452, 490, 493, 494, 503, 505], "evid": 4, "resourc": [4, 152, 343, 380], "hasn": [4, 201, 266, 414], "tee": 4, "msg": [4, 365, 381, 400, 439], "ignor": [4, 5, 11, 80, 167, 174, 239, 287, 293, 304, 317, 332, 339, 366, 390, 391, 397, 415, 416, 423, 488, 493, 503], "exce": [4, 318, 389], "organ": [4, 20, 34, 207, 215, 367, 446, 449, 484, 488], "later": [4, 23, 27, 38, 40, 79, 168, 176, 205, 240, 289, 364, 444, 446, 448, 451, 452, 481, 490, 499, 503], "keep": [4, 5, 10, 22, 45, 145, 221, 255, 262, 282, 284, 293, 307, 317, 321, 329, 347, 408, 439, 445, 448, 449, 450, 452, 453, 480, 481, 494, 498, 499, 503], "miss": [4, 11, 90, 240, 293, 310, 434, 488, 491, 493, 503], "incompat": 4, "weird": [4, 341, 416], "strang": [4, 5, 10, 59, 343, 405, 494], "smaller": [4, 15, 27, 240, 248, 310, 330, 361, 398, 405, 453, 490], "zero": [4, 10, 59, 67, 78, 105, 130, 139, 156, 167, 168, 173, 174, 191, 201, 205, 239, 244, 255, 284, 287, 304, 305, 306, 307, 310, 323, 324, 330, 339, 350, 354, 407, 409, 421, 452, 474, 483, 486, 488, 490, 494, 499, 500, 503], "diff": [4, 59, 241, 453], "infinit": [4, 240, 341, 408, 469, 470, 503], "rigor": [4, 481], "manner": [4, 240, 304, 439, 446, 481, 483, 490, 506], "fine": [4, 46, 173, 293, 302, 383, 409, 416, 494], "revisit": [4, 282, 506], "comptyp": [4, 282], "paramnam": [4, 5, 9, 10, 20, 310, 329, 343, 345, 449], "absmean": 4, "absmax": 4, "tsname": 4, "stream": [4, 146, 147, 148, 165, 166, 167, 170, 171, 173, 174, 176, 177, 178, 179, 180, 246, 248, 288, 292, 301, 351, 359, 367, 374, 394, 398, 405, 435, 439], "print": [4, 22, 29, 40, 56, 61, 67, 71, 79, 156, 173, 220, 284, 288, 307, 310, 345, 365, 397, 399, 405, 413, 416, 444, 446, 448, 449, 452, 453, 459, 465, 488, 490, 491, 492, 493, 503, 505], "exceed": [4, 79, 405, 407, 499, 500], "recover": 5, "down": [5, 10, 20, 22, 310, 343, 346, 354, 373, 415, 451, 452, 477, 484, 488, 490, 505], "bound": [5, 50, 57, 60, 163, 170, 202, 220, 242, 268, 284, 304, 307, 309, 310, 315, 318, 332, 334, 335, 336, 339, 341, 342, 353, 355, 440, 469, 470, 471, 474, 495], "hierarch": [5, 10, 282, 310, 331, 503], "furthermor": [5, 56, 309, 336, 343, 452, 488], "intend": [5, 24, 153, 202, 215, 239, 240, 251, 282, 292, 310, 316, 329, 332, 341, 375, 403, 405, 408, 416, 446, 447, 452, 480, 490, 506], "dynam": [5, 48, 80, 102, 138, 205, 282, 310, 404, 412, 446, 503, 505], "yet": [5, 20, 47, 56, 202, 206, 220, 236, 240, 287, 291, 310, 314, 329, 397, 451, 481, 488, 498, 503], "undevelop": 5, "ad": [5, 26, 27, 38, 40, 45, 46, 48, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 156, 164, 172, 174, 177, 205, 209, 220, 240, 241, 244, 249, 251, 255, 282, 284, 287, 293, 294, 299, 304, 310, 316, 317, 321, 325, 330, 331, 335, 340, 345, 347, 351, 354, 363, 367, 379, 397, 413, 414, 443, 449, 451, 453, 468, 475, 476, 477, 480, 481, 483, 484, 485, 486, 488, 489, 493, 503], "dump": [5, 33, 39, 42, 43, 45, 46, 215, 237, 240, 283, 284, 330, 345, 366, 368, 372, 373, 477, 503], "again": [5, 10, 61, 189, 218, 282, 330, 346, 348, 381, 439, 448, 451, 452, 483, 494, 503, 505], "nitti": [5, 453], "gritti": [5, 453], "translat": [5, 282, 288, 328, 329, 341, 451, 481], "flat": [5, 9, 10, 287, 307, 316, 339, 398, 407, 418, 494], "pleas": [5, 20, 105, 284, 330, 402, 416, 444, 445, 446, 453, 482, 509], "convent": [5, 202, 215, 287, 332, 447, 453, 481, 503], "cxxnyi": 5, "arraydata": 5, "numpi": [5, 9, 10, 44, 79, 167, 310, 315, 340, 343, 346, 387, 408, 409, 416, 434, 452, 467, 471, 474, 484, 488, 490, 491, 493], "ndarrai": [5, 9, 10, 44, 79, 171, 179, 201, 284, 287, 310, 338, 339, 340, 341, 342, 346, 408, 409], "wouldn": [5, 45], "plai": [5, 282, 347, 446], "nice": [5, 84, 152, 166, 206, 213, 310, 333, 347, 397, 405, 416, 439, 446, 475, 490, 503], "arrai": [5, 9, 10, 44, 57, 79, 167, 168, 170, 284, 310, 315, 329, 330, 334, 339, 340, 343, 346, 387, 408, 409, 416, 427, 434, 484, 488, 490, 499, 505, 506], "conform": [5, 153, 282, 291, 307, 314, 336, 452, 483, 501], "both": [5, 48, 50, 79, 145, 152, 155, 161, 166, 167, 176, 202, 206, 213, 220, 287, 293, 310, 316, 323, 328, 329, 330, 332, 333, 345, 347, 354, 380, 413, 438, 444, 448, 460, 475, 481, 484, 486, 488, 490, 503, 507], "fit": [5, 93, 96, 97, 98, 100, 106, 138, 175, 205, 209, 240, 251, 287, 310, 330, 336, 339, 341, 346, 350, 407, 409, 416, 453, 503, 505], "ish": [5, 434], "accomplish": [5, 493, 505], "hand": [5, 27, 66, 166, 220, 323, 347, 355, 373, 380, 413, 443, 446, 448, 451, 481, 489, 493, 503], "known": [5, 57, 138, 153, 156, 251, 255, 282, 307, 330, 393, 401, 418, 446, 480, 503], "offend": 5, "variou": [5, 20, 22, 26, 29, 35, 61, 78, 79, 135, 153, 156, 163, 167, 175, 204, 205, 212, 216, 220, 270, 282, 288, 290, 310, 323, 330, 332, 346, 354, 355, 361, 366, 398, 409, 416, 427, 434, 438, 444, 446, 448, 455, 456, 458, 463, 479, 481, 482, 483, 488, 490, 494, 495, 496, 502, 503, 504, 505, 509], "necessari": [5, 21, 44, 46, 48, 114, 136, 152, 156, 172, 174, 176, 177, 196, 203, 255, 258, 282, 284, 287, 291, 325, 328, 341, 343, 346, 402, 414, 439, 446, 481, 491, 503, 505], "mind": [5, 284, 347], "alwai": [5, 10, 59, 105, 163, 166, 167, 168, 173, 175, 176, 196, 205, 244, 251, 282, 287, 292, 304, 309, 310, 317, 323, 329, 336, 339, 341, 343, 346, 398, 410, 412, 413, 416, 439, 449, 451, 452, 490, 498, 503], "deal": [5, 10, 45, 167, 168, 227, 246, 310, 375, 408, 449, 451, 494], "routin": [5, 17, 282, 307, 343, 409, 446, 481, 484, 503], "find": [5, 10, 20, 22, 48, 56, 80, 84, 96, 97, 100, 105, 153, 156, 174, 201, 202, 220, 244, 262, 282, 284, 287, 304, 307, 310, 315, 317, 330, 332, 343, 347, 361, 365, 366, 397, 407, 409, 413, 439, 452, 453, 481, 482, 483, 484, 488, 490, 493, 494, 503, 507, 509], "themselv": [5, 9, 282, 330, 343, 346, 375, 451, 483, 493], "lack": [5, 451, 481, 487], "nan": [5, 284, 304], "jag": [5, 9, 17, 346, 484, 486, 505], "concaten": [5, 365, 408], "dimension": [5, 9, 168, 239, 287, 309, 316, 317, 354, 416, 489, 505], "describ": [5, 10, 44, 46, 48, 67, 79, 90, 144, 156, 164, 213, 215, 220, 228, 282, 284, 288, 291, 305, 310, 329, 332, 333, 338, 341, 343, 346, 374, 398, 439, 451, 481, 494, 503, 504, 505, 507, 508], "shape": [5, 9, 17, 44, 126, 167, 284, 296, 299, 300, 302, 304, 305, 306, 307, 309, 310, 333, 354, 355, 356, 475, 480, 494, 495, 499, 504], "offset": [5, 9, 17, 44, 316, 330, 334, 335, 336, 339, 341, 342, 353, 398, 399, 467, 470, 477], "them": [5, 9, 10, 15, 16, 20, 38, 46, 47, 48, 49, 56, 61, 79, 105, 109, 156, 163, 166, 167, 174, 203, 205, 206, 209, 239, 246, 251, 255, 282, 284, 287, 293, 294, 307, 310, 311, 315, 316, 317, 330, 332, 333, 340, 341, 343, 345, 346, 355, 356, 358, 365, 373, 374, 381, 390, 392, 397, 398, 407, 410, 416, 423, 443, 446, 448, 449, 451, 452, 453, 480, 481, 488, 490, 493, 494, 495, 500, 503], "magic": [5, 206, 213, 282, 343, 347, 448, 488], "shouldn": [5, 260, 332], "realist": [5, 503], "scenario": [5, 213, 216, 227, 287, 292, 294, 347, 430, 446, 452, 453, 503], "1d": [5, 9, 176, 239, 240, 265, 315, 316, 340, 346, 387, 409, 484], "diagnost": [5, 10], "invert": 5, "straight": [5, 10], "closest": [5, 220, 323, 409, 503], "represent": [5, 10, 27, 46, 79, 167, 173, 178, 180, 220, 239, 240, 266, 287, 288, 292, 310, 333, 334, 338, 339, 341, 346, 349, 350, 398, 416, 446, 451, 452, 480, 481, 495, 499, 503, 505], "np": [5, 9, 44, 154, 164, 171, 201, 260, 284, 287, 310, 409, 452, 467, 471, 474, 477, 488, 490, 491, 493], "homogen": [5, 107, 168, 201, 202, 217, 240, 260, 287, 310, 316, 317, 325, 343, 354, 483, 484, 499, 503, 505], "densiti": [5, 52, 55, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 126, 130, 134, 135, 137, 138, 139, 140, 141, 142, 143, 153, 154, 156, 166, 178, 198, 201, 239, 240, 244, 246, 255, 260, 265, 283, 287, 288, 291, 293, 300, 302, 304, 307, 310, 315, 321, 323, 327, 328, 329, 330, 343, 354, 355, 356, 385, 401, 417, 421, 446, 460, 480, 481, 483, 484, 485, 486, 489, 491, 494, 495, 498, 499, 500, 501, 503, 505], "No": [5, 9, 45, 79, 81, 113, 117, 258, 260, 372, 398, 446, 452, 483, 488, 493, 495], "longer": [5, 35, 49, 240, 293, 306, 307, 356, 415, 416, 434, 452, 481, 483, 484, 486, 491, 499, 503], "numberdens": [5, 153, 201, 307, 310, 401, 500], "tool": [5, 9, 10, 18, 22, 29, 38, 46, 169, 199, 212, 224, 226, 251, 282, 331, 350, 360, 365, 394, 411, 413, 415, 425, 428, 431, 447, 448, 450, 480, 481, 482, 484, 486, 490, 494, 505, 509], "comput": [5, 29, 55, 79, 83, 93, 98, 105, 134, 164, 166, 167, 170, 201, 205, 209, 212, 237, 239, 251, 253, 255, 261, 287, 304, 305, 306, 307, 309, 310, 315, 317, 329, 340, 341, 354, 359, 364, 398, 409, 446, 447, 449, 452, 460, 464, 479, 481, 484, 488, 490, 493, 496, 503, 506], "slap": 5, "remov": [5, 20, 47, 56, 105, 147, 205, 220, 225, 239, 244, 246, 251, 266, 282, 283, 287, 288, 291, 294, 304, 307, 310, 317, 321, 330, 343, 361, 364, 378, 397, 410, 412, 447, 449, 481, 483, 484, 485, 486, 488, 498, 499, 501, 503], "better": [5, 20, 61, 79, 156, 163, 176, 205, 207, 282, 284, 332, 334, 349, 400, 416, 445, 452, 481, 483, 486, 503], "viz": [5, 45], "view": [5, 27, 28, 317, 339, 413, 451, 482, 488, 490, 503, 505, 509], "_readparam": 5, "compat": [6, 105, 176, 208, 220, 244, 284, 288, 307, 346, 405], "move": [6, 15, 48, 59, 156, 166, 207, 208, 215, 216, 219, 220, 282, 284, 288, 291, 293, 310, 321, 323, 329, 330, 332, 341, 349, 356, 380, 397, 403, 413, 415, 468, 480, 481, 483, 484, 486, 488, 498], "streamlin": [6, 481], "throughout": [7, 154, 156, 244, 310, 333, 334, 446, 452, 495, 498, 503], "rectangular": [9, 284, 305, 309, 341, 354, 503], "jaggeddata": 9, "preserv": [9, 35, 82, 83, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 145, 314, 323, 361, 365, 374, 387, 409, 438, 485, 503], "multi": [9, 244, 253, 255, 287, 329, 340, 346, 360, 453, 464, 478, 479, 480, 483, 488, 493, 496, 503, 505], "popul": [9, 90, 168, 251, 292, 339, 341, 351, 398, 415, 446, 449, 451], "layer": [9, 10, 290, 332, 340, 480, 490], "jagged": 9, "length": [9, 27, 96, 97, 100, 156, 162, 167, 170, 199, 205, 212, 251, 287, 306, 314, 315, 316, 323, 330, 338, 397, 407, 408, 409, 416, 438, 449, 451, 452, 486, 488, 491, 493, 494, 498, 503, 507, 508], "reconstitut": 9, "exactli": [9, 220, 287, 310, 330, 347, 407, 414, 449, 483, 488, 503], "But": [9, 32, 75, 156, 189, 287, 307, 330, 340, 350, 365, 397, 409, 445, 449, 452, 453, 459, 481, 490, 491, 495, 504], "final": [9, 40, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 105, 227, 241, 244, 307, 330, 355, 379, 413, 414, 444, 449, 453, 468, 484, 490, 494, 503, 506], "nest": [9, 22, 27, 282, 340, 397], "round": [9, 15, 220, 288, 298, 330], "trip": [9, 15, 288], "constructor": [9, 50, 78, 146, 152, 156, 205, 307, 316, 335, 339, 340, 341, 343, 408, 416, 439], "x": [9, 12, 15, 38, 44, 46, 126, 146, 168, 174, 198, 200, 201, 202, 203, 219, 220, 239, 240, 255, 258, 260, 265, 266, 269, 287, 288, 292, 293, 296, 299, 300, 302, 309, 310, 317, 330, 334, 336, 340, 341, 356, 373, 397, 409, 413, 415, 416, 440, 441, 452, 464, 466, 467, 468, 469, 470, 471, 476, 477, 478, 479, 483, 484, 486, 488, 492, 493, 494, 495, 496, 499, 503, 505], "recurs": [9, 10, 17, 22, 47, 56, 73, 105, 152, 310, 340, 345, 348, 366, 397, 412, 484], "classmethod": [9, 11, 78, 79, 152, 166, 167, 201, 240, 288, 289, 291, 293, 310, 314, 332, 333, 335, 336, 342, 345, 346, 351, 374, 402, 405], "dtype": [9, 310, 343], "accompani": [9, 448], "zeroth": [9, 10, 176], "constitu": [9, 310], "obj": [9, 22, 152, 156, 172, 174, 177, 202, 251, 284, 310, 321, 329, 331, 397], "alia": [9, 25, 67, 79, 122, 123, 124, 125, 126, 127, 128, 129, 130, 138, 175, 198, 205, 234, 270, 280, 284, 287, 289, 290, 291, 292, 293, 294, 304, 305, 306, 307, 309, 310, 330, 331, 341, 345, 349, 350, 355, 356, 373, 416, 503], "respond": 9, "unpackedjaggeddata": 9, "groundwork": 10, "map": [10, 11, 12, 15, 161, 164, 170, 173, 176, 178, 179, 239, 251, 253, 282, 288, 289, 290, 291, 292, 293, 294, 301, 310, 328, 329, 330, 334, 336, 340, 341, 343, 346, 351, 359, 374, 396, 398, 405, 413, 418, 446, 451, 460, 475, 481, 482, 483, 484, 488, 489, 490, 493, 495, 499, 501, 503, 505, 509], "datbas": 10, "tree": [10, 27, 70, 207, 287, 310, 340, 341, 347, 374, 380, 402, 443], "append": [10, 27, 38, 44, 153, 154, 205, 283, 284, 310, 315, 334, 340, 397, 408, 416, 439, 449, 465, 466, 467, 469, 470, 471, 474, 477, 492, 495], "search": [10, 56, 70, 80, 166, 202, 220, 240, 255, 287, 302, 310, 315, 323, 330, 332, 404, 409, 439, 481, 501], "a1": [10, 82, 220, 310, 330, 503], "a1b1": 10, "a1b1c1": 10, "a1b1c2": 10, "a1b2": 10, "a1b2c1": 10, "a2": [10, 82, 220, 310, 503], "aren": [10, 21, 160, 220, 240, 251, 372, 448, 494, 503], "algorithm": [10, 45, 50, 57, 217, 224, 329, 416, 468, 481, 484, 494, 503], "travers": [10, 310, 341, 446], "region": [10, 165, 168, 173, 175, 183, 196, 201, 202, 240, 284, 317, 318, 354, 490, 499, 501, 503], "indexindata": [10, 505], "increas": [10, 253, 314, 318, 341, 349, 396, 405, 409, 453, 465, 481, 499, 501, 503], "monoton": [10, 409, 503], "children": [10, 105, 284, 287, 294, 310, 343, 346, 348, 353, 354, 356, 404, 451, 505], "parent": [10, 48, 61, 83, 105, 164, 201, 215, 255, 256, 287, 290, 292, 298, 304, 307, 310, 331, 334, 340, 341, 343, 347, 349, 350, 354, 361, 365, 394, 413, 449, 488, 499], "contigu": [10, 494], "interleav": 10, "sibl": [10, 287, 304, 310, 503], "asid": [10, 332], "necessarili": [10, 57, 153, 166, 202, 481, 503], "child": [10, 27, 287, 292, 310, 317, 329, 331, 334, 446, 453, 484, 505], "serialnum": [10, 343, 345, 505], "numchildren": [10, 505], "reach": [10, 156, 212, 402, 407, 453, 481, 490, 503], "desir": [10, 23, 28, 94, 156, 168, 201, 215, 239, 260, 287, 292, 310, 341, 343, 345, 365, 402, 405, 407, 412, 445, 453, 475, 481, 503, 505], "ancestor": [10, 287, 310, 343, 347], "yield": [10, 105, 168, 239, 244, 246, 249, 310, 316, 330, 408, 484, 492, 503], "direct": [10, 62, 80, 167, 168, 191, 251, 287, 294, 309, 310, 317, 329, 334, 335, 339, 341, 346, 357, 409, 439, 441, 451, 481, 499, 501, 503, 505], "elemen": 10, "subsequ": [10, 176, 237, 316, 345, 346, 407], "form": [10, 28, 79, 138, 140, 166, 212, 239, 240, 251, 255, 282, 287, 291, 292, 298, 304, 310, 317, 333, 343, 347, 372, 375, 387, 397, 441, 483, 490, 493, 494, 499, 503], "lightweight": [10, 84], "stitch": [10, 439], "troubl": [10, 307, 490], "laid": [10, 343], "approach": [10, 22, 205, 220, 282, 284, 314, 330, 343, 351, 409, 452, 481, 484, 494, 503], "reason": [10, 43, 105, 152, 153, 239, 244, 251, 288, 293, 316, 332, 340, 341, 345, 416, 439, 445, 448, 449, 453, 481, 490, 499], "bad": [10, 156, 300, 375, 396, 452], "second": [10, 78, 93, 168, 183, 203, 212, 220, 240, 282, 284, 310, 330, 338, 351, 409, 415, 416, 440, 449, 452, 453, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 485, 492, 503], "pretti": [10, 288, 348, 416, 434, 439, 477], "unwieldi": 10, "consum": [10, 260, 293, 333, 408, 439, 481], "cursor": 10, "slice": [10, 309, 341, 409], "ineffici": [10, 287, 304, 307, 310], "cl": [10, 57, 154, 345, 404, 493, 503], "nonsens": [10, 11], "who": [10, 145, 201, 205, 375, 397, 447, 452, 453, 481, 486, 503], "treat": [10, 236, 239, 244, 284, 287, 310, 329, 330, 332, 358, 380, 416, 439, 503, 507], "might": [10, 48, 61, 153, 196, 251, 284, 287, 307, 409, 413, 416, 439, 446, 448, 452, 453, 484, 488, 490, 503, 505], "valid": [10, 35, 48, 61, 67, 70, 79, 81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 126, 132, 133, 134, 137, 138, 141, 142, 143, 154, 164, 189, 237, 239, 240, 245, 255, 263, 281, 282, 293, 302, 303, 307, 310, 316, 317, 329, 330, 332, 333, 340, 346, 355, 364, 366, 367, 372, 373, 375, 377, 400, 409, 410, 443, 446, 480, 481, 484, 486, 488, 490, 493, 503, 506], "storabl": [10, 405], "numer": [10, 140, 148, 164, 239, 240, 282, 287, 291, 293, 329, 334, 416, 483, 484, 499, 503, 506], "7": [10, 79, 83, 96, 97, 100, 106, 109, 138, 143, 148, 154, 156, 174, 185, 221, 291, 292, 300, 317, 336, 340, 355, 356, 408, 416, 452, 453, 459, 467, 488, 493, 495, 501, 503, 507], "9": [10, 22, 79, 83, 84, 102, 109, 136, 143, 154, 156, 221, 317, 336, 397, 408, 409, 416, 459, 467, 481, 482, 488, 492, 493, 494, 495, 503, 509], "6": [10, 57, 77, 79, 91, 100, 113, 137, 143, 148, 153, 154, 156, 174, 176, 185, 221, 287, 292, 309, 316, 317, 330, 336, 339, 355, 356, 398, 407, 408, 416, 438, 459, 466, 467, 469, 471, 474, 477, 488, 492, 493, 495, 503, 507], "revers": [10, 176, 179, 205, 221, 268, 310, 329, 339, 364, 446, 488], "essenti": [10, 20, 105, 152, 176, 260, 282, 288, 439, 494], "abil": [11, 62, 105, 220, 225, 268, 287, 341, 353, 360, 361, 413, 431, 439, 451, 483, 484], "arg": [11, 25, 40, 61, 65, 66, 67, 75, 79, 83, 90, 103, 109, 132, 134, 135, 136, 137, 138, 152, 170, 198, 239, 240, 281, 282, 289, 290, 291, 292, 293, 294, 304, 330, 339, 342, 346, 356, 365, 367, 381, 396, 397, 399, 416, 444, 484], "helper": [11, 22, 24, 59, 220, 245, 263, 310, 346, 350, 361, 365, 375, 384, 389, 391, 395, 490], "loader": [11, 288, 291, 293, 307], "round_trip_data": 11, "yamliz": [11, 282, 288, 289, 290, 291, 292, 293, 294, 439], "attribute_collect": [11, 288, 289, 290, 291, 292, 293, 294], "attributecollect": [11, 288, 289, 291, 292, 293, 294], "passiv": 11, "metadata": [11, 16, 144, 161, 168, 169, 176, 179, 184, 196, 282, 291, 343, 345, 346, 378, 415, 483, 484, 505], "To": [11, 20, 27, 46, 61, 78, 83, 146, 155, 201, 220, 282, 284, 287, 317, 329, 330, 332, 349, 380, 390, 392, 397, 416, 423, 439, 443, 444, 445, 446, 448, 449, 451, 453, 481, 482, 490, 491, 493, 494, 503, 505, 506, 509], "variabl": [11, 20, 48, 50, 51, 57, 79, 105, 146, 156, 164, 170, 171, 176, 196, 205, 215, 240, 251, 265, 284, 287, 292, 293, 307, 310, 313, 314, 317, 318, 323, 330, 338, 345, 397, 412, 416, 439, 446, 449, 452, 453, 480, 482, 483, 484, 486, 490, 502, 503, 509], "instanti": [11, 21, 78, 126, 156, 163, 203, 204, 205, 218, 220, 282, 343, 345, 347, 360, 364, 367, 416, 446, 448], "obvious": [11, 217, 282, 349, 453], "huge": [11, 260, 439], "whole": [11, 42, 43, 62, 176, 201, 220, 297, 310, 330, 353, 445, 449, 453, 481, 483, 490, 494, 503], "lose": [11, 154, 156, 481], "claim": 11, "fidel": [11, 244, 287, 298, 481, 498, 499, 503], "your": [11, 20, 22, 32, 47, 78, 83, 105, 201, 215, 220, 240, 246, 251, 282, 311, 329, 330, 367, 375, 397, 399, 402, 409, 413, 415, 443, 444, 445, 446, 449, 452, 453, 454, 460, 461, 474, 479, 481, 482, 488, 489, 493, 494, 496, 503, 509], "understand": [11, 206, 339, 346, 444, 448, 449, 451, 453, 481], "unitless": [11, 105], "test_outputwrit": [13, 14], "test_compareset": [13, 14], "test_diffresultsbas": [13, 14], "test_comparedatabasedupl": [13, 14], "test_comparedatabasesim": [13, 14], "test_diffspecialdata": [13, 14], "test_diffsimpledata": [13, 14], "test_compareauxdata": [13, 14], "makeshufflehistori": [13, 15], "test_load": [13, 15], "test_loadsortset": [13, 15], "test_histori": [13, 15], "makehistori": [13, 15], "test_writetodb": [13, 15], "test_geth5fil": [13, 15], "test_auxdata": [13, 15], "test_replacenon": [13, 15], "test_mergehistori": [13, 15], "test_splitdatabas": [13, 15], "test_grablocalcommithash": [13, 15], "test_filenam": [13, 15], "test_readinputsfromdb": [13, 15], "test_delet": [13, 15], "test_open": [13, 15], "test_loadc": [13, 15], "test_loadblueprint": [13, 15], "test_preprestartrun": [13, 15], "test_computepar": [13, 15], "small_yaml": [13, 15], "test_readwriteroundtrip": [13, 15], "test_baddata": [13, 15], "test_interactbol": [13, 16, 257, 258, 264, 265], "test_distribut": [13, 16, 380, 387], "test_demonstratewritinginteract": [13, 16], "test_interacteverynodereturntightcoupl": [13, 16], "test_timenodeloop_tightcoupl": [13, 16], "test_syncdbafterwrit": [13, 16], "test_nosyncdbafterwrit": [13, 16], "test_writesystemattribut": [13, 16], "test_metadata_endsuccessfulli": [13, 16], "test_metadataendfail": [13, 16], "test_gethistori": [13, 16], "test_gethistorybyloc": [13, 16], "test_loadreadonli": [13, 16], "test_growtofullcor": [13, 16, 352, 359, 361], "test_growtofullcorewithc": [13, 16], "test_growtofullcorefromfactori": [13, 16], "test_growtofullcorefromfactorywithc": [13, 16], "test_readwritten": [13, 16], "test_readwithoutinput": [13, 16], "test_varioustypeswork": [13, 16], "test_timestep": [13, 16], "test_baddbnam": [13, 16], "test_standardrestart": [13, 16], "test_roundtrip": [13, 17, 295, 301], "test_roundtripbool": [13, 17], "test_flatten": [13, 17, 417, 426], "test_backwardscompat": [13, 17], "test_locationpack": [13, 18], "test_locationpackingoldervers": [13, 18], "test_locationpackingoldvers": [13, 18], "test_clos": [13, 18], "methodnam": [14, 15, 16, 17, 18, 31, 32, 35, 36, 37, 42, 43, 54, 55, 59, 60, 75, 76, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 158, 159, 160, 161, 162, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 211, 212, 224, 225, 226, 233, 234, 235, 248, 249, 253, 258, 259, 265, 266, 267, 268, 269, 270, 273, 280, 296, 297, 298, 299, 300, 301, 302, 303, 323, 324, 325, 326, 327, 328, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "runtest": [14, 15, 16, 17, 18, 31, 32, 35, 36, 37, 42, 43, 54, 55, 59, 60, 75, 76, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 158, 159, 160, 161, 162, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 211, 212, 224, 225, 226, 233, 234, 235, 248, 249, 253, 258, 259, 265, 266, 267, 268, 269, 270, 273, 280, 296, 297, 298, 299, 300, 301, 302, 303, 322, 323, 324, 325, 326, 327, 328, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "testcas": [14, 15, 16, 17, 18, 31, 32, 35, 36, 37, 42, 43, 54, 55, 59, 60, 75, 76, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 158, 159, 160, 161, 162, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 211, 212, 225, 233, 235, 248, 249, 253, 258, 259, 265, 266, 267, 268, 269, 270, 273, 296, 297, 298, 299, 300, 301, 302, 303, 323, 324, 325, 326, 327, 328, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 377, 378, 379, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 452], "valueerror": [14, 15, 16, 17, 18, 31, 32, 35, 36, 37, 42, 43, 54, 55, 59, 60, 75, 76, 79, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 151, 158, 159, 160, 161, 162, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 204, 211, 212, 224, 225, 226, 233, 234, 235, 239, 240, 248, 249, 253, 255, 258, 259, 265, 266, 267, 268, 269, 270, 273, 280, 284, 287, 288, 294, 296, 297, 298, 299, 300, 301, 302, 303, 315, 316, 323, 324, 325, 326, 327, 328, 346, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 373, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 407, 412, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 486], "photocopi": 14, "simlar": 14, "walk": [15, 488, 494], "few": [15, 20, 33, 156, 237, 260, 330, 364, 446, 449, 452, 453, 467, 480, 481, 493, 494, 495, 503, 505], "shuffl": [15, 217, 219, 220, 221, 225, 292, 320, 330, 332, 413, 484, 488, 494, 499, 501, 503], "languag": [15, 343, 468, 481, 494], "agnost": 15, "super": [15, 45, 57, 75, 137, 258, 259, 309, 405, 453], "correctli": [15, 17, 166, 212, 258, 265, 266, 273, 280, 284, 287, 309, 323, 328, 354, 355, 361, 362, 391, 393, 396, 431, 436, 453, 484, 486, 490], "armirun": [15, 225, 361], "setup": [15, 282, 317, 323, 367, 453, 484], "abov": [15, 103, 152, 154, 164, 236, 251, 282, 284, 310, 323, 332, 340, 347, 361, 398, 408, 421, 441, 446, 448, 449, 451, 453, 467, 480, 481, 490, 494, 495, 499, 503, 505, 506], "reloadingdb": 15, "nonexist": [15, 378], "refoneblockreactor": 15, "nsystem": 15, "y": [15, 27, 38, 44, 94, 109, 115, 137, 143, 154, 220, 262, 287, 292, 309, 334, 336, 340, 341, 407, 409, 413, 415, 416, 435, 440, 441, 452, 466, 468, 469, 470, 471, 476, 477, 492, 494, 495, 499, 503, 505], "z": [15, 38, 44, 84, 91, 113, 138, 140, 153, 154, 155, 156, 158, 191, 284, 287, 292, 301, 310, 311, 317, 318, 323, 325, 329, 330, 334, 335, 336, 339, 340, 341, 416, 441, 446, 464, 466, 468, 469, 470, 474, 476, 477, 478, 479, 483, 488, 492, 494, 495, 496, 499, 503], "sfp": [15, 28, 35, 220, 225, 282, 284, 288, 292, 294, 330, 331, 349, 350, 361, 484, 488, 498, 503], "1000": [15, 140, 143, 156, 253, 449, 453, 488, 493, 494, 498, 503], "evst": 15, "excor": [15, 282, 331, 357, 488, 493, 503], "2000": [15, 109, 113, 114, 126, 138, 143, 491, 503], "ngrid": 15, "hex_corners_up": 15, "lattic": [15, 170, 174, 201, 219, 225, 237, 239, 240, 251, 254, 255, 256, 258, 259, 265, 287, 292, 293, 297, 301, 305, 310, 316, 341, 398, 407, 446, 460, 484, 486, 494, 495], "ic": [15, 126, 292, 296, 299, 300, 302, 475, 494, 503], "symmetri": [15, 251, 283, 284, 287, 292, 310, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 398, 467, 475, 481, 483, 484, 494, 495, 498, 503], "32": [15, 154, 332, 346, 405, 416, 481, 494], "hex": [15, 54, 55, 176, 179, 188, 191, 193, 217, 221, 224, 226, 240, 251, 283, 287, 292, 310, 316, 317, 325, 326, 330, 333, 334, 336, 338, 339, 340, 341, 351, 353, 354, 355, 359, 361, 380, 398, 407, 408, 418, 458, 462, 464, 467, 475, 478, 479, 480, 481, 483, 484, 486, 488, 494, 496, 498, 499, 501, 503], "And": [15, 213, 216, 284, 341, 365, 444, 445, 452, 453, 490, 494], "cover": [16, 126, 161, 255, 310, 328, 354, 380, 445, 452, 490, 502], "quickli": [16, 20, 205, 361, 380, 443, 450, 477, 481, 486, 490, 493, 495], "bol": [16, 20, 26, 33, 71, 79, 205, 213, 237, 255, 262, 265, 282, 287, 288, 310, 314, 330, 413, 446, 451, 480, 483, 484, 488, 493, 499, 500, 501, 503, 505, 508], "NOT": [16, 78, 101, 102, 152, 176, 212, 220, 221, 310, 314, 354], "fast": [16, 22, 78, 177, 185, 215, 221, 242, 244, 251, 287, 311, 330, 334, 439, 448, 460, 480, 481, 483, 488, 489, 493, 495, 499, 501, 503], "everi": [16, 22, 57, 79, 160, 176, 205, 237, 239, 244, 251, 255, 284, 310, 330, 343, 364, 367, 380, 396, 398, 399, 408, 409, 413, 415, 416, 439, 446, 451, 453, 482, 486, 490, 493, 495, 498, 503, 509], "syncdbafterwrit": [16, 483, 486, 503], "either": [17, 27, 45, 48, 57, 59, 79, 80, 105, 165, 168, 170, 176, 179, 201, 205, 206, 215, 220, 240, 244, 255, 260, 282, 287, 291, 292, 293, 298, 310, 317, 332, 334, 338, 340, 341, 365, 373, 375, 380, 398, 399, 401, 413, 439, 448, 449, 452, 453, 475, 481, 490, 494, 495, 503], "text": [20, 22, 61, 62, 67, 79, 163, 287, 288, 307, 310, 316, 365, 380, 387, 394, 398, 413, 416, 434, 439, 444, 453, 469, 477, 484, 488, 494, 503, 505, 506], "mechan": [20, 79, 80, 88, 117, 227, 307, 330, 332, 378, 449, 481, 482, 490, 503, 506, 509], "etc": [20, 21, 27, 48, 79, 105, 109, 135, 153, 155, 163, 164, 201, 202, 203, 205, 209, 213, 220, 239, 244, 246, 251, 261, 282, 283, 284, 287, 288, 294, 305, 307, 310, 314, 316, 317, 330, 332, 341, 343, 346, 365, 367, 381, 397, 398, 412, 413, 439, 446, 448, 449, 451, 452, 480, 481, 488, 492, 493, 494, 495, 502, 503], "particularli": [20, 43, 67, 240, 323, 330, 341, 448, 452, 490, 495, 503], "eqhistorytrackerinterfac": 20, "unravel": 20, "interest": [20, 22, 50, 84, 86, 284, 315, 316, 323, 330, 446, 466, 481, 490, 502, 503], "armiblock": 20, "blocknam": 20, "historykei": 20, "paralyzingli": 20, "slow": [20, 310, 329, 439, 450, 484], "def": [20, 57, 282, 343, 346, 399, 408, 414, 444, 448, 449, 465, 467, 475, 477, 488, 490, 493, 494, 503], "percentbu": [20, 220, 468, 499, 500], "now": [20, 38, 48, 50, 105, 140, 147, 176, 189, 202, 208, 253, 255, 282, 287, 310, 331, 339, 343, 443, 449, 451, 452, 453, 481, 482, 483, 484, 485, 486, 488, 489, 490, 493, 494, 498, 503, 504, 506, 509], "assemswithhistori": 20, "timestepsavail": 20, "gettimeindic": 20, "fluxattimestep3": 20, "b1003a": 20, "date": [20, 239, 251, 282, 330, 341, 373, 443, 453, 483, 484, 485, 486, 488, 490, 503], "stop": [20, 77, 340, 399, 439, 453, 474, 481], "detailassemblynam": 20, "year": [20, 105, 415, 453, 481, 501], "look": [20, 22, 29, 140, 153, 155, 156, 164, 205, 215, 220, 239, 244, 284, 287, 310, 317, 330, 332, 341, 343, 404, 416, 445, 448, 449, 450, 453, 488, 490, 491, 494, 503], "ask": [20, 22, 61, 287, 310, 375, 400, 412], "activ": [20, 33, 48, 61, 73, 79, 152, 156, 164, 202, 205, 282, 284, 291, 293, 307, 330, 374, 375, 413, 443, 445, 446, 448, 452, 453, 481, 482, 484, 490, 499, 503, 509], "treatment": [20, 33, 244, 293, 346, 503], "assem": [20, 220, 225, 302, 314, 317, 328, 329, 330, 331, 350, 397, 413, 488], "give": [20, 26, 94, 135, 140, 155, 220, 237, 287, 293, 304, 307, 310, 323, 340, 341, 365, 409, 410, 451, 485, 494, 495, 505], "signal": [20, 33, 78, 287, 346, 347], "timeindic": 20, "boc": [20, 79, 205, 213, 237, 251, 255, 258, 265, 287, 397, 446, 480, 499, 503, 505], "moc": [20, 79, 251], "fashion": [20, 452], "inexpens": 20, "simultan": [20, 409], "preload": 20, "keyerror": [20, 56, 80, 332], "found": [20, 27, 43, 59, 80, 168, 213, 215, 220, 282, 284, 287, 310, 315, 323, 330, 332, 333, 336, 338, 347, 400, 404, 409, 410, 435, 439, 446, 451, 481, 487, 488, 490, 493, 503], "manipul": [21, 48, 66, 77, 166, 205, 282, 337, 365, 412, 439, 503, 504, 505], "catch": [21, 164, 361, 424], "admittedli": 21, "_c": [21, 244], "databs": 21, "soon": [21, 282, 307, 310, 351, 452, 453, 456, 463, 479, 481, 483, 490, 491, 496], "construct": [21, 33, 57, 59, 71, 79, 80, 90, 153, 171, 183, 201, 212, 255, 261, 282, 283, 288, 289, 290, 291, 292, 294, 297, 298, 302, 303, 307, 310, 314, 323, 330, 332, 333, 336, 340, 341, 342, 343, 355, 375, 387, 390, 393, 396, 408, 468, 475, 476, 483, 488, 493, 503, 505], "argument": [21, 33, 40, 54, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 105, 152, 155, 212, 239, 241, 282, 292, 305, 307, 310, 323, 330, 338, 340, 341, 343, 346, 367, 375, 379, 380, 387, 390, 396, 416, 444, 446, 448, 451, 452, 453, 483, 484, 486, 488], "delet": [21, 22, 63, 78, 79, 145, 147, 154, 156, 176, 251, 317, 330, 364, 365, 380, 402, 403, 412, 443, 452, 484, 503], "clean": [21, 63, 78, 147, 156, 215, 310, 317, 402, 422, 443, 446, 453, 484, 503], "job": [21, 78, 240, 316, 431, 503], "cours": [21, 220, 311, 447, 481, 493, 494, 495], "diagnos": [22, 389], "psutil": 22, "perspect": [22, 145, 244, 282, 439, 490, 498], "great": [22, 102, 330, 343, 431, 443, 453, 481, 503], "gc": 22, "get_object": 22, "garbag": [22, 78], "collector": [22, 78], "count": [22, 23, 24, 28, 166, 167, 239, 287, 330, 336, 350, 381, 388, 397, 415, 416, 484, 495], "note": [22, 95, 153, 170, 405, 408, 415, 416, 433, 445, 449, 465, 477, 481, 488, 495, 498, 499, 503, 505], "sy": [22, 77, 490], "getsizeof": 22, "certainli": [22, 453, 495, 503], "slightli": [22, 66, 220, 281, 287, 293, 341, 483, 486, 490, 494, 503], "seem": [22, 34, 46, 221, 251, 341, 343, 373], "de": [22, 45, 287, 365], "alloc": [22, 168, 239, 240], "got": [22, 145], "2gb": 22, "pythonhost": 22, "hook": [22, 48, 79, 205, 253, 281, 282, 291, 393, 396, 447, 448, 481, 483, 486, 490, 503], "good": [22, 46, 48, 93, 140, 174, 205, 221, 258, 288, 307, 346, 380, 413, 416, 445, 447, 451, 452, 481, 482, 483, 488, 490, 503, 509], "summari": [22, 28, 29, 40, 62, 67, 71, 154, 215, 283, 294, 303, 310, 318, 330, 364, 447, 468, 475, 476, 488, 503, 505], "timedescript": 22, "stdout": [22, 215, 303, 365, 490, 505], "debugmem": [22, 503], "turn": [22, 84, 239, 251, 255, 258, 282, 284, 287, 292, 330, 365, 387, 397, 439, 444, 446, 448, 475, 481, 483, 493, 495, 503, 506], "problem": [22, 56, 105, 164, 168, 170, 171, 183, 240, 251, 255, 256, 293, 300, 310, 329, 330, 340, 341, 342, 364, 375, 378, 415, 446, 453, 477, 481, 494, 495, 501, 503], "attrnam": 22, "refobject": 22, "thorugh": 22, "referr": 22, "oppos": [22, 287, 307, 387, 398], "gigabyt": 22, "reports": 22, "u": [22, 109, 126, 135, 136, 137, 138, 154, 155, 156, 166, 185, 221, 244, 282, 287, 288, 291, 292, 296, 302, 310, 332, 345, 365, 401, 452, 472, 473, 477, 481, 482, 488, 490, 494, 495, 509], "footprint": 22, "ao": 22, "arbitrarili": [22, 329, 330, 332, 396, 490, 503], "deepli": 22, "focus": [22, 339, 481, 495, 503], "held": [22, 310, 330], "classtyp": 22, "sys_mem": 22, "hostnam": 22, "14": [22, 113, 137, 154, 221, 336, 416, 467, 478, 488, 492, 494, 503], "ram": [22, 481], "proc": 22, "mem": 22, "mb": [22, 462, 478, 501], "491": 22, "472": 22, "471": 22, "470": [22, 503], "13": [22, 137, 154, 221, 336, 409, 416, 446, 467, 484, 488, 492, 503], "474": 22, "473": [22, 82, 93, 459, 462], "460": 22, "461": 22, "printabl": 23, "test_newreport": [23, 30], "testreportcontentcr": [23, 30, 31], "test_report": [23, 30], "testreportingutil": [23, 30, 32], "testreport": [23, 30, 32], "testreportinterfac": [23, 30, 32], "groupsorderfirst": [23, 24], "componentwellgroup": [23, 24], "addtoreport": [23, 24], "writehtml": [23, 24], "writegroupshtml": [23, 24], "writeescap": [23, 25], "writereport": [23, 27, 28, 451], "tableofcont": [23, 27], "leveldict": [23, 27], "addchildel": [23, 27, 451], "addrow": [23, 27, 451], "generatedesignreport": [23, 28], "printreport": [23, 28, 32], "writerunsummari": [23, 28], "reportsfp": [23, 28], "countassembliessfp": [23, 28], "insert": [24, 27, 66, 105, 205, 282, 283, 284, 287, 310, 350, 415, 446, 451, 498], "datum": [24, 409], "f": [24, 25, 94, 105, 154, 201, 221, 345, 409, 413, 416, 439, 444, 449, 450, 465, 469, 488, 490, 491, 492, 493, 495, 503, 505], "midst": [24, 310], "accept": [24, 50, 152, 156, 220, 284, 338, 342, 346, 373, 416, 441, 445, 452, 483, 503], "reportdatum": 24, "kwd": 25, "file_path": [25, 27], "embed": [25, 27, 46, 503], "src": [25, 27, 397, 439, 443, 473], "base64": [25, 27], "casetitl": [25, 215, 251, 366, 367, 475], "comprehens": [26, 262, 332, 451], "summar": [26, 29, 40, 56, 67, 71, 205, 364, 365, 451, 468, 475, 476, 484, 488, 503], "cold": [26, 105, 287, 304, 305, 306, 307, 309, 310, 314, 321, 323, 354, 355, 356, 413, 451, 484, 486, 494, 498, 499, 503, 504], "boolean": [26, 27, 79, 152, 156, 167, 205, 260, 284, 287, 310, 314, 316, 317, 323, 330, 333, 366, 373, 393, 409, 413, 415, 439, 499, 503], "part": [26, 57, 117, 168, 205, 240, 282, 310, 317, 321, 332, 336, 338, 346, 416, 439, 448, 451, 452, 460, 481, 484, 490, 493, 503], "tablesect": [26, 27], "control": [26, 33, 51, 83, 173, 175, 176, 178, 184, 191, 212, 220, 237, 239, 240, 283, 284, 287, 288, 292, 293, 310, 316, 317, 324, 329, 330, 332, 342, 343, 368, 416, 449, 453, 460, 480, 481, 483, 484, 488, 490, 493, 498, 499, 501, 503, 505], "pin": [26, 29, 217, 221, 227, 236, 251, 283, 284, 287, 292, 304, 306, 307, 310, 311, 314, 316, 321, 327, 330, 332, 334, 340, 346, 353, 354, 361, 398, 407, 446, 460, 480, 481, 484, 486, 488, 493, 494, 495, 499, 500, 501, 504], "fraction": [26, 81, 83, 85, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 109, 116, 126, 134, 135, 136, 138, 139, 155, 156, 164, 170, 205, 212, 236, 237, 239, 246, 270, 287, 291, 300, 304, 307, 310, 315, 317, 321, 329, 330, 338, 354, 355, 366, 397, 399, 401, 421, 438, 446, 451, 464, 474, 478, 479, 480, 481, 483, 484, 488, 491, 494, 496, 498, 499, 500, 501, 503, 508], "subsect": [26, 27, 221, 288, 443, 482, 509], "componenet": 26, "generatefullcoremap": [26, 28, 29], "showblockaxmesh": [26, 28, 29, 413, 475], "hold": [27, 79, 166, 179, 180, 204, 240, 284, 289, 304, 307, 310, 317, 341, 343, 345, 407, 480, 503], "abc": [27, 39, 288, 338, 340], "htmltree": [27, 451], "htmlelement": [27, 451], "idprefix": 27, "higher": [27, 176, 220, 282, 284, 307, 323, 446, 494, 505], "font": [27, 413], "rang": [27, 47, 57, 93, 104, 116, 330, 341, 343, 394, 408, 449, 453, 457, 464, 468, 470, 471, 479, 488, 493, 496, 503], "term": [27, 164, 167, 168, 213, 220, 239, 246, 251, 330, 334, 409, 480, 481, 494], "href": 27, "referenc": [27, 163, 166, 367], "left": [27, 156, 163, 219, 282, 307, 310, 336, 338, 340, 341, 373, 398, 409, 416, 451, 505, 506, 507], "subhead": 27, "imagepath": 27, "encod": 27, "hexplot": 27, "premad": 27, "png": [27, 317, 413, 450, 459, 503], "With": [27, 45, 284, 341, 347, 488, 494, 503, 506], "row": [27, 44, 167, 183, 203, 310, 398, 408, 416, 418, 434, 451, 505], "rname": [27, 451], "yaxi": [27, 262, 415, 451], "eventu": [27, 152, 288, 333, 398, 483, 503], "axi": [27, 176, 262, 287, 323, 340, 341, 398, 407, 413, 415, 441, 498, 499, 501], "identifi": [27, 78, 105, 153, 156, 282, 287, 288, 315, 397, 401, 436, 481, 494, 499, 503], "peakdpa": 27, "keff": [27, 212, 251, 253, 330, 372, 409, 415, 446, 451, 488, 499, 501, 503, 506], "seri": [27, 56, 57, 78, 152, 153, 174, 205, 409, 415, 443, 493, 503], "effect": [27, 52, 60, 109, 138, 156, 170, 239, 240, 255, 289, 293, 310, 316, 329, 330, 345, 380, 451, 481, 501, 503, 506], "uncertainti": [27, 451], "keffunc": [27, 415, 451, 501], "uncontrol": [27, 212, 415, 438, 494, 495, 501], "burn": [27, 126, 154, 156, 160, 164, 212, 239, 244, 251, 287, 288, 293, 296, 300, 302, 397, 438, 452, 477, 480, 495, 499, 503], "getassembli": [27, 283, 330, 350, 446, 468, 488, 505], "peakbu": 27, "bu": [27, 217, 220, 221, 239, 451, 452, 488, 493], "maxvalu": 27, "defaultdict": [27, 240, 465, 492], "max": [27, 82, 105, 212, 220, 225, 251, 262, 287, 310, 330, 343, 346, 349, 350, 484, 498, 501, 503, 506, 508], "maxpercentbu": [27, 220, 330, 498, 501, 503], "linetoaddto": 27, "our": [27, 46, 192, 365, 373, 405, 426, 445, 448, 451, 452, 453, 466, 481, 487, 490, 494, 503, 506, 507], "ymin": [27, 415, 469], "ext": [27, 91, 93, 124, 374, 380, 443], "minimum": [27, 105, 240, 310, 316, 329, 336, 339, 341, 401, 413, 415, 499, 501, 503], "enum": [27, 78, 79, 154, 180, 238, 240, 333, 374, 405, 483], "enumer": [27, 154, 237, 333, 374, 449, 459, 474, 477, 483], "pdf": [28, 81, 82, 93, 95, 96, 97, 98, 99, 100, 109, 131, 134, 138, 140, 155, 163, 176, 443, 484, 503], "disabl": [28, 79, 205, 240, 251, 255, 416, 422, 434, 446, 483, 499, 503], "spent": [28, 220, 225, 294, 330, 334, 348, 350, 357, 446, 476, 481, 483, 484, 488, 495, 498, 501, 503], "pool": [28, 220, 225, 294, 330, 334, 348, 350, 357, 446, 476, 483, 484, 488, 495, 498, 503], "miscellan": 29, "Then": [29, 47, 166, 239, 284, 287, 310, 490], "processor": [29, 78, 145, 152, 206, 240, 255, 387, 439, 449, 486, 488, 494], "convergencesummari": 29, "weight": [29, 56, 85, 153, 154, 155, 156, 170, 201, 202, 239, 265, 307, 310, 330, 401, 477, 484, 490, 492, 499, 501, 503], "balanc": [29, 180, 201, 240, 251, 253, 389, 449, 452, 499], "duct": [29, 94, 283, 287, 304, 307, 316, 323, 324, 330, 332, 354, 356, 413, 460, 465, 475, 481, 488, 493, 494, 499, 503], "simplist": [29, 503], "averag": [29, 93, 98, 105, 170, 176, 201, 239, 251, 265, 284, 287, 309, 310, 314, 315, 317, 329, 330, 332, 343, 346, 353, 409, 413, 427, 484, 488, 492, 494, 498, 499, 501, 503], "fz": 29, "fxy": 29, "fq": 29, "edit": [29, 57, 291, 444, 446, 453, 482, 494, 503, 505, 509], "test_timeseri": [30, 31], "test_tablecr": [30, 31], "test_reportcont": [30, 31], "test_reportcontentsend": [30, 31], "test_neutronicsplotfunct": [30, 31], "test_writereport": [30, 31, 32], "test_reportbas": [30, 31], "test_reportlog": [30, 31], "test_getsysteminfolinux": [30, 32], "test_getsysteminfowindow": [30, 32], "test_getsysteminfomac": [30, 32], "test_getsysteminfo": [30, 32], "test_getnodenam": [30, 32], "test_setdata": [30, 32], "test_getdata": [30, 32], "test_reactorspecificreport": [30, 32], "test_writewelcomehead": [30, 32], "test_printreport": [30, 32], "test_distributablereportint": [30, 32], "test_interactbolreportint": [30, 32], "test_interacteverynod": [30, 32, 34, 37, 257, 258, 264, 265], "test_interactboc": [30, 32, 223, 225, 257, 258, 264, 265], "test_interacteoc": [30, 32], "test_interacteol": [30, 32], "_getsysteminfolinux": 32, "mock": [32, 225, 253, 354, 381, 391], "mocksubprocess": 32, "_getsysteminfowindow": 32, "_getsysteminfomac": 32, "saniti": [32, 325, 393, 434], "wild": 32, "mainstream": [32, 145], "distro": 32, "fail": [32, 75, 78, 156, 202, 239, 268, 284, 336, 351, 366, 367, 375, 380, 390, 391, 394, 397, 410, 414, 422, 483, 484, 486, 503], "empti": [32, 38, 44, 79, 105, 139, 156, 202, 212, 239, 255, 282, 284, 287, 329, 345, 354, 355, 356, 361, 380, 405, 413, 416, 418, 434, 480, 484, 490, 494, 503], "machin": [32, 73, 206, 220, 225, 413, 415, 481, 482, 488, 509], "cluster": [32, 47, 56, 61, 78, 367, 412, 493, 503], "trigger": [33, 152, 163, 167, 237, 282, 347, 468, 475, 476, 480, 481, 488, 498, 505], "folder": [33, 62, 205, 213, 215, 410, 422, 443, 451, 452, 482, 490, 493, 505, 509], "review": [33, 138, 164, 205, 380, 445, 446, 452, 453], "collabor": [33, 282, 481], "dumpsnapshot": [33, 37, 503], "defaultsnapshot": [33, 503], "manageri": 33, "assign": [33, 79, 105, 154, 201, 220, 240, 266, 287, 307, 315, 332, 334, 340, 343, 345, 346, 355, 414, 484, 488, 499, 503], "mol": [33, 83, 109, 134, 138, 503], "stamp": 33, "cccnnn": [33, 503], "opposit": [33, 306, 341, 449], "engin": [34, 48, 84, 111, 164, 228, 447, 490, 491, 492, 493, 503], "world": [34, 251, 397, 434], "test_calcmgflu": [34, 35], "test_historyparamet": [34, 35], "test_historyreport": [34, 35], "test_getblockinassembli": [34, 35], "test_timestepfilt": [34, 35], "test_timestepfilteringwithgap": [34, 35], "test_blocknam": [34, 35], "test_fullbreakdown": [34, 36], "test_displaymemoryusag": [34, 36], "test_printfullmemorybreakdown": [34, 36], "test_getreferr": [34, 36], "test_checkforduplicateobjectsonarmimodel": [34, 36], "test_profilememoryusageact": [34, 36], "get_contain": [34, 36], "test_expandcontain": [34, 36], "test_counthandlesrecurs": [34, 36], "test_interactcoupl": [34, 37], "test_activeatedefaultsnapshots_30cycles2burnstep": [34, 37], "test_activeatedefaultsnapshots_17cycles5burnstep": [34, 37], "confirm": [35, 354, 375], "mg": [35, 154], "hdf": [35, 488], "hdfdb": [35, 78], "readblockshistori": 35, "historical_valu": 35, "historical_indic": 35, "cast": [35, 136], "energi": [35, 155, 159, 168, 170, 176, 179, 180, 183, 194, 201, 202, 242, 251, 253, 268, 287, 307, 310, 330, 354, 410, 413, 446, 472, 480, 481, 484, 490, 499, 501, 503], "retriev": [35, 79, 153, 154, 156, 185, 202, 203, 205, 212, 248, 307, 310, 315, 330, 332, 339, 343, 353, 354, 355, 356, 361, 402, 483, 488, 492, 503], "paramat": 35, "swap": [35, 145, 147, 220, 415, 468, 488, 503], "5": [35, 37, 55, 57, 79, 81, 84, 94, 97, 98, 102, 113, 121, 137, 140, 141, 143, 152, 154, 164, 168, 174, 176, 191, 212, 220, 221, 236, 237, 246, 284, 287, 296, 317, 323, 336, 339, 341, 353, 355, 397, 408, 416, 435, 438, 451, 453, 466, 467, 468, 470, 471, 475, 476, 477, 486, 488, 490, 492, 493, 494, 495, 499, 503, 505, 507], "loc": [35, 330, 331, 346, 350, 364, 446, 495], "mocksnapshotrequest": 37, "30": [37, 109, 132, 133, 154, 163, 179, 212, 284, 330, 339, 355, 398, 408, 416, 438, 453, 475, 488, 494, 503], "burnstep": [37, 47, 204, 205, 397, 438, 494, 495, 503], "17": [37, 109, 154, 164, 168, 221, 336, 483, 488, 492, 503], "amen": 38, "theoret": [38, 83, 105, 130, 302, 307, 355, 484, 486, 500], "sort": [38, 79, 154, 176, 283, 287, 304, 310, 330, 332, 339, 343, 354, 361, 364, 405, 413, 439, 467, 468, 484, 488, 493, 503], "wide": [38, 171, 306, 310, 370, 380, 444, 491, 494, 501], "vi": [38, 39, 40, 490], "qualiti": [38, 94, 114, 136, 453, 474, 481, 491], "pure": [38, 82, 109, 111, 134, 137, 330, 365, 398, 405, 434, 439, 491], "silo": 38, "binari": [38, 46, 79, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 183, 184, 185, 187, 191, 408, 472, 490, 503, 505], "test_vi": [38, 41, 43], "testvtkmesh": [38, 41, 42], "testvisdump": [38, 41, 42], "test_xdmf": [38, 41], "testxdmf": [38, 41, 43], "dumpstat": [38, 39, 45, 46], "addopt": [38, 40, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 237, 241, 366, 373, 444], "settingsargu": [38, 40, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 237, 241, 376, 379, 444], "docstr": [40, 67, 71, 166, 414, 416, 443, 447, 448, 451, 453, 485], "decor": [40, 67, 71, 346, 380, 399, 400, 410, 420, 448], "instead": [40, 67, 71, 80, 105, 156, 205, 215, 220, 255, 258, 282, 284, 287, 292, 294, 304, 307, 310, 329, 330, 333, 339, 341, 346, 347, 367, 380, 381, 391, 397, 399, 410, 439, 449, 451, 452, 481, 483, 484, 488, 490, 494, 503], "suffici": [40, 67, 71, 109, 205, 255, 311, 494, 503], "short": [40, 48, 56, 61, 67, 71, 164, 215, 218, 251, 343, 345, 346, 367, 374, 448, 453, 482, 494, 503, 509], "express": [40, 48, 333, 408, 435, 439, 452, 453, 468, 481, 494, 503, 507], "One": [40, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 163, 168, 196, 241, 282, 307, 339, 343, 353, 375, 379, 404, 408, 446, 451, 488, 492, 503], "unspecifi": [40, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 241, 266, 379], "parser": [40, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 167, 241, 379, 444], "posit": [40, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 220, 241, 251, 284, 287, 309, 310, 314, 317, 330, 334, 336, 338, 339, 340, 341, 342, 379, 398, 407, 408, 409, 415, 416, 425, 451, 483, 484, 495, 499, 501, 503, 505], "test_testvtkmesh": [41, 42], "test_dumpreactorvtk": [41, 42], "test_dumpreactorxdmf": [41, 42], "test_hexmesh": [41, 42], "test_cartesianmesh": [41, 42], "test_deduptim": [41, 43], "funtion": 43, "vacuum": [43, 176, 330], "resort": 43, "goe": [44, 206, 330, 338, 339, 348, 354, 445, 453, 477], "vertic": [44, 45, 306, 314, 323, 413, 480, 503], "problemat": [44, 294, 481], "primit": [44, 304, 307, 480], "celltyp": 44, "unstructur": [44, 45, 338], "mesh": [44, 45, 46, 51, 126, 166, 171, 173, 178, 179, 184, 240, 251, 253, 284, 287, 288, 290, 296, 299, 300, 302, 309, 310, 314, 317, 318, 323, 326, 328, 329, 330, 334, 335, 336, 339, 340, 341, 342, 346, 356, 409, 413, 468, 475, 476, 483, 484, 488, 494, 495, 498, 499, 500, 501, 503], "vertex": 44, "cell": [44, 287, 330, 334, 336, 338, 339, 340, 341, 392, 398, 407, 425, 434, 443, 494, 495], "onto": [44, 239, 310, 329, 330, 345, 481, 483, 490, 505], "concept": [44, 48, 93, 205, 294, 330, 336, 448, 452, 484, 503], "bunch": [44, 145, 366, 410, 449, 488, 505], "nx3": 44, "per": [44, 45, 51, 77, 126, 156, 160, 164, 166, 170, 205, 214, 255, 287, 304, 310, 317, 318, 328, 330, 336, 367, 397, 415, 416, 434, 446, 452, 480, 481, 484, 494, 499, 501, 503], "belong": [44, 48, 105, 154, 213, 282, 310, 346, 350, 453, 459], "contin": 44, "relev": [44, 79, 161, 205, 220, 228, 255, 289, 314, 330, 332, 347, 349, 405, 445, 454, 479, 486, 495, 496, 503, 505], "writer": [45, 170, 182, 183, 192, 220, 255, 256, 259, 310, 367, 484], "aspect": [45, 225, 416, 446, 493], "export": [45, 219, 482, 490, 509], "total": [45, 56, 83, 109, 134, 166, 168, 179, 183, 198, 201, 213, 225, 236, 246, 284, 287, 307, 310, 316, 318, 323, 330, 354, 389, 398, 399, 401, 409, 449, 451, 453, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 488, 490, 493, 498, 499, 501, 503, 506, 508], "doabl": 45, "arbitrari": [45, 79, 140, 253, 293, 298, 329, 330, 331, 334, 354, 355, 367, 405, 411, 416, 427, 434, 441, 444, 446, 449, 483, 490, 503], "visualiz": 45, "fanci": [45, 48, 282, 343], "difficult": [45, 294, 332, 343, 346, 410, 505], "big": [45, 145, 239, 294, 317, 346, 446, 449, 494, 505], "basenam": [45, 46], "inputnam": [45, 46], "finish": [45, 237, 493, 503], "includeparam": [45, 46], "excludeparam": [45, 46], "exclud": [45, 56, 205, 220, 239, 240, 244, 293, 401], "interchang": 46, "interpret": [46, 67, 79, 80, 83, 90, 103, 105, 109, 132, 135, 136, 137, 138, 153, 176, 291, 292, 293, 323, 330, 332, 333, 398, 409, 488, 503, 506], "light": [46, 244, 477, 480, 495], "live": [46, 146, 164, 207, 213, 215, 218, 237, 251, 282, 293, 448, 505], "xml": [46, 351, 366, 374, 495], "paraview": [46, 482, 490, 509], "visit": [46, 397, 482, 490, 509], "properli": [46, 59, 170, 191, 311, 323, 325, 330, 355, 390, 393, 398, 416, 421, 446, 483], "polyhedra": 46, "unfortun": [46, 340, 405, 414, 452, 503], "__need__": 46, "prism": 46, "wedg": 46, "defeat": 46, "xmdf": 46, "cartesian": [46, 57, 176, 283, 284, 292, 310, 316, 330, 333, 334, 338, 341, 354, 361, 380, 385, 398, 418, 464, 468, 478, 479, 481, 483, 484, 495, 496, 503], "theta": [46, 80, 138, 140, 287, 301, 309, 310, 317, 318, 325, 330, 342, 362, 441, 464, 478, 479, 483, 496, 503], "elementtre": 46, "temporalcollect": 46, "analyz": [47, 50, 56, 57, 216, 236, 446, 448, 481, 488, 502, 505], "often": [47, 48, 49, 67, 78, 80, 86, 87, 91, 105, 146, 153, 163, 167, 170, 174, 205, 215, 227, 239, 283, 310, 311, 332, 334, 336, 337, 340, 346, 444, 460, 467, 481, 482, 483, 488, 490, 491, 493, 494, 503, 504, 505, 509], "sweep": [47, 48, 49, 57, 61, 251, 287, 319, 320, 321, 446, 475, 481, 483, 484, 489, 503], "send": [47, 78, 79, 152, 449, 452], "off": [47, 79, 81, 154, 163, 173, 178, 201, 239, 255, 282, 284, 287, 310, 317, 330, 340, 341, 361, 365, 387, 398, 416, 449, 467, 481, 483, 490, 494, 503], "my": [47, 399, 412, 414, 432, 444, 448, 490, 503], "interdepend": [47, 56], "sensit": [47, 51, 201, 282, 329, 330, 345, 346, 481, 483, 493], "studi": [47, 51, 93, 189, 201, 220, 329, 481, 493, 494, 503], "armiloc": 47, "numstep": 47, "11": [47, 79, 83, 93, 102, 117, 138, 154, 176, 188, 193, 221, 336, 409, 416, 446, 467, 475, 483, 484, 488, 492, 493, 494, 495, 503], "submit": [47, 56, 57, 61, 374, 447, 490, 493, 503], "hpc": [47, 56, 61, 78, 481, 490, 493], "samplinginputmodifi": [47, 49, 50, 57, 60], "fullcoremodifi": [47, 49, 50], "settingsmodifi": [47, 49, 50, 311, 319, 320, 484, 493], "multisettingmodifi": [47, 49, 50], "blueprintblockmodifi": [47, 49, 50, 54], "neutronicsmodifi": [47, 49], "neutronicconvergencemodifi": [47, 49, 51, 311, 319, 320], "neutronicmeshssizemodifi": [47, 49, 51], "pintypeinputmodifi": [47, 49], "smeardensitymodifi": [47, 49, 52], "cladthicknessbyodmodifi": [47, 49, 52], "cladthicknessbyidmodifi": [47, 49, 52], "test_cas": [47, 58], "testarmicas": [47, 58, 59], "testcasesuitedepend": [47, 58, 59], "testcasesuitecomparison": [47, 58, 59], "testextrainputwrit": [47, 58, 59], "multifilesinterfac": [47, 58, 59], "testpluginwithduplicateset": [47, 58, 59], "testpluginforcopyinterfacesmultiplefil": [47, 58, 59], "testcopyinterfaceinput": [47, 58, 59], "test_suitebuild": [47, 58], "latinhypercubemodifi": [47, 58, 60], "settingmodifi": [47, 57, 58, 60], "testlatinhypercubesuitebuild": [47, 58, 60], "testfullfactorialsuitebuild": [47, 58, 60], "testseparateeffectsbuild": [47, 58, 60], "independentvari": [47, 48, 50, 59, 60, 493, 503], "addexplicitdepend": [47, 48], "getpotentialparentfromsettingvalu": [47, 48], "setuptaskdepend": [47, 48], "initializeoper": [47, 48, 475], "summarizedesign": [47, 48, 59], "echoconfigur": [47, 56, 493], "writet": [47, 56], "adddegreeoffreedom": [47, 57, 493], "addmodifierset": [47, 57], "buildsuit": [47, 57, 493], "redirect": [48, 56, 365], "post": [48, 56, 78, 314, 444, 488, 489, 503, 505], "reactiv": [48, 105, 166, 213, 227, 239, 244, 251, 314, 330, 346, 481, 488, 499, 501, 503], "coeffici": [48, 80, 82, 84, 93, 96, 97, 98, 100, 105, 106, 134, 137, 138, 168, 175, 209, 213, 227, 239, 251, 255, 304, 314, 330, 346, 354, 409, 441, 488, 491, 499, 501, 503, 507], "complex": [48, 163, 215, 221, 225, 251, 282, 306, 310, 373, 398, 468, 481, 482, 490, 491, 494, 495, 503, 509], "definit": [48, 50, 80, 83, 109, 156, 158, 160, 164, 166, 173, 178, 229, 237, 246, 261, 276, 282, 283, 285, 286, 290, 291, 292, 294, 307, 308, 310, 329, 330, 332, 341, 343, 344, 345, 346, 347, 348, 361, 370, 373, 393, 396, 397, 400, 413, 439, 445, 446, 448, 475, 477, 483, 484, 486, 490, 491, 492, 493, 494, 498, 503], "independentvariabl": 48, "lazi": [48, 452], "demand": [48, 205, 287, 310], "someon": [48, 57, 152, 251, 291, 343, 347, 481], "reflect": [48, 78, 83, 176, 251, 283, 307, 310, 330, 333, 446, 495, 498, 503], "somehow": [48, 161, 364, 448, 449, 453], "ideal": [48, 79, 170, 282, 332, 380, 490], "explicit": [48, 105, 166, 219, 244, 248, 249, 292, 307, 310, 359, 416, 424, 452, 483, 484, 494, 503], "evalu": [48, 94, 105, 136, 154, 160, 163, 167, 201, 206, 221, 244, 255, 292, 310, 321, 354, 405, 408, 409, 416, 446, 452, 467, 481, 482, 495, 499, 503, 509], "impos": [48, 50, 156, 205, 282, 413], "implicitli": [48, 205, 288, 483, 499, 503], "settingvalu": 48, "filepattern": 48, "conveni": [48, 153, 167, 205, 215, 240, 282, 330, 341, 375, 380, 398, 399, 408, 443, 490, 494, 503], "match": [48, 56, 80, 152, 156, 165, 167, 201, 220, 282, 284, 288, 298, 310, 325, 330, 338, 342, 355, 356, 366, 374, 375, 380, 427, 439, 480, 483, 486, 488, 490, 493, 503, 506], "groupdict": 48, "dirnam": 48, "task": [48, 61, 152, 153, 206, 221, 240, 341, 411, 449, 481, 488, 493, 503, 505], "account": [48, 109, 160, 163, 201, 205, 246, 255, 287, 293, 307, 310, 314, 315, 317, 354, 484, 491, 499, 503], "room": [48, 91, 156, 287, 480, 491, 494, 495], "coverag": [48, 184, 323, 354, 445, 484, 493, 503], "eleg": 48, "page": [48, 71, 91, 111, 117, 136, 138, 143, 236, 413, 448, 449, 451, 481, 494, 495], "additionalfil": 48, "modifiedset": 48, "writestyl": [48, 56], "modif": [48, 57, 83, 90, 103, 105, 109, 132, 135, 136, 137, 138, 173, 242, 282, 283, 287, 288, 289, 290, 293, 296, 300, 302, 307, 317, 367, 414, 465, 468, 475, 476, 483, 484, 488, 490, 494, 495], "safer": [48, 367, 451], "wonder": 48, "medium": [48, 56, 75, 283, 293, 332, 367, 374, 484, 495], "destin": [48, 329, 367, 402, 403, 422], "01": [48, 56, 82, 83, 91, 109, 113, 138, 174, 287, 323, 440, 446, 468, 475, 476, 484, 488, 492, 505], "sourcedir": 48, "forthcom": 48, "baselin": [48, 59, 228, 307, 495, 503], "shufflelog": [48, 79, 220, 225, 488, 494, 503], "loadingfil": [48, 494, 495, 503], "geomfil": [48, 288, 503, 505], "respect": [48, 96, 97, 100, 168, 205, 244, 293, 345, 372, 474, 481, 507], "let": [48, 56, 105, 240, 282, 287, 394, 446, 449, 481, 488, 490, 491, 492, 494, 503, 504], "union": [48, 79, 105, 163, 240, 282, 283, 310, 333, 338, 341, 356, 364, 372, 398, 405, 439], "ping": 48, "modular": [48, 261, 481, 490], "absolut": [48, 79, 310, 334, 341, 367, 412, 439, 485, 503], "wildcard": 48, "glob": [48, 79, 422, 483], "offer": [48, 375, 444, 454, 479, 492, 496], "noth": [48, 201, 217, 225, 330, 339, 354, 389, 413], "inputdirectori": [48, 366, 367, 493], "target": [48, 79, 244, 283, 287, 310, 311, 314, 315, 323, 330, 332, 380, 409, 410, 415, 416, 445, 481, 482, 484, 490, 499, 503, 509], "resolv": [48, 80, 310, 314, 324, 366, 375, 377, 397, 439, 484], "regard": [48, 236], "simplifi": [48, 94, 114, 130, 136, 152, 244, 380, 405, 494, 507], "runtim": [49, 78, 80, 203, 205, 260, 282, 321, 446, 483, 484, 490, 503], "test_inputmodifi": [49, 53], "mockgeom": [49, 53, 54, 55], "testsuitebuilderintegr": [49, 53, 54], "testsettingsmodifi": [49, 53, 54], "neutronicskernelopt": [49, 53, 54], "testfullcoremodifi": [49, 53, 54], "test_pintypeinputmodifi": [49, 53], "testblueprintmodifi": [49, 53, 55], "fail_if_aft": [49, 50, 52], "constuctor": 50, "paramtyp": [50, 57, 60], "__call__": [50, 57, 493], "space": [50, 52, 57, 78, 105, 139, 167, 205, 215, 287, 292, 304, 310, 330, 334, 335, 340, 341, 397, 398, 413, 416, 470, 480, 481, 494, 499, 503], "sampl": [50, 57, 310, 331, 418, 483, 494], "quasi": [50, 57, 334, 480], "random": [50, 57, 284, 343, 414, 425, 432, 449], "continu": [50, 57, 334, 340, 397, 408, 416, 434, 446, 448, 466, 477, 481, 484, 492, 503], "discret": [50, 57, 166, 330, 340], "inclus": [50, 163, 439, 500, 503], "grow": [50, 284, 316, 332, 346, 361, 413, 415, 491, 503], "symmetr": [50, 176, 287, 317, 330, 338, 339, 340, 341, 446, 503], "besid": [50, 213], "expans": [50, 62, 80, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 105, 106, 112, 113, 116, 117, 126, 132, 133, 134, 136, 137, 138, 141, 142, 143, 220, 251, 282, 284, 287, 293, 304, 307, 312, 313, 314, 315, 316, 323, 324, 327, 354, 355, 393, 401, 416, 421, 422, 446, 464, 478, 479, 481, 483, 484, 486, 488, 491, 493, 496, 499, 501, 502, 503], "schedul": [50, 79, 204, 221, 452, 490, 503], "expand": [50, 62, 82, 83, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 126, 137, 141, 143, 156, 236, 284, 291, 292, 293, 298, 304, 307, 310, 314, 315, 316, 317, 323, 330, 333, 354, 355, 361, 398, 401, 409, 416, 421, 443, 451, 469, 480, 483, 484, 488, 491, 493, 494, 495, 503, 507], "themself": 50, "settingnam": [50, 57, 60, 67, 366, 373, 375], "adjust": [50, 51, 52, 55, 57, 79, 105, 156, 236, 249, 251, 284, 287, 293, 307, 310, 314, 320, 321, 354, 355, 446, 477, 482, 484, 493, 494, 495, 498, 503, 509], "settingv": 50, "conf_neutronics_typ": [50, 237, 251, 451], "conf_coarse_mesh_rebal": 50, "conf_eps_eig": 51, "conf_eps_fsavg": 51, "conf_eps_fspoint": 51, "100": [51, 81, 83, 96, 97, 100, 134, 154, 156, 220, 284, 287, 323, 414, 416, 439, 452, 453, 461, 465, 493, 494, 495, 501, 503, 508], "criteria": [51, 79, 184, 212, 220, 251, 287, 288, 310, 330, 345, 503, 506], "multfactor": 51, "factor": [51, 105, 168, 184, 202, 205, 212, 220, 251, 284, 287, 306, 307, 310, 314, 315, 323, 330, 343, 397, 438, 484, 488, 491, 494, 499, 501, 503, 508], "switch": [51, 258, 287, 293, 330, 343, 375, 398, 452, 484, 494, 503], "nodal": [51, 176, 179, 251, 287, 317], "finit": [51, 168, 175, 251, 317, 336, 339, 341, 408, 503], "approxim": [51, 134, 140, 237, 239, 240, 304, 310, 317, 366, 415, 446, 460, 481, 493, 494, 499, 503], "multipli": [51, 105, 155, 168, 201, 220, 236, 251, 260, 287, 310, 408, 499, 503], "axial": [51, 105, 126, 176, 184, 220, 251, 282, 283, 284, 287, 288, 290, 296, 299, 300, 302, 306, 307, 309, 312, 313, 314, 315, 317, 318, 323, 328, 329, 330, 332, 334, 336, 338, 339, 340, 341, 354, 356, 393, 409, 413, 415, 461, 483, 484, 486, 488, 490, 494, 495, 499, 501, 502, 503], "_pintypeassemblymodifi": 52, "smear": [52, 55, 287, 321, 327, 329, 480, 483, 494, 495, 499], "clad": [52, 55, 94, 213, 227, 240, 283, 284, 287, 298, 300, 307, 310, 316, 321, 323, 324, 330, 332, 354, 355, 356, 460, 465, 475, 480, 481, 484, 488, 493, 494, 495, 499, 501, 503, 504], "tube": [52, 287, 480, 494, 495], "fabric": [52, 213, 216, 401, 446, 499, 503], "thick": [52, 55, 309, 316, 321, 488, 494], "inner": [52, 55, 220, 221, 240, 283, 284, 287, 290, 306, 307, 309, 310, 316, 321, 332, 336, 342, 355, 451, 484, 488, 490, 493, 494, 495, 499, 503, 504], "diamet": [52, 55, 287, 306, 316, 321, 355, 488, 493, 494, 499, 503, 504], "outer": [52, 55, 176, 221, 251, 283, 284, 287, 304, 306, 309, 310, 316, 317, 321, 330, 332, 342, 354, 355, 398, 460, 484, 488, 490, 493, 494, 499, 503, 504], "test_smeardensityfail": [53, 54], "test_settingsmodifi": [53, 54], "test_blueprintblockmodifi": [53, 54], "test_neutronicconvergencemodifi": [53, 54], "test_fullcoreconvers": [53, 54], "test_adjustsmeardens": [53, 55, 322, 327], "test_cladthickenessbyodmodifi": [53, 55], "test_cladthickenessbyidmodifi": [53, 55], "areafuel": 55, "smeardens": [55, 499], "innercladarea": 55, "fuelod": 55, "cladid": 55, "sqrt": [55, 306, 321, 339, 341, 407, 468, 469, 506], "cladthick": [55, 493], "od": [55, 284, 287, 300, 305, 306, 309, 355, 356, 467, 475, 493, 494, 495, 503, 504], "cladthic": 55, "12": [55, 79, 82, 83, 102, 142, 143, 152, 154, 156, 221, 336, 397, 409, 416, 439, 446, 453, 466, 467, 468, 474, 475, 483, 486, 488, 492, 503], "24": [55, 142, 154, 307, 336, 416, 484], "cladod": 55, "025": 55, "05": [55, 82, 85, 143, 246, 372, 414, 446, 459, 468, 475, 476, 477, 478, 484, 488, 492, 493, 503], "conjunct": [56, 434, 503], "uniqu": [56, 120, 153, 156, 284, 310, 343, 503, 505], "rootdir": [56, 366], "ignorepattern": [56, 366], "skipinspect": 56, "won": [56, 59, 177, 205, 399, 413, 439, 453, 495], "deleg": [56, 219], "oldroot": 56, "By": [56, 79, 215, 239, 284, 332, 341, 409, 416, 460, 490, 495, 503, 507], "thought": [56, 204, 453, 498], "benefici": [56, 67, 448, 451, 481], "person": 56, "consequ": [56, 152, 153, 164, 307, 343, 449], "infer": [56, 101, 102, 287, 378, 416, 503, 505], "mirror": [56, 213, 490], "tableresult": 56, "perturb": [57, 79, 105, 239, 251, 287, 309, 310, 321, 330, 481, 493], "combin": [57, 105, 135, 156, 174, 201, 310, 317, 332, 333, 334, 341, 364, 397, 405, 490, 493, 499, 503], "modifierset": [57, 493], "pop": [57, 334, 340, 375, 453, 468], "degre": [57, 81, 82, 96, 97, 100, 105, 114, 217, 224, 284, 287, 310, 317, 330, 339, 398, 407, 409, 439, 493, 498, 499, 501], "freedom": [57, 493], "sweepbuild": 57, "exact": [57, 154, 183, 213, 244, 284, 298, 305, 307, 310, 330, 339, 356, 410, 446, 503], "callabl": [57, 78, 282, 283, 310, 330, 345, 346, 373, 375], "signatur": [57, 167, 220, 452, 483], "amount": [57, 317, 323, 345, 452, 480, 488, 499, 501, 503], "inputmodifierset": 57, "namingfunc": 57, "meaning": [57, 282, 307, 346, 374, 375, 398, 439, 481, 490], "0000": [57, 164, 493], "four": [57, 310, 336, 453, 486, 503], "digit": [57, 88, 142, 153, 168, 239, 330, 397, 409, 481], "deem": [57, 205, 239, 446], "__init__": [57, 120, 152, 205, 207, 213, 282, 292, 294, 304, 307, 336, 338, 339, 340, 342, 343, 345, 346, 374, 383, 448, 452, 490], "newset": [57, 367], "builder": [57, 60, 282, 443, 484, 493, 503], "somecas": 57, "settingname1": 57, "settingname2": 57, "noisefract": 57, "nois": 57, "avoid": [57, 79, 220, 236, 239, 240, 316, 329, 354, 397, 410, 413, 447, 449, 483, 484, 495, 503, 506], "statist": [57, 493], "postprocessor": 57, "caution": [57, 284], "ongo": [57, 63, 321, 481], "research": [57, 117, 490], "isol": [57, 493], "settignnam": 57, "latin": [57, 484], "hypercub": [57, 484], "lh": 57, "evenli": [57, 310, 449, 503], "fewer": [57, 330, 445], "randomli": 57, "nonoverlap": 57, "partit": 57, "recommend": [57, 79, 213, 240, 287, 316, 335, 336, 339, 342, 343, 402, 448, 450, 481, 482, 490, 494, 499, 503, 509], "surrog": [57, 289], "unlik": [57, 258, 336, 340, 346, 448], "modfier": 57, "inputparametermodifi": 57, "pararmtyp": 57, "test_summarizedesign": [58, 59], "test_independentvari": [58, 59], "test_setuptaskdepend": [58, 59], "test_getcoveragercfil": [58, 59], "test_startcoverag": [58, 59], "test_endcoverag": [58, 59], "test_startprofil": [58, 59], "test_endprofil": [58, 59], "test_run": [58, 59, 74, 76], "test_clon": [58, 59], "test_checkinput": [58, 59], "test_dependencieswithobscurepath": [58, 59], "test_dependencyfromdbnam": [58, 59], "test_dependencyfromexplictrepeatshuffl": [58, 59], "test_explicitdepend": [58, 59], "test_titlesettergett": [58, 59], "test_comparenodiff": [58, 59], "test_writeinput": [58, 59], "test_copyinputshelp": [58, 59], "test_copyinterfaceinputs_singlefil": [58, 59], "test_copyinterfaceinputs_nonfilepath": [58, 59], "test_failonduplicateset": [58, 59], "test_copyinterfaceinputs_multiplefil": [58, 59], "test_copyinterfaceinputs_wildcardfil": [58, 59], "test_copyinterfaceinputs_relpath": [58, 59], "test_copyinterfaceinputs_abspath": [58, 59], "test_initi": [58, 60], "test_buildsuit": [58, 60], "test_adddegreeoffreedom": [58, 60], "assert": [59, 126, 212, 225, 253, 323, 361, 375, 433, 452], "bonu": [59, 489, 499], "damag": [59, 155, 214], "escap": 59, "charact": [59, 153, 156, 167, 240, 287, 289, 416, 439, 452, 453, 483, 486, 498, 503], "reveal": 59, "vehicl": 59, "lhc": 60, "event": [61, 244, 468, 475, 476, 484, 488, 503, 505], "submitsuit": 61, "prog": 61, "epilog": 61, "formatter_class": 61, "argpars": [61, 67, 444], "helpformatt": 61, "prefix_char": 61, "fromfile_prefix_char": 61, "argument_default": 61, "conflict_handl": 61, "add_help": 61, "allow_abbrev": 61, "exit_on_error": 61, "argumentpars": [61, 67], "exit": [61, 67, 78, 345, 402, 490, 503], "test_runentrypoint": [61, 74], "buildtestdb": [61, 74, 75], "testinitializationentrypoint": [61, 74, 75], "testcheckinputentrypoint": [61, 74, 75], "testclonearmiruncommandbatch": [61, 74, 75], "testclonesuitecommand": [61, 74, 75], "testcomparecas": [61, 74, 75], "testcomparesuit": [61, 74, 75], "testexpandblueprint": [61, 74, 75], "testextractinput": [61, 74, 75], "testinjectinput": [61, 74, 75], "testmigrateinput": [61, 74, 75], "testmodifycasesettingscommand": [61, 74, 75], "testreportsentrypoint": [61, 74, 75], "testcompareisotxslibsentrypoint": [61, 74, 75], "testrunentrypoint": [61, 74, 75], "testrunsuitecommand": [61, 74, 75], "testvisfileentrypointcommand": [61, 74, 75], "test_runsuit": [61, 74], "testrunsuitesuit": [61, 74, 76], "parse_arg": [61, 66, 67], "createoptionfromset": [61, 67, 444], "report_out_dir": [61, 71], "totwotupl": [61, 71], "needlessli": [62, 67, 498], "clutter": [62, 67], "inconsist": [62, 79, 240, 330, 340, 346], "occasion": [63, 282, 405], "comparison": [65, 310, 330, 333, 355, 380, 480, 484], "handi": [66, 453, 481, 505], "facilit": [66, 333, 351, 481, 483, 503], "overwrit": [66, 176, 310, 317, 367, 397, 443, 451, 503], "inject": [66, 291, 293, 393, 396], "overrid": [67, 152, 220, 282, 291, 293, 365, 373, 393, 397, 416, 446, 449, 503], "add_argu": [67, 444], "sub": [67, 152, 167, 205, 215, 287, 347, 449, 481, 503], "exitcod": 67, "success": [67, 79, 205, 240, 372, 412], "additionalalia": 67, "suppresshelp": 67, "additionalalis": 67, "care": [67, 201, 205, 237, 287, 293, 310, 330, 347, 412, 439, 445, 451, 452, 453, 481, 503, 505], "distinct": [67, 346, 451, 495], "supresshelp": 67, "suppress": [67, 366], "messag": [67, 79, 282, 300, 344, 365, 374, 381, 400, 439, 445, 447, 449, 480, 483, 503, 505], "almost": [67, 167, 176, 310, 332, 427, 453, 481], "unus": [67, 221, 255, 256, 349, 452, 483, 484, 486, 503], "booldefault": 67, "ep": [67, 212, 318, 380], "editor": [68, 398, 482, 483, 494, 503, 509], "spin": [68, 163, 246], "latest": [69, 145, 160, 166, 239, 287, 310, 443, 499], "keyword": [70, 282, 330, 397, 416, 447], "ntask": [70, 486, 488, 493, 503], "reportsoutputfil": [71, 451, 497], "strinput": 71, "integ": [71, 166, 167, 220, 221, 239, 284, 310, 323, 332, 346, 394, 398, 405, 409, 413, 416, 434, 446, 486, 499, 501, 505, 508], "web": [71, 87, 91, 94, 100, 114, 137, 166, 172, 176, 177, 443, 449], "mpirun": [73, 391], "mpiexec": [73, 78, 390, 423, 449], "test_entrypointiniti": [74, 75], "test_checkinputentrypointbas": [74, 75], "test_checkinputentrypointinvok": [74, 75], "test_clonearmiruncommandbatchbas": [74, 75], "test_clonearmiruncommandbatchinvokeshort": [74, 75], "test_clonearmiruncommandbatchinvokemedium": [74, 75], "test_clonesuitecommandbas": [74, 75], "test_comparecasesbas": [74, 75], "test_comparesuitesbas": [74, 75], "test_expandblueprintsbas": [74, 75], "test_extractinputsbas": [74, 75], "test_injectinputsbas": [74, 75], "test_injectinputsinvokeignor": [74, 75], "test_injectinputsinvokenodata": [74, 75], "test_migrateinputsbas": [74, 75], "test_modifycasesettingscommandbas": [74, 75], "test_modifycasesettingscommandinvok": [74, 75], "test_totwotupl": [74, 75], "test_cleanarg": [74, 75], "test_reportsentrypointbas": [74, 75], "test_compareisotxslibsbas": [74, 75], "test_runentrypointbas": [74, 75], "test_runcommandhelp": [74, 75], "test_executecommand": [74, 75], "test_runsuitecommandbas": [74, 75], "test_visfileentrypointbas": [74, 75], "test_listcommand": [74, 76], "test_showvers": [74, 76], "numnod": 75, "numcycl": 75, "fiction": 75, "mockexecmd": 76, "pytest": [77, 390, 392, 423, 445, 452, 481, 483], "act": [77, 202, 218, 284, 310, 330, 342, 345, 367, 408, 451, 488], "shop": 77, "submodul": [77, 442, 443], "larger": [77, 409, 453, 494, 495, 503], "project": [77, 166, 309, 444, 445, 448, 453, 470, 471, 481, 482, 490, 509], "session": [77, 205, 413, 483, 495], "termin": [78, 152, 408, 482, 489, 509], "forc": [78, 156, 255, 284, 314, 316, 330, 346, 367, 391, 409, 422, 446, 453, 484, 488, 503], "fast_path": [78, 205, 483], "drive": [78, 215, 304, 390, 412, 452, 460, 494, 503], "obliter": 78, "danger": 78, "olderthandai": 78, "sigbreak": 78, "cancel": [78, 310, 374, 506], "atexit": 78, "notabl": [78, 505], "taskcancelgraceperiod": 78, "sigterm": 78, "sigint": 78, "older": [78, 95, 153, 483, 503], "unrel": [78, 453], "dai": [78, 166, 205, 212, 282, 284, 347, 397, 409, 438, 451, 480, 481, 488, 494, 498, 499, 500, 501, 503, 505, 508], "earlier": [78, 282, 345], "concurr": 78, "forcibli": 78, "disconnect": 78, "hack": [78, 373, 498], "gracefulli": [78, 310], "destroi": [78, 499], "caus": [78, 174, 202, 300, 307, 310, 316, 329, 330, 347, 375, 403, 445, 452, 482, 484, 499, 509], "why": [78, 185, 284, 287, 439, 448, 495], "never": [78, 164, 213, 237, 255, 287, 292, 293, 304, 339, 416, 449, 451, 452, 503], "appear": [78, 90, 221, 282, 364, 366, 373, 413, 431, 439, 488], "repr": 78, "ing": 78, "manual": [78, 156, 158, 160, 176, 191, 200, 201, 205, 212, 244, 293, 311, 323, 330, 332, 364, 481, 488, 492, 503], "learn": [79, 469, 470, 471, 481, 502], "architectur": [79, 205, 282, 447, 481, 490], "createinterfac": [79, 204, 205, 209, 446], "globalflux": [79, 205, 213, 237, 372, 506], "globalfluxinterfac": [79, 237, 250, 253, 484, 486, 506], "10": [79, 83, 91, 94, 106, 114, 115, 126, 136, 137, 142, 154, 155, 163, 166, 167, 168, 172, 174, 176, 177, 212, 220, 221, 287, 292, 296, 300, 302, 307, 310, 317, 323, 336, 346, 355, 380, 408, 409, 413, 416, 425, 438, 439, 446, 449, 452, 453, 467, 470, 471, 472, 475, 477, 481, 483, 484, 488, 490, 491, 492, 493, 494, 495, 503], "maxit": 79, "interactallcoupl": [79, 204, 205], "maximum": [79, 105, 153, 220, 240, 287, 304, 310, 330, 332, 397, 409, 413, 416, 486, 498, 499, 501, 503], "val": [79, 105, 167, 198, 246, 287, 304, 307, 309, 310, 329, 330, 373, 397, 409, 413, 414, 432, 449, 488], "_supported_typ": 79, "commonli": [79, 105, 163, 251, 380, 398, 412, 444, 503], "equal": [79, 152, 160, 166, 168, 170, 172, 174, 177, 202, 205, 220, 255, 287, 304, 306, 310, 318, 340, 354, 373, 380, 397, 398, 409, 413, 414, 449, 469, 477, 494, 503, 507], "typeerror": [79, 373, 378, 441], "met": [79, 287, 506], "recent": [79, 176, 481, 498], "critera": [79, 310], "On": [79, 166, 172, 310, 448, 481, 482, 491, 493, 509], "condit": [79, 152, 156, 164, 215, 227, 237, 251, 255, 282, 284, 287, 333, 336, 338, 360, 362, 375, 403, 408, 480, 481, 486, 493, 494, 495, 503], "stale": [79, 251, 346, 484], "increment": [79, 281, 284, 287, 398, 407, 409, 503], "clear": [79, 105, 156, 165, 201, 239, 258, 284, 287, 307, 310, 317, 328, 329, 346, 355, 443, 452, 484, 494], "2d": [79, 83, 89, 104, 105, 137, 200, 240, 305, 309, 310, 339, 340, 341, 387, 409, 416, 434, 446, 484], "3d": [79, 82, 83, 84, 89, 90, 91, 93, 94, 96, 97, 98, 100, 104, 105, 106, 112, 113, 117, 141, 143, 298, 307, 309, 340, 355, 387, 470, 471, 490], "norm": [79, 488, 490, 506], "listtocheck": 79, "dim": [79, 287, 314, 467, 495], "eponym": 79, "categori": [79, 212, 227, 251, 255, 283, 330, 332, 343, 346, 387, 453, 468, 475, 476, 484, 486, 488, 505], "driver": [79, 240, 283, 310, 316, 324, 332, 449, 503], "neutronsperfiss": 79, "torestor": 79, "restor": [79, 105, 307, 310, 338, 341, 345, 346, 354, 361, 365], "distributest": [79, 152, 390], "quiet": [79, 105, 310], "callback": 79, "pickl": [79, 284, 310, 338, 345, 389, 397], "detach": [79, 204, 205, 340], "deepcopi": [79, 105, 246, 284, 287, 288, 484], "immedi": [79, 310, 316, 330, 339, 341, 343, 347, 481], "occur": [79, 105, 152, 154, 156, 158, 164, 205, 219, 220, 282, 293, 323, 324, 330, 343, 374, 416, 439, 446, 452, 492, 498, 499, 501, 503], "subcycl": [79, 205], "repeatedli": 79, "peripher": [79, 205, 221, 239], "cr": [79, 88, 154, 209, 251, 293, 300, 488, 493, 494, 503], "worth": [79, 166, 209, 220, 251, 439, 451, 452, 453, 481, 501], "theori": [79, 168, 310], "_cmd": 79, "incom": [79, 176, 191, 220], "statu": [79, 315, 343, 374, 443, 482, 503, 509], "statement": [79, 206, 251, 310, 323, 341, 344, 374, 375, 402, 439, 447, 449, 453], "wrong": [79, 287, 300, 302, 310, 448], "innam": [79, 251], "outnam": [79, 251], "interpol": [79, 116, 117, 284, 287, 409], "anywher": [79, 490, 503], "failur": [79, 310, 316, 392, 448, 503], "advent": 79, "perhap": [79, 282, 340, 343, 481, 503, 505], "externalcodeinterfac": [79, 251, 256], "eci": [79, 259], "anyth": [79, 164, 167, 215, 220, 251, 266, 287, 304, 307, 310, 330, 345, 375, 416, 445, 453, 481, 490, 493, 503], "involv": [79, 205, 215, 330, 481, 503, 506], "packag": [79, 202, 205, 207, 282, 310, 341, 346, 405, 416, 439, 442, 446, 447, 448, 452, 481, 482, 488, 489, 490, 505, 509], "klass": [79, 345], "addinterfac": [79, 204, 205], "ultim": [79, 220, 282, 283, 323, 330, 332, 347, 488, 493, 494, 506], "field": [79, 138, 310, 314, 323, 341, 343, 373, 397, 405, 416, 434, 494, 503], "scope": [80, 244, 311, 380, 448, 481, 484, 488, 490, 493, 495, 503], "thermo": [80, 307, 446, 503], "heat": [80, 81, 93, 96, 97, 100, 101, 102, 105, 113, 121, 137, 138, 213, 277, 334, 354, 446, 481, 490, 491, 495, 498, 499, 503], "capac": [80, 81, 93, 96, 97, 100, 101, 102, 105, 113, 137, 138, 205, 446, 490, 491, 494, 503], "linear": [80, 82, 83, 84, 88, 94, 96, 97, 100, 105, 106, 112, 113, 117, 126, 132, 133, 134, 136, 137, 138, 141, 142, 143, 284, 287, 307, 323, 329, 409, 484, 488, 491, 493, 494, 499, 507], "viscos": [80, 102], "nuclear": [80, 84, 86, 87, 91, 105, 138, 153, 154, 156, 163, 164, 165, 166, 177, 185, 196, 213, 216, 236, 237, 244, 310, 350, 398, 446, 480, 486, 488, 490, 492, 495, 501, 503], "alon": [80, 239, 307, 310, 467], "thermal": [80, 81, 82, 83, 84, 90, 91, 93, 94, 96, 97, 98, 100, 102, 105, 106, 109, 112, 113, 114, 117, 132, 134, 137, 138, 140, 141, 143, 161, 163, 227, 236, 274, 276, 277, 278, 280, 304, 307, 310, 314, 315, 316, 323, 324, 327, 330, 346, 354, 355, 445, 464, 478, 479, 481, 483, 484, 488, 489, 491, 494, 496, 499, 501, 502, 503, 504], "scatter": [80, 84, 91, 105, 113, 138, 140, 152, 161, 163, 168, 174, 183, 198, 200, 201, 202, 203, 260, 464, 466, 470, 471, 478, 479, 483, 492, 495, 496, 499, 503], "law": [80, 161, 163, 445, 481, 494], "macroscop": [80, 168, 198, 201, 202, 260, 269, 484, 495, 503], "highli": [80, 219, 240, 450, 468, 482, 494, 509], "team": [80, 416, 434, 445, 453, 481, 490], "updatesourc": 80, "dev": [80, 394, 481, 482, 509], "resolut": [80, 343, 375, 483], "formal": [80, 332, 345, 483, 487, 490], "registri": [80, 282, 283], "data_sourc": [80, 105], "sai": [80, 199, 201, 282, 332, 365, 366, 375, 407, 445, 449, 451, 453, 481, 494, 503], "namespaceord": 80, "latter": [80, 298], "conf_material_namespace_ord": 80, "kentucki": 80, "transport": [80, 81, 114, 171, 176, 213, 237, 251, 260, 284, 329, 481, 484, 494, 499], "cabinet": 80, "colon": [80, 490], "classnam": [80, 503], "prefer": [80, 145, 164, 282, 284, 310, 315, 330, 341, 373, 399, 416, 447, 453, 486, 490, 503], "material_namespace_ord": 80, "modulepath": [80, 412], "matcl": [80, 474], "els": [80, 167, 168, 220, 255, 284, 287, 310, 330, 333, 375, 397, 413, 416, 449, 477, 488, 490, 493, 503], "test__init__": [80, 119], "bettersubclasscheck": [80, 119, 120], "materials__init__test": [80, 119, 120], "test_air": [80, 119], "test_b4c": [80, 119], "b4c_testcas": [80, 119, 122], "test_be9": [80, 119], "test_graphit": [80, 119], "graphite_testcas": [80, 119, 124], "test_lithium": [80, 119], "lithium_testcas": [80, 119, 125], "test_materi": [80, 119, 421], "materialconstructiontest": [80, 119, 126], "materialfindingtest": [80, 119, 126, 421], "californium_testcas": [80, 119, 126], "cesium_testcas": [80, 119, 126], "magnesium_testcas": [80, 119, 126], "magnesiumoxide_testcas": [80, 119, 126], "molybdenum_testcas": [80, 119, 126], "mox_testcas": [80, 119, 126], "nacl_testcas": [80, 119, 126], "niobiumzirconium_testcas": [80, 119, 126], "potassium_testcas": [80, 119, 126], "scandiumoxide_testcas": [80, 119, 126], "sodium_testcas": [80, 119, 126], "tantalum_testcas": [80, 119, 126], "thoriumuraniummetal_testcas": [80, 119, 126], "uranium_testcas": [80, 119, 126], "uraniumoxide_testcas": [80, 119, 126], "thorium_testcas": [80, 119, 126], "thoriumoxide_testcas": [80, 119, 126, 129], "void_testcas": [80, 119, 126], "mixture_testcas": [80, 119, 126], "lead_testcas": [80, 119, 126], "leadbismuth_testcas": [80, 119, 126], "copper_testcas": [80, 119, 126], "sulfur_testcas": [80, 119, 126, 128], "zr_testcas": [80, 119, 126], "inconel_testcas": [80, 119, 126], "inconel600_testcas": [80, 119, 126], "inconel625_testcas": [80, 119, 126], "inconelx750_testcas": [80, 119, 126], "alloy200_testcas": [80, 119, 126], "cah2_testcas": [80, 119, 126], "hafnium_testcas": [80, 119, 126], "hastelloyn_testcas": [80, 119, 126], "tzm_testcas": [80, 119, 126], "yttriumoxide_testcas": [80, 119, 126], "zincoxide_testcas": [80, 119, 126], "fuelmaterial_testcas": [80, 119, 126], "test_sic": [80, 119], "test_sulfur": [80, 119], "test_thoriumoxid": [80, 119], "test_uzr": [80, 119], "uzr_testcas": [80, 119, 130], "test_wat": [80, 119], "propertyvalidtemperatur": [80, 81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143], "setdefaultmassfrac": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143], "pseudodens": [80, 81, 83, 89, 90, 101, 102, 103, 104, 105, 111, 113, 114, 116, 135, 137, 139, 140, 417, 421, 484], "specificvolumeliquid": [80, 81, 114], "thermalconduct": [80, 81, 93, 94, 96, 97, 100, 102, 103, 105, 113, 114, 132, 133, 134, 137, 138, 143, 504], "heatcapac": [80, 81, 93, 96, 97, 100, 101, 102, 103, 105, 113, 137, 138, 490, 491], "modelconst": [80, 82, 105], "referencemaxpercentimpurit": [80, 82], "linearexpansiontablek": [80, 82, 143], "linearexpansiont": [80, 82, 143], "linearexpans": [80, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 132, 133, 134, 137, 138, 141, 143], "enrichednuclid": [80, 83, 90, 103, 105, 109, 132, 135, 136, 137, 138, 307], "applyinputparam": [80, 83, 103, 105, 109, 116, 132, 134, 135, 136, 137, 138], "updatetd": [80, 83, 116], "setnewmassfracsfrommassenrich": [80, 83], "getmassenrichmentfromnumenrich": [80, 83], "linearexpansionperc": [80, 83, 84, 88, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 117, 134, 136, 137, 138, 141, 142, 143, 322, 323, 507], "thermalscatteringlaw": [80, 84, 91, 105, 113, 138, 140], "meltingpoint": [80, 89, 103, 109, 113, 132, 133, 134, 137, 138], "setmassfrac": [80, 90, 105, 283, 310], "materialintro": [80, 93, 137], "reftempk": [80, 93, 96, 97, 98, 100, 105, 113, 143], "meancoefficientthermalexpans": [80, 93, 98], "polyfitthermalconduct": [80, 96, 97, 100], "polyfitheatcapac": [80, 96, 97, 100], "polyfitlinearexpansionperc": [80, 96, 97, 100], "volumetricexpans": [80, 101, 102, 105, 116], "dynamicvisc": [80, 102], "boilingpoint": [80, 103], "getchildren": [80, 105, 283, 310, 352, 356, 488], "getchildrenwithflag": [80, 105, 283, 310, 352, 356], "backup": [80, 105, 283, 304, 307, 310, 334, 338, 341, 343, 345, 346], "restorebackup": [80, 105, 283, 304, 307, 310, 334, 338, 341, 343, 345, 346], "clearcach": [80, 105, 283, 304, 307, 310], "linearexpansionfactor": [80, 105, 491, 507], "getthermalexpansiondensityreduct": [80, 105], "adjustmassenrich": [80, 105, 283, 304, 307, 310], "adjustmassfrac": [80, 105, 283, 310], "gettemperatureatdens": [80, 105], "liquidporos": [80, 105, 304, 307, 499], "gasporos": [80, 105, 304, 307, 499], "pseudodensitykgm3": [80, 105], "densitykgm3": [80, 105], "getcorrosionr": [80, 105], "yieldstrength": [80, 105], "getproperti": [80, 105, 304, 307, 490, 504], "getmassfrac": [80, 105, 243, 246, 283, 310], "clearmassfrac": [80, 105], "removenucmassfrac": [80, 105], "checkpropertytemprang": [80, 105], "checktemprang": [80, 105], "densitytimesheatcapac": [80, 105, 484], "gettempchangefordensitychang": [80, 105], "gettd": [80, 105], "adjusttd": [80, 105], "class1_wt_frac": [80, 105, 401, 503], "class1_custom_isotop": [80, 105, 503], "class2_custom_isotop": [80, 105, 503], "pufrac": [80, 105, 484, 499], "ufrac": [80, 105], "zrfrac": [80, 105, 500], "getmassfracpuo2": [80, 109], "setmassfracpuo2": [80, 109], "getmolfracpuo2": [80, 109], "propertyequ": [80, 113, 137], "propertyunit": [80, 113, 137, 138], "propertynot": [80, 113, 137], "cumulativelinearexpans": [80, 113], "enthalpi": [80, 114, 140], "temperaturec": [80, 117], "percentthermalexpans": [80, 117], "getenrich": [80, 132, 304, 307, 483], "zrfracdefault": [80, 136], "ufracdefault": [80, 136], "propertyrawdata": [80, 137], "refden": [80, 82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 137, 141, 143, 488], "ea": [80, 138], "c1": [80, 138], "c2": [80, 138], "c3": [80, 138], "reference_temperatur": [80, 138], "thermalconductivitytablek": [80, 138], "thermalconductivityt": [80, 138], "temperature_critical_k": [80, 140], "density_critical_kgpercubicmet": [80, 140], "density_critical_gpercubiccentimet": [80, 140], "vapor_pressure_critical_mpa": [80, 140], "vapor_pressure_critical_pa": [80, 140], "alpha_0": [80, 140], "phi_0": [80, 140], "tau": [80, 140], "vaporpressur": [80, 140], "vaporpressureprim": [80, 140], "auxiliaryquantityspecificenthalpi": [80, 140], "auxiliaryquantityspecificentropi": [80, 140], "entropi": [80, 140], "Near": 81, "sea": 81, "correl": [81, 96, 97, 100, 140, 214, 236, 441], "incropera": [81, 121], "frank": [81, 121], "et": [81, 93, 109, 121, 138, 481], "al": [81, 93, 109, 121, 138, 147, 154, 300, 481, 495, 503], "mass": [81, 82, 83, 84, 85, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 112, 113, 114, 116, 117, 121, 126, 134, 135, 136, 138, 141, 143, 153, 154, 155, 156, 213, 216, 220, 236, 246, 265, 284, 287, 293, 300, 304, 307, 310, 311, 314, 317, 323, 325, 327, 328, 329, 330, 346, 354, 355, 356, 401, 421, 446, 460, 461, 465, 474, 480, 483, 484, 486, 488, 490, 491, 492, 498, 499, 500, 501, 503, 508], "transfer": [81, 121, 213, 277, 287, 329, 350, 449, 499, 505], "vol": [81, 111, 113, 121, 143, 236, 304, 465, 488, 490], "york": [81, 111, 121, 143], "wilei": [81, 121], "2002": [81, 121], "pnnl": [81, 121], "15870": [81, 121], "rev": [81, 121], "www": [81, 82, 84, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 114, 131, 134, 140, 185, 346, 481, 494], "gov": [81, 87, 91, 94, 109, 114, 138, 153, 163, 174, 176, 185], "technical_report": 81, "15870rev1": 81, "1300": [81, 93, 102], "2400": [81, 137, 138], "conduct": [81, 93, 94, 96, 97, 100, 102, 105, 109, 113, 114, 132, 134, 137, 138, 143, 236, 446, 488, 491, 503, 504], "200": [81, 82, 126, 409, 493], "850": 81, "temperature_lower_limit": [81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143], "temperature_upper_limit": [81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143], "temperature_unit": [81, 82, 83, 84, 88, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 111, 112, 113, 114, 116, 117, 132, 133, 134, 137, 138, 141, 142, 143], "mcconn": 81, "ronald": 81, "j": [81, 93, 94, 96, 97, 100, 101, 102, 104, 105, 111, 113, 114, 136, 137, 138, 140, 168, 176, 178, 179, 183, 201, 236, 292, 310, 330, 334, 336, 338, 339, 340, 341, 342, 398, 446, 469, 470, 471, 481, 483, 490, 491, 506], "compendium": 81, "radiat": [81, 87, 213, 481], "pacif": 81, "northwest": 81, "nation": [81, 93, 109, 138, 155, 166, 176, 480, 481], "lab": [81, 155, 481], "richland": 81, "2011": [81, 93, 166], "tk": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 323, 421, 441, 490, 491], "tc": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 154, 304, 305, 306, 307, 309, 310, 323, 356, 421, 441, 490, 491, 504], "cc": [81, 85, 101, 102, 103, 105, 111, 114, 135, 137, 138, 140, 166, 307, 310, 401, 491, 499, 505], "dewitt": 81, "kelvin": [81, 82, 96, 97, 100, 105, 114, 140, 307, 441], "celsiu": [81, 82, 96, 97, 100, 105, 114, 307, 441], "liquid": [81, 89, 103, 104, 105, 114, 116, 140, 153, 154, 163, 307, 494, 499], "kg": [81, 93, 96, 97, 100, 101, 102, 105, 113, 114, 130, 137, 138, 140, 490, 491, 498, 499, 500, 508], "alloi": [82, 93, 95, 97, 98, 99, 110, 126, 135, 136, 484], "wrought": 82, "commerci": [82, 480, 481], "nickel": [82, 93, 95, 154], "201": 82, "sheet": [82, 117], "jacquet": 82, "biz": 82, "usa": 82, "jcqusa": 82, "citat": [82, 95, 96, 97, 99, 100, 103, 105, 113, 117, 137, 138, 140, 143], "literatur": [82, 95, 96, 97, 99, 100, 103, 105, 109, 113, 117, 137, 138, 140, 143, 491], "trefa": 82, "20": [82, 85, 93, 96, 98, 154, 164, 168, 265, 307, 336, 355, 408, 453, 467, 475, 488, 493, 494, 495, 503], "a0": 82, "2162e": 82, "3001e": 82, "09": [82, 356, 416, 446, 467, 483, 484, 488, 492, 503], "94985e": 82, "intepol": [82, 105], "lookup": [82, 105, 155, 244, 268, 282, 284, 329, 330, 346, 358, 364, 407], "73": [82, 137, 154, 416], "15": [82, 93, 96, 97, 98, 100, 106, 109, 112, 113, 134, 138, 141, 143, 154, 212, 221, 287, 336, 401, 438, 453, 459, 467, 477, 483, 488, 494, 503], "1273": [82, 106], "mn": [82, 147, 154, 300, 488, 493, 503], "35": [82, 83, 154], "si": [82, 113, 154, 300, 488, 493, 503], "25": [82, 83, 154, 156, 284, 292, 299, 300, 323, 339, 355, 356, 413, 453, 471, 483, 488, 491, 493, 494, 503], "fe": [82, 153, 154, 155, 156, 293, 300, 467, 472, 488, 493, 503], "173": 82, "373": [82, 93], "573": 82, "673": 82, "773": 82, "873": 82, "973": [82, 93], "1073": 82, "1173": [82, 93, 137, 484], "01e": 82, "13e": [82, 143], "33e": [82, 113], "39e": 82, "43e": 82, "48e": 82, "52e": [82, 495], "56e": 82, "58e": 82, "62e": 82, "65e": [82, 495], "67e": 82, "instantan": [82, 96, 97, 100, 105, 480], "half": [82, 160, 164, 175, 220, 317, 341, 353, 354, 492, 501, 503], "impur": [82, 481], "rest": [82, 184, 284, 289, 332, 389, 446, 453, 467, 494, 495, 503, 505], "ni": [82, 154, 300, 310, 488, 493, 503], "cm": [82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143, 154, 178, 179, 198, 201, 220, 236, 246, 251, 284, 287, 292, 304, 305, 306, 307, 309, 310, 314, 329, 330, 334, 335, 336, 338, 339, 340, 341, 343, 362, 401, 451, 452, 469, 470, 488, 491, 493, 494, 495, 498, 499, 500, 501, 503, 504], "dep": [82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 141, 143], "percent": [82, 83, 84, 85, 88, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 134, 135, 137, 138, 141, 142, 143, 201, 314, 323, 330, 465, 480, 481, 484, 488, 493, 499, 501, 503], "dp": [82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 140, 141, 143, 154], "dl": [82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 117, 138, 141, 143], "l": [82, 84, 90, 91, 93, 94, 96, 97, 98, 100, 105, 106, 112, 113, 114, 117, 137, 138, 141, 143, 168, 306, 323, 397, 413, 467, 474, 491, 507], "boron": [83, 122, 154, 287, 307, 310, 492], "carbid": [83, 113, 122], "difficulti": 83, "real": [83, 166, 176, 179, 204, 205, 237, 246, 251, 287, 307, 310, 329, 330, 338, 409, 413, 434, 444, 449, 460, 490, 493, 495, 503], "td_frac": [83, 105, 109, 116, 134, 137, 138, 300, 484, 503], "b10": [83, 293, 472, 488, 499], "enrich": [83, 90, 103, 105, 109, 132, 135, 136, 137, 138, 220, 284, 287, 307, 310, 330, 355, 401, 413, 481, 488, 494, 495, 499, 503], "500": [83, 143, 355, 356, 465, 484, 488, 491, 493, 494, 504], "b10_wt_frac": [83, 503], "theoretical_dens": [83, 503], "massenrich": [83, 105], "boron10massgram": 83, "boron11massgram": 83, "carbonmassgram": 83, "012": [83, 488], "009": [83, 488], "carbon": [83, 91, 154, 161, 163], "0107": 83, "mole": [83, 109, 134, 155, 287, 307, 310, 490, 499], "gram": [83, 85, 109, 134, 155, 160, 287, 307, 310, 488, 503], "199": 83, "969552": 83, "801": [83, 164], "272836": 83, "mi": [83, 474], "mb10": 83, "nb10": 83, "ab10": 83, "nb11": 83, "ab11": 83, "natur": [83, 101, 105, 138, 153, 154, 155, 156, 158, 244, 282, 293, 300, 310, 330, 336, 401, 445, 446, 466, 481, 483, 488, 491, 492, 493, 503], "19": [83, 109, 117, 137, 154, 300, 336, 416, 484, 488], "80": [83, 100, 154, 503], "811": 83, "96796": 83, "27604": 83, "55": [83, 109, 114, 154], "2547": 83, "naturalb10numberfract": 83, "preliminari": 83, "beryllium": [84, 123, 154], "metal": [84, 88, 94, 98, 117, 132, 133, 135, 137, 143, 154, 156, 163, 236, 287, 310, 330, 356, 401, 480, 488, 492, 494, 499, 500, 501, 503], "lot": [84, 86, 152, 153, 201, 205, 237, 246, 293, 310, 330, 380, 414, 444, 445, 449, 452, 453, 481, 482, 488, 495, 503, 509], "2n": [84, 164, 201, 473, 477], "reaction": [84, 164, 177, 189, 201, 202, 237, 251, 253, 310, 328, 329, 413, 464, 478, 479, 481, 483, 486, 496, 499], "inhal": 84, "hazard": 84, "compound": [84, 91, 113, 136, 138, 140, 163, 240, 372, 416], "Be": [84, 163, 310, 412, 445, 453, 481, 483], "frozenset": [84, 91, 113, 138, 140], "BE": [84, 154], "012183e": 84, "00": [84, 140, 446, 462, 478, 492], "50": [84, 154, 284, 355, 408, 453, 461, 481, 503], "1560": 84, "ferp": 84, "ucsd": 84, "edu": [84, 168], "prop": 84, "pano": 84, "fusion": 84, "fedee": 84, "141": 84, "234": [84, 439, 492], "1987": 84, "calcium": [85, 154], "hydrid": 85, "calciumhydrid": 85, "atom": [85, 105, 109, 153, 154, 155, 156, 163, 166, 198, 201, 214, 240, 246, 265, 287, 307, 310, 316, 317, 329, 401, 480, 481, 488, 492, 498, 499, 500, 501, 503], "kaeri": 85, "kr": [85, 154, 413], "ton": 85, "iso": [85, 156, 503], "abund": [85, 153, 155, 156, 185, 466, 492], "ca": [85, 113, 154, 503], "40": [85, 88, 154, 156, 176, 397, 453, 493], "96": [85, 154, 495], "941": 85, "39": [85, 154, 488, 491, 492, 493], "9625912": 85, "42": [85, 109, 154, 156, 414, 416, 495], "647": [85, 131, 140], "41": [85, 154, 156, 416], "9586183": 85, "43": [85, 88, 154, 488], "135": [85, 140], "9587668": 85, "44": [85, 117, 154], "086": 85, "9554811": 85, "46": [85, 154, 236, 503], "004": [85, 488, 503], "45": [85, 154, 488, 503], "9536928": 85, "48": [85, 154, 475, 488], "187": 85, "47": [85, 154], "9525335": 85, "01565": 85, "09367285": 85, "920331558": 85, "006449241": 85, "001377745": 85, "02178264": 85, "3668e": 85, "002130278": 85, "047884869": 85, "en": [85, 86, 89, 440], "wikipedia": [85, 86, 89, 103, 440, 492], "wiki": [85, 86, 89, 440], "calcium_hydrid": 85, "synthet": 86, "spontan": [86, 156, 164, 484, 492, 499, 501], "equip": [87, 488], "shield": [87, 166, 201, 239, 283, 284, 317, 330, 332, 488, 493, 499, 503], "concreat": 87, "archiv": [87, 100, 453, 482, 509], "20221103120449": 87, "nist": [87, 153, 155, 156], "cgi": [87, 153], "bin": [87, 153, 244, 317, 318, 335, 427, 482, 509], "star": 87, "compo": 87, "pl": [87, 153], "matno": 87, "144": 87, "788": 88, "83": [88, 154], "engaug": 88, "21": [88, 96, 97, 100, 117, 137, 154, 336, 414, 484, 488, 495], "thrust": 88, "chamber": [88, 495], "predict": [88, 227, 244, 494, 506], "rocket": 88, "nozzl": [88, 330, 498, 499, 503], "nasa": 88, "134806": 88, "cesium": [89, 154], "caesium": 89, "benchmark": [90, 362, 481, 494, 495, 503], "isotopicopt": [90, 244, 283, 288, 475], "customisotop": [90, 105, 283, 288, 293, 352, 356, 475, 503], "peopl": [90, 105, 453, 481, 482, 486, 503, 509], "overwritten": [90, 215, 246, 307, 309, 361, 377], "u235": [90, 105, 109, 135, 136, 137, 138, 153, 155, 156, 158, 174, 202, 240, 287, 300, 310, 401, 467, 472, 473, 488, 491, 492, 495, 503], "customloc": 90, "matter": [90, 143, 156, 205, 255, 265, 287, 330, 332, 341, 405, 408, 452, 453, 490], "moder": [91, 220, 283, 330, 332, 481], "ga": [91, 105, 153, 154, 236, 239, 246, 249, 332, 481, 499, 503], "cool": [91, 448, 480, 481, 494, 495], "inl": [91, 93, 124], "16": [91, 117, 124, 154, 156, 221, 332, 333, 336, 346, 355, 356, 380, 467, 474, 481, 483, 488, 492, 494, 495, 503], "38241": [91, 124], "mceligot": 91, "donald": 91, "swank": 91, "david": 91, "cottl": 91, "valentin": 91, "francisco": 91, "348": [91, 503], "2016": [91, 172], "doi": [91, 94, 106, 114, 136, 137, 166, 172, 176, 177, 481], "2172": [91, 94, 114, 137, 166, 172, 176, 177], "1330693": 91, "osti": [91, 94, 114, 166, 172, 177], "biblio": [91, 94, 114], "10p": 91, "201114e": [91, 113], "l0": [91, 94, 315, 323, 491], "captur": [92, 163, 164, 168, 201, 237, 239, 255, 287, 288, 316, 330, 381, 446, 477, 481, 494, 499, 503], "lenntech": 92, "com": [92, 93, 95, 96, 97, 98, 99, 100, 305, 306, 346, 416, 434, 439, 440, 445, 452, 481, 482, 484, 509], "hf": [92, 154], "htm": 92, "hastelloi": [93, 483], "invent": 93, "ornl": [93, 109, 126, 138], "molten": [93, 111, 116, 481], "fluorid": 93, "salt": [93, 115, 213, 481], "un": [93, 98, 215, 499], "n10003": 93, "hayn": 93, "h": [93, 94, 136, 140, 154, 163, 172, 221, 236, 277, 329, 330, 332, 494, 495, 503], "2052d": 93, "2020": [93, 483, 495], "haynesintl": 93, "brochur": 93, "corros": [93, 105, 227, 480, 491, 499], "resist": 93, "sab": 93, "sabharwal": 93, "feasibl": 93, "secondari": [93, 205, 283, 332, 415, 481, 501], "exchang": [93, 166, 334, 446, 480, 495, 503], "23076": 93, "oak": [93, 109, 138], "ridg": [93, 109, 138], "laboratori": [93, 109, 138, 166, 176, 480], "oxid": [93, 106, 109, 112, 134, 138, 141, 142, 491], "hot": [93, 98, 105, 117, 287, 304, 307, 314, 316, 323, 354, 355, 413, 484, 491, 494, 495, 499, 503, 504, 507], "704": 93, "871c": 93, "1600f": 93, "293": [93, 94, 137, 143], "polynomi": [93, 94, 96, 97, 98, 100, 106, 138], "sixth": 93, "97": [93, 114, 154], "dll": [93, 98, 105, 307, 491], "academ": [94, 114, 136, 474, 490, 491], "incomplet": [94, 330, 491], "ferrit": 94, "martensit": 94, "stainless": 94, "steel": [94, 300, 494, 503], "famou": 94, "sfr": [94, 227, 481, 490, 494, 495], "swell": [94, 287, 491], "mfh": 94, "handbook": [94, 102, 111, 137, 143], "hofman": [94, 137], "billon": 94, "koenig": 94, "kramer": 94, "lambert": 94, "leibowitz": [94, 114], "orechwa": 94, "pedersen": 94, "porter": 94, "tsai": 94, "wright": 94, "2019": [94, 168, 481, 483, 494], "1506477": 94, "1050": 94, "ref": [94, 113, 116, 138, 174, 239, 330, 380], "eq": [94, 136, 201], "sped": [94, 484], "austenit": 95, "chromium": [95, 154], "superalloi": 95, "specialmet": [95, 96, 97, 98, 99, 100], "technic": [95, 317, 330, 482, 509], "bulletin": 95, "617": [95, 484], "certainti": 95, "900": [96, 138, 143, 465, 467, 503, 505], "800": [96, 98, 143, 465, 483], "20alloi": [96, 100], "20600": 96, "294": [96, 97, 98, 100, 138], "equat": [96, 97, 100, 115, 170, 236, 260, 329, 409, 441, 452, 477, 491, 507], "thermalcond": [96, 97, 100], "cte": [96, 97, 100], "strain": [96, 97, 100, 227, 480, 481, 499, 503], "linexpperc": [96, 97, 100], "2nd": [96, 97, 100, 468], "divid": [96, 97, 100, 287, 310, 364, 389, 408, 467, 480, 498, 499], "differenti": [96, 97, 100, 251, 309, 449], "722e": 96, "303e": 96, "linexp": [96, 97, 100], "221": [97, 492], "1093": [97, 100], "927": 97, "982": [97, 100], "asset": [97, 98, 99], "625": 97, "083e": 97, "125e": 97, "incoloi": [98, 483], "800h": 98, "n08800": 98, "n08810": 98, "sm": [98, 154, 244], "smc": 98, "pe16": 99, "nimon": 99, "x750": 100, "18": [100, 111, 154, 163, 336, 488, 503], "156": 100, "871": 100, "20x": 100, "750": 100, "20170215105917": 100, "8378e": 100, "056e": 100, "600": [101, 126, 132, 133, 138, 143, 296, 299, 300, 302, 343, 465, 467, 503, 504], "1700": [101, 486], "1500": [101, 113, 114, 138], "volumetr": [101, 102, 116, 329, 491, 499, 501], "ON": [101, 102], "measur": [101, 102, 124, 236, 282, 323, 341, 343, 399, 451, 480, 506], "sobolev": [101, 102], "nucl": [101, 102], "mat": [101, 102, 156, 291, 310, 355, 474], "362": [101, 102], "2007": [101, 102], "235": [101, 102, 109, 135, 153, 155, 156, 185, 244, 287, 310, 472, 473, 488, 495], "247": [101, 102], "bismuth": [102, 154], "eutect": 102, "coolant": [102, 105, 256, 283, 287, 304, 307, 310, 316, 324, 329, 330, 332, 354, 356, 413, 460, 465, 467, 475, 481, 488, 490, 491, 494, 498, 499, 501, 503], "superfast": 102, "400": [102, 143, 355, 465], "visc": 102, "1100": [102, 143], "pa": [102, 140, 154, 498, 499, 501], "onlin": [102, 443], "oecd": 102, "nea": [102, 495], "scienc": [102, 164], "nea6195": 102, "ccapac": 102, "accuraci": [102, 409], "whenev": [103, 205, 237, 282, 346, 396, 448, 490], "irradi": [103, 109, 138, 155, 227, 236, 480, 491, 499, 501], "tritium": 103, "li6": [103, 492], "li_wt_frac": [103, 503], "li6_wt_frac": [103, 503], "180c": 103, "923": [104, 484], "1390": 104, "cm3": [104, 310, 401], "mcgonig": 104, "templ": 104, "univers": [104, 168, 251, 310, 398, 481, 503], "1961": 104, "truth": [105, 323, 330], "incorpor": [105, 153, 282, 503], "concert": [105, 167, 481], "bulk": [105, 293, 330, 498, 499], "massfrac": [105, 246, 310, 401, 474, 491], "theoreticaldensityfrac": [105, 500], "realiti": [105, 480, 481, 503], "solid": [105, 134, 153, 154, 163, 227, 236, 287, 304, 305, 307, 315, 323, 332, 355, 491, 492, 494, 499, 503], "due": [105, 109, 168, 170, 227, 236, 251, 253, 255, 282, 287, 307, 310, 316, 324, 344, 373, 451, 481, 484, 499, 501], "manufactur": 105, "programmat": [105, 215, 251, 291, 424, 464, 478, 479, 490, 496, 504], "getter": [105, 329, 330, 343, 360, 361, 367], "privat": [105, 176, 310, 390, 445, 452, 453, 481], "deep": [105, 310, 356, 503], "generationnum": [105, 310, 356], "includemateri": [105, 310, 356], "predic": [105, 156, 310, 330, 356], "typespec": [105, 220, 240, 284, 287, 307, 310, 330, 332, 356], "exactmatch": [105, 310, 330, 356], "paramstoappli": [105, 307, 310, 345, 346], "previous": [105, 221, 310, 410, 483, 501, 503], "dt": [105, 140, 490, 499], "t0": [105, 307], "methodologi": [105, 201, 236, 314, 481, 490, 507], "prevtempinc": 105, "newtempinc": 105, "temperatureinc": [105, 304, 307, 314, 315, 465, 500, 505], "temperatureincnew": 105, "nucnam": [105, 155, 156, 198, 201, 202, 239, 246, 307, 310, 401, 413, 459, 467, 474], "thrown": [105, 298, 378], "nuclidenam": [105, 293, 307, 310], "massfract": [105, 307, 310], "u238": [105, 155, 156, 164, 300, 467, 472, 488, 491, 492, 495, 503], "likewis": [105, 153], "accordingli": [105, 307, 341, 481, 503], "achiev": [105, 167, 205, 480, 501, 503], "targetdens": 105, "tempguessinc": 105, "celciu": [105, 140, 236, 307, 490], "agre": [105, 310, 481, 494], "inputheightsconsideredhot": [105, 314, 323, 355, 484, 503], "psuedodens": 105, "driven": [105, 240, 288, 493], "forward": [105, 179, 282, 365, 413], "rate": [105, 170, 201, 205, 251, 253, 287, 307, 310, 328, 329, 346, 446, 464, 477, 478, 479, 483, 486, 490, 496, 498, 499, 500, 501, 503, 506], "micron": 105, "strength": 105, "mpa": 105, "propnam": 105, "expandfissionproduct": [105, 310], "pu239": [105, 109, 153, 156, 164, 202, 300, 310, 488, 495, 503], "sum": [105, 156, 164, 170, 198, 201, 203, 239, 246, 249, 287, 310, 354, 397, 413, 427, 449, 488, 493, 503], "frac": [105, 136, 201, 236, 239, 287, 307, 310, 316, 329, 407, 421, 474, 491, 494, 500, 503, 506, 507], "altern": [105, 164, 189, 202, 217, 220, 251, 343, 405, 416, 446, 449, 484, 490, 493, 503], "critic": [105, 140, 166, 240, 287, 305, 481, 498, 501, 503], "million": [105, 408], "nuc": [105, 155, 156, 174, 198, 246, 307, 310, 401, 492], "fall": [105, 227, 315, 445, 453, 481, 505], "min": [105, 225, 310, 341, 484, 501], "mint": 105, "maxt": 105, "convienc": 105, "rhocp": 105, "right": [105, 212, 215, 251, 294, 297, 300, 310, 316, 317, 325, 338, 339, 340, 341, 378, 398, 407, 409, 411, 413, 416, 424, 436, 446, 477, 503, 506, 507], "logic": [105, 163, 166, 173, 178, 205, 220, 225, 282, 288, 291, 293, 320, 329, 330, 346, 374, 394, 396, 408, 453, 483, 484, 488, 503], "downstream": [105, 284, 330, 484], "embrac": 105, "deprec": [105, 155, 282, 294, 333, 351, 367, 485, 486, 488, 503], "densityfrac": 105, "fill": [105, 139, 153, 156, 236, 287, 294, 304, 310, 317, 318, 330, 343, 350, 355, 397, 416, 467, 484, 490, 494, 495, 499, 503], "300": [105, 138, 491], "uniti": 105, "parameter": [105, 468, 503], "magnesiumoxid": 106, "273": [106, 112, 138, 141], "milo": 106, "durand": 106, "journal": [106, 136, 236], "297": 106, "1936": 106, "1063": 106, "174539": 106, "3rd": [106, 336, 338, 351, 498], "moli": 108, "ceram": [109, 134, 138], "thermophys": [109, 115, 138, 140, 143, 213], "popov": [109, 138], "tm": [109, 138, 154, 155], "351": [109, 138], "rsicc": [109, 138], "fmdp": [109, 138], "tm2000": [109, 138], "inherit": [109, 152, 156, 239, 304, 330, 347, 367, 452, 486, 490, 503], "leav": [109, 156, 221, 307, 310, 373, 488, 495, 503], "unchang": [109, 307, 373, 484, 503], "u235_wt_frac": [109, 135, 136, 137, 138, 296, 494, 503], "mass_frac_pu02": 109, "massfracpuo2": 109, "puo2": 109, "pu238": [109, 300, 488, 495, 503], "238": [109, 135, 155, 244, 287, 472, 477, 492], "0495599": 109, "239": [109, 135, 155, 244, 477, 492], "0521634": [109, 155], "pu240": [109, 300, 488, 495, 503], "240": [109, 244, 492], "0538135": 109, "pu241": [109, 156, 300, 488, 495, 503], "241": [109, 244, 492], "0568515": 109, "pu242": [109, 170, 300, 488, 495, 503], "242": [109, 156, 492], "0587426": 109, "am241": [109, 155, 288, 300, 488, 495, 503], "0568291": 109, "0439299": [109, 153, 155], "0507882": [109, 155], "oxygen": [109, 134, 154, 293, 310, 401, 495, 503], "9994": [109, 134], "joyo": [109, 481], "pu": [109, 135, 136, 154, 244, 287, 310, 330, 401, 499], "76": [109, 154], "82": [109, 154, 491], "23": [109, 154, 260, 336, 354, 439, 484, 488], "66": [109, 154], "64": [109, 138, 154, 332, 346, 405, 495], "326469": 109, "22": [109, 113, 117, 140, 154, 336, 416, 481, 482, 484, 488, 492, 503, 509], "99": [109, 126, 154, 203, 244, 409, 503], "77": [109, 154, 167], "237": [109, 492], "359511": 109, "upu": 109, "70766": 109, "31": [109, 134, 154, 483], "9988": [109, 134], "269": 109, "70646": 109, "881357": 109, "177": [109, 488, 490, 493, 494, 497], "156000": 109, "823": 109, "725356": 109, "001": [109, 318, 330, 364, 409, 483, 488, 503], "074256": 109, "000156": 109, "7682": 109, "119839": 109, "1923": 109, "029999": 109, "0266": 109, "004150": 109, "0055": 109, "000858": 109, "0064": 109, "000998": 109, "2299": 109, "195": 109, "633404": 109, "166759": 109, "7701": 109, "558597": 109, "118643": 109, "melt": [109, 113, 132, 133, 134, 137, 138], "liquidu": [109, 491], "tl": [109, 154, 161], "solidu": [109, 491], "3120": [109, 138], "388": 109, "655": 109, "336": 109, "burnup": [109, 164, 175, 213, 220, 221, 227, 239, 240, 244, 251, 255, 287, 310, 397, 409, 415, 468, 480, 484, 498, 499, 500, 501, 503], "niobium": [110, 154], "zirconium": [110, 135, 143, 154, 155, 495, 503], "foust": 111, "nak": 111, "gordon": 111, "breach": 111, "1972": 111, "63": [111, 154], "1250": 111, "scandium": [112, 154], "1573": [112, 141], "scandia": 112, "invers": [112, 141, 409], "rare": [112, 141, 163, 347, 367, 434], "earth": [112, 141, 416], "silicon": [113, 154], "808538e": 113, "cumul": [113, 212, 251, 314, 343, 346, 397, 416, 438, 484, 503], "munro": 113, "phy": 113, "chem": 113, "26": [113, 153, 154, 156, 287, 495], "1997": 113, "51": [113, 154], "math": [113, 168, 204, 220, 407, 409, 427, 436, 440, 452, 461, 468, 469, 477, 484, 490], "exp": 113, "00527": 113, "0e": [113, 467, 495, 506], "rho0": 113, "tc0": 113, "0e3": 113, "1110": 113, "425": 113, "003": [113, 330, 364, 488, 503], "52000": 113, "24e": 113, "437": 113, "298": [113, 134, 137, 138, 143], "bring": [114, 136, 282, 402, 422, 446, 481, 490, 494, 503], "anl": [114, 137, 143, 155, 176, 342, 480, 481, 488, 490, 493, 494, 497], "95": [114, 154, 156, 176, 503], "fink": 114, "thermodynam": 114, "vapor": [114, 140], "1995": [114, 176, 236], "94649": 114, "gxndli": 114, "webview": 114, "85": [114, 154, 416], "2230": 114, "371": 114, "3715": 114, "chlorid": 115, "nabr": 115, "naf": 115, "rai": [115, 398], "attenu": 115, "techniqu": [115, 329, 503], "334": 116, "430": [116, 355], "sulfur_density_frac": [116, 503], "espeau": 116, "ceolin": 116, "508k": 116, "1382": 117, "tungsten": [117, 154, 483], "refractori": 117, "roll": [117, 498], "bureau": 117, "naval": 117, "weapon": 117, "contract": [117, 307, 314, 323, 499, 502], "n600": 117, "59530": 117, "southern": 117, "institut": 117, "456": 117, "574": 117, "702": 117, "840": 117, "56": [117, 154, 492], "846": [117, 484], "948": 117, "89": [117, 154, 477], "1023": 117, "1146": 117, "1287": 117, "78": [117, 154, 503], "203": 117, "253": [117, 236], "303": 117, "342": 117, "366": 117, "421": [117, 236], "468": 117, "504": 117, "tabular": [117, 416], "21c": 117, "1966": [117, 486], "viii": [117, 163], "appendix": 117, "181": 117, "test_canaccessclassesfrompackag": [119, 120], "test_packageclassesequalmoduleclass": [119, 120], "test_pseudodens": [119, 121, 123, 125, 126, 127], "test_heatcapac": [119, 121, 125, 126, 127], "test_thermalconduct": [119, 121, 126], "test_massfrac": [119, 121, 131], "test_validrang": [119, 121], "mat_class": [119, 122, 123, 124, 125, 126, 127, 128, 129, 130], "test_theoretical_pseudodens": [119, 122, 129], "test_propertyvalidtemperatur": [119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "test_linearexpansionperc": [119, 124, 126, 129], "test_dens": [119, 124, 126, 130, 352, 355], "defaultmassfrac": [119, 125], "test_lithium_material_modif": [119, 125], "test_meltingpoint": [119, 125, 126, 127], "test_boilingpoint": [119, 125], "test_material_initi": [119, 126], "test_findmateri": [119, 126], "test_namespac": [119, 126, 421], "test_poros": [119, 126], "test_getcorrosionr": [119, 126], "test_getmassfracpuo2": [119, 126], "test_getmolfracpuo2": [119, 126], "test_getmeltingpoint": [119, 126], "test_applyinputparam": [119, 126], "test_specificvolumeliquid": [119, 126], "test_enthalpi": [119, 126], "test_linearexpans": [119, 126], "test_adjustmassenrich": [119, 126, 352, 355], "test_gettemperatureatdens": [119, 126], "test_getdensityexpansion3d": [119, 126], "test_removenucmassfrac": [119, 126], "test_densitytimesheatcapactii": [119, 126], "test_gettempchangefordensitychang": [119, 126], "test_dupl": [119, 126, 130, 247, 249, 352, 353, 354, 380, 387], "test_setdefaultmassfrac": [119, 126], "test_volumetricexpans": [119, 126], "test_dynamicvisc": [119, 126], "test_densityneverchang": [119, 126], "test_getchildren": [119, 126, 352, 356], "test_getchildrenwithflag": [119, 126], "test_iconel800_linearexpans": [119, 126], "test_00_setdefaultmassfrac": [119, 126], "test_01_linearexpansionperc": [119, 126], "test_02_linearexpans": [119, 126], "test_03_pseudodens": [119, 126], "test_polyfitthermalconduct": [119, 126], "test_polyfitheatcapac": [119, 126], "test_polyfitlinearexpansionperc": [119, 126], "test_nicklecont": [119, 126], "test_linearexpansionhott": [119, 126], "test_meancoefficientthermalexpans": [119, 126], "test_00_applyinputparam": [119, 126], "test_01_pseudodens": [119, 126], "test_02_linearexpansionperc": [119, 126], "baseinput": [119, 126], "loadassembli": [119, 126], "test_class1class2_class1_wt_frac": [119, 126], "test_class1class2_classx_custom_isotop": [119, 126], "test_sulfur_density_frac": [119, 128], "test_ispickl": [119, 130, 352, 358, 361], "test_td": [119, 130], "test_cach": [119, 130], "test_densitykgm3": [119, 130], "test_pseudodensitykgm3": [119, 130], "test_water_at_freez": [119, 131], "test_water_at_boil": [119, 131], "test_water_at_critcalpoint": [119, 131], "test_validatenam": [119, 131], "superclass": 120, "verif": [121, 131, 452, 480], "300k": 121, "ratio": [121, 164, 287, 330, 397, 399, 477, 495, 499, 501, 503], "_material_test": [122, 123, 125, 126, 127, 128, 129], "0759": 125, "discover": [126, 484], "1723": 126, "efg": 126, "pseudo": [126, 130, 158, 449, 484, 505], "linearli": [126, 397], "_mixtur": 126, "nickl": 126, "spec": 126, "nnuclid": [126, 296, 300, 302], "ncustom": [126, 300], "customisotopic1": 126, "customisotopic2": 126, "nblock": [126, 296, 299, 300, 302], "block_fuel": [126, 296, 302, 494, 503], "fuel1": [126, 296, 302, 317, 332, 503], "component_fuel_fuel1": [126, 296, 302, 503], "tinput": [126, 296, 299, 300, 302, 304, 305, 306, 307, 309, 323, 355, 356, 467, 475, 494, 495, 503], "thot": [126, 296, 299, 300, 302, 304, 305, 306, 307, 309, 323, 352, 355, 356, 467, 475, 488, 494, 495, 503], "ip": [126, 287, 296, 299, 300, 302, 305, 307, 355, 356, 467, 475, 494, 503, 504], "mult": [126, 220, 287, 291, 296, 299, 300, 302, 305, 306, 307, 309, 355, 356, 467, 475, 494, 495, 500, 503, 504], "op": [126, 287, 296, 299, 300, 302, 304, 305, 306, 307, 333, 355, 356, 375, 467, 475, 494, 503, 504], "fuel2": [126, 296, 302, 317, 332, 503], "component_fuel_fuel2": [126, 296, 302, 503], "nassembli": [126, 296, 299, 300, 302], "assembly_a": [126, 296, 299, 300, 302, 503], "height": [126, 175, 225, 284, 287, 288, 290, 296, 298, 299, 300, 302, 305, 307, 309, 310, 314, 315, 323, 329, 330, 336, 341, 353, 354, 355, 356, 396, 409, 434, 475, 483, 484, 486, 488, 494, 495, 499, 503], "materialmodif": [126, 283, 288, 289, 302], "picklabl": [130, 389], "commun": [130, 152, 166, 205, 354, 374, 447, 506], "iapw": [131, 140], "if97": [131, 140], "0c": 131, "relguid": [131, 140], "supsat": [131, 140], "100c": 131, "096k": 131, "iaea": [132, 133, 134, 213], "tecdoc": [132, 133, 134], "1450": [132, 133, 134], "u233": [132, 156, 492], "u233_wt_frac": [132, 503], "te": [132, 133, 134, 154, 156, 503], "challeng": [134, 167, 293, 330, 341, 453, 481], "2005": 134, "pub": 134, "mtcd": 134, "te_1450_web": 134, "1223": 134, "232": [134, 135, 492], "030806": 134, "264": 134, "029606": 134, "298k": 134, "zirc": 135, "233": [135, 492], "zr_wt_frac": [135, 136, 302, 503], "notion": [136, 251], "10zr": [136, 310], "chandrabhanu": 136, "incorrect": [136, 343, 484], "basak": 136, "prasad": 136, "kamath": 136, "prabhu": 136, "rich": [136, 375, 443, 481, 505], "480": 136, "2009": [136, 481], "857": 136, "862": 136, "issn": 136, "0925": 136, "8388": 136, "1016": [136, 481], "jallcom": 136, "02": [136, 138, 156, 284, 300, 446, 459, 468, 469, 475, 476, 478, 483, 484, 485, 488, 492, 503, 505], "077": 136, "aaafuel": 137, "kim": 137, "aaa": [137, 143, 501], "2003": [137, 495], "822554": 137, "01591t": 137, "907": 137, "215": [137, 492], "1600": [137, 143], "255": 137, "nse": 137, "gl": 137, "07": [137, 164, 446, 468, 475, 476, 486, 488, 492, 503], "27": [138, 154, 453, 483, 484, 488], "302": 138, "008463": 138, "87410000": 138, "548": [138, 484], "68": [138, 154], "18531": 138, "3100": 138, "3123": 138, "3000": 138, "dioxid": 138, "nonequilibrium": 138, "molecular": [138, 310], "motoyama": 138, "60": [138, 154, 217, 284, 287, 339, 355, 398, 407, 409, 498, 499, 501], "juli": 138, "1999": 138, "92": [138, 153, 154, 156, 492], "380289e": [138, 492], "599930e": 138, "1200": [138, 143, 465], "1800": [138, 143], "2100": 138, "2700": 138, "991": 138, "864": 138, "768": 138, "567": 138, "073": 138, "891": 138, "847": 138, "718": 138, "u234": [138, 156, 293, 300, 488, 492, 503], "curv": [138, 209, 409, 484], "faith": 140, "supplementari": 140, "ordinari": 140, "substanc": 140, "1992": 140, "steam": 140, "satur": 140, "industri": [140, 481, 490], "h2o": [140, 163], "007976e": 140, "sr1": 140, "86": [140, 154, 503], "pressur": [140, 154, 213, 227, 277, 343, 441, 481, 498, 499, 501, 503], "096": 140, "322": 140, "064": 140, "22064000": 140, "5453657571674064": 140, "65134998e": 140, "08": [140, 446, 467, 468, 475, 476, 483, 484, 488], "2690": 140, "66631": 140, "127": [140, 469, 494], "287297": 140, "003439": 140, "981825814": 140, "alpha": [140, 156, 163, 164, 166, 467, 472, 474, 477, 491, 499, 507], "1135": 140, "905627715": 140, "phi": 140, "2319": 140, "5246": 140, "1e": [140, 143, 168, 212, 372, 401, 413, 461, 467, 476, 503, 506], "06": [140, 143, 246, 300, 446, 459, 468, 475, 476, 484, 488, 492], "wrt": 140, "quantiti": [140, 166, 329, 346, 355, 413, 415, 498], "kgk": 140, "yttrium": [141, 154], "yttria": 141, "zinc": [142, 154], "1491": 142, "28": [142, 154], "polycrystallin": 142, "devic": 142, "technologi": [142, 236, 481], "45803": 143, "touloukian": 143, "kirbi": 143, "taylor": 143, "desai": 143, "ifi": [143, 413], "plenum": [143, 236, 283, 284, 287, 332, 353, 354, 480, 488, 493], "washington": 143, "1975": 143, "700": [143, 465], "1136": [143, 484], "99999": 143, "1137": 143, "1400": 143, "7e": [143, 467], "9e": [143, 467], "6e": [143, 467], "8e": [143, 467], "2e": [143, 160, 467], "5e": [143, 451, 467], "03e": 143, "mk": 143, "upgrad": [145, 251, 481, 484, 495, 503], "invest": [145, 481], "thousand": [145, 163, 330, 446, 453, 481, 498, 499], "seriou": [145, 481, 490, 503], "analyst": [145, 311, 448, 481, 488, 503], "strongli": [145, 310, 445, 505], "oftentim": [145, 293, 503], "gb": [145, 481], "cpu": [145, 152, 449, 481, 503], "week": [145, 481], "monetari": 145, "tempor": 145, "meanwhil": [145, 481], "fix": [145, 153, 166, 171, 240, 251, 329, 346, 354, 375, 409, 416, 445, 452, 453, 503], "train": 145, "cognit": 145, "burden": [145, 380, 503], "background": 145, "word": [145, 310, 311, 334, 341, 356, 380, 415, 416, 452, 503], "spreadsheet": [145, 481], "test_m0_1_6": [145, 149], "testmigr": [145, 149, 150], "test_migration_bas": [145, 149], "testmigrationbas": [145, 149, 151], "testsettingsmigr": [145, 149, 151], "fromvers": [145, 146, 147, 148], "tovers": [145, 146, 147, 148], "classic": [146, 494], "_applytostream": 146, "center": [147, 220, 221, 284, 287, 306, 309, 310, 316, 317, 330, 336, 339, 340, 341, 353, 397, 398, 407, 416, 425, 434, 469, 477, 484, 488, 490, 495, 499, 503], "na23": [147, 467, 481, 488], "na": [147, 154, 260, 293, 310, 354, 467, 488, 493, 503], "mn55": [147, 488], "he4": [147, 164, 488], "he": [147, 154, 488, 493, 499], "w182": [147, 300, 488], "o16": [147, 293, 495, 503], "al27": [147, 163, 495], "n14": 147, "w183": [147, 300, 488], "w184": [147, 300, 488], "w186": [147, 300, 488], "alphanumer": [148, 483], "ring": [148, 220, 221, 240, 287, 305, 309, 316, 317, 324, 330, 334, 335, 336, 339, 340, 341, 342, 361, 364, 407, 425, 460, 461, 483, 501, 503, 505], "a2003b": 148, "test_locationlabelmigr": [149, 150], "test_basic_valid": [149, 151], "test_loadstreamfrompath": [149, 151], "locationlabel": 150, "mpi_comm": [152, 449], "bcast": [152, 206, 397], "wait": [152, 206, 449, 453, 490], "sync": [152, 391, 449], "sit": [152, 164, 206, 221, 330, 449, 477, 480], "someinst": 152, "comm_world": 152, "interestingli": 152, "strong": [152, 227, 244], "discourag": [152, 310], "sign": [152, 205, 310, 445, 451], "allcpuresult": 152, "objectsforallcorestoit": 152, "subset": [152, 239, 293, 310, 311, 328, 401, 421, 422, 483, 503], "len": [152, 156, 310, 408, 413, 449, 467, 470, 471, 474, 492, 493, 505], "clase": 152, "numpernod": 152, "mpi_siz": [152, 260, 449], "workload": 152, "spawn": [152, 483], "varaibl": 152, "think": [152, 310, 453, 483, 503, 505], "dsitributionact": 152, "amongst": [152, 343, 503], "skipinterfac": 152, "minim": [153, 221, 238, 343, 391, 403, 409, 452, 477, 482, 494, 509], "mainli": [153, 240, 282], "three": [153, 156, 168, 170, 183, 288, 309, 310, 341, 374, 409, 490, 494, 495, 503], "byz": [153, 154, 492], "ironfromz": 153, "ironfromnam": 153, "bynam": [153, 154, 156, 163, 459, 466, 467, 474, 492], "iron": [153, 154, 155, 492, 503], "ironfromsymbol": 153, "bysymbol": [153, 154, 492], "lower": [153, 220, 240, 283, 284, 287, 292, 310, 313, 330, 332, 338, 341, 342, 380, 484, 498], "upper": [153, 154, 170, 202, 220, 242, 251, 283, 284, 287, 313, 332, 338, 341, 342, 398, 407, 503], "truli": [153, 397, 481, 499], "ever": [153, 332, 354, 356, 365, 452, 481, 490, 503], "118": [153, 154], "fe56": [153, 163, 472, 488], "stand_alon": 153, "human": [153, 156, 333, 379, 503], "readabl": [153, 156, 282, 379, 452, 503], "capit": [153, 156, 239, 451, 452, 503], "letter": [153, 167, 202, 239, 287, 398, 412, 452, 486, 494, 499, 503], "tradition": [153, 219], "legaci": [153, 237, 351, 481], "Of": [153, 164, 220, 311, 481, 488, 493, 495], "reserv": [153, 240, 452, 453], "aa": [153, 165, 174, 202, 239, 240, 255, 330, 356, 472, 473], "ab": [153, 201, 239, 287, 310, 330, 488, 490, 499], "za": 153, "pu39": [153, 287], "along": [153, 156, 167, 213, 240, 251, 281, 287, 310, 311, 314, 315, 323, 329, 332, 338, 372, 373, 397, 409, 446, 448], "bylabel": [153, 156, 492], "softwar": [153, 156, 166, 446, 452, 480, 481, 482, 494, 503, 509], "mcnp": [153, 156, 163, 244, 282, 287, 317, 330, 401, 409, 421, 441, 458, 462, 479, 484, 490, 496, 503], "serpent": [153, 156, 205, 240, 244, 503], "mc2": [153, 155, 156, 160, 170, 172, 174, 177, 201, 205, 244, 248, 255, 287, 410, 446, 481, 503], "94": [153, 154, 155, 484], "tinfromnam": 153, "sn112": 153, "tinfromlabel": 153, "tinfrommcc2id": 153, "sn1125": 153, "tinfrommcc3id": 153, "sn1127": 153, "fulfil": 153, "ll": [153, 284, 341, 342, 416, 449, 482, 488, 490, 493, 494, 503, 509], "test_el": [153, 157], "testel": [153, 157, 158], "test_nucdirectori": [153, 157], "testnucdirectori": [153, 157, 159], "test_nuclidebas": [153, 157], "testnuclid": [153, 157, 160], "testaaazzzsid": [153, 157, 160], "test_thermalscatt": [153, 157], "buildblockwithtsl": [153, 157, 161], "testthermalscatt": [153, 157, 161], "getnuclidethermalscatteringdata": [153, 157, 161], "test_transmut": [153, 157], "randomstr": [153, 157, 162], "transmutationtest": [153, 157, 162], "decaymodetest": [153, 157, 162], "alkali_met": [153, 154, 492], "alkaline_earth_met": [153, 154], "nonmet": [153, 154], "transition_met": [153, 154], "post_transition_met": [153, 154], "metalloid": [153, 154], "halogen": [153, 154], "noble_ga": [153, 154], "lanthanid": [153, 154], "actinid": [153, 154, 246, 293, 310, 477, 503], "isnaturallyoccur": [153, 154, 158, 492], "getdatabasenam": [153, 156], "getdecai": [153, 156], "getmcc2id": [153, 156], "getmcc3id": [153, 156], "getserpentid": [153, 156], "fissil": [153, 156, 183, 239, 284, 310, 488, 498, 499, 501, 503, 508], "spontaneous_fiss": [153, 156], "getmcnpid": [153, 156], "getaaazzzsid": [153, 156], "getendfmatnum": [153, 156], "getsubjectnuclidebas": [153, 163], "getpreferredproduct": [153, 164], "outlin": [154, 156, 398, 451, 505], "gaseou": [154, 246, 484, 503], "stp": [154, 249], "hydrogen": [154, 161, 495], "helium": 154, "nitrogen": 154, "fluorin": 154, "ne": [154, 155, 310], "neon": [154, 155], "chlorin": 154, "argon": 154, "36": [154, 503], "krypton": [154, 413], "xe": [154, 244, 413], "54": 154, "xenon": [154, 413, 503], "rn": 154, "radon": 154, "og": 154, "oganesson": 154, "classifi": [154, 310], "ac": [154, 163, 493], "actinium": 154, "90": [154, 287, 310, 398, 408, 468, 481, 494, 503], "91": 154, "protactinium": [154, 158], "93": [154, 503], "neptunium": 154, "plutonium": 154, "am": [154, 244], "americium": 154, "curium": [154, 503], "bk": 154, "berkelium": 154, "cf": 154, "98": [154, 474, 477, 488, 503], "einsteinium": 154, "fm": 154, "fermium": 154, "md": [154, 490], "101": [154, 409], "mendelevium": 154, "NO": 154, "102": 154, "nobelium": 154, "lr": 154, "103": 154, "lawrencium": 154, "num": [154, 212, 287, 353, 446, 468], "aluminium": 154, "phosphoru": 154, "sc": [154, 414], "37": 154, "titanium": 154, "ti": [154, 339, 340, 451, 477, 491], "vanadium": 154, "34": 154, "manganes": 154, "38": [154, 488, 494], "cobalt": 154, "co": [154, 468, 482, 503, 509], "29": [154, 343, 486], "zn": 154, "gallium": 154, "germanium": 154, "ge": 154, "33": [154, 179, 253, 416, 467], "arsen": 154, "AS": [154, 167, 481, 494], "selenium": 154, "se": 154, "bromin": 154, "br": 154, "rubidium": 154, "rb": [154, 167, 171], "strontium": 154, "sr": [154, 439], "57": 154, "nb": [154, 156, 163, 459, 474, 477], "mo": [154, 244, 300, 488, 493, 503], "technetium": 154, "ruthenium": 154, "ru": 154, "rhodium": 154, "rh": 154, "palladium": 154, "pd": [154, 262, 345], "53": 154, "silver": 154, "ag": [154, 213, 416], "74": [154, 362, 494], "cadmium": 154, "cd": [154, 481, 482, 490, 509], "49": 154, "indium": 154, "IN": [154, 168, 175], "88": 154, "tin": [154, 503], "sn": [154, 166, 251], "59": 154, "antimoni": 154, "sb": 154, "52": 154, "tellurium": 154, "iodin": 154, "barium": 154, "ba": [154, 239], "lanthanum": 154, "la": [154, 163, 166], "58": [154, 343], "cerium": 154, "ce": 154, "praseodymium": 154, "pr": [154, 445, 452, 484, 485, 486], "neodymium": 154, "nd": [154, 164, 260, 300], "61": 154, "promethium": 154, "pm": [154, 345], "62": 154, "samarium": 154, "europium": 154, "eu": 154, "gadolinium": 154, "gd": 154, "65": [154, 239], "terbium": 154, "tb": 154, "dysprosium": 154, "dy": 154, "holmium": 154, "ho": 154, "erbium": 154, "er": 154, "69": 154, "thulium": 154, "70": [154, 354, 408, 416, 493, 503], "ytterbium": 154, "yb": 154, "71": [154, 488], "lutetium": 154, "lu": 154, "72": [154, 503], "ta": 154, "75": [154, 494], "rhenium": 154, "osmium": 154, "iridium": 154, "ir": 154, "platinum": 154, "pt": 154, "79": [154, 503], "gold": [154, 439], "au": 154, "mercuri": 154, "hg": 154, "81": 154, "thallium": 154, "pb": [154, 282, 352, 360, 380, 391], "bi": [154, 449], "84": [154, 492], "polonium": 154, "po": [154, 330, 335, 336, 339, 341, 342, 361, 483, 505], "astatin": 154, "AT": [154, 173], "87": [154, 492], "francium": 154, "fr": 154, "radium": 154, "ra": [154, 160], "104": 154, "rutherfordium": 154, "rf": 154, "105": 154, "dubnium": 154, "106": [154, 470, 478], "seaborgium": 154, "sg": 154, "107": 154, "bohrium": 154, "bh": 154, "108": 154, "hassium": 154, "109": [154, 471, 478], "meitnerium": 154, "mt": [154, 488, 508], "110": [154, 236, 355, 408], "darmstadtium": 154, "111": 154, "roentgenium": 154, "rg": 154, "112": 154, "copernicium": 154, "cn": 154, "113": [154, 488], "nihonium": 154, "nh": 154, "114": 154, "flevrovium": 154, "fl": 154, "115": 154, "moscovium": 154, "mc": [154, 155, 156, 172, 189, 201, 251, 292, 494, 503], "116": 154, "livermorium": 154, "lv": 154, "117": 154, "tennessin": 154, "119": 154, "dummi": [154, 156, 172, 174, 177, 201, 212, 283, 291, 323, 330, 332, 354, 356, 379, 387, 449, 467, 468, 476, 488, 495], "120": [154, 224, 287, 317, 486, 492], "lumpedfissionproduct": [154, 237, 243, 287, 307, 310], "lp": 154, "proton": [154, 156, 164, 466, 474, 477, 492], "chemic": [154, 227, 249, 310, 401, 480, 499, 501], "cut": [154, 287, 309, 317, 398, 481, 503], "elem": 154, "abbrevi": [154, 155, 160, 452], "getz": 154, "elementzbysymbol": 154, "elementsymbol": 155, "prefix": [155, 166, 167, 215, 397, 452], "xstype": [155, 237, 240, 244, 287, 290, 475, 499, 503], "suffix": [155, 165, 201, 202, 255, 287, 310, 351], "u235ia": 155, "zircfb": 155, "2355": [155, 156], "ia": 155, "fb": 155, "mc2liblabel": 155, "am242": [155, 156, 239, 300], "a242": 155, "am242m": [155, 156, 160, 488], "adjustnuclid": 155, "amass": 155, "u239": [155, 492], "lindhard": 155, "cutoff": [155, 399, 503], "displac": [155, 159, 214, 236, 481, 499, 503], "specter": 155, "ii": 155, "greenwood": 155, "fpp": 155, "197": 155, "argonn": [155, 168, 176, 480, 481], "1985": 155, "ed": [155, 503], "ev": [155, 170, 201, 242, 472, 499, 501], "350439e": [156, 492], "hl": [156, 492], "22160758861e": [156, 492], "204000e": [156, 492], "03": [156, 446, 459, 462, 468, 475, 476, 484, 488, 492, 503, 505], "bymcc2id": [156, 492], "bymcc3id": [156, 492], "u235_7": 156, "bymcnpid": [156, 492], "92235": [156, 459], "aaazzz": 156, "byaaazzzsid": [156, 492], "2350920": 156, "npu239": 156, "decaytyp": 156, "dectyp": 156, "sf": [156, 164], "identif": [156, 175, 184], "endf": [156, 163, 185, 244, 293], "vii": [156, 163, 185], "fissl": 156, "halflif": [156, 492], "mcc2id": 156, "mcc3id": 156, "nucleon": 156, "excit": [156, 490, 495], "pad": [156, 251, 323, 397, 408, 416, 434, 501, 503], "nusf": [156, 164, 492], "cm244": [156, 300, 488], "answer": [156, 341, 375, 418, 480, 481, 488, 492], "card": [156, 201, 401, 421, 458, 462, 479, 484, 496], "isomer": 156, "94239": [156, 459], "6000": [156, 459], "eg": [156, 202, 310], "129m": 156, "njoi": [156, 244], "lightest": 156, "9228": 156, "9237": 156, "92000": 156, "Not": [156, 199, 201, 240, 310, 336, 397, 400, 499, 505], "nat": 156, "truncat": [156, 397, 416], "lump": [156, 164, 239, 244, 246, 248, 249, 307, 310, 477, 484, 503], "fissionproduct": [156, 244, 468, 475, 476, 488, 505], "expend": 156, "numberdensitydict": 156, "activenuclid": [156, 352, 356], "march": [156, 446, 503], "smallest": [156, 287, 304, 316, 409], "orderedset": 156, "lambda": [156, 310, 345, 408, 413, 416, 468, 490, 493, 501], "nn": [156, 505], "zn64": 156, "zn66": 156, "zn67": 156, "zn68": 156, "zn70": 156, "zr90": [156, 488], "zr91": [156, 488], "zr92": [156, 488], "zr94": [156, 488], "zr96": [156, 488], "zr93": 156, "zr95": 156, "isomers90": 156, "isom": [156, 163], "mo95": [156, 488], "mo2n": 156, "nb95": 156, "nb2n": 156, "zr2n": 156, "meet": [156, 287, 310, 330, 336, 345], "0107358968": 156, "am4c": 156, "newlabel": 156, "burnchainstream": [156, 477], "twice": [156, 225, 340, 494], "rebuild": 156, "orphan": 156, "burnchain": 156, "believ": [156, 481], "henc": [156, 307, 416, 448], "ecosystem": [156, 282, 445, 447, 452, 453, 481, 491], "everyth": [156, 176, 202, 203, 206, 251, 310, 343, 412, 416, 449, 494], "metast": [156, 477, 501], "ground": [156, 481, 484], "test_elements_elementbulkproperti": [157, 158], "test_element_elementbynamereturnsel": [157, 158], "test_element_elementbyzreturnsel": [157, 158], "test_element_elementbysymbolreturnsel": [157, 158], "test_element_addexistingelementfail": [157, 158], "test_element_addedelementappearsinelementlist": [157, 158], "test_element_getnatrualisotpicsonlyretrievesabundacegt0": [157, 158], "test_element_isnaturallyoccur": [157, 158], "test_abundancesaddtoon": [157, 158], "test_isheavymet": [157, 158], "test_nucdir_getnameforolddashednam": [157, 159], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclid": [157, 159], "test_nucdir_getnuclidesfromforbadnam": [157, 159], "test_getdisplacementenergi": [157, 159], "test_nucbases_fromnamebadnameraisesexcept": [157, 160], "test_nucbase_allabundancesaddtoon": [157, 160], "test_nucbases_alllabelsareuniqu": [157, 160], "test_nucbases_negativezraisesexcept": [157, 160], "test_nucbases_z295raisesexcept": [157, 160], "test_nucbases_mc2element": [157, 160], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail": [157, 160], "test_naturalnuclidebase_getnatrualisotp": [157, 160], "test_nucbases_singlefailswithmultiplematch": [157, 160], "test_nucbases_singlefailswithnomatch": [157, 160], "test_nucbases_singleisprettyspecif": [157, 160], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotop": [157, 160], "test_nucbases_labelandnamecollsionsareforsamenuclid": [157, 160], "test_nucbases_imposeburnchaindecaybulkstatist": [157, 160], "test_nucbases_imposeburnchaintransmutationbulkstatist": [157, 160], "test_nucbases_imposeburn_nusf": [157, 160], "test_nucbases_databasenamesstartwith_n": [157, 160], "test_nucbases_alldatabasenamesareuniqu": [157, 160], "test_nucbases_am242m": [157, 160], "test_nucbases_isheavymet": [157, 160], "test_getdecai": [157, 160], "test_getendfmatnum": [157, 160], "test_nonmc2nuclid": [157, 160], "test_kryptondecayconst": [157, 160], "test_curiedefinitionwithra226": [157, 160], "test_loadmcc2data": [157, 160], "test_loadmcc3data": [157, 160], "test_aaazzzsnamegener": [157, 160], "test_graphiteonreactor": [157, 161], "test_endf8compound": [157, 161], "test_endf8elementincompound": [157, 161], "test_endf8isotop": [157, 161], "test_acecompound": [157, 161], "test_aceelementincompound": [157, 161], "test_aceisotop": [157, 161], "test_failonmultipl": [157, 161], "test_transmutation_validreactiontyp": [157, 162], "test_transmutation_productparticl": [157, 162], "test_transmutation_invalidreactiontyp": [157, 162], "test_decaymode_validreactiontyp": [157, 162], "test_decaymode_invalidreactiontyp": [157, 162], "ripl": [158, 483, 484], "debat": 158, "yeah": [158, 213], "branch": [160, 164, 255, 445, 477, 484], "3e": [160, 467], "threshold": [160, 242, 268], "ternari": [160, 353], "sponan": 160, "am242g": 160, "226": [160, 492], "ci": [160, 310, 459, 484, 486], "988": 160, "mcc": [160, 174], "aaazz": 160, "tsl": [161, 163], "armiobj": 161, "conceptu": [161, 307, 364, 481, 503], "offici": [161, 175, 346, 453], "tslbynuclidebas": 161, "subject": [161, 163, 282, 452, 481], "tslinfo": 161, "nucbas": 161, "acelabel": [161, 163], "awar": [163, 206, 314, 481, 503], "characterist": [163, 343], "significantli": [163, 166, 205, 310, 446], "molecul": [163, 310], "beta": [163, 164, 170, 236, 477, 499, 501, 503], "solver": [163, 164, 170, 174, 176, 205, 244, 250, 251, 282, 287, 329, 460, 468, 477, 490, 494, 495, 503], "c12": 163, "parson": 163, "ur": 163, "25096": 163, "lanl": [163, 174], "pdf_file": 163, "classif": 163, "beo": 163, "crystallin": 163, "porou": [163, 236], "para": 163, "ortho": 163, "ch4": 163, "sio2": 163, "benzen": 163, "iii": 163, "kernel": [163, 215, 239, 251, 290, 291, 409, 481, 484, 488, 489, 494, 503, 505], "bynbandcompound": 163, "compoundnam": 163, "endf8label": 163, "whose": [163, 287, 314, 343, 397, 408, 416], "methan": 163, "endf8": 163, "rebuilt": 163, "burnchainfilenam": [164, 503], "np237": [164, 300, 488], "n2n": [164, 189, 198, 201, 260, 310, 499], "lfp38": [164, 244, 300, 488], "np239": 164, "ngamma": [164, 260, 413, 472, 477], "45000e": 164, "halflifeinsecond": 164, "4099935680e": 164, "gamma": [164, 166, 171, 172, 177, 192, 201, 202, 203, 237, 251, 258, 260, 287, 307, 310, 328, 329, 343, 346, 413, 472, 477, 484, 499, 503], "low": [164, 239, 240, 283, 332, 397, 413, 468, 488, 495, 498, 499, 501, 503], "explicitli": [164, 220, 244, 282, 294, 330, 332, 449, 453, 470, 471, 483, 490, 494, 503], "matrix": [164, 167, 168, 170, 173, 174, 183, 192, 198, 201, 203, 260, 397, 464, 477, 478, 479, 493, 496, 499, 505], "ill": 164, "exponenti": [164, 409, 477], "cram": 164, "adequ": [164, 452], "solut": [164, 172, 239, 240, 244, 311, 316, 346, 409, 503], "intrins": [164, 480, 499, 501], "pusa": 164, "maria": 164, "jaakko": 164, "leppanen": 164, "164": 164, "2010": 164, "140": 164, "150": [164, 408, 409, 461, 503], "moler": 164, "cleve": 164, "charl": 164, "van": 164, "loan": 164, "nineteen": 164, "dubiou": 164, "siam": 164, "1978": 164, "836": 164, "datadict": 164, "productnuclid": [164, 477], "fallback": [164, 220, 382], "productparticl": 164, "outgo": [164, 176, 191, 220, 503], "particl": [164, 499, 503], "scale": [164, 168, 287, 293, 310, 317, 336, 361, 401, 413, 415, 491, 499, 506], "doubl": [164, 167, 290, 416, 505], "librarynucnam": 164, "daughter": [164, 501], "circuit": [164, 345, 346], "shorter": [164, 373, 416, 447, 453, 495], "nalph": [164, 260, 413, 472, 477], "deuteron": 164, "triton": 164, "nt": [164, 260, 503], "bmd": [164, 477], "bpd": [164, 477], "electron": 164, "ec": [164, 469], "xsid": [165, 202, 239, 240, 266], "isotx": [165, 166, 168, 170, 189, 196, 201, 202, 203, 241, 258, 260, 287, 307, 310, 330, 413, 464, 467, 473, 478, 479, 483, 484, 496, 503], "compx": [165, 166, 175, 183, 196, 202], "gamiso": [165, 166, 174, 187, 202, 203, 483, 484], "cycle0": 165, "pmatrx": [165, 166, 192, 201, 202, 203, 483, 484], "implicit_int": [165, 166, 167], "iorecord": [165, 166, 167], "binaryrecordread": [165, 166, 167], "binaryrecordwrit": [165, 166, 167], "asciirecordread": [165, 166, 167], "asciirecordwrit": [165, 166, 167], "datacontain": [165, 166, 167, 169, 173, 175, 176, 178, 179, 180], "streamwithdatacontain": [165, 166, 167, 169, 173, 175, 176, 178, 179, 180], "getblockbandwidth": [165, 166, 167], "compxsregion": [165, 166, 168], "dif3d": [165, 166, 168, 170, 171, 172, 174, 175, 176, 179, 184, 186, 188, 190, 193, 201, 205, 221, 284, 287, 317, 329, 334, 342, 446, 480, 494, 499, 503], "dif3ddata": [165, 166, 169], "dif3dstream": [165, 166, 169], "dlayx": [165, 166, 185], "delayedneutrondata": [165, 166, 170], "readbinari": [165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 202, 467, 472, 473], "readascii": [165, 166, 167, 170, 177, 397, 398], "writebinari": [165, 166, 167, 168, 170, 171, 173, 174, 177, 178, 179, 180], "writeascii": [165, 166, 167, 170, 176, 177, 180, 397, 398], "dlayxsio": [165, 166, 170], "fixsrc": [165, 166, 186, 503], "comparenuclidex": [165, 166, 172, 174, 177], "adddummynuclidestolibrari": [165, 166, 172, 174, 177], "geodst": [165, 166, 176, 178, 188, 330, 484], "geodstdata": [165, 166, 173], "geodststream": [165, 166, 173], "compareset": [165, 166, 174], "isotxsio": [165, 166, 174], "labelsdata": [165, 166, 175], "labelsstream": [165, 166, 175], "nhflux": [165, 166, 179, 191, 484], "nhfluxstream": [165, 166, 176], "nafluxstream": [165, 166, 176], "nhfluxstreamvari": [165, 166, 176], "nafluxstreamvari": [165, 166, 176], "getnhfluxread": [165, 166, 176], "pmatrxio": [165, 166, 177], "pwdint": [165, 166, 193], "pwdintdata": [165, 166, 178], "pwdintstream": [165, 166, 178], "rtflux": [165, 166, 171, 194], "rtfluxdata": [165, 166, 179], "rtfluxstream": [165, 166, 179], "atfluxstream": [165, 166, 179], "getfdfluxread": [165, 166, 179], "rzflux": [165, 166, 179, 195], "rzfluxdata": [165, 166, 180], "rzfluxstream": [165, 166, 180], "test_xscollect": [165, 197], "testxscollect": [165, 197, 198], "mockblueprint": [165, 197, 198], "mockblock": [165, 197, 198], "test_xslibrari": [165, 197], "tempfilemixin": [165, 197, 199], "testxslibrari": [165, 197, 199], "testgetisotxsfilesinworkingdirectori": [165, 197, 199], "abstracttestxslibrarymerg": [165, 197, 199], "pmatrx_merge_test": [165, 197, 199], "isotxs_merge_test": [165, 166, 181, 189, 197, 199], "gamiso_merge_test": [165, 197, 199], "combined_merge_test": [165, 197, 199], "test_xsnuclid": [165, 197], "nuclidetest": [165, 197, 200], "getdefaultx": [165, 201], "getabsorptionx": [165, 201], "gettotalscattermatrix": [165, 201], "collapsecrosssect": [165, 201], "createmacrosonblocklist": [165, 201], "createmacrosfrommicro": [165, 201], "gammaenergyupperbound": [165, 202], "neutrondoseconversionfactor": [165, 202], "gammadoseconversionfactor": [165, 202], "numgroup": [165, 168, 201, 202], "numgroupsgamma": [165, 202], "nuclidelabel": [165, 202], "resetscatterweight": [165, 202], "getscatterweight": [165, 202], "purgefissionproduct": [165, 202], "regionlabel": [165, 202], "updatebasenuclid": [165, 203], "getmicrox": [165, 200, 203], "getx": [165, 166, 168, 203], "buildnormalizedscattercolumn": [165, 203], "tran": [165, 203, 477], "late": 166, "1960": [166, 481], "recogn": [166, 282, 481], "establish": [166, 314, 402, 403, 452, 481], "committe": 166, "coordin": [166, 176, 200, 215, 220, 244, 251, 284, 287, 292, 310, 317, 318, 325, 326, 329, 330, 334, 336, 339, 340, 341, 353, 354, 398, 407, 409, 418, 440, 441, 461, 470, 490, 495], "1977": 166, "iv": [166, 170, 171, 173, 174, 178, 179, 180, 331], "partisn": [166, 503], "multigroup": [166, 168, 170, 171, 172, 174, 177, 179, 180, 201, 214, 242, 251, 255, 287, 307, 310, 329, 330, 413, 467, 499, 503], "grupx": 166, "brkox": 166, "bondarenko": 166, "russian": 166, "delai": [166, 168, 170, 185, 237, 240, 270, 499, 501, 503], "precursor": [166, 170, 237, 270, 501, 503], "isogx": 166, "ndxsrf": 166, "znatdn": 166, "subzon": 166, "sncon": 166, "ordin": [166, 415], "surfac": [166, 176, 191, 499], "scalar": [166, 330, 415, 493, 499, 505], "atflux": [166, 171, 179], "adjoint": [166, 176, 179, 194, 237, 251, 287, 307, 310, 329, 330, 413, 499, 501, 503], "rcurnt": 166, "acurnt": 166, "raflux": 166, "angular": [166, 309, 342], "aaflux": 166, "avearg": 166, "densitii": 166, "interv": [166, 178, 409, 427], "dougla": 166, "dell": 166, "procedur": [166, 329], "6941": 166, "lo": 166, "alamo": 166, "septemb": 166, "5369298": 166, "ascii": [166, 167, 170, 173, 176, 177, 178, 179, 180, 182, 183, 192, 194, 195, 220, 292, 359, 398, 418, 483, 494, 503], "confus": [166, 167, 293, 307, 310, 332, 452, 484, 503], "rw": [166, 167], "talk": [166, 167, 503], "hide": [166, 214, 300, 307, 356, 444, 452, 483], "record": [166, 167, 168, 169, 173, 175, 178, 365, 367, 416, 434], "byte": [166, 167, 310, 405, 408, 434], "fortran": [166, 167, 409, 481], "unformat": 166, "sequenti": [166, 167, 439, 446], "gcc": [166, 488], "gnu": [166, 380], "onlinedoc": 166, "gfortran": 166, "pyne": 166, "terrapow": [166, 240, 410, 443, 448, 453, 480, 481, 482, 484, 494, 509], "author": [166, 416], "era": 166, "inspir": 166, "prof": 166, "jame": 166, "paul": 166, "hollowai": 166, "ccccutil": 166, "2001": 166, "test_cccc": [166, 181], "cccciostreamtest": [166, 181, 182], "ccccbinaryrecordtest": [166, 181, 182], "ccccasciirecordtest": [166, 181, 182], "test_compx": [166, 181], "testcompx": [166, 181, 183], "test_dif3d": [166, 181], "testdif3dsimplehexz": [166, 181, 184], "testdif3demptyrecord": [166, 181, 184], "test_dlayx": [166, 181], "dlayxstest": [166, 181, 185], "test_fixsrc": [166, 181], "testfixsrc": [166, 181, 186], "test_gamiso": [166, 181], "testgamiso": [166, 181, 187], "test_geodst": [166, 181], "testgeodst": [166, 181, 188, 193], "test_isotx": [166, 181], "testisotx": [166, 181, 189], "test_label": [166, 181, 352, 359], "testlabel": [166, 181, 190], "test_nhflux": [166, 181], "testnhflux": [166, 181, 191], "testnhfluxvari": [166, 181, 191], "test_pmatrx": [166, 181], "testpmatrxnuclid": [166, 181, 192], "testpmatrx": [166, 181, 192], "testproductionmatrix_fromwritten": [166, 181, 192], "testproductionmatrix_fromwrittenascii": [166, 181, 192], "test_pwdint": [166, 181], "test_rtflux": [166, 181], "testrtflux": [166, 181, 194], "test_rzflux": [166, 181], "testrzflux": [166, 181, 195], "binaryfilesequ": [166, 181, 195], "maxsiz": [166, 167], "rwint": [166, 167], "rwbool": [166, 167], "rwfloat": [166, 167], "rwdoubl": [166, 167], "rwstring": [166, 167], "rwlist": [166, 167], "rwmatrix": [166, 167], "rwdoublematrix": [166, 167], "rwintmatrix": [166, 167], "rwimplicitlytypedmap": [166, 167], "rwlong": [166, 167], "readwrit": [166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180], "createrecord": [166, 167], "initmetadata": [166, 168], "allocatex": [166, 168], "makescatteringmatric": [166, 168], "generateaveragedelayedneutronconst": [166, 170], "fluxmoment": [166, 176], "partialcurrentshex": [166, 176], "partialcurrentshex_ext": [166, 176], "partialcurrentsz": [166, 176], "groupflux": [166, 179, 180], "getenergygroupindex": [166, 179], "no_iter": [166, 180], "diverg": [166, 180, 221, 382], "ijklmn": 167, "implicit": [167, 443, 494], "hasrecordboundari": 167, "signific": [167, 227, 287, 307, 401, 481], "enforc": [167, 282, 333, 346, 354, 373, 380, 446, 486, 503], "tradeoff": [167, 503], "comprehend": 167, "885": [167, 484], "seemingli": 167, "odd": [167, 176, 330, 336, 452], "precis": [167, 329, 330, 346, 439, 483, 484, 494, 503], "containedtyp": [167, 366, 373], "strlength": 167, "fortran77": 167, "roughli": [167, 310, 468, 494], "front": [167, 332, 503], "newlin": [167, 205, 416], "streamwithdatastructur": 167, "filemod": [167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180], "io": [167, 310, 397, 439, 443, 481], "wb": [167, 171], "boilerpl": 167, "nintj": 167, "nblok": 167, "bandwidth": 167, "jl": 167, "ju": 167, "WITH": 167, "THE": [167, 168], "AND": [167, 175, 330], "min0": 167, "jup": 167, "matric": [167, 168, 183, 198, 201, 203, 260, 473], "spars": [167, 168, 183, 203, 379], "jh": 167, "jmax": 167, "band": 167, "derstin": [168, 342], "solv": [168, 170, 228, 251, 329, 340, 346, 407, 409, 477, 482, 490, 494, 503, 509], "diffus": [168, 251, 260, 317, 329, 480, 481, 483, 484], "april": 168, "1984": [168, 342], "illinoi": 168, "unt": 168, "ark": 168, "67531": 168, "metadc283553": 168, "octob": [168, 176], "north": [168, 330], "texa": 168, "credit": 168, "govern": [168, 481, 494], "depart": 168, "IF": [168, 175, 367], "FOR": [168, 175], "OF": [168, 481, 494], "decreas": [168, 318, 409, 495], "r0": 168, "macro": [168, 201, 260, 287, 495], "higherorderscatt": 168, "p1": [168, 409], "p5": 168, "compxs2": 168, "watt": [168, 178, 287, 501], "powerconvmult": 168, "integr": [168, 287, 304, 310, 329, 447, 481, 499, 501, 506], "absorpt": [168, 201, 329, 499, 501], "similari": 168, "lib1": [168, 170, 172, 174, 177, 202], "lib2": [168, 170, 172, 174, 177, 202], "verbos": [168, 174, 201, 367, 394, 397, 416, 453, 493, 503, 505], "disregard": [168, 287], "regionnumb": 168, "filewidechi": 168, "reg00": 168, "reg01": 168, "reg02": 168, "regnn": 168, "r10": 168, "01147095": 168, "01006284": 168, "0065597": 168, "00660079": 168, "005587": 168, "08920149": 168, "13035864": 168, "16192732": 168, "sigma_": [168, 201, 287], "rem": 168, "cdot": [168, 307], "reconstruct": [168, 191, 196, 203, 251, 499, 503, 505], "s_": 168, "rightarrow": 168, "segment": [168, 309, 480, 503], "xscatu_j": 168, "lbrace": [168, 506], "vert": 168, "nup": 168, "rbrace": [168, 506], "xscatj_j": 168, "xscatd_j": 168, "j_ndn": 168, "ndn": 168, "upscatt": 168, "downscatt": [168, 242], "scipi": [168, 183, 284, 409], "csc_matrix": [168, 183], "five": [169, 407], "emiss": [170, 185], "spectra": 170, "numenergygroup": 170, "numprecursorgroup": 170, "kinet": [170, 185, 213, 346, 499], "precursordecayconst": 170, "character": [170, 255, 341, 342, 480], "delayemissionspectrum": [170, 185], "famili": [170, 287, 400, 503], "pxg": 170, "spectrum": [170, 185, 239, 240, 251, 287, 413, 477, 499], "aka": [170, 503], "chi": [170, 201, 236, 260, 499], "delayneutronsperfiss": 170, "nubar": 170, "ordereddict": [170, 289, 290, 291, 292, 293, 294, 434], "contribut": [170, 201, 329, 445, 482, 509], "nuclidefamili": 170, "numfamili": 170, "numnuclid": 170, "neutronenergyupperbound": 170, "nuclidecontributionfract": 170, "perturbationtheori": 170, "perturbationtheoryinterfac": 170, "calculatebeta": 170, "triangular": 171, "photon": [171, 201, 251, 484], "fixsrcarrai": 171, "intent": [171, 284, 481], "preexist": 171, "v3": [172, 449], "microscop": [172, 174, 198, 201, 203, 239, 251, 260, 287, 330, 473, 491], "gamsor": [172, 177], "smith": [172, 176, 416], "lee": [172, 177], "hill": 172, "1343095": 172, "nuc1": [172, 174, 177], "nuc2": [172, 174, 177], "dummynuclid": [172, 174, 177], "coars": [173, 184, 221], "geo": 173, "xmesh": 173, "zmesh": 173, "geodst2": 173, "rememb": [173, 220, 310, 347, 439, 449, 452, 503], "analog": [173, 180, 205, 323, 446, 505], "istox": [173, 180, 203], "stand": 174, "dragon": 174, "mylib": [174, 201], "fis5": 174, "micro": [174, 201, 260, 472, 473], "scat": 174, "1st": 174, "elast": [174, 198, 201], "captureenergi": 174, "isotxsmetadata": 174, "ecapt": 174, "cacluat": 174, "closer": 174, "shown": [174, 283, 413, 449, 481, 494, 503], "getnuclidefunc": [174, 177], "semi": 174, "t2": 174, "transx": 174, "hyper": 174, "isotsx": 174, "variant": [175, 176, 190, 206, 484], "transvers": 175, "nhts1": 175, "gt": [175, 488, 492, 493, 495], "OR": [175, 481, 494], "distanc": [175, 220, 287, 306, 316, 336, 339, 340, 341, 407, 490, 494, 503], "ngts2": 175, "nset": [175, 212, 438], "nalia": 175, "rod": [175, 284, 287, 288, 316, 329, 481, 484, 494, 498, 501], "nbank": 175, "bank": 175, "channel": [175, 499, 503], "llchn": 175, "llrod": 175, "mmesh": 175, "nvari": 175, "maxbrn": 175, "maxord": 175, "labeldata": 175, "labelstream": 175, "moment": [176, 179, 191, 321, 487], "nhfluxdata": 176, "nfluxstream": 176, "numdatasetstoread": 176, "reader": [176, 179, 182, 183, 310, 367, 400, 439, 451, 452, 484], "v11": 176, "incomingpointerstoallassembli": 176, "geodstcoordmap": 176, "externalcurrentpoint": 176, "boundari": [176, 184, 251, 284, 292, 317, 329, 330, 333, 334, 335, 338, 341, 362, 439, 494, 501, 503], "outgoingpcsymsecpoint": 176, "outpgo": 176, "sector": 176, "ingoingpcsymsecpoint": 176, "ingo": 176, "fluxmomentsal": 176, "jth": 176, "planar": [176, 501, 503], "pariti": 176, "partialcurrentshexal": 176, "partialcurrentshex_extal": 176, "adjac": [176, 191, 494], "partialcurrentszal": 176, "upward": [176, 484], "downward": 176, "rebu": [176, 481, 494], "2014": [176, 440], "palmiotti": 176, "lewi": 176, "carrico": 176, "variat": [176, 258, 282, 287, 452], "anisotrop": 176, "multidimension": 176, "il": 176, "shemon": 176, "1127298": 176, "anlpub": 176, "04": [176, 246, 300, 446, 459, 462, 468, 475, 476, 478, 481, 488, 492], "78313": 176, "naflux": 176, "setter": [176, 329, 343, 346, 360, 373], "radial": [176, 251, 283, 284, 288, 309, 317, 318, 329, 330, 332, 334, 342, 488, 490, 493, 495, 498, 499, 501, 502], "conflict": [176, 391, 481, 482, 490, 503, 509], "_readwrit": 176, "sassi": [176, 330, 499], "adjointflag": [176, 179], "variantflag": 176, "mc23": 177, "changho": 177, "jung": 177, "yeon": 177, "sang": 177, "yang": 177, "sik": 177, "2018": [177, 410], "1483949": 177, "xslib": [177, 452], "pwr": 178, "pwdint2": 178, "rtflux2": 179, "adjointflux": 179, "ng": [179, 253, 260, 310, 499], "fd": [179, 287], "rzflux2": 180, "itp": 180, "test_initwithfilemod": [181, 182], "test_writeandreadsimpleintegerrecord": [181, 182], "test_writeandreadsimplefloatrecord": [181, 182], "test_writeandreadsimplestringrecord": [181, 182], "test_notreadinganentirerecordraisesexcept": [181, 182], "test_readingbeyondrecordraisesexcept": [181, 182], "binarywritepath": [181, 183], "asciiwritepath": [181, 183], "test_librarydata": [181, 183], "test_regionprimaryx": [181, 183], "test_totalscattermatrix": [181, 183], "test_binaryrw": [181, 183], "test_asciirw": [181, 183], "test_mergecompxslibrari": [181, 183], "test_getcompxsfilenam": [181, 183], "test__rwfileid": [181, 184], "test__rwfile1drecord": [181, 184], "test__rw2drecord": [181, 184], "test__rw3drecord": [181, 184], "test__rw4drecord": [181, 184], "test__rw5drecord": [181, 184], "test_writebinari": [181, 184, 187, 189], "test_empty4and5record": [181, 184], "test_decayconst": [181, 185], "test_chi_delai": [181, 185], "test_chi_delaysumsto1": [181, 185], "test_nudelai": [181, 185], "test_endfvii1decayconst": [181, 185], "test_endfvii1neutronsperfiss": [181, 185], "test_compar": [181, 185, 187], "test_writebinary_mcc3": [181, 185], "test_nuclid": [181, 185, 295, 298], "test_avg": [181, 185], "test_writereadbinaryloop": [181, 186], "test_adddummynuclidestolibrari": [181, 187], "test_readgeodst": [181, 188, 193], "test_writegeodst": [181, 188, 193], "test_isotxsgeneraldata": [181, 189], "test_isotxsdetaileddata": [181, 189], "test_getscatteringweight": [181, 189], "test_getnuclid": [181, 189, 352, 356], "test_n2nisreactionbas": [181, 189], "test_getscatterweight": [181, 189], "test_getisotxsfilenam": [181, 189], "test_getgamisofilenam": [181, 189], "test_mergemccv2filesremovesthefilewidechi": [181, 189], "test_readlabelsbinari": [181, 190], "test_writelabelsascii": [181, 190], "test_fc": [181, 191], "test_fluxmo": [181, 191], "test_xypartialcurr": [181, 191], "test_zpartialcurr": [181, 191], "test_writ": [181, 191, 380, 394], "test_pmatrxnuclidedataaa": [181, 192], "test_pmatrxnuclidedataab": [181, 192], "test_nuclidedataisdiffer": [181, 192], "test_getpmatrxfilenam": [181, 192], "test_pmatrxgammaenergi": [181, 192], "test_pmatrxneutronenergi": [181, 192], "test_pmatrxnuclidenam": [181, 192], "test_pmatrxdoesnthavedoseconversionfactor": [181, 192], "test_writtenisidenticaltoorigin": [181, 192], "test_readrtflux": [181, 194], "test_writertflux": [181, 194], "test_rwascii": [181, 194, 195], "test_adjoint": [181, 194], "test_readrzflux": [181, 195], "test_writerzflux": [181, 195], "vector": [183, 201, 203, 246, 260, 310, 330, 341, 401, 483, 498, 499, 501, 505], "indptr": 183, "correspons": 183, "verifi": [183, 184, 185, 191, 258, 273, 282, 310, 323, 327, 354, 355, 362, 375, 380, 468, 475, 476, 488, 493, 503], "optimum": 184, "overrelax": 184, "rebal": 184, "delayx": 185, "nu": [185, 499], "nndc": 185, "bnl": 185, "robert": 185, "keepin": 185, "comment": [185, 445, 447, 453, 494, 495, 503], "subtract": [191, 287, 304, 340, 354, 355, 500, 503], "xy": [191, 251, 413, 441, 498, 499, 503], "fn1": 195, "fn2": 195, "bytewis": 195, "assist": [196, 380, 481, 482, 483, 493, 509], "rewrit": 196, "scaffold": 196, "overal": [196, 451, 452, 481, 488], "_metadata": 196, "nucld": 196, "test_generatetotalscatteringmatrix": [197, 198], "test_generatetotalscatteringmatrixwithmissingdata": [197, 198], "test_plotnucx": [197, 198], "test_createmacrosfrommicro": [197, 198], "test_collapsecrosssect": [197, 198], "getvolum": [197, 198, 283, 284, 287, 304, 307, 310, 465, 488, 490], "getnuclidenumberdens": [197, 198, 201, 283, 304, 307, 310], "paramcollectiontyp": [197, 198, 283, 284, 287, 304, 305, 306, 307, 309, 310, 330, 331, 347, 349, 350, 352, 356], "setnumberdens": [197, 198, 283, 304, 307, 310, 481, 488], "testfilenam": [197, 199], "test_canpickleandunpickleisotx": [197, 199], "test_canpickleandunpicklegamiso": [197, 199], "test_canpickleandunpicklepmatrx": [197, 199], "test_comparework": [197, 199], "test_comparedifferentcomponentsofanxslibrari": [197, 199], "test_mergefailswithnonisotxsfil": [197, 199], "test_isotxslibraryattribut": [197, 199], "test_gamisolibraryattribut": [197, 199], "test_pmatrxlibraryattribut": [197, 199], "test_mergexslibrarieswithdifferentdatawork": [197, 199], "test_canwriteisotxsfromcombinedxslibrari": [197, 199], "test_canwritegamisofromcombinedxslibrari": [197, 199], "test_canwritepmatrxfromcombinedxslibrari": [197, 199], "test_getisotxsfileswithoutlibrarysuffix": [197, 199], "test_getisotxsfileswithlibrarysuffix": [197, 199], "assert_contains_onli": [197, 199], "geterrortyp": [197, 199], "getreadfunc": [197, 199], "getwritefunc": [197, 199], "getlibaapath": [197, 199], "getlibabpath": [197, 199], "getlibaa_abpath": [197, 199], "getliblumpedpath": [197, 199], "test_cannotmergexslibwithsamenuclidenam": [197, 199], "test_cannotmergexslibxwithdifferentgroupstructur": [197, 199], "test_mergeemptyxslibwithotheressentiallyclonestheoth": [197, 199], "test_mergetwoxslibfil": [197, 199], "test_canremoveisotop": [197, 199], "test_cannotmergexslibswithdifferentgammagroupstructur": [197, 199], "test_mergeallxslibfil": [197, 199], "test_nuclide_createfromlabelfailsonbadnam": [197, 200], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict": [197, 200], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclid": [197, 200], "test_nuclide_newlabelsdontcausewarn": [197, 200], "test_nuclide_oldlabelscausewarn": [197, 200], "test_nuclide_nuclidebasemethodsshouldnotfail": [197, 200], "test_nuclide_isoaadetail": [197, 200], "test_nuclide_2dxsarrangementiscorrect": [197, 200], "test_nuclide_scatterxsarrangementiscorrect": [197, 200], "test_getmicrox": [197, 200], "test_getx": [197, 200], "inelast": [198, 201, 473], "collaps": [198, 201, 244], "barn": [198, 251, 310, 472, 503], "blockparametercollect": [198, 287, 343, 347], "shouldbether": 199, "shouldnotbether": 199, "nicer": 199, "microscopicxscollect": 201, "microlib": 201, "u235aa": [201, 202], "macrocollect": 201, "blockswithmacro": 201, "nuclidecollect": 201, "displai": [201, 310, 413, 439, 480], "crosssect": 201, "extrem": [201, 410, 452, 493], "efficaci": 201, "survei": 201, "bar": [201, 315, 405, 413, 415, 417, 424, 441, 451, 467], "sigma": [201, 287, 342, 499, 501], "sum_g": 201, "sigma_g": 201, "phi_g": [201, 287], "onegroupx": 201, "relativetoler": [201, 414], "overlap": [201, 236, 287, 310, 316, 329, 354, 477, 481], "attributestoignor": 201, "buildscattermatrix": [201, 260], "buildonlycool": [201, 260], "minimumnuclidedens": [201, 260, 484, 503], "creation": [201, 240, 249, 265, 310, 329, 343, 347, 360, 361, 422, 424, 451, 481, 484], "microlibrari": 201, "blocklist": [201, 239, 251, 255, 283, 288, 290, 330, 475], "libtyp": [201, 260], "gammax": [201, 260], "isotxslib": 201, "4b": 201, "hmg4c": 201, "chi_g": 201, "sum_": [201, 287, 310, 506], "chi_": 201, "n_n": 201, "nu_": 201, "sum_n": 201, "microsuffix": 201, "deposit": [201, 287, 354, 499], "obtain": [201, 239, 287, 310, 317, 330, 347, 397, 407, 481, 494, 499, 506, 507], "bn": [201, 246, 307, 310, 401, 488, 498, 499, 500], "getmicrosuffix": [201, 283, 287, 304, 307, 310], "energydepositionconst": 201, "e_": 201, "generation_fiss": 201, "kappa_f": 201, "sigma_f": 201, "fissionenergyfactor": 201, "joul": [201, 287], "kappa_c": 201, "sigma_c": 201, "getnumberdens": [201, 243, 246, 283, 304, 307, 310, 459, 488], "captureenergyfactor": 201, "constantnam": 201, "multconst": 201, "multlib": 201, "macrogroupconst": 201, "attributenam": 202, "veloc": [202, 255, 490, 499], "nuclabel": 202, "xslibrarysuffix": [202, 255, 256], "xslibfilenam": 202, "doppler": [202, 227, 239, 255, 330, 486, 499, 501, 506], "isoaa": 202, "isoba": 202, "isoca": 202, "n1": 202, "isoab": 202, "n2": [202, 397], "isoda": 202, "mergegammalib": 202, "alternatedirectori": 202, "alphabet": [202, 239, 330, 358, 364, 486], "referencedummynuclid": 202, "_xslibrari": 202, "libisotx": 202, "dose": [202, 213, 251, 480, 481, 499, 501, 503], "scattermatrixkei": [202, 203], "elasticscatt": 202, "_buildscatterweight": 202, "purg": 202, "pu39aa": 203, "xscollectionkei": 203, "containerkei": 203, "homogregion": 203, "scatterweight": 203, "fromg": 203, "gx1": 203, "cannib": 203, "newli": [203, 237, 282, 367, 396, 399, 503], "scattermatrix": 203, "scattertypelabel": 203, "scattermatrix1": 203, "scattermatrix2": 203, "graphic": [203, 399, 480, 482, 490, 503, 509], "chosen": [204, 310, 446, 490, 503], "introduc": [204, 237, 343, 392, 448, 484, 495, 501], "test_operatorsnapshot": [204, 210], "testoperatorsnapshot": [204, 210, 211], "testoperatorsnapshotsset": [204, 210, 211], "test_oper": [204, 210], "interfacea": [204, 210, 212], "interfaceb": [204, 210, 212], "interfacec": [204, 210, 212], "operatortest": [204, 210, 212], "testcreateoper": [204, 210, 212], "cyclessettingstest": [204, 210, 212, 397, 417, 438], "testinterfaceandeventhead": [204, 210, 212], "maxburnstep": [204, 205], "steplength": [204, 205, 397, 508], "cyclelength": [204, 205, 343, 397, 438, 451, 493, 494, 495, 503, 508], "powerfract": [204, 205, 397, 438, 503], "availabilityfactor": [204, 205, 397, 438, 494, 495, 503, 508], "cyclenam": [204, 205, 397], "ateol": [204, 205, 209], "initializeinterfac": [204, 205], "printinterfacesummari": [204, 205], "interactallinit": [204, 205], "interactallbol": [204, 205, 446], "interactallboc": [204, 205], "interactalleverynod": [204, 205], "interactalleoc": [204, 205], "interactalleol": [204, 205], "interactallerror": [204, 205], "removeallinterfac": [204, 205], "removeinterfac": [204, 205], "interfaceisact": [204, 205], "getactiveinterfac": [204, 205], "reattach": [204, 205], "snapshotrequest": [204, 205], "setstatetodefault": [204, 205, 209], "couplingisact": [204, 205, 212], "workerquit": [204, 206], "collapseallstderr": [204, 206], "plant": [205, 480, 481, 493, 503, 508], "orchestr": 205, "piec": [205, 310, 446, 488, 491, 503], "flow": [205, 213, 216, 237, 255, 277, 287, 346, 446, 481, 490, 498, 499, 501, 503], "narr": [205, 454, 479, 496], "topic": [205, 439, 451], "tier": 205, "intra": [205, 397], "durat": [205, 499, 503], "outag": [205, 216, 217, 220, 224, 415, 480, 503, 508], "oserror": 205, "unabl": 205, "ncycl": [205, 212, 397, 438, 494, 495, 503], "mainoper": [205, 446], "interactionnam": 205, "statepointindex": 205, "grep": [205, 493], "leverag": [205, 481], "banner": 205, "excludedinterfacenam": 205, "tn": [205, 239], "couplediter": [205, 501], "lie": [205, 336], "reverseateol": 205, "question": [205, 237, 310, 336, 341, 374, 375, 412, 413, 415, 439, 445, 481, 492, 503], "ephemer": 205, "interfacenam": 205, "wasn": 205, "___": [205, 375, 482, 488, 493, 509], "simpler": [205, 444], "touch": [205, 220, 453, 486], "interactst": 205, "dictat": [205, 215, 330, 448], "activeinterfac": 205, "opportun": [205, 330, 451], "weakref": 205, "network": [205, 215, 310, 480, 503], "updatemassfract": 205, "rerout": 205, "didn": 205, "evolv": [205, 481], "smart": [206, 323, 408, 439], "optim": [206, 221, 255, 287, 309, 321, 330, 481, 493, 503], "_mainoper": 206, "rank": [206, 449, 503], "instruct": [206, 449, 453, 482, 509], "devis": 206, "stderr": [206, 365, 505], "arrang": [206, 294, 334, 446, 480, 481, 503], "deprecationwarn": 208, "disappear": 208, "2025": 208, "rx": [209, 253, 373, 477], "behav": [209, 316, 330, 339, 345, 347, 409, 503], "chrolog": 209, "test_ateol": [210, 211], "test_setstatetodefault": [210, 211, 212], "test_mainoper": [210, 211], "test_createinterfac": [210, 211], "test_createinterfacesdis": [210, 211], "test_getoperatorclassfromset": [210, 211], "test_operatordata": [210, 212], "test_orderedinterfac": [210, 212], "test_addinterfacesubclasscollis": [210, 212], "test_interfaceisact": [210, 212], "test_getactiveinterfac": [210, 212], "test_loadstateerror": [210, 212], "test_snapshotrequest": [210, 212], "test_createoper": [210, 212], "test_getsteplength": [210, 212, 417, 438], "test_couplingisact": [210, 212], "test_performtightcoupling_inact": [210, 212], "test_performtightcoupling_skip": [210, 212], "test_performtightcoupling_notconverg": [210, 212], "test_performtightcoupling_writedb": [210, 212], "test_performtightcoupling_nowritedb": [210, 212], "dbwriteforcoupl": [210, 212], "test_computetightcouplingconverg": [210, 212], "detailedcyclesset": [210, 212, 417, 438], "powerfractionssolut": [210, 212], "cyclenamessolut": [210, 212], "availabilityfactorssolut": [210, 212], "steplengthssolut": [210, 212], "cyclelengthssolut": [210, 212], "burnstepssolut": [210, 212], "maxburnstepssolut": [210, 212], "test_getpowerfract": [210, 212, 417, 438], "test_getcyclenam": [210, 212, 417, 438], "test_getavailabilityfactor": [210, 212, 417, 438], "test_getcyclelength": [210, 212, 417, 438], "test_getburnstep": [210, 212, 417, 438], "test_getmaxburnstep": [210, 212, 417, 438], "test_expandcycleandtimenodeargs_empti": [210, 212], "test_expandcycleandtimenodeargs_cycl": [210, 212], "test_expandcycleandtimenodeargs_everynod": [210, 212], "test_expandcycleandtimenodeargs_coupl": [210, 212], "interactal": 212, "loadtestreactor": [212, 283, 352, 361, 459, 460, 461, 468, 476], "fakedirlist": 212, "fakecopi": 212, "conf_tight_coupl": 212, "_performtightcoupl": 212, "conf_cycles_skip_tight_coupling_interact": 212, "address": [212, 227, 288, 343, 447], "accour": 212, "WILL": [212, 321], "writedb": 212, "greater": [212, 304, 407], "prescrib": [212, 314, 441, 495, 506], "previterkeff": 212, "curriterkeff": 212, "nmetadata": [212, 438], "1000000000": [212, 438, 494, 495], "r4": [212, 438], "cyclenodeinfo": 212, "vast": 213, "fairli": [213, 215, 495, 503], "ve": [213, 350, 481, 488, 490, 503], "reprocess": [213, 480], "accid": [213, 227, 481], "drop": [213, 310, 373, 397, 408, 416, 451], "econom": [213, 446, 481, 508], "cost": [213, 452, 481, 508], "estim": [213, 221, 499, 500], "stretch": 213, "supersourceterm": 213, "magwoodsbrain": 213, "propos": [213, 375], "ticket": [213, 445, 452], "began": 213, "matur": [213, 491], "assemblyrotationalgorithm": [213, 216, 224, 503], "bureducingassemblyrot": [213, 216, 217], "simpleassemblyrot": [213, 216, 217, 503], "fuelhandlerfactori": [213, 216, 488], "fuelhandlerinterfac": [213, 216, 220, 225, 255, 282], "fuelhandl": [213, 216, 217, 218, 219, 224, 282, 330, 382, 415, 446, 468, 476, 484, 488, 494, 503], "hexassemblyfuelmgmtutil": [213, 216], "getoptimalassemblyorient": [213, 216, 221], "buildringschedul": [213, 216, 221], "buildconvergentringschedul": [213, 216, 221], "getfuelcycleset": [213, 216, 222], "getfuelcyclesettingvalid": [213, 216, 222], "fuelperformanceopt": [213, 227, 228], "fuelperformanceexecut": [213, 227, 228], "getfuelperformanceparameterdefinit": [213, 227, 229], "fuelperformanceplugin": [213, 227, 230, 234], "definevalid": [213, 227, 231, 274, 278, 490], "applyfueldisplac": [213, 227, 236], "gasconductivitycorrect": [213, 227, 236], "everynod": [213, 237, 255, 265, 446, 486, 503], "firstcouplediter": [213, 237, 258, 265, 503], "fissionproductmodel": [213, 237, 287, 307, 310, 488], "latticephys": [213, 237, 240], "const": [213, 237, 274], "crosssectiongroupmanag": [213, 225, 237, 240, 244, 265, 488], "getxstypenumberfromlabel": [213, 237, 239], "getxstypelabelfromnumb": [213, 237, 239], "blockcollect": [213, 237, 239, 484], "medianblockcollect": [213, 237, 239], "averageblockcollect": [213, 237, 239], "getblocknuclidetemperatureavgterm": [213, 237, 239], "cylindricalcomponentsaverageblockcollect": [213, 237, 239, 484], "slabcomponentsaverageblockcollect": [213, 237, 239], "fluxweightedaverageblockcollect": [213, 237, 239], "blockcollectionfactori": [213, 237, 239], "crosssectionset": [213, 237], "xsgeometrytyp": [213, 237, 240], "xsset": [213, 237, 239, 240, 503], "xsmodelingopt": [213, 237, 240, 266], "serializexsset": [213, 237, 240], "xssettingdef": [213, 237, 240], "xssettingsvalid": [213, 237, 240], "diffisotx": [213, 237], "compareisotxslibrari": [213, 237, 241], "energygroup": [213, 237, 472], "getfastfluxgroupcutoff": [213, 237, 242], "getgroupstructur": [213, 237, 242, 472], "getgroupstructuretyp": [213, 237, 242], "group_structur": [213, 237, 242], "macroxsgenerationinterfac": [213, 237, 269], "macroxsgener": [213, 237, 260], "getneutronicsparameterdefinit": [213, 237, 261], "insertneutronicsreport": [213, 237, 262], "insertneutronicsbolcont": [213, 237, 262], "neutronicsplot": [213, 237, 262, 451], "insertinitialcorefuelassem": [213, 237, 262], "generatelineplot": [213, 237, 262], "pd_plot": [213, 237, 262], "getneutronicssettingvalid": [213, 237, 263], "test_execut": [213, 227, 232, 272], "mockparam": [213, 272, 273], "mockcor": [213, 250, 252, 253, 272, 273], "testexecutionopt": [213, 272, 273], "testexecut": [213, 272, 273], "getparameterdefinit": [213, 274, 276], "thermalhydraulicsplugin": [213, 274, 277, 280, 486], "fromuserset": [213, 215, 227, 228, 250, 251], "fromreactor": [213, 215, 227, 228, 250, 251, 283, 351, 397, 398], "resolvederivedopt": [213, 215], "setrundirfromcasetitl": [213, 215], "dpa": [214, 251, 253, 284, 415, 451, 484, 498, 499, 501, 503], "executor": 215, "pathwai": [215, 477], "inputfil": 215, "stdin": 215, "outputfil": [215, 410], "extrainputfil": 215, "sourcenam": 215, "destnam": 215, "brought": [215, 220, 282, 287], "rundir": [215, 273], "extraoutputfil": 215, "executablepath": [215, 410], "workingdir": 215, "savephysicsfil": [215, 251, 484, 503], "dedic": [215, 288], "copyoutput": [215, 484], "applyresultstoreactor": 215, "deliber": [215, 251, 282, 343, 439], "paralleliz": 215, "maxim": [215, 292, 416], "reusabl": [215, 292, 452], "transform": [215, 251, 317, 340, 341, 397, 408, 460, 477], "executeropt": [215, 253], "mine": 216, "dispos": 216, "ex": [216, 294, 331, 349, 390, 410, 423, 446, 483, 486, 503], "chemistri": 216, "handler": [216, 219, 220, 225, 282, 488, 494, 503], "hookspec": [216, 282, 448], "inspect": [216, 230, 237, 277, 282, 375, 486, 493], "test_assemblyrotationalgorithm": [216, 223], "testfuelhandlermgmttool": [216, 223, 224], "test_fuelhandl": [216, 223], "fuelhandlertesthelp": [216, 223, 224, 225], "mocklatticephysicsinterfac": [216, 223, 225], "mockxsgm": [216, 223, 225], "testfuelhandl": [216, 223, 225], "testfuelplugin": [216, 223, 225], "addsomedetailassembli": [216, 223, 225], "test_hexassemblyfuelmgmtutil": [216, 223], "testhexassemmgmttool": [216, 223, 226], "managefuel": [216, 219, 225], "makeshufflereport": [216, 219, 220], "chooseswap": [216, 220, 380, 382, 494, 503], "prepcor": [216, 220], "findassembli": [216, 220, 225, 488, 503], "isassemblyinazon": [216, 220], "swapassembli": [216, 220, 468, 488], "dischargeswap": [216, 220, 494], "swapcascad": [216, 220], "repeatshufflepattern": [216, 220], "readmov": [216, 219, 220], "trackchain": [216, 220], "processmovelist": [216, 220], "dorepeatshuffl": [216, 220, 330], "prepshufflemap": [216, 220], "makeshufflearrow": [216, 220], "rotat": [217, 220, 221, 224, 251, 283, 284, 287, 306, 339, 353, 354, 407, 409, 425, 477, 486, 498, 499, 501, 503], "fh": [217, 225, 488], "lowest": [217, 221, 242, 284, 330, 397, 468, 488, 503], "orient": [217, 221, 287, 314, 354, 398, 407, 425, 452, 469, 480, 488, 498, 499, 501], "stationari": [217, 225, 332, 503], "isotrop": 217, "txt": [219, 220, 225, 330, 503], "fuelhandlernam": [220, 494, 503], "decis": [220, 244, 340, 451], "supervisori": 220, "movelist": [220, 486], "shufflefactor": 220, "aux": 220, "targetr": [220, 330], "compareto": [220, 488, 503], "forcesid": 220, "mandatoryloc": 220, "zonelist": 220, "excludedloc": 220, "minparam": 220, "minval": [220, 318, 409], "maxparam": 220, "maxval": [220, 310, 318], "findmani": [220, 225], "coord": [220, 283, 284, 287, 361, 486, 488, 490], "exacttyp": [220, 330], "acceptfirstcandidat": 220, "blocklevelmax": [220, 488], "findfromsfp": 220, "maxnumassem": 220, "circularringflag": 220, "criterion": [220, 468], "had": [220, 343, 404, 405, 439, 484, 503], "bob": [220, 416, 449], "ye": [220, 446, 452, 488], "timetolimit": [220, 498, 499], "pick": [220, 330, 415, 444, 481, 488, 503], "assembi": [220, 294], "ignit": [220, 283, 287, 332, 501, 503], "earliest": 220, "maxbu": 220, "candid": [220, 239, 310, 374, 468], "maxburnup": 220, "toggl": [220, 343, 503], "gotten": 220, "valuabl": [220, 453, 501], "reconsid": [220, 228], "assemlist": 220, "feed": [220, 283, 287, 330, 332, 401, 481, 501, 503, 508], "discharg": [220, 221, 330, 350, 498, 503], "goingout": 220, "inter1": 220, "inter2": 220, "goingin": 220, "art": 220, "explicitrepeatshuffl": [220, 503], "casenam": 220, "oldloc": [220, 330], "newloc": [220, 330], "enrichlist": [220, 330], "assemtyp": [220, 282, 284, 317, 330], "bottom": [220, 251, 284, 287, 323, 330, 335, 336, 340, 341, 343, 346, 353, 398, 434, 488, 490, 494, 495, 498, 499, 501, 503], "startingat": 220, "alreadydon": 220, "mont": [220, 244, 481], "carlo": [220, 244, 481], "fromloc": 220, "toloc": 220, "assemnam": [220, 330, 342], "loadnam": 220, "charg": [220, 221, 484, 498], "movingassemnam": 220, "loadchain": 220, "loadqueu": [220, 284], "loopchain": 220, "loadchargetyp": 220, "movement": [220, 330], "maneuv": [220, 413], "arrow": [220, 413, 477, 503], "currentcoord": 220, "oldcoord": 220, "aprev": 221, "peak": [221, 251, 262, 287, 329, 413, 451, 481, 484, 494, 499, 501, 503], "rot": 221, "pi": [221, 284, 287, 306, 316, 441, 461, 468, 469, 471, 477, 494], "counterclockwis": [221, 287, 330, 339, 498, 499, 501], "rotateassembli": 221, "maxringincor": 221, "charger": 221, "jumpringfrom": 221, "jumpringto": 221, "coarsefactor": 221, "combo": [221, 293, 449], "jumpr": [221, 501, 503], "scheme": [221, 453, 503], "jump": [221, 452, 501, 503], "sublist": [221, 408], "subcas": 221, "baselist": [221, 255], "enter": [221, 304, 310, 494, 498, 503], "outermost": [221, 287], "hit": [221, 323, 354, 481], "rj": 221, "rd": 221, "ringschedul": 221, "ringwidth": 221, "getnumr": [221, 283, 330], "innermost": [221, 287, 488], "conwidth": 221, "test_bureducingassemblyrot": [223, 224], "test_simpleassemblyrot": [223, 224], "test_getparammax": [223, 225], "test_findhighbu": [223, 225], "test_outag": [223, 225], "test_outageedgecas": [223, 225], "test_isassemblyinazon": [223, 225], "test_width": [223, 225], "test_findmani": [223, 225], "test_findinsfp": [223, 225], "test_findbycoord": [223, 225], "test_findwithminmax": [223, 225], "runshuffl": [223, 225], "test_repeatshuffl": [223, 225], "test_readmov": [223, 225], "test_processmovelist": [223, 225], "test_getfactorlist": [223, 225], "test_linpowbypin": [223, 225], "test_linpowbypinneutron": [223, 225], "test_linpowbypingamma": [223, 225], "test_transferstationaryblock": [223, 225], "test_transferdifferentnumberstationaryblock": [223, 225], "test_transferunalignedlocationstationaryblock": [223, 225], "test_transferincompatibleheightstationaryblock": [223, 225], "test_dischargeswap": [223, 225], "test_dischargeswapincompatiblestationaryblock": [223, 225], "test_getassembliesinr": [223, 225], "test_settingsarediscov": [223, 225], "test_buildconvergentringschedul": [223, 226], "test_buildringschedul": [223, 226], "latticephysicsinterfac": [225, 237, 240, 244, 254, 258, 503], "mockchooseswap": 225, "repeatshuffl": 225, "_transferstationaryblock": 225, "unalign": [225, 329], "unequ": 225, "hist": 225, "phenomena": [227, 507], "lwr": [227, 464, 468, 479, 480, 483, 484, 494, 495, 496, 503], "triso": [227, 291], "degrad": 227, "fcci": [227, 501], "eros": 227, "fcmi": 227, "stress": [227, 253, 480], "gase": 227, "feedback": [227, 330, 481, 484, 499, 506], "absorb": [227, 329, 494, 499, 501], "influenc": [227, 341], "bond": [227, 236, 283, 307, 324, 332, 356, 488, 494, 499, 503], "squeez": 227, "impact": [227, 244, 284, 310], "testfuelperformanceopt": [227, 232, 233], "test_fuelperformanceplugin": [227, 232], "testfuelperformanceplugin": [227, 232, 234], "test_fuelperformanceutil": [227, 232], "testfuelperformanceutil": [227, 232, 235], "subpackag": [228, 305, 380, 442, 446, 477, 490], "prep": [228, 251], "hope": [228, 261, 333, 481, 491], "parameterdefinitioncollect": [229, 261, 276, 282, 283, 284, 287, 304, 305, 306, 307, 309, 310, 329, 330, 343, 345, 346, 347, 349, 356, 360, 391], "test_fuelperformanceopt": [232, 233], "test_applyfueldisplac": [232, 235], "test_gasconductivitycorrection_morph0": [232, 235], "test_gasconductivitycorrection_morph1": [232, 235], "test_gasconductivitycorrection_morph2": [232, 235], "test_gasconductivitycorrection_morph3": [232, 235], "test_gasconductivitycorrection_morph4": [232, 235], "displacementincm": 236, "radiu": [236, 287, 304, 309, 316, 330, 342, 354, 362, 469], "conserv": [236, 251, 284, 287, 307, 311, 314, 316, 317, 323, 327, 329, 354, 355, 461, 484, 486, 490, 501, 503], "buffer": [236, 291], "prime": [236, 307, 329], "tempinc": [236, 465], "poros": [236, 491], "morphologi": 236, "pore": [236, 499], "irregular": [236, 338, 503], "conservat": 236, "bauer": 236, "spheric": [236, 309, 488], "660": 236, "maxwel": 236, "eucken": 236, "source1": 236, "pile": 236, "holland": 236, "407": 236, "source2": 236, "ondracek": 236, "schulz": 236, "1973": 236, "258": 236, "encompass": [237, 306], "temporarili": [237, 310, 415, 505], "untangl": 237, "dbload": [237, 282, 330, 396, 490], "intenum": 237, "frequenc": [237, 255, 258, 265, 481, 503], "c0n0": 237, "n0": 237, "fissionproductmodelset": [237, 243], "getfissionproductmodelsettingvalid": [237, 243, 245], "lumpedfissionproductcollect": [237, 243, 246], "fissionproductdefinitionfil": [237, 243, 246], "lumpedfissionproductfactori": [237, 243, 246], "isga": [237, 243, 246], "globalfluxinterfaceusingexecut": [237, 250, 251, 253], "globalfluxopt": [237, 250, 251, 253, 329], "globalfluxexecut": [237, 250, 251, 253], "globalfluxresultmapp": [237, 250, 251], "computedpar": [237, 250, 251], "calcreactionr": [237, 250, 251, 329], "setblockneutronveloc": [237, 254, 255], "latticephysicswrit": [237, 254, 259], "test_crosssectionmanag": [237, 264], "testblockcollect": [237, 264, 265], "testblockcollectionmedian": [237, 264, 265], "testblockcollectionaverag": [237, 264, 265], "testcomponentaverag": [237, 264, 265], "testblockcollectioncomponentaverag": [237, 264, 265], "testblockcollectioncomponentaverage1dcylind": [237, 264, 265], "testblockcollectionfluxweightedaverag": [237, 264, 265], "testcrosssectiongroupmanag": [237, 264, 265], "testxsnumberconvert": [237, 264, 265], "makeblock": [237, 264, 265], "test_crosssectionset": [237, 264], "testcrosssectionset": [237, 264, 266], "testxsset": [237, 264, 266], "test_crosssectiont": [237, 264], "testcrosssectiont": [237, 264, 267], "test_energygroup": [237, 264], "testenergygroup": [237, 264, 268], "test_macroxsgenerationinterfac": [237, 264], "testmacroxsgenerationinterfac": [237, 264, 269], "test_neutronicsplugin": [237, 264], "testneutronicsplugin": [237, 264, 270], "neutronicsreactortest": [237, 264, 270], "createrepresentativeblock": [237, 239], "calcavgnuclidetemperatur": [237, 239], "getweight": [237, 239], "getcandidateblock": [237, 239], "clearrepresentativeblock": [237, 239], "xstypeispregener": [237, 239], "fluxsolutionispregener": [237, 239], "createrepresentativeblocksusingexistingblock": [237, 239], "getnextavailablexstyp": [237, 239], "makecrosssectiongroup": [237, 239], "disablebugroupupd": [237, 239], "enablebugroupupd": [237, 239], "getnuctemperatur": [237, 239], "updatenuclidetemperatur": [237, 239], "zero_dimension": [237, 240], "one_dimensional_slab": [237, 240], "one_dimensional_cylind": [237, 240], "two_dimensional_hex": [237, 240], "getstr": [237, 240], "setdefault": [237, 240, 266], "bugroup": [237, 239, 240, 287, 415, 451, 494, 495, 499, 503], "xsispregener": [237, 240], "fluxispregener": [237, 240], "buildmacro": [237, 260], "circular": [238, 287, 304, 306, 330, 483, 484, 503], "sent": [239, 282, 449, 503], "csm": 239, "_setbugroupbound": 239, "_addxsgroupsfromblock": 239, "representativeblocklist": 239, "representativeblock": [239, 255, 256, 484], "blockthatrepresentsba": 239, "xsgm": [239, 265], "xstypelabel": 239, "xtview": [239, 317, 480, 483], "xstypenumb": 239, "allnuclidesinproblem": [239, 244, 352, 356], "validblocktyp": [239, 240], "averagebycompon": [239, 240, 265], "best": [239, 251, 311, 330, 409, 445, 448, 449, 450, 451, 453, 481, 491, 499, 503], "n_i": [239, 260, 307, 310, 329], "v_i": 239, "t_i": 239, "reflector": [239, 283, 284, 317, 332, 446, 475, 488, 493, 495], "leakag": [239, 501], "median": [239, 499, 501, 503], "accur": [239, 244, 255, 284, 310, 415, 440, 460, 483], "allnucnam": 239, "denomin": 239, "trace": [239, 307, 356, 450, 495, 503], "cylindr": [239, 240, 316, 460, 484], "opinion": [239, 316], "geometr": [239, 287, 288, 307, 338, 480, 481, 483, 488, 494, 503, 504], "assumpt": [239, 255, 284, 287, 316, 321, 330, 484, 503, 507], "slab": [239, 287], "forese": 239, "xsgroup": [239, 468, 475, 476, 488, 505], "originalrepresentativeblock": 239, "remain": [239, 284, 287, 310, 317, 333, 341, 401, 443, 468, 481, 503], "unperturb": [239, 501], "blockcollectionbyxsgroup": 239, "modifiedreprblock": 239, "origxsidsfromnew": 239, "howmani": [239, 265], "excludedxstyp": 239, "unrepres": [239, 254, 256], "avgnuctemperatur": 239, "arug": 239, "carri": [240, 372, 396, 439, 481], "0d": 240, "blockrepresent": [240, 266], "past": [240, 317, 343, 364, 378, 439, 446, 448, 452, 481, 490, 503], "block_collect": 240, "xsfileloc": [240, 266], "fluxfileloc": 240, "driverid": 240, "criticalbuckl": 240, "nuclidereactiondriv": 240, "externaldriv": 240, "usehomogenizedblockcomposit": 240, "numinternalr": [240, 316], "numexternalr": [240, 316, 460], "mergeintoclad": [240, 316], "meshsubdivisionspercm": 240, "xsexecuteexclus": 240, "xsprioriti": 240, "xsmaxatomnumb": 240, "mindriverdens": 240, "subcrit": 240, "buckl": [240, 503], "spatial": [240, 284, 287, 292, 310, 316, 331, 334, 338, 341, 350, 353, 413, 446, 481, 483, 484, 488, 494, 498, 499, 501, 503], "gap": [240, 283, 287, 310, 324, 332, 354, 355, 460, 475, 488, 493, 494, 495, 499, 503], "subregion": 240, "prioriti": [240, 319, 320, 481], "dilut": [240, 503], "templat": 240, "char": [240, 409], "conf_xsid": 240, "mutual": [240, 292, 333, 364, 481], "tune": [240, 409], "xssettingsdict": 240, "coerc": [240, 372, 378], "egrpstruc": 242, "descend": 242, "propag": [242, 373], "neutronenergyboundsinev": 242, "test_fissionproductmodel": [243, 247], "testfissionproductmodellumpedfissionproduct": [243, 247, 248], "testfissionproductmodelexplicitmc2librari": [243, 247, 248], "testfissionproductmodelexplicitmc2libraryslow": [243, 247, 248], "test_lumpedfissionproduct": [243, 247], "getdummylfpfil": [243, 247, 249], "testfissionproductdefinitionfil": [243, 247, 249], "testlumpedfissionproduct": [243, 247, 249], "testlumpedfissionproductcollect": [243, 247, 249], "testlumpedfissionproductsfromreferencefil": [243, 247, 249], "testlumpedfissionproductsexplicit": [243, 247, 249], "testmo99lfp": [243, 247, 249], "setallcomponentfissionproduct": [243, 244], "setallblocklfp": [243, 244], "getgloballumpedfissionproduct": [243, 244], "setgloballumpedfissionproduct": [243, 244], "getallfissionproductnam": [243, 244, 246], "removefissiongasesfromblock": [243, 244], "getgaseousyieldfract": [243, 246], "gettotalyield": [243, 246], "getmassfracdenom": [243, 246], "getlumpedfissionproductnam": [243, 246], "getallfissionproductnuclidebas": [243, 246], "createlfpsfromfil": [243, 246], "createsinglelfpfromfil": [243, 246], "inventori": [244, 401], "substanti": [244, 287], "lfp35": [244, 246, 300, 488], "lfp39": [244, 246, 300, 488], "lfp40": [244, 300, 488], "lfp41": [244, 300, 488], "fpmodel": [244, 503], "lfp": [244, 246, 287, 293, 307, 310], "casmo": 244, "referencefissionproduct": [244, 249], "dat": [244, 249, 503], "nuclideflag": [244, 283, 288, 293, 475, 503], "quick": [244, 251, 355, 445, 454, 479, 482, 490, 496, 503, 509], "aim": [244, 398, 481], "fpmodellibrari": [244, 503], "autoupdatenuclideflag": [244, 283, 288, 293], "vision": 244, "origen": [244, 503], "caveat": [244, 404, 452, 503], "box": [244, 282, 469], "autofil": 244, "getallnuclidebasesbylibrari": [244, 283, 288, 293], "setlumpedfissionproduct": [244, 283, 304, 307, 310], "isotopicdeplet": [244, 291, 486], "depletioninterfac": 244, "buildfissionproduct": 244, "getlumpedfissionproductcollect": [244, 246, 283, 287, 304, 307, 310], "fp": [246, 248, 249], "yld": 246, "fpd": 246, "eu151": 246, "9773e": 246, "objectwithparentdens": 246, "densfunc": 246, "fpdensiti": 246, "oldmassfrac": 246, "ge73": 246, "9000e": 246, "ge74": 246, "4000e": 246, "ge76": 246, "6000e": 246, "as75": 246, "lfpcompositionfilepath": [246, 503], "test_loadgloballfpsfromfil": [247, 248], "test_getallfissionproductnam": [247, 248, 249], "test_fpappl": [247, 248], "test_nuclideflag": [247, 248, 295, 298], "test_nuclidesinmodelfuel": [247, 248], "test_nuclidesinmodelalldepletableblock": [247, 248], "test_createlfp": [247, 249], "test_createreferencelfp": [247, 249], "test_getyield": [247, 249], "test_gaseousyieldfract": [247, 249], "test_isga": [247, 249], "test_getallfissionproductnuclidebas": [247, 249], "test_getnumberdens": [247, 249, 352, 354, 355, 356], "test_getmassfrac": [247, 249], "test_fissionproductyield": [247, 249], "test_explicitfissionproduct": [247, 249], "faster": [248, 287, 288, 310, 330, 343, 361], "slower": [248, 493, 503], "lumpedfissionproduc": 249, "explicitfissionproduct": [249, 484, 503], "mo99": [249, 503], "test_globalfluxinterfac": [250, 252], "mockcoreparam": [250, 252, 253], "mockglobalfluxinterfac": [250, 252, 253], "mockglobalfluxwithexecut": [250, 252, 253], "mockglobalfluxwithexecutersnonuniform": [250, 252, 253], "mockglobalfluxexecut": [250, 252, 253], "testglobalfluxopt": [250, 252, 253], "testglobalfluxinterfac": [250, 252, 253], "testglobalfluxinterfacewithexecut": [250, 252, 253], "testglobalfluxinterfacewithexecutersnonuniform": [250, 252, 253], "testglobalfluxresultmapp": [250, 252, 253], "testglobalfluxutil": [250, 252, 253], "applydummyflux": [250, 252, 253], "checkenergybal": [250, 251], "getiofilenam": [250, 251], "calculatekeff": [250, 251], "getoptionscl": [250, 251], "getexecutercl": [250, 251, 252, 253], "getexecuteropt": [250, 251, 252, 253], "getexecut": [250, 251], "getlabel": [250, 251, 334, 338, 339], "edgeassembliesareneed": [250, 251], "getkeff": [250, 251], "clearflux": [250, 251], "getdpax": [250, 251], "getburnuppeakingfactor": [250, 251], "updatedpar": [250, 251], "updatemaxdpaparam": [250, 251], "versu": [251, 486], "tightli": [251, 501], "coupledit": 251, "additionallabel": 251, "stdname": 251, "eigenvalu": [251, 329, 501, 503], "interoper": 251, "myriad": 251, "blank": [251, 373, 398, 453, 494, 499], "calc": [251, 253, 329, 355, 410], "calcreactionratesonmeshconvers": 251, "recalcul": [251, 287, 329], "remap": [251, 329], "eigenvalueproblem": 251, "includefixedsourc": 251, "eig": 251, "fredholm": 251, "satisfi": [251, 282, 310, 333, 334, 480], "uniform": [251, 253, 284, 287, 288, 292, 306, 314, 317, 318, 323, 328, 329, 330, 341, 346, 465, 483, 484, 499, 501, 503], "aclpdoselimit": [251, 503], "detailedaxialexpans": [251, 314, 323, 328, 329, 330, 343, 346, 393, 484, 503], "dpaperflu": [251, 499, 503], "dirti": [251, 503], "dpapeak": [251, 503], "fastfluencepeak": [251, 499, 503], "energydepocalcmethodstep": 251, "epseigenvalu": 251, "epsfissionsourceavg": 251, "epsfissionsourcepoint": 251, "rz": [251, 283, 284, 317, 326, 333, 362, 458, 462, 479, 481, 483, 496], "rzt": [251, 283, 317, 330, 333, 334, 341, 362], "hasnonuniformassem": 251, "isrestart": 251, "guess": [251, 409, 439, 503], "kernelnam": 251, "loadpadelev": [251, 503], "elev": [251, 284, 413, 495, 498, 503], "aclp": [251, 283, 323, 332, 501, 503], "plate": [251, 284, 330, 334, 480, 490, 494, 501, 503], "loadpadlength": [251, 503], "maxout": 251, "savephysicsfileslist": 251, "timestamp": [251, 503], "xskernel": [251, 503], "pn": 251, "edg": [251, 287, 310, 317, 325, 329, 330, 343, 345, 346, 361, 394, 398, 434, 481, 486, 499, 503], "unifi": [251, 323, 341], "pipe": [251, 365, 490], "delta": [251, 361, 490, 491, 498, 499, 507], "burnuppeakingfactor": [251, 503], "avg": [251, 330, 409, 490, 501, 503], "updatefluenceanddpa": 251, "mgflux": [251, 261, 287, 310, 329, 467, 488, 490, 499], "dpax": 251, "incur": 251, "exposur": 251, "convolut": 251, "dpapersecond": 251, "nusigf": 251, "test_readfromset": [252, 253], "test_readfromreactor": [252, 253], "test_savephysicsfil": [252, 253], "test_computedpar": [252, 253], "test_interact": [252, 253], "test_getiofilenam": [252, 253], "test_gethistoryparam": [252, 253], "test_checkenergybal": [252, 253], "test_executerinteract": [252, 253], "test_calculatekeff": [252, 253], "test_getexecutercl": [252, 253], "test_settightcouplingdefault": [252, 253], "test_gettightcouplingvalu": [252, 253], "test_executerinteractionnonuniformassem": [252, 253], "test_mapp": [252, 253], "test_getdpax": [252, 253], "test_getburnuppeakingfactor": [252, 253], "test_getburnuppeakingfactorzero": [252, 253], "test_calcreactionr": [252, 253], "fake": [253, 323, 393, 488], "gf": 253, "pcm": [253, 501, 503], "reli": [253, 304, 338, 341, 467, 495], "swing": [253, 501], "observ": 253, "mockgeometrytransform": 253, "mockexecut": 253, "mockconverterfactori": 253, "broad": [253, 255, 484, 490, 503, 505], "test_latticeinterfac": [254, 257], "latticeinterfacetest": [254, 257, 258], "latticeinterfacetesterlibfals": [254, 257, 258], "testlatticephysicsinterfacebas": [254, 257, 258], "testlatticephysicsinterfac": [254, 257, 258], "testlatticephysicslibrarycr": [254, 257, 258], "test_latticewrit": [254, 257], "fakelatticephysicswrit": [254, 257, 259], "testlatticephysicswrit": [254, 257, 259], "updatexslibrari": [254, 255], "readexistingxslibrari": [254, 255, 257, 258], "makecyclexsfilesasbasefil": [254, 255], "clearx": [254, 255, 503], "computecrosssect": [254, 255], "generatelatticephysicsinput": [254, 255], "getwrit": [254, 255], "getread": [254, 255], "getrepresentativeblock": [254, 255], "unused_categori": [254, 256], "fuel_categori": [254, 256], "structure_categori": [254, 256], "coolant_categori": [254, 256], "fission_product_categori": [254, 256], "undeplet": [254, 256], "neutronveloc": 255, "mgneutronveloc": [255, 499], "genx": [255, 494, 495, 503], "runlatticephysicsbeforeshuffl": 255, "weather": 255, "regener": [255, 330, 495, 503], "_is_": 255, "reson": 255, "lifetim": [255, 501, 506], "basi": [255, 317, 340, 481, 494], "forceseri": 255, "book": [255, 453], "xswriter": 255, "bc": 255, "returnedfromwrit": 255, "agent": 255, "cyclic": [255, 403, 501], "seek": [256, 397, 439], "generateexclusivegammax": 256, "test_includegammax": [257, 258], "test_latticephysicsinterfac": [257, 258], "test_interacteverynodewhencoupl": [257, 258], "test_interacteverynodewhencoupledbutnot": [257, 258], "test_interacteverynodefirstcoupl": [257, 258], "test_interacteverynodeal": [257, 258], "test_interactfirstcouplediter": [257, 258, 264, 265], "test_interactal": [257, 258], "test_getsuffix": [257, 258], "test_libcreation_nogenx": [257, 258], "test_libcreation_genx": [257, 258], "test_libcreation_nogenxs_2": [257, 258], "test_libcreation_genxs_2": [257, 258], "test_libcreation_genxs_3": [257, 258], "test_setblockneutronveloc": [257, 259], "test_latticephysicswrit": [257, 259], "test_writetitl": [257, 259], "test_issourcedriven": [257, 259], "test_isgammaxsgenerationen": [257, 259], "test_getallnuclidesbytemperatureincnon": [257, 259], "test_getallnuclidesbytemperatureinc": [257, 259], "test_getallnuclidesbytemperatureincexplicitfissionproduct": [257, 259], "test_getavgnuclidetemperatureinc": [257, 259], "test_getfueltemperatur": [257, 259], "test_getdetailedfissionproduct": [257, 259], "test_getdetailedfissionproductspass": [257, 259], "test_getdetailedfpdens": [257, 259], "test_iscriticalbucklingsearchact": [257, 259], "test_getdriverblock": [257, 259], "_newlibraryshouldbecr": 258, "flip": 258, "testverif": 258, "gen": [258, 265], "sigma_i": 260, "interactxyz": 260, "macroxsgen": 260, "blistsom": 260, "gxg": 260, "fluxrecon": [260, 287, 503], "computepinmgfluxandpow": 260, "denot": [262, 451], "addtion": 262, "subsectionhead": 262, "areal": [262, 501, 505], "test_add": [264, 265, 352, 353, 354, 357, 361], "test_getblocksingroup": [264, 265], "test_is_pickl": [264, 265], "test_createrepresentativeblock": [264, 265], "test_performaveragebycompon": [264, 265], "test_checkblocksimilar": [264, 265], "test_createrepresentativeblockdissimilar": [264, 265], "test_getaveragecomponentnumberdens": [264, 265], "test_getaveragecomponenttemperatur": [264, 265], "test_getaveragecomponenttemperaturevariedweight": [264, 265], "test_getaveragecomponenttemperaturenomass": [264, 265], "test_componentaveragerepblock": [264, 265], "test_componentaverage1dcylind": [264, 265], "test_checkcomponentconsist": [264, 265], "test_invalidweight": [264, 265], "test_enablebugroupupd": [264, 265], "test_disablebugroupupd": [264, 265], "test_updateburnupgroup": [264, 265], "test_setbugroupbound": [264, 265], "test_addxsgroupsfromblock": [264, 265], "test_calcweightedburnup": [264, 265], "test_getnextavailablexstyp": [264, 265], "test_getrepresentativeblock": [264, 265], "test_createrepresentativeblocksusingexistingblock": [264, 265], "test_createrepresentativeblocksusingexistingblocksdisablevalidblocktyp": [264, 265], "test_interactallcoupl": [264, 265], "test_xsgmisrunbeforex": [264, 265], "test_copypregeneratedfil": [264, 265], "test_convers": [264, 265], "test_conversion_2digit": [264, 265], "test_crosssect": [264, 266], "test_pregeneratedcrosssect": [264, 266], "test_pregeneratedfluxinput": [264, 266], "test_priorit": [264, 266], "test_homogeneousxsdefaultsettingassign": [264, 266], "test_setdefaultsettingsbylowestbugrouphomogen": [264, 266], "test_setdefaultsettingsbylowestbugrouponedimension": [264, 266], "test_optionalkei": [264, 266], "test_badcrosssect": [264, 266], "test_yamlio": [264, 266, 352, 359], "test_caseset": [264, 266], "test_csblockrepresent": [264, 266], "test_csblockrepresentationfileloc": [264, 266], "test_xssettingssetdefault": [264, 266], "test_maket": [264, 267], "test_isotopicdepletioninterfac": [264, 267], "test_invalidgroupstructuretyp": [264, 268], "test_consistenciesbetweengroupstructureandgroupstructuretyp": [264, 268], "test_getfastfluxgroupcutoff": [264, 268], "test_macroxsgenerationinterfacebas": [264, 269], "test_customsettingobjectio": [264, 270], "test_customsettingroundtrip": [264, 270], "test_neutronicssettingsload": [264, 270], "test_kineticsparameterassign": [264, 270], "test_neutronicssettingsvalid": [264, 270], "dissimilar": [265, 317], "zppr": [265, 287, 481], "cylind": 265, "disableblocktypeexclusioninxsgener": 265, "whip": [266, 340, 483], "forth": 270, "test_runningdirectorypath": [272, 273], "test_collectinputsandoutput": [272, 273], "test_updaterundir": [272, 273], "test_runexternalexecut": [272, 273], "hydraul": [274, 276, 277, 278, 280, 287, 330, 346, 481, 484, 491, 494, 503], "test_thermalhydraulicsplugin": [274, 279], "testthermalhydraulicsplugin": [274, 279, 280], "concern": [277, 503], "test_thermalhydraulicssettingsload": [279, 280], "test_thermalhydraulicssettingsset": [279, 280], "stock": 281, "pluggi": [281, 282, 448], "featur": [281, 282, 288, 329, 343, 373, 375, 405, 415, 421, 422, 443, 446, 448, 453, 468, 477, 481, 483, 490, 492, 494, 495, 503, 505], "mutat": [281, 378], "cheapli": 281, "altitud": 282, "subtl": 282, "exercis": 282, "forget": [282, 488, 505], "ergonom": [282, 333], "lest": 282, "endeavor": 282, "redesign": 282, "parametercollect": [282, 283, 310, 343, 346, 347, 360, 391, 486], "metaclass": [282, 307, 310, 343, 347], "stateless": [282, 448], "pluginmagag": 282, "notic": [282, 336, 448, 449, 452, 453, 494], "staticmethod": [282, 329, 341, 448, 490], "preclud": 282, "componenttyp": [282, 283, 304, 307], "registr": [282, 307, 490], "surpris": [282, 310, 332, 503], "ersatz": 282, "inter": [282, 310, 409, 434], "favor": [282, 351], "predat": 282, "pluginblockparam": 282, "createbuild": [282, 343, 346], "defparam": [282, 343, 346], "plugblkp1": 282, "pluginassemparam": 282, "plugasmp1": 282, "constraint": [282, 413, 446, 499], "alter": [282, 405, 503], "novel": 282, "blocktyp": [282, 284, 330], "largest": [282, 287, 310, 316, 398], "suspect": 282, "ceas": 282, "beyond": [282, 304, 448, 481, 488, 494], "elsewher": [282, 310, 452], "elimin": [282, 343, 481, 483], "altogeth": [282, 503], "resolutionmethod": 282, "unbound": 282, "enhanc": [282, 447, 481], "t1671": 282, "misbehav": 282, "declar": [282, 310, 314, 503], "member": [282, 310, 397, 409, 453], "widget": [282, 373], "tab": [282, 416, 446, 488], "widgetdata": 282, "submitt": 282, "abstracttab": 282, "addsectionsfromplugin": 282, "mcnpaddtal": 282, "usesrctp": 282, "frustrat": 282, "rule": [282, 333, 346, 347, 365, 374, 375, 448, 452, 453, 503], "intact": 282, "collid": [282, 343, 383], "superoldparam": 282, "oldparam": 282, "currentparam": 282, "newer": [282, 349, 412, 482, 509], "arguabl": 282, "suboptim": 282, "axialexpansionchang": [282, 283, 307, 311, 323, 393, 486], "negat": 282, "encourag": [282, 445], "tryfirst": 282, "hookimpl": [282, 448, 490], "invoc": [282, 444], "changer": [282, 287, 317, 325, 393, 403, 422, 483, 484, 503], "myplugin": [282, 503], "myproject": 282, "bespokeaxialexpans": 282, "mod": [282, 443, 495], "adapt": [282, 294, 448], "stapl": 282, "programm": [282, 503], "improperli": [282, 343], "collis": [282, 424], "hous": [283, 488], "constructassem": [283, 288, 323], "adddefaultsfp": [283, 288], "assemblyblueprint": [283, 288, 475, 486], "bycomponentmodif": [283, 288, 289], "assemblykeyedlist": [283, 288, 289, 475], "blockblueprint": [283, 288, 291, 475], "blockkeyedlist": [283, 288, 290, 475], "componentblueprint": [283, 288, 290, 298, 299, 475], "componentdimens": [283, 288, 291], "expandelement": [283, 288, 291], "insertdepletablenuclidekei": [283, 288, 291, 298], "componentkeyedlist": [283, 288, 291], "groupedcompon": [283, 288, 291], "componentgroup": [283, 288, 291], "gridblueprint": [283, 288, 294, 351, 475], "triplet": [283, 288, 292, 475], "savetostream": [283, 288, 292], "getdefaultnuclideflag": [283, 288, 293], "eleexpandinfobasedoncodeendf": [283, 288, 293], "gendefaultnucflag": [283, 288, 293, 475], "reactorblueprint": [283, 288, 351, 475], "systemblueprint": [283, 288, 294, 475], "summarizematerialdata": [283, 288, 294, 486], "getboundingcircleouterdiamet": [283, 304, 305, 306, 307, 309, 310, 352, 356], "getdimens": [283, 287, 304, 307, 504], "dimension_nam": [283, 304, 305, 306, 307, 309], "init_signatur": [283, 304, 305, 306, 307, 309], "pdef": [283, 284, 287, 304, 305, 306, 307, 309, 310, 330, 343, 345, 347, 349, 352, 356, 360, 380, 391], "getcomponentarea": [283, 304, 305, 306, 307, 309], "fromcompon": [283, 304], "is3d": [283, 304, 305, 306, 307, 309], "getcomponentvolum": [283, 304, 307, 309], "setvolum": [283, 304, 307], "computevolum": [283, 304, 307, 355], "getmaxvolum": [283, 304, 486], "basicshap": [283, 287, 304], "circl": [283, 287, 300, 304, 305, 306, 307, 308, 309, 310, 316, 355, 356, 413, 465, 467, 475, 480, 488, 494, 495, 503], "rectangl": [283, 287, 304, 305, 306, 307, 308, 336, 341, 355, 477, 483, 503], "solidrectangl": [283, 304, 305, 355, 503], "squar": [283, 304, 305, 306, 330, 334, 354, 355, 466, 470, 477, 483, 495, 503], "complexshap": [283, 304, 484], "holedhexagon": [283, 304, 306, 308, 355, 503], "hexholedcircl": [283, 304, 306, 308, 355, 503], "holedrectangl": [283, 304, 306, 308, 355, 503], "holedsquar": [283, 304, 306, 355, 503], "helix": [283, 304, 306, 308, 310, 355, 475, 480, 484, 488, 494, 503], "componenttypeisvalid": [283, 304, 307], "shapedcompon": [283, 304, 305, 306, 307, 309, 503], "componentparamet": [283, 304], "getcomponentparameterdefinit": [283, 304, 308], "getcircleparameterdefinit": [283, 304, 308], "gethexagonparameterdefinit": [283, 304, 308], "getholedhexagonparameterdefinit": [283, 304, 308], "gethexholedcircleparameterdefinit": [283, 304, 308], "getholedrectangleparameterdefinit": [283, 304, 308], "gethelixparameterdefinit": [283, 304, 308], "getrectangleparameterdefinit": [283, 304, 308], "getcubeparameterdefinit": [283, 304, 308], "gettriangleparameterdefinit": [283, 304, 308], "getunshapedparameterdefinit": [283, 304, 308], "getradialsegmentparameterdefinit": [283, 304, 308], "volumetricshap": [283, 304], "sphere": [283, 298, 304, 309, 355, 362, 503], "cube": [283, 304, 308, 309, 355, 503], "radialseg": [283, 304, 308, 309, 355, 503], "differentialradialseg": [283, 287, 304, 309, 355, 503], "parametersweep": [283, 311], "blockconvert": [283, 311, 460], "componentmerg": [283, 311, 316], "multiplecomponentmerg": [283, 311, 316], "blockavgtocylconvert": [283, 311, 316], "hexcomponentstocylconvert": [283, 311, 316, 460], "getouterdiamfromidandarea": [283, 311, 316], "radiifromhexpitch": [283, 311, 316], "radiifromhexsid": [283, 311, 316], "radiifromringofrod": [283, 311, 316], "geometryconvert": [283, 287, 311, 320, 329, 330, 461], "geometrychang": [283, 311, 317], "fuelassemnummodifi": [283, 311, 317], "hextorzthetaconvert": [283, 311, 317], "hextorzconvert": [283, 311, 317, 325, 461], "thirdcorehextofullcorechang": [283, 311, 317], "edgeassemblychang": [283, 287, 311, 317, 488], "meshconvert": [283, 311, 317], "rzthetareactormeshconvert": [283, 311, 318], "rzthetareactormeshconverterbyringcompositionaxialbin": [283, 311, 318], "rzthetareactormeshconverterbyringcompositionaxialcoordin": [283, 311, 318], "rzthetareactormeshconverterbyringcompositionaxialflag": [283, 311, 318], "checklastvalueinlist": [283, 311, 318], "checklistbound": [283, 311, 318], "generatebin": [283, 311, 318], "pintypeblockconvert": [283, 311], "adjustsmeardens": [283, 311, 321], "adjustcladthicknessbyod": [283, 311, 321], "adjustcladthicknessbyid": [283, 311, 321], "uniformmesh": [283, 287, 311, 314, 484], "converterfactori": [283, 311, 329], "uniformmeshgener": [283, 311, 329], "uniformmeshgeometryconvert": [283, 287, 294, 311, 329, 484], "neutronicsuniformmeshconvert": [283, 311, 329], "gammauniformmeshconvert": [283, 311, 329], "parammapp": [283, 311, 329], "setnumberdensitiesfromoverlap": [283, 311, 329], "axialgrid": [283, 334, 335, 467], "cartesiangrid": [283, 316, 334, 336, 470, 483], "hexgrid": [283, 316, 334, 339, 353, 467, 469, 486], "locationbas": [283, 310, 331, 334, 335, 338, 340, 350], "multiindexloc": [283, 287, 292, 334, 340], "coordinateloc": [283, 334, 340], "addingisvalid": [283, 334, 340], "structuredgrid": [283, 334, 335, 336, 339, 342, 485, 486], "gridparamet": [283, 334, 341], "thetarz": [283, 284, 287, 334, 341, 354], "thetarzgrid": [283, 318, 334, 342, 471], "parameterdefinitionerror": [283, 343, 344], "parametererror": [283, 343, 344], "unknownparametererror": [283, 343, 344], "global_serial_num": [283, 343, 345], "collectpluginparamet": [283, 343, 345], "applyallparamet": [283, 343, 345], "parameterdefinit": [283, 284, 287, 304, 305, 306, 307, 309, 310, 330, 343, 345, 349, 356, 360, 391], "paramloc": [283, 287, 343, 345, 346], "nodefault": [283, 343, 346], "isnumpyarrai": [283, 343, 346], "parameterbuild": [283, 343, 346, 360, 391], "resolvecollect": [283, 343], "resolveparametersmeta": [283, 310, 343, 345, 347], "test_assembli": [283, 352], "buildtestassembli": [283, 352, 353], "materialinassembly_testcas": [283, 352, 353], "maketestassembli": [283, 352, 353], "assembly_testcas": [283, 352, 353], "assemblyinreactor_testcas": [283, 352, 353], "annularfueltestcas": [283, 352, 353], "test_block": [283, 310, 352, 363, 465], "buildsimplefuelblock": [283, 352, 354, 465], "loadtestblock": [283, 352, 354], "applydummydata": [283, 352, 354], "getcomponentdata": [283, 352, 354], "testdetailedndensupd": [283, 352, 354], "block_testcas": [283, 310, 352, 354], "blockinputheightstest": [283, 352, 354], "blockenergydepositionconst": [283, 352, 354], "testnegativevolum": [283, 352, 354], "hexblock_testcas": [283, 352, 354], "thrzblock_testcas": [283, 352, 354], "cartesianblock_testcas": [283, 352, 354], "massconservationtest": [283, 311, 322, 327, 352, 354], "emptyblockrotatetest": [283, 352, 354], "test_compon": [283, 295, 298, 352], "testcomponentfactori": [283, 352, 355], "testgeneralcompon": [283, 352, 355], "testcompon": [283, 352, 355], "testnullcompon": [283, 352, 355], "testunshapedcompon": [283, 352, 355], "testshapedcompon": [283, 352, 355], "testderivedshap": [283, 352, 355], "testderivedshapegetarea": [283, 352, 355], "testcircl": [283, 352, 355], "testcomponentexpans": [283, 352, 355], "testtriangl": [283, 352, 355, 397, 417, 436], "testrectangl": [283, 352, 355], "testsolidrectangl": [283, 352, 355], "testsquar": [283, 352, 355], "testcub": [283, 352, 355], "testhexagon": [283, 352, 355, 397, 417, 425], "testholedhexagon": [283, 352, 355], "testhexholedcircl": [283, 352, 355], "testholedrectangl": [283, 352, 355], "testholedsquar": [283, 352, 355], "testhelix": [283, 352, 355], "testspher": [283, 352, 355], "testradialseg": [283, 352, 355], "testdifferentialradialseg": [283, 352, 355], "testmaterialadjust": [283, 352, 355], "test_composit": [283, 352], "mockbp": [283, 352, 356], "getdummyparamdef": [283, 352, 356], "dummycomposit": [283, 352, 356], "dummyleaf": [283, 352, 356], "testcompositepattern": [283, 352, 356], "testcompositetre": [283, 352, 356], "testflagseri": [283, 352, 356], "testmiscmethod": [283, 352, 356], "testgetreactionratedict": [283, 352, 356], "test_excorestructur": [283, 295, 303, 352], "testexcorestructur": [283, 352, 357], "testspentfuelpool": [283, 352, 357], "testexcorecollect": [283, 352, 357], "test_flag": [283, 352, 397, 417], "testflag": [283, 352, 358, 397, 417, 424], "test_geometri": [283, 352], "testgeomtyp": [283, 352, 359], "testsymmetrytyp": [283, 352, 359], "testsystemlayoutinput": [283, 352, 359], "testsystemlayoutinputtrz": [283, 352, 359], "test_paramet": [283, 352], "mockcomposit": [283, 352, 360], "mockcompositegrandpar": [283, 352, 360], "mockcompositepar": [283, 352, 360], "mockcompositechild": [283, 352, 360], "parametertest": [283, 352, 360], "paramcollectionwher": [283, 352, 360], "testmakeparametersreadonli": [283, 352, 360], "test_reactor": [283, 352, 459, 460, 461, 468, 476], "buildoperatorofemptyhexblock": [283, 352, 361], "buildoperatorofemptycartesianblock": [283, 352, 361], "reducetestreactor": [283, 352, 361], "reactortest": [283, 352, 361], "hexreactortest": [283, 352, 361], "cartesianreactorneighbortest": [283, 352, 361], "test_rz_reactor": [283, 352], "testrztreactor": [283, 352, 362], "testrztreactormodern": [283, 352, 362], "test_zon": [283, 352], "testzon": [283, 352, 363], "load_queu": [283, 284], "spent_fuel_pool": [283, 284], "not_in_cor": [283, 284], "renameblocksaccordingtoassemblynum": [283, 284], "makenamefromassemnum": [283, 284], "renumb": [283, 284, 330, 349, 350], "makeuniqu": [283, 284], "moveto": [283, 284, 310], "getnum": [283, 284], "getloc": [283, 284, 287, 288, 292], "getarea": [283, 284, 287, 304, 307, 310, 355, 486, 500], "getpinplenumvolumeincubicmet": [283, 284], "getaverageplenumtemperatur": [283, 284], "adjustresolut": [283, 284], "getaxialmesh": [283, 284, 330, 484], "calculatezcoord": [283, 284, 287], "gettotalheight": [283, 284], "getheight": [283, 284, 287, 488], "getreactiveheight": [283, 284], "getelevationboundariesbyblocktyp": [283, 284], "getelevationsmatchingparamvalu": [283, 284], "getag": [283, 284], "makeaxialsnaplist": [283, 284, 499], "setblockmesh": [283, 284, 486, 499], "setblockheight": [283, 284], "getblock": [283, 284, 287, 330, 449, 459, 460, 468, 476, 488, 490], "getblocksandz": [283, 284], "hascontinuouscoolantchannel": [283, 284], "getfirstblock": [283, 284, 330, 467, 488, 495, 504], "getfirstblockbytyp": [283, 284], "getblockatelev": [283, 284], "getbindexfromzindex": [283, 284], "getblocksbetweenelev": [283, 284], "getparamvaluesatz": [283, 284], "getparamofzfunct": [283, 284], "reestablishblockord": [283, 284], "countblockswithflag": [283, 284, 330], "getdim": [283, 284, 287], "getsymmetryfactor": [283, 284, 287, 310, 317, 361, 490], "isonwhichsymmetrylin": [283, 284, 486], "radialout": [283, 284, 287], "radialinn": [283, 284, 287], "thetaout": [283, 284, 287], "thetainn": [283, 284, 287], "uniqid": [283, 287], "pitch_dimens": [283, 287], "pitch_component_typ": [283, 287], "createhomogenizedcopi": [283, 287], "makenam": [283, 287], "getsmeardens": [283, 287], "autocreatespatialgrid": [283, 287], "getmgflux": [283, 287, 310], "setpinmgflux": [283, 287], "setheight": [283, 287], "getwettedperimet": [283, 287, 484], "getflowareaperpin": [283, 287], "gethydraulicdiamet": [283, 287], "adjustuenrich": [283, 287], "setbulimitinfo": [283, 287], "getmaxarea": [283, 287, 310], "adjustdens": [283, 287], "completeinitialload": [283, 287, 321], "setb10volparam": [283, 287], "replaceblockwithblock": [283, 287, 354], "plotflux": [283, 287], "removeal": [283, 287, 310], "getcomponentsthatarelinkedto": [283, 287], "getcomponentsinlinkedord": [283, 287], "getsortedcomponentsinsideofcompon": [283, 287], "getnumpin": [283, 287, 484, 486], "mergewithblock": [283, 287], "getcomponentareafrac": [283, 287], "verifyblockdim": [283, 287], "getpincenterflattoflat": [283, 287], "getwirewrapcladgap": [283, 287], "getplenumpin": [283, 287], "isplenumpin": [283, 287], "getpitch": [283, 287], "haspinpitch": [283, 287], "getpinpitch": [283, 287], "getlargestcompon": [283, 287], "setpitch": [283, 287], "getmfp": [283, 287], "setareafractionsreport": [283, 287], "updatecomponentdim": [283, 287, 309], "breakfuelcomponentsintoindividu": [283, 287], "getintegratedmgflux": [283, 287, 304, 307, 310], "setaxialexptargetcomp": [283, 287], "getpincoordin": [283, 287], "gettotalenergygenerationconst": [283, 287, 486], "getfissionenergygenerationconst": [283, 287, 486], "getcaptureenergygenerationconst": [283, 287, 486], "getneutronenergydepositionconst": [283, 287, 486], "getgammaenergydepositionconst": [283, 287, 486], "getboronmassenrich": [283, 287, 486], "getpumol": [283, 287, 486], "geturaniummassenrich": [283, 287, 486], "getinputheight": [283, 287, 486], "getductip": [283, 287], "getductop": [283, 287], "initializepinloc": [283, 287], "setpinpow": [283, 287], "getpintoductgap": [283, 287], "getrotationnum": [283, 287], "setrotationnum": [283, 287], "getflowarea": [283, 287], "axialinn": [283, 287], "axialout": [283, 287], "copyparamsfrom": [283, 310], "updateparamsfrom": [283, 310], "getcompon": [283, 310, 332, 465, 490, 495, 504], "itercompon": [283, 304, 307, 310, 352, 356], "dochildrenhaveflag": [283, 310], "containsatleastonechildwithflag": [283, 310], "containsonlychildrenwithflag": [283, 310], "copyparamstochildren": [283, 310], "getparametercollect": [283, 310], "getparamnam": [283, 310], "setnam": [283, 304, 307, 310], "hasflag": [283, 284, 310, 332], "gettyp": [283, 310, 488, 494], "settyp": [283, 310, 467], "getvolumefract": [283, 307, 310, 354, 465], "getmass": [283, 304, 307, 310, 356, 488], "getchildrenwithnuclid": [283, 310], "getancestor": [283, 310], "getancestoranddist": [283, 310], "getancestorwithflag": [283, 310], "gettotalnden": [283, 310], "updatenumberdens": [283, 304, 307, 310], "changendensbyfactor": [283, 310], "clearnumberdens": [283, 310], "getnumberofatom": [283, 310], "setchildrenlumpedfissionproduct": [283, 310], "getfissilemassenrich": [283, 310], "geturaniumnumenrich": [283, 310], "calctotalparam": [283, 310, 490], "calcavgparam": [283, 310], "getmaxparam": [283, 310, 356, 468, 481, 494], "getminparam": [283, 310, 356], "getchildparamvalu": [283, 310, 488], "isfuel": [283, 310, 488, 490], "containsheavymet": [283, 310], "getfissilemass": [283, 310, 488], "gethmmass": [283, 310, 461], "gethmmol": [283, 310], "gethmden": [283, 310], "getfuelmass": [283, 304, 307, 310, 356], "constituentreport": [283, 310], "removemass": [283, 310], "addmass": [283, 310], "setmass": [283, 310, 401], "getboundingindic": [283, 310], "getcomponentnam": [283, 310], "getcomponentsofshap": [283, 310], "getcomponentsofmateri": [283, 310], "hascompon": [283, 310], "getcomponentbynam": [283, 310], "getnumcompon": [283, 310], "setcomponentdimensionsreport": [283, 310], "expandallelementalstoisotop": [283, 310], "expandelementaltoisotop": [283, 310, 467], "getaveragetempinc": [283, 310], "resolvelinkeddim": [283, 304, 307, 310, 355], "setchildren": [283, 310], "getchildrenoftyp": [283, 310], "syncmpist": [283, 310, 345, 358, 449], "retainst": [283, 310, 341, 345, 354], "getlumpedfissionproductsifnecessari": [283, 310], "requireslumpedfissionproduct": [283, 310], "getreactionr": [283, 310, 467, 484, 486], "printcont": [283, 304, 307, 310, 488], "setoptionsfromc": [283, 330, 467], "powermultipli": [283, 330, 498], "isfullcor": [283, 330], "refassem": [283, 284, 330, 484], "sortassemsbyr": [283, 330, 484, 488], "summarizereactorstat": [283, 330], "setpowerfromdens": [283, 330], "setpowerifnecessari": [283, 330], "setblockmassparam": [283, 330], "getscalarevolut": [283, 330], "locateallassembli": [283, 330], "removeassembli": [283, 330], "removeassembliesinr": [283, 330], "normalizenam": [283, 330, 349, 350], "normalizeinternalbookeep": [283, 330], "genassembliesaddedthiscycl": [283, 330], "getnumhexr": [283, 330], "getnumassemblieswithallringsfilledout": [283, 330], "getnumenergygroup": [283, 330], "countfuelaxialblock": [283, 330], "getfirstfuelblockaxialnod": [283, 330], "getassembliesinr": [283, 330], "getmaxassembliesinhexr": [283, 330], "getassembliesinsquareorhexr": [283, 330], "getassembliesincircular": [283, 330], "buildcircularringdictionari": [283, 330], "getassemblybynam": [283, 330], "getnozzletyp": [283, 330], "getblockbynam": [283, 330], "getblocksbyindic": [283, 330], "genblocksbylocnam": [283, 330], "getfirstassembli": [283, 330], "regenassemblylist": [283, 284, 330], "getallxssuffix": [283, 330], "getnuclidecategori": [283, 330, 361], "summarizenuclidecategori": [283, 330], "getlocationcont": [283, 330], "makelocationlookup": [283, 330], "getfluxvector": [283, 330], "getassembliesoftyp": [283, 330], "getassemblywithassemnum": [283, 330], "getassemblywithstringloc": [283, 330], "getassemblypitch": [283, 330], "findneighbor": [283, 330], "setmovelist": [283, 330], "createfreshfe": [283, 330], "createassemblyoftyp": [283, 330, 494], "saveallflux": [283, 330], "getassembliesonsymmetrylin": [283, 330], "getcoreradiu": [283, 330], "findallmeshpoint": [283, 330, 361, 362], "findallaxialmeshpoint": [283, 284, 330], "updateaxialmesh": [283, 287, 314, 330], "findaxialmeshindexof": [283, 330], "addmorenod": [283, 330], "findallazimeshpoint": [283, 330], "findallradmeshpoint": [283, 330], "getmaxblockparam": [283, 330], "gettotalblockparam": [283, 330], "getmaxnumpin": [283, 330], "getminimumpercentfluxinfuel": [283, 330], "getavgtemp": [283, 330], "growtofullcor": [283, 325, 330, 351, 476, 484], "setpitchuniform": [283, 330], "calcblockmax": [283, 330], "getfuelbottomheight": [283, 330], "processload": [283, 314, 330, 484], "buildmanualzon": [283, 330], "tertiari": [283, 332], "annular": [283, 306, 307, 332, 354], "shield_block": [283, 332], "slug": [283, 332, 494], "starter": [283, 332, 490], "blanket": [283, 289, 332], "booster": [283, 330, 332], "grid_plat": [283, 323, 332, 503], "handling_socket": [283, 323, 332], "inlet_nozzl": [283, 323, 332], "liner": [283, 310, 316, 323, 324, 332, 336, 480, 481], "wire": [283, 284, 287, 306, 307, 323, 324, 330, 332, 354, 413, 475, 484, 488, 493, 494, 503], "intercool": [283, 310, 316, 332, 354, 465, 475, 488, 494, 503], "load_pad": [283, 332], "skid": [283, 332, 503], "interductcool": [283, 332], "dspacerinsid": [283, 332], "guide_tub": [283, 323, 332, 495], "fission_chamb": [283, 332, 495], "core_barrel": [283, 332], "batchmassaddit": [283, 332], "poison": [283, 284, 302, 332, 503], "moveabl": [283, 332, 498], "fromstringignoreerror": [283, 332], "fromstr": [283, 332, 333], "tostr": [283, 332, 358, 486], "fromani": [283, 333], "null": [283, 333, 354, 355, 365], "full_cor": [283, 333], "third_cor": [283, 333, 467], "quarter_cor": [283, 333], "eighth_cor": [283, 333], "sixteenth_cor": [283, 333], "symmetryfactor": [283, 287, 333], "no_symmetri": [283, 333], "hassymmetri": [283, 333], "valid_symmetri": [283, 333], "createvalidsymmetrystr": [283, 333], "checkvalidsymmetri": [283, 333], "incrementassemnum": [283, 349], "root_tag": [283, 351], "readgeomfromfil": [283, 351], "readgeomfromstream": [283, 351], "togridblueprint": [283, 351], "modifyeqpath": [283, 351], "writegeom": [283, 351], "valid_typ": [283, 364], "addloc": [283, 364], "removeloc": [283, 364], "additem": [283, 364], "removeitem": [283, 364], "addzon": [283, 364], "removezon": [283, 364], "checkdupl": [283, 364], "getzoneloc": [283, 364], "getallloc": [283, 364], "findzoneitisin": [283, 364], "sortzon": [283, 364], "typ": [284, 310, 492], "assemnum": [284, 287, 330, 353, 483, 498, 499, 503], "compli": [284, 445], "newnum": 284, "impli": [284, 330, 365, 392, 407, 481, 494, 495, 503], "somewher": [284, 287, 340, 404, 413, 446], "plane": [284, 336, 339, 341, 441, 488, 503], "outlet": [284, 353, 490, 498, 499, 501, 503], "refa": 284, "zeroatfuel": 284, "zeroesatfuel": 284, "enrichthresh": 284, "zbottom": [284, 287, 499], "resid": [284, 340, 364, 499, 503], "refmesh": 284, "stick": 284, "topindex": [284, 499], "snap": [284, 330], "rebusoutput": 284, "blockmesh": 284, "conservemassflag": 284, "depict": [284, 481], "slide": 284, "blockheight": 284, "returnbottomz": 284, "returntopz": 284, "zcoord": [284, 470], "blocksandcoord": 284, "bottomz": 284, "typenam": [284, 310, 416], "mergeblock": 284, "targetblock": 284, "zindex": [284, 330], "bindex": 284, "zlower": 284, "zupper": 284, "blockinfo": 284, "blockobj": 284, "overlapheightincm": 284, "block3": 284, "block2": 284, "block1": 284, "interptyp": 284, "fillvalu": [284, 416], "thoutlettemperatur": 284, "paramdefinedat": 284, "extrapol": [284, 409, 503], "spline": 284, "interp1d": 284, "nearest": [284, 330], "slinear": 284, "quadrat": 284, "cubic": 284, "rough": 284, "valatz": 284, "extrapolol": 284, "nonphys": 284, "spatialgrid": [284, 287, 292, 310, 330, 336, 341, 350, 353, 354, 446, 467, 483, 488, 493], "wise": [284, 312, 313, 314, 315, 354, 416, 501, 503], "spatialloc": [284, 287, 292, 310, 330, 334, 339, 340, 341, 467, 468, 476, 488, 490, 495, 505], "ztop": [284, 287, 499], "reorder": 284, "blocktypespec": [284, 330], "blockcount": 284, "dimnam": [284, 287], "rad": [284, 287, 316, 471], "angl": [284, 287, 305, 398, 441, 503], "radian": [284, 287, 318, 342, 409, 441], "clockwis": [284, 287, 336, 339, 407, 499], "assemblyparametercollect": [284, 340], "divis": [284, 330, 481, 488], "subdivid": 284, "axialmesh": [284, 461, 484, 501], "azimuth": [284, 288, 309, 330, 342, 498], "classvar": 287, "pinspatialloc": 287, "gloss": 287, "axialindex": [287, 290, 483], "inher": [287, 398, 451, 493, 506], "b0120": 287, "005": [287, 330, 483, 488, 503], "negativearea": 287, "multiplicti": 287, "ringnumb": 287, "fastest": [287, 307, 310], "clock": [287, 499], "pinmgflux": [287, 486, 499], "5th": 287, "6th": [287, 498, 499, 501], "modifiedheight": 287, "conservemass": 287, "adjustlist": 287, "bottleneck": 287, "fly": [287, 314, 339, 340, 483], "numpin": 287, "newenrich": [287, 310], "central": [287, 330, 336, 338, 367, 446, 453, 481, 495], "bisect": 287, "trisect": 287, "overhang": 287, "scaleparamsrelatedtosymmetri": [287, 311, 317], "returnmass": 287, "bolblock": [287, 321], "hm": [287, 310, 483, 499], "initialload": 287, "ecpt": [287, 321], "hmden": [287, 310], "importgeom": [287, 309, 330], "_updateblockparametersafterdeplet": 287, "heighthot": 287, "initialb10componentvol": [287, 361, 499], "breplac": 287, "replacementblock": 287, "blist": [287, 413], "blist2": [287, 413], "recomputeareafract": 287, "stai": [287, 310, 314, 354, 365, 443], "linkedcomp": 287, "componentlist": [287, 314], "otherblock": 287, "among": [287, 304, 310, 449, 481, 503, 505], "compnam": 287, "dimval": 287, "betwen": 287, "returncomp": 287, "largestcompon": 287, "updatebolparam": 287, "settingpitch": 287, "setdimens": [287, 304, 307], "034": [287, 488], "phi_e": 287, "mfp": 287, "mfpab": 287, "diffusionlength": 287, "thrz": [287, 309], "updatedim": [287, 304, 307, 309], "optimizationinterfac": [287, 309, 330], "modifycas": [287, 309], "fuel001": 287, "fuel169": 287, "169": [287, 299, 300, 503], "tracklength": [287, 307, 310], "integratedflux": [287, 307, 310], "lfpname": [287, 307, 310], "targetcompon": 287, "centroid": [287, 330, 340, 343, 346, 440], "localcoordin": 287, "totalenergygenconst": 287, "fissionenergygenconst": 287, "energydepconst": 287, "attributeerror": [287, 414, 452], "umc": 287, "frequent": [287, 310, 330, 350, 398, 445, 488, 494], "determinist": [287, 503], "makeassemwithuniformmesh": [287, 311, 329], "powerkeysuffix": 287, "linpowbypin": [287, 499], "pinloc": [287, 484, 499], "elig": 287, "assembl": [287, 503], "pintoductgap": 287, "diameter": 287, "face": [287, 294, 339, 413, 453, 481, 484], "rotnum": 287, "contact": [287, 409, 481, 503], "spacer": [287, 494], "pinpitch": 287, "wet": 287, "perimet": [287, 305, 339, 355], "4a": 287, "minu": [287, 494, 498], "widthout": [287, 305, 306, 309, 355, 495, 503], "pertain": 288, "rigidli": 288, "adher": 288, "mymaterialmodification1": 288, "mymaterialmodification2": 288, "hotchannelfactor": [288, 498, 503], "twrpclad": [288, 503], "yamlstr": [288, 295, 300], "griddesign": [288, 475], "roundtrip": 288, "blueprintsobject": 288, "closur": 288, "irrelev": [288, 380], "inp": [288, 317, 380, 410], "textio": [288, 439], "cloader": 288, "10x": [288, 439], "roundtripload": 288, "submesh": [288, 328, 330, 484], "sophist": [288, 292, 439], "stabil": [288, 481, 503], "portion": [288, 391, 503], "test_assemblyblueprint": [288, 295], "testmaterialmodif": [288, 295, 296, 302], "test_blockblueprint": [288, 295], "testgriddedblock": [288, 295, 297], "test_blueprint": [288, 295], "testblueprint": [288, 295, 298], "testblueprintsschema": [288, 295, 298], "test_componentblueprint": [288, 295], "testcomponentblueprint": [288, 295, 299], "test_customisotop": [288, 295, 298], "testcustomisotop": [288, 295, 300], "testcustomisotopics_errorcondit": [288, 295, 300], "testnuclideflagsexpans": [288, 295, 300], "test_gridblueprint": [288, 295], "testgridbproundtrip": [288, 295, 301], "testgridblueprintssect": [288, 295, 301], "testrztgridblueprint": [288, 295, 301], "test_materialmodif": [288, 295], "test_reactorblueprint": [288, 294, 295], "testreactorblueprint": [288, 295, 303], "key_typ": [288, 289, 293], "value_typ": [288, 289, 293], "getassemclass": [288, 289], "item_typ": [288, 289, 290, 291, 292, 293, 294], "byspecifi": [288, 289], "to_yaml": [288, 291], "setcustomdens": [288, 291], "readfromlatticemap": [288, 292], "expandtoful": [288, 292], "getmultiloc": [288, 292], "fileasactiveorinert": [288, 293], "from_yaml_key_v": [288, 293], "decoupl": [289, 484], "yamlizablestr": [289, 293], "mapattributecollect": [289, 293], "underneath": 289, "keyedlist": [289, 290, 291, 292, 293, 294], "_loadcomposit": 289, "keyedlistattributecollect": [289, 290, 291, 292, 293, 294], "axialmeshpoint": [290, 475], "materialinput": 290, "byblock": 290, "_rtd": 291, "matmod": 291, "constructedcompon": 291, "_resolvenuclid": 291, "isotopicdepletioninterfac": 291, "isdeplet": 291, "pointer": [291, 490], "subassembli": [292, 483], "sh": [292, 494, 503], "rr": [292, 475, 494], "oc": [292, 494], "pc": [292, 477, 494], "latticemap": [292, 475], "latticedimens": 292, "gridbound": 292, "gridcont": 292, "__new__": [292, 294, 340], "setattr": [292, 294], "lazili": [292, 405, 416], "unfold": 292, "rudimentari": 292, "domain": [292, 330, 333, 338, 398, 498], "latticeid": [292, 495, 503], "bluep": 292, "trymap": 292, "cobbl": 292, "regardless": [292, 310, 317, 341, 374, 434, 490, 503], "creator": 293, "o17": [293, 495, 503], "o18": [293, 401, 495], "reachabl": 293, "expandto": [293, 300, 483, 495, 503], "activeset": 293, "inertset": 293, "inert": 293, "yamlizablefloat": 293, "rtd": 293, "key_nod": 293, "val_nod": 293, "key_attr": 293, "customisotopicsnam": [293, 500], "customisotopicnam": 293, "customisoptop": 293, "infrequ": 293, "cm247": [293, 300, 488], "b11": [293, 488], "intellig": 293, "elementalstokeep": 293, "oxygen16": 293, "examin": [293, 317, 330, 503], "conf_fission_product_library_nam": 293, "proven": 294, "loadcomp": 294, "initnewreactor": [294, 311, 325, 329], "twoblockinput_correct": [295, 296], "twoblockinput_wrongmeshpoint": [295, 296], "twoblockinput_wrongheight": [295, 296], "twoblockinput_wrongxstyp": [295, 296], "twoblockinput_wrongmatmod": [295, 296], "loadcustomassembli": [295, 296], "test_checkparamconsist": [295, 296], "test_constructspatialgrid": [295, 297], "test_getlocatorsatlatticeposit": [295, 297], "test_blocklattic": [295, 297], "test_nonlatticecomponenthasrightmult": [295, 297], "test_explicitflag": [295, 297], "test_densityconsistentwithcomponentconstructor": [295, 297], "test_roundtripcompletebp": [295, 298], "test_getassemblytypebyspecifi": [295, 298], "test_specialisotopicvector": [295, 298], "test_componentdimens": [295, 298], "test_tracenuclid": [295, 298], "test_noduplicatekeysinyamlblueprint": [295, 298], "test_assemblyparamet": [295, 298], "test_nuclidesmc2v2": [295, 298], "test_nuclidesmc2v3": [295, 298], "test_merg": [295, 298], "test_cladding_invalid": [295, 298], "test_withoutblock": [295, 298], "test_toplevelcomponentinput": [295, 298], "test_componentgroupinput": [295, 298], "componentstr": [295, 299], "test_componentinitializationincompleteburnchain": [295, 299], "test_componentinitializationcontrolcustomisotop": [295, 299], "test_autodeplet": [295, 299], "test_componentinitializationamericiumcustomisotop": [295, 299], "test_componentinitializationthoriumburncustomisotop": [295, 299], "test_componentinitializationthoriumnoburncustomisotop": [295, 299], "yamlpreambl": [295, 300], "yamlgoodblock": [295, 300], "yamlbadblock": [295, 300], "yamlstringwitherror": [295, 300], "test_unmodifi": [295, 300], "test_massfractionsareappli": [295, 300], "test_densitiesappliedtononcustommateri": [295, 300], "test_customdensitylogsanderror": [295, 300], "test_numberfract": [295, 300], "test_numberdens": [295, 300], "test_numberdensitiesanchor": [295, 300], "test_expandednatur": [295, 300], "test_unrepresentedareonlynatur": [295, 300], "test_densitymustbeposit": [295, 300], "test_nonconformantelementnam": [295, 300], "test_numberdensitiescannotspecifydens": [295, 300], "test_cont": [295, 301], "test_tinymap": [295, 301], "test_simpleread": [295, 301, 303], "test_simplereadlatticemap": [295, 301], "test_simplereadnolatticemap": [295, 301], "test_construct": [295, 301, 303], "test_geomfil": [295, 301], "uzrinput": [295, 302], "b4cinput": [295, 302], "loaduzrassembli": [295, 302], "loadb4cassembli": [295, 302], "test_nomaterialmodif": [295, 302], "test_u235_wt_frac_modif": [295, 302], "test_u235_wt_frac_bycomponent_modification1": [295, 302], "test_u235_wt_frac_bycomponent_modification2": [295, 302], "test_materialmodificationlength": [295, 302], "test_invalidcomponentmodif": [295, 302], "test_zrwtfracmodif": [295, 302], "test_bothu235zrwtfracmodif": [295, 302], "test_checkbycomponentmaterialinput": [295, 302], "test_filtermaterialinput": [295, 302], "test_invalidmatmodnam": [295, 302], "test_matmodsupthemro": [295, 302], "test_theoreticaldens": [295, 302], "test_materialdatasummari": [295, 303], "test_spentfuelpool": [295, 303], "assemblyinput": 296, "intermedi": [297, 503, 505], "faithfulli": [298, 329, 505], "robust": [298, 310], "tip": [298, 329, 398, 448, 484, 498], "prove": [298, 302, 355, 364, 378, 396, 451, 453, 481], "mc2v3": [298, 503], "86602": [299, 300, 503], "dump2": [300, 488], "dump1": [300, 488], "pu236": [300, 488], "u236": [300, 488, 492, 503], "am243": [300, 488], "cm242": [300, 488], "cm245": [300, 488], "np238": [300, 488], "cm243": [300, 488], "cm246": [300, 488], "992742": 300, "007204": [300, 492], "000054": 300, "992650": 300, "007295": 300, "000055": 300, "u_isotop": 300, "6539102e": 300, "5254048e": 300, "7967943e": 300, "block_0": 300, "basic_fuel": 300, "block_1": 300, "block_2": 300, "block_3": 300, "block_4": 300, "block_5": 300, "block_6": 300, "overspecifi": 300, "block_7": 300, "block_8": 300, "block_9": 300, "assembly_b": 300, "assembly_c": 300, "assembly_d": 300, "unmodifi": 300, "fe54": [300, 488], "block_poison": 302, "mro": 302, "bcomp": 304, "lowercas": 304, "mergewith": [304, 305, 306, 307, 309, 500], "componentparametercollect": [304, 307], "modarea": [304, 305, 306, 309, 500, 503], "leftov": [304, 307], "othercompon": [304, 307], "freez": 304, "unshapedcomponentparametercollect": 304, "makemgfluxblock": 304, "makemassadditioncompon": 304, "circumst": [304, 307, 329, 330, 390, 405, 446, 482, 503, 509], "dh": 304, "pai": [304, 503], "attent": [304, 503], "companion": [304, 490], "thermal_expansion_dim": [304, 305, 306, 307, 309], "getcircleinnerdiamet": [304, 305, 306, 307, 484], "isencapsulatedbi": [304, 305], "getperimet": [304, 305], "getpitchdata": [304, 305, 307], "islatticecompon": [304, 305], "non_dimension_nam": [304, 307], "temperatureink": [304, 307], "setlink": [304, 307], "setproperti": [304, 307], "applymaterialmassfracstonumberdens": [304, 307, 314], "adjustdensityforheightexpans": [304, 307], "getheightfactor": [304, 307], "containsvoidmateri": [304, 307], "containssolidmateri": [304, 307], "setarea": [304, 307], "settemperatur": [304, 307, 465], "getmassenrich": [304, 307], "dimensionislink": [304, 307], "getdimensionnameslinkedto": [304, 307], "clearlinkedcach": [304, 307], "getlinkedcompon": [304, 307], "getthermalexpansionfactor": [304, 307], "setdimensionreport": [304, 307], "mergenuclidesinto": [304, 307], "finalizeloadingfromdb": [304, 307], "circleparametercollect": 305, "www3": 305, "wolframalpha": 305, "hexagonparametercollect": 305, "lengthout": [305, 306, 309, 355, 503], "lengthinn": [305, 309, 355, 503], "widthinn": [305, 309, 355, 495, 503], "rectangleparametercollect": 305, "hollow": [305, 306, 494], "lenth": 305, "triangleparametercollect": 305, "holeod": [306, 355, 503], "nhole": [306, 355, 503], "hole": [306, 355, 418, 483, 494, 503], "holedhexagonparametercollect": 306, "holeop": [306, 355, 503], "hexholedcircleparametercollect": 306, "holedrectangleparametercollect": 306, "holedsquareparametercollect": 306, "axialpitch": [306, 355, 475, 494, 503], "helixdiamet": [306, 355, 475, 494, 503], "spiral": 306, "mathworld": 306, "wolfram": 306, "climb": 306, "exterior": 306, "interior": [306, 484], "helixparametercollect": 306, "specfi": 307, "componettyp": 307, "addition": [307, 316, 449, 481, 503], "inputtemperatureinc": [307, 314, 315, 505], "othercomp": 307, "othercompkei": 307, "newhot": 307, "accommod": [307, 413, 446], "lfpcollect": [307, 310], "proport": [307, 460], "rho": [307, 310, 401], "f_n": 307, "dn": 307, "sim": 307, "heterogen": [307, 316, 503], "nden": [307, 310, 459, 488, 499], "unlist": [307, 310], "ambigu": 307, "blend": [307, 503], "sum_i": [307, 310, 329], "a_i": [307, 310, 506], "n_a": [307, 310], "avogadro": 307, "retainlink": 307, "indirectli": [307, 401], "intersect": 307, "percentag": [307, 314, 330, 452, 499, 500], "includenuclid": [307, 310, 488], "comptomergewith": 307, "pervious": 307, "whichev": [307, 330, 446, 448, 481], "weigh": [307, 330], "doubli": [307, 353], "fetch": [307, 345], "sphereparametercollect": 309, "heightout": [309, 355, 503], "heightinn": [309, 355, 503], "cuboid": 309, "centric": 309, "cubeparametercollect": 309, "inner_radiu": [309, 355, 503], "outer_radiu": [309, 355, 503], "inner_theta": [309, 503], "outer_theta": [309, 503], "283185307179586": 309, "xxxx": 309, "xxxxxxx": 309, "refvolum": 309, "refheight": 309, "radialsegmentparametercollect": 309, "radius_differenti": [309, 355, 503], "inner_axi": [309, 355, 503], "azimuthal_differenti": [309, 503], "thrzactiveheight": 309, "thrzactiveradiu": 309, "outer_axi": 309, "principl": 310, "everywher": 310, "analogi": 310, "unsaf": 310, "unexpect": [310, 452], "uint64": 310, "uint8": 310, "unsign": 310, "hood": [310, 494], "particip": [310, 483, 503], "gang": 310, "far": [310, 398, 482, 490, 493, 501, 508, 509], "unstabl": [310, 483], "armiobjectparametercollect": [310, 331, 347, 350], "rapidli": [310, 481], "weak": 310, "complabel": 310, "unpickl": [310, 340, 397], "dig": 310, "__reduce__": [310, 338], "testfuel": [310, 330], "insensit": [310, 341], "typeid": 310, "bitwis": [310, 346, 405, 424], "qualifi": [310, 448, 483], "disallow": 310, "volfrac": [310, 465], "test_consistentareawithoverlappingcompon": [310, 352, 354], "insur": 310, "ai": 310, "m_i": 310, "sum_j": 310, "m_j": 310, "m_": 310, "nuclidetoadjust": 310, "elementtoadjust": 310, "nuclidetoholdconst": 310, "elementtoholdconst": 310, "5zr": 310, "oi": 310, "f1": 310, "f2": 310, "fn": 310, "caller": 310, "_distanc": 310, "ntot": 310, "unnatur": 310, "anticip": 310, "dealt": 310, "therebi": 310, "nearli": [310, 483, 490, 505], "volumeintegr": [310, 330], "addsymmetricposit": 310, "calcbasedonfullobj": 310, "postion": 310, "weightingparam": 310, "volumeaverag": 310, "grandchildren": 310, "x_i": 310, "w_i": 310, "unset": 310, "returnobj": 310, "sought": 310, "magnitud": [310, 314, 341], "pertin": [310, 451], "formula": [310, 329, 440, 484, 491], "mini": [310, 409], "maxi": 310, "minj": 310, "maxj": 310, "mink": 310, "maxk": 310, "shapeclass": 310, "materialnam": [310, 474], "selector": 310, "componentswiththismat": 310, "npin": [310, 499], "elementalnuclid": 310, "naturalnuclid": 310, "domin": 310, "tripl": [310, 340, 498, 499, 501], "pump": [310, 481, 495, 498, 501, 503], "apart": 310, "spatialoc": 310, "seq": [310, 408], "unari": 310, "getattr": 310, "child1": 310, "child2": 310, "child3": 310, "grandchild1": 310, "grandchild2": 310, "grandchild3": 310, "isinst": [310, 333], "synchron": [310, 345, 449], "revert": [310, 328, 373, 375, 503], "parmeterdefinit": [310, 345], "ndensiti": 310, "rxnrate": 310, "nf": 310, "compris": [310, 503], "rabc": 310, "implic": [310, 340], "unclear": 310, "__exit__": 310, "xssuffix": 310, "_label_": 310, "rxn": 310, "n3n": 310, "tediou": [311, 481], "autom": [311, 416, 448, 460, 480, 493, 503], "assemblyaxiallinkag": [311, 312, 314], "getdefaultreferenceassem": [311, 312, 314], "makeassemsabletosnaptouniformmesh": [311, 312, 314], "expansiondata": [311, 312, 314, 323], "getsolidcompon": [311, 312, 315, 323], "generalparametersweepconvert": [311, 319], "parametersweepconvert": [311, 319, 320], "custommodifi": [311, 319, 320], "test_axialexpansionchang": [311, 322, 484], "axialexpansiontestbas": [311, 322, 323], "testaxialexpansionheight": [311, 322, 323], "testconserv": [311, 322, 323], "testmanagecoremesh": [311, 322, 323], "testexcept": [311, 322, 323], "testdeterminetargetcompon": [311, 322, 323], "testgetsolidcompon": [311, 322, 323], "testinputheightsconsideredhot": [311, 322, 323], "checkcoldblockheight": [311, 322, 323], "testlinkag": [311, 322, 323], "buildtestassemblywithfakemateri": [311, 322, 323], "fakemat": [311, 322, 323], "fakematexcept": [311, 322, 323], "test_blockconvert": [311, 322], "buildsimplefuelblocknegativearea": [311, 322, 324], "testblockconvert": [311, 322, 324], "testtocircl": [311, 322, 324], "buildcontrolblockwithlinkednegativeareacompon": [311, 322, 324], "test_geometryconvert": [311, 322], "testgeometryconvert": [311, 322, 325], "testhextorzconvert": [311, 322, 325], "testedgeassemblychang": [311, 322, 325], "testthirdcorehextofullcorechang": [311, 322, 325], "test_meshconvert": [311, 322], "testrzreactormeshconvert": [311, 322, 326], "test_pintypeblockconvert": [311, 322], "testpintypeconvert": [311, 322, 327], "test_uniformmesh": [311, 322], "dummyfluxopt": [311, 322, 328], "testconverterfactori": [311, 322, 328], "testassemblyuniformmesh": [311, 322, 328], "testuniformmeshgener": [311, 322, 328], "testuniformmeshcompon": [311, 322, 328], "applynonuniformheightdistribut": [311, 322, 328], "testuniformmesh": [311, 322, 328], "testcalcreationr": [311, 322, 328], "testgammauniformmesh": [311, 322, 328], "testparamconvers": [311, 322, 328], "testuniformmeshnonuniformassemflag": [311, 322, 328], "dissolvecomponentintocompon": [311, 316], "restablishlink": [311, 316], "plotconvertedblock": [311, 316, 460], "addr": [311, 317, 325], "createhomogenizedrztblock": [311, 317], "plotconvertedreactor": [311, 317, 329, 461], "expected_input_symmetri": [311, 317], "restorepreviousgeometri": [311, 317], "addedgeassembli": [311, 317], "removeedgeassembli": [311, 317], "generatemesh": [311, 318], "writemeshdata": [311, 318], "setringstoconvert": [311, 318], "setaxialmesh": [311, 318], "setthetamesh": [311, 318], "generatecommonmesh": [311, 328, 329], "reactorparammappingcategori": [311, 329], "blockparammappingcategori": [311, 329], "applystatetoorigin": [311, 328, 329], "setassemblystatefromoverlap": [311, 329], "clearstateonassembli": [311, 329], "updatereactionr": [311, 329], "paramsett": [311, 329], "paramgett": [311, 329], "expandcolddimstohot": [312, 314], "performprescribedaxialexpans": [312, 314], "performthermalaxialexpans": [312, 314], "setassembli": [312, 314], "applycoldheightmassincreas": [312, 314], "axiallyexpandassembli": [312, 314], "managecoremesh": [312, 314], "setexpansionfactor": [312, 315], "updatecomponenttempsby1dtempfield": [312, 315], "updatecomponenttemp": [312, 315], "computethermalexpansionfactor": [312, 315], "getexpansionfactor": [312, 315], "determinetargetcompon": [312, 315, 323], "istargetcompon": [312, 315], "stdassem": 313, "linkag": [313, 314, 323], "linkedblock": 313, "linkedcompon": 313, "nonuniformassemflag": [314, 503], "referenceassembli": 314, "isdetailedaxialexpans": 314, "disjoint": 314, "finest": 314, "componentlst": [314, 315], "setfuel": [314, 315], "tempgrid": [314, 315, 323], "tempfield": [314, 315], "expandfromtinputtothot": [314, 315], "perfectli": [314, 389, 451], "gradient": 314, "loss": [314, 498, 499, 503], "tall": [314, 335, 494], "cheap": [314, 481], "oldmesh": 314, "_isfuellock": [315, 323], "expfrac": 315, "l1": [315, 323], "retriv": 315, "flagofinterest": 315, "_componentdeterminesblockheight": [315, 323], "sourceblock": [316, 460], "solutenam": 316, "solventnam": 316, "minid": 316, "_sourceblock": 316, "solvent": [316, 324], "dissolv": [316, 324], "solutelink": 316, "sane": 316, "specifiedminid": 316, "_verifyexpans": 316, "farthest": 316, "driverfuelblock": [316, 460], "concentr": [316, 503], "surround": [316, 480, 503], "mcc3": 316, "pincomponentsring1": 316, "pincomponentsring2": 316, "nonpin": 316, "annulu": [316, 494, 503], "radii": 316, "sidelength": 316, "disttorodcent": 316, "numrod": 316, "rodradii": 316, "radiilist": 316, "radtorodcent": 316, "thicknessoneachsid": 316, "r_1": 316, "equiv": 316, "r_2": 316, "texttt": 316, "reactorconvert": 317, "usemostcommonxsid": 317, "expandreactor": 317, "geomconv": 317, "newr": 317, "convreactor": [317, 329, 461], "dif3dinterfac": 317, "dif3drz": 317, "rzgeom_actu": 317, "overwritelist": 317, "ringstoadd": 317, "furthest": [317, 498], "converterset": [317, 318, 461], "stricthomogen": 317, "rztheta": [317, 326, 341, 481], "uniformthetamesh": [317, 318, 461], "thetabin": [317, 318, 461], "radialconversiontyp": [317, 461], "axialconversiontyp": [317, 461], "_rzthetareactormeshconverterbyaxialcoordin": [317, 318], "_rzthetareactormeshconverterbyaxialbin": [317, 318], "homogenizeaxiallybyflag": 317, "byringcomposit": 317, "radialmesh": 317, "homblock": 317, "loweraxialz": 317, "upperaxialz": 317, "radialthetazoneassem": 317, "fnamebas": 317, "coremap": [317, 488, 494], "explan": 317, "myreactor": 317, "sourcereactor": [317, 329], "undo": 317, "edgechang": 317, "difnt": 317, "paramstoscalesubset": 317, "_rzthetareactormeshconverterbyringcomposit": 318, "_rzthetareactormeshconverterbyaxialflag": 318, "inputlist": 318, "listnam": 318, "expectedvalu": 318, "adjustlastvalu": 318, "totalnumdatapoint": 318, "numperbin": 318, "minnum": 318, "settingtomodifi": 320, "applycustomperturb": 320, "sd": 321, "fuel_r": 321, "clad_ir": 321, "fuel_od": 321, "clad_id": 321, "steel_component_lst": [322, 323], "test_assemblyaxialexpansionheight": [322, 323], "expandassemformassconservationtest": [322, 323], "test_thermalexpansioncontractionconservation_simpl": [322, 323], "test_thermalexpansioncontractionconservation_complex": [322, 323], "complexconservationtest": [322, 323], "test_prescribedexpansioncontractionconserv": [322, 323], "test_targetcomponentmassconserv": [322, 323], "test_nomovementaclp": [322, 323], "test_reset": [322, 323], "test_computethermalexpansionfactor": [322, 323], "test_managecoremesh": [322, 323], "test_istopdummyblockpres": [322, 323], "test_setexpansionfactor": [322, 323], "test_updatecomponenttempsby1dtempfieldvalueerror": [322, 323], "test_updatecomponenttempsby1dtempfieldruntimeerror": [322, 323], "test_assemblyaxialexpansionexcept": [322, 323], "test_isfuellock": [322, 323], "test_determinelink": [322, 323], "test_getlinkedcompon": [322, 323], "test_determinetargetcompon": [322, 323], "test_determinetargetcomponentblockwithmultipleflag": [322, 323], "test_specifytargetcomponent_notfound": [322, 323], "test_specifytargetcomponent_singlesolid": [322, 323], "test_specifytargetcomponet_multiplefound": [322, 323], "test_manuallysettargetcompon": [322, 323], "test_getsolidcompon": [322, 323], "test_coldassemblyexpans": [322, 323], "checkcoldheightblockmass": [322, 323], "test_overlappingsolidpin": [322, 323], "test_differentmultnotoverlap": [322, 323], "test_solidpinnotoverlappingannulu": [322, 323], "test_solidpinoverlappingwithannulu": [322, 323], "test_annularpinnotoverlappingwithannulu": [322, 323], "test_annularpinoverlappingwithannul": [322, 323], "test_thinannularpinoverlappingwiththickannulu": [322, 323], "test_annularhexoverlappingthickannularhex": [322, 323], "test_liquid": [322, 323], "test_unshapedcomponentandcircl": [322, 323], "test_dissolvewireintocool": [322, 324], "test_dissolvelinerintoclad": [322, 324], "test_dissolvemultipl": [322, 324], "test_dissolvezeroarea": [322, 324], "test_dissolveintozeroarea": [322, 324], "test_dissolvenegativearea": [322, 324], "test_dissolveintonegativearea": [322, 324], "test_build_nthr": [322, 324], "test_convert": [322, 324, 325], "test_converthexwithfueldriv": [322, 324], "test_converthexwithfueldriveronnegativecomponentareablock": [322, 324], "test_convertcartesianlatticewithfueldriv": [322, 324], "test_fromhex": [322, 324], "test_fromringofrod": [322, 324], "test_addr": [322, 325], "test_setnumberoffuelassem": [322, 325], "test_getassembliesinsector": [322, 325], "test_createhomogenizedrztblock": [322, 325], "test_edgeassembli": [322, 325], "test_growtofullcorefromthirdcor": [322, 325], "test_initnewfullreactor": [322, 325], "test_skipgrowtofullcorewhenalreadyfullcor": [322, 325], "test_meshbyringcompositionaxialbinssmallcor": [322, 326], "test_meshbyringcompositionaxialcoordinatessmallcor": [322, 326], "test_meshbyringcompositionaxialflagssmallcor": [322, 326], "test_meshbyringcompositionaxialbinslargecor": [322, 326], "test_meshbyringcompositionaxialcoordinateslargecor": [322, 326], "test_meshbyringcompositionaxialflagslargecor": [322, 326], "test_adjustcladthicknessbyod": [322, 327], "test_adjustcladthicknessbyid": [322, 327], "test_converterfactori": [322, 328], "test_makeassemwithuniformmesh": [322, 328], "test_makeassemwithuniformmeshsubmesh": [322, 328], "test_makeassemuniformmeshparammappingsamemesh": [322, 328], "test_clearassemblyst": [322, 328], "test_computeaverageaxialmesh": [322, 328], "test_filtermesh": [322, 328], "test_filteredtopandbottom": [322, 328], "test_generatecommonmesh": [322, 328], "test_blueprintcopi": [322, 328], "test_convertnumberdens": [322, 328], "test_applystatetoorigin": [322, 328], "test_calcreactionratesblocklist": [322, 328], "test_setstatefromoverlap": [322, 328], "test_reactorconvers": [322, 328], "137438953472": [323, 332], "274877906944": [323, 332], "549755813888": [323, 332], "1099511627776": [323, 332], "17592186044416": [323, 332], "140737488355328": [323, 332], "2251799813685248": [323, 332], "72057594037927936": [323, 332], "coldtemp": 323, "hotinlettemp": 323, "360": [323, 490, 503], "numtempgridpt": 323, "tempstep": 323, "inlet": [323, 490, 498, 499, 503], "nomin": [323, 481, 498, 499], "metric": [323, 481], "isotherm": 323, "caught": 323, "target_flags_in_preferred_ord": 323, "specifytargetcompon": 323, "r_armi_inp_cold_height": 323, "refsmallreactorbas": 323, "deltat": [323, 490], "bstd": 323, "bexp": 323, "flagtyp": 323, "underpredict": 323, "asserttyp": 323, "strforassert": 323, "componentstotest": 323, "assertionbool": 323, "commonarg": 323, "typea": 323, "typeb": 323, "annuli": 323, "setnumberoffuelassem": 325, "sourceassem": [328, 329], "newassem": [328, 494], "_decuspaxialmesh": 328, "dest": [328, 397], "pden": [328, 413, 476, 481, 488, 490, 499], "lost": [329, 449], "finer": [329, 494], "uniformreactor": 329, "minimummeshs": 329, "decusp": [329, 484], "uniformmeshminimums": [329, 503], "_computeaverageaxialmesh": 329, "cusp": 329, "reactorparamstomap": 329, "blockparamstomap": 329, "_setparamstoupd": 329, "reactorparamnam": 329, "blockparamnam": 329, "newmesh": 329, "mapnumberdens": 329, "includepincoordin": 329, "sourceassembli": 329, "destinationassembli": 329, "int_": 329, "z_1": 329, "z_2": 329, "dz": 329, "piecewis": [329, 409], "smarter": 329, "param1": 329, "val1": [329, 414, 449], "param2": 329, "val2": [329, 414, 449], "b2": 329, "pinquant": [329, 343, 346, 484], "powergener": [329, 499], "powerneutron": [329, 499], "powergamma": [329, 499], "paramdef": [329, 343, 345, 346], "overlappingblockinfo": 329, "h_i": 329, "refin": [330, 484, 503], "powerdens": [330, 484, 501, 503], "kghm": [330, 480, 484, 499], "kgfi": [330, 461, 484, 499], "trackassem": [330, 484, 503], "spend": [330, 453, 481], "constrain": [330, 341, 460, 461, 483, 494], "ringnum": 330, "overridecircularringmod": [330, 361], "startindex": [330, 350], "unoccupi": 330, "chargecycl": [330, 498], "indexbas": 330, "maxr": 330, "nring": 330, "nassmwithblank": 330, "read1d": 330, "assemtypespec": 330, "maxblock": 330, "circularringmod": [330, 503], "alist": 330, "fullcor": 330, "numedgeassem": 330, "_modifygeometryafterload": 330, "ringpitch": 330, "a0001": [330, 488], "sortkei": 330, "includebolassem": 330, "includesfp": 330, "includeal": 330, "similarli": [330, 345, 452, 495, 503], "_children": 330, "nozzletyp": [330, 498, 503], "nozzleid": 330, "a0001a": 330, "blocksbynam": 330, "blocksbylocnam": 330, "btype": 330, "slipperi": 330, "detachallassembli": 330, "regrow": 330, "suffic": 330, "categor": [330, 332, 361, 373, 488], "broaden": [330, 506], "coolantnuclid": 330, "fuelnuclid": 330, "structurenuclid": 330, "assemblylevel": 330, "loccont": 330, "speedup": [330, 439, 445], "speed": [330, 484, 486, 503], "energyord": 330, "extsrc": [330, 499], "nxg": 330, "locationstr": 330, "assemblynam": 330, "foundassembli": 330, "showblank": 330, "duplicateassembliesonreflectiveboundari": 330, "neighbor": [330, 339, 341, 361, 485], "east": 330, "west": 330, "south": 330, "border": [330, 467], "asymmetr": 330, "getsymmetricequival": [330, 334, 335, 336, 338, 339, 340, 342], "assemblytyp": 330, "allflux": 330, "symmetrylineid": 330, "applysubmesh": 330, "endpoint": [330, 341], "meshval": 330, "imbalanc": 330, "trz": [330, 359], "xyz": [330, 470, 471], "float_dimension_decim": [330, 484], "9th": 330, "10th": 330, "repetit": [330, 341, 439, 499, 503], "heightcm": 330, "meshlist": 330, "extraassem": 330, "mcpnxt": 330, "flux2weight": 330, "avgtemp": 330, "pitchincm": 330, "shift": [330, 483, 503], "lowestfuelheightincm": 330, "coreparametercollect": 330, "zonedefinit": [330, 364, 503], "002": [330, 364, 483, 488, 503], "simplest": [331, 361, 493, 503], "baseclass": 331, "freeli": 331, "2311582653024": 331, "dual": 331, "2311590971136": 331, "bind": [332, 345, 446, 503], "noun": 332, "adject": 332, "disambigu": 332, "bitfield": 332, "widen": 332, "led": [332, 503], "clearli": [332, 364, 503], "stori": 332, "substr": 332, "decid": [332, 347, 453], "canon": [332, 394], "mention": [332, 451], "plenti": 332, "lta": 332, "distinguish": [332, 495], "circul": 332, "bundl": [332, 494, 498, 499, 501], "128": [332, 346, 481], "256": [332, 346], "512": 332, "1024": 332, "2048": 332, "4096": 332, "8192": 332, "16384": 332, "32768": 332, "65536": 332, "131072": 332, "262144": 332, "524288": 332, "1048576": 332, "2097152": 332, "4194304": 332, "8388608": 332, "16777216": 332, "33554432": 332, "67108864": 332, "134217728": 332, "268435456": 332, "536870912": 332, "1073741824": 332, "2147483648": 332, "4294967296": 332, "8589934592": 332, "17179869184": 332, "34359738368": 332, "68719476736": 332, "2199023255552": 332, "4398046511104": 332, "8796093022208": 332, "35184372088832": 332, "70368744177664": 332, "281474976710656": 332, "562949953421312": 332, "1125899906842624": 332, "4503599627370496": 332, "9007199254740992": 332, "18014398509481984": 332, "36028797018963968": 332, "144115188075855872": 332, "288230376151711744": 332, "576460752303423488": 332, "1152921504606846976": 332, "2305843009213693952": 332, "4611686018427387904": 332, "9223372036854775808": 332, "18446744073709551616": 332, "36893488147419103232": 332, "straightforward": [333, 346, 494, 495, 503], "quarter": [333, 341, 495, 503], "harder": [333, 452], "proceed": [333, 482, 503, 509], "reliev": 333, "elif": [333, 451], "instrument": 333, "forbid": 333, "shapestr": 333, "symmetrystr": 333, "throughcenterassembli": 333, "symmetryinput": 333, "outcom": 333, "fromrectangl": [334, 336], "getglobalcoordin": [334, 340, 468, 469, 470, 471, 476, 488, 490, 495], "test_grid": [334, 417, 434], "testspatialloc": 334, "test_recurs": 334, "getringpo": [334, 336, 339, 340, 341, 342], "indicestoringpo": [334, 339], "fromncel": [334, 335, 467], "locatorindomain": [334, 335, 336, 338, 339, 342], "getindicesfromringandpo": [334, 335, 336, 339, 341, 342], "getminimumr": [334, 335, 336, 339, 341, 342], "getpositionsinr": [334, 335, 336, 339, 341, 342], "overlapswhichsymmetrylin": [334, 335, 336, 338, 339, 342], "changepitch": [334, 336, 339], "isaxialonli": [334, 338, 341], "getcoordin": [334, 338, 341, 342], "getcellbas": [334, 338, 341], "getcelltop": [334, 338, 341], "cornersup": [334, 339, 486], "frompitch": [334, 339, 467, 469], "getneighboringcellindic": [334, 339, 341, 485], "trianglecoord": [334, 339], "isinfirstthird": [334, 339], "generatesortedhexlocationlist": [334, 339, 469], "detachedcopi": [334, 340], "parentloc": [334, 340], "getcompleteindic": [334, 340], "getlocalcoordin": [334, 340], "getglobalcellbas": [334, 340], "getglobalcelltop": [334, 340], "distanceto": [334, 340], "unitsteplimit": [334, 335, 336, 339, 341, 342], "unitstep": [334, 335, 336, 339, 341, 342, 470], "getaboveandbelowcellindic": [334, 341], "getindexbound": [334, 341], "getbound": [334, 341], "getlocatorfromringandpo": [334, 341], "getallindic": [334, 341], "fromgeom": [334, 342], "indicesofbound": [334, 342], "__init_": 335, "numcel": [335, 407], "symmetryoverlap": [335, 336, 338, 339], "noreturn": [335, 336, 342], "tricker": 336, "lai": 336, "illustr": [336, 339], "draw": [336, 416, 425, 477], "ax": [336, 340, 341, 409, 413, 465, 467, 469, 470, 471, 474, 477], "numr": [336, 339, 407], "isoffset": 336, "manhattan": 336, "quadrant": [336, 341], "diagon": [336, 339], "childrenbyloc": [336, 446], "_isthroughcent": 336, "xw": 336, "yw": 336, "dx": 338, "boundary_cent": [338, 339], "nativecoord": [338, 340, 341, 342], "hashabl": 338, "happi": [338, 448, 503], "__getstate__": [338, 345, 360, 378, 391], "__setstate__": 338, "_____": 339, "Being": [339, 481], "newpitchcm": 339, "includetopedg": 339, "nloc": 339, "a3001": 339, "a3003": 339, "immut": [340, 346, 367, 414, 483, 484], "unbeliev": 340, "inexplic": [340, 413, 415], "strip": 340, "annoi": 340, "tagalong": 340, "rack": 340, "awkward": 340, "ok": [340, 489], "todo": [340, 452], "mygrid": 340, "parentgrid": 340, "vice": 341, "versa": 341, "dxi": 341, "dxj": 341, "jxk": 341, "dyi": 341, "dyj": 341, "dyk": 341, "dzi": 341, "dzj": 341, "dzk": 341, "dmn": 341, "0th": 341, "settl": [341, 498], "struggl": [341, 506], "orthogon": 341, "wast": 341, "compact": 341, "intuit": [341, 347, 503], "phantom": 341, "2x": 341, "backrefer": 341, "cleaner": [341, 346, 422], "disadvantag": 341, "pollut": 341, "recreat": 341, "exsist": 341, "dens": [341, 505], "unphys": [341, 490], "zeta": 342, "2pi": [342, 441], "geominfo": 342, "readgeomxml": 342, "rad0": 342, "rad1": 342, "theta0": 342, "theta1": 342, "0001": [342, 493], "350": 343, "hidden": [343, 345], "_p_": 343, "_p_cyclelength": 343, "circumv": 343, "rational": 343, "behind": [343, 451, 483, 491, 494], "5e13": 343, "fueltemp": 343, "217": [343, 475, 492], "curiou": 343, "heightbol": [343, 499], "collectiontyp": [343, 346], "suitabl": 343, "experi": [343, 480, 481, 503], "thefreedictionari": 343, "atmospher": 343, "meriam": 343, "webster": 343, "descriptor": [343, 345], "protocol": [343, 345, 397, 480], "suggest": [343, 374, 375, 443, 503], "all_definit": 343, "secret": 343, "pep": 343, "412": 343, "protect": [343, 452, 484], "__slots__": 343, "lite": 343, "roundabout": 343, "pain": 343, "consumpt": 343, "pylint": [343, 484], "overwhelm": 343, "unsustain": 343, "__dict__": 343, "slot": 343, "becam": [343, 405], "oner": [343, 347], "tradit": [343, 346, 481], "__something__": 343, "applyparamet": [343, 345], "definint": 343, "getsyncdata": [343, 345], "cumulativeovercycl": [343, 346], "assigninblueprint": [343, 346], "retainonreplac": [343, 346], "fluxquant": [343, 346], "multigroupquant": [343, 346], "reactivitycoeffici": [343, 346], "volume_integr": [343, 346, 486], "fieldnam": [343, 346], "savetodb": [343, 346, 503], "atloc": [343, 345, 346, 360], "hascategori": [343, 346, 360, 486], "incategori": [343, 346], "unchanged_sinc": [343, 346], "fortyp": [343, 346], "resetassignmentflag": [343, 346], "setassignmentflag": [343, 346], "bynameandtyp": [343, 346], "bynameandcollectiontyp": [343, 346], "lock": [343, 345, 346, 347, 414, 443, 484, 499], "towritetodb": [343, 346, 360], "associateparameterdefinitioncollect": [343, 346], "parameterfactori": 344, "setparam": 344, "27977": 345, "thread": [345, 397, 490], "gil": 345, "_state": [345, 360, 391], "illeg": [345, 414], "redefin": 345, "_backup": 345, "_hist": 345, "transmit": [345, 449], "_allfield": [345, 360, 391], "accessor": 345, "proactiv": 345, "somedict": 345, "applydefinit": 345, "since_last_distribute_st": 345, "parmatercollect": 345, "proxi": 345, "accumul": [346, 494, 499, 500], "mark": [346, 448, 452, 503], "deseri": [346, 373], "datatyp": 346, "nativ": [346, 405, 449, 507], "wrote": 346, "dilig": 346, "paramstr": 346, "reassign": 346, "myparametercollect": 346, "diet": 346, "_p_speed": 346, "_representedtyp": 346, "__getitem__": 346, "categorynam": 346, "mask": 346, "complementari": 346, "compositetyp": 346, "vipan": 346, "htdoc": 346, "bitwisehelp": 346, "assignedmask": 346, "bitmask": 346, "syntax": [346, 503], "brief": [346, 488], "mutabl": [346, 405, 449], "engag": [346, 347, 445], "mimic": [347, 405], "blindli": 347, "parametercollectionclass": 347, "bparametercollect": 347, "needn": 347, "ourselv": 347, "sausag": 347, "profici": 347, "calss": 347, "paramt": 348, "writeabl": 348, "reactorparametercollect": 349, "pond": 350, "defunct": [351, 485], "tri": [351, 411, 416, 503], "modifiedpath": 351, "eqpathindex": 351, "eqpathcycl": 351, "outputfilenam": [351, 410], "geoemtri": 351, "test_sortnoloc": [352, 353], "test_uthzrmateri": [352, 353], "test_isonwhichsymmetrylin": [352, 353], "test_notesparamet": [352, 353], "test_it": [352, 353], "test_len": [352, 353], "test_append": [352, 353], "test_extend": [352, 353, 417, 424], "test_moveto": [352, 353], "test_getnam": [352, 353, 356], "test_getnum": [352, 353], "test_getloc": [352, 353], "test_getarea": [352, 353, 354, 355], "test_getvolum": [352, 353, 355], "test_adjustresolut": [352, 353], "test_getaxialmesh": [352, 353], "test_calculatezcoord": [352, 353], "test_gettotalheight": [352, 353], "test_getheight": [352, 353], "test_getreactiveheight": [352, 353], "test_getfissilemass": [352, 353, 356], "test_getmass": [352, 353, 354, 361], "test_getag": [352, 353], "test_makeaxialsnaplist": [352, 353], "test_snapaxialmeshtorefer": [352, 353], "test_updatefromassembli": [352, 353], "test_hasflag": [352, 353, 354, 356], "test_renameblocksaccordingtoassemblynum": [352, 353], "test_getblock": [352, 353], "test_getfirstblock": [352, 353], "test_getfirstblockbytyp": [352, 353], "test_getblockdata": [352, 353], "test_getmaxparam": [352, 353, 356], "test_getelevationsmatchingparamvalu": [352, 353], "test_calcavgparam": [352, 353], "test_calctotalparam": [352, 353], "test_reattach": [352, 353], "test_reestablishblockord": [352, 353], "test_countblocksoftyp": [352, 353, 361], "test_getdim": [352, 353], "test_getdominantmateri": [352, 353, 361], "test_iter": [352, 353, 363, 397, 417, 424], "test_getblocksandz": [352, 353], "test_getblocksbetweenelev": [352, 353], "test_getparamvaluesatz": [352, 353], "test_hascontinuouscoolantchannel": [352, 353], "test_carestiancoordin": [352, 353], "test_pinplenumvolum": [352, 353], "test_averageplenumtemperatur": [352, 353], "test_rot": [352, 353], "test_assem_block_typ": [352, 353], "test_assem_hex_typ": [352, 353], "test_getbindexfromzindex": [352, 353], "test_getelevationboundariesbyblocktyp": [352, 353], "test_snapaxialmeshtoreferenceconservingmassbasedonblockignit": [352, 353], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield": [352, 353], "test_areacheck": [352, 353], "test_updatedetailednden": [352, 354], "test_getsmeardens": [352, 354], "test_getsmeardensitymultiplelin": [352, 354], "test_getsmeardensityedgecas": [352, 354], "test_timenodeparam": [352, 354], "test_gettyp": [352, 354], "test_settyp": [352, 354], "test_homogenizedmixtur": [352, 354], "test_getxstyp": [352, 354], "test_27b_setbugroup": [352, 354], "test_setzeroheight": [352, 354], "test_getvolumefractionswithzeroheight": [352, 354], "test_getvolumefractionwithoutpar": [352, 354], "test_cleardens": [352, 354], "test_removemass": [352, 354], "test_setnumberdens": [352, 354, 355], "test_setmass": [352, 354, 356], "test_gettotalmass": [352, 354], "test_replaceblockwithblock": [352, 354], "test_getwettedperimet": [352, 354], "test_getflowareaperpin": [352, 354], "test_getflowarea": [352, 354], "test_gethydraulicdiamet": [352, 354], "test_adjustuenrich": [352, 354], "test_setloc": [352, 354], "test_setbulimitinfo": [352, 354], "test_gettotalnden": [352, 354], "test_gethmden": [352, 354], "test_getfissilemassenrich": [352, 354], "test_getmicrosuffix": [352, 354], "test_geturaniummassenrich": [352, 354], "test_geturaniumnumenrich": [352, 354], "test_getnumberofatom": [352, 354], "test_getpu": [352, 354], "test_adjustdens": [352, 354], "test_completeinitialload": [352, 354], "test_hascompon": [352, 354], "test_getcomponentnam": [352, 354], "test_getcompon": [352, 354], "test_getcomponentsofshap": [352, 354], "test_getcomponentsofmateri": [352, 354], "test_getcomponentbynam": [352, 354], "test_getsortedcomponentsinsideofcomponentclad": [352, 354], "test_getsortedcomponentsinsideofcomponentduct": [352, 354], "test_getnumcompon": [352, 354], "test_getnumpin": [352, 354], "test_setlinpowbypin": [352, 354], "test_getcomponentareafrac": [352, 354], "test_100_getpinpitch": [352, 354], "test_101_getpitch": [352, 354], "test_102_setpitch": [352, 354], "test_106_getareafract": [352, 354], "test_rotatepin": [352, 354], "test_expandelementaltoisotop": [352, 354], "test_expandallelementalstoisotop": [352, 354], "test_setpitch": [352, 354], "test_setimportantparam": [352, 354], "test_getmfp": [352, 354], "test_consistentmassdensityvolumebetweencoldblockandcoldcompon": [352, 354], "test_consistentmassdensityvolumebetweenhotblockandhotcompon": [352, 354], "test_breakfuelcomponentsintoindividu": [352, 354], "test_pinmgflux": [352, 354], "test_getcomponentsinlinkedord": [352, 354], "test_mergewithblock": [352, 354], "test_getdimens": [352, 354, 355], "test_getplenumpin": [352, 354], "test_haspinpitch": [352, 354], "test_getreactionr": [352, 354, 356], "test_foundreactor": [352, 354], "test_noblueprint": [352, 354], "test_gettotalenergygenerationconst": [352, 354], "test_getfissionenergydepositionconst": [352, 354], "test_getcaptureenergygenerationconst": [352, 354], "test_getneutronenergydepositionconst": [352, 354], "test_getgammaenergydepositionconst": [352, 354], "test_negativevolum": [352, 354, 355], "test_component_typ": [352, 354], "test_coord": [352, 354], "test_block_dim": [352, 354], "test_symmetryfactor": [352, 354, 359], "test_retainst": [352, 354], "test_getpincoord": [352, 354], "test_getpitchhomogeneousblock": [352, 354], "test_getductpitch": [352, 354], "test_getpincenterflattoflat": [352, 354], "test_gridcr": [352, 354], "test_gridnumpinsandloc": [352, 354], "test_gridnotcreatedmultiplemultipl": [352, 354], "test_radii": [352, 354], "test_theta": [352, 354], "test_axi": [352, 354], "test_verifyblockdim": [352, 354], "test_getthetarzgrid": [352, 354], "test_getpitchsquar": [352, 354], "test_getcartesiangrid": [352, 354], "test_heightexpansiondiffer": [352, 354], "test_massfuelheatup": [352, 354], "test_masscladheatup": [352, 354], "test_massductheatup": [352, 354], "test_masscoolheatup": [352, 354], "test_dimensionductheatup": [352, 354], "test_coldmass": [352, 354], "test_massconsist": [352, 354], "test_orient": [352, 354], "getcirclevoiddict": [352, 355], "getcirclefueldict": [352, 355], "test_factori": [352, 355], "test_componentinitializationanddupl": [352, 355], "test_factorybadshapenam": [352, 355], "test_invalidcoolantcomponentassign": [352, 355], "componentcl": [352, 355], "componentmateri": [352, 355], "componentdim": [352, 355], "test_initializecomponentmateri": [352, 355], "test_solid_materi": [352, 355], "test_cmp": [352, 355], "test_nonzero": [352, 355], "test_getcomponentarea": [352, 355], "test_getboundingcircleouterdiamet": [352, 355], "test_component_less_than": [352, 355], "test_fromcompon": [352, 355], "test_preservemassduringthermalexpans": [352, 355], "test_volumeafterclearcach": [352, 355], "test_densityconsist": [352, 355], "test_computevolum": [352, 355], "test_getareacoldtru": [352, 355], "test_getthermalexpansionfactorconservedmassbylinearexpansionperc": [352, 355], "test_thermallyexpand": [352, 355], "test_getcircleinnerdiamet": [352, 355], "test_dimensionthermallyexpand": [352, 355], "test_componentinteractionslinkingbydimens": [352, 355], "test_badcomponentnam": [352, 355], "test_componentinteractionslinkingbysubtract": [352, 355], "test_changenumberdens": [352, 355], "test_fuelmass": [352, 355], "test_theoreticaldensitysett": [352, 355], "tcold": [352, 355, 488], "twarm": [352, 355], "coldouterdiamet": [352, 355], "test_ht9expans": [352, 355], "test_uzrexpans": [352, 355], "test_b4cexpans": [352, 355], "runexpansiontest": [352, 355], "componentmassindependentofinputtemp": [352, 355], "expansionconservationhotheightdefin": [352, 355], "expansionconservationcoldheightdefin": [352, 355], "test_negativearea": [352, 355], "test_getperimet": [352, 355], "dimstotestexpans": [352, 355], "setclassdim": [352, 355], "test_validparamet": [352, 355], "test_updatedim": [352, 355], "test_setmassfrac": [352, 355], "test_setmassfraconcomponentmateri": [352, 355], "test_adjustmassfrac_invalid": [352, 355], "test_adjustmassfrac_u235": [352, 355], "test_adjustmassfrac_u": [352, 355], "test_adjustmassfrac_clear_zr": [352, 355], "test_adjustmassfrac_set_zr": [352, 355], "test_adjustmassfrac_leave_sam": [352, 355], "test_getenrich": [352, 355], "test_finalizeloaddbadjuststd": [352, 355], "inactivenuclid": [352, 356], "elementstoexpand": [352, 356], "test_itercompon": [352, 356], "test_sort": [352, 356], "test_arechildernoftyp": [352, 356], "test_containsatleastonechildoftyp": [352, 356], "test_containsonlychildrenoftyp": [352, 356], "test_namecontain": [352, 356, 380, 387], "test_nucspec": [352, 356], "test_hasflagssubstr": [352, 356], "test_hasflagsnotypespecifi": [352, 356], "test_getboundingcirlceouterdiamet": [352, 356], "test_getparamnam": [352, 356], "test_updatevolum": [352, 356], "test_expandlfp": [352, 356], "test_setchildrenlumpedfissionproduct": [352, 356], "test_requireslumpedfissionproduct": [352, 356], "test_getlumpedfissionproductsifnecessarynullcas": [352, 356], "test_getintegratedmgflux": [352, 356], "test_syncparamet": [352, 356], "blueprintyaml": [352, 356], "test_ord": [352, 356], "test_sum": [352, 356], "test_constituentreport": [352, 356], "test_getfuelmass": [352, 356], "test_getchildrenincludemateri": [352, 356], "test_gethmmass": [352, 356], "test_getfpmass": [352, 356], "test_getminparam": [352, 356], "testflagsa": [352, 356], "testflagsb": [352, 356], "bprime": [352, 356], "test_flagseri": [352, 356], "test_flagconvers": [352, 356], "test_getnumberdensitieswithexpandedfissionproduct": [352, 356], "test_dimensionreport": [352, 356], "test_getatomicweight": [352, 356], "test_containsheavymet": [352, 356], "test_copyparamstochildren": [352, 356], "test_copyparamsfrom": [352, 356], "test_getreactionratedict": [352, 356], "test_constructor": [352, 357], "test_represent": [352, 357], "test_parentreactor": [352, 357], "test_getassembli": [352, 357], "test_updatenumberofcolumn": [352, 357], "test_getnextloc": [352, 357], "test_normalizenam": [352, 357, 361], "test_addlikedict": [352, 357], "test_addlikeattribut": [352, 357], "test_fromstr": [352, 358, 359], "test_fromstringwithnumb": [352, 358], "test_flagsdefinedwithnumb": [352, 358], "test_flagstoandfromstr": [352, 358], "test_tostringalphabet": [352, 358], "test_fromstringstrict": [352, 358], "test_lookup": [352, 358], "test_convertsstringswithnonflag": [352, 358], "test_defaultisfals": [352, 358], "test_str": [352, 359], "test_fromani": [352, 359], "test_baseconstructor": [352, 359], "test_domaintypenul": [352, 359], "test_checkvalidgeomsymmetrycombo": [352, 359], "test_readhexgeomxml": [352, 359], "test_readreactor": [352, 359], "test_asciimap": [352, 359, 397, 417], "test_readasciimap": [352, 359], "test_readtrzgeomxml": [352, 359], "test_trzyamlio": [352, 359], "test_mutabledefaultsnotsupport": [352, 360], "test_writesomeparamstodb": [352, 360], "test_serializer_pack_unpack": [352, 360], "test_parampropertydoesnotconflict": [352, 360], "test_parampropertydoesnotconflictwithnonedefault": [352, 360], "test_getwithoutdefaultraisesparametererror": [352, 360], "test_attemptingtosetparamwithoutsetterfail": [352, 360], "test_sett": [352, 360], "test_settergetterbas": [352, 360], "test_cannotdefineparameterwithsamenam": [352, 360], "test_paramdefinitionscompos": [352, 360], "test_cannotdefineparameterwithsamenameforcollectionsubclass": [352, 360], "test_cannotcreateattrbuteonparametercollectionsubclass": [352, 360], "test_cannotcreateinstanceof_nodefault": [352, 360], "test_cannotcreateinstanceof_undefin": [352, 360], "test_defaultloc": [352, 360], "test_categori": [352, 360], "test_parametercollectionshave__slots__": [352, 360], "scopeparamcollect": [352, 360], "test_oncategori": [352, 360], "test_onloc": [352, 360], "test_compl": [352, 360], "test_makeparametersreadonli": [352, 360], "test_coresfp": [352, 361], "test_factorysortset": [352, 361], "test_getsetparamet": [352, 361], "test_sortchildren": [352, 361], "test_sortassembyr": [352, 361], "test_gettotalparam": [352, 361], "test_geomtyp": [352, 361], "test_getblocksbyindic": [352, 361], "test_getallxssuffix": [352, 361], "test_genblocksbylocnam": [352, 361], "test_setpitchuniform": [352, 361], "test_setb10voloncr": [352, 361], "test_countfuelaxialblock": [352, 361], "test_getfirstfuelblockaxialnod": [352, 361], "test_getmaxassembliesinhexr": [352, 361], "test_getmaxnumpin": [352, 361], "test_addmultiplecor": [352, 361], "test_getreactor": [352, 361], "test_addmorenod": [352, 361], "test_findaxialmeshindexof": [352, 361], "test_findallaxialmeshpoint": [352, 361], "test_findallaxialmeshpoints_wsubmesh": [352, 361], "test_findallazimeshpoint": [352, 361], "test_findallradmeshpoint": [352, 361], "test_findneighbor": [352, 361], "test_getassembliesincircular": [352, 361], "test_getassembliesinhexr": [352, 361], "test_genassembliesaddedthiscycl": [352, 361], "test_getassemblypitch": [352, 361], "test_getnumassemblieswithallringsfilledout": [352, 361], "test_getnumassemblieswithallringsfilledoutbipass": [352, 361], "test_getnumenergygroup": [352, 361], "test_getminimumpercentfluxinfuel": [352, 361], "test_getassemblywithloc": [352, 361], "test_getassemblywithnam": [352, 361], "test_restorereactor": [352, 361], "test_differentnuclidemodel": [352, 361], "test_getsymmetryfactor": [352, 361], "test_getassembliesonsymmetrylin": [352, 361], "test_saveallflux": [352, 361], "test_getfluxvector": [352, 361], "test_getfuelbottomheight": [352, 361], "test_getgridbound": [352, 361], "test_loc": [352, 361], "test_removeassembli": [352, 361], "test_removeassemblynosfp": [352, 361], "test_removeassembliesinr": [352, 361], "test_removeassembliesinringbycount": [352, 361], "test_getnumr": [352, 361], "test_whennoassembli": [352, 361], "test_removeassembliesinringhex": [352, 361], "test_getnozzletyp": [352, 361], "test_createassemblyoftyp": [352, 361], "test_createfreshfe": [352, 361], "test_createassemblyoftypeexpandedcor": [352, 361], "test_getavgtemp": [352, 361], "test_getscalarevolut": [352, 361], "test_ifmissingspatialgrid": [352, 361], "test_pincoordsallblock": [352, 361], "test_nonuniformassem": [352, 361], "test_applythermalexpansion_coreconstruct": [352, 361], "test_updateblockbolheights_dbload": [352, 361], "test_buildmanualzon": [352, 361], "test_buildmanualzonesempti": [352, 361], "test_getnuclidecategori": [352, 361], "test_setpowerifnecessari": [352, 361], "test_findallmeshpoint": [352, 361, 362], "test_getassembliesinsquar": [352, 361], "test_getnuclidecategorieslog": [352, 361], "test_findneighborscartesian": [352, 361], "test_loadrzt": [352, 362], "test_loadrzt_reactor": [352, 362], "test_additem": [352, 363], "test_removeitem": [352, 363], "test_addloc": [352, 363], "test_removeloc": [352, 363], "test_repr": [352, 363], "test_dictionaryinterfac": [352, 363], "test_findzoneitisin": [352, 363], "test_getzoneloc": [352, 363], "test_getallloc": [352, 363], "test_summari": [352, 363], "test_sortzon": [352, 363], "uth": 353, "numblock": 353, "140371197447856": 353, "8660254": 353, "2500": 353, "carestiangrid": 353, "simlutan": 354, "165": 354, "evacu": 354, "pullabl": 354, "magicmock": 354, "mock_captur": 354, "mock_fiss": 354, "mock_method": 354, "__name__": [354, 365, 453, 475, 477, 490, 505], "unshap": 354, "neutronical": 354, "grown": [354, 481], "excess": [354, 413, 415], "veifi": 355, "141592653589793": 355, "demonst": 355, "tutori": [355, 443, 446, 448, 454, 466, 479, 481, 483, 484, 488, 490, 494, 495, 496, 503], "160": 355, "170": [355, 408, 469, 478], "dummycompositeparametercollect": 356, "dummyleafparametercollect": 356, "queryabl": 356, "block_metal_fuel": 356, "component_metal_fuel_fuel": 356, "component_metal_fuel_clad": 356, "450": [356, 465, 475, 488, 494, 495, 503], "component_metal_fuel_bond": 356, "component_metal_fuel_cool": 356, "component_metal_fuel_duct": 356, "block_oxide_fuel": 356, "compost": 356, "pickleabl": 358, "assort": [360, 401], "_writeparam": 360, "signifi": 360, "lifecycl": 360, "accident": [360, 394, 412, 481], "customset": 361, "inputfilepath": 361, "home": [361, 481, 488], "runner": [361, 488], "inputfilenam": [361, 468], "test_root": 361, "maxnumr": 361, "neeed": 361, "getgridbound": 361, "mockgetassembli": 361, "godiva": 362, "heu": 362, "zonetyp": 364, "heavier": 364, "chicken": 364, "egg": [364, 416], "zonenam": [364, 503], "zoneloc": 364, "defint": 364, "consol": 365, "logger": [365, 367, 381, 394, 503, 505], "getlogg": [365, 453, 505], "someexcept": 365, "mpirank": [365, 412], "logdir": 365, "indent": [365, 439, 503], "levelnam": 365, "msgtype": [365, 381], "mangl": 365, "dedupl": 365, "stub": 365, "intlevel": 365, "isstderr": 365, "handleinvalid": [366, 367, 374], "csfile": 366, "databaseset": [366, 368], "globalset": [366, 368, 490], "reportset": [366, 368], "tightcouplingset": [366, 368, 503, 506], "serializetightcouplingset": [366, 368, 372], "tightcouplingsettingdef": [366, 368, 372], "tightcouplingsettingsvalid": [366, 368, 372], "test_inspector": [366, 376], "testinspector": [366, 376, 377], "test_set": [366, 373, 376], "dummysettingplugin1": [366, 376, 378], "dummysettingplugin2": [366, 376, 378], "pluginaddsopt": [366, 376, 378], "testset": [366, 376, 378, 379], "testaddingopt": [366, 376, 378], "testsettings2": [366, 376, 378], "testsettingsutil": [366, 376, 378], "testflaglistset": [366, 376, 378], "testsettingsvalidationutil": [366, 376, 378], "test_settingsio": [366, 376], "settingsfailuretest": [366, 376, 379], "settingsreadertest": [366, 376, 379], "settingsrenametest": [366, 376, 379], "settingswritertest": [366, 376, 379], "mockentrypoint": [366, 376, 379], "settingargstest": [366, 376, 379], "defaultcasetitl": [366, 367], "environmentset": [366, 367], "reverttodefault": [366, 367, 373], "failonload": [366, 367], "loadfrominputfil": [366, 367], "loadfromstr": [366, 367], "initlogverbos": [366, 367], "writetoyamlfil": [366, 367], "getsettingssetbyus": [366, 367], "writetoyamlstream": [366, 367], "updateenvironmentsettingsfrom": [366, 367], "setmoduleverbos": [366, 367], "underlyingtyp": [366, 373], "setvalu": [366, 373], "changedefault": [366, 373], "isdefault": [366, 373], "offdefault": [366, 373], "getcustomattribut": [366, 373], "getdefaultattribut": [366, 373], "renameset": [366, 374], "settingsinputformat": [366, 374], "fromext": [366, 374], "readfromfil": [366, 374], "readfromstream": [366, 374], "writeyaml": [366, 374], "iscorrect": [366, 375], "no_act": [366, 375, 490], "addqueri": [366, 375], "addquerybadlocationwilllikelyfail": [366, 375], "addquerycurrentsettingmaynotsupportfeatur": [366, 375], "hundr": [367, 481], "begun": [367, 503], "setpath": 367, "went": 367, "hoc": [367, 489], "fromfil": 367, "fpath": 367, "usersettingsnam": 367, "settingssetbyus": [367, 374], "writabl": 367, "otherc": 367, "couplingset": 372, "tightcouplingsettingsdict": 372, "coeff": 373, "enforcedopt": 373, "sublabel": 373, "isenviron": 373, "oldnam": [373, 374], "legal": 373, "expir": [373, 374], "subtyp": 373, "serializ": 373, "newdefault": 373, "compund": 373, "gone": [373, 499, 503], "residu": 373, "settings_inst": 374, "dialogu": 375, "imposs": [375, 409, 452], "affirm": 375, "interplai": 375, "correctionsmad": 375, "initiallambda": 375, "versionthi": 375, "versionrequir": 375, "test_queri": [376, 377], "test_overwritesettingscorrectivequeri": [376, 377], "test_changeofc": [376, 377], "test_noncorrectivequeri": [376, 377], "test_callablecorrectioncheck": [376, 377], "test_assignc": [376, 377], "test_createqueryrevertbadpathtodefault": [376, 377], "test_correctcyclestozeroburnup": [376, 377], "test_checkforbothsimpleanddetailedcyclesinput": [376, 377], "test_updateenvironmentsettingsfrom": [376, 378], "test_metadata": [376, 378], "test_addingopt": [376, 378], "test_schemacheckstyp": [376, 378], "test_listsmut": [376, 378], "test_listcoercion": [376, 378], "test_typedetect": [376, 378], "test_cswork": [376, 378], "test_pluginvalidatorsarediscov": [376, 378], "test_pluginset": [376, 378], "test_default": [376, 378], "test_getsettingssetbyus": [376, 378], "test_setmoduleverbos": [376, 378], "test_getfailur": [376, 378], "test_settingisokaytograb": [376, 378], "test_modifi": [376, 378], "test_copyset": [376, 378], "test_copysettingnotdefault": [376, 378], "test_empti": [376, 378], "test_recursivescan": [376, 378], "test_prompt": [376, 378], "test_flaglistset": [376, 378], "test_invalidflaglisttypeerror": [376, 378], "test_validatevers": [376, 378], "test_settingsobjset": [376, 379], "test_loadfromyamlfailsonbadnam": [376, 379], "test_invalidfil": [376, 379], "test_basicsettingsread": [376, 379], "test_readfromfil": [376, 379], "test_renam": [376, 379], "test_collidingrenam": [376, 379], "test_writeshort": [376, 379], "test_writemedium": [376, 379], "test_writeful": [376, 379], "test_writeyaml": [376, 379], "test_errorsettingswrit": [376, 379], "test_commandlineset": [376, 379], "test_cannotloadsettingsafterparsingcommandlineset": [376, 379], "sound": 378, "particuar": 378, "_customschema": 378, "testsetting1": 379, "testsetting2": 379, "testsetting3": 379, "refdirectori": 380, "abspath": 380, "fixturefunct": 380, "expectedfilepath": 380, "actualfilepath": 380, "falseneglist": 380, "mainten": 380, "rebaselin": 380, "accomod": 380, "epsilon": [380, 506], "impl": [380, 453], "rstrip": 380, "whitespac": [380, 416, 452], "parsabl": 380, "presenc": 380, "approv": 380, "clearsinglewarn": [380, 381], "getstdout": [380, 381], "emptystdout": [380, 381], "getstderrvalu": [380, 381], "test_getparamrenam": [380, 383], "test_registerpluginflag": [380, 383], "test_getparamrenamesinvalid": [380, 383], "test_vers": [380, 383], "test_getset": [380, 383], "test_splashtext": [380, 383], "test_splashtextdifferentapp": [380, 383], "test_isstablereleasevers": [380, 383], "test_disablefutureconfigur": [380, 383], "test_getdefaultpluginmanag": [380, 383], "test_overconfigur": [380, 383], "test_main": [380, 383], "test_comparefilessucess": [380, 384], "test_comparefilesfail": [380, 384], "test_comparefilessucceedfalseneg": [380, 384], "test_custom": [380, 385], "test_rank": [380, 386, 390], "test_nonnonedata": [380, 386, 390], "test_isrequesteddetailpoint": [380, 387], "test_en": [380, 387], "test_predistributest": [380, 387], "test_fsearch": [380, 387], "test_fsearch_text": [380, 387], "test_coupleract": [380, 387], "test_storepreviousiterationvalu": [380, 387], "test_storepreviousiterationvalueexcept": [380, 387], "test_isconvergedvalueerror": [380, 387], "test_isconverg": [380, 387], "test_isconvergedruntimeerror": [380, 387], "test_getlistdimens": [380, 387], "test_loadc5g7": [380, 388], "test_parallel": [380, 389, 423], "test_serialgath": [380, 389], "test_mpiit": [380, 389], "test_perfectbalanc": [380, 389], "test_excessprocess": [380, 389], "test_typicalbalanc": [380, 389], "test_runactionsdistributionact": [380, 389], "test_runactionsdistributestateact": [380, 389], "test_diagnosepickleerrortestreactor": [380, 389], "test_disableforexclusivetask": [380, 389], "test_makequeu": [380, 389], "test_basicoperatormpi": [380, 390], "test_primaryexcept": [380, 390], "test_primarycrit": [380, 390], "test_finalizeinteract": [380, 390], "test_distributeset": [380, 390], "test_distributereactor": [380, 390], "test_distributeinterfac": [380, 390], "test_distributest": [380, 390], "test_compileresult": [380, 390], "test_cleanpathmpi": [380, 390], "test_noconflict": [380, 391], "test_withconflict": [380, 391], "test_withconflictsbutsamevalu": [380, 391], "test_conflictsmaintainwithstateretain": [380, 391], "test_runparamsweep": [380, 392], "test_rundatamodel": [380, 392], "test_defineflag": [380, 393], "test_axialexpansionhook": [380, 393], "test_passivedbloadplugin": [380, 393], "test_beforereactorconstructionhook": [380, 393], "test_defineparamet": [380, 393], "test_exposeinterfac": [380, 393], "test_pluginsexposeinterfac": [380, 393], "test_defineblueprintssect": [380, 393], "test_setverbosityfrominteg": [380, 394], "test_setverbosityfromstr": [380, 394], "test_verbosityoutofrang": [380, 394], "test_invalidsetverbositybystr": [380, 394], "test_parentrunlog": [380, 394], "test_getwhitespac": [380, 394], "test_warningreport": [380, 394], "test_warningreportinvalid": [380, 394], "test_closelog": [380, 394], "test_setverbos": [380, 394], "test_setverbositybeforestartlog": [380, 394], "test_callingstartlogmultipletim": [380, 394], "test_concatenatelog": [380, 394], "test_createlogdir": [380, 394], "test_getduplicatesfilt": [380, 394], "test_allowstopdupl": [380, 394], "test_comparefilelin": [380, 395], "test_userpluginsflag": [380, 396], "test_validateuserpluginlimit": [380, 396], "test_registeruserplugin": [380, 396], "test_registeruserpluginsabspath": [380, 396], "test_registeruserpluginsfromset": [380, 396], "test_userpluginonprocesscoreload": [380, 396], "test_userpluginwithinterfac": [380, 396], "test_registerrepeateduserplugin": [380, 396], "_runlog": 381, "shuffler": 382, "factorlist": 382, "coexist": 383, "plugin1": 383, "dummyact": 387, "notif": 387, "fsearch": [387, 397, 439], "coupler": 387, "rag": 387, "c5g7": [388, 483, 484, 494, 495], "numproc": 389, "numobject": 389, "numobj": 389, "imbal": 389, "_diagnosepickleerror": 389, "featurest": 390, "commandlin": [390, 452], "mpi4pi": [390, 423, 449, 481, 482, 483, 509], "failer": 390, "mockopmpi": 390, "unittest": [391, 426, 452], "ipynb": [392, 443, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "inadvert": 392, "successfulli": [393, 505], "carefulli": 394, "startlog": 394, "concat": 394, "flex": [396, 490], "meaningless": 396, "filepath": [397, 439], "sha": [397, 416, 488], "timestepnum": 397, "timenodenum": 397, "picklechain": 397, "a101": 397, "fix_import": 397, "buffer_callback": 397, "pickler": 397, "testpickl": 397, "sob": 397, "classcount": 397, "heirarchi": 397, "trend": 397, "originallist": 397, "listtoprepend": 397, "beginn": 397, "prepend": [397, 398, 416], "cap": 397, "prestr": 397, "4d": 397, "4e": [397, 467, 488], "datalist": 397, "maxnumberofvaluesbeforedelimit": 397, "delimit": 397, "hello": 397, "n4": 397, "minv": 397, "maxv": 397, "xlabel": [397, 415, 466, 467, 472, 477, 491, 492], "ylabel": [397, 415, 466, 467, 472, 477, 491, 492], "xtick": 397, "ytick": 397, "cmap": [397, 474], "figsiz": [397, 466, 474, 477, 492], "friendli": [397, 399], "hyphen": [397, 416], "otherdictionari": 397, "dst": 397, "shutil": [397, 412], "testasciimap": [397, 417, 418], "test_codetim": [397, 417, 438], "codetimingtest": [397, 417, 419], "test_custom_except": [397, 417], "customexceptiontest": [397, 417, 420], "test_densitytool": [397, 417], "testdensitytool": [397, 417, 421], "test_directorychang": [397, 417], "expectedexcept": [397, 417, 422], "testdirectorychang": [397, 417, 422], "test_directorychangersmpi": [397, 417], "revealyourdirectori": [397, 417, 423], "testmpi": [397, 417, 423], "exampleflag": [397, 417, 424], "test_hexagon": [397, 417], "testiter": [397, 417, 426], "test_mathemat": [397, 417], "testmath": [397, 417, 427], "test_outputcach": [397, 417], "testoutputcach": [397, 417, 428], "test_pars": [397, 417], "literalevaltest": [397, 417, 429], "test_pathtool": [397, 417], "pathtoolstest": [397, 417, 430], "test_plot": [397, 417], "testplot": [397, 417, 431], "testpatch": [397, 417, 431], "test_properti": [397, 417], "immutableclass": [397, 417, 432], "immutablepropertytest": [397, 417, 432], "test_reportplot": [397, 417], "testradar": [397, 417, 433], "test_tabul": [397, 417], "testtabulateapi": [397, 417, 434], "testtabulateinput": [397, 417, 434], "testtabulateintern": [397, 417, 434], "testtabulateoutput": [397, 417, 434], "test_textprocessor": [397, 417], "yamlincludetest": [397, 417, 435], "sequentialreadertest": [397, 417, 435], "test_triangl": [397, 417], "test_unit": [397, 417], "testunit": [397, 417, 437], "test_util": [397, 417], "testgeneralutil": [397, 417, 438], "asciilin": [397, 398], "asciioffset": [397, 398], "asciilabelbyindic": [397, 398], "gridcontentstoascii": [397, 398], "gettim": [397, 399], "starttim": [397, 399], "endtim": [397, 399], "startal": [397, 399], "stopal": [397, 399], "getactivetim": [397, 399], "timelin": [397, 399, 503], "movefil": [397, 402], "retrievefil": [397, 402], "getrandomdirectori": [397, 402], "sortedfield": [397, 405], "to_byt": [397, 405], "from_byt": [397, 405], "set_val": [397, 413], "updatepagedepthcolor": [397, 413], "sep": [397, 416, 488], "hline": [397, 416], "headerrow": [397, 416], "lineabov": [397, 416], "linebelow": [397, 416], "linebelowhead": [397, 416], "linebetweenrow": [397, 416], "withheaderhid": [397, 416], "unicode_whitespace_tran": [397, 416], "uspac": [397, 416], "wordsep_r": [397, 416], "wordsep_simple_r": [397, 416], "sentence_end_r": [397, 416], "from_iter": [397, 416], "func": [397, 400, 408, 409, 416, 449], "issuewarningonfindingtext": [397, 439], "raiseerroronfindingtext": [397, 439], "raiseerroronfindingpattern": [397, 439], "searchfortext": [397, 439], "searchforpattern": [397, 439], "searchforpatternonnextlin": [397, 439], "consumelin": [397, 439], "scipat": [397, 439], "decim": [397, 416, 434, 439], "errorcheck": [397, 439], "checkerror": [397, 439], "reimplement": 398, "simplic": [398, 494], "vocabulari": 398, "nestabl": 398, "latticeblueprint": 398, "programat": [398, 493, 503], "linenum": 398, "colnum": 398, "ij": 398, "col": [398, 434], "decrement": [398, 409], "jaggedli": 398, "ridicul": 398, "horizont": [398, 413], "_ijmax": 398, "ijmax": 398, "toward": [398, 416, 477, 481], "timer": [399, 503], "mymethod": 399, "mymethod2": 399, "event_nam": 399, "unfriendli": 399, "unstart": 399, "master": [399, 488], "kill": [399, 453], "inclusion_cutoff": 399, "total_tim": 399, "_timer": 399, "__str__": 399, "base_file_nam": 399, "granular": 400, "inport": 400, "abort": 400, "uninteract": 400, "custommsgend": 400, "matnum": [401, 459], "minden": 401, "sigfig": 401, "mcnp6compat": 401, "mcnplibrari": 401, "mcard": 401, "nuclidevector": 401, "elementexpansionpair": 401, "nuclidbas": 401, "isotopicsubset": 401, "nuclideinventori": 401, "enrichedmassfrac": 401, "fertilemassfrac": 401, "remix": 401, "filestomov": [402, 403], "filestoretriev": [402, 403], "dumponexcept": 402, "outputpath": [402, 403], "cwd": 402, "tell": [402, 453, 468, 490, 494, 503], "stall": [402, 449], "chdir": 402, "race": 403, "importentirepackag": 404, "aenum": 405, "provis": [405, 503], "arithmet": 405, "emul": 405, "unlimit": 405, "myflag": 405, "foo": [405, 417, 424], "baz": [405, 417, 424], "byteord": 405, "snake_cas": [405, 452], "pythagorean": 407, "theorem": 407, "initialcellindex": 407, "orientationnumb": 407, "lst": 408, "lenght": 408, "padwith": [408, 449], "padwithnon": 408, "binaryrow": 408, "valuedict": 408, "hexrow": 408, "1000000": [408, 503], "130": [408, 477, 478], "190": 408, "0x": 408, "although": [408, 445, 503], "forev": 408, "remedi": 408, "dropwhil": 408, "takewhil": 408, "itertool": [408, 413, 470, 471], "pred": 408, "newseq": 408, "summat": [408, 409, 503, 505], "expon": 409, "repeatedlist": 409, "9r": [409, 503], "listtosearch": 409, "indx": 409, "minindex": 409, "searchlist": 409, "searchvalu": 409, "strtofloat": 409, "03231714805651": 409, "03231714805651e": 409, "notat": [409, 495, 503], "scientif": [409, 490], "prevvalu": 409, "inputit": 409, "x0": 409, "y0": 409, "x1": [409, 440], "y1": [409, 440], "targetx": 409, "targeti": 409, "interpi": 409, "interpx": 409, "maxiter": 409, "positiveguess": 409, "tol": 409, "newton": 409, "p2": 409, "p3": 409, "parabola": 409, "x2": [409, 440], "x3": [409, 440], "y2": [409, 440], "y3": [409, 440], "bx": 409, "ap": 409, "cp": [409, 490], "targetk": [409, 503], "bt": 409, "2at": 409, "2a": 409, "slope": [409, 501], "realroot": 409, "newtim": 409, "v1": [409, 449, 453], "v2": [409, 449], "xin": 409, "yin": 409, "xout": 409, "resampl": 409, "realloc": 409, "resmampl": 409, "degreescounterclockwis": 409, "radianscounterclockwis": 409, "ccw": 409, "xr": 409, "yr": [409, 498, 501, 508], "crc": 410, "instantli": 410, "blah": 410, "inpfil": 410, "mccaa": 410, "rmzflx": 410, "outputfound": 410, "outfil": 410, "subprocess": 410, "exepath": 410, "inputpath": 410, "cachedir": 410, "loctoretrieveto": 410, "greedi": 410, "cachedfold": 410, "safeword": 410, "destruct": [410, 499], "teardown": 410, "requestedtyp": 411, "allownon": 411, "matchingnonetyp": 411, "datetim": 411, "pathpart": 412, "unc": 412, "filedescript": 412, "sourcepath": 412, "destinationpath": 412, "path1": 412, "path2": 412, "ioerror": 412, "pathattr": 412, "myclass": 412, "userspecifiedmodul": 412, "copiou": 412, "everyon": [412, 452, 453], "misplac": 412, "net": [412, 499], "rmtree": 412, "matplotlib": [413, 415, 452, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 488, 491, 492, 495], "bewar": [413, 415], "gobbl": [413, 415], "judici": [413, 415], "advis": [413, 415, 503], "skippedcolor": 413, "color": [413, 460, 466, 467, 477, 492, 495], "css": 413, "indefinit": 413, "bare": [413, 453], "cmapnam": 413, "jet": 413, "labelfmt": [413, 461, 476], "3f": 413, "legendmap": 413, "fontsiz": [413, 469, 474, 477], "minscal": 413, "maxscal": 413, "axisequ": 413, "makecolorbar": 413, "cbarlabel": 413, "shufflearrow": 413, "titles": 413, "depthindex": [413, 488], "viewabl": 413, "referencestokeep": 413, "colormap": 413, "pylab_exampl": 413, "show_colormap": 413, "labl": 413, "decript": 413, "legend": [413, 415, 465, 467, 472], "autoscal": 413, "ellips": 413, "patch": [413, 431, 439, 469, 477, 486], "facemap": [413, 464, 478, 479, 484, 486, 496], "typenumassem": 413, "rdylbu": 413, "fig": [413, 461, 465, 467, 469, 470, 471, 474, 475, 477], "galleri": [413, 447, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481], "sliderlabel": 413, "updatefunc": 413, "selecteddepthcolor": 413, "valinit": 413, "slider": 413, "valmin": 413, "valmax": 413, "_event": 413, "newval": 413, "maxassem": 413, "yaxislabel": 413, "plt": [413, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 488, 491, 492, 495], "histogram": 413, "materiallist": 413, "fileformat": 413, "svg": [413, 503], "pictur": [413, 446], "jpg": [413, 503], "xsname": 413, "noshow": 413, "ipython": [413, 495], "u238na": 413, "dependencyact": 414, "properrti": 414, "esenti": 414, "someclass": 414, "mynum": [414, 417, 432], "__doc__": [414, 416], "unlock": [414, 448], "unassign": 414, "dbi": [415, 488], "abscissa": 415, "maxdpa": [415, 501], "chart": [415, 446, 464, 478, 479, 489, 496], "reactornam": 415, "radar": [415, 433], "spider": 415, "xmajortick": 415, "ymajortick": 415, "legendlabel": 415, "tick": 415, "legendslabel": 415, "zval": [415, 474], "datav": 415, "nplot": 415, "ylog": 415, "mit": [416, 434, 445, 453, 481], "licens": [416, 434, 447, 490, 494], "thank": [416, 434], "github": [416, 434, 443, 445, 452, 453, 481, 482, 484, 490, 509], "astanin": [416, 434], "anic": 416, "plain": [416, 434, 451], "sun": 416, "696000": 416, "1989100000": 416, "6371": 416, "5973": 416, "moon": 416, "1737": [416, 486], "mar": 416, "3390": 416, "641": 416, "9891e": 416, "dataclass": 416, "firstrow": [416, 434], "headerless": 416, "sex": 416, "alic": 416, "numalign": 416, "stralign": 416, "colglobalalign": [416, 434], "colalign": [416, 434], "coltyp": 416, "headersglobalalign": [416, 434], "headersalign": [416, 434], "behaviour": 416, "intfmt": 416, "floatfmt": 416, "missingv": 416, "spam": 416, "tablefmt": 416, "rst": [416, 434], "tsv": 416, "tabulateformat": [416, 434], "pseudograph": 416, "9999": 416, "451": 416, "pandoc": [416, 443], "simple_t": 416, "emac": 416, "el": 416, "grid_tabl": 416, "restructuredtext": 416, "42992e1": 416, "429920": 416, "disablenumpars": 416, "grain": 416, "longest": 416, "maxcolwidth": [416, 434], "john": 416, "maxheadercolwidth": [416, 434], "showindex": 416, "rowalign": 416, "psql": 416, "initial_ind": 416, "subsequent_ind": 416, "expand_tab": 416, "replace_whitespac": 416, "fix_sentence_end": 416, "break_long_word": 416, "drop_whitespac": 416, "break_on_hyphen": 416, "tabsiz": 416, "max_lin": 416, "tweak": 416, "_wrap_chunk": 416, "sentenc": [416, 453], "punctuat": 416, "unavoid": 416, "imperfect": 416, "trail": [416, 452], "x0b": 416, "x0c": 416, "em": 416, "dash": 416, "reformat": 416, "paragraph": [416, 451, 453], "expandtab": 416, "__next__": 416, "exhaust": 416, "field_nam": 416, "_asdict": 416, "_replac": 416, "iter1": 416, "iter2": 416, "stopiter": 416, "substitut": [416, 434], "test_hexthird": [417, 418], "test_hexwithhol": [417, 418], "test_hexwithemptyrow": [417, 418], "test_troublesomehexthird": [417, 418], "test_hexfullcornersupspotcheck": [417, 418], "test_hexfullcornersup": [417, 418], "test_hexfullflatsup": [417, 418], "test_hexfullflat": [417, 418], "test_hexsmallflat": [417, 418], "test_flathexbas": [417, 418], "test_method_definit": [417, 419], "test_alternate_usag": [417, 419], "test_property_access": [417, 419], "test_mast": [417, 419], "test_messy_starts_and_stop": [417, 419], "exampleinfomessag": [417, 420], "test_info_decor": [417, 420], "exampleimportantmessag": [417, 420], "test_important_decor": [417, 420], "examplewarnmessag": [417, 420], "test_warn_decor": [417, 420], "examplewarnwhenrootmessag": [417, 420], "test_warn_when_root_decor": [417, 420], "test_expandelementalmassfracstonuclid": [417, 421], "test_expandelementalzeromassfrac": [417, 421], "test_getchem": [417, 421], "test_expandel": [417, 421], "test_applyisotopicsmix": [417, 421], "test_getndensfrommass": [417, 421], "test_getmassfract": [417, 421], "test_calculatenumberdens": [417, 421], "test_getmassingram": [417, 421], "test_normalizenuclidelist": [417, 421], "test_formatmaterialcard": [417, 421], "test_mpiactionfailsonnonexistentpath": [417, 422], "test_except": [417, 422], "test_exception_dis": [417, 422], "test_change_to_nonexisting_fail": [417, 422], "test_change_to_nonexisting_works_forc": [417, 422], "test_temporary_clean": [417, 422], "test_file_retriev": [417, 422], "test_file_retrieval_missing_fil": [417, 422], "test_mpidirectorychang": [417, 423], "test_auto": [417, 424], "test_collision_extens": [417, 424], "test_collision_cr": [417, 424], "test_bool": [417, 424, 434], "test_inclus": [417, 424], "test_bitwis": [417, 424], "test_hash": [417, 424], "test_getitem": [417, 424], "n_fuzzy_draw": [417, 425], "test_hexagon_area": [417, 425], "test_numpositionsinr": [417, 425], "test_rotatedcellcent": [417, 425], "test_rotatedfirstr": [417, 425], "test_rotatefuzzi": [417, 425], "test_positionsuptor": [417, 425], "test_rotatedcellindexerror": [417, 425], "test_rotatedcellorientationerror": [417, 425], "test_indexwithnorot": [417, 425], "test_chunk": [417, 426], "test_split": [417, 426], "test_packingandunpackingbinarystr": [417, 426], "test_packingandunpackinghexstr": [417, 426], "test_sequenceinit": [417, 426], "test_sequ": [417, 426], "test_copysequ": [417, 426], "test_extendsequ": [417, 426], "test_appendsequ": [417, 426], "test_addingsequ": [417, 426], "test_listpivot": [417, 426], "test_arraypivot": [417, 426], "test_average1dwithintoler": [417, 427], "test_average1dwithintoleranceinvalid": [417, 427], "test_converttoslic": [417, 427], "test_efmt": [417, 427], "test_expandrepeatedfloat": [417, 427], "test_findclosest": [417, 427], "test_findnearestvalu": [417, 427], "test_fixthreedigitexp": [417, 427], "test_getfloat": [417, 427], "test_getstepsfromvalu": [417, 427], "test_ismonoton": [417, 427], "test_linearinterpol": [417, 427], "test_minimizescalarfunc": [417, 427], "test_newtonsmethod": [417, 427], "test_parabola": [417, 427], "test_parabolicinterpol": [417, 427], "test_relerr": [417, 427], "test_resamplestepwiseavg0": [417, 427], "test_resamplestepwiseavg1": [417, 427], "test_resamplestepwiseavg2": [417, 427], "test_resamplestepwiseavg3": [417, 427], "test_resamplestepwiseavg4": [417, 427], "test_resamplestepwiseavg5": [417, 427], "test_resamplestepwiseavg6": [417, 427], "test_resamplestepwiseavg7": [417, 427], "test_resamplestepwisesum0": [417, 427], "test_resamplestepwisesum1": [417, 427], "test_resamplestepwisesum2": [417, 427], "test_resamplestepwisesum3": [417, 427], "test_resamplestepwisesum4": [417, 427], "test_resamplestepwisesum5": [417, 427], "test_resamplestepwisesum6": [417, 427], "test_resamplestepwisesum7": [417, 427], "test_resamplestepwiseavgallnon": [417, 427], "test_resamplestepwiseavgonenon": [417, 427], "test_resamplestepwisesumallnon": [417, 427], "test_resamplestepwisesumonenon": [417, 427], "test_resamplestepwiseavgcomplicatednon": [417, 427], "test_resamplestepwiseavgnparrai": [417, 427], "test_resamplestepwiseavgnparrayaverag": [417, 427], "test_rotatexi": [417, 427], "test_hashfil": [417, 428], "test_deletecach": [417, 428], "test_getcachedfold": [417, 428], "test_makeoutputmanifest": [417, 428], "test_retrieveoutput": [417, 428], "test_tryliteralev": [417, 429], "test_parsevalu": [417, 429], "test_separatemoduleandattribut": [417, 430], "test_importcustommodul": [417, 430], "test_moduleandattributeexist": [417, 430], "test_cleanpathnompi": [417, 430], "test_isfilepathnew": [417, 430], "test_isaccess": [417, 430], "test_plotdepthmap": [417, 431], "test_plotassemblytyp": [417, 431], "test_plotblockflux": [417, 431], "test_plothexblock": [417, 431], "test_plotcartesianblock": [417, 431], "test_makeassempatch": [417, 431], "test_retreivingunassignedvalueraiseserror": [417, 432], "test_cannotassignvaluetoimmutableproperti": [417, 432], "test_unlockdoesnotpermitsreassignmentofanimmutableproperti": [417, 432], "test_radar": [417, 433], "test_createplotmetadata": [417, 433], "test_plotaxialprofil": [417, 433], "test_keffvstim": [417, 433], "test_valuevstim": [417, 433], "test_buvstim": [417, 433], "test_movesvscycl": [417, 433], "test_xshistoryvstim": [417, 433], "test_tabulateformat": [417, 434], "test_iterableofempti": [417, 434], "test_iterableofiter": [417, 434], "test_iterableofiterableshead": [417, 434], "test_iterableofiterablesfirstrow": [417, 434], "test_listoflist": [417, 434], "test_listoflistsfirstrow": [417, 434], "test_listoflistskei": [417, 434], "test_dictlik": [417, 434], "test_numpy2d": [417, 434], "test_numpy2dfirstrow": [417, 434], "test_numpy2dkei": [417, 434], "test_numpyrecordarrai": [417, 434], "test_numpyrecordarraykei": [417, 434], "test_numpyrecordarrayhead": [417, 434], "test_listofnamedtupl": [417, 434], "test_listofnamedtupleskei": [417, 434], "test_listofdict": [417, 434], "test_listofuserdict": [417, 434], "test_listofdictskei": [417, 434], "test_listofuserdictskei": [417, 434], "test_listofdictswithmissingkei": [417, 434], "test_listofdictsfirstrow": [417, 434], "test_listofdictswithdictofhead": [417, 434], "test_listofdictswithlistofhead": [417, 434], "test_listofordereddict": [417, 434], "test_listbyt": [417, 434], "test_tightcouplingexampl": [417, 434], "test_aligncolumndecim": [417, 434], "test_aligncolumndecimalwiththousandsepar": [417, 434], "test_aligncolumndecimalwithincorrectthousandsepar": [417, 434], "test_aligncolumnnon": [417, 434], "test_aligncolumnmultilin": [417, 434], "test_aligncellveriticallyonelineonli": [417, 434], "test_aligncellveriticallytopsingletextmultiplepad": [417, 434], "test_aligncellveriticallycentersingletextmultiplepad": [417, 434], "test_aligncellveriticallybottomsingletextmultiplepad": [417, 434], "test_aligncellveriticallytopmultitextmultiplepad": [417, 434], "test_aligncellveriticallycentermultitextmultiplepad": [417, 434], "test_aligncellveriticallybottommultitextmultiplepad": [417, 434], "test_assortedrareedgecas": [417, 434], "test_buildlin": [417, 434], "test_buildrow": [417, 434], "test_format": [417, 434], "test_ismultilin": [417, 434], "test_multilinewidth": [417, 434], "test_normalizetabulardata": [417, 434], "test_typ": [417, 434], "test_visiblewidth": [417, 434], "test_wraptexttocolwidth": [417, 434], "test_plain": [417, 434], "test_plainheaderless": [417, 434], "test_plainmultilineheaderless": [417, 434], "test_plainmultilin": [417, 434], "test_plainmultilinewithlink": [417, 434], "test_plainmultilinewithemptycel": [417, 434], "test_plainmultilinewithemptycellsheaderless": [417, 434], "test_plainmaxcolwidthautowrap": [417, 434], "test_plainmaxcolwidthautowrapswithsep": [417, 434], "test_maxcolwidthsinglevalu": [417, 434], "test_maxcolwidthpadtailingwidth": [417, 434], "test_maxcolwidthhonordisableparsenum": [417, 434], "test_plainmaxheadercolwidthsautowrap": [417, 434], "test_simpl": [417, 434], "test_simplewithseplin": [417, 434], "test_readmeexamplewithsep": [417, 434], "test_simplemultiline2": [417, 434], "test_simplemultiline2withseplin": [417, 434], "test_simpleheaderless": [417, 434], "test_simpleheaderlesswithseplin": [417, 434], "test_simplemultilineheaderless": [417, 434], "test_simplemultilin": [417, 434], "test_simplemultilinewithlink": [417, 434], "test_simplemultilinewithemptycel": [417, 434], "test_simplemultilinewithemptycellsheaderless": [417, 434], "test_github": [417, 434], "test_gridheaderless": [417, 434], "test_gridmultilineheaderless": [417, 434], "test_gridmultilin": [417, 434], "test_gridmultilinewithemptycel": [417, 434], "test_gridmultilinewithemptycellsheaderless": [417, 434], "test_pretti": [417, 434], "test_prettyheaderless": [417, 434], "test_prettymultilineheaderless": [417, 434], "test_prettymultilin": [417, 434], "test_prettymultilinewithlink": [417, 434], "test_prettymultilinewithemptycel": [417, 434], "test_prettymultilinewithemptycellsheaderless": [417, 434], "test_rst": [417, 434], "test_rstwithemptyvaluesinfirstcolumn": [417, 434], "test_rstheaderless": [417, 434], "test_rstmultilin": [417, 434], "test_rstmultilinewithlink": [417, 434], "test_rstmultilinewithemptycel": [417, 434], "test_rstmultilinewithemptycellsheaderless": [417, 434], "test_nodata": [417, 434], "test_emptydata": [417, 434], "test_nodatawithouthead": [417, 434], "test_emptydatawithouthead": [417, 434], "test_intfmt": [417, 434], "test_emptydatawithhead": [417, 434], "test_floatfmt": [417, 434], "test_floatfmtmulti": [417, 434], "test_colalignmulti": [417, 434], "test_colalignmultiwithseplin": [417, 434], "test_columnglobalandspecificalign": [417, 434], "test_headersglobalandspecificalign": [417, 434], "test_colalignorheadersaligntoolong": [417, 434], "test_floatconvers": [417, 434], "test_missingv": [417, 434], "test_missingvalmulti": [417, 434], "test_columnalign": [417, 434], "test_dictlikewithindex": [417, 434], "test_listoflistswithindex": [417, 434], "test_listoflistswithindexwithseplin": [417, 434], "test_listoflistswithsuppliedindex": [417, 434], "test_listoflistswithindexfirstrow": [417, 434], "test_disablenumparsedefault": [417, 434], "test_disablenumparsetru": [417, 434], "test_disablenumparselist": [417, 434], "test_resolveinclud": [417, 435], "test_resolveincludes_stringio": [417, 435], "test_findinclud": [417, 435], "textstream": [417, 435], "test_readfil": [417, 435], "test_readfilewithpattern": [417, 435], "test_gettrianglearea": [417, 436], "test_checkifpointisintriangl": [417, 436], "test_checkifpointisintriangle2": [417, 436], "test_gettc": [417, 437], "test_gettk": [417, 437], "test_gettf": [417, 437], "test_pressure_convert": [417, 437], "test_gettmev": [417, 437], "test_gettemperatur": [417, 437], "test_convertxtopasc": [417, 437], "test_sanitizeangl": [417, 437], "test_getxylineparamet": [417, 437], "test_mergeabledictionari": [417, 438], "test_createformattedstrwithdelimit": [417, 438], "test_capstrlen": [417, 438], "test_list2str": [417, 438], "test_slantsplit": [417, 438], "test_prependtolist": [417, 438], "test_plotmatrix": [417, 438], "test_classesinhierarchi": [417, 438], "test_safecopi": [417, 438], "simplecyclesset": [417, 438], "powerfractionsdetailedsolut": [417, 438], "powerfractionssimplesolut": [417, 438], "cyclenamesdetailedsolut": [417, 438], "cyclenamessimplesolut": [417, 438], "availabilityfactorsdetailedsolut": [417, 438], "availabilityfactorssimplesolut": [417, 438], "steplengthsdetailedsolut": [417, 438], "steplengthssimplesolut": [417, 438], "cyclelengthsdetailedsolut": [417, 438], "cyclelengthssimplesolut": [417, 438], "burnstepsdetailedsolut": [417, 438], "burnstepssimplesolut": [417, 438], "nodespercycledetailedsolut": [417, 438], "nodespercyclesimplesolut": [417, 438], "maxburnstepsdetailedsolut": [417, 438], "maxburnstepssimplesolut": [417, 438], "test_hasburnup": [417, 438], "test_getnodespercycl": [417, 438], "test_getcyclenodefromcumulativestep": [417, 438], "test_getcyclenodefromcumulativenod": [417, 438], "test_getprevioustimenod": [417, 438], "test_getcumulativenodenum": [417, 438], "spot": 418, "chop": 418, "isotopc": 421, "succe": 422, "cohort": 424, "doesnt": 424, "fuzzi": 425, "invari": 425, "uneven": 427, "propereti": 432, "smoke": 433, "userdict": 434, "_align_column": 434, "is_multilin": 434, "multilin": 434, "celltext": 434, "_buildlin": 434, "_buildrow": 434, "_format": 434, "_ismultilin": 434, "_multilinewidth": 434, "_normalizetabulardata": 434, "_type": 434, "_visiblewidth": 434, "_wraptexttocolwidth": 434, "autowrap": 434, "partli": 434, "tail": [434, 505], "disable_parsenum": 434, "honor": [434, 503], "stringio": [435, 439, 484], "nthi": 435, "ncan": 435, "nfile": 435, "nx": 435, "checkifpointisintrinagl": 436, "barycentriccheckifpointisintriangl": 436, "pascal": [437, 441], "dog": 438, "ferret": 438, "r2": [438, 503], "r1": 438, "03333333333333333": 438, "06666666666666667": 438, "10000000000000002": 438, "eedd": 439, "23e10": 439, "23ee10": 439, "23d10": 439, "23e": 439, "213423": 439, "2342": 439, "023": [439, 488], "relativeto": 439, "textiobas": 439, "ruamel": 439, "prohibit": 439, "drawback": 439, "underpin": 439, "alias": 439, "monkei": 439, "stackoverflow": 439, "44910886": 439, "pyyaml": [439, 484], "chunck": 439, "somefil": 439, "occurr": 439, "_searchfor": 439, "inidc": 439, "occurec": 439, "highmem": 439, "rewind": 439, "checkforerror": 439, "killon": 439, "textflag": 439, "vertici": 440, "heron": 440, "coordind": 440, "27s_formula": 440, "barycentr": 440, "totolog": 440, "blogspot": 440, "fahrenheit": 441, "tempunit": 441, "mmhg": 441, "pbar": 441, "patm": 441, "atomspher": 441, "sphinx": [443, 453, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 490, 496], "restructedtext": 443, "repositori": [443, 453], "hyperlink": 443, "virtual": [443, 481], "pip": [443, 445, 481], "graphviz": 443, "latex": [443, 477], "miktex": 443, "imagemagick": 443, "_build": 443, "host": 443, "rsync": 443, "ahv": 443, "intersphinx": 443, "intersphinx_map": 443, "sphinxcontrib": 443, "workflow": [443, 447, 451, 453, 490], "apidoc_extra_arg": 443, "sphx_glr_galleri": 443, "highlight": 443, "neat": 443, "nbsphinx": 443, "nbconvert": 443, "clearoutputpreprocessor": 443, "inplac": 443, "mynotebook": 443, "verb": 444, "joi": 444, "armi": [444, 445, 446, 447, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 482, 487, 489, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509], "sampleentrypoint": 444, "conf_cycle_length": 444, "conf_burn_step": 444, "store_tru": 444, "inputcas": 444, "post_process": 444, "settingsfil": 444, "pythonpath": [444, 482, 490, 509], "codebas": [445, 503], "publicli": 445, "regul": 445, "annot": [445, 477], "fork": 445, "guidanc": [445, 448, 453], "bot": 445, "agreement": 445, "publish": 445, "synopsi": 445, "pyproject": [445, 481, 484, 486, 490], "toml": [445, 481, 484, 486, 490], "superce": [445, 481], "apach": [445, 453, 481, 494], "gpl": [445, 453, 481], "bsd": [445, 453, 481], "restraint": 446, "explor": [446, 457, 464, 479, 489, 491, 493, 496], "spectral": 446, "heavili": [446, 453], "seen": [446, 453, 481, 490, 501, 503, 504], "guid": [446, 447, 481, 482, 494, 495, 509], "environment": [446, 452, 482, 509], "former": 446, "quasistat": 446, "promin": [446, 490], "softwaretest": 446, "orificedoptim": 446, "orific": [446, 498], "alchemylit": 446, "alchemi": 446, "subchan": 446, "launch": 446, "fire": [446, 449, 481], "teach": 447, "audienc": 447, "scientist": 447, "contributor": [447, 481], "black": [447, 477, 484], "ruff": [447, 448, 465, 475, 484, 485, 486], "nake": 447, "envelop": 448, "proprietari": [448, 474, 481, 503], "ship": 448, "perus": 448, "deeper": 448, "feel": [448, 490], "overli": [448, 494], "familiar": [448, 452, 482, 509], "chose": 448, "complain": [448, 484], "guidelin": [448, 452], "iceberg": 448, "cohes": 448, "plug": [448, 481], "Such": [448, 453, 503], "_pm": [448, 490], "plugina": 448, "pluginb": 448, "fear": 449, "mpi_rank": 449, "comm": 449, "proc0": 449, "proc1": 449, "proc2": 449, "proc3": 449, "val3": 449, "farm": 449, "worklist": 449, "_i": [449, 453], "unchunk": 449, "reassembl": 449, "mpi_exampl": 449, "v4": 449, "worklistloadbalanc": 449, "myvalstoadd": 449, "num1": 449, "num2": 449, "allresultsloadbalanc": 449, "allresult": 449, "5f": [449, 451], "transmiss": 449, "surviv": [449, 503], "someinterfac": 449, "interactevernod": 449, "bcastact": 449, "aresult": 449, "someparam": 449, "somefunct": 449, "opt": 449, "someset": 449, "distrib": 449, "extractblockresult": 449, "whatact": 449, "generatemyobject": 449, "depletionmatrix": [449, 499], "burnmatrix": [449, 499], "computation": 449, "reasonbli": 450, "stat": 450, "gprof2dot": 450, "invalu": 450, "graphvi": 450, "pstat": 450, "mystatsfil": 450, "tpng": 450, "mydesiredimagenam": 450, "cornerston": 451, "creategeneralreportcont": 451, "blueprintcont": 451, "getendoflifecont": 451, "imagin": 451, "dicionari": 451, "scene": [451, 491, 494], "__get__": 451, "childcont": 451, "prose": 451, "enclos": 451, "bdesign": 451, "combat": 451, "currentt": 451, "overview": [451, 481, 503], "comprehensive_report": 451, "tablelist": 451, "outputfileextens": [451, 503], "mwt": [451, 494], "0e6": [451, 488], "similarili": 451, "conf_boundari": 451, "conf_neutronics_kernel": 451, "conf_fp_model": 451, "assembly_area": 451, "sup": 451, "beg": 451, "mayb": [451, 490], "overdo": 451, "sole": 451, "neutronicssect": 451, "reportconst": 451, "neutronics_sect": 451, "keff_plot": 451, "thier": 451, "subpart": 452, "402": 452, "nqa": 452, "shall": 452, "clariti": [452, 467, 488], "theme": 452, "concis": [452, 454, 479, 496], "deviat": 452, "justifi": 452, "justif": 452, "consult": 452, "formatt": 452, "amaz": 452, "linter": [452, 484], "setabl": 452, "password": 452, "fragil": 452, "nigh": 452, "debugg": 452, "annoy": 452, "userbas": 452, "camelcas": [452, 481, 486], "hassl": 452, "correlationmatrix": 452, "prefac": 452, "underscor": 452, "_": [452, 482, 488, 493, 506, 509], "pronounc": 452, "acronym": 452, "understood": 452, "expert": 452, "pascalcas": 452, "diskio": 452, "iooper": 452, "renderhtml": 452, "test_": 452, "packagenam": 452, "modulenam": 452, "speed_of_light_in_meters_per_second": 452, "_one_over_pi": 452, "dosomeact": 452, "_dosomeact": 452, "_assembli": 452, "linearheatgenerationr": 452, "_unuseddescript": 452, "repetiti": 452, "harderd": 452, "runnabl": 452, "modern": [452, 481], "laptop": [452, 481], "pyplot": [452, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 488, 491, 492, 495], "sin": 452, "articl": 452, "explain": [452, 453, 505], "zerodivisionerror": 452, "floatingpointerror": 452, "paradigm": 452, "json": 452, "strict": [452, 484, 486], "relic": 452, "fixm": 452, "xxx": 452, "stranger": 453, "voic": 453, "tens": 453, "oh": 453, "chapter": 453, "discourtesi": 453, "busi": 453, "polish": [453, 481], "draft": [453, 485], "thumb": 453, "lint": [453, 484, 485], "somebodi": 453, "bread": 453, "crumb": 453, "breadcrumb": 453, "minor": [453, 483, 486], "conf": 453, "install_requir": 453, "abstractli": 453, "extras_requir": 453, "strictli": 453, "bump": [453, 477], "123": 453, "revv": 453, "nrc": 453, "sanction": 453, "deserv": 453, "admin": [453, 503], "privileg": 453, "ui": 453, "die": 453, "branchverbos": [453, 503, 505], "visibl": 453, "halt": 453, "happili": 453, "silli": 453, "wick": 453, "000": [453, 488, 493], "explanatori": [454, 479, 496], "download": [459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 482, 490, 494, 495, 509], "pervas": 459, "m1": 459, "40090": 459, "35498695e": 459, "40091": 459, "31641456e": 459, "40092": 459, "11832896e": 459, "40094": 459, "13332690e": 459, "40096": 459, "82584320e": 459, "92234": 459, "00000000e": 459, "36147243e": 459, "92236": 459, "92238": 459, "48425449e": 459, "93237": 459, "93238": 459, "94236": 459, "94238": 459, "94240": 459, "94241": 459, "94242": 459, "95241": 459, "95242": 459, "95243": 459, "96242": 459, "96243": 459, "96244": 459, "96245": 459, "96246": 459, "96247": 459, "m2": 459, "11023": 459, "21665718e": 459, "m3": 459, "67941747e": 459, "14028": 459, "78629407e": 459, "14029": 459, "92249968e": 459, "14030": 459, "26729800e": 459, "23000": 459, "71601526e": 459, "24050": 459, "52833976e": 459, "24052": 459, "73245259e": 459, "24053": 459, "90190013e": 459, "24054": 459, "46479253e": 459, "25055": 459, "19738893e": 459, "26054": 459, "09816265e": 459, "26056": 459, "43323879e": 459, "26057": 459, "48571542e": 459, "26058": 459, "97721449e": 459, "28058": 459, "94209415e": 459, "28060": 459, "13328336e": 459, "28061": 459, "92675527e": 459, "28062": 459, "57051128e": 459, "28064": 459, "00190823e": 459, "42092": 459, "13437638e": 459, "42094": 459, "44696641e": 459, "42095": 459, "65358976e": 459, "42096": 459, "01896213e": 459, "42097": 459, "59119235e": 459, "42098": 459, "16005724e": 459, "42100": 459, "62965260e": 459, "74182": 459, "66064130e": 459, "74183": 459, "97674630e": 459, "74184": 459, "23253002e": 459, "74186": 459, "92724649e": 459, "m4": 459, "68566498e": 459, "78937437e": 459, "92406371e": 459, "26832899e": 459, "71822485e": 459, "53202374e": 459, "73955678e": 459, "90995571e": 459, "46679773e": 459, "20080367e": 459, "10149666e": 459, "43847248e": 459, "48692411e": 459, "97882303e": 459, "94448766e": 459, "13420533e": 459, "93076337e": 459, "57178896e": 459, "00516393e": 459, "14018048e": 459, "45058419e": 459, "65981625e": 459, "02548587e": 459, "59492746e": 459, "16100100e": 459, "63341900e": 459, "66361937e": 459, "97835446e": 459, "23597335e": 459, "93044146e": 459, "m5": 459, "m6": 459, "m7": 459, "sphinx_gallery_thumbnail_path": 459, "logo": 459, "_o": [459, 460], "bfuel": [459, 460], "ndensbybas": 459, "den": 459, "join": [459, 477], "minut": [459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "run_blockmcnpmaterialcard": [459, 462], "bcontrol": 460, "490": [460, 462, 484], "run_hexblocktorzconvers": [460, 462], "sphinx_gallery_thumbnail_numb": [461, 468], "175": 461, "thetamesh": 461, "183": [461, 462], "run_hexreactortorz": [461, 462], "146": 462, "gallery_analysi": 462, "sphx_glr_gallery_framework_run_fuelmanag": [464, 478, 479, 496], "assess": 465, "23641": 465, "0189566": 465, "0764606": 465, "553986": 465, "114187": 465, "233214": 465, "0189313": 465, "557207": 465, "234575": 465, "0189824": 465, "0766673": 465, "555588": 465, "0190348": 465, "0768788": 465, "55349": 465, "238847": 465, "0190871": 465, "07709": 465, "550789": 465, "242019": 465, "0191381": 465, "0772959": 465, "54736": 465, "246067": 465, "0191865": 465, "0774913": 465, "543069": 465, "264995": 465, "0193035": 465, "0779642": 465, "52355": 465, "noqa": [465, 475], "e402": [465, 475], "writeinitialvolumefract": 465, "plotvolfracswithcomponenttemp": 465, "uniformtemp": 465, "componentstomodifi": 465, "initialvol": 465, "relativevol": 465, "uniformtempsinc": 465, "subplot": [465, 467, 469, 474, 477], "set_titl": [465, 469, 474, 477], "set_ylabel": [465, 477], "set_xlabel": [465, 474, 477], "361": [465, 478], "run_blockvolumefract": [465, 478], "xyc": [466, 492], "zip": [466, 467, 470, 471, 482, 492, 495, 509], "marker": [466, 492], "174": [466, 478], "run_chartofnuclid": [466, 478], "isoaa_path": [467, 472, 473], "_addflux": 467, "createdummyreactor": 467, "allrat": 467, "ratedata": 467, "ratelabel": 467, "nucrat": 467, "arang": [467, 474, 488, 490], "set_xtick": [467, 474], "set_xticklabel": [467, 474], "axvlin": 467, "set_xlim": [467, 469, 477], "yscale": [467, 472], "406": [467, 478], "run_computereactionr": [467, 478], "demo": [468, 477, 481, 493], "140371142791120": 468, "reftestcartesian": 468, "cosin": 468, "candidateassem": 468, "441": [468, 478], "run_fuelmanag": [468, 478], "mpatch": [469, 477], "patchcollect": [469, 477], "poli": 469, "set_aspect": [469, 477], "set_axis_off": 469, "hex_i": 469, "va": [469, 477], "regularpolygon": 469, "numvertic": 469, "fc": [469, 495], "white": 469, "add_collect": [469, 477], "margin": [469, 481], "bbox": 469, "get_datalim": 469, "transdata": 469, "xmin": 469, "xmax": 469, "set_ylim": [469, 477], "ymax": 469, "run_grids1_hex": [469, 478], "cartesian_grid": 470, "add_subplot": [470, 471], "run_grids2_cartesian": [470, 478], "linspac": [471, 491, 493], "rz_grid": 471, "run_grids3_rzt": [471, 478], "anl33": [472, 503], "xscale": 472, "443": [472, 478], "run_isotx": [472, 478], "inelasticscatt": 473, "n2nscatter": 473, "133": [473, 478], "run_isotxs2_matrix": [473, 478], "max_z": 474, "nummat": 474, "idx": 474, "indexerror": 474, "im": 474, "imshow": 474, "ylgn": 474, "set_ytick": 474, "set_yticklabel": 474, "486": [474, 478], "run_materi": [474, 478], "traceabl": 475, "140371197512528": 475, "buildcas": 475, "buildcompon": 475, "blockdesign": [475, 493], "buildblock": 475, "assemdesign": 475, "buildassembli": 475, "buildgrid": 475, "systemdesign": 475, "buildsystem": 475, "isothermal_temperature_in_c": 475, "508": 475, "5842": 475, "14224": 475, "72644": 475, "0109": 475, "6205": 475, "01420": 475, "cname": 475, "fuelbock": 475, "reflectorblock": 475, "fuelassem": 475, "reflectorassem": 475, "coregrid": 475, "772": [475, 478], "run_programmaticreactordefinit": [475, 478], "140371197017488": 476, "140371304862768": 476, "087": [476, 478], "run_reactorfacemap": [476, 478], "shortcut": 477, "bateman": 477, "plotnuc": 477, "ry": 477, "get_xi": 477, "cx": 477, "get_width": 477, "cy": 477, "get_height": 477, "plotal": 477, "xlim": 477, "ylim": 477, "xp": 477, "yp": 477, "deeppink": 477, "orang": 477, "arrowprop": 477, "shrink": 477, "rxntype": 477, "atan": 477, "180": [477, 494], "grei": 477, "facecolor": 477, "mistyros": 477, "edgecolor": 477, "zoom": 477, "139": 477, "154": 477, "run_transmutationmatrix": [477, 478], "817": 478, "gallery_framework": 478, "megawatt": 480, "kilogram": 480, "mwd": [480, 499, 500], "radionuclid": [480, 499, 501], "fima": [480, 498, 499, 500, 501, 503], "thin": 480, "imped": 480, "wastag": [480, 481, 499, 501, 503], "predomin": 480, "todai": [480, 481], "gass": [480, 494], "twr": [480, 481], "travel": [480, 481], "wave": [480, 481], "breed": [480, 499, 501], "advantag": [480, 481], "fingertip": [481, 494], "profession": 481, "llc": [481, 494], "compani": 481, "hub": 481, "spoke": 481, "specialist": 481, "acquir": 481, "first_time_contributor": 481, "prerequisit": [481, 502], "launcher": 481, "tour": 481, "nuclei": 481, "energet": 481, "induc": [481, 506], "withdraw": 481, "postul": 481, "earthquak": 481, "eniac": 481, "1940": [481, 486], "toss": 481, "experiment": [481, 495], "surprisingli": 481, "port": 481, "specialti": 481, "born": 481, "eclect": 481, "uncoupl": 481, "dispatch": 481, "multiobject": 481, "Its": [481, 490, 503], "labor": 481, "focu": 481, "seamless": 481, "green": [481, 495], "skelet": 481, "schemat": [481, 503], "subchannel": [481, 494, 503], "cfd": [481, 503], "curat": 481, "wall": 481, "orif": [481, 499, 503], "electr": [481, 508], "creativ": [481, 494], "graduat": 481, "undergradu": 481, "greatli": [481, 483, 484], "uncommon": 481, "tedium": 481, "fftf": [481, 503], "perfect": 481, "wing": 481, "seattl": 481, "mission": 481, "intertwin": 481, "secreci": 481, "risk": 481, "entiti": 481, "hypothes": 481, "worldwid": 481, "shakedown": 481, "fund": 481, "predominantli": 481, "microsoft": 481, "flavor": 481, "realiz": 481, "mail": 481, "broadli": 481, "phenix": 481, "bf": 481, "acceler": 481, "stuck": 481, "trademark": 481, "holder": 481, "copyright": [481, 494], "2024": [481, 485, 486, 488, 503], "complianc": [481, 494], "warranti": [481, 494], "touran": 481, "nichola": 481, "2017": 481, "518": 481, "526": 481, "eng": 481, "016": 481, "glossari": 481, "python3": [482, 509], "pip3": [482, 509], "vv": [482, 509], "navig": [482, 509], "venv": [482, 497, 509], "deactiv": [482, 503, 509], "bat": [482, 509], "sudo": [482, 509], "apt": [482, 509], "libopenmpi": [482, 509], "ssh": [482, 509], "click": [482, 488, 503, 509], "bashrc": [482, 509], "____": [482, 488, 493, 509], "__": [482, 488, 493, 509], "congrat": [482, 509], "wxpython": [482, 509], "websit": [482, 509], "2021": [483, 484], "vestigi": 483, "detailassemsbybolloc": 483, "materialclassnam": 483, "armitestbas": 483, "dumplocationsnapshot": 483, "obviat": 483, "redund": [483, 484], "isannular": 483, "doth": [483, 503], "armiabsdirfromnam": 483, "delat": 483, "addcompon": 483, "constist": 483, "latticefil": 483, "diment": 483, "pympler": 483, "demot": 483, "2023": 484, "1383": 484, "getmasterc": 484, "setmasterc": 484, "1399": 484, "1336": 484, "1349": 484, "1345": 484, "1355": 484, "1335": 484, "1395": 484, "sha1": 484, "1334": 484, "1409": 484, "gh": 484, "1341": 484, "avgfueltemp": [484, 499], "1362": 484, "1347": 484, "1396": 484, "_getnuctemphelp": 484, "1363": 484, "_processinclud": 484, "1333": 484, "1342": 484, "1280": 484, "1296": 484, "1288": 484, "1294": 484, "1265": 484, "1320": 484, "1183": 484, "1299": 484, "1277": 484, "drastic": 484, "1282": 484, "1275": 484, "density3": 484, "1163": 484, "1274": 484, "hcfcoretyp": 484, "1179": 484, "1248": 484, "1239": 484, "assemflagstoskipaxialexpans": 484, "1235": 484, "1204": 484, "1219": 484, "1218": 484, "1227": 484, "dctype": 484, "1228": 484, "1226": 484, "1229": 484, "createrepresentativeblocksfromexistingblock": 484, "1217": 484, "priorit": 484, "1237": 484, "1230": 484, "1238": 484, "1256": 484, "1257": 484, "1258": 484, "1270": 484, "1213": 484, "1216": 484, "1206": 484, "1225": 484, "1062": 484, "froze": 484, "1035": 484, "955": 484, "962": 484, "4614": [484, 492], "998": 484, "overhaul": 484, "loosecoupl": 484, "1033": 484, "c2n1": 484, "952": 484, "959": 484, "fuelcladlock": [484, 499], "1038": 484, "1022": 484, "1047": 484, "1042": 484, "1086": 484, "1098": 484, "uniformmeshconvert": 484, "mapper": 484, "1108": 484, "1165": 484, "cyclesskiptightcouplinginteract": 484, "referenceblockaxialmesh": [484, 501], "980": 484, "deadelin": 484, "barrier": 484, "1046": 484, "1067": 484, "1118": 484, "992": 484, "1168": 484, "1129": 484, "magnessium": 484, "1126": 484, "1128": 484, "1131": 484, "1150": 484, "1149": 484, "1199": 484, "1178": 484, "1185": 484, "2022": 484, "coveragerc": [484, 486], "924": 484, "932": 484, "922": [484, 488, 494], "943": 484, "942": 484, "fastflux": [484, 494, 499], "_swapfluxparam": 484, "665": 484, "settingsrul": 484, "872": 484, "__repr__": 484, "stationaryblock": 484, "stationaryblockflag": [484, 503], "isoxx": 484, "getreac": 484, "rotatepin": [484, 486], "855": 484, "_applythermalexpans": 484, "completeinitiaload": 484, "secur": 484, "alert": 484, "530": 484, "546": 484, "558": 484, "uml": 484, "weren": 484, "550": 484, "557": 484, "hint": 484, "540": 484, "507": 484, "534": 484, "solidifi": 484, "stake": 484, "clarif": 484, "anl116": [484, 503], "multii": 484, "bugfix": 484, "_copyinputshelp": 485, "1416": 485, "1412": 485, "functool": 485, "1466": 485, "incorrectli": 485, "1614": 485, "mandat": 485, "1419": 485, "1438": 485, "downgrad": 485, "polici": 485, "1444": 485, "tbd": 486, "1891": 486, "1813": 486, "ingest": 486, "1811": 486, "1842": 486, "1858": 486, "_rotatepin": 486, "1859": 486, "1846": 486, "1899": 486, "1870": 486, "1945": 486, "1927": 486, "1963": 486, "1887": 486, "1835": 486, "1912": 486, "1895": 486, "prepsearch": 486, "1845": 486, "skippingxsgen_buchangedlessthantoler": 486, "1881": 486, "1934": 486, "buildeqringschedul": 486, "1928": 486, "1844": 486, "doubleresolut": 486, "1951": 486, "assemblylist": 486, "transpos": 486, "1937": 486, "doseresultsmapp": 486, "1952": 486, "mpitaskspernod": 486, "numprocessor": [486, 488, 493, 494, 495], "1958": 486, "syndbafterwrit": 486, "1968": 486, "1831": 486, "1824": 486, "permissionerror": 486, "1857": 486, "1853": 486, "thkernel": [486, 503], "1855": 486, "1828": 486, "1883": 486, "1852": 486, "1925": 486, "_checkparamconsist": 486, "axialunitgrid": 486, "1809": 486, "1861": 486, "1665": 486, "1425": 486, "1689": 486, "1729": 486, "1750": 486, "1745": 486, "1726": 486, "1717": 486, "1796": 486, "1650": 486, "1651": 486, "allpositionsinthird": 486, "1655": 486, "getallnuclidesin": 486, "plottriangleflux": 486, "1656": 486, "dochelp": 486, "1662": 486, "convertdatabas": 486, "convertdb": 486, "1658": 486, "buildcommand": 486, "1773": 486, "1671": 486, "extran": 486, "armiojbect": 486, "1667": 486, "getmaxuraniummassenrich": 486, "getpufrac": 486, "getpumass": 486, "getpun": 486, "getzrfrac": 486, "printdens": 486, "rditernum": 486, "1704": 486, "outsidefuelr": 486, "outsidefuelringfluxfr": 486, "doorificedth": 486, "1706": 486, "1659": 486, "_expandcycleandtimenodearg": 486, "1766": 486, "1090": 486, "1649": 486, "1691": 486, "1653": 486, "1751": 486, "1771": 486, "1786": 486, "maco": [486, 490], "1713": 486, "1646": 486, "1770": 486, "1692": 486, "1670": 486, "cadenc": 487, "v0": 487, "lt": [488, 492, 493], "afci": [488, 490, 493, 494, 497], "haleu": [488, 494], "tru": [488, 494, 503], "fv": 488, "az1106": 488, "fri": 488, "oct": 488, "e10c9b6de9": 488, "29f959e5a4": 488, "5904530cb2": 488, "fuelmanag": [488, 494], "622957b035": 488, "mw": [488, 493, 498, 499, 501], "411": [488, 494, 495], "184": 488, "9995": 488, "140414092390064": 488, "gp": [488, 493], "006": [488, 493], "999999999998449e": [488, 493], "597": [488, 493, 494], "cr52": 488, "si29": 488, "cr53": 488, "fe58": 488, "mo94": 488, "ni60": 488, "si28": 488, "ni62": 488, "si30": 488, "mo92": 488, "cr50": 488, "mo96": 488, "mo98": 488, "fe57": 488, "ni64": 488, "ni58": 488, "ni61": 488, "cr54": 488, "mo100": 488, "mo97": 488, "helic": [488, 494], "dodecagon": 488, "a0005": 488, "011": 488, "056": 488, "a0004": 488, "045": [488, 503], "a0010": 488, "010": 488, "051": 488, "a0016": 488, "057": 488, "a0003": 488, "007": 488, "a0009": 488, "008": 488, "040": 488, "a0015": 488, "046": 488, "a0021": 488, "052": 488, "a0027": 488, "058": 488, "a0002": 488, "a0008": 488, "029": 488, "a0014": 488, "035": 488, "a0020": 488, "041": 488, "a0026": 488, "047": 488, "a0033": 488, "053": 488, "a0039": 488, "059": 488, "a0007": 488, "018": 488, "a0013": 488, "024": 488, "a0019": 488, "030": 488, "a0025": 488, "036": 488, "a0032": 488, "042": 488, "a0038": 488, "048": 488, "a0045": 488, "054": 488, "a0000": 488, "fifth": 488, "fifthassem": 488, "drill": 488, "a0006": 488, "b0006": 488, "913110": 488, "7780886302": 488, "1615298013245032": 488, "e6": 488, "630279585150355": 488, "press": 488, "5940e": 488, "b0000": 488, "impt": [488, 493, 505], "271": [488, 494], "6029": [488, 494], "6086118601525807": 488, "447": [488, 494], "6962": [488, 494], "6996347645979837": 488, "0466500": 488, "0455115": 488, "808": [488, 494], "8119863398379357": 488, "0559000": 488, "0561758": 488, "148007667250084": 488, "8888": [488, 494], "8931849738217292": 488, "0808": [488, 494], "08119863398379355": 488, "995619013690193": 488, "787506681749962": 488, "3940000": 488, "3959438": 488, "142": [488, 494], "2160000": 488, "1772467": 488, "midplan": 488, "peakpow": [488, 490], "1e6": [488, 490, 493], "mgfluxbas": [488, 490], "setfakepow": [488, 490], "linalg": [488, 490], "fuelflag": [488, 490], "603": 488, "6363986253243": 488, "3949368453772478": 488, "sodiumbefor": 488, "2f": [488, 491], "sodiumaft": 488, "20241025183847863607": 488, "c00n01": 488, "databaseloc": 488, "dbo": 488, "fro": 488, "909142": 488, "5216630063": 488, "lucki": 488, "neutronicskernel": [488, 503], "brand": 488, "hopefulli": 488, "readi": 490, "shell": [490, 493], "proce": [490, 503], "my_armi_project": 490, "fluxsolv": 490, "thermalsolv": 490, "readm": 490, "quickstart": 490, "exampleapp": 490, "shortli": 490, "mixabl": 490, "__version__": 490, "armi_vers": 490, "myapp_vers": 490, "dummyphysicsplugin": 490, "cobra": 490, "cacophoni": 490, "subphys": 490, "conf_vers": 490, "setversioninset": 490, "fluxinterfac": 490, "thermalinterfac": 490, "facet": 490, "boiler": 490, "myappvers": 490, "nasti": 490, "conf_inlet_temperatur": 490, "inletinc": 490, "conf_outlet_temperatur": 490, "outletinc": 490, "520": 490, "weav": 490, "administr": 490, "gut": 490, "cloud": 490, "tini": 490, "dummyflux": 490, "fuelblock": 490, "topfuelz": 490, "bottomfuelz": 490, "coremidplan": 490, "told": 490, "q": 490, "c_p": 490, "dummyth": 490, "runthermalhydraul": 490, "massflow": 490, "computeidealizedflow": 490, "computeaxialcoolanttemperatur": 490, "tempavg": 490, "coolantprop": 490, "massflowr": 490, "qdot": 490, "mdot": 490, "thcoolantinlett": [490, 498, 499], "thcoolantoutlett": [490, 498, 499], "thcoolantaveraget": [490, 499], "phenomen": 490, "lovingli": 490, "whack": 490, "slash": 490, "252": 490, "materialnamespaceord": [490, 503], "vizual": 490, "510": [490, 503], "lighter": 490, "finicki": 490, "sublass": [490, 506], "userpluginexampl": 490, "userplugin0": 490, "pluginz": [490, 503], "userplugin1": 490, "userplugin2": 490, "thermomechan": 491, "density500": 491, "500c": [491, 504], "006270676074462742": 491, "8752281279010555": 491, "11850119602448178": 491, "l_0": [491, 507], "4f": 491, "0471": 491, "inlin": 491, "uo_2": 491, "creep": 491, "recal": [492, 495], "amu": 492, "nucsbytyp": 492, "4706": 492, "043929425": 492, "u215": 492, "150262e": 492, "00000000000e": 492, "000000e": 492, "u216": 492, "216": 492, "160240e": 492, "50000000000e": 492, "u217": 492, "170244e": 492, "60000000000e": 492, "u218": 492, "218": 492, "180235e": 492, "u219": 492, "219": 492, "190249e": 492, "u220": 492, "220": 492, "200247e": 492, "11110000000e": 492, "u221": 492, "210264e": 492, "u222": 492, "222": 492, "220261e": 492, "70000000000e": 492, "u223": 492, "223": 492, "230277e": 492, "80000000000e": 492, "u224": 492, "224": 492, "240276e": 492, "40000000000e": 492, "u225": 492, "225": 492, "250294e": 492, "90000000000e": 492, "u226": 492, "260293e": 492, "68000000000e": 492, "u227": 492, "227": 492, "270312e": 492, "u228": 492, "228": 492, "280314e": 492, "46000000000e": 492, "u229": 492, "229": 492, "290335e": 492, "48000000000e": 492, "u230": 492, "230": 492, "300339e": 492, "74787200000e": 492, "u231": 492, "231": 492, "310363e": 492, "62880000000e": 492, "u232": 492, "320372e": 492, "17427219965e": 492, "330396e": 492, "02354704590e": 492, "340410e": 492, "74722532676e": 492, "400000e": 492, "u235m": 492, "u23f": 492, "56000000000e": 492, "236": 492, "360456e": 492, "39063206325e": 492, "u237": 492, "370487e": 492, "83372800000e": 492, "380508e": 492, "40996345254e": 492, "927420e": 492, "390543e": 492, "40700000000e": 492, "u240": 492, "400566e": 492, "07600000000e": 492, "u241": 492, "410603e": 492, "inf": [492, 506], "u242": 492, "420629e": 492, "00800000000e": 492, "u243": 492, "243": 492, "430674e": 492, "u244": 492, "244": 492, "440679e": 492, "u245": 492, "245": 492, "450708e": 492, "u246": 492, "246": 492, "460702e": 492, "li7": 492, "016004e": 492, "li07": 492, "241000e": 492, "01600439548": 492, "92410004": 492, "940038e": 492, "li3": 492, "030775e": 492, "li03": 492, "li4": 492, "027185e": 492, "li04": 492, "li5": 492, "012538e": 492, "li05": 492, "70924971603e": 492, "015123e": 492, "li06": 492, "590000e": 492, "li8": 492, "022488e": 492, "li08": 492, "39900000000e": 492, "li9": 492, "026789e": 492, "li09": 492, "78300000000e": 492, "li10": 492, "003548e": 492, "li11": 492, "104380e": 492, "75000000000e": 492, "li12": 492, "205378e": 492, "li13": 492, "306117e": 492, "lielement": 492, "standardweight": 492, "940037501798687": 492, "fullfactori": 493, "powermodif": 493, "tracer": 493, "0002": 493, "0003": 493, "10000000": 493, "40000000": 493, "70000000": 493, "100000000": 493, "queu": 493, "cladthicknessmodifi": 493, "componentdesign": 493, "cladmodif": 493, "0004": 493, "inde": [493, 503], "a6": 493, "8250000000000001": 493, "8500000000000001": 493, "875": 493, "cyclelengthmod": 493, "conclus": 493, "ran": 493, "loadsuit": 493, "parametr": 493, "regress": 493, "lastli": 494, "lieu": 494, "crazi": 494, "hotter": 494, "710": 494, "interstiti": [494, 503], "punch": 494, "derivedcompon": 494, "unclad": 494, "breviti": 494, "block_shield": [494, 503], "block_reflector": 494, "777": 494, "block_control": 494, "block_plenum": [494, 503], "88888": 494, "overlai": [494, 503], "191": 494, "paper": 494, "fuel_block": 494, "ic_x": 494, "weirdest": 494, "plena": 494, "trade": 494, "153": 494, "columnar": 494, "307": 494, "370": 494, "efpd": 494, "momentarili": 494, "sampleshuffl": 494, "frontend": 494, "fluenc": [494, 499], "0e23": 494, "violat": [494, 499], "shuffleparamet": 494, "cyclesecond": 494, "seconds_per_dai": 494, "peakfluenc": 494, "fastfluenc": [494, 499], "peakflux": 494, "philosophi": 494, "mistak": [494, 503], "nsc": 495, "00e": 495, "21e": 495, "50e": 495, "80e": 495, "40e": 495, "30e": 495, "63e": 495, "90e": 495, "16e": 495, "05e": 495, "225e": 495, "622e": 495, "70e": 495, "35e": 495, "78e": 495, "apear": 495, "block_uo2": 495, "8190": 495, "fuel_gap_1": 495, "clad_zr": 495, "8360": 495, "9500": 495, "fuel_gap_2": 495, "aluminum": 495, "clad_al": 495, "9700": 495, "0800": 495, "guide_tube_moder": 495, "6800": 495, "fission_chamber_guide_tub": 495, "fission_chamber_mod": 495, "332": 495, "block_mox": 495, "ml": 495, "mm": 495, "mh": 495, "block_mod": 495, "alongsid": 495, "said": [495, 503], "genreport": [495, 503], "fiddl": 495, "yellow": 495, "red": 495, "xi": [495, 506], "yi": 495, "zi": 495, "reftestbas": 497, "powerdecai": [498, 499, 501], "decayheatcalctimesinsecond": 498, "arealpd": [498, 499, 505], "pct": 498, "bulimit": [498, 499], "chargebu": 498, "chargefi": 498, "chargetim": 498, "dust": 498, "dayssincelastmov": 498, "kinf": [498, 499, 501], "maxdpapeak": 498, "nummov": [498, 501], "detailednden": [498, 499, 501], "fi": [498, 499], "interf": [498, 499], "detailednuckei": [498, 499, 501], "unwis": 498, "crcriticalfract": 498, "crcurrentelev": 498, "crinsertedelev": 498, "crrodlength": 498, "crwithdrawnelev": 498, "withdrawn": 498, "thdeltapnograv": 498, "graviti": 498, "thdeltappump": 498, "rise": [498, 499, 501], "thdeltaptot": [498, 499], "thmassflowr": [498, 499], "thlocaldtout": [498, 499], "thlocaldtoutfuel": [498, 499], "thorificezon": [498, 499], "dischargetim": 498, "hcf": [498, 501, 503], "azimesh": 498, "radmesh": 498, "burnupmwdperkg": [499, 500], "fissilefract": 499, "moleshmbol": 499, "masshmbol": [499, 500], "moleshmbolbypin": 499, "moleshmnow": 499, "newdpa": 499, "accru": 499, "percentbubypin": 499, "percentbumax": 499, "percentbumaxpinloc": 499, "percentbumin": 499, "cycleaverageburnmatrix": 499, "bugroupnum": 499, "burat": [499, 500], "buratepeak": 499, "detaileddpa": [499, 501], "detaileddpapeak": 499, "detaileddpar": 499, "displacementx": 499, "displacementi": 499, "heliuminb4c": 499, "powerrx": 499, "nhmatbol": 499, "axialexptargetcompon": 499, "withregard": 499, "eqregion": 499, "eqcascad": 499, "cascad": [499, 503], "xstypenum": 499, "rxfueldensitycoeffpermass": 499, "\u03b4k": [499, 501], "rxfueltemperaturecoeffpermass": 499, "rxfuelvoidedtemperaturecoeffpermass": 499, "rxcladdensitycoeffpermass": 499, "rxcladtemperaturecoeffpermass": 499, "rxstructuredensitycoeffpermass": 499, "rxstructuretemperaturecoeffpermass": 499, "rxcoolantdensitycoeffpermass": 499, "rxcoolanttemperaturecoeffpermass": 499, "rxfueldensitycoeffpertemp": [499, 501], "rxfueldopplercoeffpertemp": [499, 501], "rxfuelvoideddopplercoeffpertemp": [499, 501], "rxfueldopplerconst": [499, 501], "rxfuelvoideddopplerconst": [499, 501], "rxstructuredopplerconst": [499, 501], "rxcladdopplerconst": [499, 501], "rxfueltemperaturecoeffpertemp": [499, 501], "rxfuelvoidedtemperaturecoeffpertemp": [499, 501], "rxcladdensitycoeffpertemp": [499, 501], "rxcladdopplercoeffpertemp": [499, 501], "rxcladtemperaturecoeffpertemp": [499, 501], "rxstructuredensitycoeffpertemp": [499, 501], "rxstructuredopplercoeffpertemp": [499, 501], "rxstructuretemperaturecoeffpertemp": [499, 501], "rxcoolantdensitycoeffpertemp": [499, 501], "rxcoolanttemperaturecoeffpertemp": [499, 501], "reliabl": 499, "axextennodeheight": 499, "blockbeta": 499, "blockf": 499, "breedratio": 499, "fissiledestroi": 499, "fissilebefor": 499, "substep": [499, 503], "fissileaft": 499, "cladacci": 499, "\u00b5m": [499, 501], "convratio": 499, "crwastag": 499, "acci": 499, "cyclicnerr": 499, "intrinsicsourc": 499, "intrinsicsourcedecai": 499, "mchan": 499, "mreg": 499, "newdpapeak": 499, "percentbupeak": 499, "powershapedelta": 499, "axmesh": 499, "adjmgflux": 499, "lastmgflux": 499, "mgfluxgamma": 499, "mggammasrc": 499, "gammasrc": 499, "mgfluxsk": 499, "pinmgfluxesadj": 499, "naxialseg": 499, "pinmgfluxesgamma": 499, "axialpowerprofil": 499, "axialpowerprofileneutron": 499, "axialpowerprofilegamma": 499, "betad": 499, "chid": 499, "linpow": 499, "unavail": 499, "linpowbypinneutron": 499, "linpowbypingamma": 499, "reactionr": 499, "reactionstodb": 499, "pointsedgefastfluxfr": 499, "100kev": 499, "pointsedgedpa": 499, "pointsedgedpar": 499, "cornerfastflux": 499, "pointscornerfastfluxfr": 499, "pointscornerdpa": 499, "pointscornerdpar": 499, "ratebal": 499, "rateextsrc": 499, "ratefisab": 499, "ratefissrc": 499, "rateleak": 499, "leak": 499, "rateparasab": 499, "parasit": 499, "fertil": [499, 501], "rateprodnet": 499, "ratescatin": 499, "ratescatout": 499, "capturepowerfrac": 499, "fluxadj": 499, "fluxadjpeak": 499, "pdensdecai": 499, "fertilebonu": 499, "fisden": 499, "fisdenshom": 499, "fluxgamma": 499, "fluxpeak": 499, "medabs": 499, "medfis": 499, "medflx": 499, "pdensgamma": 499, "pdensneutron": 499, "ppden": 499, "ppdensgamma": 499, "rateab": 499, "fisson": 499, "ratecap": 499, "rateprodn2n": 499, "ratefi": 499, "rateprodfi": 499, "detaileddpathiscycl": 499, "detaileddpapeakr": 499, "dpapeakfromflu": 499, "enrichmentbol": 499, "fastfluxfr": 499, "pdensgener": 499, "gasreleasefract": 499, "bondremov": [499, 503], "cladwastag": 499, "totalcladstrain": 499, "diametr": 499, "axialgrowthpct": 499, "growth": [499, 501, 503], "fppeakfueltemp": 499, "fpavefueltemp": 499, "pressurelosscoeff": 499, "hardwar": 499, "thhotchannelcladmidwallt": 499, "midwal": 499, "thhotchannelheattransfercoeff": 499, "film": 499, "thhotchannelcladodt": 499, "thhotchannelcladidt": 499, "thhotchannelfuelodt": 499, "thhotchannelfuelcenterlinet": 499, "centerlin": 499, "th0sigmacladodt": 499, "th2sigmacladodt": 499, "th3sigmacladodt": 499, "th0sigmacladidt": 499, "th2sigmacladidt": 499, "th3sigmacladidt": 499, "thdilationpressur": 499, "dilat": 499, "thtfuelcl": 499, "thtfuelod": 499, "thaveragecladodt": 499, "thaveragecladidt": 499, "thaveragecladtemp": 499, "thaveragegaptemp": 499, "thaverageducttemp": 499, "thcoolantstatict": 499, "thhotchanneloutlett": 499, "thcorntemp": 499, "degc": 499, "thedgetemp": 499, "thhotchannel": 499, "pinnum": 500, "zzzaaa": 501, "zzz": 501, "maxassemnum": [501, 508], "crmostvaluableprimaryrodloc": 501, "crmostvaluablesecondaryrodloc": 501, "crworthrequiredprimari": 501, "crworthrequiredsecondari": 501, "crtransientoverpowerworth": 501, "critsearchslop": 501, "doublingtim": 501, "fissilemass": 501, "heavymetalmass": 501, "lastkeff": 501, "loadpaddpaavg": 501, "loadpaddpapeak": 501, "maxcladfcci": 501, "maxgriddpa": 501, "minutessincestart": 501, "peakgriddpaat60year": 501, "totalintrinsicsourc": 501, "totalintrinsicsourcedecai": 501, "thmaxdeltappump": 501, "thmaxdilationpressur": 501, "thoutlettempid": 501, "pergram": 501, "medabscor": 501, "medfluxcor": 501, "medsrccor": 501, "pkflux": 501, "maxdetaileddpapeak": 501, "maxflux": 501, "adjweightedfissrc": 501, "maxdetaileddpathiscycl": 501, "dpafullwidthhalfmax": 501, "elevationofaclp3cycl": 501, "elevationofaclp7cycl": 501, "rxswing": 501, "maxbuf": 501, "maxbui": 501, "peakkeff": 501, "fastfluxfravg": 501, "leakagefractot": 501, "leakagefracplanar": 501, "leakagefracaxi": 501, "maxpden": 501, "maxpd": 501, "bred": 501, "betacompon": 501, "betadecayconst": 501, "promptneutrongenerationtim": 501, "promptneutronlifetim": 501, "rxfuelaxialexpansioncoeffpertemp": 501, "rxfuelaxialexpansioncoeffperperc": 501, "rxgridplateradialexpansioncoeffpertemp": 501, "rxaclpradialexpansioncoeffpertemp": 501, "rxcontrolroddrivelineexpansioncoeffpertemp": 501, "drivelin": 501, "rxcorewidecoolantvoidworth": 501, "rxspatiallydependentcoolantvoidworth": 501, "boeckeff": 501, "boec": 501, "maxcyclicnerr": 501, "breedingratio": 501, "convratiocor": 501, "absperfiscor": 501, "axialexpansionperc": 501, "fisfrac": 501, "fisratecor": 501, "infin": [501, 506], "refkeff": 501, "loos": 502, "resus": 503, "block_nam": 503, "erron": 503, "excerpt": [503, 505], "003454": 503, "detailassemlocationsbol": 503, "freshfeedtyp": 503, "refsmallreactor": 503, "moduleverbos": [503, 505], "palett": 503, "warrant": 503, "brush": 503, "multiphys": 503, "detailassemnum": 503, "detailallassem": 503, "dk": 503, "kk": 503, "dollar": 503, "cent": 503, "decayconst": 503, "six": 503, "365": 503, "2425": 503, "uptim": [503, 508], "shorthand": 503, "overcom": 503, "emploi": 503, "r5": 503, "ramp": 503, "prolong": 503, "slight": 503, "reduct": 503, "downtim": 503, "unevenli": 503, "buildup": 503, "rerun": 503, "000000": 503, "001002": 503, "loadstyl": 503, "fromdb": 503, "remaind": [503, 507], "frominput": 503, "skipcycl": 503, "makeup": 503, "core_grid": 503, "wit": 503, "elementari": 503, "neglect": 503, "flexibli": 503, "757": 503, "regex": 503, "extrud": 503, "componentnam": 503, "dimensionnam": 503, "label1": 503, "ousid": 503, "905": 503, "burnabl": 503, "fuelgrid": 503, "possess": 503, "buri": 503, "unambigu": 503, "standard_height": 503, "standard_axial_mesh_point": 503, "inner_core_block": 503, "dragger": 503, "defaul": 503, "superset": 503, "79213903298633": 503, "000664847887388523": 503, "182466356404319": 503, "00323253628006144": 503, "705266053783901": 503, "0171714161260001": 503, "00233843050046998": 503, "0831976890804466": 503, "00566266993741259": 503, "rect": 503, "cicl": 503, "145": 503, "downsid": 503, "pitchdefiningcompon": 503, "carbon_flag": 503, "getfactor": 503, "newincom": 503, "oldoutgo": 503, "daisi": 503, "overton": 503, "a3": 503, "a4": 503, "a5": 503, "thusli": 503, "essenc": 503, "peripheri": 503, "bluepint": 503, "watch": 503, "typenum": 503, "numdischarg": 503, "chargeenrich": 503, "defaultfactor": 503, "factorsearchflag": 503, "tout": 503, "acceptableblockareaerror": 503, "assemflagstoskipaxialexpa": 503, "nsion": 503, "assempowsummari": 503, "bureducingassemblyr": 503, "otat": 503, "assemblyrotationstationar": 503, "autogenerateblockgrid": 503, "automaticvariablemesh": 503, "axialexpans": 503, "axialmeshrefinementfactor": 503, "bccoeffici": 503, "extrapolat": 503, "zerosurfaceflux": 503, "zeroinwardcurr": 503, "circularringord": 503, "distancesmart": 503, "circularringpitch": 503, "claddingstrain": 503, "claddingwastag": 503, "copyfilesfrom": 503, "copyfilesto": 503, "coverageconfigfil": 503, "crosssectioncontrol": 503, "dict_k": 503, "ei": 503, "customfuelmanagementindex": 503, "242199": 503, "cyclesskiptightcouplingin": 503, "teract": 503, "dbstorageaftercycl": 503, "debugdb": 503, "debugmems": 503, "deferredinterfacenam": 503, "deferredinterfacescycl": 503, "disableblocktypeexclus": 503, "inxsgener": 503, "01568627": 503, "451e": 503, "dpaxsset": 503, "dpa_ebrii_": 503, "dpa_ebrii_inc600": 503, "dpa_ebrii_incx750": 503, "dpa_ebrii_ht9": 503, "dpa_ebrii_pe16": 503, "dpa_ebrii_inc625": 503, "eigenprob": 503, "epseig": 503, "epsfsavg": 503, "epsfspoint": 503, "eqdirect": 503, "shuf": 503, "existingfixedsourc": 503, "varsrc": 503, "fgremov": 503, "fissiongasyieldfract": 503, "forcedbparam": 503, "nofissionproduct": 503, "infinitelydilut": 503, "explicitfissionp": 503, "roduct": 503, "explicitfissionpr": 503, "oduct": 503, "fuelperformanceengin": 503, "globalfluxact": 503, "gridplatedpaxsset": 503, "groupstructur": 503, "anl9": 503, "anl70": 503, "anl230": 503, "anl703": 503, "anl1041": 503, "anl2082": 503, "armi33": 503, "armi45": 503, "cinder63": 503, "growtofullcoreafterload": 503, "independentvarnam": 503, "infinitedilutecutoff": 503, "initializeburnchain": 503, "jumpringnum": 503, "checkerboard": 503, "levelspercascad": 503, "referencef": 503, "issionprod": 503, "uct": 503, "loadfromdbeverynod": 503, "lowpowerregionfract": 503, "makeallblocklfpsindepend": 503, "minmeshsizeratio": 503, "dp1": 503, "dp2": 503, "minimumfissilefract": 503, "neutronicstyp": 503, "numbermeshperedg": 503, "operatorloc": 503, "outputcacheloc": 503, "plotshufflearrow": 503, "namepl": 503, "reallysmallrun": 503, "removepercycl": 503, "restartneutron": 503, "runlatticephysicsbeforesh": 503, "uffl": 503, "smallrun": 503, "sortreactor": 503, "calul": 503, "grid_pla": 503, "summarizeassemdesign": 503, "tightcouplingmaxnumit": 503, "tightcoup": 503, "lingsettin": 503, "dict_kei": 503, "timelineinclusioncutoff": 503, "tolerateburnupchang": 503, "test_wha": 503, "xsblockrepresent": 503, "fluxweightedaverag": 503, "componentaverage1dslab": 503, "xsbucklingconverg": 503, "xseigenvalueconverg": 503, "mc2v2": 503, "xsscatteringord": 503, "zerooutnuclidesnotindb": 503, "loc1": 503, "loc2": 503, "loc3": 503, "odhot": 504, "id600": 504, "numclad": 504, "cladmat": 504, "savephysicsio": 505, "cxny": 505, "00x00y": 505, "xtra": 505, "traceback": 505, "monitor": 505, "myrun": 505, "mydatabas": 505, "ahist": 505, "filesystem": 505, "endian": 505, "portabl": 505, "supplement": 505, "standpoint": 505, "stroke": 505, "glean": 505, "operation": 505, "locationtyp": 505, "comp_typ": 505, "mold": 505, "tricki": 505, "interspers": 505, "thaveragecladtemperatur": 506, "k_": 506, "l2": 506, "_2": 506, "a_": 506, "b_": 506, "mathbf": 506, "quad": 506, "foral": 506, "epsilon_i": 506, "textbf": 506, "_settightcouplingdefault": 506, "easiest": 506, "t_0": 507, "rearrang": 507, "l_1": 507, "t_1": 507, "l_h": 507, "t_h": 507, "t_c": 507, "l_c": 507, "capacityfactor": 508, "lcoe": 508, "levelis": 508, "usd": 508, "kwh": 508, "efeedmt": 508, "efissil": 508, "eswu": 508, "swu": 508}, "objects": {"": [[0, 0, 0, "-", "armi"]], "armi": [[0, 1, 1, "", "applyAsyncioWindowsWorkaround"], [1, 0, 0, "-", "apps"], [2, 0, 0, "-", "bookkeeping"], [47, 0, 0, "-", "cases"], [61, 0, 0, "-", "cli"], [0, 1, 1, "", "configure"], [77, 0, 0, "-", "conftest"], [78, 0, 0, "-", "context"], [0, 1, 1, "", "disableFutureConfigures"], [0, 1, 1, "", "getApp"], [0, 1, 1, "", "getDefaultPluginManager"], [0, 1, 1, "", "getDefaultPlugins"], [0, 1, 1, "", "getPluginManager"], [0, 1, 1, "", "getPluginManagerOrFail"], [0, 1, 1, "", "init"], [79, 0, 0, "-", "interfaces"], [0, 1, 1, "", "isConfigured"], [0, 1, 1, "", "isStableReleaseVersion"], [80, 0, 0, "-", "materials"], [144, 0, 0, "-", "meta"], [145, 0, 0, "-", "migration"], [152, 0, 0, "-", "mpiActions"], [153, 0, 0, "-", "nucDirectory"], [165, 0, 0, "-", "nuclearDataIO"], [204, 0, 0, "-", "operators"], [213, 0, 0, "-", "physics"], [281, 0, 0, "-", "pluginManager"], [282, 0, 0, "-", "plugins"], [283, 0, 0, "-", "reactor"], [365, 0, 0, "-", "runLog"], [366, 0, 0, "-", "settings"], [380, 0, 0, "-", "tests"], [397, 0, 0, "-", "utils"]], "armi.apps": [[1, 2, 1, "", "App"]], "armi.apps.App": [[1, 3, 1, "", "getParamRenames"], [1, 3, 1, "", "getSettings"], [1, 4, 1, "", "name"], [1, 5, 1, "", "pluginManager"], [1, 3, 1, "", "registerPluginFlags"], [1, 3, 1, "", "registerUserPlugins"], [1, 5, 1, "", "splashText"], [1, 5, 1, "", "version"]], "armi.bookkeeping": [[2, 2, 1, "", "BookkeepingPlugin"], [3, 0, 0, "-", "db"], [20, 0, 0, "-", "historyTracker"], [21, 0, 0, "-", "mainInterface"], [22, 0, 0, "-", "memoryProfiler"], [23, 0, 0, "-", "report"], [33, 0, 0, "-", "snapshotInterface"], [34, 0, 0, "-", "tests"], [38, 0, 0, "-", "visualization"]], "armi.bookkeeping.BookkeepingPlugin": [[2, 3, 1, "", "defineCaseDependencies"], [2, 3, 1, "", "defineEntryPoints"], [2, 3, 1, "", "exposeInterfaces"], [2, 3, 1, "", "getReportContents"], [2, 3, 1, "", "mpiActionRequiresReset"]], "armi.bookkeeping.db": [[3, 2, 1, "", "Database"], [3, 2, 1, "", "Database3"], [3, 2, 1, "", "DatabaseInterface"], [4, 0, 0, "-", "compareDB3"], [3, 1, 1, "", "compareDatabases"], [5, 0, 0, "-", "database"], [6, 0, 0, "-", "database3"], [3, 1, 1, "", "databaseFactory"], [7, 0, 0, "-", "databaseInterface"], [8, 0, 0, "-", "factory"], [9, 0, 0, "-", "jaggedArray"], [10, 0, 0, "-", "layout"], [3, 1, 1, "", "loadOperator"], [11, 0, 0, "-", "passiveDBLoadPlugin"], [12, 0, 0, "-", "permissions"], [13, 0, 0, "-", "tests"], [19, 0, 0, "-", "typedefs"]], "armi.bookkeeping.db.Database": [[3, 3, 1, "", "close"], [3, 5, 1, "", "fileName"], [3, 3, 1, "", "genAuxiliaryData"], [3, 3, 1, "", "genTimeStepGroups"], [3, 3, 1, "", "genTimeSteps"], [3, 3, 1, "", "getAuxiliaryDataPath"], [3, 3, 1, "", "getH5Group"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistoriesByLocation"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "getHistoryByLocation"], [3, 3, 1, "", "getLayout"], [3, 3, 1, "", "grabLocalCommitHash"], [3, 3, 1, "", "hasTimeStep"], [3, 3, 1, "", "isOpen"], [3, 3, 1, "", "keys"], [3, 3, 1, "", "load"], [3, 3, 1, "", "loadBlueprints"], [3, 3, 1, "", "loadCS"], [3, 3, 1, "", "loadGeometry"], [3, 3, 1, "", "loadReadOnly"], [3, 3, 1, "", "mergeHistory"], [3, 3, 1, "", "open"], [3, 3, 1, "", "readInputsFromDB"], [3, 3, 1, "", "splitDatabase"], [3, 3, 1, "", "syncToSharedFolder"], [3, 4, 1, "", "timeNodeGroupPattern"], [3, 5, 1, "", "version"], [3, 5, 1, "", "versionMajor"], [3, 5, 1, "", "versionMinor"], [3, 3, 1, "", "writeInputsToDB"], [3, 3, 1, "", "writeSystemAttributes"], [3, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.Database3": [[3, 4, 1, "", "h5db"]], "armi.bookkeeping.db.DatabaseInterface": [[3, 3, 1, "", "closeDB"], [3, 5, 1, "", "database"], [3, 3, 1, "", "distributable"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "initDB"], [3, 3, 1, "", "interactBOL"], [3, 3, 1, "", "interactDistributeState"], [3, 3, 1, "", "interactEOC"], [3, 3, 1, "", "interactEOL"], [3, 3, 1, "", "interactError"], [3, 3, 1, "", "interactEveryNode"], [3, 3, 1, "", "loadState"], [3, 4, 1, "", "name"], [3, 3, 1, "", "prepRestartRun"], [3, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.compareDB3": [[4, 2, 1, "", "DiffResults"], [4, 2, 1, "", "OutputWriter"], [4, 1, 1, "", "compareDatabases"]], "armi.bookkeeping.db.compareDB3.DiffResults": [[4, 3, 1, "", "addDiff"], [4, 3, 1, "", "addStructureDiffs"], [4, 3, 1, "", "addTimeStep"], [4, 3, 1, "", "nDiffs"], [4, 3, 1, "", "reportDiffs"]], "armi.bookkeeping.db.compareDB3.OutputWriter": [[4, 3, 1, "", "writeln"]], "armi.bookkeeping.db.database": [[5, 2, 1, "", "Database"], [5, 1, 1, "", "collectBlockNumberDensities"], [5, 1, 1, "", "getH5GroupName"], [5, 1, 1, "", "packSpecialData"], [5, 1, 1, "", "unpackSpecialData"]], "armi.bookkeeping.db.database.Database": [[5, 3, 1, "", "close"], [5, 5, 1, "", "fileName"], [5, 3, 1, "", "genAuxiliaryData"], [5, 3, 1, "", "genTimeStepGroups"], [5, 3, 1, "", "genTimeSteps"], [5, 3, 1, "", "getAuxiliaryDataPath"], [5, 3, 1, "", "getH5Group"], [5, 3, 1, "", "getHistories"], [5, 3, 1, "", "getHistoriesByLocation"], [5, 3, 1, "", "getHistory"], [5, 3, 1, "", "getHistoryByLocation"], [5, 3, 1, "", "getLayout"], [5, 3, 1, "", "grabLocalCommitHash"], [5, 4, 1, "", "h5db"], [5, 3, 1, "", "hasTimeStep"], [5, 3, 1, "", "isOpen"], [5, 3, 1, "", "keys"], [5, 3, 1, "", "load"], [5, 3, 1, "", "loadBlueprints"], [5, 3, 1, "", "loadCS"], [5, 3, 1, "", "loadGeometry"], [5, 3, 1, "", "loadReadOnly"], [5, 3, 1, "", "mergeHistory"], [5, 3, 1, "", "open"], [5, 3, 1, "", "readInputsFromDB"], [5, 3, 1, "", "splitDatabase"], [5, 3, 1, "", "syncToSharedFolder"], [5, 4, 1, "", "timeNodeGroupPattern"], [5, 5, 1, "", "version"], [5, 5, 1, "", "versionMajor"], [5, 5, 1, "", "versionMinor"], [5, 3, 1, "", "writeInputsToDB"], [5, 3, 1, "", "writeSystemAttributes"], [5, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.database3": [[6, 2, 1, "", "Database3"]], "armi.bookkeeping.db.database3.Database3": [[6, 4, 1, "", "h5db"]], "armi.bookkeeping.db.databaseInterface": [[7, 2, 1, "", "DatabaseInterface"], [7, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.db.databaseInterface.DatabaseInterface": [[7, 3, 1, "", "closeDB"], [7, 5, 1, "", "database"], [7, 3, 1, "", "distributable"], [7, 3, 1, "", "getHistories"], [7, 3, 1, "", "getHistory"], [7, 3, 1, "", "initDB"], [7, 3, 1, "", "interactBOL"], [7, 3, 1, "", "interactDistributeState"], [7, 3, 1, "", "interactEOC"], [7, 3, 1, "", "interactEOL"], [7, 3, 1, "", "interactError"], [7, 3, 1, "", "interactEveryNode"], [7, 3, 1, "", "loadState"], [7, 4, 1, "", "name"], [7, 3, 1, "", "prepRestartRun"], [7, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[8, 1, 1, "", "databaseFactory"]], "armi.bookkeeping.db.jaggedArray": [[9, 2, 1, "", "JaggedArray"]], "armi.bookkeeping.db.jaggedArray.JaggedArray": [[9, 3, 1, "", "flatten"], [9, 3, 1, "", "fromH5"], [9, 3, 1, "", "tolist"], [9, 3, 1, "", "unpack"]], "armi.bookkeeping.db.layout": [[10, 2, 1, "", "Layout"], [10, 1, 1, "", "replaceNonesWithNonsense"], [10, 1, 1, "", "replaceNonsenseWithNones"]], "armi.bookkeeping.db.layout.Layout": [[10, 3, 1, "", "allSubclasses"], [10, 3, 1, "", "computeAncestors"], [10, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.passiveDBLoadPlugin": [[11, 2, 1, "", "PassThroughYamlize"], [11, 2, 1, "", "PassiveDBLoadPlugin"]], "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize": [[11, 4, 1, "", "attributes"], [11, 3, 1, "", "from_yaml"]], "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin": [[11, 4, 1, "", "SKIP_BP_SECTIONS"], [11, 4, 1, "", "UNKNOWN_PARAMS"], [11, 3, 1, "", "buildParamColl"], [11, 3, 1, "", "defineBlueprintsSections"], [11, 3, 1, "", "defineParameters"]], "armi.bookkeeping.db.permissions": [[12, 2, 1, "", "Permissions"]], "armi.bookkeeping.db.permissions.Permissions": [[12, 4, 1, "", "CREATE_FILE_FIE"], [12, 4, 1, "", "CREATE_FILE_FIE2"], [12, 4, 1, "", "CREATE_FILE_TIE"], [12, 4, 1, "", "DEFAULT"], [12, 4, 1, "", "READ_ONLY_FME"], [12, 4, 1, "", "READ_WRITE_CREATE"], [12, 4, 1, "", "READ_WRITE_FME"], [12, 4, 1, "", "all"], [12, 4, 1, "", "create"], [12, 4, 1, "", "read"], [12, 4, 1, "", "write"]], "armi.bookkeeping.db.tests": [[14, 0, 0, "-", "test_comparedb3"], [15, 0, 0, "-", "test_database3"], [16, 0, 0, "-", "test_databaseInterface"], [17, 0, 0, "-", "test_jaggedArray"], [18, 0, 0, "-", "test_layout"]], "armi.bookkeeping.db.tests.test_comparedb3": [[14, 2, 1, "", "TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3": [[14, 3, 1, "", "test_compareAuxData"], [14, 3, 1, "", "test_compareDatabaseDuplicate"], [14, 3, 1, "", "test_compareDatabaseSim"], [14, 3, 1, "", "test_compareSets"], [14, 3, 1, "", "test_diffResultsBasic"], [14, 3, 1, "", "test_diffSimpleData"], [14, 3, 1, "", "test_diffSpecialData"], [14, 3, 1, "", "test_outputWriter"]], "armi.bookkeeping.db.tests.test_database3": [[15, 2, 1, "", "TestDatabase"], [15, 2, 1, "", "TestDatabaseSmaller"], [15, 2, 1, "", "TestWriteReadDatabase"]], "armi.bookkeeping.db.tests.test_database3.TestDatabase": [[15, 3, 1, "", "makeShuffleHistory"], [15, 3, 1, "", "test_history"], [15, 3, 1, "", "test_load"], [15, 3, 1, "", "test_loadSortSetting"]], "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller": [[15, 3, 1, "", "makeHistory"], [15, 3, 1, "", "test_auxData"], [15, 3, 1, "", "test_computeParents"], [15, 3, 1, "", "test_deleting"], [15, 3, 1, "", "test_fileName"], [15, 3, 1, "", "test_getH5File"], [15, 3, 1, "", "test_grabLocalCommitHash"], [15, 3, 1, "", "test_loadBlueprints"], [15, 3, 1, "", "test_loadCS"], [15, 3, 1, "", "test_mergeHistory"], [15, 3, 1, "", "test_open"], [15, 3, 1, "", "test_prepRestartRun"], [15, 3, 1, "", "test_readInputsFromDB"], [15, 3, 1, "", "test_replaceNones"], [15, 3, 1, "", "test_splitDatabase"], [15, 3, 1, "", "test_writeToDB"]], "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase": [[15, 4, 1, "", "SMALL_YAML"], [15, 3, 1, "", "test_badData"], [15, 3, 1, "", "test_readWriteRoundTrip"]], "armi.bookkeeping.db.tests.test_databaseInterface": [[16, 2, 1, "", "MockInterface"], [16, 2, 1, "", "TestBadName"], [16, 2, 1, "", "TestDatabaseInterface"], [16, 2, 1, "", "TestDatabaseInterfaceBOL"], [16, 2, 1, "", "TestDatabaseReading"], [16, 2, 1, "", "TestDatabaseWriter"], [16, 2, 1, "", "TestStandardFollowOn"], [16, 1, 1, "", "getSimpleDBOperator"]], "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface": [[16, 3, 1, "", "interactEveryNode"], [16, 4, 1, "", "name"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName": [[16, 3, 1, "", "test_badDBName"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface": [[16, 3, 1, "", "test_demonstrateWritingInteractions"], [16, 3, 1, "", "test_distributable"], [16, 3, 1, "", "test_interactEveryNodeReturnTightCoupling"], [16, 3, 1, "", "test_noSyncDbAfterWrite"], [16, 3, 1, "", "test_syncDbAfterWrite"], [16, 3, 1, "", "test_timeNodeLoop_tightCoupling"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL": [[16, 3, 1, "", "test_interactBOL"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading": [[16, 3, 1, "", "test_growToFullCore"], [16, 3, 1, "", "test_growToFullCoreFromFactory"], [16, 3, 1, "", "test_growToFullCoreFromFactoryWithCS"], [16, 3, 1, "", "test_growToFullCoreWithCS"], [16, 3, 1, "", "test_loadReadOnly"], [16, 3, 1, "", "test_readWithoutInputs"], [16, 3, 1, "", "test_readWritten"], [16, 3, 1, "", "test_timesteps"], [16, 3, 1, "", "test_variousTypesWork"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter": [[16, 3, 1, "", "test_getHistory"], [16, 3, 1, "", "test_getHistoryByLocation"], [16, 3, 1, "", "test_metaDataEndFail"], [16, 3, 1, "", "test_metaData_endSuccessfully"], [16, 3, 1, "", "test_writeSystemAttributes"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn": [[16, 3, 1, "", "test_standardRestart"]], "armi.bookkeeping.db.tests.test_jaggedArray": [[17, 2, 1, "", "TestJaggedArray"]], "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray": [[17, 3, 1, "", "test_backwardsCompatible"], [17, 3, 1, "", "test_flatten"], [17, 3, 1, "", "test_roundTrip"], [17, 3, 1, "", "test_roundTripBool"]], "armi.bookkeeping.db.tests.test_layout": [[18, 2, 1, "", "TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout.TestLocationPacking": [[18, 3, 1, "", "test_close"], [18, 3, 1, "", "test_locationPacking"], [18, 3, 1, "", "test_locationPackingOldVersion"], [18, 3, 1, "", "test_locationPackingOlderVersions"]], "armi.bookkeeping.historyTracker": [[20, 2, 1, "", "HistoryTrackerInterface"], [20, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.historyTracker.HistoryTrackerInterface": [[20, 3, 1, "", "addAllFuelAssems"], [20, 3, 1, "", "addDetailAssembliesBOL"], [20, 3, 1, "", "addDetailAssembly"], [20, 3, 1, "", "addDetailAssemsByAssemNums"], [20, 3, 1, "", "filterTimeIndices"], [20, 3, 1, "", "getBlockHistoryVal"], [20, 3, 1, "", "getDetailAssemblies"], [20, 3, 1, "", "getDetailBlocks"], [20, 3, 1, "", "getTimeSteps"], [20, 3, 1, "", "getTrackedParams"], [20, 3, 1, "", "interactBOC"], [20, 3, 1, "", "interactBOL"], [20, 3, 1, "", "interactEOL"], [20, 4, 1, "", "name"], [20, 3, 1, "", "preloadBlockHistoryVals"], [20, 3, 1, "", "unloadBlockHistoryVals"], [20, 3, 1, "", "writeAssemHistory"]], "armi.bookkeeping.mainInterface": [[21, 2, 1, "", "MainInterface"], [21, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.mainInterface.MainInterface": [[21, 3, 1, "", "cleanARMIFiles"], [21, 3, 1, "", "cleanLastCycleFiles"], [21, 3, 1, "", "interactBOC"], [21, 3, 1, "", "interactBOL"], [21, 3, 1, "", "interactEOL"], [21, 3, 1, "", "interactEveryNode"], [21, 4, 1, "", "name"]], "armi.bookkeeping.memoryProfiler": [[22, 2, 1, "", "InstanceCounter"], [22, 2, 1, "", "KlassCounter"], [22, 2, 1, "", "MemoryProfiler"], [22, 2, 1, "", "PrintSystemMemoryUsageAction"], [22, 2, 1, "", "ProfileMemoryUsageAction"], [22, 2, 1, "", "SystemAndProcessMemoryUsage"], [22, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.memoryProfiler.InstanceCounter": [[22, 3, 1, "", "add"]], "armi.bookkeeping.memoryProfiler.KlassCounter": [[22, 3, 1, "", "countObjects"]], "armi.bookkeeping.memoryProfiler.MemoryProfiler": [[22, 3, 1, "", "checkForDuplicateObjectsOnArmiModel"], [22, 3, 1, "", "displayMemoryUsage"], [22, 3, 1, "", "getReferrers"], [22, 3, 1, "", "interactBOL"], [22, 3, 1, "", "interactEOL"], [22, 3, 1, "", "interactEveryNode"], [22, 4, 1, "", "name"]], "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction": [[22, 3, 1, "", "invokeHook"], [22, 5, 1, "", "maxProcessMemoryInMB"], [22, 5, 1, "", "minProcessMemoryInMB"], [22, 3, 1, "", "printUsage"]], "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction": [[22, 3, 1, "", "invokeHook"]], "armi.bookkeeping.report": [[24, 0, 0, "-", "data"], [25, 0, 0, "-", "html"], [26, 0, 0, "-", "newReportUtils"], [27, 0, 0, "-", "newReports"], [28, 0, 0, "-", "reportInterface"], [29, 0, 0, "-", "reportingUtils"], [23, 1, 1, "", "setData"], [30, 0, 0, "-", "tests"]], "armi.bookkeeping.report.data": [[24, 2, 1, "", "Group"], [24, 2, 1, "", "Image"], [24, 2, 1, "", "Report"], [24, 2, 1, "", "Table"]], "armi.bookkeeping.report.data.Group": [[24, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Image": [[24, 4, 1, "", "count"], [24, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Report": [[24, 3, 1, "", "addToReport"], [24, 4, 1, "", "componentWellGroups"], [24, 4, 1, "", "groupsOrderFirst"], [24, 3, 1, "", "writeGroupsHTML"], [24, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Table": [[24, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.html": [[25, 2, 1, "", "A"], [25, 2, 1, "", "B"], [25, 2, 1, "", "Body"], [25, 2, 1, "", "Caption"], [25, 2, 1, "", "Div"], [25, 2, 1, "", "Footer"], [25, 2, 1, "", "H1"], [25, 2, 1, "", "H2"], [25, 2, 1, "", "H3"], [25, 2, 1, "", "H4"], [25, 2, 1, "", "HTMLFile"], [25, 2, 1, "", "Head"], [25, 2, 1, "", "Html"], [25, 2, 1, "", "Img"], [25, 2, 1, "", "LI"], [25, 2, 1, "", "Link"], [25, 2, 1, "", "P"], [25, 2, 1, "", "Script"], [25, 2, 1, "", "Span"], [25, 2, 1, "", "Style"], [25, 2, 1, "", "TBody"], [25, 2, 1, "", "TD"], [25, 2, 1, "", "TH"], [25, 2, 1, "", "THead"], [25, 2, 1, "", "TR"], [25, 2, 1, "", "Table"], [25, 2, 1, "", "Tag"], [25, 2, 1, "", "Title"], [25, 2, 1, "", "UL"], [25, 1, 1, "", "encode64"], [25, 1, 1, "", "writeStandardReportTemplate"]], "armi.bookkeeping.report.html.A": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.B": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Body": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Caption": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Div": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Footer": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H1": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H2": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H3": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H4": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.HTMLFile": [[25, 3, 1, "", "write"], [25, 3, 1, "", "writeEscaped"]], "armi.bookkeeping.report.html.Head": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Html": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Img": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.LI": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Link": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.P": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Script": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Span": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Style": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TBody": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TD": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TH": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.THead": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TR": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Table": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Tag": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Title": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.UL": [[25, 4, 1, "", "tag"]], "armi.bookkeeping.report.newReportUtils": [[26, 6, 1, "", "DESIGN"], [26, 1, 1, "", "comprehensiveBOLContent"], [26, 1, 1, "", "createDimensionReport"], [26, 1, 1, "", "getPinDesignTable"], [26, 1, 1, "", "insertAreaFractionsReport"], [26, 1, 1, "", "insertBlockDesignReport"], [26, 1, 1, "", "insertBlockDiagrams"], [26, 1, 1, "", "insertBlueprintContent"], [26, 1, 1, "", "insertCoreAndAssemblyMaps"], [26, 1, 1, "", "insertCoreDesignReport"], [26, 1, 1, "", "insertDesignContent"], [26, 1, 1, "", "insertEndOfLifeContent"], [26, 1, 1, "", "insertGeneralReportContent"], [26, 1, 1, "", "insertMetaTable"], [26, 1, 1, "", "insertSettingsData"]], "armi.bookkeeping.report.newReports": [[27, 2, 1, "", "Image"], [27, 2, 1, "", "ReportContent"], [27, 2, 1, "", "ReportNode"], [27, 2, 1, "", "ReportStage"], [27, 2, 1, "", "Section"], [27, 2, 1, "", "Table"], [27, 2, 1, "", "TimeSeries"], [27, 1, 1, "", "encode64"]], "armi.bookkeeping.report.newReports.Image": [[27, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportContent": [[27, 3, 1, "", "get"], [27, 3, 1, "", "tableOfContents"], [27, 3, 1, "", "writeReports"]], "armi.bookkeeping.report.newReports.ReportNode": [[27, 4, 1, "", "levelDict"], [27, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportStage": [[27, 4, 1, "", "Begin"], [27, 4, 1, "", "End"], [27, 4, 1, "", "Standard"]], "armi.bookkeeping.report.newReports.Section": [[27, 3, 1, "", "addChildElement"], [27, 3, 1, "", "get"], [27, 3, 1, "", "items"], [27, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.Table": [[27, 3, 1, "", "addRow"], [27, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.TimeSeries": [[27, 3, 1, "", "add"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "render"]], "armi.bookkeeping.report.reportInterface": [[28, 2, 1, "", "ReportInterface"], [28, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.report.reportInterface.ReportInterface": [[28, 3, 1, "", "countAssembliesSFP"], [28, 3, 1, "", "distributable"], [28, 3, 1, "", "generateDesignReport"], [28, 3, 1, "", "interactBOC"], [28, 3, 1, "", "interactBOL"], [28, 3, 1, "", "interactEOC"], [28, 3, 1, "", "interactEOL"], [28, 3, 1, "", "interactEveryNode"], [28, 4, 1, "", "name"], [28, 3, 1, "", "printReports"], [28, 3, 1, "", "reportSFP"], [28, 4, 1, "", "reports"], [28, 3, 1, "", "writeReports"], [28, 3, 1, "", "writeRunSummary"]], "armi.bookkeeping.report.reportingUtils": [[29, 1, 1, "", "getInterfaceStackSummary"], [29, 1, 1, "", "getNodeName"], [29, 1, 1, "", "getSystemInfo"], [29, 1, 1, "", "makeBlockDesignReport"], [29, 1, 1, "", "makeCoreAndAssemblyMaps"], [29, 1, 1, "", "makeCoreDesignReport"], [29, 1, 1, "", "setNeutronBalancesReport"], [29, 1, 1, "", "summarizePinDesign"], [29, 1, 1, "", "summarizePower"], [29, 1, 1, "", "summarizePowerPeaking"], [29, 1, 1, "", "writeAssemblyMassSummary"], [29, 1, 1, "", "writeCycleSummary"], [29, 1, 1, "", "writeTightCouplingConvergenceSummary"], [29, 1, 1, "", "writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[31, 0, 0, "-", "test_newReport"], [32, 0, 0, "-", "test_report"]], "armi.bookkeeping.report.tests.test_newReport": [[31, 2, 1, "", "TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation": [[31, 3, 1, "", "test_neutronicsPlotFunctions"], [31, 3, 1, "", "test_reportBasics"], [31, 3, 1, "", "test_reportContents"], [31, 3, 1, "", "test_reportContentsEnd"], [31, 3, 1, "", "test_reportLogs"], [31, 3, 1, "", "test_tableCreation"], [31, 3, 1, "", "test_timeSeries"], [31, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.report.tests.test_report": [[32, 2, 1, "", "TestReport"], [32, 2, 1, "", "TestReportInterface"], [32, 2, 1, "", "TestReportingUtils"]], "armi.bookkeeping.report.tests.test_report.TestReport": [[32, 3, 1, "", "test_getData"], [32, 3, 1, "", "test_reactorSpecificReporting"], [32, 3, 1, "", "test_setData"], [32, 3, 1, "", "test_writeWelcomeHeaders"]], "armi.bookkeeping.report.tests.test_report.TestReportInterface": [[32, 3, 1, "", "test_distributableReportInt"], [32, 3, 1, "", "test_interactBOC"], [32, 3, 1, "", "test_interactBOLReportInt"], [32, 3, 1, "", "test_interactEOC"], [32, 3, 1, "", "test_interactEOL"], [32, 3, 1, "", "test_interactEveryNode"], [32, 3, 1, "", "test_printReports"], [32, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.report.tests.test_report.TestReportingUtils": [[32, 3, 1, "", "test_getNodeName"], [32, 3, 1, "", "test_getSystemInfo"], [32, 3, 1, "", "test_getSystemInfoLinux"], [32, 3, 1, "", "test_getSystemInfoMac"], [32, 3, 1, "", "test_getSystemInfoWindows"]], "armi.bookkeeping.snapshotInterface": [[33, 2, 1, "", "SnapshotInterface"], [33, 1, 1, "", "describeInterfaces"], [33, 1, 1, "", "extractCycleNodeFromStamp"], [33, 1, 1, "", "getCycleNodeStamp"]], "armi.bookkeeping.snapshotInterface.SnapshotInterface": [[33, 3, 1, "", "activateDefaultSnapshots"], [33, 3, 1, "", "interactBOL"], [33, 3, 1, "", "interactCoupled"], [33, 3, 1, "", "interactEveryNode"], [33, 4, 1, "", "name"]], "armi.bookkeeping.tests": [[35, 0, 0, "-", "test_historyTracker"], [36, 0, 0, "-", "test_memoryProfiler"], [37, 0, 0, "-", "test_snapshot"]], "armi.bookkeeping.tests.test_historyTracker": [[35, 2, 1, "", "TestHistoryTracker"], [35, 2, 1, "", "TestHistoryTrackerNoModel"], [35, 1, 1, "", "runTutorialNotebook"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker": [[35, 3, 1, "", "test_calcMGFluence"], [35, 3, 1, "", "test_getBlockInAssembly"], [35, 3, 1, "", "test_historyParameters"], [35, 3, 1, "", "test_historyReport"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel": [[35, 3, 1, "", "test_blockName"], [35, 3, 1, "", "test_timestepFiltering"], [35, 3, 1, "", "test_timestepFilteringWithGap"]], "armi.bookkeeping.tests.test_memoryProfiler": [[36, 2, 1, "", "KlassCounterTests"], [36, 2, 1, "", "TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests": [[36, 3, 1, "", "get_containers"], [36, 3, 1, "", "test_countHandlesRecursion"], [36, 3, 1, "", "test_expandContainer"]], "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler": [[36, 3, 1, "", "test_checkForDuplicateObjectsOnArmiModel"], [36, 3, 1, "", "test_displayMemoryUsage"], [36, 3, 1, "", "test_fullBreakdown"], [36, 3, 1, "", "test_getReferrers"], [36, 3, 1, "", "test_printFullMemoryBreakdown"], [36, 3, 1, "", "test_profileMemoryUsageAction"]], "armi.bookkeeping.tests.test_snapshot": [[37, 2, 1, "", "MockReactor"], [37, 2, 1, "", "MockReactorParams"], [37, 2, 1, "", "TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface": [[37, 3, 1, "", "test_activeateDefaultSnapshots_17cycles5BurnSteps"], [37, 3, 1, "", "test_activeateDefaultSnapshots_30cycles2BurnSteps"], [37, 3, 1, "", "test_interactCoupled"], [37, 3, 1, "", "test_interactEveryNode"]], "armi.bookkeeping.visualization": [[39, 0, 0, "-", "dumper"], [40, 0, 0, "-", "entryPoint"], [41, 0, 0, "-", "tests"], [44, 0, 0, "-", "utils"], [45, 0, 0, "-", "vtk"], [46, 0, 0, "-", "xdmf"]], "armi.bookkeeping.visualization.dumper": [[39, 2, 1, "", "VisFileDumper"]], "armi.bookkeeping.visualization.dumper.VisFileDumper": [[39, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.entryPoint": [[40, 2, 1, "", "VisFileEntryPoint"]], "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint": [[40, 3, 1, "", "addOptions"], [40, 4, 1, "", "description"], [40, 3, 1, "", "invoke"], [40, 4, 1, "", "name"], [40, 3, 1, "", "parse"], [40, 4, 1, "", "settingsArgument"]], "armi.bookkeeping.visualization.tests": [[42, 0, 0, "-", "test_vis"], [43, 0, 0, "-", "test_xdmf"]], "armi.bookkeeping.visualization.tests.test_vis": [[42, 2, 1, "", "TestVisDump"], [42, 2, 1, "", "TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVisDump": [[42, 3, 1, "", "test_cartesianMesh"], [42, 3, 1, "", "test_dumpReactorVtk"], [42, 3, 1, "", "test_dumpReactorXdmf"], [42, 3, 1, "", "test_hexMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh": [[42, 3, 1, "", "test_testVtkMesh"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[43, 2, 1, "", "TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf": [[43, 3, 1, "", "test_dedupTimes"]], "armi.bookkeeping.visualization.utils": [[44, 2, 1, "", "VtkMesh"], [44, 1, 1, "", "createAssemMesh"], [44, 1, 1, "", "createBlockMesh"], [44, 1, 1, "", "createReactorAssemMesh"], [44, 1, 1, "", "createReactorBlockMesh"]], "armi.bookkeeping.visualization.utils.VtkMesh": [[44, 3, 1, "", "append"], [44, 3, 1, "", "empty"], [44, 3, 1, "", "write"], [44, 5, 1, "", "x"], [44, 5, 1, "", "y"], [44, 5, 1, "", "z"]], "armi.bookkeeping.visualization.vtk": [[45, 2, 1, "", "VtkDumper"]], "armi.bookkeeping.visualization.vtk.VtkDumper": [[45, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.xdmf": [[46, 2, 1, "", "XdmfDumper"]], "armi.bookkeeping.visualization.xdmf.XdmfDumper": [[46, 3, 1, "", "dumpState"]], "armi.cases": [[48, 0, 0, "-", "case"], [49, 0, 0, "-", "inputModifiers"], [56, 0, 0, "-", "suite"], [57, 0, 0, "-", "suiteBuilder"], [58, 0, 0, "-", "tests"]], "armi.cases.case": [[48, 2, 1, "", "Case"], [48, 1, 1, "", "copyInterfaceInputs"]], "armi.cases.case.Case": [[48, 3, 1, "", "addExplicitDependency"], [48, 5, 1, "", "bp"], [48, 3, 1, "", "checkInputs"], [48, 3, 1, "", "clone"], [48, 3, 1, "", "compare"], [48, 5, 1, "", "dbName"], [48, 5, 1, "", "dependencies"], [48, 5, 1, "", "directory"], [48, 5, 1, "", "geom"], [48, 3, 1, "", "getPotentialParentFromSettingValue"], [48, 5, 1, "", "independentVariables"], [48, 3, 1, "", "initializeOperator"], [48, 3, 1, "", "run"], [48, 3, 1, "", "setUpTaskDependence"], [48, 3, 1, "", "summarizeDesign"], [48, 5, 1, "", "title"], [48, 3, 1, "", "writeInputs"]], "armi.cases.inputModifiers": [[50, 0, 0, "-", "inputModifiers"], [51, 0, 0, "-", "neutronicsModifiers"], [52, 0, 0, "-", "pinTypeInputModifiers"], [53, 0, 0, "-", "tests"]], "armi.cases.inputModifiers.inputModifiers": [[50, 2, 1, "", "BluePrintBlockModifier"], [50, 2, 1, "", "FullCoreModifier"], [50, 2, 1, "", "InputModifier"], [50, 2, 1, "", "MultiSettingModifier"], [50, 2, 1, "", "SamplingInputModifier"], [50, 2, 1, "", "SettingsModifier"]], "armi.cases.inputModifiers.inputModifiers.InputModifier": [[50, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.neutronicsModifiers": [[51, 2, 1, "", "NeutronicConvergenceModifier"], [51, 2, 1, "", "NeutronicMeshsSizeModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers": [[52, 2, 1, "", "CladThicknessByIDModifier"], [52, 2, 1, "", "CladThicknessByODModifier"], [52, 2, 1, "", "SmearDensityModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier": [[52, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier": [[52, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.tests": [[54, 0, 0, "-", "test_inputModifiers"], [55, 0, 0, "-", "test_pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests.test_inputModifiers": [[54, 2, 1, "", "MockGeom"], [54, 2, 1, "", "NeutronicsKernelOpts"], [54, 2, 1, "", "TestFullCoreModifier"], [54, 2, 1, "", "TestSettingsModifiers"], [54, 2, 1, "", "TestsuiteBuilderIntegrations"]], "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom": [[54, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier": [[54, 3, 1, "", "test_fullCoreConversion"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers": [[54, 3, 1, "", "test_NeutronicConvergenceModifier"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations": [[54, 3, 1, "", "test_bluePrintBlockModifier"], [54, 3, 1, "", "test_settingsModifier"], [54, 3, 1, "", "test_smearDensityFail"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers": [[55, 2, 1, "", "MockGeom"], [55, 2, 1, "", "TestBlueprintModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom": [[55, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers": [[55, 3, 1, "", "test_AdjustSmearDensity"], [55, 3, 1, "", "test_CladThickenessByIDModifier"], [55, 3, 1, "", "test_CladThickenessByODModifier"]], "armi.cases.suite": [[56, 2, 1, "", "CaseSuite"]], "armi.cases.suite.CaseSuite": [[56, 3, 1, "", "add"], [56, 3, 1, "", "clone"], [56, 3, 1, "", "compare"], [56, 3, 1, "", "discover"], [56, 3, 1, "", "echoConfiguration"], [56, 3, 1, "", "remove"], [56, 3, 1, "", "run"], [56, 3, 1, "", "writeInputs"], [56, 3, 1, "", "writeTable"]], "armi.cases.suiteBuilder": [[57, 2, 1, "", "FullFactorialSuiteBuilder"], [57, 2, 1, "", "FullFactorialSuiteBuilderNoisy"], [57, 2, 1, "", "LatinHyperCubeSuiteBuilder"], [57, 2, 1, "", "SeparateEffectsSuiteBuilder"], [57, 2, 1, "", "SuiteBuilder"], [57, 1, 1, "", "getInputModifiers"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilder": [[57, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy": [[57, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder": [[57, 3, 1, "", "addDegreeOfFreedom"], [57, 3, 1, "", "buildSuite"]], "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder": [[57, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.SuiteBuilder": [[57, 3, 1, "", "addDegreeOfFreedom"], [57, 3, 1, "", "addModifierSet"], [57, 3, 1, "", "buildSuite"]], "armi.cases.tests": [[59, 0, 0, "-", "test_cases"], [60, 0, 0, "-", "test_suiteBuilder"]], "armi.cases.tests.test_cases": [[59, 2, 1, "", "MultiFilesInterfaces"], [59, 2, 1, "", "TestArmiCase"], [59, 2, 1, "", "TestCaseSuiteComparison"], [59, 2, 1, "", "TestCaseSuiteDependencies"], [59, 2, 1, "", "TestCopyInterfaceInputs"], [59, 2, 1, "", "TestExtraInputWriting"], [59, 2, 1, "", "TestPluginForCopyInterfacesMultipleFiles"], [59, 2, 1, "", "TestPluginWithDuplicateSetting"]], "armi.cases.tests.test_cases.MultiFilesInterfaces": [[59, 4, 1, "", "name"], [59, 3, 1, "", "specifyInputs"]], "armi.cases.tests.test_cases.TestArmiCase": [[59, 3, 1, "", "test_clone"], [59, 3, 1, "", "test_endCoverage"], [59, 3, 1, "", "test_endProfiling"], [59, 3, 1, "", "test_getCoverageRcFile"], [59, 3, 1, "", "test_independentVariables"], [59, 3, 1, "", "test_run"], [59, 3, 1, "", "test_setUpTaskDependence"], [59, 3, 1, "", "test_startCoverage"], [59, 3, 1, "", "test_startProfiling"], [59, 3, 1, "", "test_summarizeDesign"]], "armi.cases.tests.test_cases.TestCaseSuiteComparison": [[59, 3, 1, "", "test_compareNoDiffs"]], "armi.cases.tests.test_cases.TestCaseSuiteDependencies": [[59, 3, 1, "", "test_checkInputs"], [59, 3, 1, "", "test_clone"], [59, 3, 1, "", "test_dependenciesWithObscurePaths"], [59, 3, 1, "", "test_dependencyFromDBName"], [59, 3, 1, "", "test_dependencyFromExplictRepeatShuffles"], [59, 3, 1, "", "test_explicitDependency"], [59, 3, 1, "", "test_titleSetterGetter"]], "armi.cases.tests.test_cases.TestCopyInterfaceInputs": [[59, 3, 1, "", "test_copyInputsHelper"], [59, 3, 1, "", "test_copyInterfaceInputs_absPath"], [59, 3, 1, "", "test_copyInterfaceInputs_multipleFiles"], [59, 3, 1, "", "test_copyInterfaceInputs_nonFilePath"], [59, 3, 1, "", "test_copyInterfaceInputs_relPath"], [59, 3, 1, "", "test_copyInterfaceInputs_singleFile"], [59, 3, 1, "", "test_copyInterfaceInputs_wildcardFile"], [59, 3, 1, "", "test_failOnDuplicateSetting"]], "armi.cases.tests.test_cases.TestExtraInputWriting": [[59, 3, 1, "", "test_writeInput"]], "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles": [[59, 3, 1, "", "defineSettings"], [59, 3, 1, "", "exposeInterfaces"]], "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting": [[59, 3, 1, "", "defineSettings"]], "armi.cases.tests.test_suiteBuilder": [[60, 2, 1, "", "LatinHyperCubeModifier"], [60, 2, 1, "", "SettingModifier"], [60, 2, 1, "", "TestFullFactorialSuiteBuilder"], [60, 2, 1, "", "TestLatinHyperCubeSuiteBuilder"], [60, 2, 1, "", "TestSeparateEffectsBuilder"]], "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder": [[60, 3, 1, "", "test_buildSuite"]], "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder": [[60, 3, 1, "", "test_addDegreeOfFreedom"], [60, 3, 1, "", "test_buildSuite"], [60, 3, 1, "", "test_initialize"]], "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder": [[60, 3, 1, "", "test_buildSuite"]], "armi.cli": [[61, 2, 1, "", "ArmiCLI"], [61, 2, 1, "", "ArmiParser"], [61, 2, 1, "", "EntryPointsPlugin"], [62, 0, 0, "-", "checkInputs"], [63, 0, 0, "-", "cleanTemps"], [64, 0, 0, "-", "clone"], [65, 0, 0, "-", "compareCases"], [66, 0, 0, "-", "database"], [67, 0, 0, "-", "entryPoint"], [68, 0, 0, "-", "gridGui"], [69, 0, 0, "-", "migrateInputs"], [70, 0, 0, "-", "modify"], [71, 0, 0, "-", "reportsEntryPoint"], [72, 0, 0, "-", "run"], [73, 0, 0, "-", "runSuite"], [61, 1, 1, "", "splash"], [74, 0, 0, "-", "tests"]], "armi.cli.ArmiCLI": [[61, 3, 1, "", "executeCommand"], [61, 3, 1, "", "listCommands"], [61, 3, 1, "", "run"], [61, 3, 1, "", "showVersion"]], "armi.cli.ArmiParser": [[61, 3, 1, "", "print_help"]], "armi.cli.EntryPointsPlugin": [[61, 3, 1, "", "defineEntryPoints"]], "armi.cli.checkInputs": [[62, 2, 1, "", "CheckInputEntryPoint"], [62, 2, 1, "", "ExpandBlueprints"]], "armi.cli.checkInputs.CheckInputEntryPoint": [[62, 3, 1, "", "addOptions"], [62, 3, 1, "", "invoke"], [62, 4, 1, "", "name"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.checkInputs.ExpandBlueprints": [[62, 3, 1, "", "addOptions"], [62, 3, 1, "", "invoke"], [62, 4, 1, "", "name"], [62, 4, 1, "", "settingsArgument"], [62, 4, 1, "", "splash"]], "armi.cli.cleanTemps": [[63, 2, 1, "", "CleanTemps"]], "armi.cli.cleanTemps.CleanTemps": [[63, 3, 1, "", "invoke"], [63, 4, 1, "", "name"], [63, 4, 1, "", "settingsArgument"]], "armi.cli.clone": [[64, 2, 1, "", "CloneArmiRunCommandBatch"], [64, 2, 1, "", "CloneArmiRunCommandInteractive"], [64, 2, 1, "", "CloneSuiteCommand"]], "armi.cli.clone.CloneArmiRunCommandBatch": [[64, 3, 1, "", "addOptions"], [64, 3, 1, "", "invoke"], [64, 4, 1, "", "name"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneArmiRunCommandInteractive": [[64, 4, 1, "", "name"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneSuiteCommand": [[64, 3, 1, "", "addOptions"], [64, 3, 1, "", "invoke"], [64, 4, 1, "", "name"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases": [[65, 2, 1, "", "CompareCases"], [65, 2, 1, "", "CompareSuites"]], "armi.cli.compareCases.CompareCases": [[65, 3, 1, "", "addOptions"], [65, 3, 1, "", "invoke"], [65, 4, 1, "", "name"], [65, 3, 1, "", "parse"], [65, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases.CompareSuites": [[65, 3, 1, "", "addOptions"], [65, 3, 1, "", "invoke"], [65, 4, 1, "", "name"], [65, 4, 1, "", "settingsArgument"]], "armi.cli.database": [[66, 2, 1, "", "ExtractInputs"], [66, 2, 1, "", "InjectInputs"]], "armi.cli.database.ExtractInputs": [[66, 3, 1, "", "addOptions"], [66, 3, 1, "", "invoke"], [66, 4, 1, "", "mode"], [66, 4, 1, "", "name"], [66, 3, 1, "", "parse_args"], [66, 4, 1, "", "settingsArgument"]], "armi.cli.database.InjectInputs": [[66, 3, 1, "", "addOptions"], [66, 3, 1, "", "invoke"], [66, 4, 1, "", "mode"], [66, 4, 1, "", "name"], [66, 4, 1, "", "settingsArgument"]], "armi.cli.entryPoint": [[67, 2, 1, "", "EntryPoint"], [67, 1, 1, "", "loadSettings"], [67, 1, 1, "", "setCaseTitle"], [67, 1, 1, "", "setSetting"], [67, 1, 1, "", "storeBool"]], "armi.cli.entryPoint.EntryPoint": [[67, 3, 1, "", "addOptions"], [67, 3, 1, "", "createOptionFromSetting"], [67, 4, 1, "", "description"], [67, 3, 1, "", "invoke"], [67, 4, 1, "", "mode"], [67, 4, 1, "", "name"], [67, 3, 1, "", "parse"], [67, 3, 1, "", "parse_args"], [67, 4, 1, "", "settingsArgument"], [67, 4, 1, "", "splash"]], "armi.cli.gridGui": [[68, 2, 1, "", "GridGuiEntryPoint"]], "armi.cli.gridGui.GridGuiEntryPoint": [[68, 3, 1, "", "addOptions"], [68, 3, 1, "", "invoke"], [68, 4, 1, "", "name"], [68, 4, 1, "", "settingsArgument"]], "armi.cli.migrateInputs": [[69, 2, 1, "", "MigrateInputs"]], "armi.cli.migrateInputs.MigrateInputs": [[69, 3, 1, "", "addOptions"], [69, 3, 1, "", "invoke"], [69, 4, 1, "", "name"], [69, 4, 1, "", "settingsArgument"]], "armi.cli.modify": [[70, 2, 1, "", "ModifyCaseSettingsCommand"]], "armi.cli.modify.ModifyCaseSettingsCommand": [[70, 3, 1, "", "addOptions"], [70, 3, 1, "", "invoke"], [70, 4, 1, "", "name"], [70, 4, 1, "", "settingsArgument"]], "armi.cli.reportsEntryPoint": [[71, 2, 1, "", "ReportsEntryPoint"], [71, 1, 1, "", "createReportFromSettings"]], "armi.cli.reportsEntryPoint.ReportsEntryPoint": [[71, 3, 1, "", "addOptions"], [71, 4, 1, "", "description"], [71, 3, 1, "", "invoke"], [71, 4, 1, "", "name"], [71, 4, 1, "", "report_out_dir"], [71, 4, 1, "", "settingsArgument"], [71, 3, 1, "", "toTwoTuple"]], "armi.cli.run": [[72, 2, 1, "", "RunEntryPoint"]], "armi.cli.run.RunEntryPoint": [[72, 3, 1, "", "addOptions"], [72, 3, 1, "", "invoke"], [72, 4, 1, "", "name"], [72, 4, 1, "", "settingsArgument"]], "armi.cli.runSuite": [[73, 2, 1, "", "RunSuiteCommand"]], "armi.cli.runSuite.RunSuiteCommand": [[73, 3, 1, "", "addOptions"], [73, 3, 1, "", "invoke"], [73, 4, 1, "", "name"], [73, 4, 1, "", "settingsArgument"]], "armi.cli.tests": [[75, 0, 0, "-", "test_runEntryPoint"], [76, 0, 0, "-", "test_runSuite"]], "armi.cli.tests.test_runEntryPoint": [[75, 2, 1, "", "TestCheckInputEntryPoint"], [75, 2, 1, "", "TestCloneArmiRunCommandBatch"], [75, 2, 1, "", "TestCloneSuiteCommand"], [75, 2, 1, "", "TestCompareCases"], [75, 2, 1, "", "TestCompareIsotxsLibsEntryPoint"], [75, 2, 1, "", "TestCompareSuites"], [75, 2, 1, "", "TestExpandBlueprints"], [75, 2, 1, "", "TestExtractInputs"], [75, 2, 1, "", "TestInitializationEntryPoints"], [75, 2, 1, "", "TestInjectInputs"], [75, 2, 1, "", "TestMigrateInputs"], [75, 2, 1, "", "TestModifyCaseSettingsCommand"], [75, 2, 1, "", "TestReportsEntryPoint"], [75, 2, 1, "", "TestRunEntryPoint"], [75, 2, 1, "", "TestRunSuiteCommand"], [75, 2, 1, "", "TestVisFileEntryPointCommand"], [75, 1, 1, "", "buildTestDB"]], "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint": [[75, 3, 1, "", "test_checkInputEntryPointBasics"], [75, 3, 1, "", "test_checkInputEntryPointInvoke"]], "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch": [[75, 3, 1, "", "test_cloneArmiRunCommandBatchBasics"], [75, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeMedium"], [75, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeShort"]], "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand": [[75, 3, 1, "", "test_cloneSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareCases": [[75, 3, 1, "", "test_compareCasesBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint": [[75, 3, 1, "", "test_compareIsotxsLibsBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareSuites": [[75, 3, 1, "", "test_compareSuitesBasics"]], "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints": [[75, 3, 1, "", "test_expandBlueprintsBasics"]], "armi.cli.tests.test_runEntryPoint.TestExtractInputs": [[75, 3, 1, "", "test_extractInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints": [[75, 3, 1, "", "test_entryPointInitialization"]], "armi.cli.tests.test_runEntryPoint.TestInjectInputs": [[75, 3, 1, "", "test_injectInputsBasics"], [75, 3, 1, "", "test_injectInputsInvokeIgnore"], [75, 3, 1, "", "test_injectInputsInvokeNoData"]], "armi.cli.tests.test_runEntryPoint.TestMigrateInputs": [[75, 3, 1, "", "test_migrateInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand": [[75, 3, 1, "", "test_modifyCaseSettingsCommandBasics"], [75, 3, 1, "", "test_modifyCaseSettingsCommandInvoke"]], "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint": [[75, 3, 1, "", "test_cleanArgs"], [75, 3, 1, "", "test_reportsEntryPointBasics"], [75, 3, 1, "", "test_toTwoTuple"]], "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint": [[75, 3, 1, "", "test_executeCommand"], [75, 3, 1, "", "test_runCommandHelp"], [75, 3, 1, "", "test_runEntryPointBasics"]], "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand": [[75, 3, 1, "", "test_runSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand": [[75, 3, 1, "", "test_visFileEntryPointBasics"]], "armi.cli.tests.test_runSuite": [[76, 2, 1, "", "TestRunSuiteSuite"]], "armi.cli.tests.test_runSuite.TestRunSuiteSuite": [[76, 3, 1, "", "test_listCommand"], [76, 3, 1, "", "test_run"], [76, 3, 1, "", "test_showVersion"]], "armi.conftest": [[77, 1, 1, "", "bootstrapArmiTestEnv"], [77, 1, 1, "", "pytest_sessionstart"]], "armi.context": [[78, 2, 1, "", "Mode"], [78, 1, 1, "", "activateLocalFastPath"], [78, 1, 1, "", "cleanAllArmiTempDirs"], [78, 1, 1, "", "cleanTempDirs"], [78, 1, 1, "", "disconnectAllHdfDBs"], [78, 1, 1, "", "getFastPath"]], "armi.context.Mode": [[78, 4, 1, "", "BATCH"], [78, 4, 1, "", "GUI"], [78, 4, 1, "", "INTERACTIVE"], [78, 3, 1, "", "setMode"]], "armi.interfaces": [[79, 2, 1, "", "InputWriter"], [79, 2, 1, "", "Interface"], [79, 2, 1, "", "InterfaceInfo"], [79, 2, 1, "", "OutputReader"], [79, 2, 1, "", "STACK_ORDER"], [79, 2, 1, "", "TightCoupler"], [79, 1, 1, "", "getActiveInterfaceInfo"], [79, 1, 1, "", "isInterfaceActive"]], "armi.interfaces.InputWriter": [[79, 3, 1, "", "getInterface"], [79, 3, 1, "", "write"]], "armi.interfaces.Interface": [[79, 2, 1, "", "Distribute"], [79, 3, 1, "", "attachReactor"], [79, 3, 1, "", "bolForce"], [79, 3, 1, "", "detachReactor"], [79, 3, 1, "", "distributable"], [79, 3, 1, "", "duplicate"], [79, 3, 1, "", "enabled"], [79, 4, 1, "", "function"], [79, 3, 1, "", "getDependencies"], [79, 3, 1, "", "getHistoryParams"], [79, 3, 1, "", "getInputFiles"], [79, 3, 1, "", "getInterface"], [79, 3, 1, "", "getTightCouplingValue"], [79, 3, 1, "", "interactBOC"], [79, 3, 1, "", "interactBOL"], [79, 3, 1, "", "interactCoupled"], [79, 3, 1, "", "interactDistributeState"], [79, 3, 1, "", "interactEOC"], [79, 3, 1, "", "interactEOL"], [79, 3, 1, "", "interactError"], [79, 3, 1, "", "interactEveryNode"], [79, 3, 1, "", "interactInit"], [79, 3, 1, "", "isRequestedDetailPoint"], [79, 4, 1, "", "name"], [79, 3, 1, "", "nameContains"], [79, 3, 1, "", "postDistributeState"], [79, 3, 1, "", "preDistributeState"], [79, 3, 1, "", "readOutput"], [79, 3, 1, "", "specifyInputs"], [79, 3, 1, "", "updatePhysicsCouplingControl"], [79, 3, 1, "", "workerOperate"], [79, 3, 1, "", "writeInput"]], "armi.interfaces.Interface.Distribute": [[79, 4, 1, "", "DUPLICATE"], [79, 4, 1, "", "NEW"], [79, 4, 1, "", "SKIP"]], "armi.interfaces.InterfaceInfo": [[79, 4, 1, "", "interfaceCls"], [79, 4, 1, "", "kwargs"], [79, 4, 1, "", "order"]], "armi.interfaces.OutputReader": [[79, 3, 1, "", "apply"], [79, 3, 1, "", "getInterface"], [79, 3, 1, "", "read"]], "armi.interfaces.STACK_ORDER": [[79, 4, 1, "", "AFTER"], [79, 4, 1, "", "BEFORE"], [79, 4, 1, "", "BOOKKEEPING"], [79, 4, 1, "", "CRITICAL_CONTROL"], [79, 4, 1, "", "CROSS_SECTIONS"], [79, 4, 1, "", "DEPLETION"], [79, 4, 1, "", "FLUX"], [79, 4, 1, "", "FUEL_MANAGEMENT"], [79, 4, 1, "", "FUEL_PERFORMANCE"], [79, 4, 1, "", "POSTPROCESSING"], [79, 4, 1, "", "PREPROCESSING"], [79, 4, 1, "", "REACTIVITY_COEFFS"], [79, 4, 1, "", "THERMAL_HYDRAULICS"], [79, 4, 1, "", "TRANSIENT"]], "armi.interfaces.TightCoupler": [[79, 3, 1, "", "getListDimension"], [79, 3, 1, "", "isConverged"], [79, 3, 1, "", "storePreviousIterationValue"]], "armi.materials": [[81, 0, 0, "-", "air"], [82, 0, 0, "-", "alloy200"], [83, 0, 0, "-", "b4c"], [84, 0, 0, "-", "be9"], [85, 0, 0, "-", "caH2"], [86, 0, 0, "-", "californium"], [87, 0, 0, "-", "concrete"], [88, 0, 0, "-", "copper"], [89, 0, 0, "-", "cs"], [90, 0, 0, "-", "custom"], [91, 0, 0, "-", "graphite"], [92, 0, 0, "-", "hafnium"], [93, 0, 0, "-", "hastelloyN"], [94, 0, 0, "-", "ht9"], [80, 1, 1, "", "importMaterialsIntoModuleNamespace"], [95, 0, 0, "-", "inconel"], [96, 0, 0, "-", "inconel600"], [97, 0, 0, "-", "inconel625"], [98, 0, 0, "-", "inconel800"], [99, 0, 0, "-", "inconelPE16"], [100, 0, 0, "-", "inconelX750"], [80, 1, 1, "", "iterAllMaterialClassesInNamespace"], [101, 0, 0, "-", "lead"], [102, 0, 0, "-", "leadBismuth"], [103, 0, 0, "-", "lithium"], [104, 0, 0, "-", "magnesium"], [105, 0, 0, "-", "material"], [106, 0, 0, "-", "mgO"], [107, 0, 0, "-", "mixture"], [108, 0, 0, "-", "molybdenum"], [109, 0, 0, "-", "mox"], [110, 0, 0, "-", "nZ"], [111, 0, 0, "-", "potassium"], [80, 1, 1, "", "resolveMaterialClassByName"], [112, 0, 0, "-", "scandiumOxide"], [80, 1, 1, "", "setMaterialNamespaceOrder"], [113, 0, 0, "-", "siC"], [114, 0, 0, "-", "sodium"], [115, 0, 0, "-", "sodiumChloride"], [116, 0, 0, "-", "sulfur"], [117, 0, 0, "-", "tZM"], [118, 0, 0, "-", "tantalum"], [119, 0, 0, "-", "tests"], [132, 0, 0, "-", "thU"], [133, 0, 0, "-", "thorium"], [134, 0, 0, "-", "thoriumOxide"], [135, 0, 0, "-", "uThZr"], [136, 0, 0, "-", "uZr"], [137, 0, 0, "-", "uranium"], [138, 0, 0, "-", "uraniumOxide"], [139, 0, 0, "-", "void"], [140, 0, 0, "-", "water"], [141, 0, 0, "-", "yttriumOxide"], [142, 0, 0, "-", "zincOxide"], [143, 0, 0, "-", "zr"]], "armi.materials.air": [[81, 2, 1, "", "Air"]], "armi.materials.air.Air": [[81, 3, 1, "", "heatCapacity"], [81, 4, 1, "", "propertyValidTemperature"], [81, 3, 1, "", "pseudoDensity"], [81, 3, 1, "", "setDefaultMassFracs"], [81, 3, 1, "", "specificVolumeLiquid"], [81, 3, 1, "", "thermalConductivity"]], "armi.materials.alloy200": [[82, 2, 1, "", "Alloy200"]], "armi.materials.alloy200.Alloy200": [[82, 3, 1, "", "density"], [82, 3, 1, "", "linearExpansion"], [82, 4, 1, "", "linearExpansionTable"], [82, 4, 1, "", "linearExpansionTableK"], [82, 4, 1, "", "modelConst"], [82, 4, 1, "", "propertyValidTemperature"], [82, 4, 1, "", "referenceMaxPercentImpurites"], [82, 4, 1, "", "references"], [82, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.b4c": [[83, 2, 1, "", "B4C"]], "armi.materials.b4c.B4C": [[83, 3, 1, "", "applyInputParams"], [83, 3, 1, "", "density"], [83, 4, 1, "", "enrichedNuclide"], [83, 3, 1, "", "getMassEnrichmentFromNumEnrich"], [83, 3, 1, "", "linearExpansionPercent"], [83, 4, 1, "", "propertyValidTemperature"], [83, 3, 1, "", "pseudoDensity"], [83, 3, 1, "", "setDefaultMassFracs"], [83, 3, 1, "", "setNewMassFracsFromMassEnrich"], [83, 3, 1, "", "updateTD"]], "armi.materials.be9": [[84, 2, 1, "", "Be9"]], "armi.materials.be9.Be9": [[84, 3, 1, "", "density"], [84, 3, 1, "", "linearExpansionPercent"], [84, 4, 1, "", "propertyValidTemperature"], [84, 3, 1, "", "setDefaultMassFracs"], [84, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.caH2": [[85, 2, 1, "", "CaH2"]], "armi.materials.caH2.CaH2": [[85, 3, 1, "", "density"], [85, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.californium": [[86, 2, 1, "", "Californium"]], "armi.materials.californium.Californium": [[86, 3, 1, "", "density"], [86, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.concrete": [[87, 2, 1, "", "Concrete"]], "armi.materials.concrete.Concrete": [[87, 3, 1, "", "density"], [87, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.copper": [[88, 2, 1, "", "Cu"]], "armi.materials.copper.Cu": [[88, 3, 1, "", "density"], [88, 3, 1, "", "linearExpansionPercent"], [88, 4, 1, "", "propertyValidTemperature"], [88, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.cs": [[89, 2, 1, "", "Cs"]], "armi.materials.cs.Cs": [[89, 3, 1, "", "meltingPoint"], [89, 3, 1, "", "pseudoDensity"], [89, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.custom": [[90, 2, 1, "", "Custom"]], "armi.materials.custom.Custom": [[90, 3, 1, "", "density"], [90, 4, 1, "", "enrichedNuclide"], [90, 3, 1, "", "pseudoDensity"], [90, 3, 1, "", "setMassFrac"]], "armi.materials.graphite": [[91, 2, 1, "", "Graphite"]], "armi.materials.graphite.Graphite": [[91, 3, 1, "", "density"], [91, 3, 1, "", "linearExpansionPercent"], [91, 3, 1, "", "setDefaultMassFracs"], [91, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.hafnium": [[92, 2, 1, "", "Hafnium"]], "armi.materials.hafnium.Hafnium": [[92, 3, 1, "", "density"], [92, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.hastelloyN": [[93, 2, 1, "", "HastelloyN"]], "armi.materials.hastelloyN.HastelloyN": [[93, 3, 1, "", "density"], [93, 3, 1, "", "heatCapacity"], [93, 3, 1, "", "linearExpansionPercent"], [93, 4, 1, "", "materialIntro"], [93, 3, 1, "", "meanCoefficientThermalExpansion"], [93, 4, 1, "", "propertyValidTemperature"], [93, 4, 1, "", "refTempK"], [93, 3, 1, "", "setDefaultMassFracs"], [93, 3, 1, "", "thermalConductivity"]], "armi.materials.ht9": [[94, 2, 1, "", "HT9"]], "armi.materials.ht9.HT9": [[94, 3, 1, "", "density"], [94, 3, 1, "", "linearExpansionPercent"], [94, 4, 1, "", "propertyValidTemperature"], [94, 3, 1, "", "setDefaultMassFracs"], [94, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel": [[95, 2, 1, "", "Inconel"], [95, 2, 1, "", "Inconel617"]], "armi.materials.inconel.Inconel": [[95, 3, 1, "", "density"], [95, 4, 1, "", "references"], [95, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconel600": [[96, 2, 1, "", "Inconel600"]], "armi.materials.inconel600.Inconel600": [[96, 3, 1, "", "density"], [96, 3, 1, "", "heatCapacity"], [96, 3, 1, "", "linearExpansion"], [96, 3, 1, "", "linearExpansionPercent"], [96, 3, 1, "", "polyfitHeatCapacity"], [96, 3, 1, "", "polyfitLinearExpansionPercent"], [96, 3, 1, "", "polyfitThermalConductivity"], [96, 4, 1, "", "propertyValidTemperature"], [96, 4, 1, "", "refTempK"], [96, 4, 1, "", "references"], [96, 3, 1, "", "setDefaultMassFracs"], [96, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel625": [[97, 2, 1, "", "Inconel625"]], "armi.materials.inconel625.Inconel625": [[97, 3, 1, "", "density"], [97, 3, 1, "", "heatCapacity"], [97, 3, 1, "", "linearExpansion"], [97, 3, 1, "", "linearExpansionPercent"], [97, 3, 1, "", "polyfitHeatCapacity"], [97, 3, 1, "", "polyfitLinearExpansionPercent"], [97, 3, 1, "", "polyfitThermalConductivity"], [97, 4, 1, "", "propertyValidTemperature"], [97, 4, 1, "", "refTempK"], [97, 4, 1, "", "references"], [97, 3, 1, "", "setDefaultMassFracs"], [97, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel800": [[98, 2, 1, "", "Inconel800"]], "armi.materials.inconel800.Inconel800": [[98, 3, 1, "", "density"], [98, 3, 1, "", "linearExpansionPercent"], [98, 3, 1, "", "meanCoefficientThermalExpansion"], [98, 4, 1, "", "propertyValidTemperature"], [98, 4, 1, "", "refTempK"], [98, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelPE16": [[99, 2, 1, "", "InconelPE16"]], "armi.materials.inconelPE16.InconelPE16": [[99, 3, 1, "", "density"], [99, 4, 1, "", "references"], [99, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelX750": [[100, 2, 1, "", "InconelX750"]], "armi.materials.inconelX750.InconelX750": [[100, 3, 1, "", "density"], [100, 3, 1, "", "heatCapacity"], [100, 3, 1, "", "linearExpansion"], [100, 3, 1, "", "linearExpansionPercent"], [100, 3, 1, "", "polyfitHeatCapacity"], [100, 3, 1, "", "polyfitLinearExpansionPercent"], [100, 3, 1, "", "polyfitThermalConductivity"], [100, 4, 1, "", "propertyValidTemperature"], [100, 4, 1, "", "refTempK"], [100, 4, 1, "", "references"], [100, 3, 1, "", "setDefaultMassFracs"], [100, 3, 1, "", "thermalConductivity"]], "armi.materials.lead": [[101, 2, 1, "", "Lead"]], "armi.materials.lead.Lead": [[101, 3, 1, "", "heatCapacity"], [101, 4, 1, "", "propertyValidTemperature"], [101, 3, 1, "", "pseudoDensity"], [101, 3, 1, "", "setDefaultMassFracs"], [101, 3, 1, "", "volumetricExpansion"]], "armi.materials.leadBismuth": [[102, 2, 1, "", "LeadBismuth"]], "armi.materials.leadBismuth.LeadBismuth": [[102, 3, 1, "", "dynamicVisc"], [102, 3, 1, "", "heatCapacity"], [102, 4, 1, "", "propertyValidTemperature"], [102, 3, 1, "", "pseudoDensity"], [102, 3, 1, "", "setDefaultMassFracs"], [102, 3, 1, "", "thermalConductivity"], [102, 3, 1, "", "volumetricExpansion"]], "armi.materials.lithium": [[103, 2, 1, "", "Lithium"]], "armi.materials.lithium.Lithium": [[103, 3, 1, "", "applyInputParams"], [103, 3, 1, "", "boilingPoint"], [103, 4, 1, "", "enrichedNuclide"], [103, 3, 1, "", "heatCapacity"], [103, 3, 1, "", "meltingPoint"], [103, 3, 1, "", "pseudoDensity"], [103, 4, 1, "", "references"], [103, 3, 1, "", "setDefaultMassFracs"], [103, 3, 1, "", "thermalConductivity"]], "armi.materials.magnesium": [[104, 2, 1, "", "Magnesium"]], "armi.materials.magnesium.Magnesium": [[104, 4, 1, "", "propertyValidTemperature"], [104, 3, 1, "", "pseudoDensity"], [104, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.material": [[105, 2, 1, "", "Fluid"], [105, 2, 1, "", "FuelMaterial"], [105, 2, 1, "", "Material"], [105, 2, 1, "", "SimpleSolid"], [105, 1, 1, "", "parentAwareDensityRedirect"]], "armi.materials.material.Fluid": [[105, 3, 1, "", "density"], [105, 3, 1, "", "getTempChangeForDensityChange"], [105, 3, 1, "", "getThermalExpansionDensityReduction"], [105, 3, 1, "", "linearExpansion"]], "armi.materials.material.FuelMaterial": [[105, 3, 1, "", "applyInputParams"], [105, 4, 1, "", "class1_custom_isotopics"], [105, 4, 1, "", "class1_wt_frac"], [105, 4, 1, "", "class2_custom_isotopics"], [105, 3, 1, "", "density"], [105, 3, 1, "", "duplicate"], [105, 4, 1, "", "puFrac"], [105, 4, 1, "", "uFrac"], [105, 4, 1, "", "zrFrac"]], "armi.materials.material.Material": [[105, 4, 1, "", "DATA_SOURCE"], [105, 3, 1, "", "adjustMassEnrichment"], [105, 3, 1, "", "adjustMassFrac"], [105, 3, 1, "", "adjustTD"], [105, 3, 1, "", "applyInputParams"], [105, 3, 1, "", "backUp"], [105, 3, 1, "", "checkPropertyTempRange"], [105, 3, 1, "", "checkTempRange"], [105, 3, 1, "", "clearCache"], [105, 3, 1, "", "clearMassFrac"], [105, 3, 1, "", "density"], [105, 3, 1, "", "densityKgM3"], [105, 3, 1, "", "densityTimesHeatCapacity"], [105, 3, 1, "", "duplicate"], [105, 4, 1, "", "enrichedNuclide"], [105, 5, 1, "", "gasPorosity"], [105, 3, 1, "", "getChildren"], [105, 3, 1, "", "getChildrenWithFlags"], [105, 3, 1, "", "getCorrosionRate"], [105, 3, 1, "", "getMassFrac"], [105, 3, 1, "", "getName"], [105, 3, 1, "", "getNuclides"], [105, 3, 1, "", "getProperty"], [105, 3, 1, "", "getTD"], [105, 3, 1, "", "getTempChangeForDensityChange"], [105, 3, 1, "", "getTemperatureAtDensity"], [105, 3, 1, "", "getThermalExpansionDensityReduction"], [105, 3, 1, "", "heatCapacity"], [105, 3, 1, "", "linearExpansion"], [105, 3, 1, "", "linearExpansionFactor"], [105, 3, 1, "", "linearExpansionPercent"], [105, 5, 1, "", "liquidPorosity"], [105, 4, 1, "", "modelConst"], [105, 5, 1, "", "name"], [105, 4, 1, "", "propertyValidTemperature"], [105, 3, 1, "", "pseudoDensity"], [105, 3, 1, "", "pseudoDensityKgM3"], [105, 4, 1, "", "references"], [105, 3, 1, "", "removeNucMassFrac"], [105, 3, 1, "", "restoreBackup"], [105, 3, 1, "", "setDefaultMassFracs"], [105, 3, 1, "", "setMassFrac"], [105, 3, 1, "", "thermalConductivity"], [105, 4, 1, "", "thermalScatteringLaws"], [105, 3, 1, "", "volumetricExpansion"], [105, 3, 1, "", "yieldStrength"]], "armi.materials.material.SimpleSolid": [[105, 3, 1, "", "density"], [105, 3, 1, "", "linearExpansionPercent"], [105, 3, 1, "", "pseudoDensity"], [105, 4, 1, "", "refTempK"]], "armi.materials.mgO": [[106, 2, 1, "", "MgO"]], "armi.materials.mgO.MgO": [[106, 3, 1, "", "density"], [106, 3, 1, "", "linearExpansionPercent"], [106, 4, 1, "", "propertyValidTemperature"], [106, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.molybdenum": [[108, 2, 1, "", "Molybdenum"]], "armi.materials.molybdenum.Molybdenum": [[108, 3, 1, "", "density"], [108, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.mox": [[109, 2, 1, "", "MOX"]], "armi.materials.mox.MOX": [[109, 3, 1, "", "applyInputParams"], [109, 4, 1, "", "enrichedNuclide"], [109, 3, 1, "", "getMassFracPuO2"], [109, 3, 1, "", "getMolFracPuO2"], [109, 3, 1, "", "meltingPoint"], [109, 3, 1, "", "setDefaultMassFracs"], [109, 3, 1, "", "setMassFracPuO2"]], "armi.materials.nZ": [[110, 2, 1, "", "NZ"]], "armi.materials.nZ.NZ": [[110, 3, 1, "", "density"], [110, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.potassium": [[111, 2, 1, "", "Potassium"]], "armi.materials.potassium.Potassium": [[111, 4, 1, "", "propertyValidTemperature"], [111, 3, 1, "", "pseudoDensity"]], "armi.materials.scandiumOxide": [[112, 2, 1, "", "Sc2O3"]], "armi.materials.scandiumOxide.Sc2O3": [[112, 3, 1, "", "density"], [112, 3, 1, "", "linearExpansionPercent"], [112, 4, 1, "", "propertyValidTemperature"], [112, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.siC": [[113, 2, 1, "", "SiC"]], "armi.materials.siC.SiC": [[113, 3, 1, "", "cumulativeLinearExpansion"], [113, 3, 1, "", "density"], [113, 3, 1, "", "heatCapacity"], [113, 3, 1, "", "meltingPoint"], [113, 4, 1, "", "propertyEquation"], [113, 4, 1, "", "propertyNotes"], [113, 4, 1, "", "propertyUnits"], [113, 4, 1, "", "propertyValidTemperature"], [113, 3, 1, "", "pseudoDensity"], [113, 4, 1, "", "refTempK"], [113, 4, 1, "", "references"], [113, 3, 1, "", "setDefaultMassFracs"], [113, 3, 1, "", "thermalConductivity"], [113, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.sodium": [[114, 2, 1, "", "Sodium"]], "armi.materials.sodium.Sodium": [[114, 3, 1, "", "enthalpy"], [114, 4, 1, "", "propertyValidTemperature"], [114, 3, 1, "", "pseudoDensity"], [114, 3, 1, "", "setDefaultMassFracs"], [114, 3, 1, "", "specificVolumeLiquid"], [114, 3, 1, "", "thermalConductivity"]], "armi.materials.sodiumChloride": [[115, 2, 1, "", "NaCl"]], "armi.materials.sodiumChloride.NaCl": [[115, 3, 1, "", "density"], [115, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.sulfur": [[116, 2, 1, "", "Sulfur"]], "armi.materials.sulfur.Sulfur": [[116, 3, 1, "", "applyInputParams"], [116, 4, 1, "", "propertyValidTemperature"], [116, 3, 1, "", "pseudoDensity"], [116, 3, 1, "", "setDefaultMassFracs"], [116, 3, 1, "", "updateTD"], [116, 3, 1, "", "volumetricExpansion"]], "armi.materials.tZM": [[117, 2, 1, "", "TZM"]], "armi.materials.tZM.TZM": [[117, 3, 1, "", "density"], [117, 3, 1, "", "linearExpansionPercent"], [117, 4, 1, "", "percentThermalExpansion"], [117, 4, 1, "", "propertyValidTemperature"], [117, 4, 1, "", "references"], [117, 3, 1, "", "setDefaultMassFracs"], [117, 4, 1, "", "temperatureC"]], "armi.materials.tantalum": [[118, 2, 1, "", "Tantalum"]], "armi.materials.tantalum.Tantalum": [[118, 3, 1, "", "density"], [118, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.tests": [[120, 0, 0, "-", "test__init__"], [121, 0, 0, "-", "test_air"], [122, 0, 0, "-", "test_b4c"], [123, 0, 0, "-", "test_be9"], [124, 0, 0, "-", "test_graphite"], [125, 0, 0, "-", "test_lithium"], [126, 0, 0, "-", "test_materials"], [127, 0, 0, "-", "test_sic"], [128, 0, 0, "-", "test_sulfur"], [129, 0, 0, "-", "test_thoriumOxide"], [130, 0, 0, "-", "test_uZr"], [131, 0, 0, "-", "test_water"]], "armi.materials.tests.test__init__": [[120, 2, 1, "", "Materials__init__Tests"], [120, 1, 1, "", "betterSubClassCheck"]], "armi.materials.tests.test__init__.Materials__init__Tests": [[120, 3, 1, "", "test_canAccessClassesFromPackage"], [120, 3, 1, "", "test_packageClassesEqualModuleClasses"]], "armi.materials.tests.test_air": [[121, 2, 1, "", "Test_Air"]], "armi.materials.tests.test_air.Test_Air": [[121, 3, 1, "", "test_heatCapacity"], [121, 3, 1, "", "test_massFrac"], [121, 3, 1, "", "test_pseudoDensity"], [121, 3, 1, "", "test_thermalConductivity"], [121, 3, 1, "", "test_validRanges"]], "armi.materials.tests.test_b4c": [[122, 2, 1, "", "B4C_TestCase"]], "armi.materials.tests.test_b4c.B4C_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_be9": [[123, 2, 1, "", "Test_Be9"]], "armi.materials.tests.test_be9.Test_Be9": [[123, 4, 1, "", "MAT_CLASS"], [123, 3, 1, "", "test_propertyValidTemperature"], [123, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_graphite": [[124, 2, 1, "", "Graphite_TestCase"]], "armi.materials.tests.test_graphite.Graphite_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_density"], [124, 3, 1, "", "test_linearExpansionPercent"], [124, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_lithium": [[125, 2, 1, "", "Lithium_TestCase"]], "armi.materials.tests.test_lithium.Lithium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 4, 1, "", "defaultMassFrac"], [125, 3, 1, "", "test_Lithium_material_modifications"], [125, 3, 1, "", "test_boilingPoint"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_meltingPoint"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials": [[126, 2, 1, "", "Alloy200_TestCase"], [126, 2, 1, "", "CaH2_TestCase"], [126, 2, 1, "", "Californium_TestCase"], [126, 2, 1, "", "Cesium_TestCase"], [126, 2, 1, "", "Copper_TestCase"], [126, 2, 1, "", "FuelMaterial_TestCase"], [126, 2, 1, "", "Hafnium_TestCase"], [126, 2, 1, "", "HastelloyN_TestCase"], [126, 2, 1, "", "Inconel600_TestCase"], [126, 2, 1, "", "Inconel625_TestCase"], [126, 2, 1, "", "InconelX750_TestCase"], [126, 2, 1, "", "Inconel_TestCase"], [126, 2, 1, "", "LeadBismuth_TestCase"], [126, 2, 1, "", "Lead_TestCase"], [126, 2, 1, "", "MOX_TestCase"], [126, 2, 1, "", "MagnesiumOxide_TestCase"], [126, 2, 1, "", "Magnesium_TestCase"], [126, 2, 1, "", "MaterialConstructionTests"], [126, 2, 1, "", "MaterialFindingTests"], [126, 2, 1, "", "Mixture_TestCase"], [126, 2, 1, "", "Molybdenum_TestCase"], [126, 2, 1, "", "NaCl_TestCase"], [126, 2, 1, "", "NiobiumZirconium_TestCase"], [126, 2, 1, "", "Potassium_TestCase"], [126, 2, 1, "", "ScandiumOxide_TestCase"], [126, 2, 1, "", "Sodium_TestCase"], [126, 2, 1, "", "Sulfur_TestCase"], [126, 2, 1, "", "TZM_TestCase"], [126, 2, 1, "", "Tantalum_TestCase"], [126, 2, 1, "", "ThoriumOxide_TestCase"], [126, 2, 1, "", "ThoriumUraniumMetal_TestCase"], [126, 2, 1, "", "Thorium_TestCase"], [126, 2, 1, "", "UraniumOxide_TestCase"], [126, 2, 1, "", "Uranium_TestCase"], [126, 2, 1, "", "Void_TestCase"], [126, 2, 1, "", "YttriumOxide_TestCase"], [126, 2, 1, "", "ZincOxide_TestCase"], [126, 2, 1, "", "Zr_TestCase"]], "armi.materials.tests.test_materials.Alloy200_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_linearExpansionHotter"], [126, 3, 1, "", "test_nickleContent"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.CaH2_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Californium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_getCorrosionRate"], [126, 3, 1, "", "test_porosities"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Cesium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Copper_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_densityNeverChanges"], [126, 3, 1, "", "test_getChildren"], [126, 3, 1, "", "test_getChildrenWithFlags"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.FuelMaterial_TestCase": [[126, 4, 1, "", "baseInput"], [126, 3, 1, "", "loadAssembly"], [126, 3, 1, "", "test_class1Class2_class1_wt_frac"], [126, 3, 1, "", "test_class1Class2_classX_custom_isotopics"]], "armi.materials.tests.test_materials.Hafnium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.HastelloyN_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_meanCoefficientThermalExpansion"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Inconel600_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_00_setDefaultMassFracs"], [126, 3, 1, "", "test_01_linearExpansionPercent"], [126, 3, 1, "", "test_02_linearExpansion"], [126, 3, 1, "", "test_03_pseudoDensity"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_polyfitHeatCapacity"], [126, 3, 1, "", "test_polyfitLinearExpansionPercent"], [126, 3, 1, "", "test_polyfitThermalConductivity"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel625_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_00_setDefaultMassFracs"], [126, 3, 1, "", "test_01_linearExpansionPercent"], [126, 3, 1, "", "test_02_linearExpansion"], [126, 3, 1, "", "test_03_pseudoDensity"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_polyfitHeatCapacity"], [126, 3, 1, "", "test_polyfitLinearExpansionPercent"], [126, 3, 1, "", "test_polyfitThermalConductivity"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.InconelX750_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_00_setDefaultMassFracs"], [126, 3, 1, "", "test_01_linearExpansionPercent"], [126, 3, 1, "", "test_02_linearExpansion"], [126, 3, 1, "", "test_03_pseudoDensity"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_polyfitHeatCapacity"], [126, 3, 1, "", "test_polyfitLinearExpansionPercent"], [126, 3, 1, "", "test_polyfitThermalConductivity"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel_TestCase": [[126, 3, 1, "", "test_Iconel800_linearExpansion"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.LeadBismuth_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_dynamicVisc"], [126, 3, 1, "", "test_getTempChangeForDensityChange"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_setDefaultMassFracs"], [126, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.Lead_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_setDefaultMassFracs"], [126, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.MOX_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_applyInputParams"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_getMassFracPuO2"], [126, 3, 1, "", "test_getMeltingPoint"], [126, 3, 1, "", "test_getMolFracPuO2"]], "armi.materials.tests.test_materials.MagnesiumOxide_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Magnesium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.MaterialConstructionTests": [[126, 3, 1, "", "test_material_initialization"]], "armi.materials.tests.test_materials.MaterialFindingTests": [[126, 3, 1, "", "test_findMaterial"], [126, 3, 1, "", "test_namespacing"]], "armi.materials.tests.test_materials.Mixture_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.Molybdenum_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.NaCl_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.NiobiumZirconium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Potassium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ScandiumOxide_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Sodium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_enthalpy"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_specificVolumeLiquid"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Sulfur_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_setDefaultMassFracs"], [126, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.TZM_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_00_applyInputParams"], [126, 3, 1, "", "test_01_pseudoDensity"], [126, 3, 1, "", "test_02_linearExpansionPercent"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Tantalum_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ThoriumOxide_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_meltingPoint"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_meltingPoint"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Thorium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_meltingPoint"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_setDefaultMassFracs"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.UraniumOxide_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_adjustMassEnrichment"], [126, 3, 1, "", "test_applyInputParams"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_densityTimesHeatCapactiy"], [126, 3, 1, "", "test_duplicate"], [126, 3, 1, "", "test_getDensityExpansion3D"], [126, 3, 1, "", "test_getTempChangeForDensityChange"], [126, 3, 1, "", "test_getTemperatureAtDensity"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_meltingPoint"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_removeNucMassFrac"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Uranium_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_applyInputParams"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Void_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.YttriumOxide_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ZincOxide_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Zr_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_linearExpansion"], [126, 3, 1, "", "test_linearExpansionPercent"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"], [126, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_sic": [[127, 2, 1, "", "Test_SiC"]], "armi.materials.tests.test_sic.Test_SiC": [[127, 4, 1, "", "MAT_CLASS"], [127, 3, 1, "", "test_heatCapacity"], [127, 3, 1, "", "test_meltingPoint"], [127, 3, 1, "", "test_propertyValidTemperature"], [127, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_sulfur": [[128, 2, 1, "", "Sulfur_TestCase"]], "armi.materials.tests.test_sulfur.Sulfur_TestCase": [[128, 4, 1, "", "MAT_CLASS"], [128, 3, 1, "", "test_propertyValidTemperature"], [128, 3, 1, "", "test_sulfur_density_frac"]], "armi.materials.tests.test_thoriumOxide": [[129, 2, 1, "", "ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase": [[129, 4, 1, "", "MAT_CLASS"], [129, 3, 1, "", "test_linearExpansionPercent"], [129, 3, 1, "", "test_propertyValidTemperature"], [129, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_uZr": [[130, 2, 1, "", "UZR_TestCase"]], "armi.materials.tests.test_uZr.UZR_TestCase": [[130, 4, 1, "", "MAT_CLASS"], [130, 3, 1, "", "test_TD"], [130, 3, 1, "", "test_cache"], [130, 3, 1, "", "test_density"], [130, 3, 1, "", "test_densityKgM3"], [130, 3, 1, "", "test_duplicate"], [130, 3, 1, "", "test_isPicklable"], [130, 3, 1, "", "test_propertyValidTemperature"], [130, 3, 1, "", "test_pseudoDensityKgM3"]], "armi.materials.tests.test_water": [[131, 2, 1, "", "Test_Water"]], "armi.materials.tests.test_water.Test_Water": [[131, 3, 1, "", "test_massFrac"], [131, 3, 1, "", "test_propertyValidTemperature"], [131, 3, 1, "", "test_validateNames"], [131, 3, 1, "", "test_water_at_boiling"], [131, 3, 1, "", "test_water_at_critcalPoint"], [131, 3, 1, "", "test_water_at_freezing"]], "armi.materials.thU": [[132, 2, 1, "", "ThU"]], "armi.materials.thU.ThU": [[132, 3, 1, "", "applyInputParams"], [132, 4, 1, "", "enrichedNuclide"], [132, 3, 1, "", "getEnrichment"], [132, 3, 1, "", "linearExpansion"], [132, 3, 1, "", "meltingPoint"], [132, 4, 1, "", "propertyValidTemperature"], [132, 3, 1, "", "setDefaultMassFracs"], [132, 3, 1, "", "thermalConductivity"]], "armi.materials.thorium": [[133, 2, 1, "", "Thorium"]], "armi.materials.thorium.Thorium": [[133, 3, 1, "", "linearExpansion"], [133, 3, 1, "", "meltingPoint"], [133, 4, 1, "", "propertyValidTemperature"], [133, 3, 1, "", "setDefaultMassFracs"], [133, 3, 1, "", "thermalConductivity"]], "armi.materials.thoriumOxide": [[134, 2, 1, "", "ThO2"], [134, 2, 1, "", "ThoriumOxide"]], "armi.materials.thoriumOxide.ThoriumOxide": [[134, 3, 1, "", "applyInputParams"], [134, 3, 1, "", "density"], [134, 3, 1, "", "linearExpansion"], [134, 3, 1, "", "linearExpansionPercent"], [134, 3, 1, "", "meltingPoint"], [134, 4, 1, "", "propertyValidTemperature"], [134, 3, 1, "", "setDefaultMassFracs"], [134, 3, 1, "", "thermalConductivity"]], "armi.materials.uThZr": [[135, 2, 1, "", "UThZr"]], "armi.materials.uThZr.UThZr": [[135, 3, 1, "", "applyInputParams"], [135, 4, 1, "", "enrichedNuclide"], [135, 3, 1, "", "pseudoDensity"], [135, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.uZr": [[136, 2, 1, "", "UZr"]], "armi.materials.uZr.UZr": [[136, 3, 1, "", "applyInputParams"], [136, 4, 1, "", "enrichedNuclide"], [136, 3, 1, "", "linearExpansionPercent"], [136, 3, 1, "", "setDefaultMassFracs"], [136, 4, 1, "", "uFracDefault"], [136, 4, 1, "", "zrFracDefault"]], "armi.materials.uranium": [[137, 2, 1, "", "Uranium"]], "armi.materials.uranium.Uranium": [[137, 3, 1, "", "applyInputParams"], [137, 3, 1, "", "density"], [137, 4, 1, "", "enrichedNuclide"], [137, 3, 1, "", "heatCapacity"], [137, 3, 1, "", "linearExpansion"], [137, 3, 1, "", "linearExpansionPercent"], [137, 4, 1, "", "materialIntro"], [137, 3, 1, "", "meltingPoint"], [137, 4, 1, "", "propertyEquation"], [137, 4, 1, "", "propertyNotes"], [137, 4, 1, "", "propertyRawData"], [137, 4, 1, "", "propertyUnits"], [137, 4, 1, "", "propertyValidTemperature"], [137, 3, 1, "", "pseudoDensity"], [137, 4, 1, "", "refDens"], [137, 4, 1, "", "references"], [137, 3, 1, "", "setDefaultMassFracs"], [137, 3, 1, "", "thermalConductivity"]], "armi.materials.uraniumOxide": [[138, 2, 1, "", "HeatCapacityConstants"], [138, 2, 1, "", "UO2"], [138, 2, 1, "", "UraniumOxide"]], "armi.materials.uraniumOxide.HeatCapacityConstants": [[138, 4, 1, "", "Ea"], [138, 4, 1, "", "c1"], [138, 4, 1, "", "c2"], [138, 4, 1, "", "c3"], [138, 4, 1, "", "theta"]], "armi.materials.uraniumOxide.UraniumOxide": [[138, 4, 1, "", "REFERENCE_TEMPERATURE"], [138, 3, 1, "", "applyInputParams"], [138, 3, 1, "", "density"], [138, 4, 1, "", "enrichedNuclide"], [138, 3, 1, "", "heatCapacity"], [138, 4, 1, "", "heatCapacityConstants"], [138, 3, 1, "", "linearExpansion"], [138, 3, 1, "", "linearExpansionPercent"], [138, 3, 1, "", "meltingPoint"], [138, 4, 1, "", "propertyUnits"], [138, 4, 1, "", "propertyValidTemperature"], [138, 4, 1, "", "references"], [138, 3, 1, "", "setDefaultMassFracs"], [138, 3, 1, "", "thermalConductivity"], [138, 4, 1, "", "thermalConductivityTable"], [138, 4, 1, "", "thermalConductivityTableK"], [138, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.void": [[139, 2, 1, "", "Void"]], "armi.materials.void.Void": [[139, 3, 1, "", "density"], [139, 3, 1, "", "pseudoDensity"]], "armi.materials.water": [[140, 2, 1, "", "SaturatedSteam"], [140, 2, 1, "", "SaturatedWater"], [140, 2, 1, "", "Water"]], "armi.materials.water.SaturatedSteam": [[140, 3, 1, "", "pseudoDensity"]], "armi.materials.water.SaturatedWater": [[140, 3, 1, "", "pseudoDensity"]], "armi.materials.water.Water": [[140, 4, 1, "", "ALPHA_0"], [140, 4, 1, "", "DENSITY_CRITICAL_GPERCUBICCENTIMETER"], [140, 4, 1, "", "DENSITY_CRITICAL_KGPERCUBICMETER"], [140, 4, 1, "", "PHI_0"], [140, 4, 1, "", "TEMPERATURE_CRITICAL_K"], [140, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_MPA"], [140, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_PA"], [140, 3, 1, "", "auxiliaryQuantitySpecificEnthalpy"], [140, 3, 1, "", "auxiliaryQuantitySpecificEntropy"], [140, 4, 1, "", "d"], [140, 3, 1, "", "enthalpy"], [140, 3, 1, "", "entropy"], [140, 3, 1, "", "pseudoDensity"], [140, 4, 1, "", "references"], [140, 3, 1, "", "setDefaultMassFracs"], [140, 3, 1, "", "tau"], [140, 4, 1, "", "thermalScatteringLaws"], [140, 3, 1, "", "theta"], [140, 3, 1, "", "vaporPressure"], [140, 3, 1, "", "vaporPressurePrime"]], "armi.materials.yttriumOxide": [[141, 2, 1, "", "Y2O3"]], "armi.materials.yttriumOxide.Y2O3": [[141, 3, 1, "", "density"], [141, 3, 1, "", "linearExpansionPercent"], [141, 4, 1, "", "propertyValidTemperature"], [141, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zincOxide": [[142, 2, 1, "", "ZnO"]], "armi.materials.zincOxide.ZnO": [[142, 3, 1, "", "density"], [142, 3, 1, "", "linearExpansionPercent"], [142, 4, 1, "", "propertyValidTemperature"], [142, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zr": [[143, 2, 1, "", "Zr"]], "armi.materials.zr.Zr": [[143, 3, 1, "", "density"], [143, 3, 1, "", "linearExpansion"], [143, 3, 1, "", "linearExpansionPercent"], [143, 4, 1, "", "linearExpansionTable"], [143, 4, 1, "", "linearExpansionTableK"], [143, 4, 1, "", "propertyValidTemperature"], [143, 4, 1, "", "refTempK"], [143, 4, 1, "", "references"], [143, 3, 1, "", "setDefaultMassFracs"], [143, 3, 1, "", "thermalConductivity"]], "armi.migration": [[146, 0, 0, "-", "base"], [147, 0, 0, "-", "m0_1_3"], [148, 0, 0, "-", "m0_1_6"], [149, 0, 0, "-", "tests"]], "armi.migration.base": [[146, 2, 1, "", "BlueprintsMigration"], [146, 2, 1, "", "DatabaseMigration"], [146, 2, 1, "", "Migration"], [146, 2, 1, "", "SettingsMigration"]], "armi.migration.base.Migration": [[146, 3, 1, "", "apply"], [146, 4, 1, "", "fromVersion"], [146, 4, 1, "", "toVersion"]], "armi.migration.m0_1_3": [[147, 2, 1, "", "RemoveCentersFromBlueprints"], [147, 2, 1, "", "UpdateElementalNuclides"]], "armi.migration.m0_1_3.RemoveCentersFromBlueprints": [[147, 4, 1, "", "fromVersion"], [147, 4, 1, "", "toVersion"]], "armi.migration.m0_1_3.UpdateElementalNuclides": [[147, 4, 1, "", "deletions"], [147, 4, 1, "", "fromVersion"], [147, 4, 1, "", "swaps"], [147, 4, 1, "", "toVersion"]], "armi.migration.m0_1_6": [[148, 2, 1, "", "ConvertAlphanumLocationSettingsToNum"], [148, 1, 1, "", "getIndicesFromDIF3DStyleLocatorLabel"]], "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum": [[148, 4, 1, "", "fromVersion"], [148, 4, 1, "", "toVersion"]], "armi.migration.tests": [[150, 0, 0, "-", "test_m0_1_6"], [151, 0, 0, "-", "test_migration_base"]], "armi.migration.tests.test_m0_1_6": [[150, 2, 1, "", "TestMigration"]], "armi.migration.tests.test_m0_1_6.TestMigration": [[150, 3, 1, "", "test_locationLabelMigration"]], "armi.migration.tests.test_migration_base": [[151, 2, 1, "", "TestMigrationBases"], [151, 2, 1, "", "TestSettingsMigration"]], "armi.migration.tests.test_migration_base.TestMigrationBases": [[151, 3, 1, "", "test_basic_validation"]], "armi.migration.tests.test_migration_base.TestSettingsMigration": [[151, 3, 1, "", "test_loadStreamFromPath"]], "armi.mpiActions": [[152, 2, 1, "", "DistributeStateAction"], [152, 2, 1, "", "DistributionAction"], [152, 2, 1, "", "MpiAction"], [152, 7, 1, "", "MpiActionError"], [152, 1, 1, "", "runActions"], [152, 1, 1, "", "runActionsInSerial"]], "armi.mpiActions.DistributeStateAction": [[152, 3, 1, "", "invokeHook"]], "armi.mpiActions.DistributionAction": [[152, 3, 1, "", "invokeHook"]], "armi.mpiActions.MpiAction": [[152, 3, 1, "", "broadcast"], [152, 3, 1, "", "gather"], [152, 3, 1, "", "invoke"], [152, 3, 1, "", "invokeAsMaster"], [152, 3, 1, "", "invokeHook"], [152, 3, 1, "", "mpiFlatten"], [152, 3, 1, "", "mpiIter"], [152, 5, 1, "", "parallel"]], "armi.nucDirectory": [[154, 0, 0, "-", "elements"], [155, 0, 0, "-", "nucDir"], [156, 0, 0, "-", "nuclideBases"], [157, 0, 0, "-", "tests"], [163, 0, 0, "-", "thermalScattering"], [164, 0, 0, "-", "transmutations"]], "armi.nucDirectory.elements": [[154, 2, 1, "", "ChemicalGroup"], [154, 2, 1, "", "ChemicalPhase"], [154, 2, 1, "", "Element"], [154, 1, 1, "", "addGlobalElement"], [154, 1, 1, "", "destroyGlobalElements"], [154, 1, 1, "", "factory"], [154, 1, 1, "", "getElementZ"], [154, 1, 1, "", "getElementsByChemicalGroup"], [154, 1, 1, "", "getElementsByChemicalPhase"], [154, 1, 1, "", "getName"], [154, 1, 1, "", "getSymbol"]], "armi.nucDirectory.elements.ChemicalGroup": [[154, 4, 1, "", "ACTINIDE"], [154, 4, 1, "", "ALKALINE_EARTH_METAL"], [154, 4, 1, "", "ALKALI_METAL"], [154, 4, 1, "", "HALOGEN"], [154, 4, 1, "", "LANTHANIDE"], [154, 4, 1, "", "METALLOID"], [154, 4, 1, "", "NOBLE_GAS"], [154, 4, 1, "", "NONMETAL"], [154, 4, 1, "", "POST_TRANSITION_METAL"], [154, 4, 1, "", "TRANSITION_METAL"], [154, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.ChemicalPhase": [[154, 4, 1, "", "GAS"], [154, 4, 1, "", "LIQUID"], [154, 4, 1, "", "SOLID"], [154, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.Element": [[154, 3, 1, "", "append"], [154, 3, 1, "", "getNaturalIsotopics"], [154, 3, 1, "", "isHeavyMetal"], [154, 3, 1, "", "isNaturallyOccurring"]], "armi.nucDirectory.nucDir": [[155, 1, 1, "", "getAtomicWeight"], [155, 1, 1, "", "getElementName"], [155, 1, 1, "", "getElementSymbol"], [155, 1, 1, "", "getMc2Label"], [155, 1, 1, "", "getNaturalIsotopics"], [155, 1, 1, "", "getNaturalMassIsotopics"], [155, 1, 1, "", "getNuclide"], [155, 1, 1, "", "getNuclideFromName"], [155, 1, 1, "", "getNuclideNames"], [155, 1, 1, "", "getNuclides"], [155, 1, 1, "", "getThresholdDisplacementEnergy"], [155, 1, 1, "", "isFissile"], [155, 1, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases": [[156, 2, 1, "", "DummyNuclideBase"], [156, 2, 1, "", "IMcnpNuclide"], [156, 2, 1, "", "INuclide"], [156, 2, 1, "", "LumpNuclideBase"], [156, 2, 1, "", "NaturalNuclideBase"], [156, 2, 1, "", "NuclideBase"], [156, 2, 1, "", "NuclideInterface"], [156, 2, 1, "", "NuclideWrapper"], [156, 1, 1, "", "addGlobalNuclide"], [156, 1, 1, "", "addNuclideBases"], [156, 1, 1, "", "changeLabel"], [156, 1, 1, "", "destroyGlobalNuclides"], [156, 1, 1, "", "factory"], [156, 1, 1, "", "fromName"], [156, 1, 1, "", "getDepletableNuclides"], [156, 1, 1, "", "getIsotopics"], [156, 1, 1, "", "imposeBurnChain"], [156, 1, 1, "", "initReachableActiveNuclidesThroughBurnChain"], [156, 1, 1, "", "isMonoIsotopicElement"], [156, 1, 1, "", "isotopes"], [156, 1, 1, "", "readMCCNuclideData"], [156, 1, 1, "", "single"], [156, 1, 1, "", "updateNuclideBasesForSpecialCases"], [156, 1, 1, "", "where"]], "armi.nucDirectory.nuclideBases.DummyNuclideBase": [[156, 3, 1, "", "getMcc2Id"], [156, 3, 1, "", "getMcc3Id"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.IMcnpNuclide": [[156, 3, 1, "", "getAAAZZZSId"], [156, 3, 1, "", "getMcnpId"]], "armi.nucDirectory.nuclideBases.INuclide": [[156, 4, 1, "", "DECAY"], [156, 4, 1, "", "SPONTANEOUS_FISSION"], [156, 4, 1, "", "TRANSMUTATION"], [156, 4, 1, "", "fissile"], [156, 3, 1, "", "getDatabaseName"], [156, 3, 1, "", "getDecay"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "isFissile"], [156, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.LumpNuclideBase": [[156, 3, 1, "", "getMcc2Id"], [156, 3, 1, "", "getMcc3Id"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NaturalNuclideBase": [[156, 3, 1, "", "getAAAZZZSId"], [156, 3, 1, "", "getEndfMatNum"], [156, 3, 1, "", "getMcc2Id"], [156, 3, 1, "", "getMcc3Id"], [156, 3, 1, "", "getMcnpId"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideBase": [[156, 3, 1, "", "getAAAZZZSId"], [156, 3, 1, "", "getEndfMatNum"], [156, 3, 1, "", "getMcc2Id"], [156, 3, 1, "", "getMcc3Id"], [156, 3, 1, "", "getMcnpId"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideInterface": [[156, 3, 1, "", "getDatabaseName"], [156, 3, 1, "", "getDecay"], [156, 3, 1, "", "getMcc2Id"], [156, 3, 1, "", "getMcc3Id"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "getSerpentId"], [156, 3, 1, "", "isFissile"], [156, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NuclideWrapper": [[156, 3, 1, "", "getDatabaseName"], [156, 3, 1, "", "getDecay"], [156, 3, 1, "", "getMcc2Id"], [156, 3, 1, "", "getMcc3Id"], [156, 3, 1, "", "getNaturalIsotopics"], [156, 3, 1, "", "isFissile"], [156, 3, 1, "", "isHeavyMetal"], [156, 5, 1, "", "name"], [156, 5, 1, "", "weight"]], "armi.nucDirectory.tests": [[158, 0, 0, "-", "test_elements"], [159, 0, 0, "-", "test_nucDirectory"], [160, 0, 0, "-", "test_nuclideBases"], [161, 0, 0, "-", "test_thermalScattering"], [162, 0, 0, "-", "test_transmutations"]], "armi.nucDirectory.tests.test_elements": [[158, 2, 1, "", "TestElement"]], "armi.nucDirectory.tests.test_elements.TestElement": [[158, 3, 1, "", "test_abundancesAddToOne"], [158, 3, 1, "", "test_element_addExistingElementFails"], [158, 3, 1, "", "test_element_addedElementAppearsInElementList"], [158, 3, 1, "", "test_element_elementByNameReturnsElement"], [158, 3, 1, "", "test_element_elementBySymbolReturnsElement"], [158, 3, 1, "", "test_element_elementByZReturnsElement"], [158, 3, 1, "", "test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"], [158, 3, 1, "", "test_element_isNaturallyOccurring"], [158, 3, 1, "", "test_elements_elementBulkProperties"], [158, 3, 1, "", "test_isHeavyMetal"]], "armi.nucDirectory.tests.test_nucDirectory": [[159, 2, 1, "", "TestNucDirectory"]], "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory": [[159, 3, 1, "", "test_getDisplacementEnergy"], [159, 3, 1, "", "test_nucDir_getNameForOldDashedNames"], [159, 3, 1, "", "test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"], [159, 3, 1, "", "test_nucDir_getNuclidesFromForBadName"]], "armi.nucDirectory.tests.test_nuclideBases": [[160, 2, 1, "", "TestAAAZZZSId"], [160, 2, 1, "", "TestNuclide"]], "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId": [[160, 3, 1, "", "test_AAAZZZSNameGenerator"]], "armi.nucDirectory.tests.test_nuclideBases.TestNuclide": [[160, 3, 1, "", "test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"], [160, 3, 1, "", "test_NaturalNuclideBase_getNatrualIsotpics"], [160, 3, 1, "", "test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"], [160, 3, 1, "", "test_NonMc2Nuclide"], [160, 3, 1, "", "test_curieDefinitionWithRa226"], [160, 3, 1, "", "test_getDecay"], [160, 3, 1, "", "test_getEndfMatNum"], [160, 3, 1, "", "test_kryptonDecayConstants"], [160, 3, 1, "", "test_loadMcc2Data"], [160, 3, 1, "", "test_loadMcc3Data"], [160, 3, 1, "", "test_nucBase_AllAbundancesAddToOne"], [160, 3, 1, "", "test_nucBases_AllDatabaseNamesAreUnique"], [160, 3, 1, "", "test_nucBases_AllLabelsAreUnique"], [160, 3, 1, "", "test_nucBases_Am242m"], [160, 3, 1, "", "test_nucBases_Mc2Elementals"], [160, 3, 1, "", "test_nucBases_NegativeZRaisesException"], [160, 3, 1, "", "test_nucBases_Z295RaisesException"], [160, 3, 1, "", "test_nucBases_databaseNamesStartWith_n"], [160, 3, 1, "", "test_nucBases_fromNameBadNameRaisesException"], [160, 3, 1, "", "test_nucBases_imposeBurnChainDecayBulkStatistics"], [160, 3, 1, "", "test_nucBases_imposeBurnChainTransmutationBulkStatistics"], [160, 3, 1, "", "test_nucBases_imposeBurn_nuSF"], [160, 3, 1, "", "test_nucBases_isHeavyMetal"], [160, 3, 1, "", "test_nucBases_labelAndNameCollsionsAreForSameNuclide"], [160, 3, 1, "", "test_nucBases_singleFailsWithMultipleMatches"], [160, 3, 1, "", "test_nucBases_singleFailsWithNoMatches"], [160, 3, 1, "", "test_nucBases_singleIsPrettySpecific"]], "armi.nucDirectory.tests.test_thermalScattering": [[161, 2, 1, "", "TestThermalScattering"], [161, 1, 1, "", "buildBlockWithTSL"], [161, 1, 1, "", "getNuclideThermalScatteringData"]], "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering": [[161, 3, 1, "", "test_ACECompound"], [161, 3, 1, "", "test_ACEElementInCompound"], [161, 3, 1, "", "test_ACEIsotope"], [161, 3, 1, "", "test_endf8Compound"], [161, 3, 1, "", "test_endf8ElementInCompound"], [161, 3, 1, "", "test_endf8Isotope"], [161, 3, 1, "", "test_failOnMultiple"], [161, 3, 1, "", "test_graphiteOnReactor"]], "armi.nucDirectory.tests.test_transmutations": [[162, 2, 1, "", "DecayModeTests"], [162, 2, 1, "", "TransmutationTests"], [162, 1, 1, "", "randomString"]], "armi.nucDirectory.tests.test_transmutations.DecayModeTests": [[162, 3, 1, "", "test_DecayMode_invalidReactionTypes"], [162, 3, 1, "", "test_DecayMode_validReactionTypes"]], "armi.nucDirectory.tests.test_transmutations.TransmutationTests": [[162, 3, 1, "", "test_Transmutation_invalidReactionTypes"], [162, 3, 1, "", "test_Transmutation_productParticle"], [162, 3, 1, "", "test_Transmutation_validReactionTypes"]], "armi.nucDirectory.thermalScattering": [[163, 2, 1, "", "ThermalScattering"], [163, 1, 1, "", "factory"]], "armi.nucDirectory.thermalScattering.ThermalScattering": [[163, 3, 1, "", "getSubjectNuclideBases"]], "armi.nucDirectory.transmutations": [[164, 2, 1, "", "DecayMode"], [164, 2, 1, "", "Transmutable"], [164, 2, 1, "", "Transmutation"]], "armi.nucDirectory.transmutations.Transmutable": [[164, 3, 1, "", "getPreferredProduct"]], "armi.nuclearDataIO": [[166, 0, 0, "-", "cccc"], [165, 1, 1, "", "getExpectedCOMPXSFileName"], [165, 1, 1, "", "getExpectedGAMISOFileName"], [165, 1, 1, "", "getExpectedISOTXSFileName"], [165, 1, 1, "", "getExpectedPMATRXFileName"], [196, 0, 0, "-", "nuclearFileMetadata"], [197, 0, 0, "-", "tests"], [201, 0, 0, "-", "xsCollections"], [202, 0, 0, "-", "xsLibraries"], [203, 0, 0, "-", "xsNuclides"]], "armi.nuclearDataIO.cccc": [[167, 0, 0, "-", "cccc"], [168, 0, 0, "-", "compxs"], [169, 0, 0, "-", "dif3d"], [170, 0, 0, "-", "dlayxs"], [171, 0, 0, "-", "fixsrc"], [172, 0, 0, "-", "gamiso"], [173, 0, 0, "-", "geodst"], [174, 0, 0, "-", "isotxs"], [175, 0, 0, "-", "labels"], [176, 0, 0, "-", "nhflux"], [177, 0, 0, "-", "pmatrx"], [178, 0, 0, "-", "pwdint"], [179, 0, 0, "-", "rtflux"], [180, 0, 0, "-", "rzflux"], [181, 0, 0, "-", "tests"]], "armi.nuclearDataIO.cccc.cccc": [[167, 2, 1, "", "AsciiRecordReader"], [167, 2, 1, "", "AsciiRecordWriter"], [167, 2, 1, "", "BinaryRecordReader"], [167, 2, 1, "", "BinaryRecordWriter"], [167, 2, 1, "", "DataContainer"], [167, 6, 1, "", "IMPLICIT_INT"], [167, 2, 1, "", "IORecord"], [167, 2, 1, "", "Stream"], [167, 2, 1, "", "StreamWithDataContainer"], [167, 1, 1, "", "getBlockBandwidth"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader": [[167, 3, 1, "", "close"], [167, 3, 1, "", "rwDouble"], [167, 3, 1, "", "rwFloat"], [167, 3, 1, "", "rwInt"], [167, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter": [[167, 3, 1, "", "close"], [167, 3, 1, "", "open"], [167, 3, 1, "", "rwDouble"], [167, 3, 1, "", "rwFloat"], [167, 3, 1, "", "rwInt"], [167, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader": [[167, 3, 1, "", "close"], [167, 3, 1, "", "open"], [167, 3, 1, "", "rwBool"], [167, 3, 1, "", "rwDouble"], [167, 3, 1, "", "rwFloat"], [167, 3, 1, "", "rwInt"], [167, 3, 1, "", "rwLong"], [167, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter": [[167, 3, 1, "", "close"], [167, 3, 1, "", "open"], [167, 3, 1, "", "rwBool"], [167, 3, 1, "", "rwDouble"], [167, 3, 1, "", "rwFloat"], [167, 3, 1, "", "rwInt"], [167, 3, 1, "", "rwLong"], [167, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.IORecord": [[167, 3, 1, "", "close"], [167, 4, 1, "", "count"], [167, 4, 1, "", "maxsize"], [167, 3, 1, "", "open"], [167, 3, 1, "", "rwBool"], [167, 3, 1, "", "rwDouble"], [167, 3, 1, "", "rwDoubleMatrix"], [167, 3, 1, "", "rwFloat"], [167, 3, 1, "", "rwImplicitlyTypedMap"], [167, 3, 1, "", "rwInt"], [167, 3, 1, "", "rwIntMatrix"], [167, 3, 1, "", "rwList"], [167, 3, 1, "", "rwMatrix"], [167, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.Stream": [[167, 3, 1, "", "createRecord"], [167, 3, 1, "", "readAscii"], [167, 3, 1, "", "readBinary"], [167, 3, 1, "", "readWrite"], [167, 3, 1, "", "writeAscii"], [167, 3, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.compxs": [[168, 2, 1, "", "CompxsRegion"], [168, 1, 1, "", "compare"]], "armi.nuclearDataIO.cccc.compxs.CompxsRegion": [[168, 3, 1, "", "allocateXS"], [168, 3, 1, "", "getXS"], [168, 3, 1, "", "initMetadata"], [168, 5, 1, "", "isFissile"], [168, 3, 1, "", "makeScatteringMatrices"], [168, 3, 1, "", "merge"]], "armi.nuclearDataIO.cccc.dif3d": [[169, 2, 1, "", "Dif3dData"], [169, 2, 1, "", "Dif3dStream"]], "armi.nuclearDataIO.cccc.dif3d.Dif3dStream": [[169, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.dlayxs": [[170, 2, 1, "", "DelayedNeutronData"], [170, 2, 1, "", "Dlayxs"], [170, 2, 1, "", "DlayxsIO"], [170, 1, 1, "", "compare"], [170, 1, 1, "", "readAscii"], [170, 1, 1, "", "readBinary"], [170, 1, 1, "", "writeAscii"], [170, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.dlayxs.Dlayxs": [[170, 5, 1, "", "G"], [170, 3, 1, "", "generateAverageDelayedNeutronConstants"]], "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO": [[170, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.fixsrc": [[171, 2, 1, "", "FIXSRC"], [171, 1, 1, "", "readBinary"], [171, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.fixsrc.FIXSRC": [[171, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.gamiso": [[172, 1, 1, "", "addDummyNuclidesToLibrary"], [172, 1, 1, "", "compare"], [172, 1, 1, "", "compareNuclideXS"]], "armi.nuclearDataIO.cccc.geodst": [[173, 2, 1, "", "GeodstData"], [173, 2, 1, "", "GeodstStream"]], "armi.nuclearDataIO.cccc.geodst.GeodstStream": [[173, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.isotxs": [[174, 2, 1, "", "IsotxsIO"], [174, 1, 1, "", "addDummyNuclidesToLibrary"], [174, 1, 1, "", "compare"], [174, 1, 1, "", "compareNuclideXS"], [174, 1, 1, "", "compareSet"]], "armi.nuclearDataIO.cccc.isotxs.IsotxsIO": [[174, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.labels": [[175, 2, 1, "", "LabelsData"], [175, 2, 1, "", "LabelsStream"]], "armi.nuclearDataIO.cccc.labels.LabelsStream": [[175, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.nhflux": [[176, 2, 1, "", "NHFLUX"], [176, 2, 1, "", "NafluxStream"], [176, 2, 1, "", "NafluxStreamVariant"], [176, 2, 1, "", "NhfluxStream"], [176, 2, 1, "", "NhfluxStreamVariant"], [176, 1, 1, "", "getNhfluxReader"]], "armi.nuclearDataIO.cccc.nhflux.NHFLUX": [[176, 5, 1, "", "fluxMoments"], [176, 5, 1, "", "partialCurrentsHex"], [176, 5, 1, "", "partialCurrentsHex_ext"], [176, 5, 1, "", "partialCurrentsZ"]], "armi.nuclearDataIO.cccc.nhflux.NhfluxStream": [[176, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pmatrx": [[177, 2, 1, "", "PmatrxIO"], [177, 1, 1, "", "addDummyNuclidesToLibrary"], [177, 1, 1, "", "compare"], [177, 1, 1, "", "compareNuclideXS"], [177, 1, 1, "", "readAscii"], [177, 1, 1, "", "readBinary"], [177, 1, 1, "", "writeAscii"], [177, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO": [[177, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pwdint": [[178, 2, 1, "", "PwdintData"], [178, 2, 1, "", "PwdintStream"]], "armi.nuclearDataIO.cccc.pwdint.PwdintStream": [[178, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rtflux": [[179, 2, 1, "", "AtfluxStream"], [179, 2, 1, "", "RtfluxData"], [179, 2, 1, "", "RtfluxStream"], [179, 1, 1, "", "getFDFluxReader"]], "armi.nuclearDataIO.cccc.rtflux.AtfluxStream": [[179, 3, 1, "", "getEnergyGroupIndex"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxData": [[179, 4, 1, "", "groupFluxes"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxStream": [[179, 3, 1, "", "getEnergyGroupIndex"], [179, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rzflux": [[180, 2, 1, "", "Convergence"], [180, 2, 1, "", "RzfluxData"], [180, 2, 1, "", "RzfluxStream"]], "armi.nuclearDataIO.cccc.rzflux.Convergence": [[180, 4, 1, "", "CONVERGED"], [180, 4, 1, "", "CONVERGING"], [180, 4, 1, "", "DIVERGING"], [180, 4, 1, "", "NO_ITERATIONS"]], "armi.nuclearDataIO.cccc.rzflux.RzfluxStream": [[180, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.tests": [[182, 0, 0, "-", "test_cccc"], [183, 0, 0, "-", "test_compxs"], [184, 0, 0, "-", "test_dif3d"], [185, 0, 0, "-", "test_dlayxs"], [186, 0, 0, "-", "test_fixsrc"], [187, 0, 0, "-", "test_gamiso"], [188, 0, 0, "-", "test_geodst"], [189, 0, 0, "-", "test_isotxs"], [190, 0, 0, "-", "test_labels"], [191, 0, 0, "-", "test_nhflux"], [192, 0, 0, "-", "test_pmatrx"], [193, 0, 0, "-", "test_pwdint"], [194, 0, 0, "-", "test_rtflux"], [195, 0, 0, "-", "test_rzflux"]], "armi.nuclearDataIO.cccc.tests.test_cccc": [[182, 2, 1, "", "CcccAsciiRecordTests"], [182, 2, 1, "", "CcccBinaryRecordTests"], [182, 2, 1, "", "CcccIOStreamTests"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests": [[182, 3, 1, "", "test_notReadingAnEntireRecordRaisesException"], [182, 3, 1, "", "test_readingBeyondRecordRaisesException"], [182, 3, 1, "", "test_writeAndReadSimpleFloatRecord"], [182, 3, 1, "", "test_writeAndReadSimpleIntegerRecord"], [182, 3, 1, "", "test_writeAndReadSimpleStringRecord"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests": [[182, 3, 1, "", "test_initWithFileMode"]], "armi.nuclearDataIO.cccc.tests.test_compxs": [[183, 2, 1, "", "TestCompxs"]], "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs": [[183, 5, 1, "", "asciiWritePath"], [183, 5, 1, "", "binaryWritePath"], [183, 3, 1, "", "test_asciiRW"], [183, 3, 1, "", "test_binaryRW"], [183, 3, 1, "", "test_getCOMPXSFileName"], [183, 3, 1, "", "test_libraryData"], [183, 3, 1, "", "test_mergeCompxsLibraries"], [183, 3, 1, "", "test_regionPrimaryXS"], [183, 3, 1, "", "test_totalScatterMatrix"]], "armi.nuclearDataIO.cccc.tests.test_dif3d": [[184, 2, 1, "", "TestDif3dEmptyRecords"], [184, 2, 1, "", "TestDif3dSimpleHexz"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords": [[184, 3, 1, "", "test_empty4and5Records"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz": [[184, 3, 1, "", "test__rw2DRecord"], [184, 3, 1, "", "test__rw3DRecord"], [184, 3, 1, "", "test__rw4DRecord"], [184, 3, 1, "", "test__rw5DRecord"], [184, 3, 1, "", "test__rwFile1DRecord"], [184, 3, 1, "", "test__rwFileID"], [184, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs": [[185, 2, 1, "", "DlayxsTests"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests": [[185, 3, 1, "", "test_ENDFVII1DecayConstants"], [185, 3, 1, "", "test_ENDFVII1NeutronsPerFission"], [185, 3, 1, "", "test_NuDelay"], [185, 3, 1, "", "test_avg"], [185, 3, 1, "", "test_chi_delay"], [185, 3, 1, "", "test_chi_delaySumsTo1"], [185, 3, 1, "", "test_compare"], [185, 3, 1, "", "test_decayConstants"], [185, 3, 1, "", "test_nuclides"], [185, 3, 1, "", "test_writeBinary_mcc3"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc": [[186, 2, 1, "", "TestFixsrc"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc": [[186, 3, 1, "", "test_writeReadBinaryLoop"]], "armi.nuclearDataIO.cccc.tests.test_gamiso": [[187, 2, 1, "", "TestGamiso"]], "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso": [[187, 3, 1, "", "test_addDummyNuclidesToLibrary"], [187, 3, 1, "", "test_compare"], [187, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_geodst": [[188, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst": [[188, 3, 1, "", "test_readGeodst"], [188, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs": [[189, 2, 1, "", "Isotxs_merge_Tests"], [189, 2, 1, "", "TestIsotxs"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests": [[189, 3, 1, "", "test_mergeMccV2FilesRemovesTheFileWideChi"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs": [[189, 3, 1, "", "test_getGAMISOFileName"], [189, 3, 1, "", "test_getISOTXSFileName"], [189, 3, 1, "", "test_getNuclide"], [189, 3, 1, "", "test_getScatterWeights"], [189, 3, 1, "", "test_getScatteringWeights"], [189, 3, 1, "", "test_isotxsDetailedData"], [189, 3, 1, "", "test_isotxsGeneralData"], [189, 3, 1, "", "test_n2nIsReactionBased"], [189, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_labels": [[190, 2, 1, "", "TestLabels"]], "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels": [[190, 3, 1, "", "test_readLabelsBinary"], [190, 3, 1, "", "test_writeLabelsAscii"]], "armi.nuclearDataIO.cccc.tests.test_nhflux": [[191, 2, 1, "", "TestNhflux"], [191, 2, 1, "", "TestNhfluxVariant"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux": [[191, 3, 1, "", "test_fc"], [191, 3, 1, "", "test_fluxMoments"], [191, 3, 1, "", "test_write"], [191, 3, 1, "", "test_xyPartialCurrents"], [191, 3, 1, "", "test_zPartialCurrents"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant": [[191, 3, 1, "", "test_fc"], [191, 3, 1, "", "test_fluxMoments"], [191, 3, 1, "", "test_write"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx": [[192, 2, 1, "", "TestPmatrx"], [192, 2, 1, "", "TestPmatrxNuclides"], [192, 2, 1, "", "TestProductionMatrix_FromWritten"], [192, 2, 1, "", "TestProductionMatrix_FromWrittenAscii"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx": [[192, 3, 1, "", "test_pmatrxDoesntHaveDoseConversionFactors"], [192, 3, 1, "", "test_pmatrxGammaEnergies"], [192, 3, 1, "", "test_pmatrxNeutronEnergies"], [192, 3, 1, "", "test_pmatrxNuclideNames"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides": [[192, 3, 1, "", "test_getPMATRXFileName"], [192, 3, 1, "", "test_nuclideDataIsDifferent"], [192, 3, 1, "", "test_pmatrxNuclideDataAA"], [192, 3, 1, "", "test_pmatrxNuclideDataAB"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten": [[192, 3, 1, "", "test_writtenIsIdenticalToOriginal"]], "armi.nuclearDataIO.cccc.tests.test_pwdint": [[193, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst": [[193, 3, 1, "", "test_readGeodst"], [193, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_rtflux": [[194, 2, 1, "", "Testrtflux"]], "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux": [[194, 3, 1, "", "test_adjoint"], [194, 3, 1, "", "test_readrtflux"], [194, 3, 1, "", "test_rwAscii"], [194, 3, 1, "", "test_writertflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux": [[195, 2, 1, "", "TestRzflux"], [195, 1, 1, "", "binaryFilesEqual"]], "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux": [[195, 3, 1, "", "test_readRzflux"], [195, 3, 1, "", "test_rwAscii"], [195, 3, 1, "", "test_writeRzflux"]], "armi.nuclearDataIO.nuclearFileMetadata": [[196, 2, 1, "", "FileMetadata"], [196, 2, 1, "", "NuclideMetadata"], [196, 2, 1, "", "NuclideXSMetadata"], [196, 2, 1, "", "RegionXSMetadata"]], "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata": [[196, 3, 1, "", "update"]], "armi.nuclearDataIO.tests": [[198, 0, 0, "-", "test_xsCollections"], [199, 0, 0, "-", "test_xsLibraries"], [200, 0, 0, "-", "test_xsNuclides"]], "armi.nuclearDataIO.tests.test_xsCollections": [[198, 2, 1, "", "MockBlock"], [198, 2, 1, "", "MockBlueprints"], [198, 2, 1, "", "MockReactor"], [198, 2, 1, "", "TestXsCollections"]], "armi.nuclearDataIO.tests.test_xsCollections.MockBlock": [[198, 3, 1, "", "getNuclideNumberDensities"], [198, 3, 1, "", "getNuclides"], [198, 3, 1, "", "getVolume"], [198, 4, 1, "", "paramCollectionType"], [198, 5, 1, "", "r"], [198, 3, 1, "", "setNumberDensity"]], "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections": [[198, 3, 1, "", "test_collapseCrossSection"], [198, 3, 1, "", "test_createMacrosFromMicros"], [198, 3, 1, "", "test_generateTotalScatteringMatrix"], [198, 3, 1, "", "test_generateTotalScatteringMatrixWithMissingData"], [198, 3, 1, "", "test_plotNucXs"]], "armi.nuclearDataIO.tests.test_xsLibraries": [[199, 2, 1, "", "AbstractTestXSlibraryMerging"], [199, 2, 1, "", "Combined_Merge_Tests"], [199, 2, 1, "", "Gamiso_Merge_Tests"], [199, 2, 1, "", "Isotxs_Merge_Tests"], [199, 2, 1, "", "Pmatrx_Merge_Tests"], [199, 2, 1, "", "TempFileMixin"], [199, 2, 1, "", "TestGetISOTXSFilesInWorkingDirectory"], [199, 2, 1, "", "TestXSLibrary"]], "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging": [[199, 3, 1, "", "getErrorType"], [199, 3, 1, "", "getLibAAPath"], [199, 3, 1, "", "getLibAA_ABPath"], [199, 3, 1, "", "getLibABPath"], [199, 3, 1, "", "getLibLumpedPath"], [199, 3, 1, "", "getReadFunc"], [199, 3, 1, "", "getWriteFunc"], [199, 3, 1, "", "test_canRemoveIsotopes"], [199, 3, 1, "", "test_cannotMergeXSLibWithSameNuclideNames"], [199, 3, 1, "", "test_cannotMergeXSLibxWithDifferentGroupStructure"], [199, 3, 1, "", "test_mergeEmptyXSLibWithOtherEssentiallyClonesTheOther"], [199, 3, 1, "", "test_mergeTwoXSLibFiles"]], "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests": [[199, 3, 1, "", "test_mergeAllXSLibFiles"]], "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests": [[199, 3, 1, "", "getErrorType"], [199, 3, 1, "", "getLibAAPath"], [199, 3, 1, "", "getLibAA_ABPath"], [199, 3, 1, "", "getLibABPath"], [199, 3, 1, "", "getLibLumpedPath"], [199, 3, 1, "", "getReadFunc"], [199, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests": [[199, 3, 1, "", "getErrorType"], [199, 3, 1, "", "getLibAAPath"], [199, 3, 1, "", "getLibAA_ABPath"], [199, 3, 1, "", "getLibABPath"], [199, 3, 1, "", "getLibLumpedPath"], [199, 3, 1, "", "getReadFunc"], [199, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests": [[199, 3, 1, "", "getErrorType"], [199, 3, 1, "", "getLibAAPath"], [199, 3, 1, "", "getLibAA_ABPath"], [199, 3, 1, "", "getLibABPath"], [199, 3, 1, "", "getLibLumpedPath"], [199, 3, 1, "", "getReadFunc"], [199, 3, 1, "", "getWriteFunc"], [199, 3, 1, "", "test_canRemoveIsotopes"], [199, 3, 1, "", "test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin": [[199, 5, 1, "", "testFileName"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory": [[199, 3, 1, "", "assert_contains_only"], [199, 3, 1, "", "test_getISOTXSFilesWithLibrarySuffix"], [199, 3, 1, "", "test_getISOTXSFilesWithoutLibrarySuffix"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary": [[199, 3, 1, "", "test_canPickleAndUnpickleGAMISO"], [199, 3, 1, "", "test_canPickleAndUnpickleISOTXS"], [199, 3, 1, "", "test_canPickleAndUnpicklePMATRX"], [199, 3, 1, "", "test_canWriteGamisoFromCombinedXSLibrary"], [199, 3, 1, "", "test_canWriteIsotxsFromCombinedXSLibrary"], [199, 3, 1, "", "test_canWritePmatrxFromCombinedXSLibrary"], [199, 3, 1, "", "test_compareDifferentComponentsOfAnXSLibrary"], [199, 3, 1, "", "test_compareWorks"], [199, 3, 1, "", "test_gamisoLibraryAttributes"], [199, 3, 1, "", "test_isotxsLibraryAttributes"], [199, 3, 1, "", "test_mergeFailsWithNonIsotxsFiles"], [199, 3, 1, "", "test_mergeXSLibrariesWithDifferentDataWorks"], [199, 3, 1, "", "test_pmatrxLibraryAttributes"]], "armi.nuclearDataIO.tests.test_xsNuclides": [[200, 2, 1, "", "NuclideTests"]], "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests": [[200, 3, 1, "", "test_getMicroXS"], [200, 3, 1, "", "test_getXS"], [200, 3, 1, "", "test_nuclide_2dXsArrangementIsCorrect"], [200, 3, 1, "", "test_nuclide_createFromLabelFailsOnBadName"], [200, 3, 1, "", "test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"], [200, 3, 1, "", "test_nuclide_isoaaDetails"], [200, 3, 1, "", "test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"], [200, 3, 1, "", "test_nuclide_newLabelsDontCauseWarnings"], [200, 3, 1, "", "test_nuclide_nuclideBaseMethodsShouldNotFail"], [200, 3, 1, "", "test_nuclide_oldLabelsCauseWarnings"], [200, 3, 1, "", "test_nuclide_scatterXsArrangementIsCorrect"]], "armi.nuclearDataIO.xsCollections": [[201, 2, 1, "", "MacroscopicCrossSectionCreator"], [201, 2, 1, "", "XSCollection"], [201, 1, 1, "", "computeBlockAverageChi"], [201, 1, 1, "", "computeCaptureEnergyGenerationConstants"], [201, 1, 1, "", "computeFissionEnergyGenerationConstants"], [201, 1, 1, "", "computeGammaEnergyDepositionConstants"], [201, 1, 1, "", "computeMacroscopicGroupConstants"], [201, 1, 1, "", "computeNeutronEnergyDepositionConstants"]], "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator": [[201, 3, 1, "", "createMacrosFromMicros"], [201, 3, 1, "", "createMacrosOnBlocklist"]], "armi.nuclearDataIO.xsCollections.XSCollection": [[201, 3, 1, "", "clear"], [201, 3, 1, "", "collapseCrossSection"], [201, 3, 1, "", "compare"], [201, 3, 1, "", "get"], [201, 3, 1, "", "getAbsorptionXS"], [201, 3, 1, "", "getDefaultXs"], [201, 3, 1, "", "getTotalScatterMatrix"], [201, 3, 1, "", "merge"]], "armi.nuclearDataIO.xsLibraries": [[202, 2, 1, "", "CompxsLibrary"], [202, 2, 1, "", "IsotxsLibrary"], [202, 1, 1, "", "compare"], [202, 1, 1, "", "compareLibraryNeutronEnergies"], [202, 1, 1, "", "compareXSLibraryAttribute"], [202, 1, 1, "", "getISOTXSLibrariesToMerge"], [202, 1, 1, "", "getSuffixFromNuclideLabel"], [202, 1, 1, "", "mergeXSLibrariesInWorkingDirectory"]], "armi.nuclearDataIO.xsLibraries.CompxsLibrary": [[202, 3, 1, "", "merge"], [202, 5, 1, "", "regionLabels"], [202, 5, 1, "", "regions"]], "armi.nuclearDataIO.xsLibraries.IsotxsLibrary": [[202, 5, 1, "", "gammaDoseConversionFactors"], [202, 5, 1, "", "gammaEnergyUpperBounds"], [202, 3, 1, "", "get"], [202, 3, 1, "", "getNuclide"], [202, 3, 1, "", "getNuclides"], [202, 3, 1, "", "getScatterWeights"], [202, 3, 1, "", "merge"], [202, 5, 1, "", "neutronDoseConversionFactors"], [202, 5, 1, "", "nuclideLabels"], [202, 5, 1, "", "nuclides"], [202, 5, 1, "", "numGroups"], [202, 5, 1, "", "numGroupsGamma"], [202, 3, 1, "", "purgeFissionProducts"], [202, 3, 1, "", "resetScatterWeights"], [202, 5, 1, "", "xsIDs"]], "armi.nuclearDataIO.xsNuclides": [[203, 2, 1, "", "XSNuclide"], [203, 1, 1, "", "plotCompareScatterMatrix"], [203, 1, 1, "", "plotScatterMatrix"]], "armi.nuclearDataIO.xsNuclides.XSNuclide": [[203, 3, 1, "", "buildNormalizedScatterColumns"], [203, 5, 1, "", "decays"], [203, 3, 1, "", "getMicroXS"], [203, 3, 1, "", "getXS"], [203, 3, 1, "", "merge"], [203, 5, 1, "", "trans"], [203, 3, 1, "", "updateBaseNuclide"]], "armi.operators": [[204, 1, 1, "", "factory"], [204, 1, 1, "", "getOperatorClassFromSettings"], [205, 0, 0, "-", "operator"], [206, 0, 0, "-", "operatorMPI"], [207, 0, 0, "-", "runTypes"], [208, 0, 0, "-", "settingsValidation"], [209, 0, 0, "-", "snapshots"], [210, 0, 0, "-", "tests"]], "armi.operators.operator": [[205, 2, 1, "", "Operator"]], "armi.operators.operator.Operator": [[205, 3, 1, "", "addInterface"], [205, 5, 1, "", "atEOL"], [205, 5, 1, "", "availabilityFactors"], [205, 5, 1, "", "burnSteps"], [205, 3, 1, "", "couplingIsActive"], [205, 3, 1, "", "createInterfaces"], [205, 5, 1, "", "cycleLengths"], [205, 5, 1, "", "cycleNames"], [205, 3, 1, "", "detach"], [205, 3, 1, "", "getActiveInterfaces"], [205, 3, 1, "", "getInterface"], [205, 3, 1, "", "getInterfaces"], [205, 3, 1, "", "initializeInterfaces"], [205, 4, 1, "", "inspector"], [205, 3, 1, "", "interactAllBOC"], [205, 3, 1, "", "interactAllBOL"], [205, 3, 1, "", "interactAllCoupled"], [205, 3, 1, "", "interactAllEOC"], [205, 3, 1, "", "interactAllEOL"], [205, 3, 1, "", "interactAllError"], [205, 3, 1, "", "interactAllEveryNode"], [205, 3, 1, "", "interactAllInit"], [205, 3, 1, "", "interfaceIsActive"], [205, 3, 1, "", "loadState"], [205, 5, 1, "", "maxBurnSteps"], [205, 3, 1, "", "operate"], [205, 5, 1, "", "powerFractions"], [205, 3, 1, "", "printInterfaceSummary"], [205, 3, 1, "", "reattach"], [205, 3, 1, "", "removeAllInterfaces"], [205, 3, 1, "", "removeInterface"], [205, 3, 1, "", "setStateToDefault"], [205, 3, 1, "", "snapshotRequest"], [205, 5, 1, "", "stepLengths"]], "armi.operators.operatorMPI": [[206, 2, 1, "", "OperatorMPI"]], "armi.operators.operatorMPI.OperatorMPI": [[206, 3, 1, "", "collapseAllStderrs"], [206, 3, 1, "", "operate"], [206, 3, 1, "", "workerOperate"], [206, 3, 1, "", "workerQuit"]], "armi.operators.runTypes": [[207, 2, 1, "", "RunTypes"]], "armi.operators.runTypes.RunTypes": [[207, 4, 1, "", "EQUILIBRIUM"], [207, 4, 1, "", "SNAPSHOTS"], [207, 4, 1, "", "STANDARD"]], "armi.operators.snapshots": [[209, 2, 1, "", "OperatorSnapshots"]], "armi.operators.snapshots.OperatorSnapshots": [[209, 5, 1, "", "atEOL"], [209, 3, 1, "", "createInterfaces"], [209, 3, 1, "", "setStateToDefault"]], "armi.operators.tests": [[211, 0, 0, "-", "test_operatorSnapshots"], [212, 0, 0, "-", "test_operators"]], "armi.operators.tests.test_operatorSnapshots": [[211, 2, 1, "", "TestOperatorSnapshots"], [211, 2, 1, "", "TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots": [[211, 3, 1, "", "test_atEOL"], [211, 3, 1, "", "test_createInterfaces"], [211, 3, 1, "", "test_createInterfacesDisabled"], [211, 3, 1, "", "test_mainOperate"], [211, 3, 1, "", "test_setStateToDefault"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings": [[211, 3, 1, "", "test_getOperatorClassFromSettings"]], "armi.operators.tests.test_operators": [[212, 2, 1, "", "CyclesSettingsTests"], [212, 2, 1, "", "InterfaceA"], [212, 2, 1, "", "InterfaceB"], [212, 2, 1, "", "InterfaceC"], [212, 2, 1, "", "OperatorTests"], [212, 2, 1, "", "TestCreateOperator"], [212, 2, 1, "", "TestInterfaceAndEventHeaders"], [212, 2, 1, "", "TestTightCoupling"]], "armi.operators.tests.test_operators.CyclesSettingsTests": [[212, 4, 1, "", "availabilityFactorsSolution"], [212, 4, 1, "", "burnStepsSolution"], [212, 4, 1, "", "cycleLengthsSolution"], [212, 4, 1, "", "cycleNamesSolution"], [212, 4, 1, "", "detailedCyclesSettings"], [212, 4, 1, "", "maxBurnStepsSolution"], [212, 4, 1, "", "powerFractionsSolution"], [212, 4, 1, "", "stepLengthsSolution"], [212, 3, 1, "", "test_getAvailabilityFactors"], [212, 3, 1, "", "test_getBurnSteps"], [212, 3, 1, "", "test_getCycleLengths"], [212, 3, 1, "", "test_getCycleNames"], [212, 3, 1, "", "test_getMaxBurnSteps"], [212, 3, 1, "", "test_getPowerFractions"], [212, 3, 1, "", "test_getStepLengths"]], "armi.operators.tests.test_operators.InterfaceA": [[212, 4, 1, "", "function"], [212, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceB": [[212, 4, 1, "", "function"], [212, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceC": [[212, 4, 1, "", "function"], [212, 4, 1, "", "name"]], "armi.operators.tests.test_operators.OperatorTests": [[212, 3, 1, "", "test_addInterfaceSubclassCollision"], [212, 3, 1, "", "test_getActiveInterfaces"], [212, 3, 1, "", "test_interfaceIsActive"], [212, 3, 1, "", "test_loadStateError"], [212, 3, 1, "", "test_operatorData"], [212, 3, 1, "", "test_orderedInterfaces"], [212, 3, 1, "", "test_setStateToDefault"], [212, 3, 1, "", "test_snapshotRequest"]], "armi.operators.tests.test_operators.TestCreateOperator": [[212, 3, 1, "", "test_createOperator"]], "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders": [[212, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Coupled"], [212, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Cycle"], [212, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Empty"], [212, 3, 1, "", "test_expandCycleAndTimeNodeArgs_EveryNode"]], "armi.operators.tests.test_operators.TestTightCoupling": [[212, 3, 1, "", "dbWriteForCoupling"], [212, 3, 1, "", "test_computeTightCouplingConvergence"], [212, 3, 1, "", "test_couplingIsActive"], [212, 3, 1, "", "test_getStepLengths"], [212, 3, 1, "", "test_performTightCoupling_Inactive"], [212, 3, 1, "", "test_performTightCoupling_NoWriteDB"], [212, 3, 1, "", "test_performTightCoupling_WriteDB"], [212, 3, 1, "", "test_performTightCoupling_notConverged"], [212, 3, 1, "", "test_performTightCoupling_skip"]], "armi.physics": [[214, 0, 0, "-", "constants"], [215, 0, 0, "-", "executers"], [216, 0, 0, "-", "fuelCycle"], [227, 0, 0, "-", "fuelPerformance"], [237, 0, 0, "-", "neutronics"], [271, 0, 0, "-", "safety"], [272, 0, 0, "-", "tests"], [274, 0, 0, "-", "thermalHydraulics"]], "armi.physics.constants": [[214, 6, 1, "", "DPA_CROSS_SECTIONS"]], "armi.physics.executers": [[215, 2, 1, "", "DefaultExecuter"], [215, 2, 1, "", "Executer"], [215, 2, 1, "", "ExecutionOptions"]], "armi.physics.executers.DefaultExecuter": [[215, 3, 1, "", "run"], [215, 3, 1, "", "writeInput"]], "armi.physics.executers.Executer": [[215, 3, 1, "", "run"]], "armi.physics.executers.ExecutionOptions": [[215, 3, 1, "", "describe"], [215, 3, 1, "", "fromReactor"], [215, 3, 1, "", "fromUserSettings"], [215, 3, 1, "", "resolveDerivedOptions"], [215, 3, 1, "", "setRunDirFromCaseTitle"]], "armi.physics.fuelCycle": [[216, 2, 1, "", "FuelHandlerPlugin"], [217, 0, 0, "-", "assemblyRotationAlgorithms"], [218, 0, 0, "-", "fuelHandlerFactory"], [219, 0, 0, "-", "fuelHandlerInterface"], [220, 0, 0, "-", "fuelHandlers"], [221, 0, 0, "-", "hexAssemblyFuelMgmtUtils"], [222, 0, 0, "-", "settings"], [223, 0, 0, "-", "tests"]], "armi.physics.fuelCycle.FuelHandlerPlugin": [[216, 3, 1, "", "defineSettings"], [216, 3, 1, "", "defineSettingsValidators"], [216, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms": [[217, 1, 1, "", "buReducingAssemblyRotation"], [217, 1, 1, "", "simpleAssemblyRotation"]], "armi.physics.fuelCycle.fuelHandlerFactory": [[218, 1, 1, "", "fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface": [[219, 2, 1, "", "FuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface": [[219, 3, 1, "", "interactBOC"], [219, 3, 1, "", "interactEOC"], [219, 3, 1, "", "interactEOL"], [219, 3, 1, "", "makeShuffleReport"], [219, 3, 1, "", "manageFuel"], [219, 4, 1, "", "name"], [219, 3, 1, "", "specifyInputs"], [219, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.fuelHandlers": [[220, 2, 1, "", "FuelHandler"]], "armi.physics.fuelCycle.fuelHandlers.FuelHandler": [[220, 3, 1, "", "chooseSwaps"], [220, 5, 1, "", "cs"], [220, 5, 1, "", "cycle"], [220, 3, 1, "", "dischargeSwap"], [220, 3, 1, "", "doRepeatShuffle"], [220, 3, 1, "", "findAssembly"], [220, 3, 1, "", "getFactorList"], [220, 3, 1, "", "isAssemblyInAZone"], [220, 3, 1, "", "makeShuffleArrows"], [220, 3, 1, "", "outage"], [220, 3, 1, "", "prepCore"], [220, 3, 1, "", "prepShuffleMap"], [220, 3, 1, "", "processMoveList"], [220, 5, 1, "", "r"], [220, 3, 1, "", "readMoves"], [220, 3, 1, "", "repeatShufflePattern"], [220, 3, 1, "", "swapAssemblies"], [220, 3, 1, "", "swapCascade"], [220, 3, 1, "", "trackChain"], [220, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils": [[221, 1, 1, "", "buildConvergentRingSchedule"], [221, 1, 1, "", "buildRingSchedule"], [221, 1, 1, "", "getOptimalAssemblyOrientation"]], "armi.physics.fuelCycle.settings": [[222, 1, 1, "", "getFuelCycleSettingValidators"], [222, 1, 1, "", "getFuelCycleSettings"]], "armi.physics.fuelCycle.tests": [[224, 0, 0, "-", "test_assemblyRotationAlgorithms"], [225, 0, 0, "-", "test_fuelHandlers"], [226, 0, 0, "-", "test_hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms": [[224, 2, 1, "", "TestFuelHandlerMgmtTools"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools": [[224, 3, 1, "", "test_buReducingAssemblyRotation"], [224, 3, 1, "", "test_simpleAssemblyRotation"]], "armi.physics.fuelCycle.tests.test_fuelHandlers": [[225, 2, 1, "", "FuelHandlerTestHelper"], [225, 2, 1, "", "MockLatticePhysicsInterface"], [225, 2, 1, "", "MockXSGM"], [225, 2, 1, "", "TestFuelHandler"], [225, 2, 1, "", "TestFuelPlugin"], [225, 1, 1, "", "addSomeDetailAssemblies"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface": [[225, 3, 1, "", "interactBOC"], [225, 4, 1, "", "name"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM": [[225, 3, 1, "", "interactBOC"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler": [[225, 3, 1, "", "runShuffling"], [225, 3, 1, "", "test_dischargeSwap"], [225, 3, 1, "", "test_dischargeSwapIncompatibleStationaryBlocks"], [225, 3, 1, "", "test_findByCoords"], [225, 3, 1, "", "test_findHighBu"], [225, 3, 1, "", "test_findInSFP"], [225, 3, 1, "", "test_findMany"], [225, 3, 1, "", "test_findWithMinMax"], [225, 3, 1, "", "test_getAssembliesInRings"], [225, 3, 1, "", "test_getFactorList"], [225, 3, 1, "", "test_getParamMax"], [225, 3, 1, "", "test_interactBOC"], [225, 3, 1, "", "test_isAssemblyInAZone"], [225, 3, 1, "", "test_linPowByPin"], [225, 3, 1, "", "test_linPowByPinGamma"], [225, 3, 1, "", "test_linPowByPinNeutron"], [225, 3, 1, "", "test_outage"], [225, 3, 1, "", "test_outageEdgeCase"], [225, 3, 1, "", "test_processMoveList"], [225, 3, 1, "", "test_readMoves"], [225, 3, 1, "", "test_repeatShuffles"], [225, 3, 1, "", "test_transferDifferentNumberStationaryBlocks"], [225, 3, 1, "", "test_transferIncompatibleHeightStationaryBlocks"], [225, 3, 1, "", "test_transferStationaryBlocks"], [225, 3, 1, "", "test_transferUnalignedLocationStationaryBlocks"], [225, 3, 1, "", "test_width"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin": [[225, 3, 1, "", "test_settingsAreDiscovered"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils": [[226, 2, 1, "", "TestHexAssemMgmtTools"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools": [[226, 3, 1, "", "test_buildConvergentRingSchedule"], [226, 3, 1, "", "test_buildRingSchedule"]], "armi.physics.fuelPerformance": [[228, 0, 0, "-", "executers"], [229, 0, 0, "-", "parameters"], [230, 0, 0, "-", "plugin"], [231, 0, 0, "-", "settings"], [232, 0, 0, "-", "tests"], [236, 0, 0, "-", "utils"]], "armi.physics.fuelPerformance.executers": [[228, 2, 1, "", "FuelPerformanceExecuter"], [228, 2, 1, "", "FuelPerformanceOptions"]], "armi.physics.fuelPerformance.executers.FuelPerformanceOptions": [[228, 3, 1, "", "fromReactor"], [228, 3, 1, "", "fromUserSettings"]], "armi.physics.fuelPerformance.parameters": [[229, 1, 1, "", "getFuelPerformanceParameterDefinitions"]], "armi.physics.fuelPerformance.plugin": [[230, 2, 1, "", "FuelPerformancePlugin"]], "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin": [[230, 3, 1, "", "defineParameters"], [230, 3, 1, "", "defineSettings"], [230, 3, 1, "", "defineSettingsValidators"], [230, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelPerformance.settings": [[231, 1, 1, "", "defineSettings"], [231, 1, 1, "", "defineValidators"]], "armi.physics.fuelPerformance.tests": [[233, 0, 0, "-", "test_executers"], [234, 0, 0, "-", "test_fuelPerformancePlugin"], [235, 0, 0, "-", "test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_executers": [[233, 2, 1, "", "TestFuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions": [[233, 3, 1, "", "test_fuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin": [[234, 2, 1, "", "TestFuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin": [[234, 4, 1, "", "plugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils": [[235, 2, 1, "", "TestFuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils": [[235, 3, 1, "", "test_applyFuelDisplacement"], [235, 3, 1, "", "test_gasConductivityCorrection_morph0"], [235, 3, 1, "", "test_gasConductivityCorrection_morph1"], [235, 3, 1, "", "test_gasConductivityCorrection_morph2"], [235, 3, 1, "", "test_gasConductivityCorrection_morph3"], [235, 3, 1, "", "test_gasConductivityCorrection_morph4"]], "armi.physics.fuelPerformance.utils": [[236, 1, 1, "", "applyFuelDisplacement"], [236, 1, 1, "", "gasConductivityCorrection"]], "armi.physics.neutronics": [[237, 2, 1, "", "LatticePhysicsFrequency"], [237, 2, 1, "", "NeutronicsPlugin"], [237, 1, 1, "", "adjointCalculationRequested"], [237, 1, 1, "", "applyEffectiveDelayedNeutronFractionToCore"], [238, 0, 0, "-", "const"], [239, 0, 0, "-", "crossSectionGroupManager"], [240, 0, 0, "-", "crossSectionSettings"], [241, 0, 0, "-", "diffIsotxs"], [242, 0, 0, "-", "energyGroups"], [243, 0, 0, "-", "fissionProductModel"], [237, 1, 1, "", "gammaTransportIsRequested"], [237, 1, 1, "", "gammaXsAreRequested"], [250, 0, 0, "-", "globalFlux"], [254, 0, 0, "-", "latticePhysics"], [260, 0, 0, "-", "macroXSGenerationInterface"], [261, 0, 0, "-", "parameters"], [237, 1, 1, "", "realCalculationRequested"], [262, 0, 0, "-", "reports"], [263, 0, 0, "-", "settings"], [264, 0, 0, "-", "tests"]], "armi.physics.neutronics.LatticePhysicsFrequency": [[237, 4, 1, "", "BOC"], [237, 4, 1, "", "BOL"], [237, 4, 1, "", "all"], [237, 4, 1, "", "everyNode"], [237, 4, 1, "", "firstCoupledIteration"], [237, 4, 1, "", "never"]], "armi.physics.neutronics.NeutronicsPlugin": [[237, 3, 1, "", "defineEntryPoints"], [237, 3, 1, "", "defineParameters"], [237, 3, 1, "", "defineSettings"], [237, 3, 1, "", "defineSettingsValidators"], [237, 3, 1, "", "exposeInterfaces"], [237, 3, 1, "", "getReportContents"], [237, 3, 1, "", "onProcessCoreLoading"]], "armi.physics.neutronics.crossSectionGroupManager": [[239, 2, 1, "", "AverageBlockCollection"], [239, 2, 1, "", "BlockCollection"], [239, 2, 1, "", "CrossSectionGroupManager"], [239, 2, 1, "", "CylindricalComponentsAverageBlockCollection"], [239, 2, 1, "", "FluxWeightedAverageBlockCollection"], [239, 2, 1, "", "MedianBlockCollection"], [239, 2, 1, "", "SlabComponentsAverageBlockCollection"], [239, 1, 1, "", "blockCollectionFactory"], [239, 1, 1, "", "describeInterfaces"], [239, 1, 1, "", "getBlockNuclideTemperatureAvgTerms"], [239, 1, 1, "", "getXSTypeLabelFromNumber"], [239, 1, 1, "", "getXSTypeNumberFromLabel"]], "armi.physics.neutronics.crossSectionGroupManager.BlockCollection": [[239, 3, 1, "", "calcAvgNuclideTemperatures"], [239, 3, 1, "", "createRepresentativeBlock"], [239, 3, 1, "", "getCandidateBlocks"], [239, 3, 1, "", "getWeight"]], "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager": [[239, 3, 1, "", "clearRepresentativeBlocks"], [239, 3, 1, "", "createRepresentativeBlocks"], [239, 3, 1, "", "createRepresentativeBlocksUsingExistingBlocks"], [239, 3, 1, "", "disableBuGroupUpdates"], [239, 3, 1, "", "enableBuGroupUpdates"], [239, 3, 1, "", "fluxSolutionIsPregenerated"], [239, 3, 1, "", "getNextAvailableXsTypes"], [239, 3, 1, "", "getNucTemperature"], [239, 3, 1, "", "interactBOC"], [239, 3, 1, "", "interactBOL"], [239, 3, 1, "", "interactCoupled"], [239, 3, 1, "", "interactEOC"], [239, 3, 1, "", "interactEveryNode"], [239, 3, 1, "", "makeCrossSectionGroups"], [239, 4, 1, "", "name"], [239, 3, 1, "", "updateNuclideTemperatures"], [239, 3, 1, "", "xsTypeIsPregenerated"]], "armi.physics.neutronics.crossSectionSettings": [[240, 2, 1, "", "XSGeometryTypes"], [240, 2, 1, "", "XSModelingOptions"], [240, 2, 1, "", "XSSettingDef"], [240, 2, 1, "", "XSSettings"], [240, 1, 1, "", "serializeXSSettings"], [240, 1, 1, "", "xsSettingsValidator"]], "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes": [[240, 4, 1, "", "ONE_DIMENSIONAL_CYLINDER"], [240, 4, 1, "", "ONE_DIMENSIONAL_SLAB"], [240, 4, 1, "", "TWO_DIMENSIONAL_HEX"], [240, 4, 1, "", "ZERO_DIMENSIONAL"], [240, 3, 1, "", "getStr"]], "armi.physics.neutronics.crossSectionSettings.XSModelingOptions": [[240, 5, 1, "", "buGroup"], [240, 5, 1, "", "fluxIsPregenerated"], [240, 3, 1, "", "serialize"], [240, 3, 1, "", "setDefaults"], [240, 3, 1, "", "validate"], [240, 5, 1, "", "xsIsPregenerated"], [240, 5, 1, "", "xsType"]], "armi.physics.neutronics.crossSectionSettings.XSSettingDef": [[240, 3, 1, "", "dump"]], "armi.physics.neutronics.crossSectionSettings.XSSettings": [[240, 3, 1, "", "setDefaults"]], "armi.physics.neutronics.diffIsotxs": [[241, 2, 1, "", "CompareIsotxsLibraries"]], "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries": [[241, 3, 1, "", "addOptions"], [241, 3, 1, "", "invoke"], [241, 4, 1, "", "name"], [241, 4, 1, "", "settingsArgument"]], "armi.physics.neutronics.energyGroups": [[242, 6, 1, "", "GROUP_STRUCTURE"], [242, 1, 1, "", "getFastFluxGroupCutoff"], [242, 1, 1, "", "getGroupStructure"], [242, 1, 1, "", "getGroupStructureType"]], "armi.physics.neutronics.fissionProductModel": [[244, 0, 0, "-", "fissionProductModel"], [245, 0, 0, "-", "fissionProductModelSettings"], [246, 0, 0, "-", "lumpedFissionProduct"], [247, 0, 0, "-", "tests"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel": [[244, 2, 1, "", "FissionProductModel"], [244, 1, 1, "", "describeInterfaces"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel": [[244, 3, 1, "", "getAllFissionProductNames"], [244, 3, 1, "", "getGlobalLumpedFissionProducts"], [244, 3, 1, "", "interactBOC"], [244, 3, 1, "", "interactBOL"], [244, 3, 1, "", "interactDistributeState"], [244, 4, 1, "", "name"], [244, 3, 1, "", "removeFissionGasesFromBlocks"], [244, 3, 1, "", "setAllBlockLFPs"], [244, 3, 1, "", "setAllComponentFissionProducts"], [244, 3, 1, "", "setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings": [[245, 1, 1, "", "defineSettings"], [245, 1, 1, "", "getFissionProductModelSettingValidators"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct": [[246, 2, 1, "", "FissionProductDefinitionFile"], [246, 2, 1, "", "LumpedFissionProduct"], [246, 2, 1, "", "LumpedFissionProductCollection"], [246, 1, 1, "", "isGas"], [246, 1, 1, "", "lumpedFissionProductFactory"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile": [[246, 3, 1, "", "createLFPsFromFile"], [246, 3, 1, "", "createSingleLFPFromFile"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct": [[246, 3, 1, "", "duplicate"], [246, 3, 1, "", "getGaseousYieldFraction"], [246, 3, 1, "", "getMassFrac"], [246, 3, 1, "", "getMassFracDenom"], [246, 3, 1, "", "getMassFracs"], [246, 3, 1, "", "getTotalYield"], [246, 3, 1, "", "items"], [246, 3, 1, "", "keys"], [246, 3, 1, "", "values"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection": [[246, 3, 1, "", "duplicate"], [246, 3, 1, "", "getAllFissionProductNames"], [246, 3, 1, "", "getAllFissionProductNuclideBases"], [246, 3, 1, "", "getLumpedFissionProductNames"], [246, 3, 1, "", "getMassFrac"], [246, 3, 1, "", "getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests": [[248, 0, 0, "-", "test_fissionProductModel"], [249, 0, 0, "-", "test_lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel": [[248, 2, 1, "", "TestFissionProductModelExplicitMC2Library"], [248, 2, 1, "", "TestFissionProductModelExplicitMC2LibrarySlower"], [248, 2, 1, "", "TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library": [[248, 3, 1, "", "test_nuclideFlags"], [248, 3, 1, "", "test_nuclidesInModelFuel"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower": [[248, 3, 1, "", "test_nuclidesInModelAllDepletableBlocks"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts": [[248, 3, 1, "", "test_fpApplication"], [248, 3, 1, "", "test_getAllFissionProductNames"], [248, 3, 1, "", "test_loadGlobalLFPsFromFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct": [[249, 2, 1, "", "TestFissionProductDefinitionFile"], [249, 2, 1, "", "TestLumpedFissionProduct"], [249, 2, 1, "", "TestLumpedFissionProductCollection"], [249, 2, 1, "", "TestLumpedFissionProductsExplicit"], [249, 2, 1, "", "TestLumpedFissionProductsFromReferenceFile"], [249, 2, 1, "", "TestMo99LFP"], [249, 1, 1, "", "getDummyLFPFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile": [[249, 3, 1, "", "test_createLFPs"], [249, 3, 1, "", "test_createReferenceLFPs"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct": [[249, 3, 1, "", "test_gaseousYieldFraction"], [249, 3, 1, "", "test_getYield"], [249, 3, 1, "", "test_isGas"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection": [[249, 3, 1, "", "test_duplicate"], [249, 3, 1, "", "test_getAllFissionProductNames"], [249, 3, 1, "", "test_getAllFissionProductNuclideBases"], [249, 3, 1, "", "test_getMassFrac"], [249, 3, 1, "", "test_getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit": [[249, 3, 1, "", "test_explicitFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile": [[249, 3, 1, "", "test_fissionProductYields"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP": [[249, 3, 1, "", "test_getAllFissionProductNames"]], "armi.physics.neutronics.globalFlux": [[251, 0, 0, "-", "globalFluxInterface"], [252, 0, 0, "-", "tests"]], "armi.physics.neutronics.globalFlux.globalFluxInterface": [[251, 2, 1, "", "GlobalFluxExecuter"], [251, 2, 1, "", "GlobalFluxInterface"], [251, 2, 1, "", "GlobalFluxInterfaceUsingExecuters"], [251, 2, 1, "", "GlobalFluxOptions"], [251, 2, 1, "", "GlobalFluxResultMapper"], [251, 1, 1, "", "calcReactionRates"], [251, 1, 1, "", "computeDpaRate"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter": [[251, 3, 1, "", "edgeAssembliesAreNeeded"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface": [[251, 3, 1, "", "calculateKeff"], [251, 3, 1, "", "checkEnergyBalance"], [251, 4, 1, "", "function"], [251, 3, 1, "", "getHistoryParams"], [251, 3, 1, "", "getIOFileNames"], [251, 3, 1, "", "interactBOC"], [251, 3, 1, "", "interactCoupled"], [251, 3, 1, "", "interactEveryNode"], [251, 4, 1, "", "name"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters": [[251, 3, 1, "", "calculateKeff"], [251, 3, 1, "", "getExecuter"], [251, 3, 1, "", "getExecuterCls"], [251, 3, 1, "", "getExecuterOptions"], [251, 3, 1, "", "getLabel"], [251, 3, 1, "", "getOptionsCls"], [251, 3, 1, "", "getTightCouplingValue"], [251, 3, 1, "", "interactCoupled"], [251, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions": [[251, 3, 1, "", "fromReactor"], [251, 3, 1, "", "fromUserSettings"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper": [[251, 3, 1, "", "clearFlux"], [251, 3, 1, "", "getBurnupPeakingFactor"], [251, 3, 1, "", "getDpaXs"], [251, 3, 1, "", "getKeff"], [251, 3, 1, "", "updateDpaRate"], [251, 3, 1, "", "updateMaxDpaParams"]], "armi.physics.neutronics.globalFlux.tests": [[253, 0, 0, "-", "test_globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface": [[253, 2, 1, "", "MockCore"], [253, 2, 1, "", "MockCoreParams"], [253, 2, 1, "", "MockGlobalFluxExecuter"], [253, 2, 1, "", "MockGlobalFluxInterface"], [253, 2, 1, "", "MockGlobalFluxWithExecuters"], [253, 2, 1, "", "MockGlobalFluxWithExecutersNonUniform"], [253, 2, 1, "", "MockReactor"], [253, 2, 1, "", "MockReactorParams"], [253, 2, 1, "", "TestGlobalFluxInterface"], [253, 2, 1, "", "TestGlobalFluxInterfaceWithExecuters"], [253, 2, 1, "", "TestGlobalFluxInterfaceWithExecutersNonUniform"], [253, 2, 1, "", "TestGlobalFluxOptions"], [253, 2, 1, "", "TestGlobalFluxResultMapper"], [253, 2, 1, "", "TestGlobalFluxUtils"], [253, 1, 1, "", "applyDummyFlux"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface": [[253, 3, 1, "", "interactBOC"], [253, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters": [[253, 3, 1, "", "getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform": [[253, 3, 1, "", "getExecuterOptions"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface": [[253, 3, 1, "", "test_checkEnergyBalance"], [253, 3, 1, "", "test_computeDpaRate"], [253, 3, 1, "", "test_getHistoryParams"], [253, 3, 1, "", "test_getIOFileNames"], [253, 3, 1, "", "test_interaction"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters": [[253, 3, 1, "", "test_calculateKeff"], [253, 3, 1, "", "test_executerInteraction"], [253, 3, 1, "", "test_getExecuterCls"], [253, 3, 1, "", "test_getTightCouplingValue"], [253, 3, 1, "", "test_setTightCouplingDefaults"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform": [[253, 3, 1, "", "test_calculateKeff"], [253, 3, 1, "", "test_executerInteractionNonUniformAssems"], [253, 3, 1, "", "test_getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions": [[253, 3, 1, "", "test_readFromReactors"], [253, 3, 1, "", "test_readFromSettings"], [253, 3, 1, "", "test_savePhysicsFiles"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper": [[253, 3, 1, "", "test_getBurnupPeakingFactor"], [253, 3, 1, "", "test_getBurnupPeakingFactorZero"], [253, 3, 1, "", "test_getDpaXs"], [253, 3, 1, "", "test_mapper"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils": [[253, 3, 1, "", "test_calcReactionRates"]], "armi.physics.neutronics.latticePhysics": [[255, 0, 0, "-", "latticePhysicsInterface"], [256, 0, 0, "-", "latticePhysicsWriter"], [257, 0, 0, "-", "tests"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface": [[255, 2, 1, "", "LatticePhysicsInterface"], [255, 1, 1, "", "setBlockNeutronVelocities"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface": [[255, 3, 1, "", "clearXS"], [255, 3, 1, "", "computeCrossSections"], [255, 4, 1, "", "function"], [255, 3, 1, "", "generateLatticePhysicsInputs"], [255, 3, 1, "", "getReader"], [255, 3, 1, "", "getRepresentativeBlocks"], [255, 3, 1, "", "getWriters"], [255, 3, 1, "", "interactBOC"], [255, 3, 1, "", "interactBOL"], [255, 3, 1, "", "interactCoupled"], [255, 3, 1, "", "interactEOC"], [255, 3, 1, "", "interactEveryNode"], [255, 3, 1, "", "makeCycleXSFilesAsBaseFiles"], [255, 3, 1, "", "readExistingXSLibraries"], [255, 3, 1, "", "updatePhysicsCouplingControl"], [255, 3, 1, "", "updateXSLibrary"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter": [[256, 2, 1, "", "LatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter": [[256, 4, 1, "", "COOLANT_CATEGORY"], [256, 4, 1, "", "DEPLETABLE"], [256, 4, 1, "", "FISSION_PRODUCT_CATEGORY"], [256, 4, 1, "", "FUEL_CATEGORY"], [256, 4, 1, "", "REPRESENTED"], [256, 4, 1, "", "STRUCTURE_CATEGORY"], [256, 4, 1, "", "UNDEPLETABLE"], [256, 4, 1, "", "UNREPRESENTED"], [256, 4, 1, "", "UNUSED_CATEGORY"], [256, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests": [[258, 0, 0, "-", "test_latticeInterface"], [259, 0, 0, "-", "test_latticeWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface": [[258, 2, 1, "", "LatticeInterfaceTester"], [258, 2, 1, "", "LatticeInterfaceTesterLibFalse"], [258, 2, 1, "", "TestLatticePhysicsInterface"], [258, 2, 1, "", "TestLatticePhysicsInterfaceBase"], [258, 2, 1, "", "TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester": [[258, 3, 1, "", "readExistingXSLibraries"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface": [[258, 3, 1, "", "test_getSuffix"], [258, 3, 1, "", "test_includeGammaXS"], [258, 3, 1, "", "test_interactAll"], [258, 3, 1, "", "test_interactBOC"], [258, 3, 1, "", "test_interactBOL"], [258, 3, 1, "", "test_interactEveryNode"], [258, 3, 1, "", "test_interactEveryNodeAll"], [258, 3, 1, "", "test_interactEveryNodeFirstCoupled"], [258, 3, 1, "", "test_interactEveryNodeWhenCoupled"], [258, 3, 1, "", "test_interactEveryNodeWhenCoupledButNot"], [258, 3, 1, "", "test_interactFirstCoupledIteration"], [258, 3, 1, "", "test_latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation": [[258, 3, 1, "", "test_libCreation_GenXS"], [258, 3, 1, "", "test_libCreation_GenXS_2"], [258, 3, 1, "", "test_libCreation_GenXS_3"], [258, 3, 1, "", "test_libCreation_NoGenXS"], [258, 3, 1, "", "test_libCreation_NoGenXS_2"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter": [[259, 2, 1, "", "FakeLatticePhysicsWriter"], [259, 2, 1, "", "TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter": [[259, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter": [[259, 3, 1, "", "test_getAllNuclidesByTemperatureInC"], [259, 3, 1, "", "test_getAllNuclidesByTemperatureInCExplicitFissionProducts"], [259, 3, 1, "", "test_getAllNuclidesByTemperatureInCNone"], [259, 3, 1, "", "test_getAvgNuclideTemperatureInC"], [259, 3, 1, "", "test_getDetailedFPDensities"], [259, 3, 1, "", "test_getDetailedFissionProducts"], [259, 3, 1, "", "test_getDetailedFissionProductsPass"], [259, 3, 1, "", "test_getDriverBlock"], [259, 3, 1, "", "test_getFuelTemperature"], [259, 3, 1, "", "test_isCriticalBucklingSearchActive"], [259, 3, 1, "", "test_isGammaXSGenerationEnabled"], [259, 3, 1, "", "test_isSourceDriven"], [259, 3, 1, "", "test_latticePhysicsWriter"], [259, 3, 1, "", "test_setBlockNeutronVelocities"], [259, 3, 1, "", "test_writeTitle"]], "armi.physics.neutronics.macroXSGenerationInterface": [[260, 2, 1, "", "MacroXSGenerationInterface"], [260, 2, 1, "", "MacroXSGenerator"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface": [[260, 3, 1, "", "buildMacros"], [260, 4, 1, "", "name"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator": [[260, 3, 1, "", "invokeHook"]], "armi.physics.neutronics.parameters": [[261, 1, 1, "", "getNeutronicsParameterDefinitions"]], "armi.physics.neutronics.reports": [[262, 6, 1, "", "PD_PLOT"], [262, 1, 1, "", "generateLinePlot"], [262, 1, 1, "", "insertInitialCoreFuelAssem"], [262, 1, 1, "", "insertNeutronicsBOLContent"], [262, 1, 1, "", "insertNeutronicsReport"], [262, 1, 1, "", "neutronicsPlotting"]], "armi.physics.neutronics.settings": [[263, 1, 1, "", "defineSettings"], [263, 1, 1, "", "getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[265, 0, 0, "-", "test_crossSectionManager"], [266, 0, 0, "-", "test_crossSectionSettings"], [267, 0, 0, "-", "test_crossSectionTable"], [268, 0, 0, "-", "test_energyGroups"], [269, 0, 0, "-", "test_macroXSGenerationInterface"], [270, 0, 0, "-", "test_neutronicsPlugin"]], "armi.physics.neutronics.tests.test_crossSectionManager": [[265, 2, 1, "", "TestBlockCollection"], [265, 2, 1, "", "TestBlockCollectionAverage"], [265, 2, 1, "", "TestBlockCollectionComponentAverage"], [265, 2, 1, "", "TestBlockCollectionComponentAverage1DCylinder"], [265, 2, 1, "", "TestBlockCollectionFluxWeightedAverage"], [265, 2, 1, "", "TestBlockCollectionMedian"], [265, 2, 1, "", "TestComponentAveraging"], [265, 2, 1, "", "TestCrossSectionGroupManager"], [265, 2, 1, "", "TestXSNumberConverters"], [265, 1, 1, "", "makeBlocks"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection": [[265, 3, 1, "", "test_add"], [265, 3, 1, "", "test_getBlocksInGroup"], [265, 3, 1, "", "test_is_pickleable"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage": [[265, 3, 1, "", "test_checkBlockSimilarity"], [265, 3, 1, "", "test_createRepresentativeBlock"], [265, 3, 1, "", "test_createRepresentativeBlockDissimilar"], [265, 3, 1, "", "test_performAverageByComponent"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage": [[265, 3, 1, "", "test_ComponentAverageRepBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder": [[265, 3, 1, "", "test_ComponentAverage1DCylinder"], [265, 3, 1, "", "test_checkComponentConsistency"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage": [[265, 3, 1, "", "test_createRepresentativeBlock"], [265, 3, 1, "", "test_invalidWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian": [[265, 3, 1, "", "test_createRepresentativeBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging": [[265, 3, 1, "", "test_getAverageComponentNumberDensities"], [265, 3, 1, "", "test_getAverageComponentTemperature"], [265, 3, 1, "", "test_getAverageComponentTemperatureNoMass"], [265, 3, 1, "", "test_getAverageComponentTemperatureVariedWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager": [[265, 3, 1, "", "test_addXsGroupsFromBlocks"], [265, 3, 1, "", "test_calcWeightedBurnup"], [265, 3, 1, "", "test_copyPregeneratedFiles"], [265, 3, 1, "", "test_createRepresentativeBlocksUsingExistingBlocks"], [265, 3, 1, "", "test_createRepresentativeBlocksUsingExistingBlocksDisableValidBlockTypes"], [265, 3, 1, "", "test_disableBuGroupUpdates"], [265, 3, 1, "", "test_enableBuGroupUpdates"], [265, 3, 1, "", "test_getNextAvailableXsType"], [265, 3, 1, "", "test_getRepresentativeBlocks"], [265, 3, 1, "", "test_interactAllCoupled"], [265, 3, 1, "", "test_interactBOC"], [265, 3, 1, "", "test_interactBOL"], [265, 3, 1, "", "test_interactEveryNode"], [265, 3, 1, "", "test_interactFirstCoupledIteration"], [265, 3, 1, "", "test_setBuGroupBounds"], [265, 3, 1, "", "test_updateBurnupGroups"], [265, 3, 1, "", "test_xsgmIsRunBeforeXS"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters": [[265, 3, 1, "", "test_conversion"], [265, 3, 1, "", "test_conversion_2digit"]], "armi.physics.neutronics.tests.test_crossSectionSettings": [[266, 2, 1, "", "TestCrossSectionSettings"], [266, 2, 1, "", "TestXSSettings"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings": [[266, 3, 1, "", "test_badCrossSections"], [266, 3, 1, "", "test_crossSections"], [266, 3, 1, "", "test_homogeneousXsDefaultSettingAssignment"], [266, 3, 1, "", "test_optionalKey"], [266, 3, 1, "", "test_pregeneratedCrossSections"], [266, 3, 1, "", "test_pregeneratedFluxInputs"], [266, 3, 1, "", "test_prioritization"], [266, 3, 1, "", "test_setDefaultSettingsByLowestBuGroupHomogeneous"], [266, 3, 1, "", "test_setDefaultSettingsByLowestBuGroupOneDimensional"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings": [[266, 3, 1, "", "test_caseSettings"], [266, 3, 1, "", "test_csBlockRepresentation"], [266, 3, 1, "", "test_csBlockRepresentationFileLocation"], [266, 3, 1, "", "test_xsSettingsSetDefault"], [266, 3, 1, "", "test_yamlIO"]], "armi.physics.neutronics.tests.test_crossSectionTable": [[267, 2, 1, "", "TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable": [[267, 3, 1, "", "test_isotopicDepletionInterface"], [267, 3, 1, "", "test_makeTable"]], "armi.physics.neutronics.tests.test_energyGroups": [[268, 2, 1, "", "TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups": [[268, 3, 1, "", "test_consistenciesBetweenGroupStructureAndGroupStructureType"], [268, 3, 1, "", "test_getFastFluxGroupCutoff"], [268, 3, 1, "", "test_invalidGroupStructureType"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface": [[269, 2, 1, "", "TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface": [[269, 3, 1, "", "test_macroXSGenerationInterfaceBasics"]], "armi.physics.neutronics.tests.test_neutronicsPlugin": [[270, 2, 1, "", "NeutronicsReactorTests"], [270, 2, 1, "", "TestNeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests": [[270, 3, 1, "", "test_kineticsParameterAssignment"], [270, 3, 1, "", "test_neutronicsSettingsValidators"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin": [[270, 4, 1, "", "plugin"], [270, 3, 1, "", "test_customSettingObjectIO"], [270, 3, 1, "", "test_customSettingRoundTrip"], [270, 3, 1, "", "test_neutronicsSettingsLoaded"]], "armi.physics.safety": [[271, 2, 1, "", "SafetyPlugin"]], "armi.physics.safety.SafetyPlugin": [[271, 3, 1, "", "defineSettings"]], "armi.physics.tests": [[273, 0, 0, "-", "test_executers"]], "armi.physics.tests.test_executers": [[273, 2, 1, "", "MockCore"], [273, 2, 1, "", "MockParams"], [273, 2, 1, "", "MockReactor"], [273, 2, 1, "", "TestExecuters"], [273, 2, 1, "", "TestExecutionOptions"]], "armi.physics.tests.test_executers.TestExecuters": [[273, 3, 1, "", "test_collectInputsAndOutputs"], [273, 3, 1, "", "test_runExternalExecutable"], [273, 3, 1, "", "test_updateRunDir"]], "armi.physics.tests.test_executers.TestExecutionOptions": [[273, 3, 1, "", "test_runningDirectoryPath"]], "armi.physics.thermalHydraulics": [[275, 0, 0, "-", "const"], [276, 0, 0, "-", "parameters"], [277, 0, 0, "-", "plugin"], [278, 0, 0, "-", "settings"], [279, 0, 0, "-", "tests"]], "armi.physics.thermalHydraulics.parameters": [[276, 1, 1, "", "getParameterDefinitions"]], "armi.physics.thermalHydraulics.plugin": [[277, 2, 1, "", "ThermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin": [[277, 3, 1, "", "afterConstructionOfAssemblies"], [277, 3, 1, "", "defineParameters"], [277, 3, 1, "", "defineSettings"], [277, 3, 1, "", "defineSettingsValidators"], [277, 3, 1, "", "exposeInterfaces"]], "armi.physics.thermalHydraulics.settings": [[278, 1, 1, "", "defineSettings"], [278, 1, 1, "", "defineValidators"]], "armi.physics.thermalHydraulics.tests": [[280, 0, 0, "-", "test_thermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin": [[280, 2, 1, "", "TestThermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin": [[280, 4, 1, "", "plugin"], [280, 3, 1, "", "test_thermalHydraulicsSettingsLoaded"], [280, 3, 1, "", "test_thermalHydraulicsSettingsSet"]], "armi.pluginManager": [[281, 2, 1, "", "ArmiPluginManager"]], "armi.pluginManager.ArmiPluginManager": [[281, 5, 1, "", "counter"], [281, 3, 1, "", "register"], [281, 3, 1, "", "unregister"]], "armi.plugins": [[282, 2, 1, "", "ArmiPlugin"], [282, 7, 1, "", "PluginError"], [282, 2, 1, "", "UserPlugin"], [282, 1, 1, "", "collectInterfaceDescriptions"], [282, 1, 1, "", "getNewPluginManager"]], "armi.plugins.ArmiPlugin": [[282, 3, 1, "", "afterConstructionOfAssemblies"], [282, 3, 1, "", "beforeReactorConstruction"], [282, 3, 1, "", "defineAssemblyTypes"], [282, 3, 1, "", "defineBlockTypes"], [282, 3, 1, "", "defineBlueprintsSections"], [282, 3, 1, "", "defineCaseDependencies"], [282, 3, 1, "", "defineEntryPoints"], [282, 3, 1, "", "defineFlags"], [282, 3, 1, "", "defineGuiWidgets"], [282, 3, 1, "", "defineParameterRenames"], [282, 3, 1, "", "defineParameters"], [282, 3, 1, "", "defineSettings"], [282, 3, 1, "", "defineSettingsValidators"], [282, 3, 1, "", "defineSystemBuilders"], [282, 3, 1, "", "exposeInterfaces"], [282, 3, 1, "", "getAxialExpansionChanger"], [282, 3, 1, "", "getOperatorClassFromRunType"], [282, 3, 1, "", "getReportContents"], [282, 3, 1, "", "mpiActionRequiresReset"], [282, 3, 1, "", "onProcessCoreLoading"]], "armi.plugins.UserPlugin": [[282, 3, 1, "", "defineParameterRenames"], [282, 3, 1, "", "defineParameters"], [282, 3, 1, "", "defineSettings"], [282, 3, 1, "", "defineSettingsValidators"]], "armi.reactor": [[283, 2, 1, "", "ReactorPlugin"], [284, 0, 0, "-", "assemblies"], [285, 0, 0, "-", "assemblyParameters"], [286, 0, 0, "-", "blockParameters"], [287, 0, 0, "-", "blocks"], [288, 0, 0, "-", "blueprints"], [304, 0, 0, "-", "components"], [310, 0, 0, "-", "composites"], [311, 0, 0, "-", "converters"], [330, 0, 0, "-", "cores"], [331, 0, 0, "-", "excoreStructure"], [332, 0, 0, "-", "flags"], [333, 0, 0, "-", "geometry"], [334, 0, 0, "-", "grids"], [343, 0, 0, "-", "parameters"], [348, 0, 0, "-", "reactorParameters"], [349, 0, 0, "-", "reactors"], [350, 0, 0, "-", "spentFuelPool"], [351, 0, 0, "-", "systemLayoutInput"], [352, 0, 0, "-", "tests"], [364, 0, 0, "-", "zones"]], "armi.reactor.ReactorPlugin": [[283, 3, 1, "", "beforeReactorConstruction"], [283, 3, 1, "", "defineAssemblyTypes"], [283, 3, 1, "", "defineBlockTypes"], [283, 3, 1, "", "defineSystemBuilders"], [283, 3, 1, "", "getAxialExpansionChanger"]], "armi.reactor.assemblies": [[284, 2, 1, "", "Assembly"], [284, 2, 1, "", "CartesianAssembly"], [284, 2, 1, "", "HexAssembly"], [284, 2, 1, "", "RZAssembly"], [284, 2, 1, "", "ThRZAssembly"]], "armi.reactor.assemblies.Assembly": [[284, 4, 1, "", "DATABASE"], [284, 4, 1, "", "LOAD_QUEUE"], [284, 4, 1, "", "NOT_IN_CORE"], [284, 4, 1, "", "SPENT_FUEL_POOL"], [284, 3, 1, "", "add"], [284, 3, 1, "", "adjustResolution"], [284, 3, 1, "", "calculateZCoords"], [284, 3, 1, "", "coords"], [284, 3, 1, "", "countBlocksWithFlags"], [284, 3, 1, "", "dump"], [284, 3, 1, "", "getAge"], [284, 3, 1, "", "getArea"], [284, 3, 1, "", "getAveragePlenumTemperature"], [284, 3, 1, "", "getAxialMesh"], [284, 3, 1, "", "getBIndexFromZIndex"], [284, 3, 1, "", "getBlockAtElevation"], [284, 3, 1, "", "getBlocks"], [284, 3, 1, "", "getBlocksAndZ"], [284, 3, 1, "", "getBlocksBetweenElevations"], [284, 3, 1, "", "getDim"], [284, 3, 1, "", "getElevationBoundariesByBlockType"], [284, 3, 1, "", "getElevationsMatchingParamValue"], [284, 3, 1, "", "getFirstBlock"], [284, 3, 1, "", "getFirstBlockByType"], [284, 3, 1, "", "getHeight"], [284, 3, 1, "", "getLocation"], [284, 3, 1, "", "getNum"], [284, 3, 1, "", "getParamOfZFunction"], [284, 3, 1, "", "getParamValuesAtZ"], [284, 3, 1, "", "getPinPlenumVolumeInCubicMeters"], [284, 3, 1, "", "getReactiveHeight"], [284, 3, 1, "", "getSymmetryFactor"], [284, 3, 1, "", "getTotalHeight"], [284, 3, 1, "", "getVolume"], [284, 3, 1, "", "hasContinuousCoolantChannel"], [284, 3, 1, "", "insert"], [284, 3, 1, "", "isOnWhichSymmetryLine"], [284, 3, 1, "", "makeAxialSnapList"], [284, 3, 1, "", "makeNameFromAssemNum"], [284, 3, 1, "", "makeUnique"], [284, 3, 1, "", "moveTo"], [284, 4, 1, "", "pDefs"], [284, 4, 1, "", "paramCollectionType"], [284, 3, 1, "", "reestablishBlockOrder"], [284, 3, 1, "", "renameBlocksAccordingToAssemblyNum"], [284, 3, 1, "", "renumber"], [284, 3, 1, "", "rotate"], [284, 3, 1, "", "setBlockHeights"], [284, 3, 1, "", "setBlockMesh"]], "armi.reactor.assemblies.CartesianAssembly": [[284, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblies.HexAssembly": [[284, 4, 1, "", "paramCollectionType"], [284, 3, 1, "", "rotate"]], "armi.reactor.assemblies.RZAssembly": [[284, 4, 1, "", "paramCollectionType"], [284, 3, 1, "", "radialInner"], [284, 3, 1, "", "radialOuter"], [284, 3, 1, "", "thetaInner"], [284, 3, 1, "", "thetaOuter"]], "armi.reactor.assemblies.ThRZAssembly": [[284, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblyParameters": [[285, 1, 1, "", "getAssemblyParameterDefinitions"]], "armi.reactor.blockParameters": [[286, 1, 1, "", "getBlockParameterDefinitions"]], "armi.reactor.blocks": [[287, 2, 1, "", "Block"], [287, 2, 1, "", "CartesianBlock"], [287, 2, 1, "", "HexBlock"], [287, 2, 1, "", "ThRZBlock"]], "armi.reactor.blocks.Block": [[287, 4, 1, "", "PITCH_COMPONENT_TYPE"], [287, 4, 1, "", "PITCH_DIMENSION"], [287, 3, 1, "", "add"], [287, 3, 1, "", "adjustDensity"], [287, 3, 1, "", "adjustUEnrich"], [287, 3, 1, "", "autoCreateSpatialGrids"], [287, 3, 1, "", "breakFuelComponentsIntoIndividuals"], [287, 3, 1, "", "completeInitialLoading"], [287, 3, 1, "", "coords"], [287, 5, 1, "", "core"], [287, 3, 1, "", "createHomogenizedCopy"], [287, 3, 1, "", "getArea"], [287, 3, 1, "", "getBlocks"], [287, 3, 1, "", "getBoronMassEnrich"], [287, 3, 1, "", "getCaptureEnergyGenerationConstants"], [287, 3, 1, "", "getComponentAreaFrac"], [287, 3, 1, "", "getComponentsInLinkedOrder"], [287, 3, 1, "", "getComponentsThatAreLinkedTo"], [287, 3, 1, "", "getDim"], [287, 3, 1, "", "getDimensions"], [287, 3, 1, "", "getFissionEnergyGenerationConstants"], [287, 3, 1, "", "getFlowAreaPerPin"], [287, 3, 1, "", "getGammaEnergyDepositionConstants"], [287, 3, 1, "", "getHeight"], [287, 3, 1, "", "getHydraulicDiameter"], [287, 3, 1, "", "getInputHeight"], [287, 3, 1, "", "getIntegratedMgFlux"], [287, 3, 1, "", "getLargestComponent"], [287, 3, 1, "", "getLocation"], [287, 3, 1, "", "getLumpedFissionProductCollection"], [287, 3, 1, "", "getMaxArea"], [287, 3, 1, "", "getMfp"], [287, 3, 1, "", "getMgFlux"], [287, 3, 1, "", "getMicroSuffix"], [287, 3, 1, "", "getNeutronEnergyDepositionConstants"], [287, 3, 1, "", "getNumPins"], [287, 3, 1, "", "getPinCenterFlatToFlat"], [287, 3, 1, "", "getPinCoordinates"], [287, 3, 1, "", "getPinPitch"], [287, 3, 1, "", "getPitch"], [287, 3, 1, "", "getPlenumPin"], [287, 3, 1, "", "getPuMoles"], [287, 3, 1, "", "getSmearDensity"], [287, 3, 1, "", "getSortedComponentsInsideOfComponent"], [287, 3, 1, "", "getSymmetryFactor"], [287, 3, 1, "", "getTotalEnergyGenerationConstants"], [287, 3, 1, "", "getUraniumMassEnrich"], [287, 3, 1, "", "getVolume"], [287, 3, 1, "", "getWettedPerimeter"], [287, 3, 1, "", "getWireWrapCladGap"], [287, 3, 1, "", "hasPinPitch"], [287, 3, 1, "", "isPlenumPin"], [287, 3, 1, "", "makeName"], [287, 3, 1, "", "mergeWithBlock"], [287, 4, 1, "", "pDefs"], [287, 4, 1, "", "paramCollectionType"], [287, 3, 1, "", "plotFlux"], [287, 3, 1, "", "remove"], [287, 3, 1, "", "removeAll"], [287, 3, 1, "", "replaceBlockWithBlock"], [287, 3, 1, "", "rotate"], [287, 3, 1, "", "setAreaFractionsReport"], [287, 3, 1, "", "setAxialExpTargetComp"], [287, 3, 1, "", "setB10VolParam"], [287, 3, 1, "", "setBuLimitInfo"], [287, 3, 1, "", "setHeight"], [287, 3, 1, "", "setPinMgFluxes"], [287, 3, 1, "", "setPitch"], [287, 4, 1, "", "uniqID"], [287, 3, 1, "", "updateComponentDims"], [287, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.CartesianBlock": [[287, 4, 1, "", "PITCH_COMPONENT_TYPE"], [287, 4, 1, "", "PITCH_DIMENSION"], [287, 3, 1, "", "getMaxArea"], [287, 3, 1, "", "getPinCenterFlatToFlat"], [287, 3, 1, "", "getSymmetryFactor"], [287, 4, 1, "", "paramCollectionType"], [287, 3, 1, "", "setPitch"]], "armi.reactor.blocks.HexBlock": [[287, 4, 1, "", "PITCH_COMPONENT_TYPE"], [287, 3, 1, "", "autoCreateSpatialGrids"], [287, 3, 1, "", "coords"], [287, 3, 1, "", "createHomogenizedCopy"], [287, 3, 1, "", "getDuctIP"], [287, 3, 1, "", "getDuctOP"], [287, 3, 1, "", "getFlowArea"], [287, 3, 1, "", "getHydraulicDiameter"], [287, 3, 1, "", "getMaxArea"], [287, 3, 1, "", "getPinCenterFlatToFlat"], [287, 3, 1, "", "getPinPitch"], [287, 3, 1, "", "getPinToDuctGap"], [287, 3, 1, "", "getRotationNum"], [287, 3, 1, "", "getSymmetryFactor"], [287, 3, 1, "", "getWettedPerimeter"], [287, 3, 1, "", "hasPinPitch"], [287, 3, 1, "", "initializePinLocations"], [287, 4, 1, "", "paramCollectionType"], [287, 3, 1, "", "rotate"], [287, 3, 1, "", "setPinPowers"], [287, 3, 1, "", "setRotationNum"], [287, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.ThRZBlock": [[287, 3, 1, "", "axialInner"], [287, 3, 1, "", "axialOuter"], [287, 3, 1, "", "getMaxArea"], [287, 4, 1, "", "paramCollectionType"], [287, 3, 1, "", "radialInner"], [287, 3, 1, "", "radialOuter"], [287, 3, 1, "", "thetaInner"], [287, 3, 1, "", "thetaOuter"], [287, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blueprints": [[288, 2, 1, "", "Blueprints"], [289, 0, 0, "-", "assemblyBlueprint"], [290, 0, 0, "-", "blockBlueprint"], [291, 0, 0, "-", "componentBlueprint"], [292, 0, 0, "-", "gridBlueprint"], [293, 0, 0, "-", "isotopicOptions"], [288, 1, 1, "", "loadFromCs"], [288, 1, 1, "", "migrate"], [294, 0, 0, "-", "reactorBlueprint"], [295, 0, 0, "-", "tests"]], "armi.reactor.blueprints.Blueprints": [[288, 3, 1, "", "addDefaultSFP"], [288, 4, 1, "", "attributes"], [288, 3, 1, "", "constructAssem"], [288, 3, 1, "", "load"], [288, 3, 1, "", "migrate"]], "armi.reactor.blueprints.assemblyBlueprint": [[289, 2, 1, "", "AssemblyBlueprint"], [289, 2, 1, "", "AssemblyKeyedList"], [289, 2, 1, "", "ByComponentModifications"], [289, 2, 1, "", "MaterialModifications"], [289, 2, 1, "", "Modifications"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint": [[289, 4, 1, "", "attributes"], [289, 3, 1, "", "construct"], [289, 3, 1, "", "getAssemClass"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList": [[289, 4, 1, "", "attributes"], [289, 5, 1, "", "bySpecifier"], [289, 4, 1, "", "item_type"]], "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications": [[289, 4, 1, "", "attributes"], [289, 4, 1, "", "key_type"], [289, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications": [[289, 4, 1, "", "attributes"], [289, 4, 1, "", "key_type"], [289, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.Modifications": [[289, 4, 1, "", "attributes"], [289, 4, 1, "", "key_type"], [289, 4, 1, "", "value_type"]], "armi.reactor.blueprints.blockBlueprint": [[290, 2, 1, "", "BlockBlueprint"], [290, 2, 1, "", "BlockKeyedList"], [290, 2, 1, "", "BlockList"]], "armi.reactor.blueprints.blockBlueprint.BlockBlueprint": [[290, 4, 1, "", "attributes"], [290, 3, 1, "", "construct"], [290, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockKeyedList": [[290, 4, 1, "", "attributes"], [290, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockList": [[290, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint": [[291, 2, 1, "", "ComponentBlueprint"], [291, 2, 1, "", "ComponentDimension"], [291, 2, 1, "", "ComponentGroup"], [291, 2, 1, "", "ComponentGroups"], [291, 2, 1, "", "ComponentKeyedList"], [291, 2, 1, "", "GroupedComponent"], [291, 1, 1, "", "expandElementals"], [291, 1, 1, "", "insertDepletableNuclideKeys"]], "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint": [[291, 4, 1, "", "attributes"], [291, 3, 1, "", "construct"], [291, 3, 1, "", "setCustomDensity"]], "armi.reactor.blueprints.componentBlueprint.ComponentDimension": [[291, 4, 1, "", "attributes"], [291, 3, 1, "", "from_yaml"], [291, 3, 1, "", "to_yaml"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroup": [[291, 4, 1, "", "attributes"], [291, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroups": [[291, 4, 1, "", "attributes"], [291, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList": [[291, 4, 1, "", "attributes"], [291, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.GroupedComponent": [[291, 4, 1, "", "attributes"]], "armi.reactor.blueprints.gridBlueprint": [[292, 2, 1, "", "GridBlueprint"], [292, 2, 1, "", "Grids"], [292, 2, 1, "", "Triplet"], [292, 1, 1, "", "saveToStream"]], "armi.reactor.blueprints.gridBlueprint.GridBlueprint": [[292, 4, 1, "", "attributes"], [292, 3, 1, "", "construct"], [292, 3, 1, "", "expandToFull"], [292, 3, 1, "", "getLocators"], [292, 3, 1, "", "getMultiLocator"], [292, 5, 1, "", "readFromLatticeMap"]], "armi.reactor.blueprints.gridBlueprint.Grids": [[292, 4, 1, "", "attributes"], [292, 4, 1, "", "item_type"]], "armi.reactor.blueprints.gridBlueprint.Triplet": [[292, 4, 1, "", "attributes"]], "armi.reactor.blueprints.isotopicOptions": [[293, 2, 1, "", "CustomIsotopic"], [293, 2, 1, "", "CustomIsotopics"], [293, 2, 1, "", "NuclideFlag"], [293, 2, 1, "", "NuclideFlags"], [293, 1, 1, "", "autoUpdateNuclideFlags"], [293, 1, 1, "", "eleExpandInfoBasedOnCodeENDF"], [293, 1, 1, "", "genDefaultNucFlags"], [293, 1, 1, "", "getAllNuclideBasesByLibrary"], [293, 1, 1, "", "getDefaultNuclideFlags"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopic": [[293, 3, 1, "", "apply"], [293, 4, 1, "", "attributes"], [293, 5, 1, "", "density"], [293, 3, 1, "", "from_yaml"], [293, 3, 1, "", "from_yaml_key_val"], [293, 4, 1, "", "key_type"], [293, 4, 1, "", "value_type"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopics": [[293, 3, 1, "", "apply"], [293, 4, 1, "", "attributes"], [293, 4, 1, "", "item_type"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlag": [[293, 4, 1, "", "attributes"], [293, 3, 1, "", "fileAsActiveOrInert"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlags": [[293, 4, 1, "", "attributes"], [293, 4, 1, "", "item_type"]], "armi.reactor.blueprints.reactorBlueprint": [[294, 2, 1, "", "SystemBlueprint"], [294, 2, 1, "", "Systems"], [294, 1, 1, "", "summarizeMaterialData"]], "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint": [[294, 4, 1, "", "attributes"], [294, 3, 1, "", "construct"]], "armi.reactor.blueprints.reactorBlueprint.Systems": [[294, 4, 1, "", "attributes"], [294, 4, 1, "", "item_type"]], "armi.reactor.blueprints.tests": [[296, 0, 0, "-", "test_assemblyBlueprints"], [297, 0, 0, "-", "test_blockBlueprints"], [298, 0, 0, "-", "test_blueprints"], [299, 0, 0, "-", "test_componentBlueprint"], [300, 0, 0, "-", "test_customIsotopics"], [301, 0, 0, "-", "test_gridBlueprints"], [302, 0, 0, "-", "test_materialModifications"], [303, 0, 0, "-", "test_reactorBlueprints"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints": [[296, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications": [[296, 3, 1, "", "loadCustomAssembly"], [296, 3, 1, "", "test_checkParamConsistency"], [296, 4, 1, "", "twoBlockInput_correct"], [296, 4, 1, "", "twoBlockInput_wrongHeights"], [296, 4, 1, "", "twoBlockInput_wrongMatMods"], [296, 4, 1, "", "twoBlockInput_wrongMeshPoints"], [296, 4, 1, "", "twoBlockInput_wrongXSTypes"]], "armi.reactor.blueprints.tests.test_blockBlueprints": [[297, 2, 1, "", "TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock": [[297, 3, 1, "", "test_blockLattice"], [297, 3, 1, "", "test_constructSpatialGrid"], [297, 3, 1, "", "test_densityConsistentWithComponentConstructor"], [297, 3, 1, "", "test_explicitFlags"], [297, 3, 1, "", "test_getLocatorsAtLatticePositions"], [297, 3, 1, "", "test_nonLatticeComponentHasRightMult"]], "armi.reactor.blueprints.tests.test_blueprints": [[298, 2, 1, "", "TestBlueprints"], [298, 2, 1, "", "TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints": [[298, 3, 1, "", "test_componentDimensions"], [298, 3, 1, "", "test_getAssemblyTypeBySpecifier"], [298, 3, 1, "", "test_nuclides"], [298, 3, 1, "", "test_roundTripCompleteBP"], [298, 3, 1, "", "test_specialIsotopicVectors"], [298, 3, 1, "", "test_traceNuclides"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema": [[298, 3, 1, "", "test_assemblyParameters"], [298, 3, 1, "", "test_cladding_invalid"], [298, 3, 1, "", "test_componentGroupInput"], [298, 3, 1, "", "test_components"], [298, 3, 1, "", "test_customIsotopics"], [298, 3, 1, "", "test_merge"], [298, 3, 1, "", "test_noDuplicateKeysInYamlBlueprints"], [298, 3, 1, "", "test_nuclideFlags"], [298, 3, 1, "", "test_nuclidesMc2v2"], [298, 3, 1, "", "test_nuclidesMc2v3"], [298, 3, 1, "", "test_topLevelComponentInput"], [298, 3, 1, "", "test_withoutBlocks"]], "armi.reactor.blueprints.tests.test_componentBlueprint": [[299, 2, 1, "", "TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint": [[299, 4, 1, "", "componentString"], [299, 3, 1, "", "test_autoDepletable"], [299, 3, 1, "", "test_componentInitializationAmericiumCustomIsotopics"], [299, 3, 1, "", "test_componentInitializationControlCustomIsotopics"], [299, 3, 1, "", "test_componentInitializationIncompleteBurnChain"], [299, 3, 1, "", "test_componentInitializationThoriumBurnCustomIsotopics"], [299, 3, 1, "", "test_componentInitializationThoriumNoBurnCustomIsotopics"]], "armi.reactor.blueprints.tests.test_customIsotopics": [[300, 2, 1, "", "TestCustomIsotopics"], [300, 2, 1, "", "TestCustomIsotopics_ErrorConditions"], [300, 2, 1, "", "TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics": [[300, 3, 1, "", "test_customDensityLogsAndErrors"], [300, 3, 1, "", "test_densitiesAppliedToNonCustomMaterials"], [300, 3, 1, "", "test_expandedNatural"], [300, 3, 1, "", "test_massFractionsAreApplied"], [300, 3, 1, "", "test_numberDensities"], [300, 3, 1, "", "test_numberDensitiesAnchor"], [300, 3, 1, "", "test_numberFractions"], [300, 3, 1, "", "test_unmodified"], [300, 3, 1, "", "test_unrepresentedAreOnlyNatural"], [300, 4, 1, "", "yamlBadBlocks"], [300, 4, 1, "", "yamlGoodBlocks"], [300, 4, 1, "", "yamlPreamble"], [300, 4, 1, "", "yamlString"], [300, 4, 1, "", "yamlStringWithError"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions": [[300, 3, 1, "", "test_densityMustBePositive"], [300, 3, 1, "", "test_nonConformantElementName"], [300, 3, 1, "", "test_numberDensitiesCannotSpecifyDensity"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion": [[300, 3, 1, "", "test_expandedNatural"], [300, 4, 1, "", "yamlString"]], "armi.reactor.blueprints.tests.test_gridBlueprints": [[301, 2, 1, "", "TestGridBPRoundTrip"], [301, 2, 1, "", "TestGridBlueprintsSection"], [301, 2, 1, "", "TestRZTGridBlueprint"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip": [[301, 3, 1, "", "test_contents"], [301, 3, 1, "", "test_roundTrip"], [301, 3, 1, "", "test_tinyMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection": [[301, 3, 1, "", "test_simpleRead"], [301, 3, 1, "", "test_simpleReadLatticeMap"], [301, 3, 1, "", "test_simpleReadNoLatticeMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint": [[301, 3, 1, "", "test_construct"], [301, 3, 1, "", "test_geomFile"]], "armi.reactor.blueprints.tests.test_materialModifications": [[302, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications": [[302, 4, 1, "", "b4cInput"], [302, 3, 1, "", "loadB4CAssembly"], [302, 3, 1, "", "loadUZrAssembly"], [302, 3, 1, "", "test_bothU235ZrWtFracModification"], [302, 3, 1, "", "test_checkByComponentMaterialInput"], [302, 3, 1, "", "test_filterMaterialInput"], [302, 3, 1, "", "test_invalidComponentModification"], [302, 3, 1, "", "test_invalidMatModName"], [302, 3, 1, "", "test_matModsUpTheMRO"], [302, 3, 1, "", "test_materialModificationLength"], [302, 3, 1, "", "test_noMaterialModifications"], [302, 3, 1, "", "test_theoreticalDensity"], [302, 3, 1, "", "test_u235_wt_frac_byComponent_modification1"], [302, 3, 1, "", "test_u235_wt_frac_byComponent_modification2"], [302, 3, 1, "", "test_u235_wt_frac_modification"], [302, 3, 1, "", "test_zrWtFracModification"], [302, 4, 1, "", "uZrInput"]], "armi.reactor.blueprints.tests.test_reactorBlueprints": [[303, 2, 1, "", "TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints": [[303, 3, 1, "", "test_construct"], [303, 3, 1, "", "test_excoreStructure"], [303, 3, 1, "", "test_materialDataSummary"], [303, 3, 1, "", "test_simpleRead"], [303, 3, 1, "", "test_spentFuelPool"]], "armi.reactor.components": [[304, 2, 1, "", "DerivedShape"], [304, 2, 1, "", "NullComponent"], [304, 2, 1, "", "PositiveOrNegativeVolumeComponent"], [304, 2, 1, "", "UnshapedComponent"], [304, 2, 1, "", "UnshapedVolumetricComponent"], [304, 2, 1, "", "ZeroMassComponent"], [305, 0, 0, "-", "basicShapes"], [306, 0, 0, "-", "complexShapes"], [307, 0, 0, "-", "component"], [308, 0, 0, "-", "componentParameters"], [304, 1, 1, "", "factory"], [309, 0, 0, "-", "volumetricShapes"]], "armi.reactor.components.DerivedShape": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 3, 1, "", "computeVolume"], [304, 3, 1, "", "getBoundingCircleOuterDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 3, 1, "", "getMaxVolume"], [304, 3, 1, "", "getVolume"], [304, 4, 1, "", "material"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.NullComponent": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 3, 1, "", "getBoundingCircleOuterDiameter"], [304, 3, 1, "", "getDimension"], [304, 4, 1, "", "material"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.PositiveOrNegativeVolumeComponent": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "material"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedComponent": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 3, 1, "", "fromComponent"], [304, 3, 1, "", "getBoundingCircleOuterDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "material"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedVolumetricComponent": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 3, 1, "", "getComponentArea"], [304, 3, 1, "", "getComponentVolume"], [304, 4, 1, "", "is3D"], [304, 4, 1, "", "material"], [304, 4, 1, "", "paramCollectionType"], [304, 3, 1, "", "setVolume"]], "armi.reactor.components.ZeroMassComponent": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 3, 1, "", "getNumberDensity"], [304, 4, 1, "", "material"], [304, 4, 1, "", "paramCollectionType"], [304, 3, 1, "", "setNumberDensity"]], "armi.reactor.components.basicShapes": [[305, 2, 1, "", "Circle"], [305, 2, 1, "", "Hexagon"], [305, 2, 1, "", "Rectangle"], [305, 2, 1, "", "SolidRectangle"], [305, 2, 1, "", "Square"], [305, 2, 1, "", "Triangle"]], "armi.reactor.components.basicShapes.Circle": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [305, 3, 1, "", "getBoundingCircleOuterDiameter"], [305, 3, 1, "", "getCircleInnerDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 4, 1, "", "is3D"], [305, 3, 1, "", "isEncapsulatedBy"], [305, 4, 1, "", "material"], [305, 4, 1, "", "pDefs"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Hexagon": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [305, 3, 1, "", "getBoundingCircleOuterDiameter"], [305, 3, 1, "", "getCircleInnerDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 3, 1, "", "getPerimeter"], [305, 3, 1, "", "getPitchData"], [305, 4, 1, "", "is3D"], [305, 4, 1, "", "material"], [305, 4, 1, "", "pDefs"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Rectangle": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [305, 3, 1, "", "getBoundingCircleOuterDiameter"], [305, 3, 1, "", "getCircleInnerDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 3, 1, "", "getPitchData"], [305, 4, 1, "", "is3D"], [305, 3, 1, "", "isLatticeComponent"], [305, 4, 1, "", "material"], [305, 4, 1, "", "pDefs"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.SolidRectangle": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [305, 3, 1, "", "getComponentArea"], [305, 4, 1, "", "is3D"], [305, 4, 1, "", "material"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Square": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 3, 1, "", "getBoundingCircleOuterDiameter"], [305, 3, 1, "", "getCircleInnerDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 3, 1, "", "getPitchData"], [305, 4, 1, "", "is3D"], [305, 4, 1, "", "material"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Triangle": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [305, 3, 1, "", "getComponentArea"], [305, 4, 1, "", "is3D"], [305, 4, 1, "", "material"], [305, 4, 1, "", "pDefs"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes": [[306, 2, 1, "", "Helix"], [306, 2, 1, "", "HexHoledCircle"], [306, 2, 1, "", "HoledHexagon"], [306, 2, 1, "", "HoledRectangle"], [306, 2, 1, "", "HoledSquare"]], "armi.reactor.components.complexShapes.Helix": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [306, 3, 1, "", "getBoundingCircleOuterDiameter"], [306, 3, 1, "", "getCircleInnerDiameter"], [306, 3, 1, "", "getComponentArea"], [306, 4, 1, "", "is3D"], [306, 4, 1, "", "material"], [306, 4, 1, "", "pDefs"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HexHoledCircle": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [306, 3, 1, "", "getCircleInnerDiameter"], [306, 3, 1, "", "getComponentArea"], [306, 4, 1, "", "material"], [306, 4, 1, "", "pDefs"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledHexagon": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [306, 3, 1, "", "getCircleInnerDiameter"], [306, 3, 1, "", "getComponentArea"], [306, 4, 1, "", "material"], [306, 4, 1, "", "pDefs"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledRectangle": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [306, 3, 1, "", "getCircleInnerDiameter"], [306, 3, 1, "", "getComponentArea"], [306, 4, 1, "", "material"], [306, 4, 1, "", "pDefs"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledSquare": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [306, 3, 1, "", "getCircleInnerDiameter"], [306, 3, 1, "", "getComponentArea"], [306, 4, 1, "", "material"], [306, 4, 1, "", "pDefs"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.component": [[307, 2, 1, "", "Component"], [307, 2, 1, "", "ComponentType"], [307, 2, 1, "", "ShapedComponent"], [307, 1, 1, "", "componentTypeIsValid"]], "armi.reactor.components.component.Component": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "adjustDensityForHeightExpansion"], [307, 3, 1, "", "adjustMassEnrichment"], [307, 3, 1, "", "applyMaterialMassFracsToNumberDensities"], [307, 3, 1, "", "backUp"], [307, 3, 1, "", "clearCache"], [307, 3, 1, "", "clearLinkedCache"], [307, 3, 1, "", "computeVolume"], [307, 3, 1, "", "containsSolidMaterial"], [307, 3, 1, "", "containsVoidMaterial"], [307, 3, 1, "", "density"], [307, 3, 1, "", "dimensionIsLinked"], [307, 3, 1, "", "finalizeLoadingFromDB"], [307, 5, 1, "", "gasPorosity"], [307, 3, 1, "", "getArea"], [307, 3, 1, "", "getBoundingCircleOuterDiameter"], [307, 3, 1, "", "getCircleInnerDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 3, 1, "", "getComponentVolume"], [307, 3, 1, "", "getDimension"], [307, 3, 1, "", "getDimensionNamesLinkedTo"], [307, 3, 1, "", "getEnrichment"], [307, 3, 1, "", "getFuelMass"], [307, 3, 1, "", "getHeightFactor"], [307, 3, 1, "", "getIntegratedMgFlux"], [307, 3, 1, "", "getLinkedComponents"], [307, 3, 1, "", "getLumpedFissionProductCollection"], [307, 3, 1, "", "getMass"], [307, 3, 1, "", "getMassEnrichment"], [307, 3, 1, "", "getMicroSuffix"], [307, 3, 1, "", "getNuclideNumberDensities"], [307, 3, 1, "", "getNuclides"], [307, 3, 1, "", "getNumberDensity"], [307, 3, 1, "", "getPitchData"], [307, 3, 1, "", "getProperties"], [307, 3, 1, "", "getThermalExpansionFactor"], [307, 3, 1, "", "getVolume"], [307, 4, 1, "", "is3D"], [307, 3, 1, "", "iterComponents"], [307, 5, 1, "", "liquidPorosity"], [307, 4, 1, "", "material"], [307, 3, 1, "", "mergeNuclidesInto"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"], [307, 3, 1, "", "printContents"], [307, 3, 1, "", "resolveLinkedDims"], [307, 3, 1, "", "restoreBackup"], [307, 3, 1, "", "setArea"], [307, 3, 1, "", "setDimension"], [307, 3, 1, "", "setDimensionReport"], [307, 3, 1, "", "setLink"], [307, 3, 1, "", "setLumpedFissionProducts"], [307, 3, 1, "", "setName"], [307, 3, 1, "", "setNumberDensities"], [307, 3, 1, "", "setNumberDensity"], [307, 3, 1, "", "setProperties"], [307, 3, 1, "", "setTemperature"], [307, 3, 1, "", "setVolume"], [307, 5, 1, "", "temperatureInC"], [307, 5, 1, "", "temperatureInK"], [307, 3, 1, "", "updateDims"], [307, 3, 1, "", "updateNumberDensities"]], "armi.reactor.components.component.ComponentType": [[307, 4, 1, "", "NON_DIMENSION_NAMES"], [307, 4, 1, "", "TYPES"]], "armi.reactor.components.component.ShapedComponent": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "material"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.componentParameters": [[308, 1, 1, "", "getCircleParameterDefinitions"], [308, 1, 1, "", "getComponentParameterDefinitions"], [308, 1, 1, "", "getCubeParameterDefinitions"], [308, 1, 1, "", "getHelixParameterDefinitions"], [308, 1, 1, "", "getHexHoledCircleParameterDefinitions"], [308, 1, 1, "", "getHexagonParameterDefinitions"], [308, 1, 1, "", "getHoledHexagonParameterDefinitions"], [308, 1, 1, "", "getHoledRectangleParameterDefinitions"], [308, 1, 1, "", "getRadialSegmentParameterDefinitions"], [308, 1, 1, "", "getRectangleParameterDefinitions"], [308, 1, 1, "", "getTriangleParameterDefinitions"], [308, 1, 1, "", "getUnshapedParameterDefinitions"]], "armi.reactor.components.volumetricShapes": [[309, 2, 1, "", "Cube"], [309, 2, 1, "", "DifferentialRadialSegment"], [309, 2, 1, "", "RadialSegment"], [309, 2, 1, "", "Sphere"]], "armi.reactor.components.volumetricShapes.Cube": [[309, 4, 1, "", "DIMENSION_NAMES"], [309, 4, 1, "", "INIT_SIGNATURE"], [309, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [309, 3, 1, "", "getComponentArea"], [309, 3, 1, "", "getComponentVolume"], [309, 4, 1, "", "is3D"], [309, 4, 1, "", "material"], [309, 4, 1, "", "pDefs"], [309, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.DifferentialRadialSegment": [[309, 4, 1, "", "DIMENSION_NAMES"], [309, 4, 1, "", "INIT_SIGNATURE"], [309, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [309, 3, 1, "", "getComponentArea"], [309, 3, 1, "", "getComponentVolume"], [309, 4, 1, "", "is3D"], [309, 4, 1, "", "material"], [309, 4, 1, "", "paramCollectionType"], [309, 3, 1, "", "updateDims"]], "armi.reactor.components.volumetricShapes.RadialSegment": [[309, 4, 1, "", "DIMENSION_NAMES"], [309, 4, 1, "", "INIT_SIGNATURE"], [309, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [309, 3, 1, "", "getBoundingCircleOuterDiameter"], [309, 3, 1, "", "getComponentArea"], [309, 3, 1, "", "getComponentVolume"], [309, 4, 1, "", "is3D"], [309, 4, 1, "", "material"], [309, 4, 1, "", "pDefs"], [309, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.Sphere": [[309, 4, 1, "", "DIMENSION_NAMES"], [309, 4, 1, "", "INIT_SIGNATURE"], [309, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [309, 3, 1, "", "getBoundingCircleOuterDiameter"], [309, 3, 1, "", "getComponentArea"], [309, 3, 1, "", "getComponentVolume"], [309, 4, 1, "", "is3D"], [309, 4, 1, "", "material"], [309, 4, 1, "", "pDefs"], [309, 4, 1, "", "paramCollectionType"]], "armi.reactor.composites": [[310, 2, 1, "", "ArmiObject"], [310, 2, 1, "", "Composite"], [310, 2, 1, "", "CompositeModelType"], [310, 2, 1, "", "FlagSerializer"], [310, 2, 1, "", "StateRetainer"], [310, 1, 1, "", "gatherMaterialsByVolume"], [310, 1, 1, "", "getDominantMaterial"], [310, 1, 1, "", "getReactionRateDict"]], "armi.reactor.composites.ArmiObject": [[310, 3, 1, "", "addMass"], [310, 3, 1, "", "addMasses"], [310, 3, 1, "", "adjustMassEnrichment"], [310, 3, 1, "", "adjustMassFrac"], [310, 3, 1, "", "calcAvgParam"], [310, 3, 1, "", "calcTotalParam"], [310, 3, 1, "", "changeNDensByFactor"], [310, 3, 1, "", "clearCache"], [310, 3, 1, "", "clearNumberDensities"], [310, 3, 1, "", "constituentReport"], [310, 3, 1, "", "containsAtLeastOneChildWithFlags"], [310, 3, 1, "", "containsHeavyMetal"], [310, 3, 1, "", "containsOnlyChildrenWithFlags"], [310, 3, 1, "", "copyParamsFrom"], [310, 3, 1, "", "copyParamsToChildren"], [310, 3, 1, "", "density"], [310, 3, 1, "", "doChildrenHaveFlags"], [310, 3, 1, "", "duplicate"], [310, 3, 1, "", "expandAllElementalsToIsotopics"], [310, 3, 1, "", "expandElementalToIsotopics"], [310, 3, 1, "", "getAncestor"], [310, 3, 1, "", "getAncestorAndDistance"], [310, 3, 1, "", "getAncestorWithFlags"], [310, 3, 1, "", "getArea"], [310, 3, 1, "", "getAtomicWeight"], [310, 3, 1, "", "getAverageTempInC"], [310, 3, 1, "", "getBoundingIndices"], [310, 3, 1, "", "getChildParamValues"], [310, 3, 1, "", "getChildren"], [310, 3, 1, "", "getChildrenWithFlags"], [310, 3, 1, "", "getChildrenWithNuclides"], [310, 3, 1, "", "getComponent"], [310, 3, 1, "", "getComponentByName"], [310, 3, 1, "", "getComponentNames"], [310, 3, 1, "", "getComponents"], [310, 3, 1, "", "getComponentsOfMaterial"], [310, 3, 1, "", "getComponentsOfShape"], [310, 3, 1, "", "getDominantMaterial"], [310, 3, 1, "", "getFPMass"], [310, 3, 1, "", "getFissileMass"], [310, 3, 1, "", "getFissileMassEnrich"], [310, 3, 1, "", "getFuelMass"], [310, 3, 1, "", "getHMDens"], [310, 3, 1, "", "getHMMass"], [310, 3, 1, "", "getHMMoles"], [310, 3, 1, "", "getIntegratedMgFlux"], [310, 3, 1, "", "getLumpedFissionProductCollection"], [310, 3, 1, "", "getMass"], [310, 3, 1, "", "getMassFrac"], [310, 3, 1, "", "getMassFracs"], [310, 3, 1, "", "getMasses"], [310, 3, 1, "", "getMaxArea"], [310, 3, 1, "", "getMaxParam"], [310, 3, 1, "", "getMgFlux"], [310, 3, 1, "", "getMicroSuffix"], [310, 3, 1, "", "getMinParam"], [310, 3, 1, "", "getName"], [310, 3, 1, "", "getNuclideNumberDensities"], [310, 3, 1, "", "getNuclides"], [310, 3, 1, "", "getNumComponents"], [310, 3, 1, "", "getNumberDensities"], [310, 3, 1, "", "getNumberDensity"], [310, 3, 1, "", "getNumberOfAtoms"], [310, 3, 1, "", "getParamNames"], [310, 3, 1, "", "getParameterCollection"], [310, 3, 1, "", "getSymmetryFactor"], [310, 3, 1, "", "getTotalNDens"], [310, 3, 1, "", "getType"], [310, 3, 1, "", "getUraniumNumEnrich"], [310, 3, 1, "", "getVolume"], [310, 3, 1, "", "getVolumeFraction"], [310, 3, 1, "", "getVolumeFractions"], [310, 3, 1, "", "hasComponents"], [310, 3, 1, "", "hasFlags"], [310, 3, 1, "", "isFuel"], [310, 3, 1, "", "iterComponents"], [310, 3, 1, "", "nameContains"], [310, 4, 1, "", "pDefs"], [310, 4, 1, "", "paramCollectionType"], [310, 3, 1, "", "removeMass"], [310, 3, 1, "", "resolveLinkedDims"], [310, 3, 1, "", "setChildrenLumpedFissionProducts"], [310, 3, 1, "", "setComponentDimensionsReport"], [310, 3, 1, "", "setLumpedFissionProducts"], [310, 3, 1, "", "setMass"], [310, 3, 1, "", "setMassFrac"], [310, 3, 1, "", "setMassFracs"], [310, 3, 1, "", "setMasses"], [310, 3, 1, "", "setName"], [310, 3, 1, "", "setNumberDensities"], [310, 3, 1, "", "setNumberDensity"], [310, 3, 1, "", "setType"], [310, 3, 1, "", "updateNumberDensities"], [310, 3, 1, "", "updateParamsFrom"]], "armi.reactor.composites.Composite": [[310, 3, 1, "", "add"], [310, 3, 1, "", "append"], [310, 3, 1, "", "backUp"], [310, 3, 1, "", "extend"], [310, 3, 1, "", "getBoundingCircleOuterDiameter"], [310, 3, 1, "", "getChildren"], [310, 3, 1, "", "getChildrenOfType"], [310, 3, 1, "", "getChildrenWithFlags"], [310, 3, 1, "", "getComponents"], [310, 3, 1, "", "getIntegratedMgFlux"], [310, 3, 1, "", "getLumpedFissionProductCollection"], [310, 3, 1, "", "getLumpedFissionProductsIfNecessary"], [310, 3, 1, "", "getReactionRates"], [310, 3, 1, "", "index"], [310, 3, 1, "", "insert"], [310, 3, 1, "", "iterComponents"], [310, 3, 1, "", "moveTo"], [310, 4, 1, "", "paramCollectionType"], [310, 3, 1, "", "printContents"], [310, 3, 1, "", "remove"], [310, 3, 1, "", "removeAll"], [310, 3, 1, "", "requiresLumpedFissionProducts"], [310, 3, 1, "", "restoreBackup"], [310, 3, 1, "", "retainState"], [310, 3, 1, "", "setChildren"], [310, 3, 1, "", "sort"], [310, 3, 1, "", "syncMpiState"]], "armi.reactor.composites.CompositeModelType": [[310, 4, 1, "", "TYPES"]], "armi.reactor.composites.FlagSerializer": [[310, 3, 1, "", "pack"], [310, 3, 1, "", "unpack"], [310, 4, 1, "", "version"]], "armi.reactor.converters": [[312, 0, 0, "-", "axialExpansionChanger"], [316, 0, 0, "-", "blockConverters"], [317, 0, 0, "-", "geometryConverters"], [318, 0, 0, "-", "meshConverters"], [319, 0, 0, "-", "parameterSweeps"], [321, 0, 0, "-", "pinTypeBlockConverters"], [322, 0, 0, "-", "tests"], [329, 0, 0, "-", "uniformMesh"]], "armi.reactor.converters.axialExpansionChanger": [[313, 0, 0, "-", "assemblyAxialLinkage"], [314, 0, 0, "-", "axialExpansionChanger"], [315, 0, 0, "-", "expansionData"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage": [[313, 2, 1, "", "AssemblyAxialLinkage"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger": [[314, 2, 1, "", "AxialExpansionChanger"], [314, 1, 1, "", "getDefaultReferenceAssem"], [314, 1, 1, "", "makeAssemsAbleToSnapToUniformMesh"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger": [[314, 3, 1, "", "applyColdHeightMassIncrease"], [314, 3, 1, "", "axiallyExpandAssembly"], [314, 3, 1, "", "expandColdDimsToHot"], [314, 3, 1, "", "manageCoreMesh"], [314, 3, 1, "", "performPrescribedAxialExpansion"], [314, 3, 1, "", "performThermalAxialExpansion"], [314, 3, 1, "", "reset"], [314, 3, 1, "", "setAssembly"]], "armi.reactor.converters.axialExpansionChanger.expansionData": [[315, 2, 1, "", "ExpansionData"], [315, 1, 1, "", "getSolidComponents"]], "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData": [[315, 3, 1, "", "computeThermalExpansionFactors"], [315, 3, 1, "", "determineTargetComponent"], [315, 3, 1, "", "getExpansionFactor"], [315, 3, 1, "", "isTargetComponent"], [315, 3, 1, "", "setExpansionFactors"], [315, 3, 1, "", "updateComponentTemp"], [315, 3, 1, "", "updateComponentTempsBy1DTempField"]], "armi.reactor.converters.blockConverters": [[316, 2, 1, "", "BlockAvgToCylConverter"], [316, 2, 1, "", "BlockConverter"], [316, 2, 1, "", "ComponentMerger"], [316, 2, 1, "", "HexComponentsToCylConverter"], [316, 2, 1, "", "MultipleComponentMerger"], [316, 1, 1, "", "getOuterDiamFromIDAndArea"], [316, 1, 1, "", "radiiFromHexPitches"], [316, 1, 1, "", "radiiFromHexSides"], [316, 1, 1, "", "radiiFromRingOfRods"]], "armi.reactor.converters.blockConverters.BlockAvgToCylConverter": [[316, 3, 1, "", "convert"], [316, 3, 1, "", "plotConvertedBlock"]], "armi.reactor.converters.blockConverters.BlockConverter": [[316, 3, 1, "", "convert"], [316, 3, 1, "", "dissolveComponentIntoComponent"], [316, 3, 1, "", "restablishLinks"]], "armi.reactor.converters.blockConverters.ComponentMerger": [[316, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.HexComponentsToCylConverter": [[316, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.MultipleComponentMerger": [[316, 3, 1, "", "convert"]], "armi.reactor.converters.geometryConverters": [[317, 2, 1, "", "EdgeAssemblyChanger"], [317, 2, 1, "", "FuelAssemNumModifier"], [317, 2, 1, "", "GeometryChanger"], [317, 2, 1, "", "GeometryConverter"], [317, 2, 1, "", "HexToRZConverter"], [317, 2, 1, "", "HexToRZThetaConverter"], [317, 2, 1, "", "ThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger": [[317, 3, 1, "", "addEdgeAssemblies"], [317, 3, 1, "", "removeEdgeAssemblies"], [317, 3, 1, "", "scaleParamsRelatedToSymmetry"]], "armi.reactor.converters.geometryConverters.FuelAssemNumModifier": [[317, 3, 1, "", "addRing"], [317, 3, 1, "", "convert"], [317, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.GeometryChanger": [[317, 3, 1, "", "convert"], [317, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.HexToRZThetaConverter": [[317, 3, 1, "", "convert"], [317, 3, 1, "", "createHomogenizedRZTBlock"], [317, 3, 1, "", "plotConvertedReactor"], [317, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger": [[317, 4, 1, "", "EXPECTED_INPUT_SYMMETRY"], [317, 3, 1, "", "convert"], [317, 3, 1, "", "restorePreviousGeometry"]], "armi.reactor.converters.meshConverters": [[318, 2, 1, "", "MeshConverter"], [318, 2, 1, "", "RZThetaReactorMeshConverter"], [318, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialBins"], [318, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"], [318, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialFlags"], [318, 1, 1, "", "checkLastValueInList"], [318, 1, 1, "", "checkListBounds"], [318, 1, 1, "", "generateBins"]], "armi.reactor.converters.meshConverters.MeshConverter": [[318, 3, 1, "", "generateMesh"], [318, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter": [[318, 3, 1, "", "generateMesh"], [318, 3, 1, "", "setAxialMesh"], [318, 3, 1, "", "setRingsToConvert"], [318, 3, 1, "", "setThetaMesh"], [318, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.parameterSweeps": [[320, 0, 0, "-", "generalParameterSweepConverters"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters": [[320, 2, 1, "", "CustomModifier"], [320, 2, 1, "", "NeutronicConvergenceModifier"], [320, 2, 1, "", "ParameterSweepConverter"], [320, 2, 1, "", "SettingsModifier"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier": [[320, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier": [[320, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter": [[320, 4, 1, "", "PRIORITY"], [320, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier": [[320, 3, 1, "", "convert"]], "armi.reactor.converters.pinTypeBlockConverters": [[321, 1, 1, "", "adjustCladThicknessByID"], [321, 1, 1, "", "adjustCladThicknessByOD"], [321, 1, 1, "", "adjustSmearDensity"]], "armi.reactor.converters.tests": [[323, 0, 0, "-", "test_axialExpansionChanger"], [324, 0, 0, "-", "test_blockConverter"], [325, 0, 0, "-", "test_geometryConverters"], [326, 0, 0, "-", "test_meshConverters"], [327, 0, 0, "-", "test_pinTypeBlockConverters"], [328, 0, 0, "-", "test_uniformMesh"]], "armi.reactor.converters.tests.test_axialExpansionChanger": [[323, 2, 1, "", "AxialExpansionTestBase"], [323, 2, 1, "", "FakeMat"], [323, 2, 1, "", "FakeMatException"], [323, 2, 1, "", "Temperature"], [323, 2, 1, "", "TestAxialExpansionHeight"], [323, 2, 1, "", "TestConservation"], [323, 2, 1, "", "TestDetermineTargetComponent"], [323, 2, 1, "", "TestExceptions"], [323, 2, 1, "", "TestGetSolidComponents"], [323, 2, 1, "", "TestInputHeightsConsideredHot"], [323, 2, 1, "", "TestLinkage"], [323, 2, 1, "", "TestManageCoreMesh"], [323, 1, 1, "", "buildTestAssemblyWithFakeMaterial"], [323, 1, 1, "", "checkColdBlockHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase": [[323, 4, 1, "", "Steel_Component_Lst"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat": [[323, 3, 1, "", "linearExpansionPercent"], [323, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException": [[323, 3, 1, "", "linearExpansionPercent"], [323, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight": [[323, 3, 1, "", "test_AssemblyAxialExpansionHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation": [[323, 3, 1, "", "complexConservationTest"], [323, 3, 1, "", "expandAssemForMassConservationTest"], [323, 3, 1, "", "test_computeThermalExpansionFactors"], [323, 3, 1, "", "test_noMovementACLP"], [323, 3, 1, "", "test_prescribedExpansionContractionConservation"], [323, 3, 1, "", "test_reset"], [323, 3, 1, "", "test_targetComponentMassConservation"], [323, 3, 1, "", "test_thermalExpansionContractionConservation_complex"], [323, 3, 1, "", "test_thermalExpansionContractionConservation_simple"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent": [[323, 3, 1, "", "test_determineTargetComponent"], [323, 3, 1, "", "test_determineTargetComponentBlockWithMultipleFlags"], [323, 3, 1, "", "test_manuallySetTargetComponent"], [323, 3, 1, "", "test_specifyTargetComponent_NotFound"], [323, 3, 1, "", "test_specifyTargetComponent_singleSolid"], [323, 3, 1, "", "test_specifyTargetComponet_MultipleFound"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions": [[323, 3, 1, "", "test_AssemblyAxialExpansionException"], [323, 3, 1, "", "test_determineLinked"], [323, 3, 1, "", "test_getLinkedComponents"], [323, 3, 1, "", "test_isFuelLocked"], [323, 3, 1, "", "test_isTopDummyBlockPresent"], [323, 3, 1, "", "test_setExpansionFactors"], [323, 3, 1, "", "test_updateComponentTempsBy1DTempFieldRuntimeError"], [323, 3, 1, "", "test_updateComponentTempsBy1DTempFieldValueError"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents": [[323, 3, 1, "", "test_getSolidComponents"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot": [[323, 3, 1, "", "checkColdHeightBlockMass"], [323, 3, 1, "", "test_coldAssemblyExpansion"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage": [[323, 3, 1, "", "runTest"], [323, 3, 1, "", "test_AnnularHexOverlappingThickAnnularHex"], [323, 3, 1, "", "test_annularPinNotOverlappingWithAnnulus"], [323, 3, 1, "", "test_annularPinOverlappingWithAnnuls"], [323, 3, 1, "", "test_differentMultNotOverlapping"], [323, 3, 1, "", "test_liquids"], [323, 3, 1, "", "test_overlappingSolidPins"], [323, 3, 1, "", "test_solidPinNotOverlappingAnnulus"], [323, 3, 1, "", "test_solidPinOverlappingWithAnnulus"], [323, 3, 1, "", "test_thinAnnularPinOverlappingWithThickAnnulus"], [323, 3, 1, "", "test_unshapedComponentAndCircle"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh": [[323, 3, 1, "", "test_manageCoreMesh"]], "armi.reactor.converters.tests.test_blockConverter": [[324, 2, 1, "", "TestBlockConverter"], [324, 2, 1, "", "TestToCircles"], [324, 1, 1, "", "buildControlBlockWithLinkedNegativeAreaComponent"], [324, 1, 1, "", "buildSimpleFuelBlockNegativeArea"]], "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter": [[324, 3, 1, "", "test_build_NthRing"], [324, 3, 1, "", "test_convert"], [324, 3, 1, "", "test_convertCartesianLatticeWithFuelDriver"], [324, 3, 1, "", "test_convertHexWithFuelDriver"], [324, 3, 1, "", "test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"], [324, 3, 1, "", "test_dissolveIntoNegativeArea"], [324, 3, 1, "", "test_dissolveIntoZeroArea"], [324, 3, 1, "", "test_dissolveLinerIntoClad"], [324, 3, 1, "", "test_dissolveMultiple"], [324, 3, 1, "", "test_dissolveNegativeArea"], [324, 3, 1, "", "test_dissolveWireIntoCoolant"], [324, 3, 1, "", "test_dissolveZeroArea"]], "armi.reactor.converters.tests.test_blockConverter.TestToCircles": [[324, 3, 1, "", "test_fromHex"], [324, 3, 1, "", "test_fromRingOfRods"]], "armi.reactor.converters.tests.test_geometryConverters": [[325, 2, 1, "", "TestEdgeAssemblyChanger"], [325, 2, 1, "", "TestGeometryConverters"], [325, 2, 1, "", "TestHexToRZConverter"], [325, 2, 1, "", "TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger": [[325, 3, 1, "", "test_edgeAssemblies"]], "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters": [[325, 3, 1, "", "test_addRing"], [325, 3, 1, "", "test_getAssembliesInSector"], [325, 3, 1, "", "test_setNumberOfFuelAssems"]], "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter": [[325, 3, 1, "", "test_convert"], [325, 3, 1, "", "test_createHomogenizedRZTBlock"]], "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger": [[325, 3, 1, "", "test_growToFullCoreFromThirdCore"], [325, 3, 1, "", "test_initNewFullReactor"], [325, 3, 1, "", "test_skipGrowToFullCoreWhenAlreadyFullCore"]], "armi.reactor.converters.tests.test_meshConverters": [[326, 2, 1, "", "TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter": [[326, 3, 1, "", "test_meshByRingCompositionAxialBinsLargeCore"], [326, 3, 1, "", "test_meshByRingCompositionAxialBinsSmallCore"], [326, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesLargeCore"], [326, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesSmallCore"], [326, 3, 1, "", "test_meshByRingCompositionAxialFlagsLargeCore"], [326, 3, 1, "", "test_meshByRingCompositionAxialFlagsSmallCore"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters": [[327, 2, 1, "", "MassConservationTests"], [327, 2, 1, "", "TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests": [[327, 3, 1, "", "test_adjustSmearDensity"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters": [[327, 3, 1, "", "test_adjustCladThicknessByID"], [327, 3, 1, "", "test_adjustCladThicknessByOD"]], "armi.reactor.converters.tests.test_uniformMesh": [[328, 2, 1, "", "DummyFluxOptions"], [328, 2, 1, "", "TestAssemblyUniformMesh"], [328, 2, 1, "", "TestCalcReationRates"], [328, 2, 1, "", "TestConverterFactory"], [328, 2, 1, "", "TestGammaUniformMesh"], [328, 2, 1, "", "TestParamConversion"], [328, 2, 1, "", "TestUniformMesh"], [328, 2, 1, "", "TestUniformMeshComponents"], [328, 2, 1, "", "TestUniformMeshGenerator"], [328, 2, 1, "", "TestUniformMeshNonUniformAssemFlags"], [328, 1, 1, "", "applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh": [[328, 3, 1, "", "test_clearAssemblyState"], [328, 3, 1, "", "test_makeAssemUniformMeshParamMappingSameMesh"], [328, 3, 1, "", "test_makeAssemWithUniformMesh"], [328, 3, 1, "", "test_makeAssemWithUniformMeshSubmesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestCalcReationRates": [[328, 3, 1, "", "test_calcReactionRatesBlockList"]], "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory": [[328, 3, 1, "", "test_converterFactory"]], "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh": [[328, 3, 1, "", "test_applyStateToOriginal"], [328, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion": [[328, 3, 1, "", "test_setStateFromOverlaps"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh": [[328, 3, 1, "", "test_applyStateToOriginal"], [328, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents": [[328, 3, 1, "", "test_blueprintCopy"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator": [[328, 3, 1, "", "test_computeAverageAxialMesh"], [328, 3, 1, "", "test_filterMesh"], [328, 3, 1, "", "test_filteredTopAndBottom"], [328, 3, 1, "", "test_generateCommonMesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags": [[328, 3, 1, "", "test_reactorConversion"]], "armi.reactor.converters.uniformMesh": [[329, 2, 1, "", "GammaUniformMeshConverter"], [329, 2, 1, "", "NeutronicsUniformMeshConverter"], [329, 2, 1, "", "ParamMapper"], [329, 2, 1, "", "UniformMeshGenerator"], [329, 2, 1, "", "UniformMeshGeometryConverter"], [329, 1, 1, "", "converterFactory"], [329, 1, 1, "", "setNumberDensitiesFromOverlaps"]], "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter": [[329, 4, 1, "", "blockParamMappingCategories"], [329, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter": [[329, 4, 1, "", "blockParamMappingCategories"], [329, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.ParamMapper": [[329, 3, 1, "", "paramGetter"], [329, 3, 1, "", "paramSetter"]], "armi.reactor.converters.uniformMesh.UniformMeshGenerator": [[329, 3, 1, "", "generateCommonMesh"]], "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter": [[329, 3, 1, "", "applyStateToOriginal"], [329, 4, 1, "", "blockParamMappingCategories"], [329, 3, 1, "", "clearStateOnAssemblies"], [329, 3, 1, "", "convert"], [329, 3, 1, "", "initNewReactor"], [329, 3, 1, "", "makeAssemWithUniformMesh"], [329, 3, 1, "", "plotConvertedReactor"], [329, 4, 1, "", "reactorParamMappingCategories"], [329, 3, 1, "", "reset"], [329, 3, 1, "", "setAssemblyStateFromOverlaps"], [329, 3, 1, "", "updateReactionRates"]], "armi.reactor.cores": [[330, 2, 1, "", "Core"]], "armi.reactor.cores.Core": [[330, 3, 1, "", "add"], [330, 3, 1, "", "addMoreNodes"], [330, 3, 1, "", "buildCircularRingDictionary"], [330, 3, 1, "", "buildManualZones"], [330, 3, 1, "", "calcBlockMaxes"], [330, 3, 1, "", "countBlocksWithFlags"], [330, 3, 1, "", "countFuelAxialBlocks"], [330, 3, 1, "", "createAssemblyOfType"], [330, 3, 1, "", "createFreshFeed"], [330, 3, 1, "", "findAllAxialMeshPoints"], [330, 3, 1, "", "findAllAziMeshPoints"], [330, 3, 1, "", "findAllMeshPoints"], [330, 3, 1, "", "findAllRadMeshPoints"], [330, 3, 1, "", "findAxialMeshIndexOf"], [330, 3, 1, "", "findNeighbors"], [330, 3, 1, "", "genAssembliesAddedThisCycle"], [330, 3, 1, "", "genBlocksByLocName"], [330, 5, 1, "", "geomType"], [330, 3, 1, "", "getAllXsSuffixes"], [330, 3, 1, "", "getAssemblies"], [330, 3, 1, "", "getAssembliesInCircularRing"], [330, 3, 1, "", "getAssembliesInRing"], [330, 3, 1, "", "getAssembliesInSquareOrHexRing"], [330, 3, 1, "", "getAssembliesOfType"], [330, 3, 1, "", "getAssembliesOnSymmetryLine"], [330, 3, 1, "", "getAssembly"], [330, 3, 1, "", "getAssemblyByName"], [330, 3, 1, "", "getAssemblyPitch"], [330, 3, 1, "", "getAssemblyWithAssemNum"], [330, 3, 1, "", "getAssemblyWithStringLocation"], [330, 3, 1, "", "getAvgTemp"], [330, 3, 1, "", "getBlockByName"], [330, 3, 1, "", "getBlocks"], [330, 3, 1, "", "getBlocksByIndices"], [330, 3, 1, "", "getCoreRadius"], [330, 3, 1, "", "getFirstAssembly"], [330, 3, 1, "", "getFirstBlock"], [330, 3, 1, "", "getFirstFuelBlockAxialNode"], [330, 3, 1, "", "getFluxVector"], [330, 3, 1, "", "getFuelBottomHeight"], [330, 3, 1, "", "getLocationContents"], [330, 3, 1, "", "getMaxAssembliesInHexRing"], [330, 3, 1, "", "getMaxBlockParam"], [330, 3, 1, "", "getMaxNumPins"], [330, 3, 1, "", "getMinimumPercentFluxInFuel"], [330, 3, 1, "", "getNozzleTypes"], [330, 3, 1, "", "getNuclideCategories"], [330, 3, 1, "", "getNumAssembliesWithAllRingsFilledOut"], [330, 3, 1, "", "getNumEnergyGroups"], [330, 3, 1, "", "getNumHexRings"], [330, 3, 1, "", "getNumRings"], [330, 3, 1, "", "getScalarEvolution"], [330, 3, 1, "", "getTotalBlockParam"], [330, 3, 1, "", "growToFullCore"], [330, 5, 1, "", "isFullCore"], [330, 5, 1, "", "lib"], [330, 3, 1, "", "locateAllAssemblies"], [330, 3, 1, "", "makeLocationLookup"], [330, 3, 1, "", "normalizeInternalBookeeping"], [330, 3, 1, "", "normalizeNames"], [330, 4, 1, "", "pDefs"], [330, 4, 1, "", "paramCollectionType"], [330, 5, 1, "", "powerMultiplier"], [330, 3, 1, "", "processLoading"], [330, 5, 1, "", "r"], [330, 5, 1, "", "refAssem"], [330, 3, 1, "", "regenAssemblyLists"], [330, 3, 1, "", "removeAssembliesInRing"], [330, 3, 1, "", "removeAssembly"], [330, 3, 1, "", "saveAllFlux"], [330, 3, 1, "", "setBlockMassParams"], [330, 3, 1, "", "setMoveList"], [330, 3, 1, "", "setOptionsFromCs"], [330, 3, 1, "", "setPitchUniform"], [330, 3, 1, "", "setPowerFromDensity"], [330, 3, 1, "", "setPowerIfNecessary"], [330, 3, 1, "", "sortAssemsByRing"], [330, 3, 1, "", "summarizeNuclideCategories"], [330, 3, 1, "", "summarizeReactorStats"], [330, 5, 1, "", "symmetry"], [330, 3, 1, "", "updateAxialMesh"]], "armi.reactor.excoreStructure": [[331, 2, 1, "", "ExcoreCollection"], [331, 2, 1, "", "ExcoreStructure"]], "armi.reactor.excoreStructure.ExcoreStructure": [[331, 3, 1, "", "add"], [331, 4, 1, "", "paramCollectionType"], [331, 5, 1, "", "r"]], "armi.reactor.flags": [[332, 2, 1, "", "Flags"], [332, 7, 1, "", "InvalidFlagsError"]], "armi.reactor.flags.Flags": [[332, 4, 1, "", "A"], [332, 4, 1, "", "ACLP"], [332, 4, 1, "", "ANNULAR"], [332, 4, 1, "", "AXIAL"], [332, 4, 1, "", "B"], [332, 4, 1, "", "BATCHMASSADDITION"], [332, 4, 1, "", "BLANKET"], [332, 4, 1, "", "BOND"], [332, 4, 1, "", "BOOSTER"], [332, 4, 1, "", "C"], [332, 4, 1, "", "CLAD"], [332, 4, 1, "", "CONTROL"], [332, 4, 1, "", "COOLANT"], [332, 4, 1, "", "CORE_BARREL"], [332, 4, 1, "", "D"], [332, 4, 1, "", "DEPLETABLE"], [332, 4, 1, "", "DRIVER"], [332, 4, 1, "", "DSPACERINSIDE"], [332, 4, 1, "", "DUCT"], [332, 4, 1, "", "DUMMY"], [332, 4, 1, "", "E"], [332, 4, 1, "", "FEED"], [332, 4, 1, "", "FISSION_CHAMBER"], [332, 4, 1, "", "FUEL"], [332, 4, 1, "", "GAP"], [332, 4, 1, "", "GRID_PLATE"], [332, 4, 1, "", "GUIDE_TUBE"], [332, 4, 1, "", "HANDLING_SOCKET"], [332, 4, 1, "", "HIGH"], [332, 4, 1, "", "IGNITER"], [332, 4, 1, "", "INLET_NOZZLE"], [332, 4, 1, "", "INNER"], [332, 4, 1, "", "INTERCOOLANT"], [332, 4, 1, "", "INTERDUCTCOOLANT"], [332, 4, 1, "", "LINER"], [332, 4, 1, "", "LOAD_PAD"], [332, 4, 1, "", "LOW"], [332, 4, 1, "", "LOWER"], [332, 4, 1, "", "MATERIAL"], [332, 4, 1, "", "MEDIUM"], [332, 4, 1, "", "MIDDLE"], [332, 4, 1, "", "MODERATOR"], [332, 4, 1, "", "MOVEABLE"], [332, 4, 1, "", "MOX"], [332, 4, 1, "", "OUTER"], [332, 4, 1, "", "PIN"], [332, 4, 1, "", "PLENUM"], [332, 4, 1, "", "POISON"], [332, 4, 1, "", "PRIMARY"], [332, 4, 1, "", "RADIAL"], [332, 4, 1, "", "REFLECTOR"], [332, 4, 1, "", "SECONDARY"], [332, 4, 1, "", "SHIELD"], [332, 4, 1, "", "SHIELD_BLOCK"], [332, 4, 1, "", "SHUTDOWN"], [332, 4, 1, "", "SKID"], [332, 4, 1, "", "SLUG"], [332, 4, 1, "", "STARTER"], [332, 4, 1, "", "STRUCTURE"], [332, 4, 1, "", "TARGET"], [332, 4, 1, "", "TERTIARY"], [332, 4, 1, "", "TEST"], [332, 4, 1, "", "ULTIMATE"], [332, 4, 1, "", "UPPER"], [332, 4, 1, "", "VOID"], [332, 4, 1, "", "WIRE"], [332, 3, 1, "", "fromString"], [332, 3, 1, "", "fromStringIgnoreErrors"], [332, 3, 1, "", "toString"]], "armi.reactor.geometry": [[333, 2, 1, "", "BoundaryType"], [333, 2, 1, "", "DomainType"], [333, 2, 1, "", "GeomType"], [333, 2, 1, "", "SymmetryType"], [333, 1, 1, "", "checkValidGeomSymmetryCombo"]], "armi.reactor.geometry.BoundaryType": [[333, 4, 1, "", "NO_SYMMETRY"], [333, 4, 1, "", "PERIODIC"], [333, 4, 1, "", "REFLECTIVE"], [333, 3, 1, "", "fromAny"], [333, 3, 1, "", "fromStr"], [333, 3, 1, "", "hasSymmetry"], [333, 5, 1, "", "label"]], "armi.reactor.geometry.DomainType": [[333, 4, 1, "", "EIGHTH_CORE"], [333, 4, 1, "", "FULL_CORE"], [333, 4, 1, "", "NULL"], [333, 4, 1, "", "QUARTER_CORE"], [333, 4, 1, "", "SIXTEENTH_CORE"], [333, 4, 1, "", "THIRD_CORE"], [333, 3, 1, "", "fromAny"], [333, 3, 1, "", "fromStr"], [333, 5, 1, "", "label"], [333, 3, 1, "", "symmetryFactor"]], "armi.reactor.geometry.GeomType": [[333, 4, 1, "", "CARTESIAN"], [333, 4, 1, "", "HEX"], [333, 4, 1, "", "RZ"], [333, 4, 1, "", "RZT"], [333, 3, 1, "", "fromAny"], [333, 3, 1, "", "fromStr"], [333, 5, 1, "", "label"]], "armi.reactor.geometry.SymmetryType": [[333, 4, 1, "", "VALID_SYMMETRY"], [333, 3, 1, "", "checkValidSymmetry"], [333, 3, 1, "", "createValidSymmetryStrings"], [333, 3, 1, "", "fromAny"], [333, 3, 1, "", "fromStr"], [333, 3, 1, "", "symmetryFactor"]], "armi.reactor.grids": [[335, 0, 0, "-", "axial"], [336, 0, 0, "-", "cartesian"], [337, 0, 0, "-", "constants"], [338, 0, 0, "-", "grid"], [339, 0, 0, "-", "hexagonal"], [340, 0, 0, "-", "locations"], [334, 1, 1, "", "locatorLabelToIndices"], [341, 0, 0, "-", "structuredGrid"], [342, 0, 0, "-", "thetarz"]], "armi.reactor.grids.axial": [[335, 2, 1, "", "AxialGrid"]], "armi.reactor.grids.axial.AxialGrid": [[335, 4, 1, "", "armiObject"], [335, 3, 1, "", "fromNCells"], [335, 3, 1, "", "getIndicesFromRingAndPos"], [335, 3, 1, "", "getMinimumRings"], [335, 3, 1, "", "getPositionsInRing"], [335, 3, 1, "", "getSymmetricEquivalents"], [335, 3, 1, "", "locatorInDomain"], [335, 3, 1, "", "overlapsWhichSymmetryLine"], [335, 5, 1, "", "pitch"]], "armi.reactor.grids.cartesian": [[336, 2, 1, "", "CartesianGrid"]], "armi.reactor.grids.cartesian.CartesianGrid": [[336, 4, 1, "", "armiObject"], [336, 3, 1, "", "changePitch"], [336, 3, 1, "", "fromRectangle"], [336, 3, 1, "", "getIndicesFromRingAndPos"], [336, 3, 1, "", "getMinimumRings"], [336, 3, 1, "", "getPositionsInRing"], [336, 3, 1, "", "getRingPos"], [336, 3, 1, "", "getSymmetricEquivalents"], [336, 3, 1, "", "locatorInDomain"], [336, 3, 1, "", "overlapsWhichSymmetryLine"], [336, 5, 1, "", "pitch"]], "armi.reactor.grids.grid": [[338, 2, 1, "", "Grid"]], "armi.reactor.grids.grid.Grid": [[338, 4, 1, "", "armiObject"], [338, 3, 1, "", "backUp"], [338, 5, 1, "", "geomType"], [338, 3, 1, "", "getCellBase"], [338, 3, 1, "", "getCellTop"], [338, 3, 1, "", "getCoordinates"], [338, 3, 1, "", "getLabel"], [338, 3, 1, "", "getSymmetricEquivalents"], [338, 5, 1, "", "isAxialOnly"], [338, 3, 1, "", "items"], [338, 3, 1, "", "locatorInDomain"], [338, 3, 1, "", "overlapsWhichSymmetryLine"], [338, 3, 1, "", "reduce"], [338, 3, 1, "", "restoreBackup"], [338, 5, 1, "", "symmetry"]], "armi.reactor.grids.hexagonal": [[339, 2, 1, "", "HexGrid"]], "armi.reactor.grids.hexagonal.HexGrid": [[339, 4, 1, "", "armiObject"], [339, 3, 1, "", "changePitch"], [339, 5, 1, "", "cornersUp"], [339, 3, 1, "", "fromPitch"], [339, 3, 1, "", "generateSortedHexLocationList"], [339, 3, 1, "", "getIndicesFromRingAndPos"], [339, 3, 1, "", "getLabel"], [339, 3, 1, "", "getMinimumRings"], [339, 3, 1, "", "getNeighboringCellIndices"], [339, 3, 1, "", "getPositionsInRing"], [339, 3, 1, "", "getRingPos"], [339, 3, 1, "", "getSymmetricEquivalents"], [339, 3, 1, "", "indicesToRingPos"], [339, 3, 1, "", "isInFirstThird"], [339, 3, 1, "", "locatorInDomain"], [339, 3, 1, "", "overlapsWhichSymmetryLine"], [339, 5, 1, "", "pitch"], [339, 3, 1, "", "triangleCoords"]], "armi.reactor.grids.locations": [[340, 2, 1, "", "CoordinateLocation"], [340, 2, 1, "", "IndexLocation"], [340, 2, 1, "", "LocationBase"], [340, 2, 1, "", "MultiIndexLocation"], [340, 1, 1, "", "addingIsValid"]], "armi.reactor.grids.locations.CoordinateLocation": [[340, 3, 1, "", "getCompleteIndices"], [340, 3, 1, "", "getGlobalCellBase"], [340, 3, 1, "", "getGlobalCellTop"], [340, 3, 1, "", "getLocalCoordinates"]], "armi.reactor.grids.locations.IndexLocation": [[340, 3, 1, "", "detachedCopy"], [340, 3, 1, "", "distanceTo"], [340, 3, 1, "", "getCompleteIndices"], [340, 3, 1, "", "getGlobalCellBase"], [340, 3, 1, "", "getGlobalCellTop"], [340, 3, 1, "", "getGlobalCoordinates"], [340, 3, 1, "", "getLocalCoordinates"], [340, 3, 1, "", "getRingPos"], [340, 3, 1, "", "getSymmetricEquivalents"], [340, 5, 1, "", "indices"], [340, 5, 1, "", "parentLocation"]], "armi.reactor.grids.locations.LocationBase": [[340, 3, 1, "", "associate"], [340, 5, 1, "", "grid"], [340, 5, 1, "", "i"], [340, 5, 1, "", "indices"], [340, 5, 1, "", "j"], [340, 5, 1, "", "k"]], "armi.reactor.grids.locations.MultiIndexLocation": [[340, 3, 1, "", "append"], [340, 3, 1, "", "associate"], [340, 3, 1, "", "detachedCopy"], [340, 3, 1, "", "extend"], [340, 3, 1, "", "getCompleteIndices"], [340, 5, 1, "", "indices"], [340, 3, 1, "", "pop"]], "armi.reactor.grids.structuredGrid": [[341, 2, 1, "", "GridParameters"], [341, 2, 1, "", "StructuredGrid"]], "armi.reactor.grids.structuredGrid.GridParameters": [[341, 4, 1, "", "bounds"], [341, 4, 1, "", "geomType"], [341, 4, 1, "", "offset"], [341, 4, 1, "", "symmetry"], [341, 4, 1, "", "unitStepLimits"], [341, 4, 1, "", "unitSteps"]], "armi.reactor.grids.structuredGrid.StructuredGrid": [[341, 4, 1, "", "armiObject"], [341, 3, 1, "", "backUp"], [341, 3, 1, "", "getAboveAndBelowCellIndices"], [341, 3, 1, "", "getAllIndices"], [341, 3, 1, "", "getBounds"], [341, 3, 1, "", "getCellBase"], [341, 3, 1, "", "getCellTop"], [341, 3, 1, "", "getCoordinates"], [341, 3, 1, "", "getIndexBounds"], [341, 3, 1, "", "getIndicesFromRingAndPos"], [341, 3, 1, "", "getLocatorFromRingAndPos"], [341, 3, 1, "", "getMinimumRings"], [341, 3, 1, "", "getNeighboringCellIndices"], [341, 3, 1, "", "getPositionsInRing"], [341, 3, 1, "", "getRingPos"], [341, 5, 1, "", "isAxialOnly"], [341, 3, 1, "", "items"], [341, 5, 1, "", "offset"], [341, 5, 1, "", "pitch"], [341, 3, 1, "", "reduce"], [341, 3, 1, "", "restoreBackup"]], "armi.reactor.grids.thetarz": [[342, 2, 1, "", "ThetaRZGrid"]], "armi.reactor.grids.thetarz.ThetaRZGrid": [[342, 4, 1, "", "armiObject"], [342, 3, 1, "", "fromGeom"], [342, 3, 1, "", "getCoordinates"], [342, 3, 1, "", "getIndicesFromRingAndPos"], [342, 3, 1, "", "getMinimumRings"], [342, 3, 1, "", "getPositionsInRing"], [342, 3, 1, "", "getRingPos"], [342, 3, 1, "", "getSymmetricEquivalents"], [342, 3, 1, "", "indicesOfBounds"], [342, 3, 1, "", "locatorInDomain"], [342, 3, 1, "", "overlapsWhichSymmetryLine"], [342, 3, 1, "", "pitch"]], "armi.reactor.parameters": [[344, 0, 0, "-", "exceptions"], [345, 0, 0, "-", "parameterCollections"], [346, 0, 0, "-", "parameterDefinitions"], [343, 1, 1, "", "reset"], [347, 0, 0, "-", "resolveCollections"]], "armi.reactor.parameters.exceptions": [[344, 7, 1, "", "ParameterDefinitionError"], [344, 7, 1, "", "ParameterError"], [344, 7, 1, "", "UnknownParameterError"]], "armi.reactor.parameters.parameterCollections": [[345, 6, 1, "", "GLOBAL_SERIAL_NUM"], [345, 2, 1, "", "ParameterCollection"], [345, 1, 1, "", "applyAllParameters"], [345, 1, 1, "", "collectPluginParameters"]], "armi.reactor.parameters.parameterCollections.ParameterCollection": [[345, 3, 1, "", "applyParameters"], [345, 3, 1, "", "backUp"], [345, 3, 1, "", "get"], [345, 3, 1, "", "getSyncData"], [345, 3, 1, "", "items"], [345, 3, 1, "", "keys"], [345, 4, 1, "", "pDefs"], [345, 5, 1, "", "paramDefs"], [345, 3, 1, "", "restoreBackup"], [345, 4, 1, "", "serialNum"], [345, 3, 1, "", "update"], [345, 3, 1, "", "values"], [345, 3, 1, "", "where"]], "armi.reactor.parameters.parameterDefinitions": [[346, 2, 1, "", "Category"], [346, 2, 1, "", "NoDefault"], [346, 2, 1, "", "ParamLocation"], [346, 2, 1, "", "Parameter"], [346, 2, 1, "", "ParameterBuilder"], [346, 2, 1, "", "ParameterDefinitionCollection"], [346, 2, 1, "", "Serializer"], [346, 1, 1, "", "isNumpyArray"]], "armi.reactor.parameters.parameterDefinitions.Category": [[346, 4, 1, "", "assignInBlueprints"], [346, 4, 1, "", "cumulative"], [346, 4, 1, "", "cumulativeOverCycle"], [346, 4, 1, "", "depletion"], [346, 4, 1, "", "detailedAxialExpansion"], [346, 4, 1, "", "fluxQuantities"], [346, 4, 1, "", "gamma"], [346, 4, 1, "", "multiGroupQuantities"], [346, 4, 1, "", "neutronics"], [346, 4, 1, "", "pinQuantities"], [346, 4, 1, "", "reactivityCoefficients"], [346, 4, 1, "", "retainOnReplacement"], [346, 4, 1, "", "thermalHydraulics"]], "armi.reactor.parameters.parameterDefinitions.ParamLocation": [[346, 4, 1, "", "AVERAGE"], [346, 4, 1, "", "BOTTOM"], [346, 4, 1, "", "CENTROID"], [346, 4, 1, "", "CHILDREN"], [346, 4, 1, "", "CORNERS"], [346, 4, 1, "", "EDGES"], [346, 4, 1, "", "MAX"], [346, 4, 1, "", "TOP"], [346, 4, 1, "", "VOLUME_INTEGRATED"]], "armi.reactor.parameters.parameterDefinitions.Parameter": [[346, 4, 1, "", "assigned"], [346, 3, 1, "", "atLocation"], [346, 3, 1, "", "backUp"], [346, 4, 1, "", "categories"], [346, 4, 1, "", "collectionType"], [346, 4, 1, "", "default"], [346, 4, 1, "", "description"], [346, 4, 1, "", "fieldName"], [346, 3, 1, "", "hasCategory"], [346, 4, 1, "", "location"], [346, 4, 1, "", "name"], [346, 3, 1, "", "restoreBackup"], [346, 4, 1, "", "saveToDB"], [346, 4, 1, "", "serializer"], [346, 3, 1, "", "setter"], [346, 4, 1, "", "units"]], "armi.reactor.parameters.parameterDefinitions.ParameterBuilder": [[346, 3, 1, "", "associateParameterDefinitionCollection"], [346, 3, 1, "", "defParam"]], "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection": [[346, 3, 1, "", "add"], [346, 3, 1, "", "atLocation"], [346, 3, 1, "", "byNameAndCollectionType"], [346, 3, 1, "", "byNameAndType"], [346, 5, 1, "", "categories"], [346, 3, 1, "", "createBuilder"], [346, 3, 1, "", "extend"], [346, 3, 1, "", "forType"], [346, 3, 1, "", "inCategory"], [346, 3, 1, "", "items"], [346, 3, 1, "", "lock"], [346, 5, 1, "", "locked"], [346, 5, 1, "", "names"], [346, 3, 1, "", "resetAssignmentFlag"], [346, 3, 1, "", "setAssignmentFlag"], [346, 3, 1, "", "since"], [346, 3, 1, "", "toWriteToDB"], [346, 3, 1, "", "unchanged_since"]], "armi.reactor.parameters.parameterDefinitions.Serializer": [[346, 3, 1, "", "pack"], [346, 3, 1, "", "unpack"], [346, 4, 1, "", "version"]], "armi.reactor.parameters.resolveCollections": [[347, 2, 1, "", "ResolveParametersMeta"]], "armi.reactor.reactorParameters": [[348, 1, 1, "", "defineCoreParameters"], [348, 1, 1, "", "defineReactorParameters"], [348, 1, 1, "", "makeParametersReadOnly"]], "armi.reactor.reactors": [[349, 2, 1, "", "Reactor"], [349, 1, 1, "", "factory"], [349, 1, 1, "", "loadFromCs"]], "armi.reactor.reactors.Reactor": [[349, 3, 1, "", "add"], [349, 3, 1, "", "incrementAssemNum"], [349, 3, 1, "", "normalizeNames"], [349, 4, 1, "", "pDefs"], [349, 4, 1, "", "paramCollectionType"]], "armi.reactor.spentFuelPool": [[350, 2, 1, "", "SpentFuelPool"]], "armi.reactor.spentFuelPool.SpentFuelPool": [[350, 3, 1, "", "add"], [350, 3, 1, "", "getAssembly"], [350, 3, 1, "", "normalizeNames"], [350, 4, 1, "", "paramCollectionType"]], "armi.reactor.systemLayoutInput": [[351, 2, 1, "", "SystemLayoutInput"]], "armi.reactor.systemLayoutInput.SystemLayoutInput": [[351, 4, 1, "", "ROOT_TAG"], [351, 3, 1, "", "fromReactor"], [351, 3, 1, "", "growToFullCore"], [351, 3, 1, "", "loadFromCs"], [351, 3, 1, "", "modifyEqPaths"], [351, 3, 1, "", "readGeomFromFile"], [351, 3, 1, "", "readGeomFromStream"], [351, 3, 1, "", "toGridBlueprints"], [351, 3, 1, "", "writeGeom"]], "armi.reactor.tests": [[353, 0, 0, "-", "test_assemblies"], [354, 0, 0, "-", "test_blocks"], [355, 0, 0, "-", "test_components"], [356, 0, 0, "-", "test_composites"], [357, 0, 0, "-", "test_excoreStructures"], [358, 0, 0, "-", "test_flags"], [359, 0, 0, "-", "test_geometry"], [360, 0, 0, "-", "test_parameters"], [361, 0, 0, "-", "test_reactors"], [362, 0, 0, "-", "test_rz_reactors"], [363, 0, 0, "-", "test_zones"]], "armi.reactor.tests.test_assemblies": [[353, 2, 1, "", "AnnularFuelTestCase"], [353, 2, 1, "", "AssemblyInReactor_TestCase"], [353, 2, 1, "", "Assembly_TestCase"], [353, 2, 1, "", "MaterialInAssembly_TestCase"], [353, 1, 1, "", "buildTestAssemblies"], [353, 1, 1, "", "makeTestAssembly"]], "armi.reactor.tests.test_assemblies.AnnularFuelTestCase": [[353, 3, 1, "", "test_areaCheck"]], "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase": [[353, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"], [353, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "armi.reactor.tests.test_assemblies.Assembly_TestCase": [[353, 3, 1, "", "test_add"], [353, 3, 1, "", "test_adjustResolution"], [353, 3, 1, "", "test_append"], [353, 3, 1, "", "test_assem_block_types"], [353, 3, 1, "", "test_assem_hex_type"], [353, 3, 1, "", "test_averagePlenumTemperature"], [353, 3, 1, "", "test_calcAvgParam"], [353, 3, 1, "", "test_calcTotalParam"], [353, 3, 1, "", "test_calculateZCoords"], [353, 3, 1, "", "test_carestianCoordinates"], [353, 3, 1, "", "test_countBlocksOfType"], [353, 3, 1, "", "test_duplicate"], [353, 3, 1, "", "test_extend"], [353, 3, 1, "", "test_getAge"], [353, 3, 1, "", "test_getArea"], [353, 3, 1, "", "test_getAxialMesh"], [353, 3, 1, "", "test_getBIndexFromZIndex"], [353, 3, 1, "", "test_getBlockData"], [353, 3, 1, "", "test_getBlocks"], [353, 3, 1, "", "test_getBlocksAndZ"], [353, 3, 1, "", "test_getBlocksBetweenElevations"], [353, 3, 1, "", "test_getDim"], [353, 3, 1, "", "test_getDominantMaterial"], [353, 3, 1, "", "test_getElevationBoundariesByBlockType"], [353, 3, 1, "", "test_getElevationsMatchingParamValue"], [353, 3, 1, "", "test_getFirstBlock"], [353, 3, 1, "", "test_getFirstBlockByType"], [353, 3, 1, "", "test_getFissileMass"], [353, 3, 1, "", "test_getHeight"], [353, 3, 1, "", "test_getLocation"], [353, 3, 1, "", "test_getMass"], [353, 3, 1, "", "test_getMaxParam"], [353, 3, 1, "", "test_getName"], [353, 3, 1, "", "test_getNum"], [353, 3, 1, "", "test_getParamValuesAtZ"], [353, 3, 1, "", "test_getReactiveHeight"], [353, 3, 1, "", "test_getTotalHeight"], [353, 3, 1, "", "test_getVolume"], [353, 3, 1, "", "test_hasContinuousCoolantChannel"], [353, 3, 1, "", "test_hasFlags"], [353, 3, 1, "", "test_isOnWhichSymmetryLine"], [353, 3, 1, "", "test_iter"], [353, 3, 1, "", "test_iteration"], [353, 3, 1, "", "test_len"], [353, 3, 1, "", "test_makeAxialSnapList"], [353, 3, 1, "", "test_moveTo"], [353, 3, 1, "", "test_notesParameter"], [353, 3, 1, "", "test_pinPlenumVolume"], [353, 3, 1, "", "test_reattach"], [353, 3, 1, "", "test_reestablishBlockOrder"], [353, 3, 1, "", "test_renameBlocksAccordingToAssemblyNum"], [353, 3, 1, "", "test_rotate"], [353, 3, 1, "", "test_snapAxialMeshToReference"], [353, 3, 1, "", "test_updateFromAssembly"]], "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase": [[353, 3, 1, "", "test_UThZrMaterial"], [353, 3, 1, "", "test_sortNoLocator"]], "armi.reactor.tests.test_blocks": [[354, 2, 1, "", "BlockEnergyDepositionConstants"], [354, 2, 1, "", "BlockInputHeightsTests"], [354, 2, 1, "", "Block_TestCase"], [354, 2, 1, "", "CartesianBlock_TestCase"], [354, 2, 1, "", "EmptyBlockRotateTest"], [354, 2, 1, "", "HexBlock_TestCase"], [354, 2, 1, "", "MassConservationTests"], [354, 2, 1, "", "TestDetailedNDensUpdate"], [354, 2, 1, "", "TestNegativeVolume"], [354, 2, 1, "", "ThRZBlock_TestCase"], [354, 1, 1, "", "applyDummyData"], [354, 1, 1, "", "buildSimpleFuelBlock"], [354, 1, 1, "", "getComponentData"], [354, 1, 1, "", "loadTestBlock"]], "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants": [[354, 3, 1, "", "test_getCaptureEnergyGenerationConstants"], [354, 3, 1, "", "test_getFissionEnergyDepositionConstants"], [354, 3, 1, "", "test_getGammaEnergyDepositionConstants"], [354, 3, 1, "", "test_getNeutronEnergyDepositionConstants"], [354, 3, 1, "", "test_getTotalEnergyGenerationConstants"]], "armi.reactor.tests.test_blocks.BlockInputHeightsTests": [[354, 3, 1, "", "test_foundReactor"], [354, 3, 1, "", "test_noBlueprints"]], "armi.reactor.tests.test_blocks.Block_TestCase": [[354, 3, 1, "", "test_100_getPinPitch"], [354, 3, 1, "", "test_101_getPitch"], [354, 3, 1, "", "test_102_setPitch"], [354, 3, 1, "", "test_106_getAreaFractions"], [354, 3, 1, "", "test_27b_setBuGroup"], [354, 3, 1, "", "test_add"], [354, 3, 1, "", "test_adjustDensity"], [354, 3, 1, "", "test_adjustUEnrich"], [354, 3, 1, "", "test_breakFuelComponentsIntoIndividuals"], [354, 3, 1, "", "test_clearDensity"], [354, 3, 1, "", "test_completeInitialLoading"], [354, 3, 1, "", "test_consistentAreaWithOverlappingComponents"], [354, 3, 1, "", "test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"], [354, 3, 1, "", "test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"], [354, 3, 1, "", "test_duplicate"], [354, 3, 1, "", "test_expandAllElementalsToIsotopics"], [354, 3, 1, "", "test_expandElementalToIsotopics"], [354, 3, 1, "", "test_getComponent"], [354, 3, 1, "", "test_getComponentAreaFrac"], [354, 3, 1, "", "test_getComponentByName"], [354, 3, 1, "", "test_getComponentNames"], [354, 3, 1, "", "test_getComponents"], [354, 3, 1, "", "test_getComponentsInLinkedOrder"], [354, 3, 1, "", "test_getComponentsOfMaterial"], [354, 3, 1, "", "test_getComponentsOfShape"], [354, 3, 1, "", "test_getDimensions"], [354, 3, 1, "", "test_getFissileMassEnrich"], [354, 3, 1, "", "test_getFlowArea"], [354, 3, 1, "", "test_getFlowAreaPerPin"], [354, 3, 1, "", "test_getHMDens"], [354, 3, 1, "", "test_getHydraulicDiameter"], [354, 3, 1, "", "test_getMass"], [354, 3, 1, "", "test_getMasses"], [354, 3, 1, "", "test_getMfp"], [354, 3, 1, "", "test_getMicroSuffix"], [354, 3, 1, "", "test_getNumComponents"], [354, 3, 1, "", "test_getNumPins"], [354, 3, 1, "", "test_getNumberDensity"], [354, 3, 1, "", "test_getNumberOfAtoms"], [354, 3, 1, "", "test_getPlenumPin"], [354, 3, 1, "", "test_getPu"], [354, 3, 1, "", "test_getReactionRates"], [354, 3, 1, "", "test_getSmearDensity"], [354, 3, 1, "", "test_getSmearDensityEdgeCases"], [354, 3, 1, "", "test_getSmearDensityMultipleLiner"], [354, 3, 1, "", "test_getSortedComponentsInsideOfComponentClad"], [354, 3, 1, "", "test_getSortedComponentsInsideOfComponentDuct"], [354, 3, 1, "", "test_getTotalMass"], [354, 3, 1, "", "test_getTotalNDens"], [354, 3, 1, "", "test_getType"], [354, 3, 1, "", "test_getUraniumMassEnrich"], [354, 3, 1, "", "test_getUraniumNumEnrich"], [354, 3, 1, "", "test_getVolumeFractionWithoutParent"], [354, 3, 1, "", "test_getVolumeFractionsWithZeroHeight"], [354, 3, 1, "", "test_getWettedPerimeter"], [354, 3, 1, "", "test_getXsType"], [354, 3, 1, "", "test_hasComponents"], [354, 3, 1, "", "test_hasFlags"], [354, 3, 1, "", "test_hasPinPitch"], [354, 3, 1, "", "test_homogenizedMixture"], [354, 3, 1, "", "test_mergeWithBlock"], [354, 3, 1, "", "test_pinMgFluxes"], [354, 3, 1, "", "test_removeMass"], [354, 3, 1, "", "test_replaceBlockWithBlock"], [354, 3, 1, "", "test_rotatePins"], [354, 3, 1, "", "test_setBuLimitInfo"], [354, 3, 1, "", "test_setImportantParams"], [354, 3, 1, "", "test_setLinPowByPin"], [354, 3, 1, "", "test_setLocation"], [354, 3, 1, "", "test_setMass"], [354, 3, 1, "", "test_setNumberDensities"], [354, 3, 1, "", "test_setNumberDensity"], [354, 3, 1, "", "test_setPitch"], [354, 3, 1, "", "test_setType"], [354, 3, 1, "", "test_setZeroHeight"], [354, 3, 1, "", "test_timeNodeParams"]], "armi.reactor.tests.test_blocks.CartesianBlock_TestCase": [[354, 4, 1, "", "PITCH"], [354, 3, 1, "", "test_getCartesianGrid"], [354, 3, 1, "", "test_getHydraulicDiameter"], [354, 3, 1, "", "test_getPitchHomogeneousBlock"], [354, 3, 1, "", "test_getPitchSquare"], [354, 3, 1, "", "test_getWettedPerimeter"]], "armi.reactor.tests.test_blocks.EmptyBlockRotateTest": [[354, 3, 1, "", "test_orientation"]], "armi.reactor.tests.test_blocks.HexBlock_TestCase": [[354, 3, 1, "", "test_block_dims"], [354, 3, 1, "", "test_component_type"], [354, 3, 1, "", "test_coords"], [354, 3, 1, "", "test_getArea"], [354, 3, 1, "", "test_getDuctPitch"], [354, 3, 1, "", "test_getNumPins"], [354, 3, 1, "", "test_getPinCenterFlatToFlat"], [354, 3, 1, "", "test_getPinCoords"], [354, 3, 1, "", "test_getPitchHomogeneousBlock"], [354, 3, 1, "", "test_gridCreation"], [354, 3, 1, "", "test_gridNotCreatedMultipleMultiplicities"], [354, 3, 1, "", "test_gridNumPinsAndLocations"], [354, 3, 1, "", "test_retainState"], [354, 3, 1, "", "test_symmetryFactor"]], "armi.reactor.tests.test_blocks.MassConservationTests": [[354, 3, 1, "", "test_coldMass"], [354, 3, 1, "", "test_dimensionDuctHeatup"], [354, 3, 1, "", "test_heightExpansionDifferences"], [354, 3, 1, "", "test_massCladHeatup"], [354, 3, 1, "", "test_massConsistency"], [354, 3, 1, "", "test_massCoolHeatup"], [354, 3, 1, "", "test_massDuctHeatup"], [354, 3, 1, "", "test_massFuelHeatup"]], "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate": [[354, 3, 1, "", "test_updateDetailedNdens"]], "armi.reactor.tests.test_blocks.TestNegativeVolume": [[354, 3, 1, "", "test_negativeVolume"]], "armi.reactor.tests.test_blocks.ThRZBlock_TestCase": [[354, 3, 1, "", "test_axial"], [354, 3, 1, "", "test_getHydraulicDiameter"], [354, 3, 1, "", "test_getThetaRZGrid"], [354, 3, 1, "", "test_getWettedPerimeter"], [354, 3, 1, "", "test_radii"], [354, 3, 1, "", "test_theta"], [354, 3, 1, "", "test_verifyBlockDims"]], "armi.reactor.tests.test_components": [[355, 2, 1, "", "TestCircle"], [355, 2, 1, "", "TestComponent"], [355, 2, 1, "", "TestComponentExpansion"], [355, 2, 1, "", "TestComponentFactory"], [355, 2, 1, "", "TestCube"], [355, 2, 1, "", "TestDerivedShape"], [355, 2, 1, "", "TestDerivedShapeGetArea"], [355, 2, 1, "", "TestDifferentialRadialSegment"], [355, 2, 1, "", "TestGeneralComponents"], [355, 2, 1, "", "TestHelix"], [355, 2, 1, "", "TestHexHoledCircle"], [355, 2, 1, "", "TestHexagon"], [355, 2, 1, "", "TestHoledHexagon"], [355, 2, 1, "", "TestHoledRectangle"], [355, 2, 1, "", "TestHoledSquare"], [355, 2, 1, "", "TestMaterialAdjustments"], [355, 2, 1, "", "TestNullComponent"], [355, 2, 1, "", "TestRadialSegment"], [355, 2, 1, "", "TestRectangle"], [355, 2, 1, "", "TestShapedComponent"], [355, 2, 1, "", "TestSolidRectangle"], [355, 2, 1, "", "TestSphere"], [355, 2, 1, "", "TestSquare"], [355, 2, 1, "", "TestTriangle"], [355, 2, 1, "", "TestUnshapedComponent"]], "armi.reactor.tests.test_components.TestCircle": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_badComponentName"], [355, 3, 1, "", "test_changeNumberDensities"], [355, 3, 1, "", "test_componentInteractionsLinkingByDimensions"], [355, 3, 1, "", "test_componentInteractionsLinkingBySubtraction"], [355, 3, 1, "", "test_dimensionThermallyExpands"], [355, 3, 1, "", "test_fuelMass"], [355, 3, 1, "", "test_getArea"], [355, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [355, 3, 1, "", "test_getCircleInnerDiameter"], [355, 3, 1, "", "test_getDimension"], [355, 3, 1, "", "test_getNumberDensities"], [355, 3, 1, "", "test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"], [355, 3, 1, "", "test_theoreticalDensitySetter"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestComponent": [[355, 4, 1, "", "componentCls"], [355, 3, 1, "", "test_initializeComponentMaterial"], [355, 3, 1, "", "test_setNumberDensities"], [355, 3, 1, "", "test_setNumberDensity"], [355, 3, 1, "", "test_solid_material"]], "armi.reactor.tests.test_components.TestComponentExpansion": [[355, 4, 1, "", "coldOuterDiameter"], [355, 3, 1, "", "componentMassIndependentOfInputTemp"], [355, 3, 1, "", "expansionConservationColdHeightDefined"], [355, 3, 1, "", "expansionConservationHotHeightDefined"], [355, 3, 1, "", "runExpansionTests"], [355, 4, 1, "", "tCold"], [355, 4, 1, "", "tHot"], [355, 4, 1, "", "tWarm"], [355, 3, 1, "", "test_B4CExpansion"], [355, 3, 1, "", "test_HT9Expansion"], [355, 3, 1, "", "test_UZrExpansion"]], "armi.reactor.tests.test_components.TestComponentFactory": [[355, 3, 1, "", "getCircleFuelDict"], [355, 3, 1, "", "getCircleVoidDict"], [355, 3, 1, "", "test_componentInitializationAndDuplication"], [355, 3, 1, "", "test_factory"], [355, 3, 1, "", "test_factoryBadShapeName"], [355, 3, 1, "", "test_invalidCoolantComponentAssignment"]], "armi.reactor.tests.test_components.TestCube": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_getVolume"], [355, 3, 1, "", "test_negativeVolume"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestDerivedShape": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 4, 1, "", "componentMaterial"], [355, 3, 1, "", "test_computeVolume"], [355, 3, 1, "", "test_getBoundingCircleOuterDiameter"]], "armi.reactor.tests.test_components.TestDerivedShapeGetArea": [[355, 3, 1, "", "test_getAreaColdTrue"]], "armi.reactor.tests.test_components.TestDifferentialRadialSegment": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [355, 3, 1, "", "test_getVolume"], [355, 3, 1, "", "test_thermallyExpands"], [355, 3, 1, "", "test_updateDims"]], "armi.reactor.tests.test_components.TestGeneralComponents": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 4, 1, "", "componentMaterial"]], "armi.reactor.tests.test_components.TestHelix": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_dimensionThermallyExpands"], [355, 3, 1, "", "test_getArea"], [355, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [355, 3, 1, "", "test_getCircleInnerDiameter"], [355, 3, 1, "", "test_thermallyExpands"], [355, 3, 1, "", "test_validParameters"]], "armi.reactor.tests.test_components.TestHexHoledCircle": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_dimensionThermallyExpands"], [355, 3, 1, "", "test_getArea"], [355, 3, 1, "", "test_getCircleInnerDiameter"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHexagon": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_dimensionThermallyExpands"], [355, 3, 1, "", "test_getArea"], [355, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [355, 3, 1, "", "test_getCircleInnerDiameter"], [355, 3, 1, "", "test_getPerimeter"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledHexagon": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_dimensionThermallyExpands"], [355, 3, 1, "", "test_getArea"], [355, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [355, 3, 1, "", "test_getCircleInnerDiameter"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledRectangle": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 4, 1, "", "dimsToTestExpansion"], [355, 3, 1, "", "setClassDims"], [355, 3, 1, "", "test_dimensionThermallyExpands"], [355, 3, 1, "", "test_getArea"], [355, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [355, 3, 1, "", "test_getCircleInnerDiameter"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledSquare": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 4, 1, "", "dimsToTestExpansion"], [355, 3, 1, "", "setClassDims"], [355, 3, 1, "", "test_getCircleInnerDiameter"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestMaterialAdjustments": [[355, 3, 1, "", "test_adjustMassEnrichment"], [355, 3, 1, "", "test_adjustMassFrac_U"], [355, 3, 1, "", "test_adjustMassFrac_U235"], [355, 3, 1, "", "test_adjustMassFrac_clear_ZR"], [355, 3, 1, "", "test_adjustMassFrac_invalid"], [355, 3, 1, "", "test_adjustMassFrac_leave_same"], [355, 3, 1, "", "test_adjustMassFrac_set_ZR"], [355, 3, 1, "", "test_finalizeLoadDBAdjustsTD"], [355, 3, 1, "", "test_getEnrichment"], [355, 3, 1, "", "test_setMassFrac"], [355, 3, 1, "", "test_setMassFracOnComponentMaterial"]], "armi.reactor.tests.test_components.TestNullComponent": [[355, 4, 1, "", "componentCls"], [355, 3, 1, "", "test_cmp"], [355, 3, 1, "", "test_getDimension"], [355, 3, 1, "", "test_nonzero"]], "armi.reactor.tests.test_components.TestRadialSegment": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [355, 3, 1, "", "test_getVolume"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestRectangle": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_dimensionThermallyExpands"], [355, 3, 1, "", "test_getArea"], [355, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [355, 3, 1, "", "test_getCircleInnerDiameter"], [355, 3, 1, "", "test_negativeArea"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestShapedComponent": [[355, 3, 1, "", "test_density"], [355, 3, 1, "", "test_densityConsistent"], [355, 3, 1, "", "test_preserveMassDuringThermalExpansion"], [355, 3, 1, "", "test_volumeAfterClearCache"]], "armi.reactor.tests.test_components.TestSolidRectangle": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_dimensionThermallyExpands"], [355, 3, 1, "", "test_getArea"], [355, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSphere": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_getVolume"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSquare": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_dimensionThermallyExpands"], [355, 3, 1, "", "test_getArea"], [355, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [355, 3, 1, "", "test_getCircleInnerDiameter"], [355, 3, 1, "", "test_negativeArea"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestTriangle": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 3, 1, "", "test_dimensionThermallyExpands"], [355, 3, 1, "", "test_getArea"], [355, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestUnshapedComponent": [[355, 4, 1, "", "componentCls"], [355, 4, 1, "", "componentDims"], [355, 4, 1, "", "componentMaterial"], [355, 3, 1, "", "test_component_less_than"], [355, 3, 1, "", "test_fromComponent"], [355, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [355, 3, 1, "", "test_getComponentArea"]], "armi.reactor.tests.test_composites": [[356, 2, 1, "", "DummyComposite"], [356, 2, 1, "", "DummyLeaf"], [356, 2, 1, "", "MockBP"], [356, 2, 1, "", "TestCompositePattern"], [356, 2, 1, "", "TestCompositeTree"], [356, 2, 1, "", "TestFlagSerializer"], [356, 2, 1, "", "TestGetReactionRateDict"], [356, 2, 1, "", "TestMiscMethods"], [356, 1, 1, "", "getDummyParamDefs"]], "armi.reactor.tests.test_composites.DummyComposite": [[356, 4, 1, "", "pDefs"], [356, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.DummyLeaf": [[356, 3, 1, "", "getBoundingCircleOuterDiameter"], [356, 3, 1, "", "getChildren"], [356, 3, 1, "", "getChildrenWithFlags"], [356, 3, 1, "", "iterComponents"], [356, 4, 1, "", "pDefs"], [356, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.MockBP": [[356, 4, 1, "", "activeNuclides"], [356, 4, 1, "", "allNuclidesInProblem"], [356, 4, 1, "", "customIsotopics"], [356, 4, 1, "", "elementsToExpand"], [356, 4, 1, "", "inactiveNuclides"]], "armi.reactor.tests.test_composites.TestCompositePattern": [[356, 3, 1, "", "test_areChildernOfType"], [356, 3, 1, "", "test_composite"], [356, 3, 1, "", "test_containsAtLeastOneChildOfType"], [356, 3, 1, "", "test_containsOnlyChildrenOfType"], [356, 3, 1, "", "test_expandLFPs"], [356, 3, 1, "", "test_getBoundingCirlceOuterDiameter"], [356, 3, 1, "", "test_getChildren"], [356, 3, 1, "", "test_getIntegratedMgFlux"], [356, 3, 1, "", "test_getLumpedFissionProductsIfNecessaryNullCase"], [356, 3, 1, "", "test_getName"], [356, 3, 1, "", "test_getParamNames"], [356, 3, 1, "", "test_getReactionRates"], [356, 3, 1, "", "test_hasFlags"], [356, 3, 1, "", "test_hasFlagsNoTypeSpecified"], [356, 3, 1, "", "test_hasFlagsSubstring"], [356, 3, 1, "", "test_iterComponents"], [356, 3, 1, "", "test_nameContains"], [356, 3, 1, "", "test_nucSpec"], [356, 3, 1, "", "test_requiresLumpedFissionProducts"], [356, 3, 1, "", "test_setChildrenLumpedFissionProducts"], [356, 3, 1, "", "test_sort"], [356, 3, 1, "", "test_syncParameters"], [356, 3, 1, "", "test_updateVolume"]], "armi.reactor.tests.test_composites.TestCompositeTree": [[356, 4, 1, "", "blueprintYaml"], [356, 3, 1, "", "test_constituentReport"], [356, 3, 1, "", "test_getChildrenIncludeMaterials"], [356, 3, 1, "", "test_getFPMass"], [356, 3, 1, "", "test_getFissileMass"], [356, 3, 1, "", "test_getFuelMass"], [356, 3, 1, "", "test_getHMMass"], [356, 3, 1, "", "test_getMaxParam"], [356, 3, 1, "", "test_getMinParam"], [356, 3, 1, "", "test_getNuclides"], [356, 3, 1, "", "test_ordering"], [356, 3, 1, "", "test_summing"]], "armi.reactor.tests.test_composites.TestFlagSerializer": [[356, 2, 1, "", "TestFlagsA"], [356, 2, 1, "", "TestFlagsB"], [356, 3, 1, "", "test_flagConversion"], [356, 3, 1, "", "test_flagSerialization"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA": [[356, 4, 1, "", "A"], [356, 4, 1, "", "B"], [356, 4, 1, "", "C"], [356, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB": [[356, 4, 1, "", "A"], [356, 4, 1, "", "B"], [356, 4, 1, "", "BPRIME"], [356, 4, 1, "", "C"], [356, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestGetReactionRateDict": [[356, 3, 1, "", "test_getReactionRateDict"]], "armi.reactor.tests.test_composites.TestMiscMethods": [[356, 3, 1, "", "test_containsHeavyMetal"], [356, 3, 1, "", "test_copyParamsFrom"], [356, 3, 1, "", "test_copyParamsToChildren"], [356, 3, 1, "", "test_dimensionReport"], [356, 3, 1, "", "test_getAtomicWeight"], [356, 3, 1, "", "test_getNumberDensities"], [356, 3, 1, "", "test_getNumberDensitiesWithExpandedFissionProducts"], [356, 3, 1, "", "test_setMass"]], "armi.reactor.tests.test_excoreStructures": [[357, 2, 1, "", "TestExcoreCollection"], [357, 2, 1, "", "TestExcoreStructure"], [357, 2, 1, "", "TestSpentFuelPool"]], "armi.reactor.tests.test_excoreStructures.TestExcoreCollection": [[357, 3, 1, "", "test_addLikeAttribute"], [357, 3, 1, "", "test_addLikeDict"]], "armi.reactor.tests.test_excoreStructures.TestExcoreStructure": [[357, 3, 1, "", "test_add"], [357, 3, 1, "", "test_constructor"], [357, 3, 1, "", "test_parentReactor"], [357, 3, 1, "", "test_representation"]], "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool": [[357, 3, 1, "", "test_add"], [357, 3, 1, "", "test_constructor"], [357, 3, 1, "", "test_getAssembly"], [357, 3, 1, "", "test_getNextLocation"], [357, 3, 1, "", "test_normalizeNames"], [357, 3, 1, "", "test_representation"], [357, 3, 1, "", "test_updateNumberOfColumns"]], "armi.reactor.tests.test_flags": [[358, 2, 1, "", "TestFlags"]], "armi.reactor.tests.test_flags.TestFlags": [[358, 3, 1, "", "test_convertsStringsWithNonFlags"], [358, 3, 1, "", "test_defaultIsFalse"], [358, 3, 1, "", "test_flagsDefinedWithNumbers"], [358, 3, 1, "", "test_flagsToAndFromString"], [358, 3, 1, "", "test_fromString"], [358, 3, 1, "", "test_fromStringStrict"], [358, 3, 1, "", "test_fromStringWithNumbers"], [358, 3, 1, "", "test_isPickleable"], [358, 3, 1, "", "test_lookup"], [358, 3, 1, "", "test_toStringAlphabetical"]], "armi.reactor.tests.test_geometry": [[359, 2, 1, "", "TestGeomType"], [359, 2, 1, "", "TestSymmetryType"], [359, 2, 1, "", "TestSystemLayoutInput"], [359, 2, 1, "", "TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry.TestGeomType": [[359, 3, 1, "", "test_fromStr"], [359, 3, 1, "", "test_label"], [359, 3, 1, "", "test_str"]], "armi.reactor.tests.test_geometry.TestSymmetryType": [[359, 3, 1, "", "test_SymmetryFactor"], [359, 3, 1, "", "test_baseConstructor"], [359, 3, 1, "", "test_checkValidGeomSymmetryCombo"], [359, 3, 1, "", "test_domainTypeNulls"], [359, 3, 1, "", "test_fromAny"], [359, 3, 1, "", "test_fromStr"], [359, 3, 1, "", "test_label"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInput": [[359, 3, 1, "", "test_asciimap"], [359, 3, 1, "", "test_growToFullCore"], [359, 3, 1, "", "test_readAsciimap"], [359, 3, 1, "", "test_readHexGeomXML"], [359, 3, 1, "", "test_readReactor"], [359, 3, 1, "", "test_yamlIO"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ": [[359, 3, 1, "", "test_TRZyamlIO"], [359, 3, 1, "", "test_readTRZGeomXML"]], "armi.reactor.tests.test_parameters": [[360, 2, 1, "", "MockComposite"], [360, 2, 1, "", "MockCompositeChild"], [360, 2, 1, "", "MockCompositeGrandParent"], [360, 2, 1, "", "MockCompositeParent"], [360, 2, 1, "", "ParamCollectionWhere"], [360, 2, 1, "", "ParameterTests"], [360, 2, 1, "", "TestMakeParametersReadOnly"]], "armi.reactor.tests.test_parameters.ParamCollectionWhere": [[360, 2, 1, "", "ScopeParamCollection"], [360, 3, 1, "", "test_complicated"], [360, 3, 1, "", "test_onCategory"], [360, 3, 1, "", "test_onLocation"]], "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection": [[360, 4, 1, "", "pDefs"], [360, 4, 1, "", "pb"]], "armi.reactor.tests.test_parameters.ParameterTests": [[360, 3, 1, "", "test_attemptingToSetParamWithoutSetterFails"], [360, 3, 1, "", "test_cannotCreateAttrbuteOnParameterCollectionSubclass"], [360, 3, 1, "", "test_cannotCreateInstanceOf_NoDefault"], [360, 3, 1, "", "test_cannotCreateInstanceOf_Undefined"], [360, 3, 1, "", "test_cannotDefineParameterWithSameName"], [360, 3, 1, "", "test_cannotDefineParameterWithSameNameForCollectionSubclass"], [360, 3, 1, "", "test_categories"], [360, 3, 1, "", "test_defaultLocation"], [360, 3, 1, "", "test_getWithoutDefaultRaisesParameterError"], [360, 3, 1, "", "test_mutableDefaultsNotSupported"], [360, 3, 1, "", "test_paramDefinitionsCompose"], [360, 3, 1, "", "test_paramPropertyDoesNotConflict"], [360, 3, 1, "", "test_paramPropertyDoesNotConflictWithNoneDefault"], [360, 3, 1, "", "test_parameterCollectionsHave__slots__"], [360, 3, 1, "", "test_serializer_pack_unpack"], [360, 3, 1, "", "test_setter"], [360, 3, 1, "", "test_setterGetterBasics"], [360, 3, 1, "", "test_writeSomeParamsToDB"]], "armi.reactor.tests.test_parameters.TestMakeParametersReadOnly": [[360, 3, 1, "", "test_makeParametersReadOnly"]], "armi.reactor.tests.test_reactors": [[361, 2, 1, "", "CartesianReactorNeighborTests"], [361, 2, 1, "", "CartesianReactorTests"], [361, 2, 1, "", "HexReactorTests"], [361, 2, 1, "", "ReactorTests"], [361, 1, 1, "", "buildOperatorOfEmptyCartesianBlocks"], [361, 1, 1, "", "buildOperatorOfEmptyHexBlocks"], [361, 1, 1, "", "loadTestReactor"], [361, 1, 1, "", "reduceTestReactorRings"]], "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests": [[361, 3, 1, "", "test_findNeighborsCartesian"]], "armi.reactor.tests.test_reactors.CartesianReactorTests": [[361, 3, 1, "", "test_add"], [361, 3, 1, "", "test_getAssembliesInSquareRing"], [361, 3, 1, "", "test_getAssemblyPitch"], [361, 3, 1, "", "test_getNuclideCategoriesLogging"]], "armi.reactor.tests.test_reactors.HexReactorTests": [[361, 3, 1, "", "test_addMoreNodes"], [361, 3, 1, "", "test_addMultipleCores"], [361, 3, 1, "", "test_applyThermalExpansion_CoreConstruct"], [361, 3, 1, "", "test_buildManualZones"], [361, 3, 1, "", "test_buildManualZonesEmpty"], [361, 3, 1, "", "test_coreSfp"], [361, 3, 1, "", "test_countBlocksOfType"], [361, 3, 1, "", "test_countFuelAxialBlocks"], [361, 3, 1, "", "test_createAssemblyOfType"], [361, 3, 1, "", "test_createAssemblyOfTypeExpandedCore"], [361, 3, 1, "", "test_createFreshFeed"], [361, 3, 1, "", "test_differentNuclideModels"], [361, 3, 1, "", "test_factorySortSetting"], [361, 3, 1, "", "test_findAllAxialMeshPoints"], [361, 3, 1, "", "test_findAllAxialMeshPoints_wSubmesh"], [361, 3, 1, "", "test_findAllAziMeshPoints"], [361, 3, 1, "", "test_findAllMeshPoints"], [361, 3, 1, "", "test_findAllRadMeshPoints"], [361, 3, 1, "", "test_findAxialMeshIndexOf"], [361, 3, 1, "", "test_findNeighbors"], [361, 3, 1, "", "test_genAssembliesAddedThisCycle"], [361, 3, 1, "", "test_genBlocksByLocName"], [361, 3, 1, "", "test_geomType"], [361, 3, 1, "", "test_getAllXsSuffixes"], [361, 3, 1, "", "test_getAssembliesInCircularRing"], [361, 3, 1, "", "test_getAssembliesInHexRing"], [361, 3, 1, "", "test_getAssembliesOnSymmetryLine"], [361, 3, 1, "", "test_getAssemblyPitch"], [361, 3, 1, "", "test_getAssemblyWithLoc"], [361, 3, 1, "", "test_getAssemblyWithName"], [361, 3, 1, "", "test_getAvgTemp"], [361, 3, 1, "", "test_getBlocksByIndices"], [361, 3, 1, "", "test_getDominantMaterial"], [361, 3, 1, "", "test_getFirstFuelBlockAxialNode"], [361, 3, 1, "", "test_getFluxVector"], [361, 3, 1, "", "test_getFuelBottomHeight"], [361, 3, 1, "", "test_getGridBounds"], [361, 3, 1, "", "test_getMass"], [361, 3, 1, "", "test_getMaxAssembliesInHexRing"], [361, 3, 1, "", "test_getMaxNumPins"], [361, 3, 1, "", "test_getMinimumPercentFluxInFuel"], [361, 3, 1, "", "test_getNozzleTypes"], [361, 3, 1, "", "test_getNuclideCategories"], [361, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOut"], [361, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOutBipass"], [361, 3, 1, "", "test_getNumEnergyGroups"], [361, 3, 1, "", "test_getNumRings"], [361, 3, 1, "", "test_getReactor"], [361, 3, 1, "", "test_getScalarEvolution"], [361, 3, 1, "", "test_getSetParameters"], [361, 3, 1, "", "test_getSymmetryFactor"], [361, 3, 1, "", "test_getTotalParam"], [361, 3, 1, "", "test_growToFullCore"], [361, 3, 1, "", "test_ifMissingSpatialGrid"], [361, 3, 1, "", "test_isPickleable"], [361, 3, 1, "", "test_locations"], [361, 3, 1, "", "test_nonUniformAssems"], [361, 3, 1, "", "test_normalizeNames"], [361, 3, 1, "", "test_pinCoordsAllBlocks"], [361, 3, 1, "", "test_removeAssembliesInRing"], [361, 3, 1, "", "test_removeAssembliesInRingByCount"], [361, 3, 1, "", "test_removeAssembliesInRingHex"], [361, 3, 1, "", "test_removeAssembly"], [361, 3, 1, "", "test_removeAssemblyNoSfp"], [361, 3, 1, "", "test_restoreReactor"], [361, 3, 1, "", "test_saveAllFlux"], [361, 3, 1, "", "test_setB10VolOnCreation"], [361, 3, 1, "", "test_setPitchUniform"], [361, 3, 1, "", "test_setPowerIfNecessary"], [361, 3, 1, "", "test_sortAssemByRing"], [361, 3, 1, "", "test_sortChildren"], [361, 3, 1, "", "test_updateBlockBOLHeights_DBLoad"], [361, 3, 1, "", "test_whenNoAssemblies"]], "armi.reactor.tests.test_rz_reactors": [[362, 2, 1, "", "TestRZTReactor"], [362, 2, 1, "", "TestRZTReactorModern"]], "armi.reactor.tests.test_rz_reactors.TestRZTReactor": [[362, 3, 1, "", "test_findAllMeshPoints"], [362, 3, 1, "", "test_loadRZT"]], "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern": [[362, 3, 1, "", "test_loadRZT_reactor"]], "armi.reactor.tests.test_zones": [[363, 2, 1, "", "TestZone"], [363, 2, 1, "", "TestZones"]], "armi.reactor.tests.test_zones.TestZone": [[363, 3, 1, "", "test_addItem"], [363, 3, 1, "", "test_addItems"], [363, 3, 1, "", "test_addLoc"], [363, 3, 1, "", "test_addLocs"], [363, 3, 1, "", "test_blocks"], [363, 3, 1, "", "test_iteration"], [363, 3, 1, "", "test_removeItem"], [363, 3, 1, "", "test_removeItems"], [363, 3, 1, "", "test_removeLoc"], [363, 3, 1, "", "test_removeLocs"], [363, 3, 1, "", "test_repr"]], "armi.reactor.tests.test_zones.TestZones": [[363, 3, 1, "", "test_dictionaryInterface"], [363, 3, 1, "", "test_findZoneItIsIn"], [363, 3, 1, "", "test_getAllLocations"], [363, 3, 1, "", "test_getZoneLocations"], [363, 3, 1, "", "test_sortZones"], [363, 3, 1, "", "test_summary"]], "armi.reactor.zones": [[364, 2, 1, "", "Zone"], [364, 2, 1, "", "Zones"]], "armi.reactor.zones.Zone": [[364, 4, 1, "", "VALID_TYPES"], [364, 3, 1, "", "addItem"], [364, 3, 1, "", "addItems"], [364, 3, 1, "", "addLoc"], [364, 3, 1, "", "addLocs"], [364, 3, 1, "", "removeItem"], [364, 3, 1, "", "removeItems"], [364, 3, 1, "", "removeLoc"], [364, 3, 1, "", "removeLocs"]], "armi.reactor.zones.Zones": [[364, 3, 1, "", "addZone"], [364, 3, 1, "", "addZones"], [364, 3, 1, "", "checkDuplicates"], [364, 3, 1, "", "findZoneItIsIn"], [364, 3, 1, "", "getAllLocations"], [364, 3, 1, "", "getZoneLocations"], [364, 5, 1, "", "names"], [364, 3, 1, "", "removeZone"], [364, 3, 1, "", "removeZones"], [364, 3, 1, "", "sortZones"], [364, 3, 1, "", "summary"]], "armi.runLog": [[365, 2, 1, "", "DeduplicationFilter"], [365, 2, 1, "", "NullLogger"], [365, 2, 1, "", "RunLogger"], [365, 1, 1, "", "close"], [365, 1, 1, "", "concatenateLogs"], [365, 1, 1, "", "createLogDir"], [365, 1, 1, "", "debug"], [365, 1, 1, "", "error"], [365, 1, 1, "", "extra"], [365, 1, 1, "", "getVerbosity"], [365, 1, 1, "", "header"], [365, 1, 1, "", "important"], [365, 1, 1, "", "info"], [365, 1, 1, "", "logFactory"], [365, 1, 1, "", "raw"], [365, 1, 1, "", "setVerbosity"], [365, 1, 1, "", "warning"], [365, 1, 1, "", "warningReport"]], "armi.runLog.DeduplicationFilter": [[365, 3, 1, "", "filter"]], "armi.runLog.NullLogger": [[365, 3, 1, "", "addHandler"]], "armi.runLog.RunLogger": [[365, 4, 1, "", "FMT"], [365, 3, 1, "", "allowStopDuplicates"], [365, 3, 1, "", "close"], [365, 3, 1, "", "flush"], [365, 3, 1, "", "getDuplicatesFilter"], [365, 3, 1, "", "log"], [365, 3, 1, "", "setVerbosity"], [365, 3, 1, "", "warningReport"], [365, 3, 1, "", "write"]], "armi.settings": [[367, 0, 0, "-", "caseSettings"], [368, 0, 0, "-", "fwSettings"], [366, 1, 1, "", "isBoolSetting"], [366, 1, 1, "", "promptForSettingsFile"], [366, 1, 1, "", "recursivelyLoadSettingsFiles"], [373, 0, 0, "-", "setting"], [374, 0, 0, "-", "settingsIO"], [375, 0, 0, "-", "settingsValidation"], [376, 0, 0, "-", "tests"]], "armi.settings.caseSettings": [[367, 2, 1, "", "Settings"]], "armi.settings.caseSettings.Settings": [[367, 5, 1, "", "caseTitle"], [367, 4, 1, "", "defaultCaseTitle"], [367, 3, 1, "", "duplicate"], [367, 5, 1, "", "environmentSettings"], [367, 3, 1, "", "failOnLoad"], [367, 3, 1, "", "getSetting"], [367, 3, 1, "", "getSettingsSetByUser"], [367, 3, 1, "", "initLogVerbosity"], [367, 5, 1, "", "inputDirectory"], [367, 3, 1, "", "items"], [367, 3, 1, "", "keys"], [367, 3, 1, "", "loadFromInputFile"], [367, 3, 1, "", "loadFromString"], [367, 3, 1, "", "modified"], [367, 3, 1, "", "registerUserPlugins"], [367, 3, 1, "", "revertToDefaults"], [367, 3, 1, "", "setModuleVerbosities"], [367, 3, 1, "", "updateEnvironmentSettingsFrom"], [367, 3, 1, "", "values"], [367, 3, 1, "", "writeToYamlFile"], [367, 3, 1, "", "writeToYamlStream"]], "armi.settings.fwSettings": [[369, 0, 0, "-", "databaseSettings"], [368, 1, 1, "", "getFrameworkSettings"], [370, 0, 0, "-", "globalSettings"], [371, 0, 0, "-", "reportSettings"], [372, 0, 0, "-", "tightCouplingSettings"]], "armi.settings.fwSettings.databaseSettings": [[369, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.globalSettings": [[370, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.reportSettings": [[371, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.tightCouplingSettings": [[372, 2, 1, "", "TightCouplingSettingDef"], [372, 2, 1, "", "TightCouplingSettings"], [372, 1, 1, "", "serializeTightCouplingSettings"], [372, 1, 1, "", "tightCouplingSettingsValidator"]], "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef": [[372, 3, 1, "", "dump"]], "armi.settings.setting": [[373, 2, 1, "", "Default"], [373, 2, 1, "", "FlagListSetting"], [373, 2, 1, "", "Option"], [373, 2, 1, "", "Setting"]], "armi.settings.setting.Default": [[373, 4, 1, "", "settingName"], [373, 4, 1, "", "value"]], "armi.settings.setting.FlagListSetting": [[373, 3, 1, "", "dump"], [373, 3, 1, "", "schema"]], "armi.settings.setting.Option": [[373, 4, 1, "", "option"], [373, 4, 1, "", "settingName"]], "armi.settings.setting.Setting": [[373, 3, 1, "", "addOption"], [373, 3, 1, "", "addOptions"], [373, 3, 1, "", "changeDefault"], [373, 5, 1, "", "containedType"], [373, 5, 1, "", "default"], [373, 3, 1, "", "dump"], [373, 3, 1, "", "getCustomAttributes"], [373, 3, 1, "", "getDefaultAttributes"], [373, 3, 1, "", "isDefault"], [373, 5, 1, "", "offDefault"], [373, 3, 1, "", "revertToDefault"], [373, 3, 1, "", "setValue"], [373, 5, 1, "", "underlyingType"], [373, 5, 1, "", "value"]], "armi.settings.settingsIO": [[374, 2, 1, "", "Roots"], [374, 7, 1, "", "RunLogPromptCancel"], [374, 7, 1, "", "RunLogPromptUnresolvable"], [374, 2, 1, "", "SettingRenamer"], [374, 2, 1, "", "SettingsReader"], [374, 2, 1, "", "SettingsWriter"], [374, 1, 1, "", "prompt"]], "armi.settings.settingsIO.Roots": [[374, 4, 1, "", "CUSTOM"], [374, 4, 1, "", "VERSION"]], "armi.settings.settingsIO.SettingRenamer": [[374, 3, 1, "", "renameSetting"]], "armi.settings.settingsIO.SettingsReader": [[374, 2, 1, "", "SettingsInputFormat"], [374, 3, 1, "", "readFromFile"], [374, 3, 1, "", "readFromStream"]], "armi.settings.settingsIO.SettingsReader.SettingsInputFormat": [[374, 4, 1, "", "YAML"], [374, 3, 1, "", "fromExt"]], "armi.settings.settingsIO.SettingsWriter": [[374, 3, 1, "", "writeYaml"]], "armi.settings.settingsValidation": [[375, 2, 1, "", "Inspector"], [375, 2, 1, "", "Query"], [375, 1, 1, "", "createQueryRevertBadPathToDefault"], [375, 1, 1, "", "validateVersion"]], "armi.settings.settingsValidation.Inspector": [[375, 3, 1, "", "NO_ACTION"], [375, 3, 1, "", "addQuery"], [375, 3, 1, "", "addQueryBadLocationWillLikelyFail"], [375, 3, 1, "", "addQueryCurrentSettingMayNotSupportFeatures"], [375, 3, 1, "", "run"]], "armi.settings.settingsValidation.Query": [[375, 3, 1, "", "isCorrective"], [375, 3, 1, "", "resolve"]], "armi.settings.tests": [[377, 0, 0, "-", "test_inspectors"], [378, 0, 0, "-", "test_settings"], [379, 0, 0, "-", "test_settingsIO"]], "armi.settings.tests.test_inspectors": [[377, 2, 1, "", "TestInspector"]], "armi.settings.tests.test_inspectors.TestInspector": [[377, 3, 1, "", "test_assignCS"], [377, 3, 1, "", "test_callableCorrectionCheck"], [377, 3, 1, "", "test_changeOfCS"], [377, 3, 1, "", "test_checkForBothSimpleAndDetailedCyclesInputs"], [377, 3, 1, "", "test_correctCyclesToZeroBurnup"], [377, 3, 1, "", "test_createQueryRevertBadPathToDefault"], [377, 3, 1, "", "test_nonCorrectiveQuery"], [377, 3, 1, "", "test_overwriteSettingsCorrectiveQuery"], [377, 3, 1, "", "test_query"]], "armi.settings.tests.test_settings": [[378, 2, 1, "", "DummySettingPlugin1"], [378, 2, 1, "", "DummySettingPlugin2"], [378, 2, 1, "", "PluginAddsOptions"], [378, 2, 1, "", "TestAddingOptions"], [378, 2, 1, "", "TestFlagListSetting"], [378, 2, 1, "", "TestSettings"], [378, 2, 1, "", "TestSettings2"], [378, 2, 1, "", "TestSettingsUtils"], [378, 2, 1, "", "TestSettingsValidationUtils"]], "armi.settings.tests.test_settings.DummySettingPlugin1": [[378, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.DummySettingPlugin2": [[378, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.PluginAddsOptions": [[378, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.TestAddingOptions": [[378, 3, 1, "", "test_addingOptions"]], "armi.settings.tests.test_settings.TestFlagListSetting": [[378, 3, 1, "", "test_flagListSetting"], [378, 3, 1, "", "test_invalidFlagListTypeError"]], "armi.settings.tests.test_settings.TestSettings": [[378, 3, 1, "", "test_metaData"], [378, 3, 1, "", "test_updateEnvironmentSettingsFrom"]], "armi.settings.tests.test_settings.TestSettings2": [[378, 3, 1, "", "test_copySetting"], [378, 3, 1, "", "test_copySettingNotDefault"], [378, 3, 1, "", "test_csWorks"], [378, 3, 1, "", "test_default"], [378, 3, 1, "", "test_empty"], [378, 3, 1, "", "test_getFailures"], [378, 3, 1, "", "test_getSettingsSetByUser"], [378, 3, 1, "", "test_listCoercion"], [378, 3, 1, "", "test_listsMutable"], [378, 3, 1, "", "test_modified"], [378, 3, 1, "", "test_pluginSettings"], [378, 3, 1, "", "test_pluginValidatorsAreDiscovered"], [378, 3, 1, "", "test_schemaChecksType"], [378, 3, 1, "", "test_setModuleVerbosities"], [378, 3, 1, "", "test_settingIsOkayToGrab"], [378, 3, 1, "", "test_typeDetection"]], "armi.settings.tests.test_settings.TestSettingsUtils": [[378, 3, 1, "", "test_prompt"], [378, 3, 1, "", "test_recursiveScan"]], "armi.settings.tests.test_settings.TestSettingsValidationUtils": [[378, 3, 1, "", "test_validateVersion"]], "armi.settings.tests.test_settingsIO": [[379, 2, 1, "", "MockEntryPoint"], [379, 2, 1, "", "SettingArgsTests"], [379, 2, 1, "", "SettingsFailureTests"], [379, 2, 1, "", "SettingsReaderTests"], [379, 2, 1, "", "SettingsRenameTests"], [379, 2, 1, "", "SettingsWriterTests"]], "armi.settings.tests.test_settingsIO.MockEntryPoint": [[379, 4, 1, "", "name"], [379, 4, 1, "", "settingsArgument"]], "armi.settings.tests.test_settingsIO.SettingArgsTests": [[379, 3, 1, "", "test_cannotLoadSettingsAfterParsingCommandLineSetting"], [379, 3, 1, "", "test_commandLineSetting"]], "armi.settings.tests.test_settingsIO.SettingsFailureTests": [[379, 3, 1, "", "test_invalidFile"], [379, 3, 1, "", "test_loadFromYamlFailsOnBadNames"], [379, 3, 1, "", "test_settingsObjSetting"]], "armi.settings.tests.test_settingsIO.SettingsReaderTests": [[379, 3, 1, "", "test_basicSettingsReader"], [379, 3, 1, "", "test_readFromFile"]], "armi.settings.tests.test_settingsIO.SettingsRenameTests": [[379, 4, 1, "", "testSettings"], [379, 3, 1, "", "test_collidingRenames"], [379, 3, 1, "", "test_rename"]], "armi.settings.tests.test_settingsIO.SettingsWriterTests": [[379, 3, 1, "", "test_errorSettingsWriter"], [379, 3, 1, "", "test_writeFull"], [379, 3, 1, "", "test_writeMedium"], [379, 3, 1, "", "test_writeShort"], [379, 3, 1, "", "test_writeYaml"]], "armi.tests": [[380, 2, 1, "", "ArmiTestHelper"], [380, 2, 1, "", "Fixture"], [380, 1, 1, "", "fixture"], [380, 1, 1, "", "getEmptyCartesianReactor"], [380, 1, 1, "", "getEmptyHexReactor"], [381, 0, 0, "-", "mockRunLogs"], [380, 1, 1, "", "rebaselineTextComparisons"], [382, 0, 0, "-", "refSmallReactorShuffleLogic"], [380, 1, 1, "", "requires_fixture"], [383, 0, 0, "-", "test_apps"], [384, 0, 0, "-", "test_armiTestHelper"], [385, 0, 0, "-", "test_cartesian"], [386, 0, 0, "-", "test_context"], [387, 0, 0, "-", "test_interfaces"], [388, 0, 0, "-", "test_lwrInputs"], [389, 0, 0, "-", "test_mpiActions"], [390, 0, 0, "-", "test_mpiFeatures"], [391, 0, 0, "-", "test_mpiParameters"], [392, 0, 0, "-", "test_notebooks"], [393, 0, 0, "-", "test_plugins"], [394, 0, 0, "-", "test_runLog"], [395, 0, 0, "-", "test_tests"], [396, 0, 0, "-", "test_user_plugins"]], "armi.tests.ArmiTestHelper": [[380, 3, 1, "", "compareFilesLineByLine"], [380, 3, 1, "", "compareLines"]], "armi.tests.mockRunLogs": [[381, 2, 1, "", "BufferLog"], [381, 2, 1, "", "LogCounter"]], "armi.tests.mockRunLogs.BufferLog": [[381, 3, 1, "", "clearSingleWarnings"], [381, 3, 1, "", "emptyStdout"], [381, 3, 1, "", "getStderrValue"], [381, 3, 1, "", "getStdout"], [381, 3, 1, "", "log"]], "armi.tests.mockRunLogs.LogCounter": [[381, 3, 1, "", "log"]], "armi.tests.refSmallReactorShuffleLogic": [[382, 2, 1, "", "EquilibriumShuffler"], [382, 1, 1, "", "getFactorList"]], "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler": [[382, 3, 1, "", "chooseSwaps"]], "armi.tests.test_apps": [[383, 2, 1, "", "TestApps"], [383, 2, 1, "", "TestArmiHighLevel"], [383, 2, 1, "", "TestPlugin1"], [383, 2, 1, "", "TestPlugin2"], [383, 2, 1, "", "TestPlugin3"], [383, 2, 1, "", "TestPlugin4"]], "armi.tests.test_apps.TestApps": [[383, 3, 1, "", "test_disableFutureConfigures"], [383, 3, 1, "", "test_getParamRenames"], [383, 3, 1, "", "test_getParamRenamesInvalids"], [383, 3, 1, "", "test_getSettings"], [383, 3, 1, "", "test_isStableReleaseVersion"], [383, 3, 1, "", "test_registerPluginFlags"], [383, 3, 1, "", "test_splashText"], [383, 3, 1, "", "test_splashTextDifferentApp"], [383, 3, 1, "", "test_version"]], "armi.tests.test_apps.TestArmiHighLevel": [[383, 3, 1, "", "test_getDefaultPluginManager"], [383, 3, 1, "", "test_main"], [383, 3, 1, "", "test_overConfigured"]], "armi.tests.test_apps.TestPlugin1": [[383, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin2": [[383, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin3": [[383, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin4": [[383, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_armiTestHelper": [[384, 2, 1, "", "TestArmiTestHelper"]], "armi.tests.test_armiTestHelper.TestArmiTestHelper": [[384, 3, 1, "", "test_compareFilesFail"], [384, 3, 1, "", "test_compareFilesSucceedFalseNegative"], [384, 3, 1, "", "test_compareFilesSucess"]], "armi.tests.test_cartesian": [[385, 2, 1, "", "CartesianReactorTests"]], "armi.tests.test_cartesian.CartesianReactorTests": [[385, 3, 1, "", "test_custom"]], "armi.tests.test_context": [[386, 2, 1, "", "TestContextSerial"]], "armi.tests.test_context.TestContextSerial": [[386, 3, 1, "", "test_nonNoneData"], [386, 3, 1, "", "test_rank"]], "armi.tests.test_interfaces": [[387, 2, 1, "", "DummyInterface"], [387, 2, 1, "", "TestCodeInterface"], [387, 2, 1, "", "TestTextProcessor"], [387, 2, 1, "", "TestTightCoupler"]], "armi.tests.test_interfaces.DummyInterface": [[387, 4, 1, "", "function"], [387, 4, 1, "", "name"]], "armi.tests.test_interfaces.TestCodeInterface": [[387, 3, 1, "", "test_distributable"], [387, 3, 1, "", "test_duplicate"], [387, 3, 1, "", "test_enabled"], [387, 3, 1, "", "test_isRequestedDetailPoint"], [387, 3, 1, "", "test_nameContains"], [387, 3, 1, "", "test_preDistributeState"]], "armi.tests.test_interfaces.TestTextProcessor": [[387, 3, 1, "", "test_fsearch"], [387, 3, 1, "", "test_fsearch_text"]], "armi.tests.test_interfaces.TestTightCoupler": [[387, 3, 1, "", "test_couplerActive"], [387, 3, 1, "", "test_getListDimension"], [387, 3, 1, "", "test_isConverged"], [387, 3, 1, "", "test_isConvergedRuntimeError"], [387, 3, 1, "", "test_isConvergedValueError"], [387, 3, 1, "", "test_storePreviousIterationValue"], [387, 3, 1, "", "test_storePreviousIterationValueException"]], "armi.tests.test_lwrInputs": [[388, 2, 1, "", "C5G7ReactorTests"]], "armi.tests.test_lwrInputs.C5G7ReactorTests": [[388, 3, 1, "", "test_loadC5G7"]], "armi.tests.test_mpiActions": [[389, 2, 1, "", "MpiIterTests"], [389, 2, 1, "", "QueueActionsTests"], [389, 1, 1, "", "passer"]], "armi.tests.test_mpiActions.MpiIterTests": [[389, 3, 1, "", "test_diagnosePickleErrorTestReactor"], [389, 3, 1, "", "test_excessProcesses"], [389, 3, 1, "", "test_mpiIter"], [389, 3, 1, "", "test_parallel"], [389, 3, 1, "", "test_perfectBalancing"], [389, 3, 1, "", "test_runActionsDistributeStateAction"], [389, 3, 1, "", "test_runActionsDistributionAction"], [389, 3, 1, "", "test_serialGather"], [389, 3, 1, "", "test_typicalBalancing"]], "armi.tests.test_mpiActions.QueueActionsTests": [[389, 3, 1, "", "test_disableForExclusiveTasks"], [389, 3, 1, "", "test_makeQueue"]], "armi.tests.test_mpiFeatures": [[390, 2, 1, "", "BcastAction1"], [390, 2, 1, "", "BcastAction2"], [390, 2, 1, "", "FailingInterface1"], [390, 2, 1, "", "FailingInterface2"], [390, 2, 1, "", "FailingInterface3"], [390, 2, 1, "", "MockInterface"], [390, 2, 1, "", "MpiDistributeStateTests"], [390, 2, 1, "", "MpiOperatorTests"], [390, 2, 1, "", "MpiPathToolsTests"], [390, 2, 1, "", "TestContextMpi"]], "armi.tests.test_mpiFeatures.BcastAction1": [[390, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.BcastAction2": [[390, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.FailingInterface1": [[390, 3, 1, "", "interactEveryNode"], [390, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface2": [[390, 3, 1, "", "interactEveryNode"], [390, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface3": [[390, 3, 1, "", "fail"], [390, 3, 1, "", "interactEveryNode"], [390, 4, 1, "", "name"], [390, 3, 1, "", "workerOperate"]], "armi.tests.test_mpiFeatures.MockInterface": [[390, 3, 1, "", "interactInit"], [390, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.MpiDistributeStateTests": [[390, 3, 1, "", "test_compileResults"], [390, 3, 1, "", "test_distributeInterfaces"], [390, 3, 1, "", "test_distributeReactor"], [390, 3, 1, "", "test_distributeSettings"], [390, 3, 1, "", "test_distributeState"]], "armi.tests.test_mpiFeatures.MpiOperatorTests": [[390, 3, 1, "", "test_basicOperatorMPI"], [390, 3, 1, "", "test_finalizeInteract"], [390, 3, 1, "", "test_primaryCritical"], [390, 3, 1, "", "test_primaryException"]], "armi.tests.test_mpiFeatures.MpiPathToolsTests": [[390, 3, 1, "", "test_cleanPathMpi"]], "armi.tests.test_mpiFeatures.TestContextMpi": [[390, 3, 1, "", "test_nonNoneData"], [390, 3, 1, "", "test_rank"]], "armi.tests.test_mpiParameters": [[391, 2, 1, "", "MockSyncPC"], [391, 2, 1, "", "SynchronizationTests"], [391, 1, 1, "", "makeComp"]], "armi.tests.test_mpiParameters.MockSyncPC": [[391, 4, 1, "", "pDefs"], [391, 4, 1, "", "pb"]], "armi.tests.test_mpiParameters.SynchronizationTests": [[391, 3, 1, "", "test_conflictsMaintainWithStateRetainer"], [391, 3, 1, "", "test_noConflicts"], [391, 3, 1, "", "test_withConflicts"], [391, 3, 1, "", "test_withConflictsButSameValue"]], "armi.tests.test_notebooks": [[392, 2, 1, "", "NotebookTests"], [392, 1, 1, "", "runNotebook"]], "armi.tests.test_notebooks.NotebookTests": [[392, 3, 1, "", "test_runDataModel"], [392, 3, 1, "", "test_runParamSweep"]], "armi.tests.test_plugins": [[393, 2, 1, "", "BeforeReactorPlugin"], [393, 2, 1, "", "PluginFlags1"], [393, 2, 1, "", "SillyAxialExpansionChanger"], [393, 2, 1, "", "SillyAxialPlugin"], [393, 2, 1, "", "TestPlugin"], [393, 2, 1, "", "TestPluginBasics"], [393, 2, 1, "", "TestPluginRegistration"]], "armi.tests.test_plugins.BeforeReactorPlugin": [[393, 3, 1, "", "beforeReactorConstruction"]], "armi.tests.test_plugins.PluginFlags1": [[393, 3, 1, "", "defineFlags"]], "armi.tests.test_plugins.SillyAxialPlugin": [[393, 3, 1, "", "getAxialExpansionChanger"]], "armi.tests.test_plugins.TestPlugin": [[393, 4, 1, "", "plugin"], [393, 3, 1, "", "test_defineBlueprintsSections"], [393, 3, 1, "", "test_exposeInterfaces"]], "armi.tests.test_plugins.TestPluginBasics": [[393, 3, 1, "", "test_defineParameters"], [393, 3, 1, "", "test_exposeInterfaces"], [393, 3, 1, "", "test_pluginsExposeInterfaces"]], "armi.tests.test_plugins.TestPluginRegistration": [[393, 3, 1, "", "test_axialExpansionHook"], [393, 3, 1, "", "test_beforeReactorConstructionHook"], [393, 3, 1, "", "test_defineFlags"], [393, 3, 1, "", "test_passiveDBLoadPlugin"]], "armi.tests.test_runLog": [[394, 2, 1, "", "TestRunLog"], [394, 2, 1, "", "TestRunLogger"]], "armi.tests.test_runLog.TestRunLog": [[394, 3, 1, "", "test_callingStartLogMultipleTimes"], [394, 3, 1, "", "test_closeLogging"], [394, 3, 1, "", "test_concatenateLogs"], [394, 3, 1, "", "test_createLogDir"], [394, 3, 1, "", "test_getWhiteSpace"], [394, 3, 1, "", "test_invalidSetVerbosityByString"], [394, 3, 1, "", "test_parentRunLogging"], [394, 3, 1, "", "test_setVerbosity"], [394, 3, 1, "", "test_setVerbosityBeforeStartLog"], [394, 3, 1, "", "test_setVerbosityFromInteger"], [394, 3, 1, "", "test_setVerbosityFromString"], [394, 3, 1, "", "test_verbosityOutOfRange"], [394, 3, 1, "", "test_warningReport"], [394, 3, 1, "", "test_warningReportInvalid"]], "armi.tests.test_runLog.TestRunLogger": [[394, 3, 1, "", "test_allowStopDuplicates"], [394, 3, 1, "", "test_getDuplicatesFilter"], [394, 3, 1, "", "test_write"]], "armi.tests.test_tests": [[395, 2, 1, "", "TestCompareFiles"]], "armi.tests.test_tests.TestCompareFiles": [[395, 3, 1, "", "test_compareFileLine"]], "armi.tests.test_user_plugins": [[396, 2, 1, "", "TestUserPlugins"], [396, 2, 1, "", "UpInterface"], [396, 2, 1, "", "UserPluginBadDefineParameterRenames"], [396, 2, 1, "", "UserPluginBadDefinesSettings"], [396, 2, 1, "", "UserPluginFlags"], [396, 2, 1, "", "UserPluginFlags2"], [396, 2, 1, "", "UserPluginFlags3"], [396, 2, 1, "", "UserPluginOnProcessCoreLoading"], [396, 2, 1, "", "UserPluginWithInterface"]], "armi.tests.test_user_plugins.TestUserPlugins": [[396, 3, 1, "", "test_registerRepeatedUserPlugins"], [396, 3, 1, "", "test_registerUserPlugins"], [396, 3, 1, "", "test_registerUserPluginsAbsPath"], [396, 3, 1, "", "test_registerUserPluginsFromSettings"], [396, 3, 1, "", "test_userPluginOnProcessCoreLoading"], [396, 3, 1, "", "test_userPluginWithInterfaces"], [396, 3, 1, "", "test_userPluginsFlags"], [396, 3, 1, "", "test_validateUserPluginLimitations"]], "armi.tests.test_user_plugins.UpInterface": [[396, 3, 1, "", "interactEveryNode"], [396, 4, 1, "", "name"]], "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames": [[396, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_user_plugins.UserPluginBadDefinesSettings": [[396, 3, 1, "", "defineSettings"]], "armi.tests.test_user_plugins.UserPluginFlags": [[396, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags2": [[396, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags3": [[396, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading": [[396, 3, 1, "", "onProcessCoreLoading"]], "armi.tests.test_user_plugins.UserPluginWithInterface": [[396, 3, 1, "", "exposeInterfaces"]], "armi.utils": [[397, 2, 1, "", "MergeableDict"], [397, 2, 1, "", "MyPickler"], [398, 0, 0, "-", "asciimaps"], [397, 1, 1, "", "capStrLen"], [397, 1, 1, "", "classesInHierarchy"], [399, 0, 0, "-", "codeTiming"], [397, 1, 1, "", "copyWithoutBlocking"], [397, 1, 1, "", "createFormattedStrWithDelimiter"], [400, 0, 0, "-", "customExceptions"], [401, 0, 0, "-", "densityTools"], [402, 0, 0, "-", "directoryChangers"], [403, 0, 0, "-", "directoryChangersMpi"], [397, 1, 1, "", "doTestPickleOnAllContents2"], [404, 0, 0, "-", "dynamicImporter"], [405, 0, 0, "-", "flags"], [397, 1, 1, "", "getAvailabilityFactors"], [397, 1, 1, "", "getBurnSteps"], [397, 1, 1, "", "getCumulativeNodeNum"], [397, 1, 1, "", "getCycleLengths"], [397, 1, 1, "", "getCycleNames"], [397, 1, 1, "", "getCycleNodeFromCumulativeNode"], [397, 1, 1, "", "getCycleNodeFromCumulativeStep"], [397, 1, 1, "", "getFileSHA1Hash"], [397, 1, 1, "", "getMaxBurnSteps"], [397, 1, 1, "", "getNodesPerCycle"], [397, 1, 1, "", "getPowerFractions"], [397, 1, 1, "", "getPreviousTimeNode"], [397, 1, 1, "", "getStepLengths"], [397, 1, 1, "", "hasBurnup"], [407, 0, 0, "-", "hexagon"], [408, 0, 0, "-", "iterables"], [397, 1, 1, "", "list2str"], [409, 0, 0, "-", "mathematics"], [410, 0, 0, "-", "outputCache"], [411, 0, 0, "-", "parsing"], [412, 0, 0, "-", "pathTools"], [397, 1, 1, "", "plotMatrix"], [413, 0, 0, "-", "plotting"], [397, 1, 1, "", "prependToList"], [414, 0, 0, "-", "properties"], [415, 0, 0, "-", "reportPlotting"], [397, 1, 1, "", "safeCopy"], [397, 1, 1, "", "slantSplit"], [416, 0, 0, "-", "tabulate"], [417, 0, 0, "-", "tests"], [439, 0, 0, "-", "textProcessors"], [440, 0, 0, "-", "triangle"], [397, 1, 1, "", "tryPickleOnAllContents"], [397, 1, 1, "", "tryPickleOnAllContents3"], [441, 0, 0, "-", "units"], [397, 1, 1, "", "userName"]], "armi.utils.MergeableDict": [[397, 3, 1, "", "merge"]], "armi.utils.MyPickler": [[397, 3, 1, "", "save"]], "armi.utils.asciimaps": [[398, 2, 1, "", "AsciiMap"], [398, 2, 1, "", "AsciiMapCartesian"], [398, 2, 1, "", "AsciiMapHexFullFlatsUp"], [398, 2, 1, "", "AsciiMapHexFullTipsUp"], [398, 2, 1, "", "AsciiMapHexThirdFlatsUp"], [398, 1, 1, "", "asciiMapFromGeomAndDomain"]], "armi.utils.asciimaps.AsciiMap": [[398, 4, 1, "", "asciiLabelByIndices"], [398, 4, 1, "", "asciiLines"], [398, 4, 1, "", "asciiOffsets"], [398, 3, 1, "", "fromReactor"], [398, 3, 1, "", "gridContentsToAscii"], [398, 3, 1, "", "items"], [398, 3, 1, "", "keys"], [398, 3, 1, "", "readAscii"], [398, 3, 1, "", "writeAscii"]], "armi.utils.codeTiming": [[399, 2, 1, "", "MasterTimer"], [399, 1, 1, "", "getMasterTimer"], [399, 1, 1, "", "timed"]], "armi.utils.codeTiming.MasterTimer": [[399, 3, 1, "", "endTimer"], [399, 3, 1, "", "getActiveTimers"], [399, 3, 1, "", "getMasterTimer"], [399, 3, 1, "", "getTimer"], [399, 3, 1, "", "report"], [399, 3, 1, "", "startAll"], [399, 3, 1, "", "startTimer"], [399, 3, 1, "", "stopAll"], [399, 3, 1, "", "time"], [399, 3, 1, "", "timeline"]], "armi.utils.customExceptions": [[400, 7, 1, "", "InputError"], [400, 7, 1, "", "InvalidSettingsFileError"], [400, 7, 1, "", "InvalidSettingsStopProcess"], [400, 7, 1, "", "NonexistentSetting"], [400, 7, 1, "", "NonexistentSettingsFileError"], [400, 7, 1, "", "SettingException"], [400, 1, 1, "", "important"], [400, 1, 1, "", "info"], [400, 1, 1, "", "warn"], [400, 1, 1, "", "warn_when_root"]], "armi.utils.densityTools": [[401, 1, 1, "", "applyIsotopicsMix"], [401, 1, 1, "", "calculateMassDensity"], [401, 1, 1, "", "calculateNumberDensity"], [401, 1, 1, "", "expandElementalMassFracsToNuclides"], [401, 1, 1, "", "expandElementalNuclideMassFracs"], [401, 1, 1, "", "filterNuclideList"], [401, 1, 1, "", "formatMaterialCard"], [401, 1, 1, "", "getChemicals"], [401, 1, 1, "", "getMassFractions"], [401, 1, 1, "", "getMassInGrams"], [401, 1, 1, "", "getNDensFromMasses"], [401, 1, 1, "", "normalizeNuclideList"]], "armi.utils.directoryChangers": [[402, 2, 1, "", "DirectoryChanger"], [402, 2, 1, "", "ForcedCreationDirectoryChanger"], [402, 2, 1, "", "TemporaryDirectoryChanger"], [402, 1, 1, "", "directoryChangerFactory"]], "armi.utils.directoryChangers.DirectoryChanger": [[402, 3, 1, "", "close"], [402, 3, 1, "", "moveFiles"], [402, 3, 1, "", "open"], [402, 3, 1, "", "retrieveFiles"]], "armi.utils.directoryChangers.TemporaryDirectoryChanger": [[402, 3, 1, "", "GetRandomDirectory"]], "armi.utils.directoryChangersMpi": [[403, 2, 1, "", "MpiDirectoryChanger"]], "armi.utils.directoryChangersMpi.MpiDirectoryChanger": [[403, 3, 1, "", "close"], [403, 3, 1, "", "open"]], "armi.utils.dynamicImporter": [[404, 1, 1, "", "getEntireFamilyTree"]], "armi.utils.flags": [[405, 2, 1, "", "Flag"], [405, 2, 1, "", "auto"]], "armi.utils.flags.Flag": [[405, 3, 1, "", "extend"], [405, 3, 1, "", "fields"], [405, 3, 1, "", "from_bytes"], [405, 3, 1, "", "sortedFields"], [405, 3, 1, "", "to_bytes"], [405, 3, 1, "", "width"]], "armi.utils.hexagon": [[407, 1, 1, "", "area"], [407, 1, 1, "", "corners"], [407, 1, 1, "", "getIndexOfRotatedCell"], [407, 1, 1, "", "numPositionsInRing"], [407, 1, 1, "", "numRingsToHoldNumCells"], [407, 1, 1, "", "pitch"], [407, 1, 1, "", "side"], [407, 1, 1, "", "totalPositionsUpToRing"]], "armi.utils.iterables": [[408, 2, 1, "", "Sequence"], [408, 1, 1, "", "chunk"], [408, 1, 1, "", "flatten"], [408, 1, 1, "", "packBinaryStrings"], [408, 1, 1, "", "packHexStrings"], [408, 1, 1, "", "pivot"], [408, 1, 1, "", "split"], [408, 1, 1, "", "unpackBinaryStrings"], [408, 1, 1, "", "unpackHexStrings"]], "armi.utils.iterables.Sequence": [[408, 3, 1, "", "append"], [408, 3, 1, "", "copy"], [408, 3, 1, "", "drop"], [408, 3, 1, "", "extend"], [408, 3, 1, "", "select"], [408, 3, 1, "", "transform"]], "armi.utils.mathematics": [[409, 1, 1, "", "average1DWithinTolerance"], [409, 1, 1, "", "convertToSlice"], [409, 1, 1, "", "efmt"], [409, 1, 1, "", "expandRepeatedFloats"], [409, 1, 1, "", "findClosest"], [409, 1, 1, "", "findNearestValue"], [409, 1, 1, "", "findNearestValueAndIndex"], [409, 1, 1, "", "fixThreeDigitExp"], [409, 1, 1, "", "getFloat"], [409, 1, 1, "", "getStepsFromValues"], [409, 1, 1, "", "isMonotonic"], [409, 1, 1, "", "linearInterpolation"], [409, 1, 1, "", "minimizeScalarFunc"], [409, 1, 1, "", "newtonsMethod"], [409, 1, 1, "", "parabolaFromPoints"], [409, 1, 1, "", "parabolicInterpolation"], [409, 1, 1, "", "relErr"], [409, 1, 1, "", "resampleStepwise"], [409, 1, 1, "", "rotateXY"]], "armi.utils.outputCache": [[410, 1, 1, "", "cacheCall"], [410, 1, 1, "", "deleteCache"], [410, 1, 1, "", "retrieveOutput"], [410, 1, 1, "", "store"]], "armi.utils.parsing": [[411, 1, 1, "", "datetimeFromStr"], [411, 1, 1, "", "parseValue"], [411, 1, 1, "", "tryLiteralEval"]], "armi.utils.pathTools": [[412, 1, 1, "", "armiAbsPath"], [412, 1, 1, "", "cleanPath"], [412, 1, 1, "", "copyOrWarn"], [412, 1, 1, "", "importCustomPyModule"], [412, 1, 1, "", "isAccessible"], [412, 1, 1, "", "isFilePathNewer"], [412, 1, 1, "", "moduleAndAttributeExist"], [412, 1, 1, "", "separateModuleAndAttribute"]], "armi.utils.plotting": [[413, 2, 1, "", "DepthSlider"], [413, 1, 1, "", "close"], [413, 1, 1, "", "colorGenerator"], [413, 1, 1, "", "makeHistogram"], [413, 1, 1, "", "plotAssemblyTypes"], [413, 1, 1, "", "plotBlockDepthMap"], [413, 1, 1, "", "plotBlockDiagram"], [413, 1, 1, "", "plotBlockFlux"], [413, 1, 1, "", "plotFaceMap"], [413, 1, 1, "", "plotNucXs"]], "armi.utils.plotting.DepthSlider": [[413, 3, 1, "", "next"], [413, 3, 1, "", "previous"], [413, 3, 1, "", "set_val"], [413, 3, 1, "", "updatePageDepthColor"]], "armi.utils.properties": [[414, 7, 1, "", "ImmutablePropertyError"], [414, 1, 1, "", "areEqual"], [414, 1, 1, "", "createImmutableProperty"], [414, 1, 1, "", "lockImmutableProperties"], [414, 1, 1, "", "numpyHackForEqual"], [414, 1, 1, "", "unlockImmutableProperties"]], "armi.utils.reportPlotting": [[415, 1, 1, "", "buVsTime"], [415, 1, 1, "", "createPlotMetaData"], [415, 1, 1, "", "keffVsTime"], [415, 1, 1, "", "movesVsCycle"], [415, 1, 1, "", "plotAxialProfile"], [415, 1, 1, "", "plotCoreOverviewRadar"], [415, 1, 1, "", "plotReactorPerformance"], [415, 1, 1, "", "valueVsTime"], [415, 1, 1, "", "xsHistoryVsTime"]], "armi.utils.tabulate": [[416, 2, 1, "", "DataRow"], [416, 2, 1, "", "Iterable"], [416, 2, 1, "", "Line"], [416, 2, 1, "", "Sized"], [416, 2, 1, "", "TableFormat"], [416, 2, 1, "", "TextWrapper"], [416, 2, 1, "", "chain"], [416, 1, 1, "", "namedtuple"], [416, 2, 1, "", "partial"], [416, 1, 1, "", "reduce"], [416, 1, 1, "", "tabulate"], [416, 2, 1, "", "zip_longest"]], "armi.utils.tabulate.DataRow": [[416, 4, 1, "", "begin"], [416, 4, 1, "", "end"], [416, 4, 1, "", "sep"]], "armi.utils.tabulate.Line": [[416, 4, 1, "", "begin"], [416, 4, 1, "", "end"], [416, 4, 1, "", "hline"], [416, 4, 1, "", "sep"]], "armi.utils.tabulate.TableFormat": [[416, 4, 1, "", "datarow"], [416, 4, 1, "", "headerrow"], [416, 4, 1, "", "lineabove"], [416, 4, 1, "", "linebelow"], [416, 4, 1, "", "linebelowheader"], [416, 4, 1, "", "linebetweenrows"], [416, 4, 1, "", "padding"], [416, 4, 1, "", "withHeaderHide"]], "armi.utils.tabulate.TextWrapper": [[416, 3, 1, "", "fill"], [416, 4, 1, "", "sentence_end_re"], [416, 4, 1, "", "unicode_whitespace_trans"], [416, 4, 1, "", "uspace"], [416, 4, 1, "", "wordsep_re"], [416, 4, 1, "", "wordsep_simple_re"], [416, 3, 1, "", "wrap"], [416, 4, 1, "", "x"]], "armi.utils.tabulate.chain": [[416, 3, 1, "", "from_iterable"]], "armi.utils.tabulate.partial": [[416, 4, 1, "", "args"], [416, 4, 1, "", "func"], [416, 4, 1, "", "keywords"]], "armi.utils.tests": [[418, 0, 0, "-", "test_asciimaps"], [419, 0, 0, "-", "test_codeTiming"], [420, 0, 0, "-", "test_custom_exceptions"], [421, 0, 0, "-", "test_densityTools"], [422, 0, 0, "-", "test_directoryChangers"], [423, 0, 0, "-", "test_directoryChangersMpi"], [424, 0, 0, "-", "test_flags"], [425, 0, 0, "-", "test_hexagon"], [426, 0, 0, "-", "test_iterables"], [427, 0, 0, "-", "test_mathematics"], [428, 0, 0, "-", "test_outputCache"], [429, 0, 0, "-", "test_parsing"], [430, 0, 0, "-", "test_pathTools"], [431, 0, 0, "-", "test_plotting"], [432, 0, 0, "-", "test_properties"], [433, 0, 0, "-", "test_reportPlotting"], [434, 0, 0, "-", "test_tabulate"], [435, 0, 0, "-", "test_textProcessors"], [436, 0, 0, "-", "test_triangle"], [437, 0, 0, "-", "test_units"], [438, 0, 0, "-", "test_utils"]], "armi.utils.tests.test_asciimaps": [[418, 2, 1, "", "TestAsciiMaps"]], "armi.utils.tests.test_asciimaps.TestAsciiMaps": [[418, 3, 1, "", "test_cartesian"], [418, 3, 1, "", "test_flatHexBases"], [418, 3, 1, "", "test_hexFullCornersUp"], [418, 3, 1, "", "test_hexFullCornersUpSpotCheck"], [418, 3, 1, "", "test_hexFullFlat"], [418, 3, 1, "", "test_hexFullFlatsUp"], [418, 3, 1, "", "test_hexSmallFlat"], [418, 3, 1, "", "test_hexThird"], [418, 3, 1, "", "test_hexWithEmptyRow"], [418, 3, 1, "", "test_hexWithHoles"], [418, 3, 1, "", "test_troublesomeHexThird"]], "armi.utils.tests.test_codeTiming": [[419, 2, 1, "", "CodeTimingTest"]], "armi.utils.tests.test_codeTiming.CodeTimingTest": [[419, 3, 1, "", "test_alternate_usages"], [419, 3, 1, "", "test_master"], [419, 3, 1, "", "test_messy_starts_and_stops"], [419, 3, 1, "", "test_method_definitions"], [419, 3, 1, "", "test_property_access"]], "armi.utils.tests.test_custom_exceptions": [[420, 2, 1, "", "CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions.CustomExceptionTests": [[420, 3, 1, "", "exampleImportantMessage"], [420, 3, 1, "", "exampleInfoMessage"], [420, 3, 1, "", "exampleWarnMessage"], [420, 3, 1, "", "exampleWarnWhenRootMessage"], [420, 3, 1, "", "test_important_decorator"], [420, 3, 1, "", "test_info_decorator"], [420, 3, 1, "", "test_warn_decorator"], [420, 3, 1, "", "test_warn_when_root_decorator"]], "armi.utils.tests.test_densityTools": [[421, 2, 1, "", "TestDensityTools"], [421, 2, 1, "", "UraniumOxide"]], "armi.utils.tests.test_densityTools.TestDensityTools": [[421, 3, 1, "", "test_applyIsotopicsMix"], [421, 3, 1, "", "test_calculateNumberDensity"], [421, 3, 1, "", "test_expandElement"], [421, 3, 1, "", "test_expandElementalMassFracsToNuclides"], [421, 3, 1, "", "test_expandElementalZeroMassFrac"], [421, 3, 1, "", "test_formatMaterialCard"], [421, 3, 1, "", "test_getChemicals"], [421, 3, 1, "", "test_getMassFractions"], [421, 3, 1, "", "test_getMassInGrams"], [421, 3, 1, "", "test_getNDensFromMasses"], [421, 3, 1, "", "test_normalizeNuclideList"]], "armi.utils.tests.test_densityTools.UraniumOxide": [[421, 3, 1, "", "density"], [421, 3, 1, "", "pseudoDensity"]], "armi.utils.tests.test_directoryChangers": [[422, 7, 1, "", "ExpectedException"], [422, 2, 1, "", "TestDirectoryChangers"]], "armi.utils.tests.test_directoryChangers.TestDirectoryChangers": [[422, 3, 1, "", "test_change_to_nonexisting_fails"], [422, 3, 1, "", "test_change_to_nonexisting_works_forced"], [422, 3, 1, "", "test_exception"], [422, 3, 1, "", "test_exception_disabled"], [422, 3, 1, "", "test_file_retrieval"], [422, 3, 1, "", "test_file_retrieval_missing_file"], [422, 3, 1, "", "test_mpiAction"], [422, 3, 1, "", "test_mpiActionFailsOnNonexistentPath"], [422, 3, 1, "", "test_temporary_cleans"]], "armi.utils.tests.test_directoryChangersMpi": [[423, 2, 1, "", "RevealYourDirectory"], [423, 2, 1, "", "TestMPI"]], "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory": [[423, 3, 1, "", "invokeHook"]], "armi.utils.tests.test_directoryChangersMpi.TestMPI": [[423, 3, 1, "", "test_MpiDirectoryChanger"]], "armi.utils.tests.test_flags": [[424, 2, 1, "", "ExampleFlag"], [424, 2, 1, "", "TestFlag"]], "armi.utils.tests.test_flags.ExampleFlag": [[424, 4, 1, "", "BAR"], [424, 4, 1, "", "BAZ"], [424, 4, 1, "", "FOO"]], "armi.utils.tests.test_flags.TestFlag": [[424, 3, 1, "", "test_auto"], [424, 3, 1, "", "test_bitwise"], [424, 3, 1, "", "test_bool"], [424, 3, 1, "", "test_collision_creation"], [424, 3, 1, "", "test_collision_extension"], [424, 3, 1, "", "test_extend"], [424, 3, 1, "", "test_getitem"], [424, 3, 1, "", "test_hashable"], [424, 3, 1, "", "test_inclusion"], [424, 3, 1, "", "test_iteration"]], "armi.utils.tests.test_hexagon": [[425, 2, 1, "", "TestHexagon"]], "armi.utils.tests.test_hexagon.TestHexagon": [[425, 4, 1, "", "N_FUZZY_DRAWS"], [425, 3, 1, "", "test_hexagon_area"], [425, 3, 1, "", "test_indexWithNoRotation"], [425, 3, 1, "", "test_numPositionsInRing"], [425, 3, 1, "", "test_positionsUpToRing"], [425, 3, 1, "", "test_rotateFuzzy"], [425, 3, 1, "", "test_rotatedCellCenter"], [425, 3, 1, "", "test_rotatedCellIndexErrors"], [425, 3, 1, "", "test_rotatedCellOrientationErrors"], [425, 3, 1, "", "test_rotatedFirstRing"]], "armi.utils.tests.test_iterables": [[426, 2, 1, "", "TestIterables"]], "armi.utils.tests.test_iterables.TestIterables": [[426, 3, 1, "", "test_addingSequences"], [426, 3, 1, "", "test_appendSequence"], [426, 3, 1, "", "test_arrayPivot"], [426, 3, 1, "", "test_chunk"], [426, 3, 1, "", "test_copySequence"], [426, 3, 1, "", "test_extendSequence"], [426, 3, 1, "", "test_flatten"], [426, 3, 1, "", "test_listPivot"], [426, 3, 1, "", "test_packingAndUnpackingBinaryStrings"], [426, 3, 1, "", "test_packingAndUnpackingHexStrings"], [426, 3, 1, "", "test_sequence"], [426, 3, 1, "", "test_sequenceInit"], [426, 3, 1, "", "test_split"]], "armi.utils.tests.test_mathematics": [[427, 2, 1, "", "TestMath"]], "armi.utils.tests.test_mathematics.TestMath": [[427, 3, 1, "", "test_average1DWithinTolerance"], [427, 3, 1, "", "test_average1DWithinToleranceInvalid"], [427, 3, 1, "", "test_convertToSlice"], [427, 3, 1, "", "test_efmt"], [427, 3, 1, "", "test_expandRepeatedFloats"], [427, 3, 1, "", "test_findClosest"], [427, 3, 1, "", "test_findNearestValue"], [427, 3, 1, "", "test_fixThreeDigitExp"], [427, 3, 1, "", "test_getFloat"], [427, 3, 1, "", "test_getStepsFromValues"], [427, 3, 1, "", "test_isMonotonic"], [427, 3, 1, "", "test_linearInterpolation"], [427, 3, 1, "", "test_minimizeScalarFunc"], [427, 3, 1, "", "test_newtonsMethod"], [427, 3, 1, "", "test_parabola"], [427, 3, 1, "", "test_parabolicInterpolation"], [427, 3, 1, "", "test_relErr"], [427, 3, 1, "", "test_resampleStepwiseAvg0"], [427, 3, 1, "", "test_resampleStepwiseAvg1"], [427, 3, 1, "", "test_resampleStepwiseAvg2"], [427, 3, 1, "", "test_resampleStepwiseAvg3"], [427, 3, 1, "", "test_resampleStepwiseAvg4"], [427, 3, 1, "", "test_resampleStepwiseAvg5"], [427, 3, 1, "", "test_resampleStepwiseAvg6"], [427, 3, 1, "", "test_resampleStepwiseAvg7"], [427, 3, 1, "", "test_resampleStepwiseAvgAllNones"], [427, 3, 1, "", "test_resampleStepwiseAvgComplicatedNone"], [427, 3, 1, "", "test_resampleStepwiseAvgNpArray"], [427, 3, 1, "", "test_resampleStepwiseAvgNpArrayAverage"], [427, 3, 1, "", "test_resampleStepwiseAvgOneNone"], [427, 3, 1, "", "test_resampleStepwiseSum0"], [427, 3, 1, "", "test_resampleStepwiseSum1"], [427, 3, 1, "", "test_resampleStepwiseSum2"], [427, 3, 1, "", "test_resampleStepwiseSum3"], [427, 3, 1, "", "test_resampleStepwiseSum4"], [427, 3, 1, "", "test_resampleStepwiseSum5"], [427, 3, 1, "", "test_resampleStepwiseSum6"], [427, 3, 1, "", "test_resampleStepwiseSum7"], [427, 3, 1, "", "test_resampleStepwiseSumAllNones"], [427, 3, 1, "", "test_resampleStepwiseSumOneNone"], [427, 3, 1, "", "test_rotateXY"]], "armi.utils.tests.test_outputCache": [[428, 2, 1, "", "TestOutputCache"]], "armi.utils.tests.test_outputCache.TestOutputCache": [[428, 3, 1, "", "test_deleteCache"], [428, 3, 1, "", "test_getCachedFolder"], [428, 3, 1, "", "test_hashFiles"], [428, 3, 1, "", "test_makeOutputManifest"], [428, 3, 1, "", "test_retrieveOutput"]], "armi.utils.tests.test_parsing": [[429, 2, 1, "", "LiteralEvalTest"]], "armi.utils.tests.test_parsing.LiteralEvalTest": [[429, 3, 1, "", "test_parseValue"], [429, 3, 1, "", "test_tryLiteralEval"]], "armi.utils.tests.test_pathTools": [[430, 2, 1, "", "PathToolsTests"]], "armi.utils.tests.test_pathTools.PathToolsTests": [[430, 3, 1, "", "test_cleanPathNoMpi"], [430, 3, 1, "", "test_importCustomModule"], [430, 3, 1, "", "test_isAccessible"], [430, 3, 1, "", "test_isFilePathNewer"], [430, 3, 1, "", "test_moduleAndAttributeExist"], [430, 3, 1, "", "test_separateModuleAndAttribute"]], "armi.utils.tests.test_plotting": [[431, 2, 1, "", "TestPatches"], [431, 2, 1, "", "TestPlotting"]], "armi.utils.tests.test_plotting.TestPatches": [[431, 3, 1, "", "test_makeAssemPatches"]], "armi.utils.tests.test_plotting.TestPlotting": [[431, 3, 1, "", "test_plotAssemblyTypes"], [431, 3, 1, "", "test_plotBlockFlux"], [431, 3, 1, "", "test_plotCartesianBlock"], [431, 3, 1, "", "test_plotDepthMap"], [431, 3, 1, "", "test_plotHexBlock"]], "armi.utils.tests.test_properties": [[432, 2, 1, "", "ImmutableClass"], [432, 2, 1, "", "ImmutablePropertyTests"]], "armi.utils.tests.test_properties.ImmutableClass": [[432, 3, 1, "", "initialize"], [432, 5, 1, "", "myNum"]], "armi.utils.tests.test_properties.ImmutablePropertyTests": [[432, 3, 1, "", "test_cannotAssignValueToImmutableProperty"], [432, 3, 1, "", "test_retreivingUnassignedValueRaisesError"], [432, 3, 1, "", "test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "armi.utils.tests.test_reportPlotting": [[433, 2, 1, "", "TestRadar"]], "armi.utils.tests.test_reportPlotting.TestRadar": [[433, 3, 1, "", "test_buVsTime"], [433, 3, 1, "", "test_createPlotMetaData"], [433, 3, 1, "", "test_keffVsTime"], [433, 3, 1, "", "test_movesVsCycle"], [433, 3, 1, "", "test_plotAxialProfile"], [433, 3, 1, "", "test_radar"], [433, 3, 1, "", "test_valueVsTime"], [433, 3, 1, "", "test_xsHistoryVsTime"]], "armi.utils.tests.test_tabulate": [[434, 2, 1, "", "TestTabulateAPI"], [434, 2, 1, "", "TestTabulateInputs"], [434, 2, 1, "", "TestTabulateInternal"], [434, 2, 1, "", "TestTabulateOutput"]], "armi.utils.tests.test_tabulate.TestTabulateAPI": [[434, 3, 1, "", "test_tabulateFormats"]], "armi.utils.tests.test_tabulate.TestTabulateInputs": [[434, 3, 1, "", "test_dictLike"], [434, 3, 1, "", "test_iterableOfEmpties"], [434, 3, 1, "", "test_iterableOfIterables"], [434, 3, 1, "", "test_iterableOfIterablesFirstrow"], [434, 3, 1, "", "test_iterableOfIterablesHeaders"], [434, 3, 1, "", "test_listBytes"], [434, 3, 1, "", "test_listOfDicts"], [434, 3, 1, "", "test_listOfDictsFirstrow"], [434, 3, 1, "", "test_listOfDictsKeys"], [434, 3, 1, "", "test_listOfDictsWithDictOfHeaders"], [434, 3, 1, "", "test_listOfDictsWithListOfHeaders"], [434, 3, 1, "", "test_listOfDictsWithMissingKeys"], [434, 3, 1, "", "test_listOfLists"], [434, 3, 1, "", "test_listOfListsFirstrow"], [434, 3, 1, "", "test_listOfListsKeys"], [434, 3, 1, "", "test_listOfNamedtuples"], [434, 3, 1, "", "test_listOfNamedtuplesKeys"], [434, 3, 1, "", "test_listOfOrdereddicts"], [434, 3, 1, "", "test_listOfUserdicts"], [434, 3, 1, "", "test_listOfUserdictsKeys"], [434, 3, 1, "", "test_numpy2d"], [434, 3, 1, "", "test_numpy2dFirstrow"], [434, 3, 1, "", "test_numpy2dKeys"], [434, 3, 1, "", "test_numpyRecordArray"], [434, 3, 1, "", "test_numpyRecordArrayHeaders"], [434, 3, 1, "", "test_numpyRecordArrayKeys"], [434, 3, 1, "", "test_tightCouplingExample"]], "armi.utils.tests.test_tabulate.TestTabulateInternal": [[434, 3, 1, "", "test_alignCellVeriticallyBottomMultiTextMultiplePad"], [434, 3, 1, "", "test_alignCellVeriticallyBottomSingleTextMultiplePad"], [434, 3, 1, "", "test_alignCellVeriticallyCenterMultiTextMultiplePad"], [434, 3, 1, "", "test_alignCellVeriticallyCenterSingleTextMultiplePad"], [434, 3, 1, "", "test_alignCellVeriticallyOneLineOnly"], [434, 3, 1, "", "test_alignCellVeriticallyTopMultiTextMultiplePad"], [434, 3, 1, "", "test_alignCellVeriticallyTopSingleTextMultiplePad"], [434, 3, 1, "", "test_alignColumnDecimal"], [434, 3, 1, "", "test_alignColumnDecimalWithIncorrectThousandSeparators"], [434, 3, 1, "", "test_alignColumnDecimalWithThousandSeparators"], [434, 3, 1, "", "test_alignColumnMultiline"], [434, 3, 1, "", "test_alignColumnNone"], [434, 3, 1, "", "test_assortedRareEdgeCases"], [434, 3, 1, "", "test_bool"], [434, 3, 1, "", "test_buildLine"], [434, 3, 1, "", "test_buildRow"], [434, 3, 1, "", "test_format"], [434, 3, 1, "", "test_isMultiline"], [434, 3, 1, "", "test_multilineWidth"], [434, 3, 1, "", "test_normalizeTabularData"], [434, 3, 1, "", "test_type"], [434, 3, 1, "", "test_visibleWidth"], [434, 3, 1, "", "test_wrapTextToColWidths"]], "armi.utils.tests.test_tabulate.TestTabulateOutput": [[434, 3, 1, "", "test_colAlignMulti"], [434, 3, 1, "", "test_colAlignMultiWithSepLine"], [434, 3, 1, "", "test_colAlignOrheadersAlignTooLong"], [434, 3, 1, "", "test_columnAlignment"], [434, 3, 1, "", "test_columnGlobalAndSpecificAlignment"], [434, 3, 1, "", "test_dictLikeWithIndex"], [434, 3, 1, "", "test_disableNumParseDefault"], [434, 3, 1, "", "test_disableNumParseList"], [434, 3, 1, "", "test_disableNumParseTrue"], [434, 3, 1, "", "test_emptyData"], [434, 3, 1, "", "test_emptyDataWithHeaders"], [434, 3, 1, "", "test_emptyDataWithoutHeaders"], [434, 3, 1, "", "test_floatConversions"], [434, 3, 1, "", "test_floatFmt"], [434, 3, 1, "", "test_floatFmtMulti"], [434, 3, 1, "", "test_github"], [434, 3, 1, "", "test_grid"], [434, 3, 1, "", "test_gridHeaderless"], [434, 3, 1, "", "test_gridMultiline"], [434, 3, 1, "", "test_gridMultilineHeaderless"], [434, 3, 1, "", "test_gridMultilineWithEmptyCells"], [434, 3, 1, "", "test_gridMultilineWithEmptyCellsHeaderless"], [434, 3, 1, "", "test_headersGlobalAndSpecificAlignment"], [434, 3, 1, "", "test_intFmt"], [434, 3, 1, "", "test_listOfListsWithIndex"], [434, 3, 1, "", "test_listOfListsWithIndexFirstrow"], [434, 3, 1, "", "test_listOfListsWithIndexWithSepLine"], [434, 3, 1, "", "test_listOfListsWithSuppliedIndex"], [434, 3, 1, "", "test_maxColWidthsingleValue"], [434, 3, 1, "", "test_maxcolwidthHonorDisableParsenum"], [434, 3, 1, "", "test_maxcolwidthPadTailingWidths"], [434, 3, 1, "", "test_missingVal"], [434, 3, 1, "", "test_missingValMulti"], [434, 3, 1, "", "test_noData"], [434, 3, 1, "", "test_noDataWithoutHeaders"], [434, 3, 1, "", "test_plain"], [434, 3, 1, "", "test_plainHeaderless"], [434, 3, 1, "", "test_plainMaxcolwidthAutowraps"], [434, 3, 1, "", "test_plainMaxcolwidthAutowrapsWithSep"], [434, 3, 1, "", "test_plainMultiline"], [434, 3, 1, "", "test_plainMultilineHeaderless"], [434, 3, 1, "", "test_plainMultilineWithEmptyCells"], [434, 3, 1, "", "test_plainMultilineWithEmptyCellsHeaderless"], [434, 3, 1, "", "test_plainMultilineWithLinks"], [434, 3, 1, "", "test_plainmaxHeaderColWidthsAutowraps"], [434, 3, 1, "", "test_pretty"], [434, 3, 1, "", "test_prettyHeaderless"], [434, 3, 1, "", "test_prettyMultiline"], [434, 3, 1, "", "test_prettyMultilineHeaderless"], [434, 3, 1, "", "test_prettyMultilineWithEmptyCells"], [434, 3, 1, "", "test_prettyMultilineWithEmptyCellsHeaderless"], [434, 3, 1, "", "test_prettyMultilineWithLinks"], [434, 3, 1, "", "test_readmeExampleWithSep"], [434, 3, 1, "", "test_rst"], [434, 3, 1, "", "test_rstHeaderless"], [434, 3, 1, "", "test_rstMultiline"], [434, 3, 1, "", "test_rstMultilineWithEmptyCells"], [434, 3, 1, "", "test_rstMultilineWithEmptyCellsHeaderless"], [434, 3, 1, "", "test_rstMultilineWithLinks"], [434, 3, 1, "", "test_rstWithEmptyValuesInFirstColumn"], [434, 3, 1, "", "test_simple"], [434, 3, 1, "", "test_simpleHeaderless"], [434, 3, 1, "", "test_simpleHeaderlessWithSepLine"], [434, 3, 1, "", "test_simpleMultiline"], [434, 3, 1, "", "test_simpleMultiline2"], [434, 3, 1, "", "test_simpleMultiline2WithSepLine"], [434, 3, 1, "", "test_simpleMultilineHeaderless"], [434, 3, 1, "", "test_simpleMultilineWithEmptyCells"], [434, 3, 1, "", "test_simpleMultilineWithEmptyCellsHeaderless"], [434, 3, 1, "", "test_simpleMultilineWithLinks"], [434, 3, 1, "", "test_simpleWithSepLine"]], "armi.utils.tests.test_textProcessors": [[435, 2, 1, "", "SequentialReaderTests"], [435, 2, 1, "", "YamlIncludeTest"]], "armi.utils.tests.test_textProcessors.SequentialReaderTests": [[435, 3, 1, "", "test_readFile"], [435, 3, 1, "", "test_readFileWithPattern"], [435, 4, 1, "", "textStream"]], "armi.utils.tests.test_textProcessors.YamlIncludeTest": [[435, 3, 1, "", "test_findIncludes"], [435, 3, 1, "", "test_resolveIncludes"], [435, 3, 1, "", "test_resolveIncludes_StringIO"]], "armi.utils.tests.test_triangle": [[436, 2, 1, "", "TestTriangle"]], "armi.utils.tests.test_triangle.TestTriangle": [[436, 3, 1, "", "test_checkIfPointIsInTriangle"], [436, 3, 1, "", "test_checkIfPointIsInTriangle2"], [436, 3, 1, "", "test_getTriangleArea"]], "armi.utils.tests.test_units": [[437, 2, 1, "", "TestUnits"]], "armi.utils.tests.test_units.TestUnits": [[437, 3, 1, "", "test_convertXtoPascal"], [437, 3, 1, "", "test_getTc"], [437, 3, 1, "", "test_getTemperature"], [437, 3, 1, "", "test_getTf"], [437, 3, 1, "", "test_getTk"], [437, 3, 1, "", "test_getTmev"], [437, 3, 1, "", "test_getXYLineParameters"], [437, 3, 1, "", "test_pressure_converter"], [437, 3, 1, "", "test_sanitizeAngle"]], "armi.utils.tests.test_utils": [[438, 2, 1, "", "CyclesSettingsTests"], [438, 2, 1, "", "TestGeneralUtils"]], "armi.utils.tests.test_utils.CyclesSettingsTests": [[438, 4, 1, "", "availabilityFactorsDetailedSolution"], [438, 4, 1, "", "availabilityFactorsSimpleSolution"], [438, 4, 1, "", "burnStepsDetailedSolution"], [438, 4, 1, "", "burnStepsSimpleSolution"], [438, 4, 1, "", "cycleLengthsDetailedSolution"], [438, 4, 1, "", "cycleLengthsSimpleSolution"], [438, 4, 1, "", "cycleNamesDetailedSolution"], [438, 4, 1, "", "cycleNamesSimpleSolution"], [438, 4, 1, "", "detailedCyclesSettings"], [438, 4, 1, "", "maxBurnStepsDetailedSolution"], [438, 4, 1, "", "maxBurnStepsSimpleSolution"], [438, 4, 1, "", "nodesPerCycleDetailedSolution"], [438, 4, 1, "", "nodesPerCycleSimpleSolution"], [438, 4, 1, "", "powerFractionsDetailedSolution"], [438, 4, 1, "", "powerFractionsSimpleSolution"], [438, 4, 1, "", "simpleCyclesSettings"], [438, 4, 1, "", "stepLengthsDetailedSolution"], [438, 4, 1, "", "stepLengthsSimpleSolution"], [438, 3, 1, "", "test_getAvailabilityFactors"], [438, 3, 1, "", "test_getBurnSteps"], [438, 3, 1, "", "test_getCumulativeNodeNum"], [438, 3, 1, "", "test_getCycleLengths"], [438, 3, 1, "", "test_getCycleNames"], [438, 3, 1, "", "test_getCycleNodeFromCumulativeNode"], [438, 3, 1, "", "test_getCycleNodeFromCumulativeStep"], [438, 3, 1, "", "test_getMaxBurnSteps"], [438, 3, 1, "", "test_getNodesPerCycle"], [438, 3, 1, "", "test_getPowerFractions"], [438, 3, 1, "", "test_getPreviousTimeNode"], [438, 3, 1, "", "test_getStepLengths"], [438, 3, 1, "", "test_hasBurnup"]], "armi.utils.tests.test_utils.TestGeneralUtils": [[438, 3, 1, "", "test_capStrLen"], [438, 3, 1, "", "test_classesInHierarchy"], [438, 3, 1, "", "test_codeTiming"], [438, 3, 1, "", "test_createFormattedStrWithDelimiter"], [438, 3, 1, "", "test_list2str"], [438, 3, 1, "", "test_mergeableDictionary"], [438, 3, 1, "", "test_plotMatrix"], [438, 3, 1, "", "test_prependToList"], [438, 3, 1, "", "test_safeCopy"], [438, 3, 1, "", "test_slantSplit"]], "armi.utils.textProcessors": [[439, 6, 1, "", "DECIMAL_PATTERN"], [439, 6, 1, "", "FLOATING_PATTERN"], [439, 2, 1, "", "FileMark"], [439, 6, 1, "", "SCIENTIFIC_PATTERN"], [439, 2, 1, "", "SequentialReader"], [439, 2, 1, "", "SequentialStringIOReader"], [439, 2, 1, "", "SmartList"], [439, 2, 1, "", "TextProcessor"], [439, 1, 1, "", "findYamlInclusions"], [439, 1, 1, "", "resolveMarkupInclusions"]], "armi.utils.textProcessors.SequentialReader": [[439, 3, 1, "", "consumeLine"], [439, 3, 1, "", "issueWarningOnFindingText"], [439, 3, 1, "", "raiseErrorOnFindingPattern"], [439, 3, 1, "", "raiseErrorOnFindingText"], [439, 3, 1, "", "searchForPattern"], [439, 3, 1, "", "searchForPatternOnNextLine"], [439, 3, 1, "", "searchForText"]], "armi.utils.textProcessors.SmartList": [[439, 3, 1, "", "close"], [439, 3, 1, "", "next"], [439, 3, 1, "", "seek"]], "armi.utils.textProcessors.TextProcessor": [[439, 3, 1, "", "checkErrors"], [439, 4, 1, "", "decimal"], [439, 3, 1, "", "errorChecking"], [439, 3, 1, "", "fsearch"], [439, 4, 1, "", "number"], [439, 3, 1, "", "reset"], [439, 4, 1, "", "scipat"]], "armi.utils.triangle": [[440, 1, 1, "", "checkIfPointIsInTriangle"], [440, 1, 1, "", "getTriangleArea"], [440, 1, 1, "", "getTriangleCentroid"]], "armi.utils.units": [[441, 1, 1, "", "convertAtmToPascal"], [441, 1, 1, "", "convertBarToPascal"], [441, 1, 1, "", "convertMmhgToPascal"], [441, 1, 1, "", "getTc"], [441, 1, 1, "", "getTemperature"], [441, 1, 1, "", "getTf"], [441, 1, 1, "", "getTk"], [441, 1, 1, "", "getTmev"], [441, 1, 1, "", "getXYLineParameters"], [441, 1, 1, "", "sanitizeAngle"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"armi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 448, 449, 450, 451, 452, 453, 481, 483, 484, 485, 486, 488, 490, 491, 492, 503, 504], "packag": [0, 2, 3, 13, 23, 30, 34, 38, 41, 47, 49, 53, 58, 61, 74, 80, 119, 145, 149, 153, 157, 165, 166, 181, 197, 204, 210, 213, 216, 223, 227, 232, 237, 243, 247, 250, 252, 254, 257, 264, 271, 272, 274, 279, 283, 288, 295, 304, 311, 312, 319, 322, 334, 343, 352, 366, 368, 376, 380, 397, 417, 443, 453, 492], "note": [0, 1, 3, 5, 7, 8, 10, 11, 16, 20, 21, 29, 48, 50, 51, 55, 56, 57, 75, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 103, 104, 105, 106, 111, 112, 113, 115, 116, 117, 140, 141, 142, 143, 152, 154, 155, 156, 160, 161, 164, 166, 167, 168, 172, 173, 174, 175, 176, 177, 180, 185, 192, 198, 199, 201, 202, 203, 205, 206, 208, 209, 212, 214, 215, 216, 217, 220, 221, 224, 225, 236, 237, 239, 240, 242, 244, 248, 251, 253, 255, 258, 265, 266, 282, 284, 287, 288, 291, 292, 293, 294, 304, 305, 306, 307, 309, 310, 314, 315, 316, 317, 318, 321, 323, 325, 329, 330, 336, 338, 339, 340, 341, 346, 348, 349, 351, 354, 355, 361, 364, 367, 372, 373, 378, 380, 387, 397, 398, 401, 402, 403, 407, 409, 410, 412, 413, 431, 439, 440, 441, 453, 483, 484, 485, 486, 487], "subpackag": [0, 2, 3, 23, 38, 47, 49, 61, 80, 145, 153, 165, 166, 204, 213, 216, 227, 237, 243, 250, 254, 274, 283, 288, 311, 366, 397], "submodul": [0, 2, 3, 13, 23, 30, 34, 38, 41, 47, 49, 53, 58, 61, 74, 80, 119, 145, 149, 153, 157, 165, 166, 181, 197, 204, 210, 213, 216, 223, 227, 232, 237, 243, 247, 250, 252, 254, 257, 264, 272, 274, 279, 283, 288, 295, 304, 311, 312, 319, 322, 334, 343, 352, 366, 368, 376, 380, 397, 417, 490], "app": [1, 448, 490], "modul": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 251, 253, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 273, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 453], "bookkeep": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "db": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "when": 3, "updat": [3, 443, 482, 509], "version": [3, 453], "databas": [3, 5, 20, 66, 488, 505], "revis": 3, "changelog": 3, "comparedb3": 4, "database3": 6, "databaseinterfac": 7, "factori": [8, 493], "jaggedarrai": 9, "layout": 10, "passivedbloadplugin": 11, "permiss": 12, "test": [13, 14, 15, 16, 17, 18, 30, 31, 32, 34, 35, 36, 37, 41, 42, 43, 53, 54, 55, 58, 59, 60, 74, 75, 76, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 149, 150, 151, 157, 158, 159, 160, 161, 162, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 210, 211, 212, 223, 224, 225, 226, 232, 233, 234, 235, 247, 248, 249, 252, 253, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 272, 273, 279, 280, 295, 296, 297, 298, 299, 300, 301, 302, 303, 322, 323, 324, 325, 326, 327, 328, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 445, 452, 453], "test_comparedb3": 14, "test_database3": 15, "test_databaseinterfac": 16, "test_jaggedarrai": 17, "test_layout": 18, "typedef": 19, "historytrack": 20, "get": [20, 446, 481, 482, 509], "histori": [20, 481, 503, 505], "inform": 20, "us": [20, 166, 443, 449, 452, 481], "base": [20, 146, 153, 448, 490], "tracker": 20, "specifi": [20, 494], "paramet": [20, 229, 261, 276, 287, 343, 344, 345, 346, 347, 446, 452, 493, 498, 499, 500, 501, 508], "add": [20, 453], "eol": 20, "report": [20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 262, 451, 497, 503], "block": [20, 287, 453, 460, 465, 467, 494, 495, 499, 503, 506], "assembli": [20, 284, 494, 495, 498, 503], "track": 20, "maininterfac": 21, "memoryprofil": 22, "data": [24, 452, 492, 504], "html": [25, 451], "newreportutil": 26, "newreport": 27, "reportinterfac": 28, "reportingutil": 29, "test_newreport": 31, "test_report": 32, "snapshotinterfac": 33, "test_historytrack": 35, "test_memoryprofil": 36, "test_snapshot": 37, "visual": [38, 39, 40, 41, 42, 43, 44, 45, 46], "dumper": 39, "entrypoint": [40, 67], "test_vi": 42, "test_xdmf": 43, "util": [44, 236, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "vtk": 45, "limit": 45, "xdmf": [46, 490], "case": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 481, 503], "inputmodifi": [49, 50, 51, 52, 53, 54, 55], "neutronicsmodifi": 51, "pintypeinputmodifi": 52, "test_inputmodifi": 54, "test_pintypeinputmodifi": 55, "suit": 56, "suitebuild": 57, "test_cas": 59, "test_suitebuild": 60, "cli": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "checkinput": 62, "cleantemp": 63, "clone": 64, "comparecas": 65, "gridgui": 68, "migrateinput": 69, "modifi": [70, 488, 493], "reportsentrypoint": 71, "run": [72, 452, 490, 503], "runsuit": 73, "test_runentrypoint": 75, "test_runsuit": 76, "conftest": 77, "context": 78, "interfac": [79, 446, 490, 506], "materi": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 459, 474, 490, 491], "air": 81, "alloy200": 82, "b4c": 83, "be9": 84, "cah2": 85, "californium": 86, "concret": 87, "copper": 88, "c": 89, "custom": [90, 490, 495, 503], "graphit": 91, "hafnium": 92, "hastelloyn": 93, "ht9": 94, "inconel": 95, "inconel600": 96, "inconel625": 97, "inconel800": 98, "inconelpe16": 99, "inconelx750": 100, "lead": 101, "leadbismuth": 102, "lithium": [103, 492], "magnesium": 104, "mgo": 106, "mixtur": 107, "molybdenum": 108, "mox": [109, 495], "nz": 110, "potassium": 111, "scandiumoxid": 112, "sic": 113, "sodium": 114, "sodiumchlorid": 115, "sulfur": 116, "tzm": 117, "tantalum": 118, "test__init__": 120, "test_air": 121, "test_b4c": 122, "test_be9": 123, "test_graphit": 124, "test_lithium": 125, "test_materi": 126, "test_sic": 127, "test_sulfur": 128, "test_thoriumoxid": 129, "test_uzr": 130, "test_wat": 131, "thu": 132, "thorium": 133, "thoriumoxid": 134, "uthzr": 135, "uzr": 136, "uranium": 137, "uraniumoxid": 138, "void": 139, "water": 140, "yttriumoxid": 141, "zincoxid": 142, "zr": 143, "meta": 144, "migrat": [145, 146, 147, 148, 149, 150, 151], "m0_1_3": 147, "m0_1_6": 148, "test_m0_1_6": 150, "test_migration_bas": 151, "mpiaction": 152, "sampl": 152, "mpi": [152, 449], "action": 152, "workflow": 152, "nucdirectori": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "element": [153, 154, 451, 492], "nuclid": [153, 466, 492, 495, 503], "name": [153, 452, 503], "label": [153, 175], "id": 153, "indic": 153, "rapid": 153, "access": [153, 492, 497, 504], "list": [154, 474, 490], "nucdir": 155, "nuclidebas": 156, "test_el": 158, "test_nucdirectori": 159, "test_nuclidebas": 160, "test_thermalscatt": 161, "test_transmut": 162, "thermalscatt": 163, "transmut": [164, 477], "nucleardataio": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "cccc": [166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "system": [166, 481, 495, 503], "implement": [166, 448], "detail": [166, 448, 466, 503], "discuss": 166, "compx": 168, "dif3d": 169, "dlayx": 170, "fixsrc": 171, "gamiso": 172, "geodst": 173, "isotx": [174, 472], "nhflux": 176, "pmatrx": 177, "pwdint": 178, "rtflux": 179, "rzflux": 180, "test_cccc": 182, "test_compx": 183, "test_dif3d": 184, "test_dlayx": 185, "test_fixsrc": 186, "test_gamiso": 187, "test_geodst": 188, "test_isotx": 189, "test_label": 190, "test_nhflux": 191, "test_pmatrx": 192, "test_pwdint": 193, "test_rtflux": 194, "test_rzflux": 195, "nuclearfilemetadata": 196, "test_xscollect": 198, "test_xslibrari": 199, "test_xsnuclid": 200, "xscollect": 201, "xslibrari": 202, "xsnuclid": 203, "oper": [204, 205, 206, 207, 208, 209, 210, 211, 212, 446, 481, 503], "operatormpi": 206, "runtyp": 207, "settingsvalid": [208, 375], "snapshot": [209, 446], "test_operatorsnapshot": 211, "test_oper": 212, "physic": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 481, 490, 506], "histor": 213, "fun": 213, "fact": 213, "constant": [214, 337], "execut": [215, 228], "fuelcycl": [216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], "assemblyrotationalgorithm": 217, "fuelhandlerfactori": 218, "fuelhandlerinterfac": 219, "fuelhandl": 220, "hexassemblyfuelmgmtutil": 221, "set": [222, 231, 263, 278, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 490, 494, 495, 503, 504, 505], "test_assemblyrotationalgorithm": 224, "test_fuelhandl": 225, "test_hexassemblyfuelmgmtutil": 226, "fuelperform": [227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "plugin": [230, 277, 282, 443, 446, 448, 490, 503], "test_execut": [233, 273], "test_fuelperformanceplugin": 234, "test_fuelperformanceutil": 235, "neutron": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "const": [238, 275], "crosssectiongroupmanag": 239, "crosssectionset": 240, "diffisotx": 241, "energygroup": 242, "fissionproductmodel": [243, 244, 245, 246, 247, 248, 249], "fissionproductmodelset": 245, "lumpedfissionproduct": 246, "test_fissionproductmodel": 248, "test_lumpedfissionproduct": 249, "globalflux": [250, 251, 252, 253], "globalfluxinterfac": 251, "test_globalfluxinterfac": 253, "latticephys": [254, 255, 256, 257, 258, 259], "latticephysicsinterfac": 255, "latticephysicswrit": 256, "test_latticeinterfac": 258, "test_latticewrit": 259, "macroxsgenerationinterfac": 260, "test_crosssectionmanag": 265, "test_crosssectionset": 266, "test_crosssectiont": 267, "test_energygroup": 268, "test_macroxsgenerationinterfac": 269, "test_neutronicsplugin": 270, "safeti": 271, "thermalhydraul": [274, 275, 276, 277, 278, 279, 280], "test_thermalhydraulicsplugin": 280, "pluginmanag": 281, "reactor": [283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 446, 461, 475, 476, 488, 493, 494, 495, 505, 508], "assemblyparamet": 285, "blockparamet": 286, "blueprint": [288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 446, 494, 495, 503, 505], "assemblyblueprint": 289, "blockblueprint": 290, "componentblueprint": 291, "gridblueprint": 292, "isotopicopt": 293, "reactorblueprint": 294, "test_assemblyblueprint": 296, "test_blockblueprint": 297, "test_blueprint": 298, "test_componentblueprint": 299, "test_customisotop": 300, "test_gridblueprint": 301, "test_materialmodif": 302, "test_reactorblueprint": 303, "compon": [304, 305, 306, 307, 308, 309, 465, 500, 503], "basicshap": 305, "complexshap": 306, "componentparamet": 308, "volumetricshap": 309, "composit": 310, "convert": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 446], "axialexpansionchang": [312, 313, 314, 315], "assemblyaxiallinkag": 313, "expansiondata": 315, "blockconvert": 316, "geometryconvert": 317, "meshconvert": 318, "parametersweep": [319, 320], "generalparametersweepconvert": 320, "pintypeblockconvert": 321, "test_axialexpansionchang": 323, "test_blockconvert": 324, "test_geometryconvert": 325, "test_meshconvert": 326, "test_pintypeblockconvert": 327, "test_uniformmesh": 328, "uniformmesh": 329, "requir": [329, 453, 481, 486], "core": [330, 494, 501], "excorestructur": 331, "flag": [332, 405, 495, 503], "geometri": [333, 460, 461], "grid": [334, 335, 336, 337, 338, 339, 340, 341, 342, 469, 470, 471, 495, 503], "axial": [335, 507], "cartesian": [336, 470], "hexagon": [339, 407], "locat": 340, "structuredgrid": 341, "thetarz": 342, "exampl": [343, 449, 503], "basic": 343, "usag": [343, 410, 416], "design": [343, 493], "consider": 343, "except": [344, 452], "parametercollect": 345, "parameterdefinit": 346, "resolvecollect": 347, "reactorparamet": 348, "spentfuelpool": 350, "systemlayoutinput": 351, "test_assembli": 353, "test_block": 354, "test_compon": 355, "test_composit": 356, "test_excorestructur": 357, "test_flag": [358, 424], "test_geometri": 359, "test_paramet": 360, "test_reactor": 361, "test_rz_reactor": 362, "test_zon": 363, "zone": 364, "runlog": [365, 453], "caseset": 367, "fwset": [368, 369, 370, 371, 372], "databaseset": 369, "globalset": 370, "reportset": 371, "tightcouplingset": 372, "settingsio": 374, "test_inspector": 377, "test_set": 378, "test_settingsio": 379, "mockrunlog": 381, "refsmallreactorshufflelog": 382, "test_app": 383, "test_armitesthelp": 384, "test_cartesian": 385, "test_context": 386, "test_interfac": 387, "test_lwrinput": 388, "test_mpiact": 389, "test_mpifeatur": 390, "test_mpiparamet": 391, "test_notebook": 392, "test_plugin": 393, "test_runlog": 394, "test_test": 395, "test_user_plugin": 396, "asciimap": 398, "codetim": 399, "customexcept": 400, "densitytool": 401, "directorychang": 402, "directorychangersmpi": 403, "dynamicimport": 404, "grideditor": 406, "iter": 408, "mathemat": 409, "outputcach": 410, "api": [410, 483, 486], "pars": [411, 416], "pathtool": 412, "plot": [413, 466, 472, 473, 476, 492], "properti": 414, "reportplot": 415, "tabul": 416, "tabl": [416, 451], "header": 416, "column": 416, "align": 416, "format": [416, 452, 490, 505], "number": [416, 488], "width": 416, "auto": 416, "line": 416, "wrap": 416, "test_asciimap": 418, "test_codetim": 419, "test_custom_except": 420, "test_densitytool": 421, "test_directorychang": 422, "test_directorychangersmpi": 423, "test_hexagon": 425, "test_iter": 426, "test_mathemat": 427, "test_outputcach": 428, "test_pars": 429, "test_pathtool": 430, "test_plot": 431, "test_properti": 432, "test_reportplot": 433, "test_tabul": 434, "test_textprocessor": 435, "test_triangl": 436, "test_unit": 437, "test_util": 438, "textprocessor": 439, "triangl": 440, "unit": [441, 452], "document": [443, 453], "build": [443, 475, 484, 494, 495], "link": [443, 481, 503], "from": [443, 472, 488, 498, 499, 500, 501, 508], "automat": [443, 465], "apidoc": 443, "namespac": 443, "galleri": [443, 454, 479, 496], "jupyt": 443, "notebook": 443, "entri": [444, 446, 490, 497], "point": [444, 446, 490, 497], "first": [445, 490], "time": [445, 462, 478], "contributor": 445, "guid": 445, "help": [445, 481], "want": 445, "submit": 445, "chang": [445, 483, 484, 486], "licens": [445, 453, 481], "tool": [445, 453], "framework": [446, 457, 464, 479, 492, 496, 498, 499, 500, 501, 508], "architectur": 446, "The": [446, 451, 481, 482, 491, 492, 495, 503, 505, 506, 509], "model": [446, 452, 488], "find": 446, "object": 446, "standard": [446, 452, 505], "stack": 446, "interact": 446, "hook": [446, 451], "ad": [446, 490], "new": [446, 453, 481, 484, 485, 486, 490], "how": [446, 492, 494], "call": 446, "develop": [447, 482, 509], "doc": [447, 502], "make": [448, 469, 470, 471, 490, 503], "head": 448, "up": [448, 492, 494, 495], "some": [448, 503, 504], "your": [448, 490], "own": 448, "applic": [448, 456, 463, 479, 496], "parallel": 449, "code": [449, 452, 482, 509], "commun": [449, 481], "crash": 449, "cours": 449, "within": [449, 452], "bcast": 449, "scatter": [449, 473], "A": [449, 493], "simplifi": 449, "approach": 449, "profil": 450, "getreportcont": 451, "what": [451, 484, 485, 490, 495], "i": [451, 453], "reportcont": 451, "section": [451, 503], "imag": 451, "timeseri": 451, "summari": 451, "practic": 452, "black": 452, "address": 452, "ruff": 452, "warn": 452, "remov": 452, "comment": 452, "out": 452, "avoid": 452, "hard": 452, "global": [452, 506], "keyword": 452, "convent": 452, "meaning": 452, "gener": 452, "quick": [452, 481], "refer": 452, "common": 452, "prefer": 452, "shorter": 452, "method": 452, "repeat": 452, "public": 452, "should": 452, "have": 452, "docstr": 452, "import": 452, "statement": 452, "order": 452, "don": [452, 453], "t": [452, 453], "creat": [452, 490], "nake": 452, "input": [452, 475, 482, 494, 495, 503, 509], "file": [452, 490, 494, 495, 503, 505], "do": 452, "": [452, 484, 485], "infrastructur": 453, "good": 453, "commit": 453, "messag": 453, "pull": 453, "request": 453, "One": 453, "idea": 453, "pr": 453, "open": 453, "until": 453, "readi": 453, "It": 453, "watch": 453, "releas": [453, 483, 484, 485, 486, 487], "depend": 453, "manag": [453, 488, 494, 495, 503], "pyproject": 453, "toml": 453, "third": 453, "parti": 453, "log": 453, "duplic": 453, "level": 453, "analysi": [455, 458, 479, 481, 496], "write": 459, "mcnp": 459, "card": 459, "hex": [460, 461, 469], "rz": [460, 461], "convers": [460, 461], "comput": [462, 465, 467, 478], "volum": 465, "fraction": 465, "thermal": [465, 490, 495, 507], "expans": [465, 507], "chart": [466, 492], "more": 466, "reaction": [467, 477], "rate": 467, "theta": 471, "r": 471, "z": 471, "multi": [472, 473], "group": [472, 473], "x": 472, "matrix": 473, "librari": [474, 482, 491, 509], "programmat": 475, "facemap": 476, "decai": 477, "glossari": 480, "start": [481, 490], "background": 481, "coupl": [481, 506], "autom": 481, "capabl": 481, "research": 481, "scientist": 481, "nuclear": 481, "startup": 481, "engin": 481, "vendor": 481, "enthusiast": 481, "disclaim": 481, "instal": [482, 509], "prerequisit": [482, 509], "right": [482, 509], "python": [482, 490, 509], "command": [482, 509], "prepar": [482, 509], "virtual": [482, 509], "environ": [482, 503, 509], "step": [482, 509], "0": [482, 483, 484, 485, 486, 509], "pip": [482, 509], "option": [482, 509], "1": [482, 483, 484, 486, 488, 509], "2": [482, 483, 484, 509], "repositori": [482, 509], "verifi": [482, 509], "setup": [482, 509], "gui": [482, 503, 509], "output": [482, 490, 505, 509], "v0": [483, 484, 485, 486], "7": [483, 484, 492], "bug": [483, 484, 485, 486], "fix": [483, 484, 485, 486], "6": [483, 484], "deprec": 483, "bugfix": 483, "5": [483, 484], "user": [483, 502], "face": 483, "enhanc": 483, "backend": 483, "4": [483, 484, 486], "3": [483, 484, 485, 495], "hotfix": 483, "9": 484, "8": 484, "backward": 484, "incompat": 484, "qualiti": [485, 486], "work": [485, 486], "featur": 486, "affect": 486, "hand": 488, "termin": 488, "initi": 488, "explor": [488, 492], "quiz": 488, "question": 488, "state": [488, 504, 505], "densiti": 488, "save": 488, "disk": 488, "fuel": [488, 494, 495, 503], "load": [488, 505], "tutori": 489, "regist": 490, "defin": [490, 492, 494, 495, 503], "class": 490, "v": 490, "ar": [490, 492, 494], "again": 490, "kernel": 490, "dummi": 490, "flux": [490, 506], "hydraul": 490, "debug": 490, "window": 490, "tip": [490, 503], "yet": 490, "anoth": 490, "wai": 490, "why": 490, "__main__": 490, "py": 490, "check": 490, "fanci": 490, "bonu": 490, "hoc": 490, "userplugin": 490, "individu": 492, "attribut": 492, "mani": 492, "total": 492, "look": 492, "u": 492, "235": 492, "li": 492, "sweep": 493, "simpl": 493, "one": 493, "dimension": 493, "full": 493, "post": 493, "process": 493, "result": 493, "fast": 494, "non": 494, "radial": [494, 507], "shield": 494, "reflector": 494, "control": 494, "plenum": 494, "arrang": 494, "map": 494, "isotop": [495, 503], "vector": 495, "uo2": 495, "moder": 495, "d": 495, "definit": 495, "ok": 495, "so": 495, "now": 495, "neutronicsplugin": [499, 501], "fuelperformanceplugin": 499, "thermalhydraulicsplugin": 499, "yaml": 503, "clicker": 503, "tab": 503, "special": 503, "kinet": 503, "cycl": 503, "restart": 503, "type": 503, "pin": 503, "lattic": 503, "behavior": 503, "advanc": 503, "topic": 503, "overlap": 503, "shape": 503, "area": 503, "modif": 503, "put": 503, "all": 503, "togeth": 503, "unshap": 503, "swapassembli": 503, "dischargeswap": 503, "swapcascad": 503, "choos": 503, "move": 503, "converg": 503, "diverg": 503, "branch": 503, "search": 503, "variabl": 504, "interest": 504, "info": 504, "extract": 505, "structur": 505, "loos": 506, "tight": 506, "eigenvalu": 506, "wise": 506, "power": 506, "contract": 507}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"armi package": [[0, "module-armi"]], "Notes": [[0, null], [1, null], [1, null], [1, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [5, null], [5, null], [5, null], [5, null], [5, null], [7, null], [7, null], [7, null], [7, null], [7, null], [8, null], [10, null], [10, null], [11, null], [16, null], [20, null], [20, null], [20, null], [21, null], [29, null], [48, null], [48, null], [48, null], [48, null], [48, null], [48, null], [50, null], [51, null], [55, null], [56, null], [56, null], [57, null], [75, null], [78, null], [78, null], [78, null], [79, null], [79, null], [79, null], [79, null], [79, null], [79, null], [79, null], [79, null], [79, null], [80, null], [81, null], [81, null], [82, null], [82, null], [83, null], [83, null], [83, null], [84, null], [88, null], [89, null], [90, null], [91, null], [93, null], [94, null], [96, null], [97, null], [98, null], [100, null], [103, null], [104, null], [105, null], [105, null], [105, null], [105, null], [105, null], [105, null], [105, null], [105, null], [105, null], [105, null], [105, null], [106, null], [111, null], [112, null], [112, null], [113, null], [115, null], [115, null], [116, null], [117, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [141, null], [141, null], [142, null], [143, null], [152, null], [152, null], [152, null], [152, null], [152, null], [152, null], [152, null], [152, null], [154, null], [154, null], [154, null], [155, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [160, null], [161, null], [164, null], [164, null], [164, null], [164, null], [166, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [168, null], [168, null], [172, null], [173, null], [174, null], [174, null], [174, null], [174, null], [175, null], [176, null], [176, null], [176, null], [177, null], [180, null], [185, null], [192, null], [198, null], [198, null], [199, null], [201, null], [201, null], [201, null], [201, null], [201, null], [202, null], [202, null], [203, null], [203, null], [203, null], [203, null], [205, null], [205, null], [205, null], [205, null], [205, null], [205, null], [205, null], [206, null], [206, null], [208, null], [209, null], [212, null], [214, null], [215, null], [216, null], [217, null], [217, null], [220, null], [220, null], [220, null], [220, null], [220, null], [220, null], [220, null], [220, null], [221, null], [221, null], [221, null], [224, null], [225, null], [236, null], [237, null], [239, null], [239, null], [239, null], [239, null], [239, null], [239, null], [239, null], [239, null], [240, null], [240, null], [240, null], [240, null], [240, null], [240, null], [242, null], [244, null], [244, null], [244, null], [248, null], [251, null], [253, null], [255, null], [255, null], [255, null], [258, null], [258, null], [265, null], [265, null], [266, null], [282, null], [282, null], [282, null], [282, null], [282, null], [282, null], [282, null], [282, null], [282, null], [282, null], [284, null], [284, null], [284, null], [284, null], [284, null], [284, null], [284, null], [287, null], [287, null], [287, null], [287, null], [287, null], [287, null], [287, null], [287, null], [287, null], [287, null], [287, null], [287, null], [287, null], [287, null], [288, null], [288, null], [291, null], [292, null], [292, null], [293, null], [293, null], [293, null], [294, null], [294, null], [304, null], [304, null], [304, null], [304, null], [305, null], [305, null], [305, null], [305, null], [305, null], [306, null], [307, null], [307, null], [307, null], [307, null], [307, null], [307, null], [307, null], [307, null], [307, null], [309, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [314, null], [314, null], [314, null], [314, null], [314, null], [314, null], [315, null], [315, null], [315, null], [315, null], [316, null], [316, null], [316, null], [316, null], [317, null], [317, null], [317, null], [317, null], [317, null], [318, null], [321, null], [321, null], [323, null], [323, null], [323, null], [323, null], [323, null], [323, null], [323, null], [323, null], [323, null], [323, null], [325, null], [329, null], [329, null], [329, null], [329, null], [329, null], [329, null], [329, null], [330, null], [330, null], [330, null], [330, null], [330, null], [330, null], [330, null], [330, null], [330, null], [330, null], [330, null], [330, null], [330, null], [336, null], [336, null], [336, null], [338, null], [339, null], [339, null], [339, null], [339, null], [339, null], [340, null], [341, null], [341, null], [346, null], [346, null], [346, null], [346, null], [346, null], [348, null], [349, null], [351, null], [351, null], [354, null], [354, null], [354, null], [355, null], [355, null], [361, null], [361, null], [364, null], [364, null], [367, null], [367, null], [367, null], [367, null], [367, null], [372, null], [372, null], [372, null], [373, null], [373, null], [378, null], [380, null], [387, null], [397, null], [397, null], [397, null], [397, null], [397, null], [397, null], [397, null], [397, null], [397, null], [397, null], [397, null], [397, null], [398, null], [401, null], [402, null], [403, null], [407, null], [407, null], [407, null], [407, null], [409, null], [409, null], [410, null], [410, null], [410, null], [410, null], [412, null], [412, null], [413, null], [413, null], [413, null], [431, null], [439, null], [439, null], [439, null], [439, null], [439, null], [439, null], [440, null], [440, null], [441, null]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [3, "subpackages"], [23, "subpackages"], [38, "subpackages"], [47, "subpackages"], [49, "subpackages"], [61, "subpackages"], [80, "subpackages"], [145, "subpackages"], [153, "subpackages"], [165, "subpackages"], [166, "subpackages"], [204, "subpackages"], [213, "subpackages"], [216, "subpackages"], [227, "subpackages"], [237, "subpackages"], [243, "subpackages"], [250, "subpackages"], [254, "subpackages"], [274, "subpackages"], [283, "subpackages"], [288, "subpackages"], [311, "subpackages"], [366, "subpackages"], [397, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [13, "submodules"], [23, "submodules"], [30, "submodules"], [34, "submodules"], [38, "submodules"], [41, "submodules"], [47, "submodules"], [49, "submodules"], [53, "submodules"], [58, "submodules"], [61, "submodules"], [74, "submodules"], [80, "submodules"], [119, "submodules"], [145, "submodules"], [149, "submodules"], [153, "submodules"], [157, "submodules"], [165, "submodules"], [166, "submodules"], [181, "submodules"], [197, "submodules"], [204, "submodules"], [210, "submodules"], [213, "submodules"], [216, "submodules"], [223, "submodules"], [227, "submodules"], [232, "submodules"], [237, "submodules"], [243, "submodules"], [247, "submodules"], [250, "submodules"], [252, "submodules"], [254, "submodules"], [257, "submodules"], [264, "submodules"], [272, "submodules"], [274, "submodules"], [279, "submodules"], [283, "submodules"], [288, "submodules"], [295, "submodules"], [304, "submodules"], [311, "submodules"], [312, "submodules"], [319, "submodules"], [322, "submodules"], [334, "submodules"], [343, "submodules"], [352, "submodules"], [366, "submodules"], [368, "submodules"], [376, "submodules"], [380, "submodules"], [397, "submodules"], [417, "submodules"]], "armi.apps module": [[1, "module-armi.apps"]], "armi.bookkeeping package": [[2, "module-armi.bookkeeping"]], "armi.bookkeeping.db package": [[3, "module-armi.bookkeeping.db"]], "When updating a db version": [[3, "when-updating-a-db-version"]], "Database revision changelog": [[3, "database-revision-changelog"]], "armi.bookkeeping.db.compareDB3 module": [[4, "module-armi.bookkeeping.db.compareDB3"]], "armi.bookkeeping.db.database module": [[5, "module-armi.bookkeeping.db.database"]], "armi.bookkeeping.db.database3 module": [[6, "module-armi.bookkeeping.db.database3"]], "armi.bookkeeping.db.databaseInterface module": [[7, "module-armi.bookkeeping.db.databaseInterface"]], "armi.bookkeeping.db.factory module": [[8, "module-armi.bookkeeping.db.factory"]], "armi.bookkeeping.db.jaggedArray module": [[9, "module-armi.bookkeeping.db.jaggedArray"]], "armi.bookkeeping.db.layout module": [[10, "module-armi.bookkeeping.db.layout"]], "armi.bookkeeping.db.passiveDBLoadPlugin module": [[11, "module-armi.bookkeeping.db.passiveDBLoadPlugin"]], "armi.bookkeeping.db.permissions module": [[12, "module-armi.bookkeeping.db.permissions"]], "armi.bookkeeping.db.tests package": [[13, "module-armi.bookkeeping.db.tests"]], "armi.bookkeeping.db.tests.test_comparedb3 module": [[14, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "armi.bookkeeping.db.tests.test_database3 module": [[15, "module-armi.bookkeeping.db.tests.test_database3"]], "armi.bookkeeping.db.tests.test_databaseInterface module": [[16, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "armi.bookkeeping.db.tests.test_jaggedArray module": [[17, "module-armi.bookkeeping.db.tests.test_jaggedArray"]], "armi.bookkeeping.db.tests.test_layout module": [[18, "module-armi.bookkeeping.db.tests.test_layout"]], "armi.bookkeeping.db.typedefs module": [[19, "module-armi.bookkeeping.db.typedefs"]], "armi.bookkeeping.historyTracker module": [[20, "module-armi.bookkeeping.historyTracker"]], "Getting history information": [[20, "getting-history-information"]], "Using the database-based history trackers": [[20, "using-the-database-based-history-trackers"]], "Specifying parameters to add to the EOL history report": [[20, "specifying-parameters-to-add-to-the-eol-history-report"]], "Specifying blocks and assemblies to track": [[20, "specifying-blocks-and-assemblies-to-track"]], "armi.bookkeeping.mainInterface module": [[21, "module-armi.bookkeeping.mainInterface"]], "armi.bookkeeping.memoryProfiler module": [[22, "module-armi.bookkeeping.memoryProfiler"]], "armi.bookkeeping.report package": [[23, "module-armi.bookkeeping.report"]], "armi.bookkeeping.report.data module": [[24, "module-armi.bookkeeping.report.data"]], "armi.bookkeeping.report.html module": [[25, "module-armi.bookkeeping.report.html"]], "armi.bookkeeping.report.newReportUtils module": [[26, "module-armi.bookkeeping.report.newReportUtils"]], "armi.bookkeeping.report.newReports module": [[27, "module-armi.bookkeeping.report.newReports"]], "armi.bookkeeping.report.reportInterface module": [[28, "module-armi.bookkeeping.report.reportInterface"]], "armi.bookkeeping.report.reportingUtils module": [[29, "module-armi.bookkeeping.report.reportingUtils"]], "armi.bookkeeping.report.tests package": [[30, "module-armi.bookkeeping.report.tests"]], "armi.bookkeeping.report.tests.test_newReport module": [[31, "module-armi.bookkeeping.report.tests.test_newReport"]], "armi.bookkeeping.report.tests.test_report module": [[32, "module-armi.bookkeeping.report.tests.test_report"]], "armi.bookkeeping.snapshotInterface module": [[33, "module-armi.bookkeeping.snapshotInterface"]], "armi.bookkeeping.tests package": [[34, "module-armi.bookkeeping.tests"]], "armi.bookkeeping.tests.test_historyTracker module": [[35, "module-armi.bookkeeping.tests.test_historyTracker"]], "armi.bookkeeping.tests.test_memoryProfiler module": [[36, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "armi.bookkeeping.tests.test_snapshot module": [[37, "module-armi.bookkeeping.tests.test_snapshot"]], "armi.bookkeeping.visualization package": [[38, "module-armi.bookkeeping.visualization"]], "armi.bookkeeping.visualization.dumper module": [[39, "module-armi.bookkeeping.visualization.dumper"]], "armi.bookkeeping.visualization.entryPoint module": [[40, "module-armi.bookkeeping.visualization.entryPoint"]], "armi.bookkeeping.visualization.tests package": [[41, "module-armi.bookkeeping.visualization.tests"]], "armi.bookkeeping.visualization.tests.test_vis module": [[42, "module-armi.bookkeeping.visualization.tests.test_vis"]], "armi.bookkeeping.visualization.tests.test_xdmf module": [[43, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "armi.bookkeeping.visualization.utils module": [[44, "module-armi.bookkeeping.visualization.utils"]], "armi.bookkeeping.visualization.vtk module": [[45, "module-armi.bookkeeping.visualization.vtk"]], "Limitations": [[45, "limitations"]], "armi.bookkeeping.visualization.xdmf module": [[46, "module-armi.bookkeeping.visualization.xdmf"]], "armi.cases package": [[47, "module-armi.cases"]], "armi.cases.case module": [[48, "module-armi.cases.case"]], "armi.cases.inputModifiers package": [[49, "module-armi.cases.inputModifiers"]], "armi.cases.inputModifiers.inputModifiers module": [[50, "module-armi.cases.inputModifiers.inputModifiers"]], "armi.cases.inputModifiers.neutronicsModifiers module": [[51, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "armi.cases.inputModifiers.pinTypeInputModifiers module": [[52, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests package": [[53, "module-armi.cases.inputModifiers.tests"]], "armi.cases.inputModifiers.tests.test_inputModifiers module": [[54, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module": [[55, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "armi.cases.suite module": [[56, "module-armi.cases.suite"]], "armi.cases.suiteBuilder module": [[57, "module-armi.cases.suiteBuilder"]], "armi.cases.tests package": [[58, "module-armi.cases.tests"]], "armi.cases.tests.test_cases module": [[59, "module-armi.cases.tests.test_cases"]], "armi.cases.tests.test_suiteBuilder module": [[60, "module-armi.cases.tests.test_suiteBuilder"]], "armi.cli package": [[61, "module-armi.cli"]], "armi.cli.checkInputs module": [[62, "module-armi.cli.checkInputs"]], "armi.cli.cleanTemps module": [[63, "module-armi.cli.cleanTemps"]], "armi.cli.clone module": [[64, "module-armi.cli.clone"]], "armi.cli.compareCases module": [[65, "module-armi.cli.compareCases"]], "armi.cli.database module": [[66, "module-armi.cli.database"]], "armi.cli.entryPoint module": [[67, "module-armi.cli.entryPoint"]], "armi.cli.gridGui module": [[68, "module-armi.cli.gridGui"]], "armi.cli.migrateInputs module": [[69, "module-armi.cli.migrateInputs"]], "armi.cli.modify module": [[70, "module-armi.cli.modify"]], "armi.cli.reportsEntryPoint module": [[71, "module-armi.cli.reportsEntryPoint"]], "armi.cli.run module": [[72, "module-armi.cli.run"]], "armi.cli.runSuite module": [[73, "module-armi.cli.runSuite"]], "armi.cli.tests package": [[74, "module-armi.cli.tests"]], "armi.cli.tests.test_runEntryPoint module": [[75, "module-armi.cli.tests.test_runEntryPoint"]], "armi.cli.tests.test_runSuite module": [[76, "module-armi.cli.tests.test_runSuite"]], "armi.conftest module": [[77, "module-armi.conftest"]], "armi.context module": [[78, "module-armi.context"]], "armi.interfaces module": [[79, "module-armi.interfaces"]], "armi.materials package": [[80, "module-armi.materials"]], "armi.materials.air module": [[81, "module-armi.materials.air"]], "armi.materials.alloy200 module": [[82, "module-armi.materials.alloy200"]], "armi.materials.b4c module": [[83, "module-armi.materials.b4c"]], "armi.materials.be9 module": [[84, "module-armi.materials.be9"]], "armi.materials.caH2 module": [[85, "module-armi.materials.caH2"]], "armi.materials.californium module": [[86, "module-armi.materials.californium"]], "armi.materials.concrete module": [[87, "module-armi.materials.concrete"]], "armi.materials.copper module": [[88, "module-armi.materials.copper"]], "armi.materials.cs module": [[89, "module-armi.materials.cs"]], "armi.materials.custom module": [[90, "module-armi.materials.custom"]], "armi.materials.graphite module": [[91, "module-armi.materials.graphite"]], "armi.materials.hafnium module": [[92, "module-armi.materials.hafnium"]], "armi.materials.hastelloyN module": [[93, "module-armi.materials.hastelloyN"]], "armi.materials.ht9 module": [[94, "module-armi.materials.ht9"]], "armi.materials.inconel module": [[95, "module-armi.materials.inconel"]], "armi.materials.inconel600 module": [[96, "module-armi.materials.inconel600"]], "armi.materials.inconel625 module": [[97, "module-armi.materials.inconel625"]], "armi.materials.inconel800 module": [[98, "module-armi.materials.inconel800"]], "armi.materials.inconelPE16 module": [[99, "module-armi.materials.inconelPE16"]], "armi.materials.inconelX750 module": [[100, "module-armi.materials.inconelX750"]], "armi.materials.lead module": [[101, "module-armi.materials.lead"]], "armi.materials.leadBismuth module": [[102, "module-armi.materials.leadBismuth"]], "armi.materials.lithium module": [[103, "module-armi.materials.lithium"]], "armi.materials.magnesium module": [[104, "module-armi.materials.magnesium"]], "armi.materials.material module": [[105, "module-armi.materials.material"]], "armi.materials.mgO module": [[106, "module-armi.materials.mgO"]], "armi.materials.mixture module": [[107, "module-armi.materials.mixture"]], "armi.materials.molybdenum module": [[108, "module-armi.materials.molybdenum"]], "armi.materials.mox module": [[109, "module-armi.materials.mox"]], "armi.materials.nZ module": [[110, "module-armi.materials.nZ"]], "armi.materials.potassium module": [[111, "module-armi.materials.potassium"]], "armi.materials.scandiumOxide module": [[112, "module-armi.materials.scandiumOxide"]], "armi.materials.siC module": [[113, "module-armi.materials.siC"]], "armi.materials.sodium module": [[114, "module-armi.materials.sodium"]], "armi.materials.sodiumChloride module": [[115, "module-armi.materials.sodiumChloride"]], "armi.materials.sulfur module": [[116, "module-armi.materials.sulfur"]], "armi.materials.tZM module": [[117, "module-armi.materials.tZM"]], "armi.materials.tantalum module": [[118, "module-armi.materials.tantalum"]], "armi.materials.tests package": [[119, "module-armi.materials.tests"]], "armi.materials.tests.test__init__ module": [[120, "module-armi.materials.tests.test__init__"]], "armi.materials.tests.test_air module": [[121, "module-armi.materials.tests.test_air"]], "armi.materials.tests.test_b4c module": [[122, "module-armi.materials.tests.test_b4c"]], "armi.materials.tests.test_be9 module": [[123, "module-armi.materials.tests.test_be9"]], "armi.materials.tests.test_graphite module": [[124, "module-armi.materials.tests.test_graphite"]], "armi.materials.tests.test_lithium module": [[125, "module-armi.materials.tests.test_lithium"]], "armi.materials.tests.test_materials module": [[126, "module-armi.materials.tests.test_materials"]], "armi.materials.tests.test_sic module": [[127, "module-armi.materials.tests.test_sic"]], "armi.materials.tests.test_sulfur module": [[128, "module-armi.materials.tests.test_sulfur"]], "armi.materials.tests.test_thoriumOxide module": [[129, "module-armi.materials.tests.test_thoriumOxide"]], "armi.materials.tests.test_uZr module": [[130, "module-armi.materials.tests.test_uZr"]], "armi.materials.tests.test_water module": [[131, "module-armi.materials.tests.test_water"]], "armi.materials.thU module": [[132, "module-armi.materials.thU"]], "armi.materials.thorium module": [[133, "module-armi.materials.thorium"]], "armi.materials.thoriumOxide module": [[134, "module-armi.materials.thoriumOxide"]], "armi.materials.uThZr module": [[135, "module-armi.materials.uThZr"]], "armi.materials.uZr module": [[136, "module-armi.materials.uZr"]], "armi.materials.uranium module": [[137, "module-armi.materials.uranium"]], "armi.materials.uraniumOxide module": [[138, "module-armi.materials.uraniumOxide"]], "armi.materials.void module": [[139, "module-armi.materials.void"]], "armi.materials.water module": [[140, "module-armi.materials.water"]], "armi.materials.yttriumOxide module": [[141, "module-armi.materials.yttriumOxide"]], "armi.materials.zincOxide module": [[142, "module-armi.materials.zincOxide"]], "armi.materials.zr module": [[143, "module-armi.materials.zr"]], "armi.meta module": [[144, "module-armi.meta"]], "armi.migration package": [[145, "module-armi.migration"]], "armi.migration.base module": [[146, "module-armi.migration.base"]], "armi.migration.m0_1_3 module": [[147, "module-armi.migration.m0_1_3"]], "armi.migration.m0_1_6 module": [[148, "module-armi.migration.m0_1_6"]], "armi.migration.tests package": [[149, "module-armi.migration.tests"]], "armi.migration.tests.test_m0_1_6 module": [[150, "module-armi.migration.tests.test_m0_1_6"]], "armi.migration.tests.test_migration_base module": [[151, "module-armi.migration.tests.test_migration_base"]], "armi.mpiActions module": [[152, "module-armi.mpiActions"]], "Sample MPI Action Workflow": [[152, "id1"]], "armi.nucDirectory package": [[153, "module-armi.nucDirectory"]], "Elements": [[153, "elements"]], "Nuclide Bases": [[153, "nuclide-bases"]], "Nuclide names, labels, and IDs": [[153, "nuclide-names-labels-and-ids"]], "Indices - rapid access": [[153, "indices-rapid-access"]], "armi.nucDirectory.elements module": [[154, "module-armi.nucDirectory.elements"]], "List of elements": [[154, "nuclide-bases-table"]], "armi.nucDirectory.nucDir module": [[155, "module-armi.nucDirectory.nucDir"]], "armi.nucDirectory.nuclideBases module": [[156, "module-armi.nucDirectory.nuclideBases"]], "armi.nucDirectory.tests package": [[157, "module-armi.nucDirectory.tests"]], "armi.nucDirectory.tests.test_elements module": [[158, "module-armi.nucDirectory.tests.test_elements"]], "armi.nucDirectory.tests.test_nucDirectory module": [[159, "module-armi.nucDirectory.tests.test_nucDirectory"]], "armi.nucDirectory.tests.test_nuclideBases module": [[160, "module-armi.nucDirectory.tests.test_nuclideBases"]], "armi.nucDirectory.tests.test_thermalScattering module": [[161, "module-armi.nucDirectory.tests.test_thermalScattering"]], "armi.nucDirectory.tests.test_transmutations module": [[162, "module-armi.nucDirectory.tests.test_transmutations"]], "armi.nucDirectory.thermalScattering module": [[163, "module-armi.nucDirectory.thermalScattering"]], "armi.nucDirectory.transmutations module": [[164, "module-armi.nucDirectory.transmutations"]], "armi.nuclearDataIO package": [[165, "module-armi.nuclearDataIO"]], "armi.nuclearDataIO.cccc package": [[166, "module-armi.nuclearDataIO.cccc"]], "Using the system": [[166, "using-the-system"]], "Implementation details": [[166, "implementation-details"]], "Discussion": [[166, "discussion"]], "armi.nuclearDataIO.cccc.cccc module": [[167, "module-armi.nuclearDataIO.cccc.cccc"]], "armi.nuclearDataIO.cccc.compxs module": [[168, "module-armi.nuclearDataIO.cccc.compxs"]], "armi.nuclearDataIO.cccc.dif3d module": [[169, "module-armi.nuclearDataIO.cccc.dif3d"]], "armi.nuclearDataIO.cccc.dlayxs module": [[170, "module-armi.nuclearDataIO.cccc.dlayxs"]], "armi.nuclearDataIO.cccc.fixsrc module": [[171, "module-armi.nuclearDataIO.cccc.fixsrc"]], "armi.nuclearDataIO.cccc.gamiso module": [[172, "module-armi.nuclearDataIO.cccc.gamiso"]], "armi.nuclearDataIO.cccc.geodst module": [[173, "module-armi.nuclearDataIO.cccc.geodst"]], "armi.nuclearDataIO.cccc.isotxs module": [[174, "module-armi.nuclearDataIO.cccc.isotxs"]], "armi.nuclearDataIO.cccc.labels module": [[175, "module-armi.nuclearDataIO.cccc.labels"]], "armi.nuclearDataIO.cccc.nhflux module": [[176, "module-armi.nuclearDataIO.cccc.nhflux"]], "armi.nuclearDataIO.cccc.pmatrx module": [[177, "module-armi.nuclearDataIO.cccc.pmatrx"]], "armi.nuclearDataIO.cccc.pwdint module": [[178, "module-armi.nuclearDataIO.cccc.pwdint"]], "armi.nuclearDataIO.cccc.rtflux module": [[179, "module-armi.nuclearDataIO.cccc.rtflux"]], "armi.nuclearDataIO.cccc.rzflux module": [[180, "module-armi.nuclearDataIO.cccc.rzflux"]], "armi.nuclearDataIO.cccc.tests package": [[181, "module-armi.nuclearDataIO.cccc.tests"]], "armi.nuclearDataIO.cccc.tests.test_cccc module": [[182, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "armi.nuclearDataIO.cccc.tests.test_compxs module": [[183, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "armi.nuclearDataIO.cccc.tests.test_dif3d module": [[184, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs module": [[185, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc module": [[186, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"]], "armi.nuclearDataIO.cccc.tests.test_gamiso module": [[187, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "armi.nuclearDataIO.cccc.tests.test_geodst module": [[188, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs module": [[189, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "armi.nuclearDataIO.cccc.tests.test_labels module": [[190, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "armi.nuclearDataIO.cccc.tests.test_nhflux module": [[191, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx module": [[192, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "armi.nuclearDataIO.cccc.tests.test_pwdint module": [[193, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "armi.nuclearDataIO.cccc.tests.test_rtflux module": [[194, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux module": [[195, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "armi.nuclearDataIO.nuclearFileMetadata module": [[196, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "armi.nuclearDataIO.tests package": [[197, "module-armi.nuclearDataIO.tests"]], "armi.nuclearDataIO.tests.test_xsCollections module": [[198, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "armi.nuclearDataIO.tests.test_xsLibraries module": [[199, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "armi.nuclearDataIO.tests.test_xsNuclides module": [[200, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "armi.nuclearDataIO.xsCollections module": [[201, "module-armi.nuclearDataIO.xsCollections"]], "armi.nuclearDataIO.xsLibraries module": [[202, "module-armi.nuclearDataIO.xsLibraries"]], "armi.nuclearDataIO.xsNuclides module": [[203, "module-armi.nuclearDataIO.xsNuclides"]], "armi.operators package": [[204, "module-armi.operators"]], "armi.operators.operator module": [[205, "module-armi.operators.operator"]], "armi.operators.operatorMPI module": [[206, "module-armi.operators.operatorMPI"]], "armi.operators.runTypes module": [[207, "module-armi.operators.runTypes"]], "armi.operators.settingsValidation module": [[208, "module-armi.operators.settingsValidation"]], "armi.operators.snapshots module": [[209, "module-armi.operators.snapshots"]], "armi.operators.tests package": [[210, "module-armi.operators.tests"]], "armi.operators.tests.test_operatorSnapshots module": [[211, "module-armi.operators.tests.test_operatorSnapshots"]], "armi.operators.tests.test_operators module": [[212, "module-armi.operators.tests.test_operators"]], "armi.physics package": [[213, "module-armi.physics"]], "Historical fun fact": [[213, null]], "armi.physics.constants module": [[214, "module-armi.physics.constants"]], "armi.physics.executers module": [[215, "module-armi.physics.executers"]], "armi.physics.fuelCycle package": [[216, "module-armi.physics.fuelCycle"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms module": [[217, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.fuelHandlerFactory module": [[218, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface module": [[219, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlers module": [[220, "module-armi.physics.fuelCycle.fuelHandlers"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module": [[221, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.settings module": [[222, "module-armi.physics.fuelCycle.settings"]], "armi.physics.fuelCycle.tests package": [[223, "module-armi.physics.fuelCycle.tests"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module": [[224, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.tests.test_fuelHandlers module": [[225, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module": [[226, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelPerformance package": [[227, "module-armi.physics.fuelPerformance"]], "armi.physics.fuelPerformance.executers module": [[228, "module-armi.physics.fuelPerformance.executers"]], "armi.physics.fuelPerformance.parameters module": [[229, "module-armi.physics.fuelPerformance.parameters"]], "armi.physics.fuelPerformance.plugin module": [[230, "module-armi.physics.fuelPerformance.plugin"]], "armi.physics.fuelPerformance.settings module": [[231, "module-armi.physics.fuelPerformance.settings"]], "armi.physics.fuelPerformance.tests package": [[232, "module-armi.physics.fuelPerformance.tests"]], "armi.physics.fuelPerformance.tests.test_executers module": [[233, "module-armi.physics.fuelPerformance.tests.test_executers"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module": [[234, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module": [[235, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.utils module": [[236, "module-armi.physics.fuelPerformance.utils"]], "armi.physics.neutronics package": [[237, "module-armi.physics.neutronics"]], "armi.physics.neutronics.const module": [[238, "module-armi.physics.neutronics.const"]], "armi.physics.neutronics.crossSectionGroupManager module": [[239, "module-armi.physics.neutronics.crossSectionGroupManager"]], "armi.physics.neutronics.crossSectionSettings module": [[240, "module-armi.physics.neutronics.crossSectionSettings"]], "armi.physics.neutronics.diffIsotxs module": [[241, "module-armi.physics.neutronics.diffIsotxs"]], "armi.physics.neutronics.energyGroups module": [[242, "module-armi.physics.neutronics.energyGroups"]], "armi.physics.neutronics.fissionProductModel package": [[243, "module-armi.physics.neutronics.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel module": [[244, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module": [[245, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module": [[246, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests package": [[247, "module-armi.physics.neutronics.fissionProductModel.tests"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module": [[248, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module": [[249, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "armi.physics.neutronics.globalFlux package": [[250, "module-armi.physics.neutronics.globalFlux"]], "armi.physics.neutronics.globalFlux.globalFluxInterface module": [[251, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests package": [[252, "module-armi.physics.neutronics.globalFlux.tests"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module": [[253, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "armi.physics.neutronics.latticePhysics package": [[254, "module-armi.physics.neutronics.latticePhysics"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module": [[255, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module": [[256, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests package": [[257, "module-armi.physics.neutronics.latticePhysics.tests"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module": [[258, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module": [[259, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "armi.physics.neutronics.macroXSGenerationInterface module": [[260, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "armi.physics.neutronics.parameters module": [[261, "module-armi.physics.neutronics.parameters"]], "armi.physics.neutronics.reports module": [[262, "module-armi.physics.neutronics.reports"]], "armi.physics.neutronics.settings module": [[263, "module-armi.physics.neutronics.settings"]], "armi.physics.neutronics.tests package": [[264, "module-armi.physics.neutronics.tests"]], "armi.physics.neutronics.tests.test_crossSectionManager module": [[265, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "armi.physics.neutronics.tests.test_crossSectionSettings module": [[266, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "armi.physics.neutronics.tests.test_crossSectionTable module": [[267, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "armi.physics.neutronics.tests.test_energyGroups module": [[268, "module-armi.physics.neutronics.tests.test_energyGroups"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface module": [[269, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_neutronicsPlugin module": [[270, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "armi.physics.safety package": [[271, "module-armi.physics.safety"]], "armi.physics.tests package": [[272, "module-armi.physics.tests"]], "armi.physics.tests.test_executers module": [[273, "module-armi.physics.tests.test_executers"]], "armi.physics.thermalHydraulics package": [[274, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalHydraulics.const module": [[275, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalHydraulics.parameters module": [[276, "module-armi.physics.thermalHydraulics.parameters"]], "armi.physics.thermalHydraulics.plugin module": [[277, "module-armi.physics.thermalHydraulics.plugin"]], "armi.physics.thermalHydraulics.settings module": [[278, "module-armi.physics.thermalHydraulics.settings"]], "armi.physics.thermalHydraulics.tests package": [[279, "module-armi.physics.thermalHydraulics.tests"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin module": [[280, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"]], "armi.pluginManager module": [[281, "module-armi.pluginManager"]], "armi.plugins module": [[282, "module-armi.plugins"]], "armi.reactor package": [[283, "module-armi.reactor"]], "armi.reactor.assemblies module": [[284, "module-armi.reactor.assemblies"]], "armi.reactor.assemblyParameters module": [[285, "module-armi.reactor.assemblyParameters"]], "armi.reactor.blockParameters module": [[286, "module-armi.reactor.blockParameters"]], "armi.reactor.blocks module": [[287, "module-armi.reactor.blocks"]], "Parameter": [[287, "parameter"]], "armi.reactor.blueprints package": [[288, "module-armi.reactor.blueprints"]], "armi.reactor.blueprints.assemblyBlueprint module": [[289, "module-armi.reactor.blueprints.assemblyBlueprint"]], "armi.reactor.blueprints.blockBlueprint module": [[290, "module-armi.reactor.blueprints.blockBlueprint"]], "armi.reactor.blueprints.componentBlueprint module": [[291, "module-armi.reactor.blueprints.componentBlueprint"]], "armi.reactor.blueprints.gridBlueprint module": [[292, "module-armi.reactor.blueprints.gridBlueprint"]], "armi.reactor.blueprints.isotopicOptions module": [[293, "module-armi.reactor.blueprints.isotopicOptions"]], "armi.reactor.blueprints.reactorBlueprint module": [[294, "module-armi.reactor.blueprints.reactorBlueprint"]], "armi.reactor.blueprints.tests package": [[295, "module-armi.reactor.blueprints.tests"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints module": [[296, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "armi.reactor.blueprints.tests.test_blockBlueprints module": [[297, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "armi.reactor.blueprints.tests.test_blueprints module": [[298, "module-armi.reactor.blueprints.tests.test_blueprints"]], "armi.reactor.blueprints.tests.test_componentBlueprint module": [[299, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "armi.reactor.blueprints.tests.test_customIsotopics module": [[300, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "armi.reactor.blueprints.tests.test_gridBlueprints module": [[301, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "armi.reactor.blueprints.tests.test_materialModifications module": [[302, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "armi.reactor.blueprints.tests.test_reactorBlueprints module": [[303, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "armi.reactor.components package": [[304, "module-armi.reactor.components"]], "armi.reactor.components.basicShapes module": [[305, "module-armi.reactor.components.basicShapes"]], "armi.reactor.components.complexShapes module": [[306, "module-armi.reactor.components.complexShapes"]], "armi.reactor.components.component module": [[307, "module-armi.reactor.components.component"]], "armi.reactor.components.componentParameters module": [[308, "module-armi.reactor.components.componentParameters"]], "armi.reactor.components.volumetricShapes module": [[309, "module-armi.reactor.components.volumetricShapes"]], "armi.reactor.composites module": [[310, "module-armi.reactor.composites"]], "armi.reactor.converters package": [[311, "module-armi.reactor.converters"]], "armi.reactor.converters.axialExpansionChanger package": [[312, "module-armi.reactor.converters.axialExpansionChanger"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage module": [[313, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger module": [[314, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"]], "armi.reactor.converters.axialExpansionChanger.expansionData module": [[315, "module-armi.reactor.converters.axialExpansionChanger.expansionData"]], "armi.reactor.converters.blockConverters module": [[316, "module-armi.reactor.converters.blockConverters"]], "armi.reactor.converters.geometryConverters module": [[317, "module-armi.reactor.converters.geometryConverters"]], "armi.reactor.converters.meshConverters module": [[318, "module-armi.reactor.converters.meshConverters"]], "armi.reactor.converters.parameterSweeps package": [[319, "module-armi.reactor.converters.parameterSweeps"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module": [[320, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "armi.reactor.converters.pinTypeBlockConverters module": [[321, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests package": [[322, "module-armi.reactor.converters.tests"]], "armi.reactor.converters.tests.test_axialExpansionChanger module": [[323, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "armi.reactor.converters.tests.test_blockConverter module": [[324, "module-armi.reactor.converters.tests.test_blockConverter"]], "armi.reactor.converters.tests.test_geometryConverters module": [[325, "module-armi.reactor.converters.tests.test_geometryConverters"]], "armi.reactor.converters.tests.test_meshConverters module": [[326, "module-armi.reactor.converters.tests.test_meshConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters module": [[327, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "armi.reactor.converters.tests.test_uniformMesh module": [[328, "module-armi.reactor.converters.tests.test_uniformMesh"]], "armi.reactor.converters.uniformMesh module": [[329, "module-armi.reactor.converters.uniformMesh"]], "Requirements": [[329, "requirements"]], "armi.reactor.cores module": [[330, "module-armi.reactor.cores"]], "armi.reactor.excoreStructure module": [[331, "module-armi.reactor.excoreStructure"]], "armi.reactor.flags module": [[332, "module-armi.reactor.flags"]], "armi.reactor.geometry module": [[333, "module-armi.reactor.geometry"]], "armi.reactor.grids package": [[334, "module-armi.reactor.grids"]], "armi.reactor.grids.axial module": [[335, "module-armi.reactor.grids.axial"]], "armi.reactor.grids.cartesian module": [[336, "module-armi.reactor.grids.cartesian"]], "armi.reactor.grids.constants module": [[337, "module-armi.reactor.grids.constants"]], "armi.reactor.grids.grid module": [[338, "module-armi.reactor.grids.grid"]], "armi.reactor.grids.hexagonal module": [[339, "module-armi.reactor.grids.hexagonal"]], "armi.reactor.grids.locations module": [[340, "module-armi.reactor.grids.locations"]], "armi.reactor.grids.structuredGrid module": [[341, "module-armi.reactor.grids.structuredGrid"]], "armi.reactor.grids.thetarz module": [[342, "module-armi.reactor.grids.thetarz"]], "armi.reactor.parameters package": [[343, "module-armi.reactor.parameters"]], "Example Parameters": [[343, "id1"]], "Basic Usage": [[343, "basic-usage"]], "Design Considerations": [[343, "design-considerations"]], "Design considerations": [[343, "id2"]], "armi.reactor.parameters.exceptions module": [[344, "module-armi.reactor.parameters.exceptions"]], "armi.reactor.parameters.parameterCollections module": [[345, "module-armi.reactor.parameters.parameterCollections"]], "armi.reactor.parameters.parameterDefinitions module": [[346, "module-armi.reactor.parameters.parameterDefinitions"]], "armi.reactor.parameters.resolveCollections module": [[347, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorParameters module": [[348, "module-armi.reactor.reactorParameters"]], "armi.reactor.reactors module": [[349, "module-armi.reactor.reactors"]], "armi.reactor.spentFuelPool module": [[350, "module-armi.reactor.spentFuelPool"]], "armi.reactor.systemLayoutInput module": [[351, "module-armi.reactor.systemLayoutInput"]], "armi.reactor.tests package": [[352, "module-armi.reactor.tests"]], "armi.reactor.tests.test_assemblies module": [[353, "module-armi.reactor.tests.test_assemblies"]], "armi.reactor.tests.test_blocks module": [[354, "module-armi.reactor.tests.test_blocks"]], "armi.reactor.tests.test_components module": [[355, "module-armi.reactor.tests.test_components"]], "armi.reactor.tests.test_composites module": [[356, "module-armi.reactor.tests.test_composites"]], "armi.reactor.tests.test_excoreStructures module": [[357, "module-armi.reactor.tests.test_excoreStructures"]], "armi.reactor.tests.test_flags module": [[358, "module-armi.reactor.tests.test_flags"]], "armi.reactor.tests.test_geometry module": [[359, "module-armi.reactor.tests.test_geometry"]], "armi.reactor.tests.test_parameters module": [[360, "module-armi.reactor.tests.test_parameters"]], "armi.reactor.tests.test_reactors module": [[361, "module-armi.reactor.tests.test_reactors"]], "armi.reactor.tests.test_rz_reactors module": [[362, "module-armi.reactor.tests.test_rz_reactors"]], "armi.reactor.tests.test_zones module": [[363, "module-armi.reactor.tests.test_zones"]], "armi.reactor.zones module": [[364, "module-armi.reactor.zones"]], "armi.runLog module": [[365, "module-armi.runLog"]], "armi.settings package": [[366, "module-armi.settings"]], "armi.settings.caseSettings module": [[367, "module-armi.settings.caseSettings"]], "armi.settings.fwSettings package": [[368, "module-armi.settings.fwSettings"]], "armi.settings.fwSettings.databaseSettings module": [[369, "module-armi.settings.fwSettings.databaseSettings"]], "armi.settings.fwSettings.globalSettings module": [[370, "module-armi.settings.fwSettings.globalSettings"]], "armi.settings.fwSettings.reportSettings module": [[371, "module-armi.settings.fwSettings.reportSettings"]], "armi.settings.fwSettings.tightCouplingSettings module": [[372, "module-armi.settings.fwSettings.tightCouplingSettings"]], "armi.settings.setting module": [[373, "module-armi.settings.setting"]], "armi.settings.settingsIO module": [[374, "module-armi.settings.settingsIO"]], "armi.settings.settingsValidation module": [[375, "module-armi.settings.settingsValidation"]], "armi.settings.tests package": [[376, "module-armi.settings.tests"]], "armi.settings.tests.test_inspectors module": [[377, "module-armi.settings.tests.test_inspectors"]], "armi.settings.tests.test_settings module": [[378, "module-armi.settings.tests.test_settings"]], "armi.settings.tests.test_settingsIO module": [[379, "module-armi.settings.tests.test_settingsIO"]], "armi.tests package": [[380, "module-armi.tests"]], "armi.tests.mockRunLogs module": [[381, "module-armi.tests.mockRunLogs"]], "armi.tests.refSmallReactorShuffleLogic module": [[382, "module-armi.tests.refSmallReactorShuffleLogic"]], "armi.tests.test_apps module": [[383, "module-armi.tests.test_apps"]], "armi.tests.test_armiTestHelper module": [[384, "module-armi.tests.test_armiTestHelper"]], "armi.tests.test_cartesian module": [[385, "module-armi.tests.test_cartesian"]], "armi.tests.test_context module": [[386, "module-armi.tests.test_context"]], "armi.tests.test_interfaces module": [[387, "module-armi.tests.test_interfaces"]], "armi.tests.test_lwrInputs module": [[388, "module-armi.tests.test_lwrInputs"]], "armi.tests.test_mpiActions module": [[389, "module-armi.tests.test_mpiActions"]], "armi.tests.test_mpiFeatures module": [[390, "module-armi.tests.test_mpiFeatures"]], "armi.tests.test_mpiParameters module": [[391, "module-armi.tests.test_mpiParameters"]], "armi.tests.test_notebooks module": [[392, "module-armi.tests.test_notebooks"]], "armi.tests.test_plugins module": [[393, "module-armi.tests.test_plugins"]], "armi.tests.test_runLog module": [[394, "module-armi.tests.test_runLog"]], "armi.tests.test_tests module": [[395, "module-armi.tests.test_tests"]], "armi.tests.test_user_plugins module": [[396, "module-armi.tests.test_user_plugins"]], "armi.utils package": [[397, "module-armi.utils"]], "armi.utils.asciimaps module": [[398, "module-armi.utils.asciimaps"]], "armi.utils.codeTiming module": [[399, "module-armi.utils.codeTiming"]], "armi.utils.customExceptions module": [[400, "module-armi.utils.customExceptions"]], "armi.utils.densityTools module": [[401, "module-armi.utils.densityTools"]], "armi.utils.directoryChangers module": [[402, "module-armi.utils.directoryChangers"]], "armi.utils.directoryChangersMpi module": [[403, "module-armi.utils.directoryChangersMpi"]], "armi.utils.dynamicImporter module": [[404, "module-armi.utils.dynamicImporter"]], "armi.utils.flags module": [[405, "module-armi.utils.flags"]], "armi.utils.gridEditor module": [[406, "armi-utils-grideditor-module"]], "armi.utils.hexagon module": [[407, "module-armi.utils.hexagon"]], "armi.utils.iterables module": [[408, "module-armi.utils.iterables"]], "armi.utils.mathematics module": [[409, "module-armi.utils.mathematics"]], "armi.utils.outputCache module": [[410, "module-armi.utils.outputCache"]], "API usage": [[410, "api-usage"]], "armi.utils.parsing module": [[411, "module-armi.utils.parsing"]], "armi.utils.pathTools module": [[412, "module-armi.utils.pathTools"]], "armi.utils.plotting module": [[413, "module-armi.utils.plotting"]], "armi.utils.properties module": [[414, "module-armi.utils.properties"]], "armi.utils.reportPlotting module": [[415, "module-armi.utils.reportPlotting"]], "armi.utils.tabulate module": [[416, "module-armi.utils.tabulate"]], "Usage": [[416, "usage"]], "Table headers": [[416, "table-headers"]], "Column and Headers alignment": [[416, "column-and-headers-alignment"]], "Table formats": [[416, "table-formats"]], "Number parsing": [[416, "number-parsing"]], "Column Widths and Auto Line Wrapping": [[416, "column-widths-and-auto-line-wrapping"]], "armi.utils.tests package": [[417, "module-armi.utils.tests"]], "armi.utils.tests.test_asciimaps module": [[418, "module-armi.utils.tests.test_asciimaps"]], "armi.utils.tests.test_codeTiming module": [[419, "module-armi.utils.tests.test_codeTiming"]], "armi.utils.tests.test_custom_exceptions module": [[420, "module-armi.utils.tests.test_custom_exceptions"]], "armi.utils.tests.test_densityTools module": [[421, "module-armi.utils.tests.test_densityTools"]], "armi.utils.tests.test_directoryChangers module": [[422, "module-armi.utils.tests.test_directoryChangers"]], "armi.utils.tests.test_directoryChangersMpi module": [[423, "module-armi.utils.tests.test_directoryChangersMpi"]], "armi.utils.tests.test_flags module": [[424, "module-armi.utils.tests.test_flags"]], "armi.utils.tests.test_hexagon module": [[425, "module-armi.utils.tests.test_hexagon"]], "armi.utils.tests.test_iterables module": [[426, "module-armi.utils.tests.test_iterables"]], "armi.utils.tests.test_mathematics module": [[427, "module-armi.utils.tests.test_mathematics"]], "armi.utils.tests.test_outputCache module": [[428, "module-armi.utils.tests.test_outputCache"]], "armi.utils.tests.test_parsing module": [[429, "module-armi.utils.tests.test_parsing"]], "armi.utils.tests.test_pathTools module": [[430, "module-armi.utils.tests.test_pathTools"]], "armi.utils.tests.test_plotting module": [[431, "module-armi.utils.tests.test_plotting"]], "armi.utils.tests.test_properties module": [[432, "module-armi.utils.tests.test_properties"]], "armi.utils.tests.test_reportPlotting module": [[433, "module-armi.utils.tests.test_reportPlotting"]], "armi.utils.tests.test_tabulate module": [[434, "module-armi.utils.tests.test_tabulate"]], "armi.utils.tests.test_textProcessors module": [[435, "module-armi.utils.tests.test_textProcessors"]], "armi.utils.tests.test_triangle module": [[436, "module-armi.utils.tests.test_triangle"]], "armi.utils.tests.test_units module": [[437, "module-armi.utils.tests.test_units"]], "armi.utils.tests.test_utils module": [[438, "module-armi.utils.tests.test_utils"]], "armi.utils.textProcessors module": [[439, "module-armi.utils.textProcessors"]], "armi.utils.triangle module": [[440, "module-armi.utils.triangle"]], "armi.utils.units module": [[441, "module-armi.utils.units"]], "armi": [[442, "armi"]], "Documenting ARMI": [[443, "documenting-armi"]], "Building the documentation": [[443, "building-the-documentation"]], "Documentation for ARMI plugins": [[443, "documentation-for-armi-plugins"]], "Linking to ARMI documentation from plugins": [[443, "linking-to-armi-documentation-from-plugins"]], "Automatically building apidocs of namespace packages": [[443, "automatically-building-apidocs-of-namespace-packages"]], "Updating the Gallery": [[443, "updating-the-gallery"]], "Using Jupyter notebooks": [[443, "using-jupyter-notebooks"]], "Entry Points": [[444, "entry-points"], [446, "entry-points"]], "First Time Contributors Guide": [[445, "first-time-contributors-guide"]], "Help Wanted": [[445, "help-wanted"]], "Testing": [[445, "testing"]], "Submitting Changes": [[445, "submitting-changes"]], "Licensing of Tools": [[445, "licensing-of-tools"]], "Framework Architecture": [[446, "framework-architecture"]], "The Reactor Model": [[446, "the-reactor-model"]], "Finding objects in a model": [[446, "finding-objects-in-a-model"]], "Parameters": [[446, "parameters"]], "Converters": [[446, "converters"]], "Blueprints": [[446, "blueprints"]], "Operators": [[446, "operators"]], "The Standard Operator": [[446, "the-standard-operator"]], "The Snapshots Operator": [[446, "the-snapshots-operator"]], "The Interface Stack": [[446, "the-interface-stack"]], "Interface Interaction Hooks": [[446, "interface-interaction-hooks"]], "Adding a new interface": [[446, "adding-a-new-interface"]], "How interfaces get called": [[446, "how-interfaces-get-called"]], "Plugins": [[446, "plugins"]], "Developer Docs": [[447, "developer-docs"]], "Making ARMI-based Apps": [[448, "making-armi-based-apps"]], "Heads up": [[448, null]], "ARMI Plugins": [[448, "armi-plugins"]], "Some implementation details": [[448, "some-implementation-details"]], "Making your own Plugin": [[448, "making-your-own-plugin"]], "ARMI-Based Applications": [[448, "armi-based-applications"]], "Parallel Code in ARMI": [[449, "parallel-code-in-armi"]], "MPI communication crash course": [[449, "mpi-communication-crash-course"]], "MPI Communication within ARMI": [[449, "mpi-communication-within-armi"]], "Example using bcast": [[449, "example-using-bcast"]], "Example using scatter": [[449, "example-using-scatter"]], "A simplified approach": [[449, "a-simplified-approach"]], "Profiling ARMI": [[450, "profiling-armi"]], "Reports in ARMI": [[451, "reports-in-armi"]], "The Hook: getReportContents()": [[451, "the-hook-getreportcontents"]], "What is ReportContent?": [[451, "what-is-reportcontent"]], "Sections": [[451, "sections"]], "Tables": [[451, "tables"]], "Images": [[451, "images"]], "TimeSeries": [[451, "timeseries"]], "HTML Elements": [[451, "html-elements"]], "Summary": [[451, "summary"]], "Standards and Practices for Coding": [[452, "standards-and-practices-for-coding"]], "Code formatting with Black": [[452, "code-formatting-with-black"]], "Address the ruff warnings": [[452, "address-the-ruff-warnings"]], "Remove commented-out code": [[452, "remove-commented-out-code"]], "Avoid hard-coding run parameters": [[452, "avoid-hard-coding-run-parameters"]], "Avoid the global keyword": [[452, "avoid-the-global-keyword"]], "Naming conventions": [[452, "naming-conventions"]], "Use meaningful names": [[452, "use-meaningful-names"]], "General conventions": [[452, "general-conventions"]], "Naming quick-reference": [[452, "naming-quick-reference"]], "Common naming conventions within ARMI": [[452, "common-naming-conventions-within-armi"]], "Prefer shorter methods": [[452, "prefer-shorter-methods"]], "Avoid repeating code": [[452, "avoid-repeating-code"]], "Public methods should have docstrings": [[452, "public-methods-should-have-docstrings"]], "Unit tests": [[452, "unit-tests"]], "Import statements": [[452, "import-statements"]], "Import ordering": [[452, "import-ordering"]], "Don\u2019t create naked exceptions.": [[452, "don-t-create-naked-exceptions"]], "Data model": [[452, "data-model"]], "Input files": [[452, "input-files"]], "General do\u2019s and don\u2019ts": [[452, "general-do-s-and-don-ts"]], "Tooling and Infrastructure": [[453, "tooling-and-infrastructure"]], "Good Commit Messages": [[453, "good-commit-messages"]], "Good Pull Requests": [[453, "good-pull-requests"]], "One Idea = One PR": [[453, "one-idea-one-pr"]], "Don\u2019t open until it is ready": [[453, "don-t-open-until-it-is-ready"]], "Test It": [[453, "test-it"]], "Document It": [[453, "document-it"]], "Watch for Requirements": [[453, "watch-for-requirements"]], "Add Release Notes": [[453, "add-release-notes"]], "Packaging and dependency management": [[453, "packaging-and-dependency-management"]], "pyproject.toml": [[453, "pyproject-toml"]], "Third-Party Licensing": [[453, "third-party-licensing"]], "Releasing a New Version of ARMI": [[453, "releasing-a-new-version-of-armi"]], "Logging with runLog": [[453, "logging-with-runlog"]], "Blocking Duplicate Logs": [[453, "blocking-duplicate-logs"]], "Module-Level Logging": [[453, "module-level-logging"]], "Gallery": [[454, "gallery"], [479, "gallery"], [496, "gallery"]], "Analysis": [[455, "analysis"], [458, "analysis"], [479, "analysis"], [496, "analysis"]], "Applications": [[456, "applications"], [463, "applications"], [479, "applications"], [496, "applications"]], "Framework": [[457, "framework"], [464, "framework"], [479, "framework"], [496, "framework"]], "Write MCNP Material Cards": [[459, "write-mcnp-material-cards"]], "Hex block to RZ geometry conversion": [[460, "hex-block-to-rz-geometry-conversion"]], "Hex reactor to RZ geometry conversion": [[461, "hex-reactor-to-rz-geometry-conversion"]], "Computation times": [[462, "computation-times"], [478, "computation-times"]], "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion": [[465, "computing-component-volume-fractions-on-a-block-with-automatic-thermal-expansion"]], "Plot a chart of the nuclides.": [[466, "plot-a-chart-of-the-nuclides"]], "More details": [[466, null]], "Computing Reaction Rates on a Block.": [[467, "computing-reaction-rates-on-a-block"]], "Make a hex grid.": [[469, "make-a-hex-grid"]], "Make a Cartesian grid.": [[470, "make-a-cartesian-grid"]], "Make a Theta-R-Z grid.": [[471, "make-a-theta-r-z-grid"]], "Plotting Multi-group XS from ISOTXS.": [[472, "plotting-multi-group-xs-from-isotxs"]], "Plotting a multi-group scatter matrix.": [[473, "plotting-a-multi-group-scatter-matrix"]], "Listing of Material Library.": [[474, "listing-of-material-library"]], "Build Reactor Inputs Programmatically.": [[475, "build-reactor-inputs-programmatically"]], "Plot a reactor facemap.": [[476, "plot-a-reactor-facemap"]], "Transmutation and decay reactions.": [[477, "transmutation-and-decay-reactions"]], "Glossary": [[480, "glossary"]], "ARMI": [[481, "armi"]], "Quick links": [[481, "id3"]], "Quick start": [[481, "quick-start"]], "Background": [[481, "background"]], "Communication and coupling": [[481, "communication-and-coupling"]], "Automation": [[481, "automation"]], "New analysis and physics capabilities": [[481, "new-analysis-and-physics-capabilities"]], "Use cases": [[481, "use-cases"]], "The Research Scientist": [[481, "the-research-scientist"]], "The Nuclear Startup Engineer": [[481, "the-nuclear-startup-engineer"]], "Operating and Vendor Engineers": [[481, "operating-and-vendor-engineers"]], "The Enthusiast": [[481, "the-enthusiast"]], "History of ARMI": [[481, "history-of-armi"]], "System Requirements": [[481, "system-requirements"]], "Getting help": [[481, "getting-help"]], "Disclaimers": [[481, "disclaimers"]], "License": [[481, "license"]], "Installation": [[482, "installation"], [509, "installation"]], "Prerequisites": [[482, "prerequisites"], [509, "prerequisites"]], "The right Python command": [[482, null], [509, null]], "Preparing a Virtual Environment": [[482, "preparing-a-virtual-environment"], [509, "preparing-a-virtual-environment"]], "Getting the code": [[482, "getting-the-code"], [509, "getting-the-code"]], "Step 0: Update PIP": [[482, "step-0-update-pip"], [509, "step-0-update-pip"]], "Option 1: Install as a library": [[482, "option-1-install-as-a-library"], [509, "option-1-install-as-a-library"]], "Option 2: Install as a repository (for developers)": [[482, "option-2-install-as-a-repository-for-developers"], [509, "option-2-install-as-a-repository-for-developers"]], "Verifying installation": [[482, "verifying-installation"], [509, "verifying-installation"]], "Optional Setup": [[482, "optional-setup"], [509, "optional-setup"]], "GUI input": [[482, "gui-input"], [509, "gui-input"]], "GUI output": [[482, "gui-output"], [509, "gui-output"]], "ARMI v0.1 Release Notes": [[483, "armi-v0-1-release-notes"]], "ARMI v0.1.7": [[483, "armi-v0-1-7"]], "API changes": [[483, "api-changes"]], "Bug fixes": [[483, "bug-fixes"], [484, "bug-fixes"], [484, "id6"], [484, "id9"], [484, "id13"], [484, "id16"], [484, "id18"], [484, "id22"], [484, "id24"], [484, "id26"], [484, "id29"]], "ARMI v0.1.6": [[483, "armi-v0-1-6"]], "Deprecations": [[483, "deprecations"]], "Bugfixes": [[483, "bugfixes"], [483, "id1"], [483, "id2"], [483, "id4"]], "ARMI v0.1.5": [[483, "armi-v0-1-5"]], "User-facing enhancements": [[483, "user-facing-enhancements"], [483, "id3"], [483, "id6"]], "Backend changes": [[483, "backend-changes"], [483, "id5"], [483, "id7"]], "ARMI v0.1.4": [[483, "armi-v0-1-4"]], "ARMI v0.1.3": [[483, "armi-v0-1-3"]], "ARMI v0.1.2": [[483, "armi-v0-1-2"]], "Hotfixes": [[483, "hotfixes"]], "ARMI v0.1.1": [[483, "armi-v0-1-1"]], "ARMI v0.1.0": [[483, "armi-v0-1-0"]], "ARMI v0.2 Release Notes": [[484, "armi-v0-2-release-notes"]], "ARMI v0.2.9": [[484, "armi-v0-2-9"]], "What\u2019s new in ARMI": [[484, "what-s-new-in-armi"], [484, "id5"], [484, "id7"], [484, "id11"], [484, "id15"], [484, "id17"], [484, "id21"]], "Build changes": [[484, "build-changes"]], "ARMI v0.2.8": [[484, "armi-v0-2-8"]], "ARMI v0.2.7": [[484, "armi-v0-2-7"]], "ARMI v0.2.6": [[484, "armi-v0-2-6"]], "ARMI v0.2.5": [[484, "armi-v0-2-5"]], "ARMI v0.2.4": [[484, "armi-v0-2-4"]], "ARMI v0.2.3": [[484, "armi-v0-2-3"]], "ARMI v0.2.2": [[484, "armi-v0-2-2"]], "What\u2019s new in ARMI v0.2.2": [[484, "what-s-new-in-armi-v0-2-2"]], "ARMI v0.2.1": [[484, "armi-v0-2-1"]], "What\u2019s new in ARMI v0.2.1": [[484, "what-s-new-in-armi-v0-2-1"]], "ARMI v0.2.0": [[484, "armi-v0-2-0"]], "What\u2019s new in ARMI v0.2.0": [[484, "what-s-new-in-armi-v0-2-0"]], "Backwards incompatible changes": [[484, "backwards-incompatible-changes"]], "ARMI v0.3 Release Notes": [[485, "armi-v0-3-release-notes"]], "ARMI v0.3.0": [[485, "armi-v0-3-0"]], "What\u2019s new in ARMI?": [[485, "what-s-new-in-armi"]], "Bug Fixes": [[485, "bug-fixes"], [486, "bug-fixes"], [486, "id11"]], "Quality Work": [[485, "quality-work"], [486, "quality-work"], [486, "id12"]], "ARMI v0.4 Release Notes": [[486, "armi-v0-4-release-notes"]], "ARMI v0.4.1": [[486, "armi-v0-4-1"]], "New Features": [[486, "new-features"], [486, "id7"]], "API Changes": [[486, "api-changes"], [486, "id8"]], "Changes that Affect Requirements": [[486, "changes-that-affect-requirements"], [486, "id13"]], "ARMI v0.4.0": [[486, "armi-v0-4-0"]], "Release Notes": [[487, "release-notes"]], "Hands-on at the ARMI Terminal": [[488, "Hands-on-at-the-ARMI-Terminal"]], "Initializing and Exploring the ARMI Model": [[488, "Initializing-and-Exploring-the-ARMI-Model"]], "Quiz Question 1": [[488, null]], "Exploring the state of the reactor": [[488, "Exploring-the-state-of-the-reactor"]], "Modifying the state of the reactor": [[488, "Modifying-the-state-of-the-reactor"]], "Modifying number densities": [[488, "Modifying-number-densities"]], "Saving state to disk": [[488, "Saving-state-to-disk"]], "Fuel management": [[488, "Fuel-management"]], "Loading from the database": [[488, "Loading-from-the-database"]], "Tutorials": [[489, "tutorials"]], "Making your first ARMI-based App": [[490, "making-your-first-armi-based-app"]], "Starting a new app": [[490, "starting-a-new-app"]], "Registering the app with ARMI": [[490, "registering-the-app-with-armi"]], "Defining the app class": [[490, "defining-the-app-class"]], "Apps vs. plugins vs. interfaces": [[490, null]], "Defining the physics plugin": [[490, "defining-the-physics-plugin"]], "What are plugins again?": [[490, null]], "Defining custom settings": [[490, "defining-custom-settings"]], "Creating the physics kernels": [[490, "creating-the-physics-kernels"]], "Making the (dummy) flux kernel": [[490, "making-the-dummy-flux-kernel"]], "Making the thermal/hydraulics kernel": [[490, "making-the-thermal-hydraulics-kernel"]], "Adding entry points": [[490, "adding-entry-points"]], "Running the app and debugging": [[490, "running-the-app-and-debugging"]], "Windows tip": [[490, null]], "Submodule tip": [[490, null]], "Yet another way": [[490, null]], "Adding a new material": [[490, "adding-a-new-material"]], "Why __main__.py?": [[490, null]], "Checking the output": [[490, "checking-the-output"]], "Fancy XDMF format": [[490, null]], "Bonus: Ad-hoc UserPlugins": [[490, "bonus-ad-hoc-userplugins"]], "Define the UserPlugin in Python": [[490, "define-the-userplugin-in-python"]], "Define a list of UserPlugins in the Settings File": [[490, "define-a-list-of-userplugins-in-the-settings-file"]], "The ARMI Material Library": [[491, "The-ARMI-Material-Library"]], "The ARMI Nuclide and Element Packages": [[492, "The-ARMI-Nuclide-and-Element-Packages"]], "Accessing Individual Nuclide Data/Attributes": [[492, "Accessing-Individual-Nuclide-Data/Attributes"]], "How many total nuclides and elements are defined in the framework?": [[492, "How-many-total-nuclides-and-elements-are-defined-in-the-framework?"]], "Looking up nuclide and elemental data for U-235": [[492, "Looking-up-nuclide-and-elemental-data-for-U-235"]], "Looking up nuclide and elemental data for Li-7": [[492, "Looking-up-nuclide-and-elemental-data-for-Li-7"]], "Exploring elemental Lithium data": [[492, "Exploring-elemental-Lithium-data"]], "Plotting the Chart of the Nuclides": [[492, "Plotting-the-Chart-of-the-Nuclides"]], "Parameter sweeps": [[493, "Parameter-sweeps"]], "A simple one-dimensional parameter sweep": [[493, "A-simple-one-dimensional-parameter-sweep"]], "Modifying the reactor design": [[493, "Modifying-the-reactor-design"]], "A full factorial parameter sweep": [[493, "A-full-factorial-parameter-sweep"]], "Post-processing the results of the sweep": [[493, "Post-processing-the-results-of-the-sweep"]], "Building input files for a fast reactor": [[494, "building-input-files-for-a-fast-reactor"]], "Setting up the blueprints": [[494, "setting-up-the-blueprints"], [495, "setting-up-the-blueprints"]], "Defining non-fuel blocks": [[494, "defining-non-fuel-blocks"]], "Radial Shields": [[494, "radial-shields"]], "Reflectors": [[494, "reflectors"]], "Control": [[494, "control"]], "Plenum": [[494, "plenum"]], "Defining how the blocks are arranged into assemblies": [[494, "defining-how-the-blocks-are-arranged-into-assemblies"]], "Defining the fuel assemblies": [[494, "defining-the-fuel-assemblies"]], "Defining the non-fuel assemblies": [[494, "defining-the-non-fuel-assemblies"]], "Specifying the core map": [[494, "specifying-the-core-map"]], "Specifying settings": [[494, "specifying-settings"]], "Defining fuel management": [[494, "defining-fuel-management"], [495, "defining-fuel-management"]], "Building input files for a thermal reactor": [[495, "building-input-files-for-a-thermal-reactor"]], "Custom isotopic vectors": [[495, "custom-isotopic-vectors"]], "The UO2 block": [[495, "the-uo2-block"]], "The MOX block": [[495, "the-mox-block"]], "The moderator block": [[495, "the-moderator-block"]], "The 3-D Assembly definitions": [[495, "the-3-d-assembly-definitions"]], "The Systems definition": [[495, "the-systems-definition"]], "The Grids definitions": [[495, "the-grids-definitions"]], "Nuclide Flags": [[495, "nuclide-flags"], [503, "nuclide-flags"]], "The settings file": [[495, "the-settings-file"]], "Ok, so now what?": [[495, "ok-so-now-what"]], "Accessing Entry Points": [[497, "accessing-entry-points"]], "Reports Entry Point": [[497, "reports-entry-point"]], "Assembly Parameters": [[498, "assembly-parameters"]], "Assembly Parameters from Framework": [[498, "id1"]], "Block Parameters": [[499, "block-parameters"]], "Block Parameters from Framework": [[499, "id1"]], "Block Parameters from NeutronicsPlugin": [[499, "id2"]], "Block Parameters from FuelPerformancePlugin": [[499, "id3"]], "Block Parameters from ThermalHydraulicsPlugin": [[499, "id4"]], "Component Parameters": [[500, "component-parameters"]], "Component Parameters from Framework": [[500, "id1"]], "Core Parameters": [[501, "core-parameters"]], "Core Parameters from Framework": [[501, "id1"]], "Core Parameters from NeutronicsPlugin": [[501, "id2"]], "User Docs": [[502, "user-docs"]], "Inputs": [[503, "inputs"]], "YAML Files": [[503, "yaml-files"]], "The Settings Input File": [[503, "the-settings-input-file"]], "The ARMI GUI": [[503, "the-armi-gui"]], "The assembly clicker": [[503, "the-assembly-clicker"]], "The ARMI Environment Tab": [[503, "the-armi-environment-tab"]], "Some special settings": [[503, "some-special-settings"]], "Detail assemblies": [[503, "detail-assemblies"]], "Kinetics settings": [[503, "kinetics-settings"]], "Cycle history": [[503, "cycle-history"]], "Restart cases": [[503, "restart-cases"]], "The Blueprints Input File": [[503, "the-blueprints-input-file"]], "Blueprint sections": [[503, "blueprint-sections"]], "Blocks and Components": [[503, "blocks-and-components"]], "Defining a Component": [[503, "defining-a-component"]], "Component Types": [[503, "component-types"]], "Component Links": [[503, "component-links"]], "Pin lattices": [[503, "pin-lattices"]], "Flags and naming": [[503, "flags-and-naming"]], "Assemblies": [[503, "assemblies"]], "Systems": [[503, "systems"]], "Plugin Behavior": [[503, "plugin-behavior"]], "Grids": [[503, "grids"]], "Custom Isotopics": [[503, "custom-isotopics"]], "Advanced topics": [[503, "advanced-topics"]], "Overlapping shapes": [[503, "overlapping-shapes"]], "Component area modifications": [[503, "component-area-modifications"]], "Putting it all together to make a Block": [[503, "putting-it-all-together-to-make-a-block"]], "Making blocks with unshaped components": [[503, "making-blocks-with-unshaped-components"]], "Fuel Management Input": [[503, "fuel-management-input"]], "Fuel Management Operations": [[503, "fuel-management-operations"]], "swapAssemblies": [[503, "swapassemblies"]], "dischargeSwap": [[503, "dischargeswap"]], "swapCascade": [[503, "swapcascade"]], "Choosing Assemblies to Move": [[503, "choosing-assemblies-to-move"]], "Fuel Management Examples": [[503, "fuel-management-examples"]], "Convergent-Divergent": [[503, "convergent-divergent"]], "Fuel Management Tips": [[503, "fuel-management-tips"]], "Running a branch search": [[503, "running-a-branch-search"]], "Settings Report": [[503, "settings-report"]], "ARMI Settings": [[503, "id15"]], "Accessing Data in ARMI": [[504, "accessing-data-in-armi"]], "Settings and State Variables": [[504, "settings-and-state-variables"]], "Accessing Some Interesting Info": [[504, "accessing-some-interesting-info"]], "Outputs": [[505, "outputs"]], "The Standard Output": [[505, "the-standard-output"]], "The Database File": [[505, "the-database-file"]], "Loading Reactor State": [[505, "loading-reactor-state"]], "Extracting Reactor History": [[505, "extracting-reactor-history"]], "Extracting Settings and Blueprints": [[505, "extracting-settings-and-blueprints"]], "File format": [[505, "file-format"]], "Database Structure": [[505, "database-structure"]], "Database structure": [[505, "id1"]], "Physics Coupling": [[506, "physics-coupling"]], "Loose Coupling": [[506, "loose-coupling"]], "Tight Coupling": [[506, "tight-coupling"]], "Eigenvalue": [[506, "eigenvalue"]], "Block-wise Power": [[506, "block-wise-power"]], "The Global Flux Interface": [[506, "the-global-flux-interface"]], "Radial and Axial Expansion and Contraction": [[507, "radial-and-axial-expansion-and-contraction"]], "Thermal Expansion": [[507, "thermal-expansion"]], "Reactor Parameters": [[508, "reactor-parameters"]], "Reactor Parameters from Framework": [[508, "id1"]]}, "indexentries": {"applyasynciowindowsworkaround() (in module armi)": [[0, "armi.applyAsyncioWindowsWorkaround"]], "armi": [[0, "module-armi"], [480, "term-ARMI"]], "configure() (in module armi)": [[0, "armi.configure"]], "disablefutureconfigures() (in module armi)": [[0, "armi.disableFutureConfigures"]], "getapp() (in module armi)": [[0, "armi.getApp"]], "getdefaultpluginmanager() (in module armi)": [[0, "armi.getDefaultPluginManager"]], "getdefaultplugins() (in module armi)": [[0, "armi.getDefaultPlugins"]], "getpluginmanager() (in module armi)": [[0, "armi.getPluginManager"]], "getpluginmanagerorfail() (in module armi)": [[0, "armi.getPluginManagerOrFail"]], "init() (in module armi)": [[0, "armi.init"]], "isconfigured() (in module armi)": [[0, "armi.isConfigured"]], "isstablereleaseversion() (in module armi)": [[0, "armi.isStableReleaseVersion"]], "module": [[0, "module-armi"], [1, "module-armi.apps"], [2, "module-armi.bookkeeping"], [3, "module-armi.bookkeeping.db"], [4, "module-armi.bookkeeping.db.compareDB3"], [5, "module-armi.bookkeeping.db.database"], [6, "module-armi.bookkeeping.db.database3"], [7, "module-armi.bookkeeping.db.databaseInterface"], [8, "module-armi.bookkeeping.db.factory"], [9, "module-armi.bookkeeping.db.jaggedArray"], [10, "module-armi.bookkeeping.db.layout"], [11, "module-armi.bookkeeping.db.passiveDBLoadPlugin"], [12, "module-armi.bookkeeping.db.permissions"], [13, "module-armi.bookkeeping.db.tests"], [14, "module-armi.bookkeeping.db.tests.test_comparedb3"], [15, "module-armi.bookkeeping.db.tests.test_database3"], [16, "module-armi.bookkeeping.db.tests.test_databaseInterface"], [17, "module-armi.bookkeeping.db.tests.test_jaggedArray"], [18, "module-armi.bookkeeping.db.tests.test_layout"], [19, "module-armi.bookkeeping.db.typedefs"], [20, "module-armi.bookkeeping.historyTracker"], [21, "module-armi.bookkeeping.mainInterface"], [22, "module-armi.bookkeeping.memoryProfiler"], [23, "module-armi.bookkeeping.report"], [24, "module-armi.bookkeeping.report.data"], [25, "module-armi.bookkeeping.report.html"], [26, "module-armi.bookkeeping.report.newReportUtils"], [27, "module-armi.bookkeeping.report.newReports"], [28, "module-armi.bookkeeping.report.reportInterface"], [29, "module-armi.bookkeeping.report.reportingUtils"], [30, "module-armi.bookkeeping.report.tests"], [31, "module-armi.bookkeeping.report.tests.test_newReport"], [32, "module-armi.bookkeeping.report.tests.test_report"], [33, "module-armi.bookkeeping.snapshotInterface"], [34, "module-armi.bookkeeping.tests"], [35, "module-armi.bookkeeping.tests.test_historyTracker"], [36, "module-armi.bookkeeping.tests.test_memoryProfiler"], [37, "module-armi.bookkeeping.tests.test_snapshot"], [38, "module-armi.bookkeeping.visualization"], [39, "module-armi.bookkeeping.visualization.dumper"], [40, "module-armi.bookkeeping.visualization.entryPoint"], [41, "module-armi.bookkeeping.visualization.tests"], [42, "module-armi.bookkeeping.visualization.tests.test_vis"], [43, "module-armi.bookkeeping.visualization.tests.test_xdmf"], [44, "module-armi.bookkeeping.visualization.utils"], [45, "module-armi.bookkeeping.visualization.vtk"], [46, "module-armi.bookkeeping.visualization.xdmf"], [47, "module-armi.cases"], [48, "module-armi.cases.case"], [49, "module-armi.cases.inputModifiers"], [50, "module-armi.cases.inputModifiers.inputModifiers"], [51, "module-armi.cases.inputModifiers.neutronicsModifiers"], [52, "module-armi.cases.inputModifiers.pinTypeInputModifiers"], [53, "module-armi.cases.inputModifiers.tests"], [54, "module-armi.cases.inputModifiers.tests.test_inputModifiers"], [55, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"], [56, "module-armi.cases.suite"], [57, "module-armi.cases.suiteBuilder"], [58, "module-armi.cases.tests"], [59, "module-armi.cases.tests.test_cases"], [60, "module-armi.cases.tests.test_suiteBuilder"], [61, "module-armi.cli"], [62, "module-armi.cli.checkInputs"], [63, "module-armi.cli.cleanTemps"], [64, "module-armi.cli.clone"], [65, "module-armi.cli.compareCases"], [66, "module-armi.cli.database"], [67, "module-armi.cli.entryPoint"], [68, "module-armi.cli.gridGui"], [69, "module-armi.cli.migrateInputs"], [70, "module-armi.cli.modify"], [71, "module-armi.cli.reportsEntryPoint"], [72, "module-armi.cli.run"], [73, "module-armi.cli.runSuite"], [74, "module-armi.cli.tests"], [75, "module-armi.cli.tests.test_runEntryPoint"], [76, "module-armi.cli.tests.test_runSuite"], [77, "module-armi.conftest"], [78, "module-armi.context"], [79, "module-armi.interfaces"], [80, "module-armi.materials"], [81, "module-armi.materials.air"], [82, "module-armi.materials.alloy200"], [83, "module-armi.materials.b4c"], [84, "module-armi.materials.be9"], [85, "module-armi.materials.caH2"], [86, "module-armi.materials.californium"], [87, "module-armi.materials.concrete"], [88, "module-armi.materials.copper"], [89, "module-armi.materials.cs"], [90, "module-armi.materials.custom"], [91, "module-armi.materials.graphite"], [92, "module-armi.materials.hafnium"], [93, "module-armi.materials.hastelloyN"], [94, "module-armi.materials.ht9"], [95, "module-armi.materials.inconel"], [96, "module-armi.materials.inconel600"], [97, "module-armi.materials.inconel625"], [98, "module-armi.materials.inconel800"], [99, "module-armi.materials.inconelPE16"], [100, "module-armi.materials.inconelX750"], [101, "module-armi.materials.lead"], [102, "module-armi.materials.leadBismuth"], [103, "module-armi.materials.lithium"], [104, "module-armi.materials.magnesium"], [105, "module-armi.materials.material"], [106, "module-armi.materials.mgO"], [107, "module-armi.materials.mixture"], [108, "module-armi.materials.molybdenum"], [109, "module-armi.materials.mox"], [110, "module-armi.materials.nZ"], [111, "module-armi.materials.potassium"], [112, "module-armi.materials.scandiumOxide"], [113, "module-armi.materials.siC"], [114, "module-armi.materials.sodium"], [115, "module-armi.materials.sodiumChloride"], [116, "module-armi.materials.sulfur"], [117, "module-armi.materials.tZM"], [118, "module-armi.materials.tantalum"], [119, "module-armi.materials.tests"], [120, "module-armi.materials.tests.test__init__"], [121, "module-armi.materials.tests.test_air"], [122, "module-armi.materials.tests.test_b4c"], [123, "module-armi.materials.tests.test_be9"], [124, "module-armi.materials.tests.test_graphite"], [125, "module-armi.materials.tests.test_lithium"], [126, "module-armi.materials.tests.test_materials"], [127, "module-armi.materials.tests.test_sic"], [128, "module-armi.materials.tests.test_sulfur"], [129, "module-armi.materials.tests.test_thoriumOxide"], [130, "module-armi.materials.tests.test_uZr"], [131, "module-armi.materials.tests.test_water"], [132, "module-armi.materials.thU"], [133, "module-armi.materials.thorium"], [134, "module-armi.materials.thoriumOxide"], [135, "module-armi.materials.uThZr"], [136, "module-armi.materials.uZr"], [137, "module-armi.materials.uranium"], [138, "module-armi.materials.uraniumOxide"], [139, "module-armi.materials.void"], [140, "module-armi.materials.water"], [141, "module-armi.materials.yttriumOxide"], [142, "module-armi.materials.zincOxide"], [143, "module-armi.materials.zr"], [144, "module-armi.meta"], [145, "module-armi.migration"], [146, "module-armi.migration.base"], [147, "module-armi.migration.m0_1_3"], [148, "module-armi.migration.m0_1_6"], [149, "module-armi.migration.tests"], [150, "module-armi.migration.tests.test_m0_1_6"], [151, "module-armi.migration.tests.test_migration_base"], [152, "module-armi.mpiActions"], [153, "module-armi.nucDirectory"], [154, "module-armi.nucDirectory.elements"], [155, "module-armi.nucDirectory.nucDir"], [156, "module-armi.nucDirectory.nuclideBases"], [157, "module-armi.nucDirectory.tests"], [158, "module-armi.nucDirectory.tests.test_elements"], [159, "module-armi.nucDirectory.tests.test_nucDirectory"], [160, "module-armi.nucDirectory.tests.test_nuclideBases"], [161, "module-armi.nucDirectory.tests.test_thermalScattering"], [162, "module-armi.nucDirectory.tests.test_transmutations"], [163, "module-armi.nucDirectory.thermalScattering"], [164, "module-armi.nucDirectory.transmutations"], [165, "module-armi.nuclearDataIO"], [166, "module-armi.nuclearDataIO.cccc"], [167, "module-armi.nuclearDataIO.cccc.cccc"], [168, "module-armi.nuclearDataIO.cccc.compxs"], [169, "module-armi.nuclearDataIO.cccc.dif3d"], [170, "module-armi.nuclearDataIO.cccc.dlayxs"], [171, "module-armi.nuclearDataIO.cccc.fixsrc"], [172, "module-armi.nuclearDataIO.cccc.gamiso"], [173, "module-armi.nuclearDataIO.cccc.geodst"], [174, "module-armi.nuclearDataIO.cccc.isotxs"], [175, "module-armi.nuclearDataIO.cccc.labels"], [176, "module-armi.nuclearDataIO.cccc.nhflux"], [177, "module-armi.nuclearDataIO.cccc.pmatrx"], [178, "module-armi.nuclearDataIO.cccc.pwdint"], [179, "module-armi.nuclearDataIO.cccc.rtflux"], [180, "module-armi.nuclearDataIO.cccc.rzflux"], [181, "module-armi.nuclearDataIO.cccc.tests"], [182, "module-armi.nuclearDataIO.cccc.tests.test_cccc"], [183, "module-armi.nuclearDataIO.cccc.tests.test_compxs"], [184, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"], [185, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"], [186, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"], [187, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"], [188, "module-armi.nuclearDataIO.cccc.tests.test_geodst"], [189, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"], [190, "module-armi.nuclearDataIO.cccc.tests.test_labels"], [191, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"], [192, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"], [193, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"], [194, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"], [195, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"], [196, "module-armi.nuclearDataIO.nuclearFileMetadata"], [197, "module-armi.nuclearDataIO.tests"], [198, "module-armi.nuclearDataIO.tests.test_xsCollections"], [199, "module-armi.nuclearDataIO.tests.test_xsLibraries"], [200, "module-armi.nuclearDataIO.tests.test_xsNuclides"], [201, "module-armi.nuclearDataIO.xsCollections"], [202, "module-armi.nuclearDataIO.xsLibraries"], [203, "module-armi.nuclearDataIO.xsNuclides"], [204, "module-armi.operators"], [205, "module-armi.operators.operator"], [206, "module-armi.operators.operatorMPI"], [207, "module-armi.operators.runTypes"], [208, "module-armi.operators.settingsValidation"], [209, "module-armi.operators.snapshots"], [210, "module-armi.operators.tests"], [211, "module-armi.operators.tests.test_operatorSnapshots"], [212, "module-armi.operators.tests.test_operators"], [213, "module-armi.physics"], [214, "module-armi.physics.constants"], [215, "module-armi.physics.executers"], [216, "module-armi.physics.fuelCycle"], [217, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"], [218, "module-armi.physics.fuelCycle.fuelHandlerFactory"], [219, "module-armi.physics.fuelCycle.fuelHandlerInterface"], [220, "module-armi.physics.fuelCycle.fuelHandlers"], [221, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"], [222, "module-armi.physics.fuelCycle.settings"], [223, "module-armi.physics.fuelCycle.tests"], [224, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"], [225, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"], [226, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"], [227, "module-armi.physics.fuelPerformance"], [228, "module-armi.physics.fuelPerformance.executers"], [229, "module-armi.physics.fuelPerformance.parameters"], [230, "module-armi.physics.fuelPerformance.plugin"], [231, "module-armi.physics.fuelPerformance.settings"], [232, "module-armi.physics.fuelPerformance.tests"], [233, "module-armi.physics.fuelPerformance.tests.test_executers"], [234, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"], [235, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"], [236, "module-armi.physics.fuelPerformance.utils"], [237, "module-armi.physics.neutronics"], [238, "module-armi.physics.neutronics.const"], [239, "module-armi.physics.neutronics.crossSectionGroupManager"], [240, "module-armi.physics.neutronics.crossSectionSettings"], [241, "module-armi.physics.neutronics.diffIsotxs"], [242, "module-armi.physics.neutronics.energyGroups"], [243, "module-armi.physics.neutronics.fissionProductModel"], [244, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"], [245, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"], [246, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"], [247, "module-armi.physics.neutronics.fissionProductModel.tests"], [248, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"], [249, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"], [250, "module-armi.physics.neutronics.globalFlux"], [251, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"], [252, "module-armi.physics.neutronics.globalFlux.tests"], [253, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"], [254, "module-armi.physics.neutronics.latticePhysics"], [255, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"], [256, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"], [257, "module-armi.physics.neutronics.latticePhysics.tests"], [258, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"], [259, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"], [260, "module-armi.physics.neutronics.macroXSGenerationInterface"], [261, "module-armi.physics.neutronics.parameters"], [262, "module-armi.physics.neutronics.reports"], [263, "module-armi.physics.neutronics.settings"], [264, "module-armi.physics.neutronics.tests"], [265, "module-armi.physics.neutronics.tests.test_crossSectionManager"], [266, "module-armi.physics.neutronics.tests.test_crossSectionSettings"], [267, "module-armi.physics.neutronics.tests.test_crossSectionTable"], [268, "module-armi.physics.neutronics.tests.test_energyGroups"], [269, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"], [270, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"], [271, "module-armi.physics.safety"], [272, "module-armi.physics.tests"], [273, "module-armi.physics.tests.test_executers"], [274, "module-armi.physics.thermalHydraulics"], [275, "module-armi.physics.thermalHydraulics.const"], [276, "module-armi.physics.thermalHydraulics.parameters"], [277, "module-armi.physics.thermalHydraulics.plugin"], [278, "module-armi.physics.thermalHydraulics.settings"], [279, "module-armi.physics.thermalHydraulics.tests"], [280, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"], [281, "module-armi.pluginManager"], [282, "module-armi.plugins"], [283, "module-armi.reactor"], [284, "module-armi.reactor.assemblies"], [285, "module-armi.reactor.assemblyParameters"], [286, "module-armi.reactor.blockParameters"], [287, "module-armi.reactor.blocks"], [288, "module-armi.reactor.blueprints"], [289, "module-armi.reactor.blueprints.assemblyBlueprint"], [290, "module-armi.reactor.blueprints.blockBlueprint"], [291, "module-armi.reactor.blueprints.componentBlueprint"], [292, "module-armi.reactor.blueprints.gridBlueprint"], [293, "module-armi.reactor.blueprints.isotopicOptions"], [294, "module-armi.reactor.blueprints.reactorBlueprint"], [295, "module-armi.reactor.blueprints.tests"], [296, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"], [297, "module-armi.reactor.blueprints.tests.test_blockBlueprints"], [298, "module-armi.reactor.blueprints.tests.test_blueprints"], [299, "module-armi.reactor.blueprints.tests.test_componentBlueprint"], [300, "module-armi.reactor.blueprints.tests.test_customIsotopics"], [301, "module-armi.reactor.blueprints.tests.test_gridBlueprints"], [302, "module-armi.reactor.blueprints.tests.test_materialModifications"], [303, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"], [304, "module-armi.reactor.components"], [305, "module-armi.reactor.components.basicShapes"], [306, "module-armi.reactor.components.complexShapes"], [307, "module-armi.reactor.components.component"], [308, "module-armi.reactor.components.componentParameters"], [309, "module-armi.reactor.components.volumetricShapes"], [310, "module-armi.reactor.composites"], [311, "module-armi.reactor.converters"], [312, "module-armi.reactor.converters.axialExpansionChanger"], [313, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"], [314, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"], [315, "module-armi.reactor.converters.axialExpansionChanger.expansionData"], [316, "module-armi.reactor.converters.blockConverters"], [317, "module-armi.reactor.converters.geometryConverters"], [318, "module-armi.reactor.converters.meshConverters"], [319, "module-armi.reactor.converters.parameterSweeps"], [320, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"], [321, "module-armi.reactor.converters.pinTypeBlockConverters"], [322, "module-armi.reactor.converters.tests"], [323, "module-armi.reactor.converters.tests.test_axialExpansionChanger"], [324, "module-armi.reactor.converters.tests.test_blockConverter"], [325, "module-armi.reactor.converters.tests.test_geometryConverters"], [326, "module-armi.reactor.converters.tests.test_meshConverters"], [327, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"], [328, "module-armi.reactor.converters.tests.test_uniformMesh"], [329, "module-armi.reactor.converters.uniformMesh"], [330, "module-armi.reactor.cores"], [331, "module-armi.reactor.excoreStructure"], [332, "module-armi.reactor.flags"], [333, "module-armi.reactor.geometry"], [334, "module-armi.reactor.grids"], [335, "module-armi.reactor.grids.axial"], [336, "module-armi.reactor.grids.cartesian"], [337, "module-armi.reactor.grids.constants"], [338, "module-armi.reactor.grids.grid"], [339, "module-armi.reactor.grids.hexagonal"], [340, "module-armi.reactor.grids.locations"], [341, "module-armi.reactor.grids.structuredGrid"], [342, "module-armi.reactor.grids.thetarz"], [343, "module-armi.reactor.parameters"], [344, "module-armi.reactor.parameters.exceptions"], [345, "module-armi.reactor.parameters.parameterCollections"], [346, "module-armi.reactor.parameters.parameterDefinitions"], [347, "module-armi.reactor.parameters.resolveCollections"], [348, "module-armi.reactor.reactorParameters"], [349, "module-armi.reactor.reactors"], [350, "module-armi.reactor.spentFuelPool"], [351, "module-armi.reactor.systemLayoutInput"], [352, "module-armi.reactor.tests"], [353, "module-armi.reactor.tests.test_assemblies"], [354, "module-armi.reactor.tests.test_blocks"], [355, "module-armi.reactor.tests.test_components"], [356, "module-armi.reactor.tests.test_composites"], [357, "module-armi.reactor.tests.test_excoreStructures"], [358, "module-armi.reactor.tests.test_flags"], [359, "module-armi.reactor.tests.test_geometry"], [360, "module-armi.reactor.tests.test_parameters"], [361, "module-armi.reactor.tests.test_reactors"], [362, "module-armi.reactor.tests.test_rz_reactors"], [363, "module-armi.reactor.tests.test_zones"], [364, "module-armi.reactor.zones"], [365, "module-armi.runLog"], [366, "module-armi.settings"], [367, "module-armi.settings.caseSettings"], [368, "module-armi.settings.fwSettings"], [369, "module-armi.settings.fwSettings.databaseSettings"], [370, "module-armi.settings.fwSettings.globalSettings"], [371, "module-armi.settings.fwSettings.reportSettings"], [372, "module-armi.settings.fwSettings.tightCouplingSettings"], [373, "module-armi.settings.setting"], [374, "module-armi.settings.settingsIO"], [375, "module-armi.settings.settingsValidation"], [376, "module-armi.settings.tests"], [377, "module-armi.settings.tests.test_inspectors"], [378, "module-armi.settings.tests.test_settings"], [379, "module-armi.settings.tests.test_settingsIO"], [380, "module-armi.tests"], [381, "module-armi.tests.mockRunLogs"], [382, "module-armi.tests.refSmallReactorShuffleLogic"], [383, "module-armi.tests.test_apps"], [384, "module-armi.tests.test_armiTestHelper"], [385, "module-armi.tests.test_cartesian"], [386, "module-armi.tests.test_context"], [387, "module-armi.tests.test_interfaces"], [388, "module-armi.tests.test_lwrInputs"], [389, "module-armi.tests.test_mpiActions"], [390, "module-armi.tests.test_mpiFeatures"], [391, "module-armi.tests.test_mpiParameters"], [392, "module-armi.tests.test_notebooks"], [393, "module-armi.tests.test_plugins"], [394, "module-armi.tests.test_runLog"], [395, "module-armi.tests.test_tests"], [396, "module-armi.tests.test_user_plugins"], [397, "module-armi.utils"], [398, "module-armi.utils.asciimaps"], [399, "module-armi.utils.codeTiming"], [400, "module-armi.utils.customExceptions"], [401, "module-armi.utils.densityTools"], [402, "module-armi.utils.directoryChangers"], [403, "module-armi.utils.directoryChangersMpi"], [404, "module-armi.utils.dynamicImporter"], [405, "module-armi.utils.flags"], [407, "module-armi.utils.hexagon"], [408, "module-armi.utils.iterables"], [409, "module-armi.utils.mathematics"], [410, "module-armi.utils.outputCache"], [411, "module-armi.utils.parsing"], [412, "module-armi.utils.pathTools"], [413, "module-armi.utils.plotting"], [414, "module-armi.utils.properties"], [415, "module-armi.utils.reportPlotting"], [416, "module-armi.utils.tabulate"], [417, "module-armi.utils.tests"], [418, "module-armi.utils.tests.test_asciimaps"], [419, "module-armi.utils.tests.test_codeTiming"], [420, "module-armi.utils.tests.test_custom_exceptions"], [421, "module-armi.utils.tests.test_densityTools"], [422, "module-armi.utils.tests.test_directoryChangers"], [423, "module-armi.utils.tests.test_directoryChangersMpi"], [424, "module-armi.utils.tests.test_flags"], [425, "module-armi.utils.tests.test_hexagon"], [426, "module-armi.utils.tests.test_iterables"], [427, "module-armi.utils.tests.test_mathematics"], [428, "module-armi.utils.tests.test_outputCache"], [429, "module-armi.utils.tests.test_parsing"], [430, "module-armi.utils.tests.test_pathTools"], [431, "module-armi.utils.tests.test_plotting"], [432, "module-armi.utils.tests.test_properties"], [433, "module-armi.utils.tests.test_reportPlotting"], [434, "module-armi.utils.tests.test_tabulate"], [435, "module-armi.utils.tests.test_textProcessors"], [436, "module-armi.utils.tests.test_triangle"], [437, "module-armi.utils.tests.test_units"], [438, "module-armi.utils.tests.test_utils"], [439, "module-armi.utils.textProcessors"], [440, "module-armi.utils.triangle"], [441, "module-armi.utils.units"]], "app (class in armi.apps)": [[1, "armi.apps.App"]], "armi.apps": [[1, "module-armi.apps"]], "getparamrenames() (armi.apps.app method)": [[1, "armi.apps.App.getParamRenames"]], "getsettings() (armi.apps.app method)": [[1, "armi.apps.App.getSettings"]], "name (armi.apps.app attribute)": [[1, "armi.apps.App.name"]], "pluginmanager (armi.apps.app property)": [[1, "armi.apps.App.pluginManager"]], "registerpluginflags() (armi.apps.app method)": [[1, "armi.apps.App.registerPluginFlags"]], "registeruserplugins() (armi.apps.app method)": [[1, "armi.apps.App.registerUserPlugins"]], "splashtext (armi.apps.app property)": [[1, "armi.apps.App.splashText"]], "version (armi.apps.app property)": [[1, "armi.apps.App.version"]], "bookkeepingplugin (class in armi.bookkeeping)": [[2, "armi.bookkeeping.BookkeepingPlugin"]], "armi.bookkeeping": [[2, "module-armi.bookkeeping"]], "definecasedependencies() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineEntryPoints"]], "exposeinterfaces() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.exposeInterfaces"]], "getreportcontents() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.mpiActionRequiresReset"]], "database (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.Database"]], "database3 (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.Database3"]], "databaseinterface (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.DatabaseInterface"]], "armi.bookkeeping.db": [[3, "module-armi.bookkeeping.db"]], "close() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.close"]], "closedb() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.closeDB"]], "comparedatabases() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.compareDatabases"]], "database (armi.bookkeeping.db.databaseinterface property)": [[3, "armi.bookkeeping.db.DatabaseInterface.database"]], "databasefactory() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.databaseFactory"]], "distributable() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.distributable"]], "filename (armi.bookkeeping.db.database property)": [[3, "armi.bookkeeping.db.Database.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database static method)": [[3, "armi.bookkeeping.db.Database.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getH5Group"]], "gethistories() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getHistories"]], "gethistories() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getHistory"]], "gethistory() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database static method)": [[3, "armi.bookkeeping.db.Database.grabLocalCommitHash"]], "h5db (armi.bookkeeping.db.database3 attribute)": [[3, "armi.bookkeeping.db.Database3.h5db"]], "hastimestep() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.hasTimeStep"]], "initdb() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEveryNode"]], "isopen() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.isOpen"]], "keys() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.keys"]], "load() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.load"]], "loadblueprints() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.loadGeometry"]], "loadoperator() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.loadOperator"]], "loadreadonly() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.loadReadOnly"]], "loadstate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.loadState"]], "mergehistory() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.mergeHistory"]], "name (armi.bookkeeping.db.databaseinterface attribute)": [[3, "armi.bookkeeping.db.DatabaseInterface.name"]], "open() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.open"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.prepRestartRun"]], "readinputsfromdb() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database attribute)": [[3, "armi.bookkeeping.db.Database.timeNodeGroupPattern"]], "version (armi.bookkeeping.db.database property)": [[3, "armi.bookkeeping.db.Database.version"]], "versionmajor (armi.bookkeeping.db.database property)": [[3, "armi.bookkeeping.db.Database.versionMajor"]], "versionminor (armi.bookkeeping.db.database property)": [[3, "armi.bookkeeping.db.Database.versionMinor"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.writeDBEveryNode"]], "writeinputstodb() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.writeInputsToDB"]], "writesystemattributes() (armi.bookkeeping.db.database static method)": [[3, "armi.bookkeeping.db.Database.writeSystemAttributes"]], "writetodb() (armi.bookkeeping.db.database method)": [[3, "armi.bookkeeping.db.Database.writeToDB"]], "diffresults (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults"]], "outputwriter (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter"]], "adddiff() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addDiff"]], "addstructurediffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addStructureDiffs"]], "addtimestep() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addTimeStep"]], "armi.bookkeeping.db.comparedb3": [[4, "module-armi.bookkeeping.db.compareDB3"]], "comparedatabases() (in module armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.compareDatabases"]], "ndiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.nDiffs"]], "reportdiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.reportDiffs"]], "writeln() (armi.bookkeeping.db.comparedb3.outputwriter method)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter.writeln"]], "database (class in armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.Database"]], "armi.bookkeeping.db.database": [[5, "module-armi.bookkeeping.db.database"]], "close() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.close"]], "collectblocknumberdensities() (in module armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.collectBlockNumberDensities"]], "filename (armi.bookkeeping.db.database.database property)": [[5, "armi.bookkeeping.db.database.Database.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database.database static method)": [[5, "armi.bookkeeping.db.database.Database.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getH5Group"]], "geth5groupname() (in module armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.getH5GroupName"]], "gethistories() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database.database static method)": [[5, "armi.bookkeeping.db.database.Database.grabLocalCommitHash"]], "h5db (armi.bookkeeping.db.database.database attribute)": [[5, "armi.bookkeeping.db.database.Database.h5db"]], "hastimestep() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.hasTimeStep"]], "isopen() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.isOpen"]], "keys() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.keys"]], "load() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.load"]], "loadblueprints() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.loadGeometry"]], "loadreadonly() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.loadReadOnly"]], "mergehistory() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.mergeHistory"]], "open() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.open"]], "packspecialdata() (in module armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.packSpecialData"]], "readinputsfromdb() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database.database attribute)": [[5, "armi.bookkeeping.db.database.Database.timeNodeGroupPattern"]], "unpackspecialdata() (in module armi.bookkeeping.db.database)": [[5, "armi.bookkeeping.db.database.unpackSpecialData"]], "version (armi.bookkeeping.db.database.database property)": [[5, "armi.bookkeeping.db.database.Database.version"]], "versionmajor (armi.bookkeeping.db.database.database property)": [[5, "armi.bookkeeping.db.database.Database.versionMajor"]], "versionminor (armi.bookkeeping.db.database.database property)": [[5, "armi.bookkeeping.db.database.Database.versionMinor"]], "writeinputstodb() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.writeInputsToDB"]], "writesystemattributes() (armi.bookkeeping.db.database.database static method)": [[5, "armi.bookkeeping.db.database.Database.writeSystemAttributes"]], "writetodb() (armi.bookkeeping.db.database.database method)": [[5, "armi.bookkeeping.db.database.Database.writeToDB"]], "database3 (class in armi.bookkeeping.db.database3)": [[6, "armi.bookkeeping.db.database3.Database3"]], "armi.bookkeeping.db.database3": [[6, "module-armi.bookkeeping.db.database3"]], "h5db (armi.bookkeeping.db.database3.database3 attribute)": [[6, "armi.bookkeeping.db.database3.Database3.h5db"]], "databaseinterface (class in armi.bookkeeping.db.databaseinterface)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface"]], "armi.bookkeeping.db.databaseinterface": [[7, "module-armi.bookkeeping.db.databaseInterface"]], "closedb() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.closeDB"]], "database (armi.bookkeeping.db.databaseinterface.databaseinterface property)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.database"]], "describeinterfaces() (in module armi.bookkeeping.db.databaseinterface)": [[7, "armi.bookkeeping.db.databaseInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.distributable"]], "gethistories() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistories"]], "gethistory() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistory"]], "initdb() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEveryNode"]], "loadstate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.loadState"]], "name (armi.bookkeeping.db.databaseinterface.databaseinterface attribute)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.name"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.prepRestartRun"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[7, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[8, "module-armi.bookkeeping.db.factory"]], "databasefactory() (in module armi.bookkeeping.db.factory)": [[8, "armi.bookkeeping.db.factory.databaseFactory"]], "jaggedarray (class in armi.bookkeeping.db.jaggedarray)": [[9, "armi.bookkeeping.db.jaggedArray.JaggedArray"]], "armi.bookkeeping.db.jaggedarray": [[9, "module-armi.bookkeeping.db.jaggedArray"]], "flatten() (armi.bookkeeping.db.jaggedarray.jaggedarray static method)": [[9, "armi.bookkeeping.db.jaggedArray.JaggedArray.flatten"]], "fromh5() (armi.bookkeeping.db.jaggedarray.jaggedarray class method)": [[9, "armi.bookkeeping.db.jaggedArray.JaggedArray.fromH5"]], "tolist() (armi.bookkeeping.db.jaggedarray.jaggedarray method)": [[9, "armi.bookkeeping.db.jaggedArray.JaggedArray.tolist"]], "unpack() (armi.bookkeeping.db.jaggedarray.jaggedarray method)": [[9, "armi.bookkeeping.db.jaggedArray.JaggedArray.unpack"]], "layout (class in armi.bookkeeping.db.layout)": [[10, "armi.bookkeeping.db.layout.Layout"]], "allsubclasses() (armi.bookkeeping.db.layout.layout static method)": [[10, "armi.bookkeeping.db.layout.Layout.allSubclasses"]], "armi.bookkeeping.db.layout": [[10, "module-armi.bookkeeping.db.layout"]], "computeancestors() (armi.bookkeeping.db.layout.layout static method)": [[10, "armi.bookkeeping.db.layout.Layout.computeAncestors"]], "replacenoneswithnonsense() (in module armi.bookkeeping.db.layout)": [[10, "armi.bookkeeping.db.layout.replaceNonesWithNonsense"]], "replacenonsensewithnones() (in module armi.bookkeeping.db.layout)": [[10, "armi.bookkeeping.db.layout.replaceNonsenseWithNones"]], "writetodb() (armi.bookkeeping.db.layout.layout method)": [[10, "armi.bookkeeping.db.layout.Layout.writeToDB"]], "passthroughyamlize (class in armi.bookkeeping.db.passivedbloadplugin)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize"]], "passivedbloadplugin (class in armi.bookkeeping.db.passivedbloadplugin)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin"]], "skip_bp_sections (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin attribute)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.SKIP_BP_SECTIONS"]], "unknown_params (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin attribute)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.UNKNOWN_PARAMS"]], "armi.bookkeeping.db.passivedbloadplugin": [[11, "module-armi.bookkeeping.db.passiveDBLoadPlugin"]], "attributes (armi.bookkeeping.db.passivedbloadplugin.passthroughyamlize attribute)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize.attributes"]], "buildparamcoll() (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin static method)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.buildParamColl"]], "defineblueprintssections() (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin static method)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.defineBlueprintsSections"]], "defineparameters() (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin static method)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.defineParameters"]], "from_yaml() (armi.bookkeeping.db.passivedbloadplugin.passthroughyamlize class method)": [[11, "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize.from_yaml"]], "create_file_fie (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE"]], "create_file_fie2 (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE2"]], "create_file_tie (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_TIE"]], "default (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.DEFAULT"]], "permissions (class in armi.bookkeeping.db.permissions)": [[12, "armi.bookkeeping.db.permissions.Permissions"]], "read_only_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.READ_ONLY_FME"]], "read_write_create (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_CREATE"]], "read_write_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_FME"]], "all (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.all"]], "armi.bookkeeping.db.permissions": [[12, "module-armi.bookkeeping.db.permissions"]], "create (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.create"]], "read (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.read"]], "write (armi.bookkeeping.db.permissions.permissions attribute)": [[12, "armi.bookkeeping.db.permissions.Permissions.write"]], "armi.bookkeeping.db.tests": [[13, "module-armi.bookkeeping.db.tests"]], "testcomparedb3 (class in armi.bookkeeping.db.tests.test_comparedb3)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3": [[14, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "test_compareauxdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareAuxData"]], "test_comparedatabaseduplicate() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseDuplicate"]], "test_comparedatabasesim() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseSim"]], "test_comparesets() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareSets"]], "test_diffresultsbasic() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffResultsBasic"]], "test_diffsimpledata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSimpleData"]], "test_diffspecialdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSpecialData"]], "test_outputwriter() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[14, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_outputWriter"]], "small_yaml (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase attribute)": [[15, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.SMALL_YAML"]], "testdatabase (class in armi.bookkeeping.db.tests.test_database3)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabase"]], "testdatabasesmaller (class in armi.bookkeeping.db.tests.test_database3)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller"]], "testwritereaddatabase (class in armi.bookkeeping.db.tests.test_database3)": [[15, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase"]], "armi.bookkeeping.db.tests.test_database3": [[15, "module-armi.bookkeeping.db.tests.test_database3"]], "makehistory() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.makeHistory"]], "makeshufflehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabase.makeShuffleHistory"]], "test_auxdata() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_auxData"]], "test_baddata() (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.test_badData"]], "test_computeparents() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_computeParents"]], "test_deleting() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_deleting"]], "test_filename() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_fileName"]], "test_geth5file() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_getH5File"]], "test_grablocalcommithash() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_grabLocalCommitHash"]], "test_history() (armi.bookkeeping.db.tests.test_database3.testdatabase method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabase.test_history"]], "test_load() (armi.bookkeeping.db.tests.test_database3.testdatabase method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabase.test_load"]], "test_loadblueprints() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_loadBlueprints"]], "test_loadcs() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_loadCS"]], "test_loadsortsetting() (armi.bookkeeping.db.tests.test_database3.testdatabase method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabase.test_loadSortSetting"]], "test_mergehistory() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_mergeHistory"]], "test_open() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_open"]], "test_preprestartrun() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_prepRestartRun"]], "test_readinputsfromdb() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_readInputsFromDB"]], "test_readwriteroundtrip() (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.test_readWriteRoundTrip"]], "test_replacenones() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_replaceNones"]], "test_splitdatabase() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_splitDatabase"]], "test_writetodb() (armi.bookkeeping.db.tests.test_database3.testdatabasesmaller method)": [[15, "armi.bookkeeping.db.tests.test_database3.TestDatabaseSmaller.test_writeToDB"]], "mockinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface"]], "testbadname (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName"]], "testdatabaseinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface"]], "testdatabaseinterfacebol (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL"]], "testdatabasereading (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading"]], "testdatabasewriter (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter"]], "teststandardfollowon (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn"]], "armi.bookkeeping.db.tests.test_databaseinterface": [[16, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "getsimpledboperator() (in module armi.bookkeeping.db.tests.test_databaseinterface)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.getSimpleDBOperator"]], "interacteverynode() (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.interactEveryNode"]], "name (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface attribute)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.name"]], "test_baddbname() (armi.bookkeeping.db.tests.test_databaseinterface.testbadname method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName.test_badDBName"]], "test_demonstratewritinginteractions() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_demonstrateWritingInteractions"]], "test_distributable() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_distributable"]], "test_gethistory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistory"]], "test_gethistorybylocation() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistoryByLocation"]], "test_growtofullcore() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCore"]], "test_growtofullcorefromfactory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactory"]], "test_growtofullcorefromfactorywithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactoryWithCS"]], "test_growtofullcorewithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreWithCS"]], "test_interactbol() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterfacebol method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL.test_interactBOL"]], "test_interacteverynodereturntightcoupling() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_interactEveryNodeReturnTightCoupling"]], "test_loadreadonly() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_loadReadOnly"]], "test_metadataendfail() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaDataEndFail"]], "test_metadata_endsuccessfully() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaData_endSuccessfully"]], "test_nosyncdbafterwrite() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_noSyncDbAfterWrite"]], "test_readwithoutinputs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWithoutInputs"]], "test_readwritten() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWritten"]], "test_standardrestart() (armi.bookkeeping.db.tests.test_databaseinterface.teststandardfollowon method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn.test_standardRestart"]], "test_syncdbafterwrite() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_syncDbAfterWrite"]], "test_timenodeloop_tightcoupling() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_timeNodeLoop_tightCoupling"]], "test_timesteps() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_timesteps"]], "test_varioustypeswork() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_variousTypesWork"]], "test_writesystemattributes() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[16, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_writeSystemAttributes"]], "testjaggedarray (class in armi.bookkeeping.db.tests.test_jaggedarray)": [[17, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray"]], "armi.bookkeeping.db.tests.test_jaggedarray": [[17, "module-armi.bookkeeping.db.tests.test_jaggedArray"]], "test_backwardscompatible() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[17, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_backwardsCompatible"]], "test_flatten() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[17, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_flatten"]], "test_roundtrip() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[17, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_roundTrip"]], "test_roundtripbool() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[17, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_roundTripBool"]], "testlocationpacking (class in armi.bookkeeping.db.tests.test_layout)": [[18, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout": [[18, "module-armi.bookkeeping.db.tests.test_layout"]], "test_close() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[18, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_close"]], "test_locationpacking() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[18, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPacking"]], "test_locationpackingoldversion() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[18, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOldVersion"]], "test_locationpackingolderversions() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[18, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOlderVersions"]], "armi.bookkeeping.db.typedefs": [[19, "module-armi.bookkeeping.db.typedefs"]], "historytrackerinterface (class in armi.bookkeeping.historytracker)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface"]], "addallfuelassems() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addAllFuelAssems"]], "adddetailassembliesbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembliesBOL"]], "adddetailassembly() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembly"]], "adddetailassemsbyassemnums() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssemsByAssemNums"]], "armi.bookkeeping.historytracker": [[20, "module-armi.bookkeeping.historyTracker"]], "describeinterfaces() (in module armi.bookkeeping.historytracker)": [[20, "armi.bookkeeping.historyTracker.describeInterfaces"]], "filtertimeindices() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.filterTimeIndices"]], "getblockhistoryval() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getBlockHistoryVal"]], "getdetailassemblies() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailAssemblies"]], "getdetailblocks() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailBlocks"]], "gettimesteps() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTimeSteps"]], "gettrackedparams() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTrackedParams"]], "interactboc() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOC"]], "interactbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOL"]], "interacteol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactEOL"]], "name (armi.bookkeeping.historytracker.historytrackerinterface attribute)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.name"]], "preloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.preloadBlockHistoryVals"]], "unloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.unloadBlockHistoryVals"]], "writeassemhistory() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[20, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.writeAssemHistory"]], "maininterface (class in armi.bookkeeping.maininterface)": [[21, "armi.bookkeeping.mainInterface.MainInterface"]], "armi.bookkeeping.maininterface": [[21, "module-armi.bookkeeping.mainInterface"]], "cleanarmifiles() (armi.bookkeeping.maininterface.maininterface method)": [[21, "armi.bookkeeping.mainInterface.MainInterface.cleanARMIFiles"]], "cleanlastcyclefiles() (armi.bookkeeping.maininterface.maininterface method)": [[21, "armi.bookkeeping.mainInterface.MainInterface.cleanLastCycleFiles"]], "describeinterfaces() (in module armi.bookkeeping.maininterface)": [[21, "armi.bookkeeping.mainInterface.describeInterfaces"]], "interactboc() (armi.bookkeeping.maininterface.maininterface method)": [[21, "armi.bookkeeping.mainInterface.MainInterface.interactBOC"]], "interactbol() (armi.bookkeeping.maininterface.maininterface method)": [[21, "armi.bookkeeping.mainInterface.MainInterface.interactBOL"]], "interacteol() (armi.bookkeeping.maininterface.maininterface method)": [[21, "armi.bookkeeping.mainInterface.MainInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.maininterface.maininterface method)": [[21, "armi.bookkeeping.mainInterface.MainInterface.interactEveryNode"]], "name (armi.bookkeeping.maininterface.maininterface attribute)": [[21, "armi.bookkeeping.mainInterface.MainInterface.name"]], "instancecounter (class in armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.InstanceCounter"]], "klasscounter (class in armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.KlassCounter"]], "memoryprofiler (class in armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler"]], "printsystemmemoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction"]], "profilememoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction"]], "systemandprocessmemoryusage (class in armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.SystemAndProcessMemoryUsage"]], "add() (armi.bookkeeping.memoryprofiler.instancecounter method)": [[22, "armi.bookkeeping.memoryProfiler.InstanceCounter.add"]], "armi.bookkeeping.memoryprofiler": [[22, "module-armi.bookkeeping.memoryProfiler"]], "checkforduplicateobjectsonarmimodel() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.checkForDuplicateObjectsOnArmiModel"]], "countobjects() (armi.bookkeeping.memoryprofiler.klasscounter method)": [[22, "armi.bookkeeping.memoryProfiler.KlassCounter.countObjects"]], "describeinterfaces() (in module armi.bookkeeping.memoryprofiler)": [[22, "armi.bookkeeping.memoryProfiler.describeInterfaces"]], "displaymemoryusage() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.displayMemoryUsage"]], "getreferrers() (armi.bookkeeping.memoryprofiler.memoryprofiler static method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.getReferrers"]], "interactbol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactBOL"]], "interacteol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEOL"]], "interacteverynode() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEveryNode"]], "invokehook() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[22, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.invokeHook"]], "invokehook() (armi.bookkeeping.memoryprofiler.profilememoryusageaction method)": [[22, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction.invokeHook"]], "maxprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[22, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.maxProcessMemoryInMB"]], "minprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[22, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.minProcessMemoryInMB"]], "name (armi.bookkeeping.memoryprofiler.memoryprofiler attribute)": [[22, "armi.bookkeeping.memoryProfiler.MemoryProfiler.name"]], "printusage() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[22, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.printUsage"]], "armi.bookkeeping.report": [[23, "module-armi.bookkeeping.report"]], "setdata() (in module armi.bookkeeping.report)": [[23, "armi.bookkeeping.report.setData"]], "group (class in armi.bookkeeping.report.data)": [[24, "armi.bookkeeping.report.data.Group"]], "image (class in armi.bookkeeping.report.data)": [[24, "armi.bookkeeping.report.data.Image"]], "report (class in armi.bookkeeping.report.data)": [[24, "armi.bookkeeping.report.data.Report"]], "table (class in armi.bookkeeping.report.data)": [[24, "armi.bookkeeping.report.data.Table"]], "addtoreport() (armi.bookkeeping.report.data.report method)": [[24, "armi.bookkeeping.report.data.Report.addToReport"]], "armi.bookkeeping.report.data": [[24, "module-armi.bookkeeping.report.data"]], "componentwellgroups (armi.bookkeeping.report.data.report attribute)": [[24, "armi.bookkeeping.report.data.Report.componentWellGroups"]], "count (armi.bookkeeping.report.data.image attribute)": [[24, "armi.bookkeeping.report.data.Image.count"]], "groupsorderfirst (armi.bookkeeping.report.data.report attribute)": [[24, "armi.bookkeeping.report.data.Report.groupsOrderFirst"]], "writegroupshtml() (armi.bookkeeping.report.data.report method)": [[24, "armi.bookkeeping.report.data.Report.writeGroupsHTML"]], "writehtml() (armi.bookkeeping.report.data.group method)": [[24, "armi.bookkeeping.report.data.Group.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.image method)": [[24, "armi.bookkeeping.report.data.Image.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.report method)": [[24, "armi.bookkeeping.report.data.Report.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.table method)": [[24, "armi.bookkeeping.report.data.Table.writeHTML"]], "a (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.A"]], "b (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.B"]], "body (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Body"]], "caption (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Caption"]], "div (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Div"]], "footer (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Footer"]], "h1 (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.H1"]], "h2 (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.H2"]], "h3 (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.H3"]], "h4 (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.H4"]], "htmlfile (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.HTMLFile"]], "head (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Head"]], "html (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Html"]], "img (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Img"]], "li (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.LI"]], "link (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Link"]], "p (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.P"]], "script (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Script"]], "span (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Span"]], "style (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Style"]], "tbody (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.TBody"]], "td (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.TD"]], "th (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.TH"]], "thead (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.THead"]], "tr (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.TR"]], "table (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Table"]], "tag (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Tag"]], "title (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.Title"]], "ul (class in armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.UL"]], "armi.bookkeeping.report.html": [[25, "module-armi.bookkeeping.report.html"]], "encode64() (in module armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.encode64"]], "tag (armi.bookkeeping.report.html.a attribute)": [[25, "armi.bookkeeping.report.html.A.tag"]], "tag (armi.bookkeeping.report.html.b attribute)": [[25, "armi.bookkeeping.report.html.B.tag"]], "tag (armi.bookkeeping.report.html.body attribute)": [[25, "armi.bookkeeping.report.html.Body.tag"]], "tag (armi.bookkeeping.report.html.caption attribute)": [[25, "armi.bookkeeping.report.html.Caption.tag"]], "tag (armi.bookkeeping.report.html.div attribute)": [[25, "armi.bookkeeping.report.html.Div.tag"]], "tag (armi.bookkeeping.report.html.footer attribute)": [[25, "armi.bookkeeping.report.html.Footer.tag"]], "tag (armi.bookkeeping.report.html.h1 attribute)": [[25, "armi.bookkeeping.report.html.H1.tag"]], "tag (armi.bookkeeping.report.html.h2 attribute)": [[25, "armi.bookkeeping.report.html.H2.tag"]], "tag (armi.bookkeeping.report.html.h3 attribute)": [[25, "armi.bookkeeping.report.html.H3.tag"]], "tag (armi.bookkeeping.report.html.h4 attribute)": [[25, "armi.bookkeeping.report.html.H4.tag"]], "tag (armi.bookkeeping.report.html.head attribute)": [[25, "armi.bookkeeping.report.html.Head.tag"]], "tag (armi.bookkeeping.report.html.html attribute)": [[25, "armi.bookkeeping.report.html.Html.tag"]], "tag (armi.bookkeeping.report.html.img attribute)": [[25, "armi.bookkeeping.report.html.Img.tag"]], "tag (armi.bookkeeping.report.html.li attribute)": [[25, "armi.bookkeeping.report.html.LI.tag"]], "tag (armi.bookkeeping.report.html.link attribute)": [[25, "armi.bookkeeping.report.html.Link.tag"]], "tag (armi.bookkeeping.report.html.p attribute)": [[25, "armi.bookkeeping.report.html.P.tag"]], "tag (armi.bookkeeping.report.html.script attribute)": [[25, "armi.bookkeeping.report.html.Script.tag"]], "tag (armi.bookkeeping.report.html.span attribute)": [[25, "armi.bookkeeping.report.html.Span.tag"]], "tag (armi.bookkeeping.report.html.style attribute)": [[25, "armi.bookkeeping.report.html.Style.tag"]], "tag (armi.bookkeeping.report.html.tbody attribute)": [[25, "armi.bookkeeping.report.html.TBody.tag"]], "tag (armi.bookkeeping.report.html.td attribute)": [[25, "armi.bookkeeping.report.html.TD.tag"]], "tag (armi.bookkeeping.report.html.th attribute)": [[25, "armi.bookkeeping.report.html.TH.tag"]], "tag (armi.bookkeeping.report.html.thead attribute)": [[25, "armi.bookkeeping.report.html.THead.tag"]], "tag (armi.bookkeeping.report.html.tr attribute)": [[25, "armi.bookkeeping.report.html.TR.tag"]], "tag (armi.bookkeeping.report.html.table attribute)": [[25, "armi.bookkeeping.report.html.Table.tag"]], "tag (armi.bookkeeping.report.html.tag attribute)": [[25, "armi.bookkeeping.report.html.Tag.tag"]], "tag (armi.bookkeeping.report.html.title attribute)": [[25, "armi.bookkeeping.report.html.Title.tag"]], "tag (armi.bookkeeping.report.html.ul attribute)": [[25, "armi.bookkeeping.report.html.UL.tag"]], "write() (armi.bookkeeping.report.html.htmlfile method)": [[25, "armi.bookkeeping.report.html.HTMLFile.write"]], "writeescaped() (armi.bookkeeping.report.html.htmlfile method)": [[25, "armi.bookkeeping.report.html.HTMLFile.writeEscaped"]], "writestandardreporttemplate() (in module armi.bookkeeping.report.html)": [[25, "armi.bookkeeping.report.html.writeStandardReportTemplate"]], "design (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.DESIGN"]], "armi.bookkeeping.report.newreportutils": [[26, "module-armi.bookkeeping.report.newReportUtils"]], "comprehensivebolcontent() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.comprehensiveBOLContent"]], "createdimensionreport() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.createDimensionReport"]], "getpindesigntable() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.getPinDesignTable"]], "insertareafractionsreport() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertAreaFractionsReport"]], "insertblockdesignreport() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertBlockDesignReport"]], "insertblockdiagrams() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertBlockDiagrams"]], "insertblueprintcontent() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertBlueprintContent"]], "insertcoreandassemblymaps() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertCoreAndAssemblyMaps"]], "insertcoredesignreport() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertCoreDesignReport"]], "insertdesigncontent() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertDesignContent"]], "insertendoflifecontent() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertEndOfLifeContent"]], "insertgeneralreportcontent() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertGeneralReportContent"]], "insertmetatable() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertMetaTable"]], "insertsettingsdata() (in module armi.bookkeeping.report.newreportutils)": [[26, "armi.bookkeeping.report.newReportUtils.insertSettingsData"]], "begin (armi.bookkeeping.report.newreports.reportstage attribute)": [[27, "armi.bookkeeping.report.newReports.ReportStage.Begin"]], "end (armi.bookkeeping.report.newreports.reportstage attribute)": [[27, "armi.bookkeeping.report.newReports.ReportStage.End"]], "image (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.Image"]], "reportcontent (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.ReportContent"]], "reportnode (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.ReportNode"]], "reportstage (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.ReportStage"]], "section (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.Section"]], "standard (armi.bookkeeping.report.newreports.reportstage attribute)": [[27, "armi.bookkeeping.report.newReports.ReportStage.Standard"]], "table (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.Table"]], "timeseries (class in armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.TimeSeries"]], "add() (armi.bookkeeping.report.newreports.timeseries method)": [[27, "armi.bookkeeping.report.newReports.TimeSeries.add"]], "addchildelement() (armi.bookkeeping.report.newreports.section method)": [[27, "armi.bookkeeping.report.newReports.Section.addChildElement"]], "addrow() (armi.bookkeeping.report.newreports.table method)": [[27, "armi.bookkeeping.report.newReports.Table.addRow"]], "armi.bookkeeping.report.newreports": [[27, "module-armi.bookkeeping.report.newReports"]], "encode64() (in module armi.bookkeeping.report.newreports)": [[27, "armi.bookkeeping.report.newReports.encode64"]], "get() (armi.bookkeeping.report.newreports.reportcontent method)": [[27, "armi.bookkeeping.report.newReports.ReportContent.get"]], "get() (armi.bookkeeping.report.newreports.section method)": [[27, "armi.bookkeeping.report.newReports.Section.get"]], "items() (armi.bookkeeping.report.newreports.section method)": [[27, "armi.bookkeeping.report.newReports.Section.items"]], "leveldict (armi.bookkeeping.report.newreports.reportnode attribute)": [[27, "armi.bookkeeping.report.newReports.ReportNode.levelDict"]], "plot() (armi.bookkeeping.report.newreports.timeseries method)": [[27, "armi.bookkeeping.report.newReports.TimeSeries.plot"]], "render() (armi.bookkeeping.report.newreports.image method)": [[27, "armi.bookkeeping.report.newReports.Image.render"]], "render() (armi.bookkeeping.report.newreports.reportnode method)": [[27, "armi.bookkeeping.report.newReports.ReportNode.render"]], "render() (armi.bookkeeping.report.newreports.section method)": [[27, "armi.bookkeeping.report.newReports.Section.render"]], "render() (armi.bookkeeping.report.newreports.table method)": [[27, "armi.bookkeeping.report.newReports.Table.render"]], "render() (armi.bookkeeping.report.newreports.timeseries method)": [[27, "armi.bookkeeping.report.newReports.TimeSeries.render"]], "tableofcontents() (armi.bookkeeping.report.newreports.reportcontent method)": [[27, "armi.bookkeeping.report.newReports.ReportContent.tableOfContents"]], "writereports() (armi.bookkeeping.report.newreports.reportcontent method)": [[27, "armi.bookkeeping.report.newReports.ReportContent.writeReports"]], "reportinterface (class in armi.bookkeeping.report.reportinterface)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface"]], "armi.bookkeeping.report.reportinterface": [[28, "module-armi.bookkeeping.report.reportInterface"]], "countassembliessfp() (armi.bookkeeping.report.reportinterface.reportinterface static method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.countAssembliesSFP"]], "describeinterfaces() (in module armi.bookkeeping.report.reportinterface)": [[28, "armi.bookkeeping.report.reportInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.distributable"]], "generatedesignreport() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.generateDesignReport"]], "interactboc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOC"]], "interactbol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOL"]], "interacteoc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOC"]], "interacteol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEveryNode"]], "name (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.name"]], "printreports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.printReports"]], "reportsfp() (armi.bookkeeping.report.reportinterface.reportinterface static method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.reportSFP"]], "reports (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.reports"]], "writereports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.writeReports"]], "writerunsummary() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[28, "armi.bookkeeping.report.reportInterface.ReportInterface.writeRunSummary"]], "armi.bookkeeping.report.reportingutils": [[29, "module-armi.bookkeeping.report.reportingUtils"]], "getinterfacestacksummary() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.getInterfaceStackSummary"]], "getnodename() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.getNodeName"]], "getsysteminfo() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.getSystemInfo"]], "makeblockdesignreport() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.makeBlockDesignReport"]], "makecoreandassemblymaps() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.makeCoreAndAssemblyMaps"]], "makecoredesignreport() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.makeCoreDesignReport"]], "setneutronbalancesreport() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.setNeutronBalancesReport"]], "summarizepindesign() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.summarizePinDesign"]], "summarizepower() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.summarizePower"]], "summarizepowerpeaking() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.summarizePowerPeaking"]], "writeassemblymasssummary() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.writeAssemblyMassSummary"]], "writecyclesummary() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.writeCycleSummary"]], "writetightcouplingconvergencesummary() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.writeTightCouplingConvergenceSummary"]], "writewelcomeheaders() (in module armi.bookkeeping.report.reportingutils)": [[29, "armi.bookkeeping.report.reportingUtils.writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[30, "module-armi.bookkeeping.report.tests"]], "testreportcontentcreation (class in armi.bookkeeping.report.tests.test_newreport)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newreport": [[31, "module-armi.bookkeeping.report.tests.test_newReport"]], "test_neutronicsplotfunctions() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_neutronicsPlotFunctions"]], "test_reportbasics() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportBasics"]], "test_reportcontents() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContents"]], "test_reportcontentsend() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContentsEnd"]], "test_reportlogs() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportLogs"]], "test_tablecreation() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_tableCreation"]], "test_timeseries() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_timeSeries"]], "test_writereports() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[31, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_writeReports"]], "testreport (class in armi.bookkeeping.report.tests.test_report)": [[32, "armi.bookkeeping.report.tests.test_report.TestReport"]], "testreportinterface (class in armi.bookkeeping.report.tests.test_report)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface"]], "testreportingutils (class in armi.bookkeeping.report.tests.test_report)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportingUtils"]], "armi.bookkeeping.report.tests.test_report": [[32, "module-armi.bookkeeping.report.tests.test_report"]], "test_distributablereportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_distributableReportInt"]], "test_getdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReport.test_getData"]], "test_getnodename() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getNodeName"]], "test_getsysteminfo() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfo"]], "test_getsysteminfolinux() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoLinux"]], "test_getsysteminfomac() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoMac"]], "test_getsysteminfowindows() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoWindows"]], "test_interactboc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOC"]], "test_interactbolreportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOLReportInt"]], "test_interacteoc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOC"]], "test_interacteol() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOL"]], "test_interacteverynode() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEveryNode"]], "test_printreports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_printReports"]], "test_reactorspecificreporting() (armi.bookkeeping.report.tests.test_report.testreport method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReport.test_reactorSpecificReporting"]], "test_setdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReport.test_setData"]], "test_writereports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_writeReports"]], "test_writewelcomeheaders() (armi.bookkeeping.report.tests.test_report.testreport method)": [[32, "armi.bookkeeping.report.tests.test_report.TestReport.test_writeWelcomeHeaders"]], "snapshotinterface (class in armi.bookkeeping.snapshotinterface)": [[33, "armi.bookkeeping.snapshotInterface.SnapshotInterface"]], "activatedefaultsnapshots() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[33, "armi.bookkeeping.snapshotInterface.SnapshotInterface.activateDefaultSnapshots"]], "armi.bookkeeping.snapshotinterface": [[33, "module-armi.bookkeeping.snapshotInterface"]], "describeinterfaces() (in module armi.bookkeeping.snapshotinterface)": [[33, "armi.bookkeeping.snapshotInterface.describeInterfaces"]], "extractcyclenodefromstamp() (in module armi.bookkeeping.snapshotinterface)": [[33, "armi.bookkeeping.snapshotInterface.extractCycleNodeFromStamp"]], "getcyclenodestamp() (in module armi.bookkeeping.snapshotinterface)": [[33, "armi.bookkeeping.snapshotInterface.getCycleNodeStamp"]], "interactbol() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[33, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactBOL"]], "interactcoupled() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[33, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactCoupled"]], "interacteverynode() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[33, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactEveryNode"]], "name (armi.bookkeeping.snapshotinterface.snapshotinterface attribute)": [[33, "armi.bookkeeping.snapshotInterface.SnapshotInterface.name"]], "armi.bookkeeping.tests": [[34, "module-armi.bookkeeping.tests"]], "testhistorytracker (class in armi.bookkeeping.tests.test_historytracker)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker"]], "testhistorytrackernomodel (class in armi.bookkeeping.tests.test_historytracker)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel"]], "armi.bookkeeping.tests.test_historytracker": [[35, "module-armi.bookkeeping.tests.test_historyTracker"]], "runtutorialnotebook() (in module armi.bookkeeping.tests.test_historytracker)": [[35, "armi.bookkeeping.tests.test_historyTracker.runTutorialNotebook"]], "test_blockname() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_blockName"]], "test_calcmgfluence() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_calcMGFluence"]], "test_getblockinassembly() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_getBlockInAssembly"]], "test_historyparameters() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyParameters"]], "test_historyreport() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyReport"]], "test_timestepfiltering() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFiltering"]], "test_timestepfilteringwithgap() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[35, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFilteringWithGap"]], "klasscountertests (class in armi.bookkeeping.tests.test_memoryprofiler)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests"]], "testmemoryprofiler (class in armi.bookkeeping.tests.test_memoryprofiler)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryprofiler": [[36, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "get_containers() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.get_containers"]], "test_checkforduplicateobjectsonarmimodel() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_checkForDuplicateObjectsOnArmiModel"]], "test_counthandlesrecursion() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_countHandlesRecursion"]], "test_displaymemoryusage() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_displayMemoryUsage"]], "test_expandcontainer() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_expandContainer"]], "test_fullbreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_fullBreakdown"]], "test_getreferrers() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_getReferrers"]], "test_printfullmemorybreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_printFullMemoryBreakdown"]], "test_profilememoryusageaction() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[36, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_profileMemoryUsageAction"]], "mockreactor (class in armi.bookkeeping.tests.test_snapshot)": [[37, "armi.bookkeeping.tests.test_snapshot.MockReactor"]], "mockreactorparams (class in armi.bookkeeping.tests.test_snapshot)": [[37, "armi.bookkeeping.tests.test_snapshot.MockReactorParams"]], "testsnapshotinterface (class in armi.bookkeeping.tests.test_snapshot)": [[37, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot": [[37, "module-armi.bookkeeping.tests.test_snapshot"]], "test_activeatedefaultsnapshots_17cycles5burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[37, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_17cycles5BurnSteps"]], "test_activeatedefaultsnapshots_30cycles2burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[37, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_30cycles2BurnSteps"]], "test_interactcoupled() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[37, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactCoupled"]], "test_interacteverynode() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[37, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactEveryNode"]], "armi.bookkeeping.visualization": [[38, "module-armi.bookkeeping.visualization"]], "visfiledumper (class in armi.bookkeeping.visualization.dumper)": [[39, "armi.bookkeeping.visualization.dumper.VisFileDumper"]], "armi.bookkeeping.visualization.dumper": [[39, "module-armi.bookkeeping.visualization.dumper"]], "dumpstate() (armi.bookkeeping.visualization.dumper.visfiledumper method)": [[39, "armi.bookkeeping.visualization.dumper.VisFileDumper.dumpState"]], "visfileentrypoint (class in armi.bookkeeping.visualization.entrypoint)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint"]], "addoptions() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.addOptions"]], "armi.bookkeeping.visualization.entrypoint": [[40, "module-armi.bookkeeping.visualization.entryPoint"]], "description (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.description"]], "invoke() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.invoke"]], "name (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.name"]], "parse() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.parse"]], "settingsargument (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[40, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.settingsArgument"]], "armi.bookkeeping.visualization.tests": [[41, "module-armi.bookkeeping.visualization.tests"]], "testvisdump (class in armi.bookkeeping.visualization.tests.test_vis)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump"]], "testvtkmesh (class in armi.bookkeeping.visualization.tests.test_vis)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis": [[42, "module-armi.bookkeeping.visualization.tests.test_vis"]], "test_cartesianmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_cartesianMesh"]], "test_dumpreactorvtk() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorVtk"]], "test_dumpreactorxdmf() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorXdmf"]], "test_hexmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_hexMesh"]], "test_testvtkmesh() (armi.bookkeeping.visualization.tests.test_vis.testvtkmesh method)": [[42, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh.test_testVtkMesh"]], "testxdmf (class in armi.bookkeeping.visualization.tests.test_xdmf)": [[43, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[43, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "test_deduptimes() (armi.bookkeeping.visualization.tests.test_xdmf.testxdmf method)": [[43, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf.test_dedupTimes"]], "vtkmesh (class in armi.bookkeeping.visualization.utils)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh"]], "append() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh.append"]], "armi.bookkeeping.visualization.utils": [[44, "module-armi.bookkeeping.visualization.utils"]], "createassemmesh() (in module armi.bookkeeping.visualization.utils)": [[44, "armi.bookkeeping.visualization.utils.createAssemMesh"]], "createblockmesh() (in module armi.bookkeeping.visualization.utils)": [[44, "armi.bookkeeping.visualization.utils.createBlockMesh"]], "createreactorassemmesh() (in module armi.bookkeeping.visualization.utils)": [[44, "armi.bookkeeping.visualization.utils.createReactorAssemMesh"]], "createreactorblockmesh() (in module armi.bookkeeping.visualization.utils)": [[44, "armi.bookkeeping.visualization.utils.createReactorBlockMesh"]], "empty() (armi.bookkeeping.visualization.utils.vtkmesh static method)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh.empty"]], "write() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh.write"]], "x (armi.bookkeeping.visualization.utils.vtkmesh property)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh.x"]], "y (armi.bookkeeping.visualization.utils.vtkmesh property)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh.y"]], "z (armi.bookkeeping.visualization.utils.vtkmesh property)": [[44, "armi.bookkeeping.visualization.utils.VtkMesh.z"]], "vtkdumper (class in armi.bookkeeping.visualization.vtk)": [[45, "armi.bookkeeping.visualization.vtk.VtkDumper"]], "armi.bookkeeping.visualization.vtk": [[45, "module-armi.bookkeeping.visualization.vtk"]], "dumpstate() (armi.bookkeeping.visualization.vtk.vtkdumper method)": [[45, "armi.bookkeeping.visualization.vtk.VtkDumper.dumpState"]], "xdmfdumper (class in armi.bookkeeping.visualization.xdmf)": [[46, "armi.bookkeeping.visualization.xdmf.XdmfDumper"]], "armi.bookkeeping.visualization.xdmf": [[46, "module-armi.bookkeeping.visualization.xdmf"]], "dumpstate() (armi.bookkeeping.visualization.xdmf.xdmfdumper method)": [[46, "armi.bookkeeping.visualization.xdmf.XdmfDumper.dumpState"]], "armi.cases": [[47, "module-armi.cases"]], "case (class in armi.cases.case)": [[48, "armi.cases.case.Case"]], "addexplicitdependency() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.addExplicitDependency"]], "armi.cases.case": [[48, "module-armi.cases.case"]], "bp (armi.cases.case.case property)": [[48, "armi.cases.case.Case.bp"]], "checkinputs() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.checkInputs"]], "clone() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.clone"]], "compare() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.compare"]], "copyinterfaceinputs() (in module armi.cases.case)": [[48, "armi.cases.case.copyInterfaceInputs"]], "dbname (armi.cases.case.case property)": [[48, "armi.cases.case.Case.dbName"]], "dependencies (armi.cases.case.case property)": [[48, "armi.cases.case.Case.dependencies"]], "directory (armi.cases.case.case property)": [[48, "armi.cases.case.Case.directory"]], "geom (armi.cases.case.case property)": [[48, "armi.cases.case.Case.geom"]], "getpotentialparentfromsettingvalue() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.getPotentialParentFromSettingValue"]], "independentvariables (armi.cases.case.case property)": [[48, "armi.cases.case.Case.independentVariables"]], "initializeoperator() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.initializeOperator"]], "run() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.run"]], "setuptaskdependence() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.setUpTaskDependence"]], "summarizedesign() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.summarizeDesign"]], "title (armi.cases.case.case property)": [[48, "armi.cases.case.Case.title"]], "writeinputs() (armi.cases.case.case method)": [[48, "armi.cases.case.Case.writeInputs"]], "armi.cases.inputmodifiers": [[49, "module-armi.cases.inputModifiers"]], "blueprintblockmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[50, "armi.cases.inputModifiers.inputModifiers.BluePrintBlockModifier"]], "fail_if_after (armi.cases.inputmodifiers.inputmodifiers.inputmodifier attribute)": [[50, "armi.cases.inputModifiers.inputModifiers.InputModifier.FAIL_IF_AFTER"]], "fullcoremodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[50, "armi.cases.inputModifiers.inputModifiers.FullCoreModifier"]], "inputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[50, "armi.cases.inputModifiers.inputModifiers.InputModifier"]], "multisettingmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[50, "armi.cases.inputModifiers.inputModifiers.MultiSettingModifier"]], "samplinginputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[50, "armi.cases.inputModifiers.inputModifiers.SamplingInputModifier"]], "settingsmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[50, "armi.cases.inputModifiers.inputModifiers.SettingsModifier"]], "armi.cases.inputmodifiers.inputmodifiers": [[50, "module-armi.cases.inputModifiers.inputModifiers"]], "neutronicconvergencemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[51, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicConvergenceModifier"]], "neutronicmeshssizemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[51, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicMeshsSizeModifier"]], "armi.cases.inputmodifiers.neutronicsmodifiers": [[51, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "cladthicknessbyidmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[52, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier"]], "cladthicknessbyodmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[52, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyidmodifier attribute)": [[52, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier.FAIL_IF_AFTER"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyodmodifier attribute)": [[52, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier.FAIL_IF_AFTER"]], "smeardensitymodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[52, "armi.cases.inputModifiers.pinTypeInputModifiers.SmearDensityModifier"]], "armi.cases.inputmodifiers.pintypeinputmodifiers": [[52, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputmodifiers.tests": [[53, "module-armi.cases.inputModifiers.tests"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom"]], "neutronicskernelopts (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.NeutronicsKernelOpts"]], "testfullcoremodifier (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier"]], "testsettingsmodifiers (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers"]], "testsuitebuilderintegrations (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations"]], "armi.cases.inputmodifiers.tests.test_inputmodifiers": [[54, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_inputmodifiers.mockgeom attribute)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom.geomType"]], "test_neutronicconvergencemodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsettingsmodifiers method)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers.test_NeutronicConvergenceModifier"]], "test_blueprintblockmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_bluePrintBlockModifier"]], "test_fullcoreconversion() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testfullcoremodifier method)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier.test_fullCoreConversion"]], "test_settingsmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_settingsModifier"]], "test_smeardensityfail() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[54, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_smearDensityFail"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[55, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom"]], "testblueprintmodifiers (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[55, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers"]], "armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers": [[55, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.mockgeom attribute)": [[55, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom.geomType"]], "test_adjustsmeardensity() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[55, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_AdjustSmearDensity"]], "test_cladthickenessbyidmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[55, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByIDModifier"]], "test_cladthickenessbyodmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[55, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByODModifier"]], "casesuite (class in armi.cases.suite)": [[56, "armi.cases.suite.CaseSuite"]], "add() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.add"]], "armi.cases.suite": [[56, "module-armi.cases.suite"]], "clone() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.clone"]], "compare() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.compare"]], "discover() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.discover"]], "echoconfiguration() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.echoConfiguration"]], "remove() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.remove"]], "run() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.run"]], "writeinputs() (armi.cases.suite.casesuite method)": [[56, "armi.cases.suite.CaseSuite.writeInputs"]], "writetable() (armi.cases.suite.casesuite static method)": [[56, "armi.cases.suite.CaseSuite.writeTable"]], "fullfactorialsuitebuilder (class in armi.cases.suitebuilder)": [[57, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder"]], "fullfactorialsuitebuildernoisy (class in armi.cases.suitebuilder)": [[57, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy"]], "latinhypercubesuitebuilder (class in armi.cases.suitebuilder)": [[57, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder"]], "separateeffectssuitebuilder (class in armi.cases.suitebuilder)": [[57, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder"]], "suitebuilder (class in armi.cases.suitebuilder)": [[57, "armi.cases.suiteBuilder.SuiteBuilder"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuilder method)": [[57, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuildernoisy method)": [[57, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[57, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.separateeffectssuitebuilder method)": [[57, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.suitebuilder method)": [[57, "armi.cases.suiteBuilder.SuiteBuilder.addDegreeOfFreedom"]], "addmodifierset() (armi.cases.suitebuilder.suitebuilder method)": [[57, "armi.cases.suiteBuilder.SuiteBuilder.addModifierSet"]], "armi.cases.suitebuilder": [[57, "module-armi.cases.suiteBuilder"]], "buildsuite() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[57, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.buildSuite"]], "buildsuite() (armi.cases.suitebuilder.suitebuilder method)": [[57, "armi.cases.suiteBuilder.SuiteBuilder.buildSuite"]], "getinputmodifiers() (in module armi.cases.suitebuilder)": [[57, "armi.cases.suiteBuilder.getInputModifiers"]], "armi.cases.tests": [[58, "module-armi.cases.tests"]], "multifilesinterfaces (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.MultiFilesInterfaces"]], "testarmicase (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestArmiCase"]], "testcasesuitecomparison (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteComparison"]], "testcasesuitedependencies (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies"]], "testcopyinterfaceinputs (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs"]], "testextrainputwriting (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestExtraInputWriting"]], "testpluginforcopyinterfacesmultiplefiles (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles"]], "testpluginwithduplicatesetting (class in armi.cases.tests.test_cases)": [[59, "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting"]], "armi.cases.tests.test_cases": [[59, "module-armi.cases.tests.test_cases"]], "definesettings() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[59, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.defineSettings"]], "definesettings() (armi.cases.tests.test_cases.testpluginwithduplicatesetting static method)": [[59, "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting.defineSettings"]], "exposeinterfaces() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[59, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.exposeInterfaces"]], "name (armi.cases.tests.test_cases.multifilesinterfaces attribute)": [[59, "armi.cases.tests.test_cases.MultiFilesInterfaces.name"]], "specifyinputs() (armi.cases.tests.test_cases.multifilesinterfaces static method)": [[59, "armi.cases.tests.test_cases.MultiFilesInterfaces.specifyInputs"]], "test_checkinputs() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_checkInputs"]], "test_clone() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_clone"]], "test_clone() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_clone"]], "test_comparenodiffs() (armi.cases.tests.test_cases.testcasesuitecomparison method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteComparison.test_compareNoDiffs"]], "test_copyinputshelper() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInputsHelper"]], "test_copyinterfaceinputs_abspath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_absPath"]], "test_copyinterfaceinputs_multiplefiles() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_multipleFiles"]], "test_copyinterfaceinputs_nonfilepath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_nonFilePath"]], "test_copyinterfaceinputs_relpath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_relPath"]], "test_copyinterfaceinputs_singlefile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_singleFile"]], "test_copyinterfaceinputs_wildcardfile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_wildcardFile"]], "test_dependencieswithobscurepaths() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependenciesWithObscurePaths"]], "test_dependencyfromdbname() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromDBName"]], "test_dependencyfromexplictrepeatshuffles() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromExplictRepeatShuffles"]], "test_endcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_endCoverage"]], "test_endprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_endProfiling"]], "test_explicitdependency() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_explicitDependency"]], "test_failonduplicatesetting() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[59, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_failOnDuplicateSetting"]], "test_getcoveragercfile() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_getCoverageRcFile"]], "test_independentvariables() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_independentVariables"]], "test_run() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_run"]], "test_setuptaskdependence() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_setUpTaskDependence"]], "test_startcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_startCoverage"]], "test_startprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_startProfiling"]], "test_summarizedesign() (armi.cases.tests.test_cases.testarmicase method)": [[59, "armi.cases.tests.test_cases.TestArmiCase.test_summarizeDesign"]], "test_titlesettergetter() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[59, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_titleSetterGetter"]], "test_writeinput() (armi.cases.tests.test_cases.testextrainputwriting method)": [[59, "armi.cases.tests.test_cases.TestExtraInputWriting.test_writeInput"]], "latinhypercubemodifier (class in armi.cases.tests.test_suitebuilder)": [[60, "armi.cases.tests.test_suiteBuilder.LatinHyperCubeModifier"]], "settingmodifier (class in armi.cases.tests.test_suitebuilder)": [[60, "armi.cases.tests.test_suiteBuilder.SettingModifier"]], "testfullfactorialsuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[60, "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder"]], "testlatinhypercubesuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[60, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder"]], "testseparateeffectsbuilder (class in armi.cases.tests.test_suitebuilder)": [[60, "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder"]], "armi.cases.tests.test_suitebuilder": [[60, "module-armi.cases.tests.test_suiteBuilder"]], "test_adddegreeoffreedom() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[60, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_addDegreeOfFreedom"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testfullfactorialsuitebuilder method)": [[60, "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder.test_buildSuite"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[60, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_buildSuite"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testseparateeffectsbuilder method)": [[60, "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder.test_buildSuite"]], "test_initialize() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[60, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_initialize"]], "armicli (class in armi.cli)": [[61, "armi.cli.ArmiCLI"]], "armiparser (class in armi.cli)": [[61, "armi.cli.ArmiParser"]], "entrypointsplugin (class in armi.cli)": [[61, "armi.cli.EntryPointsPlugin"]], "armi.cli": [[61, "module-armi.cli"]], "defineentrypoints() (armi.cli.entrypointsplugin static method)": [[61, "armi.cli.EntryPointsPlugin.defineEntryPoints"]], "executecommand() (armi.cli.armicli method)": [[61, "armi.cli.ArmiCLI.executeCommand"]], "listcommands() (armi.cli.armicli method)": [[61, "armi.cli.ArmiCLI.listCommands"]], "print_help() (armi.cli.armiparser method)": [[61, "armi.cli.ArmiParser.print_help"]], "run() (armi.cli.armicli method)": [[61, "armi.cli.ArmiCLI.run"]], "showversion() (armi.cli.armicli static method)": [[61, "armi.cli.ArmiCLI.showVersion"]], "splash() (in module armi.cli)": [[61, "armi.cli.splash"]], "checkinputentrypoint (class in armi.cli.checkinputs)": [[62, "armi.cli.checkInputs.CheckInputEntryPoint"]], "expandblueprints (class in armi.cli.checkinputs)": [[62, "armi.cli.checkInputs.ExpandBlueprints"]], "addoptions() (armi.cli.checkinputs.checkinputentrypoint method)": [[62, "armi.cli.checkInputs.CheckInputEntryPoint.addOptions"]], "addoptions() (armi.cli.checkinputs.expandblueprints method)": [[62, "armi.cli.checkInputs.ExpandBlueprints.addOptions"]], "armi.cli.checkinputs": [[62, "module-armi.cli.checkInputs"]], "invoke() (armi.cli.checkinputs.checkinputentrypoint method)": [[62, "armi.cli.checkInputs.CheckInputEntryPoint.invoke"]], "invoke() (armi.cli.checkinputs.expandblueprints method)": [[62, "armi.cli.checkInputs.ExpandBlueprints.invoke"]], "name (armi.cli.checkinputs.checkinputentrypoint attribute)": [[62, "armi.cli.checkInputs.CheckInputEntryPoint.name"]], "name (armi.cli.checkinputs.expandblueprints attribute)": [[62, "armi.cli.checkInputs.ExpandBlueprints.name"]], "settingsargument (armi.cli.checkinputs.checkinputentrypoint attribute)": [[62, "armi.cli.checkInputs.CheckInputEntryPoint.settingsArgument"]], "settingsargument (armi.cli.checkinputs.expandblueprints attribute)": [[62, "armi.cli.checkInputs.ExpandBlueprints.settingsArgument"]], "splash (armi.cli.checkinputs.expandblueprints attribute)": [[62, "armi.cli.checkInputs.ExpandBlueprints.splash"]], "cleantemps (class in armi.cli.cleantemps)": [[63, "armi.cli.cleanTemps.CleanTemps"]], "armi.cli.cleantemps": [[63, "module-armi.cli.cleanTemps"]], "invoke() (armi.cli.cleantemps.cleantemps method)": [[63, "armi.cli.cleanTemps.CleanTemps.invoke"]], "name (armi.cli.cleantemps.cleantemps attribute)": [[63, "armi.cli.cleanTemps.CleanTemps.name"]], "settingsargument (armi.cli.cleantemps.cleantemps attribute)": [[63, "armi.cli.cleanTemps.CleanTemps.settingsArgument"]], "clonearmiruncommandbatch (class in armi.cli.clone)": [[64, "armi.cli.clone.CloneArmiRunCommandBatch"]], "clonearmiruncommandinteractive (class in armi.cli.clone)": [[64, "armi.cli.clone.CloneArmiRunCommandInteractive"]], "clonesuitecommand (class in armi.cli.clone)": [[64, "armi.cli.clone.CloneSuiteCommand"]], "addoptions() (armi.cli.clone.clonearmiruncommandbatch method)": [[64, "armi.cli.clone.CloneArmiRunCommandBatch.addOptions"]], "addoptions() (armi.cli.clone.clonesuitecommand method)": [[64, "armi.cli.clone.CloneSuiteCommand.addOptions"]], "armi.cli.clone": [[64, "module-armi.cli.clone"]], "invoke() (armi.cli.clone.clonearmiruncommandbatch method)": [[64, "armi.cli.clone.CloneArmiRunCommandBatch.invoke"]], "invoke() (armi.cli.clone.clonesuitecommand method)": [[64, "armi.cli.clone.CloneSuiteCommand.invoke"]], "name (armi.cli.clone.clonearmiruncommandbatch attribute)": [[64, "armi.cli.clone.CloneArmiRunCommandBatch.name"]], "name (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[64, "armi.cli.clone.CloneArmiRunCommandInteractive.name"]], "name (armi.cli.clone.clonesuitecommand attribute)": [[64, "armi.cli.clone.CloneSuiteCommand.name"]], "settingsargument (armi.cli.clone.clonearmiruncommandbatch attribute)": [[64, "armi.cli.clone.CloneArmiRunCommandBatch.settingsArgument"]], "settingsargument (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[64, "armi.cli.clone.CloneArmiRunCommandInteractive.settingsArgument"]], "settingsargument (armi.cli.clone.clonesuitecommand attribute)": [[64, "armi.cli.clone.CloneSuiteCommand.settingsArgument"]], "comparecases (class in armi.cli.comparecases)": [[65, "armi.cli.compareCases.CompareCases"]], "comparesuites (class in armi.cli.comparecases)": [[65, "armi.cli.compareCases.CompareSuites"]], "addoptions() (armi.cli.comparecases.comparecases method)": [[65, "armi.cli.compareCases.CompareCases.addOptions"]], "addoptions() (armi.cli.comparecases.comparesuites method)": [[65, "armi.cli.compareCases.CompareSuites.addOptions"]], "armi.cli.comparecases": [[65, "module-armi.cli.compareCases"]], "invoke() (armi.cli.comparecases.comparecases method)": [[65, "armi.cli.compareCases.CompareCases.invoke"]], "invoke() (armi.cli.comparecases.comparesuites method)": [[65, "armi.cli.compareCases.CompareSuites.invoke"]], "name (armi.cli.comparecases.comparecases attribute)": [[65, "armi.cli.compareCases.CompareCases.name"]], "name (armi.cli.comparecases.comparesuites attribute)": [[65, "armi.cli.compareCases.CompareSuites.name"]], "parse() (armi.cli.comparecases.comparecases method)": [[65, "armi.cli.compareCases.CompareCases.parse"]], "settingsargument (armi.cli.comparecases.comparecases attribute)": [[65, "armi.cli.compareCases.CompareCases.settingsArgument"]], "settingsargument (armi.cli.comparecases.comparesuites attribute)": [[65, "armi.cli.compareCases.CompareSuites.settingsArgument"]], "extractinputs (class in armi.cli.database)": [[66, "armi.cli.database.ExtractInputs"]], "injectinputs (class in armi.cli.database)": [[66, "armi.cli.database.InjectInputs"]], "addoptions() (armi.cli.database.extractinputs method)": [[66, "armi.cli.database.ExtractInputs.addOptions"]], "addoptions() (armi.cli.database.injectinputs method)": [[66, "armi.cli.database.InjectInputs.addOptions"]], "armi.cli.database": [[66, "module-armi.cli.database"]], "invoke() (armi.cli.database.extractinputs method)": [[66, "armi.cli.database.ExtractInputs.invoke"]], "invoke() (armi.cli.database.injectinputs method)": [[66, "armi.cli.database.InjectInputs.invoke"]], "mode (armi.cli.database.extractinputs attribute)": [[66, "armi.cli.database.ExtractInputs.mode"]], "mode (armi.cli.database.injectinputs attribute)": [[66, "armi.cli.database.InjectInputs.mode"]], "name (armi.cli.database.extractinputs attribute)": [[66, "armi.cli.database.ExtractInputs.name"]], "name (armi.cli.database.injectinputs attribute)": [[66, "armi.cli.database.InjectInputs.name"]], "parse_args() (armi.cli.database.extractinputs method)": [[66, "armi.cli.database.ExtractInputs.parse_args"]], "settingsargument (armi.cli.database.extractinputs attribute)": [[66, "armi.cli.database.ExtractInputs.settingsArgument"]], "settingsargument (armi.cli.database.injectinputs attribute)": [[66, "armi.cli.database.InjectInputs.settingsArgument"]], "entrypoint (class in armi.cli.entrypoint)": [[67, "armi.cli.entryPoint.EntryPoint"]], "addoptions() (armi.cli.entrypoint.entrypoint method)": [[67, "armi.cli.entryPoint.EntryPoint.addOptions"]], "armi.cli.entrypoint": [[67, "module-armi.cli.entryPoint"]], "createoptionfromsetting() (armi.cli.entrypoint.entrypoint method)": [[67, "armi.cli.entryPoint.EntryPoint.createOptionFromSetting"]], "description (armi.cli.entrypoint.entrypoint attribute)": [[67, "armi.cli.entryPoint.EntryPoint.description"]], "invoke() (armi.cli.entrypoint.entrypoint method)": [[67, "armi.cli.entryPoint.EntryPoint.invoke"]], "loadsettings() (in module armi.cli.entrypoint)": [[67, "armi.cli.entryPoint.loadSettings"]], "mode (armi.cli.entrypoint.entrypoint attribute)": [[67, "armi.cli.entryPoint.EntryPoint.mode"]], "name (armi.cli.entrypoint.entrypoint attribute)": [[67, "armi.cli.entryPoint.EntryPoint.name"]], "parse() (armi.cli.entrypoint.entrypoint method)": [[67, "armi.cli.entryPoint.EntryPoint.parse"]], "parse_args() (armi.cli.entrypoint.entrypoint method)": [[67, "armi.cli.entryPoint.EntryPoint.parse_args"]], "setcasetitle() (in module armi.cli.entrypoint)": [[67, "armi.cli.entryPoint.setCaseTitle"]], "setsetting() (in module armi.cli.entrypoint)": [[67, "armi.cli.entryPoint.setSetting"]], "settingsargument (armi.cli.entrypoint.entrypoint attribute)": [[67, "armi.cli.entryPoint.EntryPoint.settingsArgument"]], "splash (armi.cli.entrypoint.entrypoint attribute)": [[67, "armi.cli.entryPoint.EntryPoint.splash"]], "storebool() (in module armi.cli.entrypoint)": [[67, "armi.cli.entryPoint.storeBool"]], "gridguientrypoint (class in armi.cli.gridgui)": [[68, "armi.cli.gridGui.GridGuiEntryPoint"]], "addoptions() (armi.cli.gridgui.gridguientrypoint method)": [[68, "armi.cli.gridGui.GridGuiEntryPoint.addOptions"]], "armi.cli.gridgui": [[68, "module-armi.cli.gridGui"]], "invoke() (armi.cli.gridgui.gridguientrypoint method)": [[68, "armi.cli.gridGui.GridGuiEntryPoint.invoke"]], "name (armi.cli.gridgui.gridguientrypoint attribute)": [[68, "armi.cli.gridGui.GridGuiEntryPoint.name"]], "settingsargument (armi.cli.gridgui.gridguientrypoint attribute)": [[68, "armi.cli.gridGui.GridGuiEntryPoint.settingsArgument"]], "migrateinputs (class in armi.cli.migrateinputs)": [[69, "armi.cli.migrateInputs.MigrateInputs"]], "addoptions() (armi.cli.migrateinputs.migrateinputs method)": [[69, "armi.cli.migrateInputs.MigrateInputs.addOptions"]], "armi.cli.migrateinputs": [[69, "module-armi.cli.migrateInputs"]], "invoke() (armi.cli.migrateinputs.migrateinputs method)": [[69, "armi.cli.migrateInputs.MigrateInputs.invoke"]], "name (armi.cli.migrateinputs.migrateinputs attribute)": [[69, "armi.cli.migrateInputs.MigrateInputs.name"]], "settingsargument (armi.cli.migrateinputs.migrateinputs attribute)": [[69, "armi.cli.migrateInputs.MigrateInputs.settingsArgument"]], "modifycasesettingscommand (class in armi.cli.modify)": [[70, "armi.cli.modify.ModifyCaseSettingsCommand"]], "addoptions() (armi.cli.modify.modifycasesettingscommand method)": [[70, "armi.cli.modify.ModifyCaseSettingsCommand.addOptions"]], "armi.cli.modify": [[70, "module-armi.cli.modify"]], "invoke() (armi.cli.modify.modifycasesettingscommand method)": [[70, "armi.cli.modify.ModifyCaseSettingsCommand.invoke"]], "name (armi.cli.modify.modifycasesettingscommand attribute)": [[70, "armi.cli.modify.ModifyCaseSettingsCommand.name"]], "settingsargument (armi.cli.modify.modifycasesettingscommand attribute)": [[70, "armi.cli.modify.ModifyCaseSettingsCommand.settingsArgument"]], "reportsentrypoint (class in armi.cli.reportsentrypoint)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint"]], "addoptions() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.addOptions"]], "armi.cli.reportsentrypoint": [[71, "module-armi.cli.reportsEntryPoint"]], "createreportfromsettings() (in module armi.cli.reportsentrypoint)": [[71, "armi.cli.reportsEntryPoint.createReportFromSettings"]], "description (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.description"]], "invoke() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.invoke"]], "name (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.name"]], "report_out_dir (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.report_out_dir"]], "settingsargument (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.settingsArgument"]], "totwotuple() (armi.cli.reportsentrypoint.reportsentrypoint static method)": [[71, "armi.cli.reportsEntryPoint.ReportsEntryPoint.toTwoTuple"]], "runentrypoint (class in armi.cli.run)": [[72, "armi.cli.run.RunEntryPoint"]], "addoptions() (armi.cli.run.runentrypoint method)": [[72, "armi.cli.run.RunEntryPoint.addOptions"]], "armi.cli.run": [[72, "module-armi.cli.run"]], "invoke() (armi.cli.run.runentrypoint method)": [[72, "armi.cli.run.RunEntryPoint.invoke"]], "name (armi.cli.run.runentrypoint attribute)": [[72, "armi.cli.run.RunEntryPoint.name"]], "settingsargument (armi.cli.run.runentrypoint attribute)": [[72, "armi.cli.run.RunEntryPoint.settingsArgument"]], "runsuitecommand (class in armi.cli.runsuite)": [[73, "armi.cli.runSuite.RunSuiteCommand"]], "addoptions() (armi.cli.runsuite.runsuitecommand method)": [[73, "armi.cli.runSuite.RunSuiteCommand.addOptions"]], "armi.cli.runsuite": [[73, "module-armi.cli.runSuite"]], "invoke() (armi.cli.runsuite.runsuitecommand method)": [[73, "armi.cli.runSuite.RunSuiteCommand.invoke"]], "name (armi.cli.runsuite.runsuitecommand attribute)": [[73, "armi.cli.runSuite.RunSuiteCommand.name"]], "settingsargument (armi.cli.runsuite.runsuitecommand attribute)": [[73, "armi.cli.runSuite.RunSuiteCommand.settingsArgument"]], "armi.cli.tests": [[74, "module-armi.cli.tests"]], "testcheckinputentrypoint (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint"]], "testclonearmiruncommandbatch (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch"]], "testclonesuitecommand (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand"]], "testcomparecases (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestCompareCases"]], "testcompareisotxslibsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint"]], "testcomparesuites (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestCompareSuites"]], "testexpandblueprints (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints"]], "testextractinputs (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestExtractInputs"]], "testinitializationentrypoints (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints"]], "testinjectinputs (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestInjectInputs"]], "testmigrateinputs (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs"]], "testmodifycasesettingscommand (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand"]], "testreportsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint"]], "testrunentrypoint (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint"]], "testrunsuitecommand (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand"]], "testvisfileentrypointcommand (class in armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand"]], "armi.cli.tests.test_runentrypoint": [[75, "module-armi.cli.tests.test_runEntryPoint"]], "buildtestdb() (in module armi.cli.tests.test_runentrypoint)": [[75, "armi.cli.tests.test_runEntryPoint.buildTestDB"]], "test_checkinputentrypointbasics() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointBasics"]], "test_checkinputentrypointinvoke() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointInvoke"]], "test_cleanargs() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_cleanArgs"]], "test_clonearmiruncommandbatchbasics() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchBasics"]], "test_clonearmiruncommandbatchinvokemedium() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeMedium"]], "test_clonearmiruncommandbatchinvokeshort() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeShort"]], "test_clonesuitecommandbasics() (armi.cli.tests.test_runentrypoint.testclonesuitecommand method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand.test_cloneSuiteCommandBasics"]], "test_comparecasesbasics() (armi.cli.tests.test_runentrypoint.testcomparecases method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCompareCases.test_compareCasesBasics"]], "test_compareisotxslibsbasics() (armi.cli.tests.test_runentrypoint.testcompareisotxslibsentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint.test_compareIsotxsLibsBasics"]], "test_comparesuitesbasics() (armi.cli.tests.test_runentrypoint.testcomparesuites method)": [[75, "armi.cli.tests.test_runEntryPoint.TestCompareSuites.test_compareSuitesBasics"]], "test_entrypointinitialization() (armi.cli.tests.test_runentrypoint.testinitializationentrypoints method)": [[75, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints.test_entryPointInitialization"]], "test_executecommand() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_executeCommand"]], "test_expandblueprintsbasics() (armi.cli.tests.test_runentrypoint.testexpandblueprints method)": [[75, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints.test_expandBlueprintsBasics"]], "test_extractinputsbasics() (armi.cli.tests.test_runentrypoint.testextractinputs method)": [[75, "armi.cli.tests.test_runEntryPoint.TestExtractInputs.test_extractInputsBasics"]], "test_injectinputsbasics() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[75, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsBasics"]], "test_injectinputsinvokeignore() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[75, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeIgnore"]], "test_injectinputsinvokenodata() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[75, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeNoData"]], "test_migrateinputsbasics() (armi.cli.tests.test_runentrypoint.testmigrateinputs method)": [[75, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs.test_migrateInputsBasics"]], "test_modifycasesettingscommandbasics() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[75, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandBasics"]], "test_modifycasesettingscommandinvoke() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[75, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandInvoke"]], "test_reportsentrypointbasics() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_reportsEntryPointBasics"]], "test_runcommandhelp() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runCommandHelp"]], "test_runentrypointbasics() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runEntryPointBasics"]], "test_runsuitecommandbasics() (armi.cli.tests.test_runentrypoint.testrunsuitecommand method)": [[75, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand.test_runSuiteCommandBasics"]], "test_totwotuple() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[75, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_toTwoTuple"]], "test_visfileentrypointbasics() (armi.cli.tests.test_runentrypoint.testvisfileentrypointcommand method)": [[75, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand.test_visFileEntryPointBasics"]], "testrunsuitesuite (class in armi.cli.tests.test_runsuite)": [[76, "armi.cli.tests.test_runSuite.TestRunSuiteSuite"]], "armi.cli.tests.test_runsuite": [[76, "module-armi.cli.tests.test_runSuite"]], "test_listcommand() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[76, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_listCommand"]], "test_run() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[76, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_run"]], "test_showversion() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[76, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_showVersion"]], "armi.conftest": [[77, "module-armi.conftest"]], "bootstraparmitestenv() (in module armi.conftest)": [[77, "armi.conftest.bootstrapArmiTestEnv"]], "pytest_sessionstart() (in module armi.conftest)": [[77, "armi.conftest.pytest_sessionstart"]], "batch (armi.context.mode attribute)": [[78, "armi.context.Mode.BATCH"]], "gui (armi.context.mode attribute)": [[78, "armi.context.Mode.GUI"]], "interactive (armi.context.mode attribute)": [[78, "armi.context.Mode.INTERACTIVE"]], "mode (class in armi.context)": [[78, "armi.context.Mode"]], "activatelocalfastpath() (in module armi.context)": [[78, "armi.context.activateLocalFastPath"]], "armi.context": [[78, "module-armi.context"]], "cleanallarmitempdirs() (in module armi.context)": [[78, "armi.context.cleanAllArmiTempDirs"]], "cleantempdirs() (in module armi.context)": [[78, "armi.context.cleanTempDirs"]], "disconnectallhdfdbs() (in module armi.context)": [[78, "armi.context.disconnectAllHdfDBs"]], "getfastpath() (in module armi.context)": [[78, "armi.context.getFastPath"]], "setmode() (armi.context.mode class method)": [[78, "armi.context.Mode.setMode"]], "after (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.AFTER"]], "before (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.BEFORE"]], "bookkeeping (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.BOOKKEEPING"]], "critical_control (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.CRITICAL_CONTROL"]], "cross_sections (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.CROSS_SECTIONS"]], "depletion (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.DEPLETION"]], "duplicate (armi.interfaces.interface.distribute attribute)": [[79, "armi.interfaces.Interface.Distribute.DUPLICATE"]], "flux (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.FLUX"]], "fuel_management (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.FUEL_MANAGEMENT"]], "fuel_performance (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.FUEL_PERFORMANCE"]], "inputwriter (class in armi.interfaces)": [[79, "armi.interfaces.InputWriter"]], "interface (class in armi.interfaces)": [[79, "armi.interfaces.Interface"]], "interface.distribute (class in armi.interfaces)": [[79, "armi.interfaces.Interface.Distribute"]], "interfaceinfo (class in armi.interfaces)": [[79, "armi.interfaces.InterfaceInfo"]], "new (armi.interfaces.interface.distribute attribute)": [[79, "armi.interfaces.Interface.Distribute.NEW"]], "outputreader (class in armi.interfaces)": [[79, "armi.interfaces.OutputReader"]], "postprocessing (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.POSTPROCESSING"]], "preprocessing (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.PREPROCESSING"]], "reactivity_coeffs (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.REACTIVITY_COEFFS"]], "skip (armi.interfaces.interface.distribute attribute)": [[79, "armi.interfaces.Interface.Distribute.SKIP"]], "stack_order (class in armi.interfaces)": [[79, "armi.interfaces.STACK_ORDER"]], "thermal_hydraulics (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.THERMAL_HYDRAULICS"]], "transient (armi.interfaces.stack_order attribute)": [[79, "armi.interfaces.STACK_ORDER.TRANSIENT"]], "tightcoupler (class in armi.interfaces)": [[79, "armi.interfaces.TightCoupler"]], "apply() (armi.interfaces.outputreader method)": [[79, "armi.interfaces.OutputReader.apply"]], "armi.interfaces": [[79, "module-armi.interfaces"]], "attachreactor() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.attachReactor"]], "bolforce() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.bolForce"]], "detachreactor() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.detachReactor"]], "distributable() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.distributable"]], "duplicate() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.duplicate"]], "enabled() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.enabled"]], "function (armi.interfaces.interface attribute)": [[79, "armi.interfaces.Interface.function"]], "getactiveinterfaceinfo() (in module armi.interfaces)": [[79, "armi.interfaces.getActiveInterfaceInfo"]], "getdependencies() (armi.interfaces.interface class method)": [[79, "armi.interfaces.Interface.getDependencies"]], "gethistoryparams() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.getHistoryParams"]], "getinputfiles() (armi.interfaces.interface class method)": [[79, "armi.interfaces.Interface.getInputFiles"]], "getinterface() (armi.interfaces.inputwriter method)": [[79, "armi.interfaces.InputWriter.getInterface"]], "getinterface() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.getInterface"]], "getinterface() (armi.interfaces.outputreader method)": [[79, "armi.interfaces.OutputReader.getInterface"]], "getlistdimension() (armi.interfaces.tightcoupler static method)": [[79, "armi.interfaces.TightCoupler.getListDimension"]], "gettightcouplingvalue() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.getTightCouplingValue"]], "interactboc() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactBOC"]], "interactbol() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactBOL"]], "interactcoupled() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactCoupled"]], "interactdistributestate() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactDistributeState"]], "interacteoc() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactEOC"]], "interacteol() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactEOL"]], "interacterror() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactError"]], "interacteverynode() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactEveryNode"]], "interactinit() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.interactInit"]], "interfacecls (armi.interfaces.interfaceinfo attribute)": [[79, "armi.interfaces.InterfaceInfo.interfaceCls"]], "isconverged() (armi.interfaces.tightcoupler method)": [[79, "armi.interfaces.TightCoupler.isConverged"]], "isinterfaceactive() (in module armi.interfaces)": [[79, "armi.interfaces.isInterfaceActive"]], "isrequesteddetailpoint() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.isRequestedDetailPoint"]], "kwargs (armi.interfaces.interfaceinfo attribute)": [[79, "armi.interfaces.InterfaceInfo.kwargs"]], "name (armi.interfaces.interface attribute)": [[79, "armi.interfaces.Interface.name"]], "namecontains() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.nameContains"]], "order (armi.interfaces.interfaceinfo attribute)": [[79, "armi.interfaces.InterfaceInfo.order"]], "postdistributestate() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.postDistributeState"]], "predistributestate() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.preDistributeState"]], "read() (armi.interfaces.outputreader method)": [[79, "armi.interfaces.OutputReader.read"]], "readoutput() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.readOutput"]], "specifyinputs() (armi.interfaces.interface static method)": [[79, "armi.interfaces.Interface.specifyInputs"]], "storepreviousiterationvalue() (armi.interfaces.tightcoupler method)": [[79, "armi.interfaces.TightCoupler.storePreviousIterationValue"]], "updatephysicscouplingcontrol() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.updatePhysicsCouplingControl"]], "workeroperate() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.workerOperate"]], "write() (armi.interfaces.inputwriter method)": [[79, "armi.interfaces.InputWriter.write"]], "writeinput() (armi.interfaces.interface method)": [[79, "armi.interfaces.Interface.writeInput"]], "armi.materials": [[80, "module-armi.materials"]], "importmaterialsintomodulenamespace() (in module armi.materials)": [[80, "armi.materials.importMaterialsIntoModuleNamespace"]], "iterallmaterialclassesinnamespace() (in module armi.materials)": [[80, "armi.materials.iterAllMaterialClassesInNamespace"]], "resolvematerialclassbyname() (in module armi.materials)": [[80, "armi.materials.resolveMaterialClassByName"]], "setmaterialnamespaceorder() (in module armi.materials)": [[80, "armi.materials.setMaterialNamespaceOrder"]], "air (class in armi.materials.air)": [[81, "armi.materials.air.Air"]], "armi.materials.air": [[81, "module-armi.materials.air"]], "heatcapacity() (armi.materials.air.air method)": [[81, "armi.materials.air.Air.heatCapacity"]], "propertyvalidtemperature (armi.materials.air.air attribute)": [[81, "armi.materials.air.Air.propertyValidTemperature"]], "pseudodensity() (armi.materials.air.air method)": [[81, "armi.materials.air.Air.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.air.air method)": [[81, "armi.materials.air.Air.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.air.air method)": [[81, "armi.materials.air.Air.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.air.air method)": [[81, "armi.materials.air.Air.thermalConductivity"]], "alloy200 (class in armi.materials.alloy200)": [[82, "armi.materials.alloy200.Alloy200"]], "armi.materials.alloy200": [[82, "module-armi.materials.alloy200"]], "density() (armi.materials.alloy200.alloy200 method)": [[82, "armi.materials.alloy200.Alloy200.density"]], "linearexpansion() (armi.materials.alloy200.alloy200 method)": [[82, "armi.materials.alloy200.Alloy200.linearExpansion"]], "linearexpansiontable (armi.materials.alloy200.alloy200 attribute)": [[82, "armi.materials.alloy200.Alloy200.linearExpansionTable"]], "linearexpansiontablek (armi.materials.alloy200.alloy200 attribute)": [[82, "armi.materials.alloy200.Alloy200.linearExpansionTableK"]], "modelconst (armi.materials.alloy200.alloy200 attribute)": [[82, "armi.materials.alloy200.Alloy200.modelConst"]], "propertyvalidtemperature (armi.materials.alloy200.alloy200 attribute)": [[82, "armi.materials.alloy200.Alloy200.propertyValidTemperature"]], "referencemaxpercentimpurites (armi.materials.alloy200.alloy200 attribute)": [[82, "armi.materials.alloy200.Alloy200.referenceMaxPercentImpurites"]], "references (armi.materials.alloy200.alloy200 attribute)": [[82, "armi.materials.alloy200.Alloy200.references"]], "setdefaultmassfracs() (armi.materials.alloy200.alloy200 method)": [[82, "armi.materials.alloy200.Alloy200.setDefaultMassFracs"]], "b4c (class in armi.materials.b4c)": [[83, "armi.materials.b4c.B4C"]], "applyinputparams() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.applyInputParams"]], "armi.materials.b4c": [[83, "module-armi.materials.b4c"]], "density() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.density"]], "enrichednuclide (armi.materials.b4c.b4c attribute)": [[83, "armi.materials.b4c.B4C.enrichedNuclide"]], "getmassenrichmentfromnumenrich() (armi.materials.b4c.b4c static method)": [[83, "armi.materials.b4c.B4C.getMassEnrichmentFromNumEnrich"]], "linearexpansionpercent() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.b4c.b4c attribute)": [[83, "armi.materials.b4c.B4C.propertyValidTemperature"]], "pseudodensity() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.setDefaultMassFracs"]], "setnewmassfracsfrommassenrich() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.setNewMassFracsFromMassEnrich"]], "updatetd() (armi.materials.b4c.b4c method)": [[83, "armi.materials.b4c.B4C.updateTD"]], "be9 (class in armi.materials.be9)": [[84, "armi.materials.be9.Be9"]], "armi.materials.be9": [[84, "module-armi.materials.be9"]], "density() (armi.materials.be9.be9 method)": [[84, "armi.materials.be9.Be9.density"]], "linearexpansionpercent() (armi.materials.be9.be9 method)": [[84, "armi.materials.be9.Be9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.be9.be9 attribute)": [[84, "armi.materials.be9.Be9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.be9.be9 method)": [[84, "armi.materials.be9.Be9.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.be9.be9 attribute)": [[84, "armi.materials.be9.Be9.thermalScatteringLaws"]], "cah2 (class in armi.materials.cah2)": [[85, "armi.materials.caH2.CaH2"]], "armi.materials.cah2": [[85, "module-armi.materials.caH2"]], "density() (armi.materials.cah2.cah2 method)": [[85, "armi.materials.caH2.CaH2.density"]], "setdefaultmassfracs() (armi.materials.cah2.cah2 method)": [[85, "armi.materials.caH2.CaH2.setDefaultMassFracs"]], "californium (class in armi.materials.californium)": [[86, "armi.materials.californium.Californium"]], "armi.materials.californium": [[86, "module-armi.materials.californium"]], "density() (armi.materials.californium.californium method)": [[86, "armi.materials.californium.Californium.density"]], "setdefaultmassfracs() (armi.materials.californium.californium method)": [[86, "armi.materials.californium.Californium.setDefaultMassFracs"]], "concrete (class in armi.materials.concrete)": [[87, "armi.materials.concrete.Concrete"]], "armi.materials.concrete": [[87, "module-armi.materials.concrete"]], "density() (armi.materials.concrete.concrete method)": [[87, "armi.materials.concrete.Concrete.density"]], "setdefaultmassfracs() (armi.materials.concrete.concrete method)": [[87, "armi.materials.concrete.Concrete.setDefaultMassFracs"]], "cu (class in armi.materials.copper)": [[88, "armi.materials.copper.Cu"]], "armi.materials.copper": [[88, "module-armi.materials.copper"]], "density() (armi.materials.copper.cu method)": [[88, "armi.materials.copper.Cu.density"]], "linearexpansionpercent() (armi.materials.copper.cu method)": [[88, "armi.materials.copper.Cu.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.copper.cu attribute)": [[88, "armi.materials.copper.Cu.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.copper.cu method)": [[88, "armi.materials.copper.Cu.setDefaultMassFracs"]], "cs (class in armi.materials.cs)": [[89, "armi.materials.cs.Cs"]], "armi.materials.cs": [[89, "module-armi.materials.cs"]], "meltingpoint() (armi.materials.cs.cs method)": [[89, "armi.materials.cs.Cs.meltingPoint"]], "pseudodensity() (armi.materials.cs.cs method)": [[89, "armi.materials.cs.Cs.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.cs.cs method)": [[89, "armi.materials.cs.Cs.setDefaultMassFracs"]], "custom (class in armi.materials.custom)": [[90, "armi.materials.custom.Custom"]], "armi.materials.custom": [[90, "module-armi.materials.custom"]], "density() (armi.materials.custom.custom method)": [[90, "armi.materials.custom.Custom.density"]], "enrichednuclide (armi.materials.custom.custom attribute)": [[90, "armi.materials.custom.Custom.enrichedNuclide"]], "pseudodensity() (armi.materials.custom.custom method)": [[90, "armi.materials.custom.Custom.pseudoDensity"]], "setmassfrac() (armi.materials.custom.custom method)": [[90, "armi.materials.custom.Custom.setMassFrac"]], "graphite (class in armi.materials.graphite)": [[91, "armi.materials.graphite.Graphite"]], "armi.materials.graphite": [[91, "module-armi.materials.graphite"]], "density() (armi.materials.graphite.graphite method)": [[91, "armi.materials.graphite.Graphite.density"]], "linearexpansionpercent() (armi.materials.graphite.graphite method)": [[91, "armi.materials.graphite.Graphite.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.graphite.graphite method)": [[91, "armi.materials.graphite.Graphite.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.graphite.graphite attribute)": [[91, "armi.materials.graphite.Graphite.thermalScatteringLaws"]], "hafnium (class in armi.materials.hafnium)": [[92, "armi.materials.hafnium.Hafnium"]], "armi.materials.hafnium": [[92, "module-armi.materials.hafnium"]], "density() (armi.materials.hafnium.hafnium method)": [[92, "armi.materials.hafnium.Hafnium.density"]], "setdefaultmassfracs() (armi.materials.hafnium.hafnium method)": [[92, "armi.materials.hafnium.Hafnium.setDefaultMassFracs"]], "hastelloyn (class in armi.materials.hastelloyn)": [[93, "armi.materials.hastelloyN.HastelloyN"]], "armi.materials.hastelloyn": [[93, "module-armi.materials.hastelloyN"]], "density() (armi.materials.hastelloyn.hastelloyn method)": [[93, "armi.materials.hastelloyN.HastelloyN.density"]], "heatcapacity() (armi.materials.hastelloyn.hastelloyn method)": [[93, "armi.materials.hastelloyN.HastelloyN.heatCapacity"]], "linearexpansionpercent() (armi.materials.hastelloyn.hastelloyn method)": [[93, "armi.materials.hastelloyN.HastelloyN.linearExpansionPercent"]], "materialintro (armi.materials.hastelloyn.hastelloyn attribute)": [[93, "armi.materials.hastelloyN.HastelloyN.materialIntro"]], "meancoefficientthermalexpansion() (armi.materials.hastelloyn.hastelloyn method)": [[93, "armi.materials.hastelloyN.HastelloyN.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.hastelloyn.hastelloyn attribute)": [[93, "armi.materials.hastelloyN.HastelloyN.propertyValidTemperature"]], "reftempk (armi.materials.hastelloyn.hastelloyn attribute)": [[93, "armi.materials.hastelloyN.HastelloyN.refTempK"]], "setdefaultmassfracs() (armi.materials.hastelloyn.hastelloyn method)": [[93, "armi.materials.hastelloyN.HastelloyN.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.hastelloyn.hastelloyn method)": [[93, "armi.materials.hastelloyN.HastelloyN.thermalConductivity"]], "ht9 (class in armi.materials.ht9)": [[94, "armi.materials.ht9.HT9"]], "armi.materials.ht9": [[94, "module-armi.materials.ht9"]], "density() (armi.materials.ht9.ht9 method)": [[94, "armi.materials.ht9.HT9.density"]], "linearexpansionpercent() (armi.materials.ht9.ht9 method)": [[94, "armi.materials.ht9.HT9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.ht9.ht9 attribute)": [[94, "armi.materials.ht9.HT9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.ht9.ht9 method)": [[94, "armi.materials.ht9.HT9.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.ht9.ht9 method)": [[94, "armi.materials.ht9.HT9.thermalConductivity"]], "inconel (class in armi.materials.inconel)": [[95, "armi.materials.inconel.Inconel"]], "inconel617 (class in armi.materials.inconel)": [[95, "armi.materials.inconel.Inconel617"]], "armi.materials.inconel": [[95, "module-armi.materials.inconel"]], "density() (armi.materials.inconel.inconel method)": [[95, "armi.materials.inconel.Inconel.density"]], "references (armi.materials.inconel.inconel attribute)": [[95, "armi.materials.inconel.Inconel.references"]], "setdefaultmassfracs() (armi.materials.inconel.inconel method)": [[95, "armi.materials.inconel.Inconel.setDefaultMassFracs"]], "inconel600 (class in armi.materials.inconel600)": [[96, "armi.materials.inconel600.Inconel600"]], "armi.materials.inconel600": [[96, "module-armi.materials.inconel600"]], "density() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.density"]], "heatcapacity() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.heatCapacity"]], "linearexpansion() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel600.inconel600 attribute)": [[96, "armi.materials.inconel600.Inconel600.propertyValidTemperature"]], "reftempk (armi.materials.inconel600.inconel600 attribute)": [[96, "armi.materials.inconel600.Inconel600.refTempK"]], "references (armi.materials.inconel600.inconel600 attribute)": [[96, "armi.materials.inconel600.Inconel600.references"]], "setdefaultmassfracs() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel600.inconel600 method)": [[96, "armi.materials.inconel600.Inconel600.thermalConductivity"]], "inconel625 (class in armi.materials.inconel625)": [[97, "armi.materials.inconel625.Inconel625"]], "armi.materials.inconel625": [[97, "module-armi.materials.inconel625"]], "density() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.density"]], "heatcapacity() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.heatCapacity"]], "linearexpansion() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel625.inconel625 attribute)": [[97, "armi.materials.inconel625.Inconel625.propertyValidTemperature"]], "reftempk (armi.materials.inconel625.inconel625 attribute)": [[97, "armi.materials.inconel625.Inconel625.refTempK"]], "references (armi.materials.inconel625.inconel625 attribute)": [[97, "armi.materials.inconel625.Inconel625.references"]], "setdefaultmassfracs() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel625.inconel625 method)": [[97, "armi.materials.inconel625.Inconel625.thermalConductivity"]], "inconel800 (class in armi.materials.inconel800)": [[98, "armi.materials.inconel800.Inconel800"]], "armi.materials.inconel800": [[98, "module-armi.materials.inconel800"]], "density() (armi.materials.inconel800.inconel800 method)": [[98, "armi.materials.inconel800.Inconel800.density"]], "linearexpansionpercent() (armi.materials.inconel800.inconel800 method)": [[98, "armi.materials.inconel800.Inconel800.linearExpansionPercent"]], "meancoefficientthermalexpansion() (armi.materials.inconel800.inconel800 method)": [[98, "armi.materials.inconel800.Inconel800.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.inconel800.inconel800 attribute)": [[98, "armi.materials.inconel800.Inconel800.propertyValidTemperature"]], "reftempk (armi.materials.inconel800.inconel800 attribute)": [[98, "armi.materials.inconel800.Inconel800.refTempK"]], "setdefaultmassfracs() (armi.materials.inconel800.inconel800 method)": [[98, "armi.materials.inconel800.Inconel800.setDefaultMassFracs"]], "inconelpe16 (class in armi.materials.inconelpe16)": [[99, "armi.materials.inconelPE16.InconelPE16"]], "armi.materials.inconelpe16": [[99, "module-armi.materials.inconelPE16"]], "density() (armi.materials.inconelpe16.inconelpe16 method)": [[99, "armi.materials.inconelPE16.InconelPE16.density"]], "references (armi.materials.inconelpe16.inconelpe16 attribute)": [[99, "armi.materials.inconelPE16.InconelPE16.references"]], "setdefaultmassfracs() (armi.materials.inconelpe16.inconelpe16 method)": [[99, "armi.materials.inconelPE16.InconelPE16.setDefaultMassFracs"]], "inconelx750 (class in armi.materials.inconelx750)": [[100, "armi.materials.inconelX750.InconelX750"]], "armi.materials.inconelx750": [[100, "module-armi.materials.inconelX750"]], "density() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.density"]], "heatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.heatCapacity"]], "linearexpansion() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconelx750.inconelx750 attribute)": [[100, "armi.materials.inconelX750.InconelX750.propertyValidTemperature"]], "reftempk (armi.materials.inconelx750.inconelx750 attribute)": [[100, "armi.materials.inconelX750.InconelX750.refTempK"]], "references (armi.materials.inconelx750.inconelx750 attribute)": [[100, "armi.materials.inconelX750.InconelX750.references"]], "setdefaultmassfracs() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[100, "armi.materials.inconelX750.InconelX750.thermalConductivity"]], "lead (class in armi.materials.lead)": [[101, "armi.materials.lead.Lead"]], "armi.materials.lead": [[101, "module-armi.materials.lead"]], "heatcapacity() (armi.materials.lead.lead method)": [[101, "armi.materials.lead.Lead.heatCapacity"]], "propertyvalidtemperature (armi.materials.lead.lead attribute)": [[101, "armi.materials.lead.Lead.propertyValidTemperature"]], "pseudodensity() (armi.materials.lead.lead method)": [[101, "armi.materials.lead.Lead.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.lead.lead method)": [[101, "armi.materials.lead.Lead.setDefaultMassFracs"]], "volumetricexpansion() (armi.materials.lead.lead method)": [[101, "armi.materials.lead.Lead.volumetricExpansion"]], "leadbismuth (class in armi.materials.leadbismuth)": [[102, "armi.materials.leadBismuth.LeadBismuth"]], "armi.materials.leadbismuth": [[102, "module-armi.materials.leadBismuth"]], "dynamicvisc() (armi.materials.leadbismuth.leadbismuth method)": [[102, "armi.materials.leadBismuth.LeadBismuth.dynamicVisc"]], "heatcapacity() (armi.materials.leadbismuth.leadbismuth method)": [[102, "armi.materials.leadBismuth.LeadBismuth.heatCapacity"]], "propertyvalidtemperature (armi.materials.leadbismuth.leadbismuth attribute)": [[102, "armi.materials.leadBismuth.LeadBismuth.propertyValidTemperature"]], "pseudodensity() (armi.materials.leadbismuth.leadbismuth method)": [[102, "armi.materials.leadBismuth.LeadBismuth.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.leadbismuth.leadbismuth method)": [[102, "armi.materials.leadBismuth.LeadBismuth.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.leadbismuth.leadbismuth method)": [[102, "armi.materials.leadBismuth.LeadBismuth.thermalConductivity"]], "volumetricexpansion() (armi.materials.leadbismuth.leadbismuth method)": [[102, "armi.materials.leadBismuth.LeadBismuth.volumetricExpansion"]], "lithium (class in armi.materials.lithium)": [[103, "armi.materials.lithium.Lithium"]], "applyinputparams() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.applyInputParams"]], "armi.materials.lithium": [[103, "module-armi.materials.lithium"]], "boilingpoint() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.boilingPoint"]], "enrichednuclide (armi.materials.lithium.lithium attribute)": [[103, "armi.materials.lithium.Lithium.enrichedNuclide"]], "heatcapacity() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.heatCapacity"]], "meltingpoint() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.meltingPoint"]], "pseudodensity() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.pseudoDensity"]], "references (armi.materials.lithium.lithium attribute)": [[103, "armi.materials.lithium.Lithium.references"]], "setdefaultmassfracs() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.lithium.lithium method)": [[103, "armi.materials.lithium.Lithium.thermalConductivity"]], "magnesium (class in armi.materials.magnesium)": [[104, "armi.materials.magnesium.Magnesium"]], "armi.materials.magnesium": [[104, "module-armi.materials.magnesium"]], "propertyvalidtemperature (armi.materials.magnesium.magnesium attribute)": [[104, "armi.materials.magnesium.Magnesium.propertyValidTemperature"]], "pseudodensity() (armi.materials.magnesium.magnesium method)": [[104, "armi.materials.magnesium.Magnesium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.magnesium.magnesium method)": [[104, "armi.materials.magnesium.Magnesium.setDefaultMassFracs"]], "data_source (armi.materials.material.material attribute)": [[105, "armi.materials.material.Material.DATA_SOURCE"]], "fluid (class in armi.materials.material)": [[105, "armi.materials.material.Fluid"]], "fuelmaterial (class in armi.materials.material)": [[105, "armi.materials.material.FuelMaterial"]], "material (class in armi.materials.material)": [[105, "armi.materials.material.Material"]], "simplesolid (class in armi.materials.material)": [[105, "armi.materials.material.SimpleSolid"]], "adjustmassenrichment() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.adjustMassEnrichment"]], "adjustmassfrac() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.adjustMassFrac"]], "adjusttd() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.adjustTD"]], "applyinputparams() (armi.materials.material.fuelmaterial method)": [[105, "armi.materials.material.FuelMaterial.applyInputParams"]], "applyinputparams() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.applyInputParams"]], "armi.materials.material": [[105, "module-armi.materials.material"]], "backup() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.backUp"]], "checkpropertytemprange() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.checkPropertyTempRange"]], "checktemprange() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.checkTempRange"]], "class1_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[105, "armi.materials.material.FuelMaterial.class1_custom_isotopics"]], "class1_wt_frac (armi.materials.material.fuelmaterial attribute)": [[105, "armi.materials.material.FuelMaterial.class1_wt_frac"]], "class2_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[105, "armi.materials.material.FuelMaterial.class2_custom_isotopics"]], "clearcache() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.clearCache"]], "clearmassfrac() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.clearMassFrac"]], "density() (armi.materials.material.fluid method)": [[105, "armi.materials.material.Fluid.density"]], "density() (armi.materials.material.fuelmaterial method)": [[105, "armi.materials.material.FuelMaterial.density"]], "density() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.density"]], "density() (armi.materials.material.simplesolid method)": [[105, "armi.materials.material.SimpleSolid.density"]], "densitykgm3() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.densityKgM3"]], "densitytimesheatcapacity() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.densityTimesHeatCapacity"]], "duplicate() (armi.materials.material.fuelmaterial method)": [[105, "armi.materials.material.FuelMaterial.duplicate"]], "duplicate() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.duplicate"]], "enrichednuclide (armi.materials.material.material attribute)": [[105, "armi.materials.material.Material.enrichedNuclide"]], "gasporosity (armi.materials.material.material property)": [[105, "armi.materials.material.Material.gasPorosity"]], "getchildren() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getChildren"]], "getchildrenwithflags() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getChildrenWithFlags"]], "getcorrosionrate() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getCorrosionRate"]], "getmassfrac() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getMassFrac"]], "getname() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getName"]], "getnuclides() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getNuclides"]], "getproperty() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getProperty"]], "gettd() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getTD"]], "gettempchangefordensitychange() (armi.materials.material.fluid method)": [[105, "armi.materials.material.Fluid.getTempChangeForDensityChange"]], "gettempchangefordensitychange() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getTempChangeForDensityChange"]], "gettemperatureatdensity() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getTemperatureAtDensity"]], "getthermalexpansiondensityreduction() (armi.materials.material.fluid method)": [[105, "armi.materials.material.Fluid.getThermalExpansionDensityReduction"]], "getthermalexpansiondensityreduction() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.getThermalExpansionDensityReduction"]], "heatcapacity() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.heatCapacity"]], "linearexpansion() (armi.materials.material.fluid method)": [[105, "armi.materials.material.Fluid.linearExpansion"]], "linearexpansion() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.linearExpansion"]], "linearexpansionfactor() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.linearExpansionFactor"]], "linearexpansionpercent() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.linearExpansionPercent"]], "linearexpansionpercent() (armi.materials.material.simplesolid method)": [[105, "armi.materials.material.SimpleSolid.linearExpansionPercent"]], "liquidporosity (armi.materials.material.material property)": [[105, "armi.materials.material.Material.liquidPorosity"]], "modelconst (armi.materials.material.material attribute)": [[105, "armi.materials.material.Material.modelConst"]], "name (armi.materials.material.material property)": [[105, "armi.materials.material.Material.name"]], "parentawaredensityredirect() (in module armi.materials.material)": [[105, "armi.materials.material.parentAwareDensityRedirect"]], "propertyvalidtemperature (armi.materials.material.material attribute)": [[105, "armi.materials.material.Material.propertyValidTemperature"]], "pseudodensity() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.pseudoDensity"]], "pseudodensity() (armi.materials.material.simplesolid method)": [[105, "armi.materials.material.SimpleSolid.pseudoDensity"]], "pseudodensitykgm3() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.pseudoDensityKgM3"]], "pufrac (armi.materials.material.fuelmaterial attribute)": [[105, "armi.materials.material.FuelMaterial.puFrac"]], "reftempk (armi.materials.material.simplesolid attribute)": [[105, "armi.materials.material.SimpleSolid.refTempK"]], "references (armi.materials.material.material attribute)": [[105, "armi.materials.material.Material.references"]], "removenucmassfrac() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.removeNucMassFrac"]], "restorebackup() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.restoreBackup"]], "setdefaultmassfracs() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.setDefaultMassFracs"]], "setmassfrac() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.setMassFrac"]], "thermalconductivity() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.thermalConductivity"]], "thermalscatteringlaws (armi.materials.material.material attribute)": [[105, "armi.materials.material.Material.thermalScatteringLaws"]], "ufrac (armi.materials.material.fuelmaterial attribute)": [[105, "armi.materials.material.FuelMaterial.uFrac"]], "volumetricexpansion() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.volumetricExpansion"]], "yieldstrength() (armi.materials.material.material method)": [[105, "armi.materials.material.Material.yieldStrength"]], "zrfrac (armi.materials.material.fuelmaterial attribute)": [[105, "armi.materials.material.FuelMaterial.zrFrac"]], "mgo (class in armi.materials.mgo)": [[106, "armi.materials.mgO.MgO"]], "armi.materials.mgo": [[106, "module-armi.materials.mgO"]], "density() (armi.materials.mgo.mgo method)": [[106, "armi.materials.mgO.MgO.density"]], "linearexpansionpercent() (armi.materials.mgo.mgo method)": [[106, "armi.materials.mgO.MgO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.mgo.mgo attribute)": [[106, "armi.materials.mgO.MgO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.mgo.mgo method)": [[106, "armi.materials.mgO.MgO.setDefaultMassFracs"]], "armi.materials.mixture": [[107, "module-armi.materials.mixture"]], "molybdenum (class in armi.materials.molybdenum)": [[108, "armi.materials.molybdenum.Molybdenum"]], "armi.materials.molybdenum": [[108, "module-armi.materials.molybdenum"]], "density() (armi.materials.molybdenum.molybdenum method)": [[108, "armi.materials.molybdenum.Molybdenum.density"]], "setdefaultmassfracs() (armi.materials.molybdenum.molybdenum method)": [[108, "armi.materials.molybdenum.Molybdenum.setDefaultMassFracs"]], "mox (class in armi.materials.mox)": [[109, "armi.materials.mox.MOX"]], "applyinputparams() (armi.materials.mox.mox method)": [[109, "armi.materials.mox.MOX.applyInputParams"]], "armi.materials.mox": [[109, "module-armi.materials.mox"]], "enrichednuclide (armi.materials.mox.mox attribute)": [[109, "armi.materials.mox.MOX.enrichedNuclide"]], "getmassfracpuo2() (armi.materials.mox.mox method)": [[109, "armi.materials.mox.MOX.getMassFracPuO2"]], "getmolfracpuo2() (armi.materials.mox.mox method)": [[109, "armi.materials.mox.MOX.getMolFracPuO2"]], "meltingpoint() (armi.materials.mox.mox method)": [[109, "armi.materials.mox.MOX.meltingPoint"]], "setdefaultmassfracs() (armi.materials.mox.mox method)": [[109, "armi.materials.mox.MOX.setDefaultMassFracs"]], "setmassfracpuo2() (armi.materials.mox.mox method)": [[109, "armi.materials.mox.MOX.setMassFracPuO2"]], "nz (class in armi.materials.nz)": [[110, "armi.materials.nZ.NZ"]], "armi.materials.nz": [[110, "module-armi.materials.nZ"]], "density() (armi.materials.nz.nz method)": [[110, "armi.materials.nZ.NZ.density"]], "setdefaultmassfracs() (armi.materials.nz.nz method)": [[110, "armi.materials.nZ.NZ.setDefaultMassFracs"]], "potassium (class in armi.materials.potassium)": [[111, "armi.materials.potassium.Potassium"]], "armi.materials.potassium": [[111, "module-armi.materials.potassium"]], "propertyvalidtemperature (armi.materials.potassium.potassium attribute)": [[111, "armi.materials.potassium.Potassium.propertyValidTemperature"]], "pseudodensity() (armi.materials.potassium.potassium method)": [[111, "armi.materials.potassium.Potassium.pseudoDensity"]], "sc2o3 (class in armi.materials.scandiumoxide)": [[112, "armi.materials.scandiumOxide.Sc2O3"]], "armi.materials.scandiumoxide": [[112, "module-armi.materials.scandiumOxide"]], "density() (armi.materials.scandiumoxide.sc2o3 method)": [[112, "armi.materials.scandiumOxide.Sc2O3.density"]], "linearexpansionpercent() (armi.materials.scandiumoxide.sc2o3 method)": [[112, "armi.materials.scandiumOxide.Sc2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.scandiumoxide.sc2o3 attribute)": [[112, "armi.materials.scandiumOxide.Sc2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.scandiumoxide.sc2o3 method)": [[112, "armi.materials.scandiumOxide.Sc2O3.setDefaultMassFracs"]], "sic (class in armi.materials.sic)": [[113, "armi.materials.siC.SiC"]], "armi.materials.sic": [[113, "module-armi.materials.siC"]], "cumulativelinearexpansion() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.cumulativeLinearExpansion"]], "density() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.density"]], "heatcapacity() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.heatCapacity"]], "meltingpoint() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.meltingPoint"]], "propertyequation (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.propertyEquation"]], "propertynotes (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.propertyNotes"]], "propertyunits (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.propertyUnits"]], "propertyvalidtemperature (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.propertyValidTemperature"]], "pseudodensity() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.pseudoDensity"]], "reftempk (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.refTempK"]], "references (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.references"]], "setdefaultmassfracs() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.sic.sic method)": [[113, "armi.materials.siC.SiC.thermalConductivity"]], "thermalscatteringlaws (armi.materials.sic.sic attribute)": [[113, "armi.materials.siC.SiC.thermalScatteringLaws"]], "sodium (class in armi.materials.sodium)": [[114, "armi.materials.sodium.Sodium"]], "armi.materials.sodium": [[114, "module-armi.materials.sodium"]], "enthalpy() (armi.materials.sodium.sodium method)": [[114, "armi.materials.sodium.Sodium.enthalpy"]], "propertyvalidtemperature (armi.materials.sodium.sodium attribute)": [[114, "armi.materials.sodium.Sodium.propertyValidTemperature"]], "pseudodensity() (armi.materials.sodium.sodium method)": [[114, "armi.materials.sodium.Sodium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sodium.sodium method)": [[114, "armi.materials.sodium.Sodium.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.sodium.sodium method)": [[114, "armi.materials.sodium.Sodium.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.sodium.sodium method)": [[114, "armi.materials.sodium.Sodium.thermalConductivity"]], "nacl (class in armi.materials.sodiumchloride)": [[115, "armi.materials.sodiumChloride.NaCl"]], "armi.materials.sodiumchloride": [[115, "module-armi.materials.sodiumChloride"]], "density() (armi.materials.sodiumchloride.nacl method)": [[115, "armi.materials.sodiumChloride.NaCl.density"]], "setdefaultmassfracs() (armi.materials.sodiumchloride.nacl method)": [[115, "armi.materials.sodiumChloride.NaCl.setDefaultMassFracs"]], "sulfur (class in armi.materials.sulfur)": [[116, "armi.materials.sulfur.Sulfur"]], "applyinputparams() (armi.materials.sulfur.sulfur method)": [[116, "armi.materials.sulfur.Sulfur.applyInputParams"]], "armi.materials.sulfur": [[116, "module-armi.materials.sulfur"]], "propertyvalidtemperature (armi.materials.sulfur.sulfur attribute)": [[116, "armi.materials.sulfur.Sulfur.propertyValidTemperature"]], "pseudodensity() (armi.materials.sulfur.sulfur method)": [[116, "armi.materials.sulfur.Sulfur.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sulfur.sulfur method)": [[116, "armi.materials.sulfur.Sulfur.setDefaultMassFracs"]], "updatetd() (armi.materials.sulfur.sulfur method)": [[116, "armi.materials.sulfur.Sulfur.updateTD"]], "volumetricexpansion() (armi.materials.sulfur.sulfur method)": [[116, "armi.materials.sulfur.Sulfur.volumetricExpansion"]], "tzm (class in armi.materials.tzm)": [[117, "armi.materials.tZM.TZM"]], "armi.materials.tzm": [[117, "module-armi.materials.tZM"]], "density() (armi.materials.tzm.tzm method)": [[117, "armi.materials.tZM.TZM.density"]], "linearexpansionpercent() (armi.materials.tzm.tzm method)": [[117, "armi.materials.tZM.TZM.linearExpansionPercent"]], "percentthermalexpansion (armi.materials.tzm.tzm attribute)": [[117, "armi.materials.tZM.TZM.percentThermalExpansion"]], "propertyvalidtemperature (armi.materials.tzm.tzm attribute)": [[117, "armi.materials.tZM.TZM.propertyValidTemperature"]], "references (armi.materials.tzm.tzm attribute)": [[117, "armi.materials.tZM.TZM.references"]], "setdefaultmassfracs() (armi.materials.tzm.tzm method)": [[117, "armi.materials.tZM.TZM.setDefaultMassFracs"]], "temperaturec (armi.materials.tzm.tzm attribute)": [[117, "armi.materials.tZM.TZM.temperatureC"]], "tantalum (class in armi.materials.tantalum)": [[118, "armi.materials.tantalum.Tantalum"]], "armi.materials.tantalum": [[118, "module-armi.materials.tantalum"]], "density() (armi.materials.tantalum.tantalum method)": [[118, "armi.materials.tantalum.Tantalum.density"]], "setdefaultmassfracs() (armi.materials.tantalum.tantalum method)": [[118, "armi.materials.tantalum.Tantalum.setDefaultMassFracs"]], "armi.materials.tests": [[119, "module-armi.materials.tests"]], "materials__init__tests (class in armi.materials.tests.test__init__)": [[120, "armi.materials.tests.test__init__.Materials__init__Tests"]], "armi.materials.tests.test__init__": [[120, "module-armi.materials.tests.test__init__"]], "bettersubclasscheck() (in module armi.materials.tests.test__init__)": [[120, "armi.materials.tests.test__init__.betterSubClassCheck"]], "test_canaccessclassesfrompackage() (armi.materials.tests.test__init__.materials__init__tests method)": [[120, "armi.materials.tests.test__init__.Materials__init__Tests.test_canAccessClassesFromPackage"]], "test_packageclassesequalmoduleclasses() (armi.materials.tests.test__init__.materials__init__tests method)": [[120, "armi.materials.tests.test__init__.Materials__init__Tests.test_packageClassesEqualModuleClasses"]], "test_air (class in armi.materials.tests.test_air)": [[121, "armi.materials.tests.test_air.Test_Air"]], "armi.materials.tests.test_air": [[121, "module-armi.materials.tests.test_air"]], "test_heatcapacity() (armi.materials.tests.test_air.test_air method)": [[121, "armi.materials.tests.test_air.Test_Air.test_heatCapacity"]], "test_massfrac() (armi.materials.tests.test_air.test_air method)": [[121, "armi.materials.tests.test_air.Test_Air.test_massFrac"]], "test_pseudodensity() (armi.materials.tests.test_air.test_air method)": [[121, "armi.materials.tests.test_air.Test_Air.test_pseudoDensity"]], "test_thermalconductivity() (armi.materials.tests.test_air.test_air method)": [[121, "armi.materials.tests.test_air.Test_Air.test_thermalConductivity"]], "test_validranges() (armi.materials.tests.test_air.test_air method)": [[121, "armi.materials.tests.test_air.Test_Air.test_validRanges"]], "b4c_testcase (class in armi.materials.tests.test_b4c)": [[122, "armi.materials.tests.test_b4c.B4C_TestCase"]], "mat_class (armi.materials.tests.test_b4c.b4c_testcase attribute)": [[122, "armi.materials.tests.test_b4c.B4C_TestCase.MAT_CLASS"]], "armi.materials.tests.test_b4c": [[122, "module-armi.materials.tests.test_b4c"]], "test_propertyvalidtemperature() (armi.materials.tests.test_b4c.b4c_testcase method)": [[122, "armi.materials.tests.test_b4c.B4C_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_b4c.b4c_testcase method)": [[122, "armi.materials.tests.test_b4c.B4C_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_be9.test_be9 attribute)": [[123, "armi.materials.tests.test_be9.Test_Be9.MAT_CLASS"]], "test_be9 (class in armi.materials.tests.test_be9)": [[123, "armi.materials.tests.test_be9.Test_Be9"]], "armi.materials.tests.test_be9": [[123, "module-armi.materials.tests.test_be9"]], "test_propertyvalidtemperature() (armi.materials.tests.test_be9.test_be9 method)": [[123, "armi.materials.tests.test_be9.Test_Be9.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_be9.test_be9 method)": [[123, "armi.materials.tests.test_be9.Test_Be9.test_pseudoDensity"]], "graphite_testcase (class in armi.materials.tests.test_graphite)": [[124, "armi.materials.tests.test_graphite.Graphite_TestCase"]], "mat_class (armi.materials.tests.test_graphite.graphite_testcase attribute)": [[124, "armi.materials.tests.test_graphite.Graphite_TestCase.MAT_CLASS"]], "armi.materials.tests.test_graphite": [[124, "module-armi.materials.tests.test_graphite"]], "test_density() (armi.materials.tests.test_graphite.graphite_testcase method)": [[124, "armi.materials.tests.test_graphite.Graphite_TestCase.test_density"]], "test_linearexpansionpercent() (armi.materials.tests.test_graphite.graphite_testcase method)": [[124, "armi.materials.tests.test_graphite.Graphite_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_graphite.graphite_testcase method)": [[124, "armi.materials.tests.test_graphite.Graphite_TestCase.test_propertyValidTemperature"]], "lithium_testcase (class in armi.materials.tests.test_lithium)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase"]], "mat_class (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.MAT_CLASS"]], "armi.materials.tests.test_lithium": [[125, "module-armi.materials.tests.test_lithium"]], "defaultmassfrac (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.defaultMassFrac"]], "test_lithium_material_modifications() (armi.materials.tests.test_lithium.lithium_testcase method)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.test_Lithium_material_modifications"]], "test_boilingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.test_boilingPoint"]], "test_heatcapacity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_lithium.lithium_testcase method)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[125, "armi.materials.tests.test_lithium.Lithium_TestCase.test_pseudoDensity"]], "alloy200_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Alloy200_TestCase"]], "cah2_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.CaH2_TestCase"]], "californium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Californium_TestCase"]], "cesium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Cesium_TestCase"]], "copper_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Copper_TestCase"]], "fuelmaterial_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.FuelMaterial_TestCase"]], "hafnium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Hafnium_TestCase"]], "hastelloyn_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase"]], "inconel600_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase"]], "inconel625_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase"]], "inconelx750_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase"]], "inconel_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Inconel_TestCase"]], "leadbismuth_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase"]], "lead_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Lead_TestCase"]], "mat_class (armi.materials.tests.test_materials.alloy200_testcase attribute)": [[126, "armi.materials.tests.test_materials.Alloy200_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cah2_testcase attribute)": [[126, "armi.materials.tests.test_materials.CaH2_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.californium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Californium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cesium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Cesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.copper_testcase attribute)": [[126, "armi.materials.tests.test_materials.Copper_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hafnium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Hafnium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hastelloyn_testcase attribute)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel600_testcase attribute)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel625_testcase attribute)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconelx750_testcase attribute)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.leadbismuth_testcase attribute)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.lead_testcase attribute)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mox_testcase attribute)": [[126, "armi.materials.tests.test_materials.MOX_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesiumoxide_testcase attribute)": [[126, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Magnesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mixture_testcase attribute)": [[126, "armi.materials.tests.test_materials.Mixture_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.molybdenum_testcase attribute)": [[126, "armi.materials.tests.test_materials.Molybdenum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.nacl_testcase attribute)": [[126, "armi.materials.tests.test_materials.NaCl_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.niobiumzirconium_testcase attribute)": [[126, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.potassium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Potassium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.scandiumoxide_testcase attribute)": [[126, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sodium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sulfur_testcase attribute)": [[126, "armi.materials.tests.test_materials.Sulfur_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tzm_testcase attribute)": [[126, "armi.materials.tests.test_materials.TZM_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tantalum_testcase attribute)": [[126, "armi.materials.tests.test_materials.Tantalum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumoxide_testcase attribute)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumuraniummetal_testcase attribute)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thorium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uraniumoxide_testcase attribute)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uranium_testcase attribute)": [[126, "armi.materials.tests.test_materials.Uranium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.void_testcase attribute)": [[126, "armi.materials.tests.test_materials.Void_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.yttriumoxide_testcase attribute)": [[126, "armi.materials.tests.test_materials.YttriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zincoxide_testcase attribute)": [[126, "armi.materials.tests.test_materials.ZincOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zr_testcase attribute)": [[126, "armi.materials.tests.test_materials.Zr_TestCase.MAT_CLASS"]], "mox_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.MOX_TestCase"]], "magnesiumoxide_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase"]], "magnesium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Magnesium_TestCase"]], "materialconstructiontests (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.MaterialConstructionTests"]], "materialfindingtests (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.MaterialFindingTests"]], "mixture_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Mixture_TestCase"]], "molybdenum_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Molybdenum_TestCase"]], "nacl_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.NaCl_TestCase"]], "niobiumzirconium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase"]], "potassium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Potassium_TestCase"]], "scandiumoxide_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.ScandiumOxide_TestCase"]], "sodium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase"]], "sulfur_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Sulfur_TestCase"]], "tzm_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.TZM_TestCase"]], "tantalum_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Tantalum_TestCase"]], "thoriumoxide_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase"]], "thoriumuraniummetal_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase"]], "thorium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase"]], "uraniumoxide_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase"]], "uranium_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Uranium_TestCase"]], "void_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Void_TestCase"]], "yttriumoxide_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.YttriumOxide_TestCase"]], "zincoxide_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.ZincOxide_TestCase"]], "zr_testcase (class in armi.materials.tests.test_materials)": [[126, "armi.materials.tests.test_materials.Zr_TestCase"]], "armi.materials.tests.test_materials": [[126, "module-armi.materials.tests.test_materials"]], "baseinput (armi.materials.tests.test_materials.fuelmaterial_testcase attribute)": [[126, "armi.materials.tests.test_materials.FuelMaterial_TestCase.baseInput"]], "loadassembly() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[126, "armi.materials.tests.test_materials.FuelMaterial_TestCase.loadAssembly"]], "test_00_applyinputparams() (armi.materials.tests.test_materials.tzm_testcase method)": [[126, "armi.materials.tests.test_materials.TZM_TestCase.test_00_applyInputParams"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_00_setDefaultMassFracs"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_01_linearExpansionPercent"]], "test_01_pseudodensity() (armi.materials.tests.test_materials.tzm_testcase method)": [[126, "armi.materials.tests.test_materials.TZM_TestCase.test_01_pseudoDensity"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_02_linearExpansion"]], "test_02_linearexpansionpercent() (armi.materials.tests.test_materials.tzm_testcase method)": [[126, "armi.materials.tests.test_materials.TZM_TestCase.test_02_linearExpansionPercent"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_03_pseudoDensity"]], "test_iconel800_linearexpansion() (armi.materials.tests.test_materials.inconel_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel_TestCase.test_Iconel800_linearExpansion"]], "test_adjustmassenrichment() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_adjustMassEnrichment"]], "test_applyinputparams() (armi.materials.tests.test_materials.mox_testcase method)": [[126, "armi.materials.tests.test_materials.MOX_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uranium_testcase method)": [[126, "armi.materials.tests.test_materials.Uranium_TestCase.test_applyInputParams"]], "test_class1class2_class1_wt_frac() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[126, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_class1_wt_frac"]], "test_class1class2_classx_custom_isotopics() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[126, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_classX_custom_isotopics"]], "test_density() (armi.materials.tests.test_materials.mox_testcase method)": [[126, "armi.materials.tests.test_materials.MOX_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.mixture_testcase method)": [[126, "armi.materials.tests.test_materials.Mixture_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.nacl_testcase method)": [[126, "armi.materials.tests.test_materials.NaCl_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.void_testcase method)": [[126, "armi.materials.tests.test_materials.Void_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_density"]], "test_densityneverchanges() (armi.materials.tests.test_materials.copper_testcase method)": [[126, "armi.materials.tests.test_materials.Copper_TestCase.test_densityNeverChanges"]], "test_densitytimesheatcapactiy() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_densityTimesHeatCapactiy"]], "test_duplicate() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_duplicate"]], "test_dynamicvisc() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_dynamicVisc"]], "test_enthalpy() (armi.materials.tests.test_materials.sodium_testcase method)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase.test_enthalpy"]], "test_findmaterial() (armi.materials.tests.test_materials.materialfindingtests method)": [[126, "armi.materials.tests.test_materials.MaterialFindingTests.test_findMaterial"]], "test_getchildren() (armi.materials.tests.test_materials.copper_testcase method)": [[126, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildren"]], "test_getchildrenwithflags() (armi.materials.tests.test_materials.copper_testcase method)": [[126, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildrenWithFlags"]], "test_getcorrosionrate() (armi.materials.tests.test_materials.californium_testcase method)": [[126, "armi.materials.tests.test_materials.Californium_TestCase.test_getCorrosionRate"]], "test_getdensityexpansion3d() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getDensityExpansion3D"]], "test_getmassfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[126, "armi.materials.tests.test_materials.MOX_TestCase.test_getMassFracPuO2"]], "test_getmeltingpoint() (armi.materials.tests.test_materials.mox_testcase method)": [[126, "armi.materials.tests.test_materials.MOX_TestCase.test_getMeltingPoint"]], "test_getmolfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[126, "armi.materials.tests.test_materials.MOX_TestCase.test_getMolFracPuO2"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_getTempChangeForDensityChange"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTempChangeForDensityChange"]], "test_gettemperatureatdensity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTemperatureAtDensity"]], "test_heatcapacity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.lead_testcase method)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_heatCapacity"]], "test_linearexpansion() (armi.materials.tests.test_materials.alloy200_testcase method)": [[126, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.mixture_testcase method)": [[126, "armi.materials.tests.test_materials.Mixture_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thorium_testcase method)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.void_testcase method)": [[126, "armi.materials.tests.test_materials.Void_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.zr_testcase method)": [[126, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansion"]], "test_linearexpansionhotter() (armi.materials.tests.test_materials.alloy200_testcase method)": [[126, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansionHotter"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.copper_testcase method)": [[126, "armi.materials.tests.test_materials.Copper_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zr_testcase method)": [[126, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansionPercent"]], "test_material_initialization() (armi.materials.tests.test_materials.materialconstructiontests method)": [[126, "armi.materials.tests.test_materials.MaterialConstructionTests.test_material_initialization"]], "test_meancoefficientthermalexpansion() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_meanCoefficientThermalExpansion"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thorium_testcase method)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_meltingPoint"]], "test_namespacing() (armi.materials.tests.test_materials.materialfindingtests method)": [[126, "armi.materials.tests.test_materials.MaterialFindingTests.test_namespacing"]], "test_nicklecontent() (armi.materials.tests.test_materials.alloy200_testcase method)": [[126, "armi.materials.tests.test_materials.Alloy200_TestCase.test_nickleContent"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitHeatCapacity"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitThermalConductivity"]], "test_porosities() (armi.materials.tests.test_materials.californium_testcase method)": [[126, "armi.materials.tests.test_materials.Californium_TestCase.test_porosities"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.alloy200_testcase method)": [[126, "armi.materials.tests.test_materials.Alloy200_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cah2_testcase method)": [[126, "armi.materials.tests.test_materials.CaH2_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.californium_testcase method)": [[126, "armi.materials.tests.test_materials.Californium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cesium_testcase method)": [[126, "armi.materials.tests.test_materials.Cesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hafnium_testcase method)": [[126, "armi.materials.tests.test_materials.Hafnium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel600_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel600_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel625_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel625_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[126, "armi.materials.tests.test_materials.InconelX750_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.lead_testcase method)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesium_testcase method)": [[126, "armi.materials.tests.test_materials.Magnesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.mixture_testcase method)": [[126, "armi.materials.tests.test_materials.Mixture_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[126, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.nacl_testcase method)": [[126, "armi.materials.tests.test_materials.NaCl_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[126, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.potassium_testcase method)": [[126, "armi.materials.tests.test_materials.Potassium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sodium_testcase method)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sulfur_testcase method)": [[126, "armi.materials.tests.test_materials.Sulfur_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tzm_testcase method)": [[126, "armi.materials.tests.test_materials.TZM_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tantalum_testcase method)": [[126, "armi.materials.tests.test_materials.Tantalum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thorium_testcase method)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uranium_testcase method)": [[126, "armi.materials.tests.test_materials.Uranium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.void_testcase method)": [[126, "armi.materials.tests.test_materials.Void_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zr_testcase method)": [[126, "armi.materials.tests.test_materials.Zr_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_materials.cah2_testcase method)": [[126, "armi.materials.tests.test_materials.CaH2_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.californium_testcase method)": [[126, "armi.materials.tests.test_materials.Californium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.cesium_testcase method)": [[126, "armi.materials.tests.test_materials.Cesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.hafnium_testcase method)": [[126, "armi.materials.tests.test_materials.Hafnium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.inconel_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.lead_testcase method)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesium_testcase method)": [[126, "armi.materials.tests.test_materials.Magnesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[126, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[126, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.potassium_testcase method)": [[126, "armi.materials.tests.test_materials.Potassium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sodium_testcase method)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sulfur_testcase method)": [[126, "armi.materials.tests.test_materials.Sulfur_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.tantalum_testcase method)": [[126, "armi.materials.tests.test_materials.Tantalum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thorium_testcase method)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.void_testcase method)": [[126, "armi.materials.tests.test_materials.Void_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.zr_testcase method)": [[126, "armi.materials.tests.test_materials.Zr_TestCase.test_pseudoDensity"]], "test_removenucmassfrac() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_removeNucMassFrac"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.copper_testcase method)": [[126, "armi.materials.tests.test_materials.Copper_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel_testcase method)": [[126, "armi.materials.tests.test_materials.Inconel_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.lead_testcase method)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.mixture_testcase method)": [[126, "armi.materials.tests.test_materials.Mixture_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.sulfur_testcase method)": [[126, "armi.materials.tests.test_materials.Sulfur_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.thorium_testcase method)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.test_setDefaultMassFracs"]], "test_specificvolumeliquid() (armi.materials.tests.test_materials.sodium_testcase method)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase.test_specificVolumeLiquid"]], "test_thermalconductivity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[126, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.sodium_testcase method)": [[126, "armi.materials.tests.test_materials.Sodium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[126, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thorium_testcase method)": [[126, "armi.materials.tests.test_materials.Thorium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[126, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uranium_testcase method)": [[126, "armi.materials.tests.test_materials.Uranium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.zr_testcase method)": [[126, "armi.materials.tests.test_materials.Zr_TestCase.test_thermalConductivity"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[126, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[126, "armi.materials.tests.test_materials.Lead_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.sulfur_testcase method)": [[126, "armi.materials.tests.test_materials.Sulfur_TestCase.test_volumetricExpansion"]], "mat_class (armi.materials.tests.test_sic.test_sic attribute)": [[127, "armi.materials.tests.test_sic.Test_SiC.MAT_CLASS"]], "test_sic (class in armi.materials.tests.test_sic)": [[127, "armi.materials.tests.test_sic.Test_SiC"]], "armi.materials.tests.test_sic": [[127, "module-armi.materials.tests.test_sic"]], "test_heatcapacity() (armi.materials.tests.test_sic.test_sic method)": [[127, "armi.materials.tests.test_sic.Test_SiC.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_sic.test_sic method)": [[127, "armi.materials.tests.test_sic.Test_SiC.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sic.test_sic method)": [[127, "armi.materials.tests.test_sic.Test_SiC.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_sic.test_sic method)": [[127, "armi.materials.tests.test_sic.Test_SiC.test_pseudoDensity"]], "mat_class (armi.materials.tests.test_sulfur.sulfur_testcase attribute)": [[128, "armi.materials.tests.test_sulfur.Sulfur_TestCase.MAT_CLASS"]], "sulfur_testcase (class in armi.materials.tests.test_sulfur)": [[128, "armi.materials.tests.test_sulfur.Sulfur_TestCase"]], "armi.materials.tests.test_sulfur": [[128, "module-armi.materials.tests.test_sulfur"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[128, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_propertyValidTemperature"]], "test_sulfur_density_frac() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[128, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_sulfur_density_frac"]], "mat_class (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase attribute)": [[129, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.MAT_CLASS"]], "thoriumoxide_testcase (class in armi.materials.tests.test_thoriumoxide)": [[129, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumoxide": [[129, "module-armi.materials.tests.test_thoriumOxide"]], "test_linearexpansionpercent() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[129, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[129, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[129, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_uzr.uzr_testcase attribute)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.MAT_CLASS"]], "uzr_testcase (class in armi.materials.tests.test_uzr)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase"]], "armi.materials.tests.test_uzr": [[130, "module-armi.materials.tests.test_uZr"]], "test_td() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_TD"]], "test_cache() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_cache"]], "test_density() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_density"]], "test_densitykgm3() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_densityKgM3"]], "test_duplicate() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_duplicate"]], "test_ispicklable() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_isPicklable"]], "test_propertyvalidtemperature() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_propertyValidTemperature"]], "test_pseudodensitykgm3() (armi.materials.tests.test_uzr.uzr_testcase method)": [[130, "armi.materials.tests.test_uZr.UZR_TestCase.test_pseudoDensityKgM3"]], "test_water (class in armi.materials.tests.test_water)": [[131, "armi.materials.tests.test_water.Test_Water"]], "armi.materials.tests.test_water": [[131, "module-armi.materials.tests.test_water"]], "test_massfrac() (armi.materials.tests.test_water.test_water method)": [[131, "armi.materials.tests.test_water.Test_Water.test_massFrac"]], "test_propertyvalidtemperature() (armi.materials.tests.test_water.test_water method)": [[131, "armi.materials.tests.test_water.Test_Water.test_propertyValidTemperature"]], "test_validatenames() (armi.materials.tests.test_water.test_water method)": [[131, "armi.materials.tests.test_water.Test_Water.test_validateNames"]], "test_water_at_boiling() (armi.materials.tests.test_water.test_water method)": [[131, "armi.materials.tests.test_water.Test_Water.test_water_at_boiling"]], "test_water_at_critcalpoint() (armi.materials.tests.test_water.test_water method)": [[131, "armi.materials.tests.test_water.Test_Water.test_water_at_critcalPoint"]], "test_water_at_freezing() (armi.materials.tests.test_water.test_water method)": [[131, "armi.materials.tests.test_water.Test_Water.test_water_at_freezing"]], "thu (class in armi.materials.thu)": [[132, "armi.materials.thU.ThU"]], "applyinputparams() (armi.materials.thu.thu method)": [[132, "armi.materials.thU.ThU.applyInputParams"]], "armi.materials.thu": [[132, "module-armi.materials.thU"]], "enrichednuclide (armi.materials.thu.thu attribute)": [[132, "armi.materials.thU.ThU.enrichedNuclide"]], "getenrichment() (armi.materials.thu.thu method)": [[132, "armi.materials.thU.ThU.getEnrichment"]], "linearexpansion() (armi.materials.thu.thu method)": [[132, "armi.materials.thU.ThU.linearExpansion"]], "meltingpoint() (armi.materials.thu.thu method)": [[132, "armi.materials.thU.ThU.meltingPoint"]], "propertyvalidtemperature (armi.materials.thu.thu attribute)": [[132, "armi.materials.thU.ThU.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thu.thu method)": [[132, "armi.materials.thU.ThU.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thu.thu method)": [[132, "armi.materials.thU.ThU.thermalConductivity"]], "thorium (class in armi.materials.thorium)": [[133, "armi.materials.thorium.Thorium"]], "armi.materials.thorium": [[133, "module-armi.materials.thorium"]], "linearexpansion() (armi.materials.thorium.thorium method)": [[133, "armi.materials.thorium.Thorium.linearExpansion"]], "meltingpoint() (armi.materials.thorium.thorium method)": [[133, "armi.materials.thorium.Thorium.meltingPoint"]], "propertyvalidtemperature (armi.materials.thorium.thorium attribute)": [[133, "armi.materials.thorium.Thorium.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thorium.thorium method)": [[133, "armi.materials.thorium.Thorium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thorium.thorium method)": [[133, "armi.materials.thorium.Thorium.thermalConductivity"]], "tho2 (class in armi.materials.thoriumoxide)": [[134, "armi.materials.thoriumOxide.ThO2"]], "thoriumoxide (class in armi.materials.thoriumoxide)": [[134, "armi.materials.thoriumOxide.ThoriumOxide"]], "applyinputparams() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.applyInputParams"]], "armi.materials.thoriumoxide": [[134, "module-armi.materials.thoriumOxide"]], "density() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.density"]], "linearexpansion() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.meltingPoint"]], "propertyvalidtemperature (armi.materials.thoriumoxide.thoriumoxide attribute)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thoriumoxide.thoriumoxide method)": [[134, "armi.materials.thoriumOxide.ThoriumOxide.thermalConductivity"]], "uthzr (class in armi.materials.uthzr)": [[135, "armi.materials.uThZr.UThZr"]], "applyinputparams() (armi.materials.uthzr.uthzr method)": [[135, "armi.materials.uThZr.UThZr.applyInputParams"]], "armi.materials.uthzr": [[135, "module-armi.materials.uThZr"]], "enrichednuclide (armi.materials.uthzr.uthzr attribute)": [[135, "armi.materials.uThZr.UThZr.enrichedNuclide"]], "pseudodensity() (armi.materials.uthzr.uthzr method)": [[135, "armi.materials.uThZr.UThZr.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.uthzr.uthzr method)": [[135, "armi.materials.uThZr.UThZr.setDefaultMassFracs"]], "uzr (class in armi.materials.uzr)": [[136, "armi.materials.uZr.UZr"]], "applyinputparams() (armi.materials.uzr.uzr method)": [[136, "armi.materials.uZr.UZr.applyInputParams"]], "armi.materials.uzr": [[136, "module-armi.materials.uZr"]], "enrichednuclide (armi.materials.uzr.uzr attribute)": [[136, "armi.materials.uZr.UZr.enrichedNuclide"]], "linearexpansionpercent() (armi.materials.uzr.uzr method)": [[136, "armi.materials.uZr.UZr.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.uzr.uzr method)": [[136, "armi.materials.uZr.UZr.setDefaultMassFracs"]], "ufracdefault (armi.materials.uzr.uzr attribute)": [[136, "armi.materials.uZr.UZr.uFracDefault"]], "zrfracdefault (armi.materials.uzr.uzr attribute)": [[136, "armi.materials.uZr.UZr.zrFracDefault"]], "uranium (class in armi.materials.uranium)": [[137, "armi.materials.uranium.Uranium"]], "applyinputparams() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.applyInputParams"]], "armi.materials.uranium": [[137, "module-armi.materials.uranium"]], "density() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.density"]], "enrichednuclide (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.enrichedNuclide"]], "heatcapacity() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.heatCapacity"]], "linearexpansion() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.linearExpansion"]], "linearexpansionpercent() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.linearExpansionPercent"]], "materialintro (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.materialIntro"]], "meltingpoint() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.meltingPoint"]], "propertyequation (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.propertyEquation"]], "propertynotes (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.propertyNotes"]], "propertyrawdata (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.propertyRawData"]], "propertyunits (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.propertyUnits"]], "propertyvalidtemperature (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.propertyValidTemperature"]], "pseudodensity() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.pseudoDensity"]], "refdens (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.refDens"]], "references (armi.materials.uranium.uranium attribute)": [[137, "armi.materials.uranium.Uranium.references"]], "setdefaultmassfracs() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uranium.uranium method)": [[137, "armi.materials.uranium.Uranium.thermalConductivity"]], "ea (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[138, "armi.materials.uraniumOxide.HeatCapacityConstants.Ea"]], "heatcapacityconstants (class in armi.materials.uraniumoxide)": [[138, "armi.materials.uraniumOxide.HeatCapacityConstants"]], "reference_temperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.REFERENCE_TEMPERATURE"]], "uo2 (class in armi.materials.uraniumoxide)": [[138, "armi.materials.uraniumOxide.UO2"]], "uraniumoxide (class in armi.materials.uraniumoxide)": [[138, "armi.materials.uraniumOxide.UraniumOxide"]], "applyinputparams() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.applyInputParams"]], "armi.materials.uraniumoxide": [[138, "module-armi.materials.uraniumOxide"]], "c1 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[138, "armi.materials.uraniumOxide.HeatCapacityConstants.c1"]], "c2 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[138, "armi.materials.uraniumOxide.HeatCapacityConstants.c2"]], "c3 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[138, "armi.materials.uraniumOxide.HeatCapacityConstants.c3"]], "density() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.density"]], "enrichednuclide (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.enrichedNuclide"]], "heatcapacity() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.heatCapacity"]], "heatcapacityconstants (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.heatCapacityConstants"]], "linearexpansion() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.meltingPoint"]], "propertyunits (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.propertyUnits"]], "propertyvalidtemperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.propertyValidTemperature"]], "references (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.references"]], "setdefaultmassfracs() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uraniumoxide.uraniumoxide method)": [[138, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivity"]], "thermalconductivitytable (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTable"]], "thermalconductivitytablek (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTableK"]], "thermalscatteringlaws (armi.materials.uraniumoxide.uraniumoxide attribute)": [[138, "armi.materials.uraniumOxide.UraniumOxide.thermalScatteringLaws"]], "theta (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[138, "armi.materials.uraniumOxide.HeatCapacityConstants.theta"]], "void (class in armi.materials.void)": [[139, "armi.materials.void.Void"]], "armi.materials.void": [[139, "module-armi.materials.void"]], "density() (armi.materials.void.void method)": [[139, "armi.materials.void.Void.density"]], "pseudodensity() (armi.materials.void.void method)": [[139, "armi.materials.void.Void.pseudoDensity"]], "alpha_0 (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.ALPHA_0"]], "density_critical_gpercubiccentimeter (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.DENSITY_CRITICAL_GPERCUBICCENTIMETER"]], "density_critical_kgpercubicmeter (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.DENSITY_CRITICAL_KGPERCUBICMETER"]], "phi_0 (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.PHI_0"]], "saturatedsteam (class in armi.materials.water)": [[140, "armi.materials.water.SaturatedSteam"]], "saturatedwater (class in armi.materials.water)": [[140, "armi.materials.water.SaturatedWater"]], "temperature_critical_k (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.TEMPERATURE_CRITICAL_K"]], "vapor_pressure_critical_mpa (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_MPA"]], "vapor_pressure_critical_pa (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_PA"]], "water (class in armi.materials.water)": [[140, "armi.materials.water.Water"]], "armi.materials.water": [[140, "module-armi.materials.water"]], "auxiliaryquantityspecificenthalpy() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.auxiliaryQuantitySpecificEnthalpy"]], "auxiliaryquantityspecificentropy() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.auxiliaryQuantitySpecificEntropy"]], "d (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.d"]], "enthalpy() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.enthalpy"]], "entropy() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.entropy"]], "pseudodensity() (armi.materials.water.saturatedsteam method)": [[140, "armi.materials.water.SaturatedSteam.pseudoDensity"]], "pseudodensity() (armi.materials.water.saturatedwater method)": [[140, "armi.materials.water.SaturatedWater.pseudoDensity"]], "pseudodensity() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.pseudoDensity"]], "references (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.references"]], "setdefaultmassfracs() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.setDefaultMassFracs"]], "tau() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.tau"]], "thermalscatteringlaws (armi.materials.water.water attribute)": [[140, "armi.materials.water.Water.thermalScatteringLaws"]], "theta() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.theta"]], "vaporpressure() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.vaporPressure"]], "vaporpressureprime() (armi.materials.water.water method)": [[140, "armi.materials.water.Water.vaporPressurePrime"]], "y2o3 (class in armi.materials.yttriumoxide)": [[141, "armi.materials.yttriumOxide.Y2O3"]], "armi.materials.yttriumoxide": [[141, "module-armi.materials.yttriumOxide"]], "density() (armi.materials.yttriumoxide.y2o3 method)": [[141, "armi.materials.yttriumOxide.Y2O3.density"]], "linearexpansionpercent() (armi.materials.yttriumoxide.y2o3 method)": [[141, "armi.materials.yttriumOxide.Y2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.yttriumoxide.y2o3 attribute)": [[141, "armi.materials.yttriumOxide.Y2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.yttriumoxide.y2o3 method)": [[141, "armi.materials.yttriumOxide.Y2O3.setDefaultMassFracs"]], "zno (class in armi.materials.zincoxide)": [[142, "armi.materials.zincOxide.ZnO"]], "armi.materials.zincoxide": [[142, "module-armi.materials.zincOxide"]], "density() (armi.materials.zincoxide.zno method)": [[142, "armi.materials.zincOxide.ZnO.density"]], "linearexpansionpercent() (armi.materials.zincoxide.zno method)": [[142, "armi.materials.zincOxide.ZnO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.zincoxide.zno attribute)": [[142, "armi.materials.zincOxide.ZnO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.zincoxide.zno method)": [[142, "armi.materials.zincOxide.ZnO.setDefaultMassFracs"]], "zr (class in armi.materials.zr)": [[143, "armi.materials.zr.Zr"]], "armi.materials.zr": [[143, "module-armi.materials.zr"]], "density() (armi.materials.zr.zr method)": [[143, "armi.materials.zr.Zr.density"]], "linearexpansion() (armi.materials.zr.zr method)": [[143, "armi.materials.zr.Zr.linearExpansion"]], "linearexpansionpercent() (armi.materials.zr.zr method)": [[143, "armi.materials.zr.Zr.linearExpansionPercent"]], "linearexpansiontable (armi.materials.zr.zr attribute)": [[143, "armi.materials.zr.Zr.linearExpansionTable"]], "linearexpansiontablek (armi.materials.zr.zr attribute)": [[143, "armi.materials.zr.Zr.linearExpansionTableK"]], "propertyvalidtemperature (armi.materials.zr.zr attribute)": [[143, "armi.materials.zr.Zr.propertyValidTemperature"]], "reftempk (armi.materials.zr.zr attribute)": [[143, "armi.materials.zr.Zr.refTempK"]], "references (armi.materials.zr.zr attribute)": [[143, "armi.materials.zr.Zr.references"]], "setdefaultmassfracs() (armi.materials.zr.zr method)": [[143, "armi.materials.zr.Zr.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.zr.zr method)": [[143, "armi.materials.zr.Zr.thermalConductivity"]], "armi.meta": [[144, "module-armi.meta"]], "armi.migration": [[145, "module-armi.migration"]], "blueprintsmigration (class in armi.migration.base)": [[146, "armi.migration.base.BlueprintsMigration"]], "databasemigration (class in armi.migration.base)": [[146, "armi.migration.base.DatabaseMigration"]], "migration (class in armi.migration.base)": [[146, "armi.migration.base.Migration"]], "settingsmigration (class in armi.migration.base)": [[146, "armi.migration.base.SettingsMigration"]], "apply() (armi.migration.base.migration method)": [[146, "armi.migration.base.Migration.apply"]], "armi.migration.base": [[146, "module-armi.migration.base"]], "fromversion (armi.migration.base.migration attribute)": [[146, "armi.migration.base.Migration.fromVersion"]], "toversion (armi.migration.base.migration attribute)": [[146, "armi.migration.base.Migration.toVersion"]], "removecentersfromblueprints (class in armi.migration.m0_1_3)": [[147, "armi.migration.m0_1_3.RemoveCentersFromBlueprints"]], "updateelementalnuclides (class in armi.migration.m0_1_3)": [[147, "armi.migration.m0_1_3.UpdateElementalNuclides"]], "armi.migration.m0_1_3": [[147, "module-armi.migration.m0_1_3"]], "deletions (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[147, "armi.migration.m0_1_3.UpdateElementalNuclides.deletions"]], "fromversion (armi.migration.m0_1_3.removecentersfromblueprints attribute)": [[147, "armi.migration.m0_1_3.RemoveCentersFromBlueprints.fromVersion"]], "fromversion (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[147, "armi.migration.m0_1_3.UpdateElementalNuclides.fromVersion"]], "swaps (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[147, "armi.migration.m0_1_3.UpdateElementalNuclides.swaps"]], "toversion (armi.migration.m0_1_3.removecentersfromblueprints attribute)": [[147, "armi.migration.m0_1_3.RemoveCentersFromBlueprints.toVersion"]], "toversion (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[147, "armi.migration.m0_1_3.UpdateElementalNuclides.toVersion"]], "convertalphanumlocationsettingstonum (class in armi.migration.m0_1_6)": [[148, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum"]], "armi.migration.m0_1_6": [[148, "module-armi.migration.m0_1_6"]], "fromversion (armi.migration.m0_1_6.convertalphanumlocationsettingstonum attribute)": [[148, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum.fromVersion"]], "getindicesfromdif3dstylelocatorlabel() (in module armi.migration.m0_1_6)": [[148, "armi.migration.m0_1_6.getIndicesFromDIF3DStyleLocatorLabel"]], "toversion (armi.migration.m0_1_6.convertalphanumlocationsettingstonum attribute)": [[148, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum.toVersion"]], "armi.migration.tests": [[149, "module-armi.migration.tests"]], "testmigration (class in armi.migration.tests.test_m0_1_6)": [[150, "armi.migration.tests.test_m0_1_6.TestMigration"]], "armi.migration.tests.test_m0_1_6": [[150, "module-armi.migration.tests.test_m0_1_6"]], "test_locationlabelmigration() (armi.migration.tests.test_m0_1_6.testmigration method)": [[150, "armi.migration.tests.test_m0_1_6.TestMigration.test_locationLabelMigration"]], "testmigrationbases (class in armi.migration.tests.test_migration_base)": [[151, "armi.migration.tests.test_migration_base.TestMigrationBases"]], "testsettingsmigration (class in armi.migration.tests.test_migration_base)": [[151, "armi.migration.tests.test_migration_base.TestSettingsMigration"]], "armi.migration.tests.test_migration_base": [[151, "module-armi.migration.tests.test_migration_base"]], "test_basic_validation() (armi.migration.tests.test_migration_base.testmigrationbases method)": [[151, "armi.migration.tests.test_migration_base.TestMigrationBases.test_basic_validation"]], "test_loadstreamfrompath() (armi.migration.tests.test_migration_base.testsettingsmigration method)": [[151, "armi.migration.tests.test_migration_base.TestSettingsMigration.test_loadStreamFromPath"]], "distributestateaction (class in armi.mpiactions)": [[152, "armi.mpiActions.DistributeStateAction"]], "distributionaction (class in armi.mpiactions)": [[152, "armi.mpiActions.DistributionAction"]], "mpiaction (class in armi.mpiactions)": [[152, "armi.mpiActions.MpiAction"]], "mpiactionerror": [[152, "armi.mpiActions.MpiActionError"]], "armi.mpiactions": [[152, "module-armi.mpiActions"]], "broadcast() (armi.mpiactions.mpiaction method)": [[152, "armi.mpiActions.MpiAction.broadcast"]], "gather() (armi.mpiactions.mpiaction method)": [[152, "armi.mpiActions.MpiAction.gather"]], "invoke() (armi.mpiactions.mpiaction method)": [[152, "armi.mpiActions.MpiAction.invoke"]], "invokeasmaster() (armi.mpiactions.mpiaction class method)": [[152, "armi.mpiActions.MpiAction.invokeAsMaster"]], "invokehook() (armi.mpiactions.distributestateaction method)": [[152, "armi.mpiActions.DistributeStateAction.invokeHook"]], "invokehook() (armi.mpiactions.distributionaction method)": [[152, "armi.mpiActions.DistributionAction.invokeHook"]], "invokehook() (armi.mpiactions.mpiaction method)": [[152, "armi.mpiActions.MpiAction.invokeHook"]], "mpiflatten() (armi.mpiactions.mpiaction static method)": [[152, "armi.mpiActions.MpiAction.mpiFlatten"]], "mpiiter() (armi.mpiactions.mpiaction static method)": [[152, "armi.mpiActions.MpiAction.mpiIter"]], "parallel (armi.mpiactions.mpiaction property)": [[152, "armi.mpiActions.MpiAction.parallel"]], "runactions() (in module armi.mpiactions)": [[152, "armi.mpiActions.runActions"]], "runactionsinserial() (in module armi.mpiactions)": [[152, "armi.mpiActions.runActionsInSerial"]], "armi.nucdirectory": [[153, "module-armi.nucDirectory"]], "actinide (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.ACTINIDE"]], "alkaline_earth_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.ALKALINE_EARTH_METAL"]], "alkali_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.ALKALI_METAL"]], "chemicalgroup (class in armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.ChemicalGroup"]], "chemicalphase (class in armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.ChemicalPhase"]], "element (class in armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.Element"]], "gas (armi.nucdirectory.elements.chemicalphase attribute)": [[154, "armi.nucDirectory.elements.ChemicalPhase.GAS"]], "halogen (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.HALOGEN"]], "lanthanide (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.LANTHANIDE"]], "liquid (armi.nucdirectory.elements.chemicalphase attribute)": [[154, "armi.nucDirectory.elements.ChemicalPhase.LIQUID"]], "metalloid (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.METALLOID"]], "noble_gas (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.NOBLE_GAS"]], "nonmetal (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.NONMETAL"]], "post_transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.POST_TRANSITION_METAL"]], "solid (armi.nucdirectory.elements.chemicalphase attribute)": [[154, "armi.nucDirectory.elements.ChemicalPhase.SOLID"]], "transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.TRANSITION_METAL"]], "unknown (armi.nucdirectory.elements.chemicalgroup attribute)": [[154, "armi.nucDirectory.elements.ChemicalGroup.UNKNOWN"]], "unknown (armi.nucdirectory.elements.chemicalphase attribute)": [[154, "armi.nucDirectory.elements.ChemicalPhase.UNKNOWN"]], "addglobalelement() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.addGlobalElement"]], "append() (armi.nucdirectory.elements.element method)": [[154, "armi.nucDirectory.elements.Element.append"]], "armi.nucdirectory.elements": [[154, "module-armi.nucDirectory.elements"]], "destroyglobalelements() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.destroyGlobalElements"]], "factory() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.factory"]], "getelementz() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.getElementZ"]], "getelementsbychemicalgroup() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.getElementsByChemicalGroup"]], "getelementsbychemicalphase() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.getElementsByChemicalPhase"]], "getname() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.getName"]], "getnaturalisotopics() (armi.nucdirectory.elements.element method)": [[154, "armi.nucDirectory.elements.Element.getNaturalIsotopics"]], "getsymbol() (in module armi.nucdirectory.elements)": [[154, "armi.nucDirectory.elements.getSymbol"]], "isheavymetal() (armi.nucdirectory.elements.element method)": [[154, "armi.nucDirectory.elements.Element.isHeavyMetal"]], "isnaturallyoccurring() (armi.nucdirectory.elements.element method)": [[154, "armi.nucDirectory.elements.Element.isNaturallyOccurring"]], "armi.nucdirectory.nucdir": [[155, "module-armi.nucDirectory.nucDir"]], "getatomicweight() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getAtomicWeight"]], "getelementname() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getElementName"]], "getelementsymbol() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getElementSymbol"]], "getmc2label() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getMc2Label"]], "getnaturalisotopics() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getNaturalIsotopics"]], "getnaturalmassisotopics() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getNaturalMassIsotopics"]], "getnuclide() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getNuclide"]], "getnuclidefromname() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getNuclideFromName"]], "getnuclidenames() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getNuclideNames"]], "getnuclides() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getNuclides"]], "getthresholddisplacementenergy() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.getThresholdDisplacementEnergy"]], "isfissile() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.isFissile"]], "isheavymetal() (in module armi.nucdirectory.nucdir)": [[155, "armi.nucDirectory.nucDir.isHeavyMetal"]], "decay (armi.nucdirectory.nuclidebases.inuclide attribute)": [[156, "armi.nucDirectory.nuclideBases.INuclide.DECAY"]], "dummynuclidebase (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.DummyNuclideBase"]], "imcnpnuclide (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.IMcnpNuclide"]], "inuclide (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.INuclide"]], "lumpnuclidebase (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.LumpNuclideBase"]], "naturalnuclidebase (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase"]], "nuclidebase (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase"]], "nuclideinterface (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface"]], "nuclidewrapper (class in armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper"]], "spontaneous_fission (armi.nucdirectory.nuclidebases.inuclide attribute)": [[156, "armi.nucDirectory.nuclideBases.INuclide.SPONTANEOUS_FISSION"]], "transmutation (armi.nucdirectory.nuclidebases.inuclide attribute)": [[156, "armi.nucDirectory.nuclideBases.INuclide.TRANSMUTATION"]], "addglobalnuclide() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.addGlobalNuclide"]], "addnuclidebases() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.addNuclideBases"]], "armi.nucdirectory.nuclidebases": [[156, "module-armi.nucDirectory.nuclideBases"]], "changelabel() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.changeLabel"]], "destroyglobalnuclides() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.destroyGlobalNuclides"]], "factory() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.factory"]], "fissile (armi.nucdirectory.nuclidebases.inuclide attribute)": [[156, "armi.nucDirectory.nuclideBases.INuclide.fissile"]], "fromname() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.fromName"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[156, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getAAAZZZSId"]], "getdatabasename() (armi.nucdirectory.nuclidebases.inuclide method)": [[156, "armi.nucDirectory.nuclideBases.INuclide.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDatabaseName"]], "getdecay() (armi.nucdirectory.nuclidebases.inuclide method)": [[156, "armi.nucDirectory.nuclideBases.INuclide.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDecay"]], "getdepletablenuclides() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.getDepletableNuclides"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getEndfMatNum"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getEndfMatNum"]], "getisotopics() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.getIsotopics"]], "getmcc2id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc2Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc3Id"]], "getmcnpid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[156, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getMcnpId"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.inuclide method)": [[156, "armi.nucDirectory.nuclideBases.INuclide.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.getNaturalIsotopics"]], "getserpentid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.NuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.getSerpentId"]], "imposeburnchain() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.imposeBurnChain"]], "initreachableactivenuclidesthroughburnchain() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.initReachableActiveNuclidesThroughBurnChain"]], "isfissile() (armi.nucdirectory.nuclidebases.inuclide method)": [[156, "armi.nucDirectory.nuclideBases.INuclide.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.isFissile"]], "isheavymetal() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.DummyNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.inuclide method)": [[156, "armi.nucDirectory.nuclideBases.INuclide.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[156, "armi.nucDirectory.nuclideBases.LumpNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[156, "armi.nucDirectory.nuclideBases.NuclideInterface.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.isHeavyMetal"]], "ismonoisotopicelement() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.isMonoIsotopicElement"]], "isotopes() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.isotopes"]], "name (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.name"]], "readmccnuclidedata() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.readMCCNuclideData"]], "single() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.single"]], "updatenuclidebasesforspecialcases() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.updateNuclideBasesForSpecialCases"]], "weight (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[156, "armi.nucDirectory.nuclideBases.NuclideWrapper.weight"]], "where() (in module armi.nucdirectory.nuclidebases)": [[156, "armi.nucDirectory.nuclideBases.where"]], "armi.nucdirectory.tests": [[157, "module-armi.nucDirectory.tests"]], "testelement (class in armi.nucdirectory.tests.test_elements)": [[158, "armi.nucDirectory.tests.test_elements.TestElement"]], "armi.nucdirectory.tests.test_elements": [[158, "module-armi.nucDirectory.tests.test_elements"]], "test_abundancesaddtoone() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_abundancesAddToOne"]], "test_element_addexistingelementfails() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addExistingElementFails"]], "test_element_addedelementappearsinelementlist() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addedElementAppearsInElementList"]], "test_element_elementbynamereturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByNameReturnsElement"]], "test_element_elementbysymbolreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementBySymbolReturnsElement"]], "test_element_elementbyzreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByZReturnsElement"]], "test_element_getnatrualisotpicsonlyretrievesabundacegt0() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"]], "test_element_isnaturallyoccurring() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_element_isNaturallyOccurring"]], "test_elements_elementbulkproperties() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_elements_elementBulkProperties"]], "test_isheavymetal() (armi.nucdirectory.tests.test_elements.testelement method)": [[158, "armi.nucDirectory.tests.test_elements.TestElement.test_isHeavyMetal"]], "testnucdirectory (class in armi.nucdirectory.tests.test_nucdirectory)": [[159, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory"]], "armi.nucdirectory.tests.test_nucdirectory": [[159, "module-armi.nucDirectory.tests.test_nucDirectory"]], "test_getdisplacementenergy() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[159, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_getDisplacementEnergy"]], "test_nucdir_getnameforolddashednames() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[159, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNameForOldDashedNames"]], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclide() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[159, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"]], "test_nucdir_getnuclidesfromforbadname() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[159, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclidesFromForBadName"]], "testaaazzzsid (class in armi.nucdirectory.tests.test_nuclidebases)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId"]], "testnuclide (class in armi.nucdirectory.tests.test_nuclidebases)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide"]], "armi.nucdirectory.tests.test_nuclidebases": [[160, "module-armi.nucDirectory.tests.test_nuclideBases"]], "test_aaazzzsnamegenerator() (armi.nucdirectory.tests.test_nuclidebases.testaaazzzsid method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId.test_AAAZZZSNameGenerator"]], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"]], "test_naturalnuclidebase_getnatrualisotpics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclideBase_getNatrualIsotpics"]], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotopes() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"]], "test_nonmc2nuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NonMc2Nuclide"]], "test_curiedefinitionwithra226() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_curieDefinitionWithRa226"]], "test_getdecay() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getDecay"]], "test_getendfmatnum() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getEndfMatNum"]], "test_kryptondecayconstants() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_kryptonDecayConstants"]], "test_loadmcc2data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc2Data"]], "test_loadmcc3data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc3Data"]], "test_nucbase_allabundancesaddtoone() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBase_AllAbundancesAddToOne"]], "test_nucbases_alldatabasenamesareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllDatabaseNamesAreUnique"]], "test_nucbases_alllabelsareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllLabelsAreUnique"]], "test_nucbases_am242m() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Am242m"]], "test_nucbases_mc2elementals() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Mc2Elementals"]], "test_nucbases_negativezraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_NegativeZRaisesException"]], "test_nucbases_z295raisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Z295RaisesException"]], "test_nucbases_databasenamesstartwith_n() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_databaseNamesStartWith_n"]], "test_nucbases_fromnamebadnameraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_fromNameBadNameRaisesException"]], "test_nucbases_imposeburnchaindecaybulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainDecayBulkStatistics"]], "test_nucbases_imposeburnchaintransmutationbulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainTransmutationBulkStatistics"]], "test_nucbases_imposeburn_nusf() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurn_nuSF"]], "test_nucbases_isheavymetal() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_isHeavyMetal"]], "test_nucbases_labelandnamecollsionsareforsamenuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_labelAndNameCollsionsAreForSameNuclide"]], "test_nucbases_singlefailswithmultiplematches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithMultipleMatches"]], "test_nucbases_singlefailswithnomatches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithNoMatches"]], "test_nucbases_singleisprettyspecific() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[160, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleIsPrettySpecific"]], "testthermalscattering (class in armi.nucdirectory.tests.test_thermalscattering)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering"]], "armi.nucdirectory.tests.test_thermalscattering": [[161, "module-armi.nucDirectory.tests.test_thermalScattering"]], "buildblockwithtsl() (in module armi.nucdirectory.tests.test_thermalscattering)": [[161, "armi.nucDirectory.tests.test_thermalScattering.buildBlockWithTSL"]], "getnuclidethermalscatteringdata() (in module armi.nucdirectory.tests.test_thermalscattering)": [[161, "armi.nucDirectory.tests.test_thermalScattering.getNuclideThermalScatteringData"]], "test_acecompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACECompound"]], "test_aceelementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEElementInCompound"]], "test_aceisotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEIsotope"]], "test_endf8compound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Compound"]], "test_endf8elementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8ElementInCompound"]], "test_endf8isotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Isotope"]], "test_failonmultiple() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_failOnMultiple"]], "test_graphiteonreactor() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[161, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_graphiteOnReactor"]], "decaymodetests (class in armi.nucdirectory.tests.test_transmutations)": [[162, "armi.nucDirectory.tests.test_transmutations.DecayModeTests"]], "transmutationtests (class in armi.nucdirectory.tests.test_transmutations)": [[162, "armi.nucDirectory.tests.test_transmutations.TransmutationTests"]], "armi.nucdirectory.tests.test_transmutations": [[162, "module-armi.nucDirectory.tests.test_transmutations"]], "randomstring() (in module armi.nucdirectory.tests.test_transmutations)": [[162, "armi.nucDirectory.tests.test_transmutations.randomString"]], "test_decaymode_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[162, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_invalidReactionTypes"]], "test_decaymode_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[162, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_validReactionTypes"]], "test_transmutation_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[162, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_invalidReactionTypes"]], "test_transmutation_productparticle() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[162, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_productParticle"]], "test_transmutation_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[162, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_validReactionTypes"]], "thermalscattering (class in armi.nucdirectory.thermalscattering)": [[163, "armi.nucDirectory.thermalScattering.ThermalScattering"]], "armi.nucdirectory.thermalscattering": [[163, "module-armi.nucDirectory.thermalScattering"]], "factory() (in module armi.nucdirectory.thermalscattering)": [[163, "armi.nucDirectory.thermalScattering.factory"]], "getsubjectnuclidebases() (armi.nucdirectory.thermalscattering.thermalscattering method)": [[163, "armi.nucDirectory.thermalScattering.ThermalScattering.getSubjectNuclideBases"]], "decaymode (class in armi.nucdirectory.transmutations)": [[164, "armi.nucDirectory.transmutations.DecayMode"]], "transmutable (class in armi.nucdirectory.transmutations)": [[164, "armi.nucDirectory.transmutations.Transmutable"]], "transmutation (class in armi.nucdirectory.transmutations)": [[164, "armi.nucDirectory.transmutations.Transmutation"]], "armi.nucdirectory.transmutations": [[164, "module-armi.nucDirectory.transmutations"]], "getpreferredproduct() (armi.nucdirectory.transmutations.transmutable method)": [[164, "armi.nucDirectory.transmutations.Transmutable.getPreferredProduct"]], "armi.nucleardataio": [[165, "module-armi.nuclearDataIO"]], "getexpectedcompxsfilename() (in module armi.nucleardataio)": [[165, "armi.nuclearDataIO.getExpectedCOMPXSFileName"]], "getexpectedgamisofilename() (in module armi.nucleardataio)": [[165, "armi.nuclearDataIO.getExpectedGAMISOFileName"]], "getexpectedisotxsfilename() (in module armi.nucleardataio)": [[165, "armi.nuclearDataIO.getExpectedISOTXSFileName"]], "getexpectedpmatrxfilename() (in module armi.nucleardataio)": [[165, "armi.nuclearDataIO.getExpectedPMATRXFileName"]], "armi.nucleardataio.cccc": [[166, "module-armi.nuclearDataIO.cccc"]], "asciirecordreader (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader"]], "asciirecordwriter (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter"]], "binaryrecordreader (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader"]], "binaryrecordwriter (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter"]], "datacontainer (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.DataContainer"]], "implicit_int (in module armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.IMPLICIT_INT"]], "iorecord (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord"]], "stream (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream"]], "streamwithdatacontainer (class in armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.StreamWithDataContainer"]], "armi.nucleardataio.cccc.cccc": [[167, "module-armi.nuclearDataIO.cccc.cccc"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.close"]], "count (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.count"]], "createrecord() (armi.nucleardataio.cccc.cccc.stream method)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream.createRecord"]], "getblockbandwidth() (in module armi.nucleardataio.cccc.cccc)": [[167, "armi.nuclearDataIO.cccc.cccc.getBlockBandwidth"]], "maxsize (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.maxsize"]], "open() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.open"]], "readascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream.readAscii"]], "readbinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream.readBinary"]], "readwrite() (armi.nucleardataio.cccc.cccc.stream method)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream.readWrite"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwBool"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDouble"]], "rwdoublematrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDoubleMatrix"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwFloat"]], "rwimplicitlytypedmap() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwImplicitlyTypedMap"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwInt"]], "rwintmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwIntMatrix"]], "rwlist() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwList"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwLong"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwLong"]], "rwmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwMatrix"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[167, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.iorecord method)": [[167, "armi.nuclearDataIO.cccc.cccc.IORecord.rwString"]], "writeascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream.writeAscii"]], "writebinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[167, "armi.nuclearDataIO.cccc.cccc.Stream.writeBinary"]], "compxsregion (class in armi.nucleardataio.cccc.compxs)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion"]], "allocatexs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.allocateXS"]], "armi.nucleardataio.cccc.compxs": [[168, "module-armi.nuclearDataIO.cccc.compxs"]], "compare() (in module armi.nucleardataio.cccc.compxs)": [[168, "armi.nuclearDataIO.cccc.compxs.compare"]], "getxs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.getXS"]], "initmetadata() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.initMetadata"]], "isfissile (armi.nucleardataio.cccc.compxs.compxsregion property)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.isFissile"]], "makescatteringmatrices() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.makeScatteringMatrices"]], "merge() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[168, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.merge"]], "dif3ddata (class in armi.nucleardataio.cccc.dif3d)": [[169, "armi.nuclearDataIO.cccc.dif3d.Dif3dData"]], "dif3dstream (class in armi.nucleardataio.cccc.dif3d)": [[169, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream"]], "armi.nucleardataio.cccc.dif3d": [[169, "module-armi.nuclearDataIO.cccc.dif3d"]], "readwrite() (armi.nucleardataio.cccc.dif3d.dif3dstream method)": [[169, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream.readWrite"]], "delayedneutrondata (class in armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.DelayedNeutronData"]], "dlayxs (class in armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs"]], "dlayxsio (class in armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO"]], "g (armi.nucleardataio.cccc.dlayxs.dlayxs property)": [[170, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.G"]], "armi.nucleardataio.cccc.dlayxs": [[170, "module-armi.nuclearDataIO.cccc.dlayxs"]], "compare() (in module armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.compare"]], "generateaveragedelayedneutronconstants() (armi.nucleardataio.cccc.dlayxs.dlayxs method)": [[170, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.generateAverageDelayedNeutronConstants"]], "readascii() (in module armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.readBinary"]], "readwrite() (armi.nucleardataio.cccc.dlayxs.dlayxsio method)": [[170, "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO.readWrite"]], "writeascii() (in module armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.dlayxs)": [[170, "armi.nuclearDataIO.cccc.dlayxs.writeBinary"]], "fixsrc (class in armi.nucleardataio.cccc.fixsrc)": [[171, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC"]], "armi.nucleardataio.cccc.fixsrc": [[171, "module-armi.nuclearDataIO.cccc.fixsrc"]], "readbinary() (in module armi.nucleardataio.cccc.fixsrc)": [[171, "armi.nuclearDataIO.cccc.fixsrc.readBinary"]], "readwrite() (armi.nucleardataio.cccc.fixsrc.fixsrc method)": [[171, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC.readWrite"]], "writebinary() (in module armi.nucleardataio.cccc.fixsrc)": [[171, "armi.nuclearDataIO.cccc.fixsrc.writeBinary"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.gamiso)": [[172, "armi.nuclearDataIO.cccc.gamiso.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.gamiso": [[172, "module-armi.nuclearDataIO.cccc.gamiso"]], "compare() (in module armi.nucleardataio.cccc.gamiso)": [[172, "armi.nuclearDataIO.cccc.gamiso.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.gamiso)": [[172, "armi.nuclearDataIO.cccc.gamiso.compareNuclideXS"]], "geodstdata (class in armi.nucleardataio.cccc.geodst)": [[173, "armi.nuclearDataIO.cccc.geodst.GeodstData"]], "geodststream (class in armi.nucleardataio.cccc.geodst)": [[173, "armi.nuclearDataIO.cccc.geodst.GeodstStream"]], "armi.nucleardataio.cccc.geodst": [[173, "module-armi.nuclearDataIO.cccc.geodst"]], "readwrite() (armi.nucleardataio.cccc.geodst.geodststream method)": [[173, "armi.nuclearDataIO.cccc.geodst.GeodstStream.readWrite"]], "isotxsio (class in armi.nucleardataio.cccc.isotxs)": [[174, "armi.nuclearDataIO.cccc.isotxs.IsotxsIO"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.isotxs)": [[174, "armi.nuclearDataIO.cccc.isotxs.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.isotxs": [[174, "module-armi.nuclearDataIO.cccc.isotxs"]], "compare() (in module armi.nucleardataio.cccc.isotxs)": [[174, "armi.nuclearDataIO.cccc.isotxs.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.isotxs)": [[174, "armi.nuclearDataIO.cccc.isotxs.compareNuclideXS"]], "compareset() (in module armi.nucleardataio.cccc.isotxs)": [[174, "armi.nuclearDataIO.cccc.isotxs.compareSet"]], "readwrite() (armi.nucleardataio.cccc.isotxs.isotxsio method)": [[174, "armi.nuclearDataIO.cccc.isotxs.IsotxsIO.readWrite"]], "labelsdata (class in armi.nucleardataio.cccc.labels)": [[175, "armi.nuclearDataIO.cccc.labels.LabelsData"]], "labelsstream (class in armi.nucleardataio.cccc.labels)": [[175, "armi.nuclearDataIO.cccc.labels.LabelsStream"]], "armi.nucleardataio.cccc.labels": [[175, "module-armi.nuclearDataIO.cccc.labels"]], "readwrite() (armi.nucleardataio.cccc.labels.labelsstream method)": [[175, "armi.nuclearDataIO.cccc.labels.LabelsStream.readWrite"]], "nhflux (class in armi.nucleardataio.cccc.nhflux)": [[176, "armi.nuclearDataIO.cccc.nhflux.NHFLUX"]], "nafluxstream (class in armi.nucleardataio.cccc.nhflux)": [[176, "armi.nuclearDataIO.cccc.nhflux.NafluxStream"]], "nafluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[176, "armi.nuclearDataIO.cccc.nhflux.NafluxStreamVariant"]], "nhfluxstream (class in armi.nucleardataio.cccc.nhflux)": [[176, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream"]], "nhfluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[176, "armi.nuclearDataIO.cccc.nhflux.NhfluxStreamVariant"]], "armi.nucleardataio.cccc.nhflux": [[176, "module-armi.nuclearDataIO.cccc.nhflux"]], "fluxmoments (armi.nucleardataio.cccc.nhflux.nhflux property)": [[176, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.fluxMoments"]], "getnhfluxreader() (in module armi.nucleardataio.cccc.nhflux)": [[176, "armi.nuclearDataIO.cccc.nhflux.getNhfluxReader"]], "partialcurrentshex (armi.nucleardataio.cccc.nhflux.nhflux property)": [[176, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex"]], "partialcurrentshex_ext (armi.nucleardataio.cccc.nhflux.nhflux property)": [[176, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex_ext"]], "partialcurrentsz (armi.nucleardataio.cccc.nhflux.nhflux property)": [[176, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsZ"]], "readwrite() (armi.nucleardataio.cccc.nhflux.nhfluxstream method)": [[176, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream.readWrite"]], "pmatrxio (class in armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.pmatrx": [[177, "module-armi.nuclearDataIO.cccc.pmatrx"]], "compare() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.compareNuclideXS"]], "readascii() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.readBinary"]], "readwrite() (armi.nucleardataio.cccc.pmatrx.pmatrxio method)": [[177, "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO.readWrite"]], "writeascii() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.pmatrx)": [[177, "armi.nuclearDataIO.cccc.pmatrx.writeBinary"]], "pwdintdata (class in armi.nucleardataio.cccc.pwdint)": [[178, "armi.nuclearDataIO.cccc.pwdint.PwdintData"]], "pwdintstream (class in armi.nucleardataio.cccc.pwdint)": [[178, "armi.nuclearDataIO.cccc.pwdint.PwdintStream"]], "armi.nucleardataio.cccc.pwdint": [[178, "module-armi.nuclearDataIO.cccc.pwdint"]], "readwrite() (armi.nucleardataio.cccc.pwdint.pwdintstream method)": [[178, "armi.nuclearDataIO.cccc.pwdint.PwdintStream.readWrite"]], "atfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[179, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream"]], "rtfluxdata (class in armi.nucleardataio.cccc.rtflux)": [[179, "armi.nuclearDataIO.cccc.rtflux.RtfluxData"]], "rtfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[179, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream"]], "armi.nucleardataio.cccc.rtflux": [[179, "module-armi.nuclearDataIO.cccc.rtflux"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.atfluxstream method)": [[179, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream.getEnergyGroupIndex"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[179, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.getEnergyGroupIndex"]], "getfdfluxreader() (in module armi.nucleardataio.cccc.rtflux)": [[179, "armi.nuclearDataIO.cccc.rtflux.getFDFluxReader"]], "groupfluxes (armi.nucleardataio.cccc.rtflux.rtfluxdata attribute)": [[179, "armi.nuclearDataIO.cccc.rtflux.RtfluxData.groupFluxes"]], "readwrite() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[179, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.readWrite"]], "converged (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[180, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGED"]], "converging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[180, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGING"]], "convergence (class in armi.nucleardataio.cccc.rzflux)": [[180, "armi.nuclearDataIO.cccc.rzflux.Convergence"]], "diverging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[180, "armi.nuclearDataIO.cccc.rzflux.Convergence.DIVERGING"]], "no_iterations (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[180, "armi.nuclearDataIO.cccc.rzflux.Convergence.NO_ITERATIONS"]], "rzfluxdata (class in armi.nucleardataio.cccc.rzflux)": [[180, "armi.nuclearDataIO.cccc.rzflux.RzfluxData"]], "rzfluxstream (class in armi.nucleardataio.cccc.rzflux)": [[180, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream"]], "armi.nucleardataio.cccc.rzflux": [[180, "module-armi.nuclearDataIO.cccc.rzflux"]], "readwrite() (armi.nucleardataio.cccc.rzflux.rzfluxstream method)": [[180, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream.readWrite"]], "armi.nucleardataio.cccc.tests": [[181, "module-armi.nuclearDataIO.cccc.tests"]], "ccccasciirecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccAsciiRecordTests"]], "ccccbinaryrecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests"]], "cccciostreamtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests"]], "armi.nucleardataio.cccc.tests.test_cccc": [[182, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "test_initwithfilemode() (armi.nucleardataio.cccc.tests.test_cccc.cccciostreamtests method)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests.test_initWithFileMode"]], "test_notreadinganentirerecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_notReadingAnEntireRecordRaisesException"]], "test_readingbeyondrecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_readingBeyondRecordRaisesException"]], "test_writeandreadsimplefloatrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleFloatRecord"]], "test_writeandreadsimpleintegerrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleIntegerRecord"]], "test_writeandreadsimplestringrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[182, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleStringRecord"]], "testcompxs (class in armi.nucleardataio.cccc.tests.test_compxs)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs"]], "armi.nucleardataio.cccc.tests.test_compxs": [[183, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "asciiwritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.asciiWritePath"]], "binarywritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.binaryWritePath"]], "test_asciirw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_asciiRW"]], "test_binaryrw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_binaryRW"]], "test_getcompxsfilename() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_getCOMPXSFileName"]], "test_librarydata() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_libraryData"]], "test_mergecompxslibraries() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_mergeCompxsLibraries"]], "test_regionprimaryxs() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_regionPrimaryXS"]], "test_totalscattermatrix() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[183, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_totalScatterMatrix"]], "testdif3demptyrecords (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords"]], "testdif3dsimplehexz (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz"]], "armi.nucleardataio.cccc.tests.test_dif3d": [[184, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "test__rw2drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw2DRecord"]], "test__rw3drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw3DRecord"]], "test__rw4drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw4DRecord"]], "test__rw5drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw5DRecord"]], "test__rwfile1drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFile1DRecord"]], "test__rwfileid() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFileID"]], "test_empty4and5records() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3demptyrecords method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords.test_empty4and5Records"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test_writeBinary"]], "dlayxstests (class in armi.nucleardataio.cccc.tests.test_dlayxs)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests"]], "armi.nucleardataio.cccc.tests.test_dlayxs": [[185, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "test_endfvii1decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1DecayConstants"]], "test_endfvii1neutronsperfission() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1NeutronsPerFission"]], "test_nudelay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_NuDelay"]], "test_avg() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_avg"]], "test_chi_delay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delay"]], "test_chi_delaysumsto1() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delaySumsTo1"]], "test_compare() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_compare"]], "test_decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_decayConstants"]], "test_nuclides() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_nuclides"]], "test_writebinary_mcc3() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[185, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_writeBinary_mcc3"]], "testfixsrc (class in armi.nucleardataio.cccc.tests.test_fixsrc)": [[186, "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc"]], "armi.nucleardataio.cccc.tests.test_fixsrc": [[186, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"]], "test_writereadbinaryloop() (armi.nucleardataio.cccc.tests.test_fixsrc.testfixsrc method)": [[186, "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc.test_writeReadBinaryLoop"]], "testgamiso (class in armi.nucleardataio.cccc.tests.test_gamiso)": [[187, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso"]], "armi.nucleardataio.cccc.tests.test_gamiso": [[187, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "test_adddummynuclidestolibrary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[187, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_addDummyNuclidesToLibrary"]], "test_compare() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[187, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_compare"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[187, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_writeBinary"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_geodst)": [[188, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_geodst": [[188, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[188, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[188, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_writeGeodst"]], "isotxs_merge_tests (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests"]], "testisotxs (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs"]], "armi.nucleardataio.cccc.tests.test_isotxs": [[189, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "test_getgamisofilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getGAMISOFileName"]], "test_getisotxsfilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getISOTXSFileName"]], "test_getnuclide() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getNuclide"]], "test_getscatterweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatterWeights"]], "test_getscatteringweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatteringWeights"]], "test_isotxsdetaileddata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsDetailedData"]], "test_isotxsgeneraldata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsGeneralData"]], "test_mergemccv2filesremovesthefilewidechi() (armi.nucleardataio.cccc.tests.test_isotxs.isotxs_merge_tests method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests.test_mergeMccV2FilesRemovesTheFileWideChi"]], "test_n2nisreactionbased() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_n2nIsReactionBased"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[189, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_writeBinary"]], "testlabels (class in armi.nucleardataio.cccc.tests.test_labels)": [[190, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels"]], "armi.nucleardataio.cccc.tests.test_labels": [[190, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "test_readlabelsbinary() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[190, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_readLabelsBinary"]], "test_writelabelsascii() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[190, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_writeLabelsAscii"]], "testnhflux (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux"]], "testnhfluxvariant (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant"]], "armi.nucleardataio.cccc.tests.test_nhflux": [[191, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fc"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fc"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fluxMoments"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fluxMoments"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_write"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_write"]], "test_xypartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_xyPartialCurrents"]], "test_zpartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[191, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_zPartialCurrents"]], "testpmatrx (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx"]], "testpmatrxnuclides (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides"]], "testproductionmatrix_fromwritten (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten"]], "testproductionmatrix_fromwrittenascii (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWrittenAscii"]], "armi.nucleardataio.cccc.tests.test_pmatrx": [[192, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "test_getpmatrxfilename() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_getPMATRXFileName"]], "test_nuclidedataisdifferent() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_nuclideDataIsDifferent"]], "test_pmatrxdoesnthavedoseconversionfactors() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxDoesntHaveDoseConversionFactors"]], "test_pmatrxgammaenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxGammaEnergies"]], "test_pmatrxneutronenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNeutronEnergies"]], "test_pmatrxnuclidedataaa() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAA"]], "test_pmatrxnuclidedataab() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAB"]], "test_pmatrxnuclidenames() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNuclideNames"]], "test_writtenisidenticaltooriginal() (armi.nucleardataio.cccc.tests.test_pmatrx.testproductionmatrix_fromwritten method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten.test_writtenIsIdenticalToOriginal"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_pwdint)": [[193, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_pwdint": [[193, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[193, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[193, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_writeGeodst"]], "testrtflux (class in armi.nucleardataio.cccc.tests.test_rtflux)": [[194, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux"]], "armi.nucleardataio.cccc.tests.test_rtflux": [[194, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "test_adjoint() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_adjoint"]], "test_readrtflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_readrtflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_rwAscii"]], "test_writertflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_writertflux"]], "testrzflux (class in armi.nucleardataio.cccc.tests.test_rzflux)": [[195, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux"]], "armi.nucleardataio.cccc.tests.test_rzflux": [[195, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "binaryfilesequal() (in module armi.nucleardataio.cccc.tests.test_rzflux)": [[195, "armi.nuclearDataIO.cccc.tests.test_rzflux.binaryFilesEqual"]], "test_readrzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[195, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_readRzflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[195, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_rwAscii"]], "test_writerzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[195, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_writeRzflux"]], "filemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[196, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata"]], "nuclidemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[196, "armi.nuclearDataIO.nuclearFileMetadata.NuclideMetadata"]], "nuclidexsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[196, "armi.nuclearDataIO.nuclearFileMetadata.NuclideXSMetadata"]], "regionxsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[196, "armi.nuclearDataIO.nuclearFileMetadata.RegionXSMetadata"]], "armi.nucleardataio.nuclearfilemetadata": [[196, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "update() (armi.nucleardataio.nuclearfilemetadata.filemetadata method)": [[196, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata.update"]], "armi.nucleardataio.tests": [[197, "module-armi.nuclearDataIO.tests"]], "mockblock (class in armi.nucleardataio.tests.test_xscollections)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock"]], "mockblueprints (class in armi.nucleardataio.tests.test_xscollections)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlueprints"]], "mockreactor (class in armi.nucleardataio.tests.test_xscollections)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockReactor"]], "testxscollections (class in armi.nucleardataio.tests.test_xscollections)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections"]], "armi.nucleardataio.tests.test_xscollections": [[198, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "getnuclidenumberdensities() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclideNumberDensities"]], "getnuclides() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclides"]], "getvolume() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getVolume"]], "paramcollectiontype (armi.nucleardataio.tests.test_xscollections.mockblock attribute)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.paramCollectionType"]], "r (armi.nucleardataio.tests.test_xscollections.mockblock property)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.r"]], "setnumberdensity() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.setNumberDensity"]], "test_collapsecrosssection() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_collapseCrossSection"]], "test_createmacrosfrommicros() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_createMacrosFromMicros"]], "test_generatetotalscatteringmatrix() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrix"]], "test_generatetotalscatteringmatrixwithmissingdata() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrixWithMissingData"]], "test_plotnucxs() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[198, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_plotNucXs"]], "abstracttestxslibrarymerging (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging"]], "combined_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests"]], "gamiso_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests"]], "isotxs_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests"]], "pmatrx_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests"]], "tempfilemixin (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin"]], "testgetisotxsfilesinworkingdirectory (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory"]], "testxslibrary (class in armi.nucleardataio.tests.test_xslibraries)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary"]], "armi.nucleardataio.tests.test_xslibraries": [[199, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "assert_contains_only() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.assert_contains_only"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getErrorType"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibAAPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibAA_ABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibABPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibLumpedPath"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getReadFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getWriteFunc"]], "testfilename (armi.nucleardataio.tests.test_xslibraries.tempfilemixin property)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin.testFileName"]], "test_canpickleandunpicklegamiso() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleGAMISO"]], "test_canpickleandunpickleisotxs() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleISOTXS"]], "test_canpickleandunpicklepmatrx() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpicklePMATRX"]], "test_canremoveisotopes() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_canRemoveIsotopes"]], "test_canremoveisotopes() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.test_canRemoveIsotopes"]], "test_canwritegamisofromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteGamisoFromCombinedXSLibrary"]], "test_canwriteisotxsfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteIsotxsFromCombinedXSLibrary"]], "test_canwritepmatrxfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWritePmatrxFromCombinedXSLibrary"]], "test_cannotmergexslibwithsamenuclidenames() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_cannotMergeXSLibWithSameNuclideNames"]], "test_cannotmergexslibswithdifferentgammagroupstructures() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "test_cannotmergexslibxwithdifferentgroupstructure() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_cannotMergeXSLibxWithDifferentGroupStructure"]], "test_comparedifferentcomponentsofanxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareDifferentComponentsOfAnXSLibrary"]], "test_compareworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareWorks"]], "test_gamisolibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_gamisoLibraryAttributes"]], "test_getisotxsfileswithlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithLibrarySuffix"]], "test_getisotxsfileswithoutlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithoutLibrarySuffix"]], "test_isotxslibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_isotxsLibraryAttributes"]], "test_mergeallxslibfiles() (armi.nucleardataio.tests.test_xslibraries.combined_merge_tests method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests.test_mergeAllXSLibFiles"]], "test_mergeemptyxslibwithotheressentiallyclonestheother() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_mergeEmptyXSLibWithOtherEssentiallyClonesTheOther"]], "test_mergefailswithnonisotxsfiles() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeFailsWithNonIsotxsFiles"]], "test_mergetwoxslibfiles() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_mergeTwoXSLibFiles"]], "test_mergexslibrarieswithdifferentdataworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeXSLibrariesWithDifferentDataWorks"]], "test_pmatrxlibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[199, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_pmatrxLibraryAttributes"]], "nuclidetests (class in armi.nucleardataio.tests.test_xsnuclides)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests"]], "armi.nucleardataio.tests.test_xsnuclides": [[200, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "test_getmicroxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getMicroXS"]], "test_getxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getXS"]], "test_nuclide_2dxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_2dXsArrangementIsCorrect"]], "test_nuclide_createfromlabelfailsonbadname() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_createFromLabelFailsOnBadName"]], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"]], "test_nuclide_isoaadetails() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_isoaaDetails"]], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclide() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"]], "test_nuclide_newlabelsdontcausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_newLabelsDontCauseWarnings"]], "test_nuclide_nuclidebasemethodsshouldnotfail() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_nuclideBaseMethodsShouldNotFail"]], "test_nuclide_oldlabelscausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_oldLabelsCauseWarnings"]], "test_nuclide_scatterxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[200, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_scatterXsArrangementIsCorrect"]], "macroscopiccrosssectioncreator (class in armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator"]], "xscollection (class in armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection"]], "armi.nucleardataio.xscollections": [[201, "module-armi.nuclearDataIO.xsCollections"]], "clear() (armi.nucleardataio.xscollections.xscollection method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.clear"]], "collapsecrosssection() (armi.nucleardataio.xscollections.xscollection static method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.collapseCrossSection"]], "compare() (armi.nucleardataio.xscollections.xscollection method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.compare"]], "computeblockaveragechi() (in module armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.computeBlockAverageChi"]], "computecaptureenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.computeCaptureEnergyGenerationConstants"]], "computefissionenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.computeFissionEnergyGenerationConstants"]], "computegammaenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.computeGammaEnergyDepositionConstants"]], "computemacroscopicgroupconstants() (in module armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.computeMacroscopicGroupConstants"]], "computeneutronenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[201, "armi.nuclearDataIO.xsCollections.computeNeutronEnergyDepositionConstants"]], "createmacrosfrommicros() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[201, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosFromMicros"]], "createmacrosonblocklist() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[201, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosOnBlocklist"]], "get() (armi.nucleardataio.xscollections.xscollection method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.get"]], "getabsorptionxs() (armi.nucleardataio.xscollections.xscollection method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.getAbsorptionXS"]], "getdefaultxs() (armi.nucleardataio.xscollections.xscollection class method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.getDefaultXs"]], "gettotalscattermatrix() (armi.nucleardataio.xscollections.xscollection method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.getTotalScatterMatrix"]], "merge() (armi.nucleardataio.xscollections.xscollection method)": [[201, "armi.nuclearDataIO.xsCollections.XSCollection.merge"]], "compxslibrary (class in armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.CompxsLibrary"]], "isotxslibrary (class in armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary"]], "armi.nucleardataio.xslibraries": [[202, "module-armi.nuclearDataIO.xsLibraries"]], "compare() (in module armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.compare"]], "comparelibraryneutronenergies() (in module armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.compareLibraryNeutronEnergies"]], "comparexslibraryattribute() (in module armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.compareXSLibraryAttribute"]], "gammadoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaDoseConversionFactors"]], "gammaenergyupperbounds (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaEnergyUpperBounds"]], "get() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.get"]], "getisotxslibrariestomerge() (in module armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.getISOTXSLibrariesToMerge"]], "getnuclide() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclide"]], "getnuclides() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclides"]], "getscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getScatterWeights"]], "getsuffixfromnuclidelabel() (in module armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.getSuffixFromNuclideLabel"]], "merge() (armi.nucleardataio.xslibraries.compxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.merge"]], "merge() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.merge"]], "mergexslibrariesinworkingdirectory() (in module armi.nucleardataio.xslibraries)": [[202, "armi.nuclearDataIO.xsLibraries.mergeXSLibrariesInWorkingDirectory"]], "neutrondoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.neutronDoseConversionFactors"]], "nuclidelabels (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclideLabels"]], "nuclides (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclides"]], "numgroups (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroups"]], "numgroupsgamma (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroupsGamma"]], "purgefissionproducts() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.purgeFissionProducts"]], "regionlabels (armi.nucleardataio.xslibraries.compxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regionLabels"]], "regions (armi.nucleardataio.xslibraries.compxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regions"]], "resetscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.resetScatterWeights"]], "xsids (armi.nucleardataio.xslibraries.isotxslibrary property)": [[202, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.xsIDs"]], "xsnuclide (class in armi.nucleardataio.xsnuclides)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide"]], "armi.nucleardataio.xsnuclides": [[203, "module-armi.nuclearDataIO.xsNuclides"]], "buildnormalizedscattercolumns() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.buildNormalizedScatterColumns"]], "decays (armi.nucleardataio.xsnuclides.xsnuclide property)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.decays"]], "getmicroxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.getMicroXS"]], "getxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.getXS"]], "merge() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.merge"]], "plotcomparescattermatrix() (in module armi.nucleardataio.xsnuclides)": [[203, "armi.nuclearDataIO.xsNuclides.plotCompareScatterMatrix"]], "plotscattermatrix() (in module armi.nucleardataio.xsnuclides)": [[203, "armi.nuclearDataIO.xsNuclides.plotScatterMatrix"]], "trans (armi.nucleardataio.xsnuclides.xsnuclide property)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.trans"]], "updatebasenuclide() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[203, "armi.nuclearDataIO.xsNuclides.XSNuclide.updateBaseNuclide"]], "armi.operators": [[204, "module-armi.operators"]], "factory() (in module armi.operators)": [[204, "armi.operators.factory"]], "getoperatorclassfromsettings() (in module armi.operators)": [[204, "armi.operators.getOperatorClassFromSettings"]], "operator (class in armi.operators.operator)": [[205, "armi.operators.operator.Operator"]], "addinterface() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.addInterface"]], "armi.operators.operator": [[205, "module-armi.operators.operator"]], "ateol (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.atEOL"]], "availabilityfactors (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.availabilityFactors"]], "burnsteps (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.burnSteps"]], "couplingisactive() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.couplingIsActive"]], "createinterfaces() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.createInterfaces"]], "cyclelengths (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.cycleLengths"]], "cyclenames (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.cycleNames"]], "detach() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.detach"]], "getactiveinterfaces() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.getActiveInterfaces"]], "getinterface() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.getInterface"]], "getinterfaces() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.getInterfaces"]], "initializeinterfaces() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.initializeInterfaces"]], "inspector (armi.operators.operator.operator attribute)": [[205, "armi.operators.operator.Operator.inspector"]], "interactallboc() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllBOC"]], "interactallbol() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllBOL"]], "interactallcoupled() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllCoupled"]], "interactalleoc() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllEOC"]], "interactalleol() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllEOL"]], "interactallerror() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllError"]], "interactalleverynode() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllEveryNode"]], "interactallinit() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interactAllInit"]], "interfaceisactive() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.interfaceIsActive"]], "loadstate() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.loadState"]], "maxburnsteps (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.maxBurnSteps"]], "operate() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.operate"]], "powerfractions (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.powerFractions"]], "printinterfacesummary() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.printInterfaceSummary"]], "reattach() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.reattach"]], "removeallinterfaces() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.removeAllInterfaces"]], "removeinterface() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.removeInterface"]], "setstatetodefault() (armi.operators.operator.operator static method)": [[205, "armi.operators.operator.Operator.setStateToDefault"]], "snapshotrequest() (armi.operators.operator.operator method)": [[205, "armi.operators.operator.Operator.snapshotRequest"]], "steplengths (armi.operators.operator.operator property)": [[205, "armi.operators.operator.Operator.stepLengths"]], "operatormpi (class in armi.operators.operatormpi)": [[206, "armi.operators.operatorMPI.OperatorMPI"]], "armi.operators.operatormpi": [[206, "module-armi.operators.operatorMPI"]], "collapseallstderrs() (armi.operators.operatormpi.operatormpi method)": [[206, "armi.operators.operatorMPI.OperatorMPI.collapseAllStderrs"]], "operate() (armi.operators.operatormpi.operatormpi method)": [[206, "armi.operators.operatorMPI.OperatorMPI.operate"]], "workeroperate() (armi.operators.operatormpi.operatormpi method)": [[206, "armi.operators.operatorMPI.OperatorMPI.workerOperate"]], "workerquit() (armi.operators.operatormpi.operatormpi static method)": [[206, "armi.operators.operatorMPI.OperatorMPI.workerQuit"]], "equilibrium (armi.operators.runtypes.runtypes attribute)": [[207, "armi.operators.runTypes.RunTypes.EQUILIBRIUM"]], "runtypes (class in armi.operators.runtypes)": [[207, "armi.operators.runTypes.RunTypes"]], "snapshots (armi.operators.runtypes.runtypes attribute)": [[207, "armi.operators.runTypes.RunTypes.SNAPSHOTS"]], "standard (armi.operators.runtypes.runtypes attribute)": [[207, "armi.operators.runTypes.RunTypes.STANDARD"]], "armi.operators.runtypes": [[207, "module-armi.operators.runTypes"]], "armi.operators.settingsvalidation": [[208, "module-armi.operators.settingsValidation"]], "operatorsnapshots (class in armi.operators.snapshots)": [[209, "armi.operators.snapshots.OperatorSnapshots"]], "armi.operators.snapshots": [[209, "module-armi.operators.snapshots"]], "ateol (armi.operators.snapshots.operatorsnapshots property)": [[209, "armi.operators.snapshots.OperatorSnapshots.atEOL"]], "createinterfaces() (armi.operators.snapshots.operatorsnapshots method)": [[209, "armi.operators.snapshots.OperatorSnapshots.createInterfaces"]], "setstatetodefault() (armi.operators.snapshots.operatorsnapshots static method)": [[209, "armi.operators.snapshots.OperatorSnapshots.setStateToDefault"]], "armi.operators.tests": [[210, "module-armi.operators.tests"]], "testoperatorsnapshots (class in armi.operators.tests.test_operatorsnapshots)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots"]], "testoperatorsnapshotssettings (class in armi.operators.tests.test_operatorsnapshots)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorsnapshots": [[211, "module-armi.operators.tests.test_operatorSnapshots"]], "test_ateol() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_atEOL"]], "test_createinterfaces() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfaces"]], "test_createinterfacesdisabled() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfacesDisabled"]], "test_getoperatorclassfromsettings() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshotssettings method)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings.test_getOperatorClassFromSettings"]], "test_mainoperate() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_mainOperate"]], "test_setstatetodefault() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[211, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_setStateToDefault"]], "cyclessettingstests (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests"]], "interfacea (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.InterfaceA"]], "interfaceb (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.InterfaceB"]], "interfacec (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.InterfaceC"]], "operatortests (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.OperatorTests"]], "testcreateoperator (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.TestCreateOperator"]], "testinterfaceandeventheaders (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders"]], "testtightcoupling (class in armi.operators.tests.test_operators)": [[212, "armi.operators.tests.test_operators.TestTightCoupling"]], "armi.operators.tests.test_operators": [[212, "module-armi.operators.tests.test_operators"]], "availabilityfactorssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.availabilityFactorsSolution"]], "burnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.burnStepsSolution"]], "cyclelengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleLengthsSolution"]], "cyclenamessolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleNamesSolution"]], "dbwriteforcoupling() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.dbWriteForCoupling"]], "detailedcyclessettings (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.detailedCyclesSettings"]], "function (armi.operators.tests.test_operators.interfacea attribute)": [[212, "armi.operators.tests.test_operators.InterfaceA.function"]], "function (armi.operators.tests.test_operators.interfaceb attribute)": [[212, "armi.operators.tests.test_operators.InterfaceB.function"]], "function (armi.operators.tests.test_operators.interfacec attribute)": [[212, "armi.operators.tests.test_operators.InterfaceC.function"]], "maxburnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.maxBurnStepsSolution"]], "name (armi.operators.tests.test_operators.interfacea attribute)": [[212, "armi.operators.tests.test_operators.InterfaceA.name"]], "name (armi.operators.tests.test_operators.interfaceb attribute)": [[212, "armi.operators.tests.test_operators.InterfaceB.name"]], "name (armi.operators.tests.test_operators.interfacec attribute)": [[212, "armi.operators.tests.test_operators.InterfaceC.name"]], "powerfractionssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.powerFractionsSolution"]], "steplengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.stepLengthsSolution"]], "test_addinterfacesubclasscollision() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_addInterfaceSubclassCollision"]], "test_computetightcouplingconvergence() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_computeTightCouplingConvergence"]], "test_couplingisactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_couplingIsActive"]], "test_createoperator() (armi.operators.tests.test_operators.testcreateoperator method)": [[212, "armi.operators.tests.test_operators.TestCreateOperator.test_createOperator"]], "test_expandcycleandtimenodeargs_coupled() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[212, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Coupled"]], "test_expandcycleandtimenodeargs_cycle() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[212, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Cycle"]], "test_expandcycleandtimenodeargs_empty() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[212, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Empty"]], "test_expandcycleandtimenodeargs_everynode() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[212, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_EveryNode"]], "test_getactiveinterfaces() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_getActiveInterfaces"]], "test_getavailabilityfactors() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getBurnSteps"]], "test_getcyclelengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleNames"]], "test_getmaxburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getpowerfractions() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getPowerFractions"]], "test_getsteplengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[212, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getStepLengths"]], "test_getsteplengths() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_getStepLengths"]], "test_interfaceisactive() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_interfaceIsActive"]], "test_loadstateerror() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_loadStateError"]], "test_operatordata() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_operatorData"]], "test_orderedinterfaces() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_orderedInterfaces"]], "test_performtightcoupling_inactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_Inactive"]], "test_performtightcoupling_nowritedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_NoWriteDB"]], "test_performtightcoupling_writedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_WriteDB"]], "test_performtightcoupling_notconverged() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_notConverged"]], "test_performtightcoupling_skip() (armi.operators.tests.test_operators.testtightcoupling method)": [[212, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_skip"]], "test_setstatetodefault() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_setStateToDefault"]], "test_snapshotrequest() (armi.operators.tests.test_operators.operatortests method)": [[212, "armi.operators.tests.test_operators.OperatorTests.test_snapshotRequest"]], "armi.physics": [[213, "module-armi.physics"]], "dpa_cross_sections (in module armi.physics.constants)": [[214, "armi.physics.constants.DPA_CROSS_SECTIONS"]], "armi.physics.constants": [[214, "module-armi.physics.constants"]], "defaultexecuter (class in armi.physics.executers)": [[215, "armi.physics.executers.DefaultExecuter"]], "executer (class in armi.physics.executers)": [[215, "armi.physics.executers.Executer"]], "executionoptions (class in armi.physics.executers)": [[215, "armi.physics.executers.ExecutionOptions"]], "armi.physics.executers": [[215, "module-armi.physics.executers"]], "describe() (armi.physics.executers.executionoptions method)": [[215, "armi.physics.executers.ExecutionOptions.describe"]], "fromreactor() (armi.physics.executers.executionoptions method)": [[215, "armi.physics.executers.ExecutionOptions.fromReactor"]], "fromusersettings() (armi.physics.executers.executionoptions method)": [[215, "armi.physics.executers.ExecutionOptions.fromUserSettings"]], "resolvederivedoptions() (armi.physics.executers.executionoptions method)": [[215, "armi.physics.executers.ExecutionOptions.resolveDerivedOptions"]], "run() (armi.physics.executers.defaultexecuter method)": [[215, "armi.physics.executers.DefaultExecuter.run"]], "run() (armi.physics.executers.executer method)": [[215, "armi.physics.executers.Executer.run"]], "setrundirfromcasetitle() (armi.physics.executers.executionoptions method)": [[215, "armi.physics.executers.ExecutionOptions.setRunDirFromCaseTitle"]], "writeinput() (armi.physics.executers.defaultexecuter method)": [[215, "armi.physics.executers.DefaultExecuter.writeInput"]], "fuelhandlerplugin (class in armi.physics.fuelcycle)": [[216, "armi.physics.fuelCycle.FuelHandlerPlugin"]], "armi.physics.fuelcycle": [[216, "module-armi.physics.fuelCycle"]], "definesettings() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[216, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[216, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[216, "armi.physics.fuelCycle.FuelHandlerPlugin.exposeInterfaces"]], "armi.physics.fuelcycle.assemblyrotationalgorithms": [[217, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "bureducingassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[217, "armi.physics.fuelCycle.assemblyRotationAlgorithms.buReducingAssemblyRotation"]], "simpleassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[217, "armi.physics.fuelCycle.assemblyRotationAlgorithms.simpleAssemblyRotation"]], "armi.physics.fuelcycle.fuelhandlerfactory": [[218, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "fuelhandlerfactory() (in module armi.physics.fuelcycle.fuelhandlerfactory)": [[218, "armi.physics.fuelCycle.fuelHandlerFactory.fuelHandlerFactory"]], "fuelhandlerinterface (class in armi.physics.fuelcycle.fuelhandlerinterface)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface"]], "armi.physics.fuelcycle.fuelhandlerinterface": [[219, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "interactboc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactBOC"]], "interacteoc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOC"]], "interacteol() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOL"]], "makeshufflereport() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.makeShuffleReport"]], "managefuel() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.manageFuel"]], "name (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface attribute)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.name"]], "specifyinputs() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface static method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.specifyInputs"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[219, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.workerOperate"]], "fuelhandler (class in armi.physics.fuelcycle.fuelhandlers)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler"]], "armi.physics.fuelcycle.fuelhandlers": [[220, "module-armi.physics.fuelCycle.fuelHandlers"]], "chooseswaps() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.chooseSwaps"]], "cs (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cs"]], "cycle (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cycle"]], "dischargeswap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.dischargeSwap"]], "dorepeatshuffle() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.doRepeatShuffle"]], "findassembly() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.findAssembly"]], "getfactorlist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.getFactorList"]], "isassemblyinazone() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.isAssemblyInAZone"]], "makeshufflearrows() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.makeShuffleArrows"]], "outage() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.outage"]], "prepcore() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepCore"]], "prepshufflemap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepShuffleMap"]], "processmovelist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.processMoveList"]], "r (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.r"]], "readmoves() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.readMoves"]], "repeatshufflepattern() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.repeatShufflePattern"]], "swapassemblies() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapAssemblies"]], "swapcascade() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapCascade"]], "trackchain() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.trackChain"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[220, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.workerOperate"]], "armi.physics.fuelcycle.hexassemblyfuelmgmtutils": [[221, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "buildconvergentringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[221, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildConvergentRingSchedule"]], "buildringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[221, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildRingSchedule"]], "getoptimalassemblyorientation() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[221, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.getOptimalAssemblyOrientation"]], "armi.physics.fuelcycle.settings": [[222, "module-armi.physics.fuelCycle.settings"]], "getfuelcyclesettingvalidators() (in module armi.physics.fuelcycle.settings)": [[222, "armi.physics.fuelCycle.settings.getFuelCycleSettingValidators"]], "getfuelcyclesettings() (in module armi.physics.fuelcycle.settings)": [[222, "armi.physics.fuelCycle.settings.getFuelCycleSettings"]], "armi.physics.fuelcycle.tests": [[223, "module-armi.physics.fuelCycle.tests"]], "testfuelhandlermgmttools (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools"]], "armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms": [[224, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "test_bureducingassemblyrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_buReducingAssemblyRotation"]], "test_simpleassemblyrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[224, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_simpleAssemblyRotation"]], "fuelhandlertesthelper (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.FuelHandlerTestHelper"]], "mocklatticephysicsinterface (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface"]], "mockxsgm (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM"]], "testfuelhandler (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler"]], "testfuelplugin (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin"]], "addsomedetailassemblies() (in module armi.physics.fuelcycle.tests.test_fuelhandlers)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.addSomeDetailAssemblies"]], "armi.physics.fuelcycle.tests.test_fuelhandlers": [[225, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.interactBOC"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mockxsgm method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM.interactBOC"]], "name (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface attribute)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.name"]], "runshuffling() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.runShuffling"]], "test_dischargeswap() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwap"]], "test_dischargeswapincompatiblestationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwapIncompatibleStationaryBlocks"]], "test_findbycoords() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findByCoords"]], "test_findhighbu() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findHighBu"]], "test_findinsfp() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findInSFP"]], "test_findmany() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findMany"]], "test_findwithminmax() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findWithMinMax"]], "test_getassembliesinrings() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getAssembliesInRings"]], "test_getfactorlist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getFactorList"]], "test_getparammax() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getParamMax"]], "test_interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_interactBOC"]], "test_isassemblyinazone() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_isAssemblyInAZone"]], "test_linpowbypin() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPin"]], "test_linpowbypingamma() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinGamma"]], "test_linpowbypinneutron() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinNeutron"]], "test_outage() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_outage"]], "test_outageedgecase() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_outageEdgeCase"]], "test_processmovelist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_processMoveList"]], "test_readmoves() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_readMoves"]], "test_repeatshuffles() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_repeatShuffles"]], "test_settingsarediscovered() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelplugin method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin.test_settingsAreDiscovered"]], "test_transferdifferentnumberstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferDifferentNumberStationaryBlocks"]], "test_transferincompatibleheightstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferIncompatibleHeightStationaryBlocks"]], "test_transferstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferStationaryBlocks"]], "test_transferunalignedlocationstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferUnalignedLocationStationaryBlocks"]], "test_width() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[225, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_width"]], "testhexassemmgmttools (class in armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils)": [[226, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools"]], "armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils": [[226, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "test_buildconvergentringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[226, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildConvergentRingSchedule"]], "test_buildringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[226, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildRingSchedule"]], "armi.physics.fuelperformance": [[227, "module-armi.physics.fuelPerformance"]], "fuelperformanceexecuter (class in armi.physics.fuelperformance.executers)": [[228, "armi.physics.fuelPerformance.executers.FuelPerformanceExecuter"]], "fuelperformanceoptions (class in armi.physics.fuelperformance.executers)": [[228, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions"]], "armi.physics.fuelperformance.executers": [[228, "module-armi.physics.fuelPerformance.executers"]], "fromreactor() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[228, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromReactor"]], "fromusersettings() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[228, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromUserSettings"]], "armi.physics.fuelperformance.parameters": [[229, "module-armi.physics.fuelPerformance.parameters"]], "getfuelperformanceparameterdefinitions() (in module armi.physics.fuelperformance.parameters)": [[229, "armi.physics.fuelPerformance.parameters.getFuelPerformanceParameterDefinitions"]], "fuelperformanceplugin (class in armi.physics.fuelperformance.plugin)": [[230, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin"]], "armi.physics.fuelperformance.plugin": [[230, "module-armi.physics.fuelPerformance.plugin"]], "defineparameters() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[230, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineParameters"]], "definesettings() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[230, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[230, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[230, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.exposeInterfaces"]], "armi.physics.fuelperformance.settings": [[231, "module-armi.physics.fuelPerformance.settings"]], "definesettings() (in module armi.physics.fuelperformance.settings)": [[231, "armi.physics.fuelPerformance.settings.defineSettings"]], "definevalidators() (in module armi.physics.fuelperformance.settings)": [[231, "armi.physics.fuelPerformance.settings.defineValidators"]], "armi.physics.fuelperformance.tests": [[232, "module-armi.physics.fuelPerformance.tests"]], "testfuelperformanceoptions (class in armi.physics.fuelperformance.tests.test_executers)": [[233, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions"]], "armi.physics.fuelperformance.tests.test_executers": [[233, "module-armi.physics.fuelPerformance.tests.test_executers"]], "test_fuelperformanceoptions() (armi.physics.fuelperformance.tests.test_executers.testfuelperformanceoptions method)": [[233, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions.test_fuelPerformanceOptions"]], "testfuelperformanceplugin (class in armi.physics.fuelperformance.tests.test_fuelperformanceplugin)": [[234, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin"]], "armi.physics.fuelperformance.tests.test_fuelperformanceplugin": [[234, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "plugin (armi.physics.fuelperformance.tests.test_fuelperformanceplugin.testfuelperformanceplugin attribute)": [[234, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin.plugin"]], "testfuelperformanceutils (class in armi.physics.fuelperformance.tests.test_fuelperformanceutils)": [[235, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils"]], "armi.physics.fuelperformance.tests.test_fuelperformanceutils": [[235, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "test_applyfueldisplacement() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[235, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_applyFuelDisplacement"]], "test_gasconductivitycorrection_morph0() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[235, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph0"]], "test_gasconductivitycorrection_morph1() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[235, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph1"]], "test_gasconductivitycorrection_morph2() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[235, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph2"]], "test_gasconductivitycorrection_morph3() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[235, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph3"]], "test_gasconductivitycorrection_morph4() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[235, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph4"]], "applyfueldisplacement() (in module armi.physics.fuelperformance.utils)": [[236, "armi.physics.fuelPerformance.utils.applyFuelDisplacement"]], "armi.physics.fuelperformance.utils": [[236, "module-armi.physics.fuelPerformance.utils"]], "gasconductivitycorrection() (in module armi.physics.fuelperformance.utils)": [[236, "armi.physics.fuelPerformance.utils.gasConductivityCorrection"]], "boc (armi.physics.neutronics.latticephysicsfrequency attribute)": [[237, "armi.physics.neutronics.LatticePhysicsFrequency.BOC"]], "bol (armi.physics.neutronics.latticephysicsfrequency attribute)": [[237, "armi.physics.neutronics.LatticePhysicsFrequency.BOL"]], "latticephysicsfrequency (class in armi.physics.neutronics)": [[237, "armi.physics.neutronics.LatticePhysicsFrequency"]], "neutronicsplugin (class in armi.physics.neutronics)": [[237, "armi.physics.neutronics.NeutronicsPlugin"]], "adjointcalculationrequested() (in module armi.physics.neutronics)": [[237, "armi.physics.neutronics.adjointCalculationRequested"]], "all (armi.physics.neutronics.latticephysicsfrequency attribute)": [[237, "armi.physics.neutronics.LatticePhysicsFrequency.all"]], "applyeffectivedelayedneutronfractiontocore() (in module armi.physics.neutronics)": [[237, "armi.physics.neutronics.applyEffectiveDelayedNeutronFractionToCore"]], "armi.physics.neutronics": [[237, "module-armi.physics.neutronics"]], "defineentrypoints() (armi.physics.neutronics.neutronicsplugin static method)": [[237, "armi.physics.neutronics.NeutronicsPlugin.defineEntryPoints"]], "defineparameters() (armi.physics.neutronics.neutronicsplugin static method)": [[237, "armi.physics.neutronics.NeutronicsPlugin.defineParameters"]], "definesettings() (armi.physics.neutronics.neutronicsplugin static method)": [[237, "armi.physics.neutronics.NeutronicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.neutronics.neutronicsplugin static method)": [[237, "armi.physics.neutronics.NeutronicsPlugin.defineSettingsValidators"]], "everynode (armi.physics.neutronics.latticephysicsfrequency attribute)": [[237, "armi.physics.neutronics.LatticePhysicsFrequency.everyNode"]], "exposeinterfaces() (armi.physics.neutronics.neutronicsplugin static method)": [[237, "armi.physics.neutronics.NeutronicsPlugin.exposeInterfaces"]], "firstcouplediteration (armi.physics.neutronics.latticephysicsfrequency attribute)": [[237, "armi.physics.neutronics.LatticePhysicsFrequency.firstCoupledIteration"]], "gammatransportisrequested() (in module armi.physics.neutronics)": [[237, "armi.physics.neutronics.gammaTransportIsRequested"]], "gammaxsarerequested() (in module armi.physics.neutronics)": [[237, "armi.physics.neutronics.gammaXsAreRequested"]], "getreportcontents() (armi.physics.neutronics.neutronicsplugin static method)": [[237, "armi.physics.neutronics.NeutronicsPlugin.getReportContents"]], "never (armi.physics.neutronics.latticephysicsfrequency attribute)": [[237, "armi.physics.neutronics.LatticePhysicsFrequency.never"]], "onprocesscoreloading() (armi.physics.neutronics.neutronicsplugin static method)": [[237, "armi.physics.neutronics.NeutronicsPlugin.onProcessCoreLoading"]], "realcalculationrequested() (in module armi.physics.neutronics)": [[237, "armi.physics.neutronics.realCalculationRequested"]], "armi.physics.neutronics.const": [[238, "module-armi.physics.neutronics.const"]], "averageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[239, "armi.physics.neutronics.crossSectionGroupManager.AverageBlockCollection"]], "blockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[239, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection"]], "crosssectiongroupmanager (class in armi.physics.neutronics.crosssectiongroupmanager)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager"]], "cylindricalcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CylindricalComponentsAverageBlockCollection"]], "fluxweightedaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[239, "armi.physics.neutronics.crossSectionGroupManager.FluxWeightedAverageBlockCollection"]], "medianblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[239, "armi.physics.neutronics.crossSectionGroupManager.MedianBlockCollection"]], "slabcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[239, "armi.physics.neutronics.crossSectionGroupManager.SlabComponentsAverageBlockCollection"]], "armi.physics.neutronics.crosssectiongroupmanager": [[239, "module-armi.physics.neutronics.crossSectionGroupManager"]], "blockcollectionfactory() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[239, "armi.physics.neutronics.crossSectionGroupManager.blockCollectionFactory"]], "calcavgnuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.calcAvgNuclideTemperatures"]], "clearrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.clearRepresentativeBlocks"]], "createrepresentativeblock() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.createRepresentativeBlock"]], "createrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocks"]], "createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocksUsingExistingBlocks"]], "describeinterfaces() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[239, "armi.physics.neutronics.crossSectionGroupManager.describeInterfaces"]], "disablebugroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.disableBuGroupUpdates"]], "enablebugroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.enableBuGroupUpdates"]], "fluxsolutionispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.fluxSolutionIsPregenerated"]], "getblocknuclidetemperatureavgterms() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[239, "armi.physics.neutronics.crossSectionGroupManager.getBlockNuclideTemperatureAvgTerms"]], "getcandidateblocks() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getCandidateBlocks"]], "getnextavailablexstypes() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNextAvailableXsTypes"]], "getnuctemperature() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNucTemperature"]], "getweight() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getWeight"]], "getxstypelabelfromnumber() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[239, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeLabelFromNumber"]], "getxstypenumberfromlabel() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[239, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeNumberFromLabel"]], "interactboc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOC"]], "interactbol() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOL"]], "interactcoupled() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactCoupled"]], "interacteoc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEOC"]], "interacteverynode() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEveryNode"]], "makecrosssectiongroups() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.makeCrossSectionGroups"]], "name (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager attribute)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.name"]], "updatenuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.updateNuclideTemperatures"]], "xstypeispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[239, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.xsTypeIsPregenerated"]], "one_dimensional_cylinder (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[240, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_CYLINDER"]], "one_dimensional_slab (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[240, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_SLAB"]], "two_dimensional_hex (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[240, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.TWO_DIMENSIONAL_HEX"]], "xsgeometrytypes (class in armi.physics.neutronics.crosssectionsettings)": [[240, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes"]], "xsmodelingoptions (class in armi.physics.neutronics.crosssectionsettings)": [[240, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions"]], "xssettingdef (class in armi.physics.neutronics.crosssectionsettings)": [[240, "armi.physics.neutronics.crossSectionSettings.XSSettingDef"]], "xssettings (class in armi.physics.neutronics.crosssectionsettings)": [[240, "armi.physics.neutronics.crossSectionSettings.XSSettings"]], "zero_dimensional (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[240, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ZERO_DIMENSIONAL"]], "armi.physics.neutronics.crosssectionsettings": [[240, "module-armi.physics.neutronics.crossSectionSettings"]], "bugroup (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[240, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.buGroup"]], "dump() (armi.physics.neutronics.crosssectionsettings.xssettingdef method)": [[240, "armi.physics.neutronics.crossSectionSettings.XSSettingDef.dump"]], "fluxispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[240, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.fluxIsPregenerated"]], "getstr() (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes class method)": [[240, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.getStr"]], "serialize() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[240, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.serialize"]], "serializexssettings() (in module armi.physics.neutronics.crosssectionsettings)": [[240, "armi.physics.neutronics.crossSectionSettings.serializeXSSettings"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[240, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.setDefaults"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xssettings method)": [[240, "armi.physics.neutronics.crossSectionSettings.XSSettings.setDefaults"]], "validate() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[240, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.validate"]], "xsispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[240, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsIsPregenerated"]], "xssettingsvalidator() (in module armi.physics.neutronics.crosssectionsettings)": [[240, "armi.physics.neutronics.crossSectionSettings.xsSettingsValidator"]], "xstype (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[240, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsType"]], "compareisotxslibraries (class in armi.physics.neutronics.diffisotxs)": [[241, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries"]], "addoptions() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[241, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.addOptions"]], "armi.physics.neutronics.diffisotxs": [[241, "module-armi.physics.neutronics.diffIsotxs"]], "invoke() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[241, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.invoke"]], "name (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[241, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.name"]], "settingsargument (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[241, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.settingsArgument"]], "group_structure (in module armi.physics.neutronics.energygroups)": [[242, "armi.physics.neutronics.energyGroups.GROUP_STRUCTURE"]], "armi.physics.neutronics.energygroups": [[242, "module-armi.physics.neutronics.energyGroups"]], "getfastfluxgroupcutoff() (in module armi.physics.neutronics.energygroups)": [[242, "armi.physics.neutronics.energyGroups.getFastFluxGroupCutoff"]], "getgroupstructure() (in module armi.physics.neutronics.energygroups)": [[242, "armi.physics.neutronics.energyGroups.getGroupStructure"]], "getgroupstructuretype() (in module armi.physics.neutronics.energygroups)": [[242, "armi.physics.neutronics.energyGroups.getGroupStructureType"]], "armi.physics.neutronics.fissionproductmodel": [[243, "module-armi.physics.neutronics.fissionProductModel"]], "fissionproductmodel (class in armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodel": [[244, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "describeinterfaces() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModel.describeInterfaces"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getAllFissionProductNames"]], "getgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getGlobalLumpedFissionProducts"]], "interactboc() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOC"]], "interactbol() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOL"]], "interactdistributestate() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactDistributeState"]], "name (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel attribute)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.name"]], "removefissiongasesfromblocks() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.removeFissionGasesFromBlocks"]], "setallblocklfps() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllBlockLFPs"]], "setallcomponentfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllComponentFissionProducts"]], "setgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings": [[245, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "definesettings() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.defineSettings"]], "getfissionproductmodelsettingvalidators() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[245, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.getFissionProductModelSettingValidators"]], "fissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile"]], "lumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct"]], "lumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection"]], "armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct": [[246, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "createlfpsfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createLFPsFromFile"]], "createsinglelfpfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createSingleLFPFromFile"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.duplicate"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.duplicate"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNames"]], "getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNuclideBases"]], "getgaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getGaseousYieldFraction"]], "getlumpedfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getLumpedFissionProductNames"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFrac"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getMassFrac"]], "getmassfracdenom() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracDenom"]], "getmassfracs() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracs"]], "getnumberdensities() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getNumberDensities"]], "gettotalyield() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getTotalYield"]], "isgas() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.isGas"]], "items() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.items"]], "keys() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.keys"]], "lumpedfissionproductfactory() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.lumpedFissionProductFactory"]], "values() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[246, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.values"]], "armi.physics.neutronics.fissionproductmodel.tests": [[247, "module-armi.physics.neutronics.fissionProductModel.tests"]], "testfissionproductmodelexplicitmc2library (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library"]], "testfissionproductmodelexplicitmc2libraryslower (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower"]], "testfissionproductmodellumpedfissionproducts (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel": [[248, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "test_fpapplication() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_fpApplication"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_getAllFissionProductNames"]], "test_loadgloballfpsfromfile() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_loadGlobalLFPsFromFile"]], "test_nuclideflags() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclideFlags"]], "test_nuclidesinmodelalldepletableblocks() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2libraryslower method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower.test_nuclidesInModelAllDepletableBlocks"]], "test_nuclidesinmodelfuel() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclidesInModelFuel"]], "testfissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile"]], "testlumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct"]], "testlumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection"]], "testlumpedfissionproductsexplicit (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit"]], "testlumpedfissionproductsfromreferencefile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile"]], "testmo99lfp (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP"]], "armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct": [[249, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "getdummylfpfile() (in module armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.getDummyLFPFile"]], "test_createlfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createLFPs"]], "test_createreferencelfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createReferenceLFPs"]], "test_duplicate() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_duplicate"]], "test_explicitfissionproducts() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsexplicit method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit.test_explicitFissionProducts"]], "test_fissionproductyields() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsfromreferencefile method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile.test_fissionProductYields"]], "test_gaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_gaseousYieldFraction"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNames"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testmo99lfp method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP.test_getAllFissionProductNames"]], "test_getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNuclideBases"]], "test_getmassfrac() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getMassFrac"]], "test_getnumberdensities() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getNumberDensities"]], "test_getyield() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_getYield"]], "test_isgas() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[249, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_isGas"]], "armi.physics.neutronics.globalflux": [[250, "module-armi.physics.neutronics.globalFlux"]], "globalfluxexecuter (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter"]], "globalfluxinterface (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface"]], "globalfluxinterfaceusingexecuters (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters"]], "globalfluxoptions (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions"]], "globalfluxresultmapper (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper"]], "armi.physics.neutronics.globalflux.globalfluxinterface": [[251, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "calcreactionrates() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.calcReactionRates"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.calculateKeff"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.calculateKeff"]], "checkenergybalance() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.checkEnergyBalance"]], "clearflux() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.clearFlux"]], "computedparate() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.computeDpaRate"]], "edgeassembliesareneeded() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxexecuter method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter.edgeAssembliesAreNeeded"]], "fromreactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromReactor"]], "fromusersettings() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromUserSettings"]], "function (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.function"]], "getburnuppeakingfactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getBurnupPeakingFactor"]], "getdpaxs() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getDpaXs"]], "getexecuter() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuter"]], "getexecutercls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterOptions"]], "gethistoryparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface static method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getHistoryParams"]], "getiofilenames() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getIOFileNames"]], "getkeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getKeff"]], "getlabel() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getLabel"]], "getoptionscls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getOptionsCls"]], "gettightcouplingvalue() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getTightCouplingValue"]], "interactboc() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactBOC"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactCoupled"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactCoupled"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactEveryNode"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactEveryNode"]], "name (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.name"]], "updatedparate() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateDpaRate"]], "updatemaxdpaparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[251, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateMaxDpaParams"]], "armi.physics.neutronics.globalflux.tests": [[252, "module-armi.physics.neutronics.globalFlux.tests"]], "mockcore (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCore"]], "mockcoreparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCoreParams"]], "mockglobalfluxexecuter (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxExecuter"]], "mockglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface"]], "mockglobalfluxwithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters"]], "mockglobalfluxwithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform"]], "mockreactor (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactor"]], "mockreactorparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactorParams"]], "testglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface"]], "testglobalfluxinterfacewithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters"]], "testglobalfluxinterfacewithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform"]], "testglobalfluxoptions (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions"]], "testglobalfluxresultmapper (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper"]], "testglobalfluxutils (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils"]], "applydummyflux() (in module armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.applyDummyFlux"]], "armi.physics.neutronics.globalflux.tests.test_globalfluxinterface": [[253, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecuters method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecutersnonuniform method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform.getExecuterOptions"]], "interactboc() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactBOC"]], "interacteverynode() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactEveryNode"]], "test_calcreactionrates() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxutils method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils.test_calcReactionRates"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_calculateKeff"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_calculateKeff"]], "test_checkenergybalance() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_checkEnergyBalance"]], "test_computedparate() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_computeDpaRate"]], "test_executerinteraction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_executerInteraction"]], "test_executerinteractionnonuniformassems() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_executerInteractionNonUniformAssems"]], "test_getburnuppeakingfactor() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactor"]], "test_getburnuppeakingfactorzero() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactorZero"]], "test_getdpaxs() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getDpaXs"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getExecuterCls"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_getExecuterCls"]], "test_gethistoryparams() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getHistoryParams"]], "test_getiofilenames() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getIOFileNames"]], "test_gettightcouplingvalue() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getTightCouplingValue"]], "test_interaction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_interaction"]], "test_mapper() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_mapper"]], "test_readfromreactors() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromReactors"]], "test_readfromsettings() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromSettings"]], "test_savephysicsfiles() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_savePhysicsFiles"]], "test_settightcouplingdefaults() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[253, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_setTightCouplingDefaults"]], "armi.physics.neutronics.latticephysics": [[254, "module-armi.physics.neutronics.latticePhysics"]], "latticephysicsinterface (class in armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface"]], "armi.physics.neutronics.latticephysics.latticephysicsinterface": [[255, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "clearxs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.clearXS"]], "computecrosssections() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.computeCrossSections"]], "function (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.function"]], "generatelatticephysicsinputs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.generateLatticePhysicsInputs"]], "getreader() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getReader"]], "getrepresentativeblocks() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getRepresentativeBlocks"]], "getwriters() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getWriters"]], "interactboc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOC"]], "interactbol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOL"]], "interactcoupled() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactCoupled"]], "interacteoc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEOC"]], "interacteverynode() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEveryNode"]], "makecyclexsfilesasbasefiles() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.makeCycleXSFilesAsBaseFiles"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.readExistingXSLibraries"]], "setblockneutronvelocities() (in module armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.setBlockNeutronVelocities"]], "updatephysicscouplingcontrol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updatePhysicsCouplingControl"]], "updatexslibrary() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updateXSLibrary"]], "coolant_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.COOLANT_CATEGORY"]], "depletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.DEPLETABLE"]], "fission_product_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FISSION_PRODUCT_CATEGORY"]], "fuel_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FUEL_CATEGORY"]], "latticephysicswriter (class in armi.physics.neutronics.latticephysics.latticephysicswriter)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter"]], "represented (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.REPRESENTED"]], "structure_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.STRUCTURE_CATEGORY"]], "undepletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNDEPLETABLE"]], "unrepresented (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNREPRESENTED"]], "unused_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNUSED_CATEGORY"]], "armi.physics.neutronics.latticephysics.latticephysicswriter": [[256, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "write() (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter method)": [[256, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.write"]], "armi.physics.neutronics.latticephysics.tests": [[257, "module-armi.physics.neutronics.latticePhysics.tests"]], "latticeinterfacetester (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester"]], "latticeinterfacetesterlibfalse (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTesterLibFalse"]], "testlatticephysicsinterface (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface"]], "testlatticephysicsinterfacebase (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterfaceBase"]], "testlatticephysicslibrarycreation (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticephysics.tests.test_latticeinterface": [[258, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.latticeinterfacetester method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester.readExistingXSLibraries"]], "test_getsuffix() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_getSuffix"]], "test_includegammaxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_includeGammaXS"]], "test_interactall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactAll"]], "test_interactboc() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNode"]], "test_interacteverynodeall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeAll"]], "test_interacteverynodefirstcoupled() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeFirstCoupled"]], "test_interacteverynodewhencoupled() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeWhenCoupled"]], "test_interacteverynodewhencoupledbutnot() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeWhenCoupledButNot"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactFirstCoupledIteration"]], "test_latticephysicsinterface() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_latticePhysicsInterface"]], "test_libcreation_genxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS"]], "test_libcreation_genxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_2"]], "test_libcreation_genxs_3() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_3"]], "test_libcreation_nogenxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS"]], "test_libcreation_nogenxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS_2"]], "fakelatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter"]], "testlatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticephysics.tests.test_latticewriter": [[259, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "test_getallnuclidesbytemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInC"]], "test_getallnuclidesbytemperatureincexplicitfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCExplicitFissionProducts"]], "test_getallnuclidesbytemperatureincnone() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCNone"]], "test_getavgnuclidetemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAvgNuclideTemperatureInC"]], "test_getdetailedfpdensities() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFPDensities"]], "test_getdetailedfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProducts"]], "test_getdetailedfissionproductspass() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProductsPass"]], "test_getdriverblock() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDriverBlock"]], "test_getfueltemperature() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getFuelTemperature"]], "test_iscriticalbucklingsearchactive() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isCriticalBucklingSearchActive"]], "test_isgammaxsgenerationenabled() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isGammaXSGenerationEnabled"]], "test_issourcedriven() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isSourceDriven"]], "test_latticephysicswriter() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_latticePhysicsWriter"]], "test_setblockneutronvelocities() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_setBlockNeutronVelocities"]], "test_writetitle() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_writeTitle"]], "write() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.fakelatticephysicswriter method)": [[259, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter.write"]], "macroxsgenerationinterface (class in armi.physics.neutronics.macroxsgenerationinterface)": [[260, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface"]], "macroxsgenerator (class in armi.physics.neutronics.macroxsgenerationinterface)": [[260, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator"]], "armi.physics.neutronics.macroxsgenerationinterface": [[260, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "buildmacros() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface method)": [[260, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.buildMacros"]], "invokehook() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerator method)": [[260, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator.invokeHook"]], "name (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface attribute)": [[260, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.name"]], "armi.physics.neutronics.parameters": [[261, "module-armi.physics.neutronics.parameters"]], "getneutronicsparameterdefinitions() (in module armi.physics.neutronics.parameters)": [[261, "armi.physics.neutronics.parameters.getNeutronicsParameterDefinitions"]], "pd_plot (in module armi.physics.neutronics.reports)": [[262, "armi.physics.neutronics.reports.PD_PLOT"]], "armi.physics.neutronics.reports": [[262, "module-armi.physics.neutronics.reports"]], "generatelineplot() (in module armi.physics.neutronics.reports)": [[262, "armi.physics.neutronics.reports.generateLinePlot"]], "insertinitialcorefuelassem() (in module armi.physics.neutronics.reports)": [[262, "armi.physics.neutronics.reports.insertInitialCoreFuelAssem"]], "insertneutronicsbolcontent() (in module armi.physics.neutronics.reports)": [[262, "armi.physics.neutronics.reports.insertNeutronicsBOLContent"]], "insertneutronicsreport() (in module armi.physics.neutronics.reports)": [[262, "armi.physics.neutronics.reports.insertNeutronicsReport"]], "neutronicsplotting() (in module armi.physics.neutronics.reports)": [[262, "armi.physics.neutronics.reports.neutronicsPlotting"]], "armi.physics.neutronics.settings": [[263, "module-armi.physics.neutronics.settings"]], "definesettings() (in module armi.physics.neutronics.settings)": [[263, "armi.physics.neutronics.settings.defineSettings"]], "getneutronicssettingvalidators() (in module armi.physics.neutronics.settings)": [[263, "armi.physics.neutronics.settings.getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[264, "module-armi.physics.neutronics.tests"]], "testblockcollection (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection"]], "testblockcollectionaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage"]], "testblockcollectioncomponentaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage"]], "testblockcollectioncomponentaverage1dcylinder (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder"]], "testblockcollectionfluxweightedaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage"]], "testblockcollectionmedian (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian"]], "testcomponentaveraging (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging"]], "testcrosssectiongroupmanager (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager"]], "testxsnumberconverters (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters"]], "armi.physics.neutronics.tests.test_crosssectionmanager": [[265, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "makeblocks() (in module armi.physics.neutronics.tests.test_crosssectionmanager)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.makeBlocks"]], "test_componentaverage1dcylinder() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_ComponentAverage1DCylinder"]], "test_componentaveragerepblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage.test_ComponentAverageRepBlock"]], "test_add() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_add"]], "test_addxsgroupsfromblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_addXsGroupsFromBlocks"]], "test_calcweightedburnup() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_calcWeightedBurnup"]], "test_checkblocksimilarity() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_checkBlockSimilarity"]], "test_checkcomponentconsistency() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_checkComponentConsistency"]], "test_conversion() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion"]], "test_conversion_2digit() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion_2digit"]], "test_copypregeneratedfiles() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_copyPregeneratedFiles"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionmedian method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian.test_createRepresentativeBlock"]], "test_createrepresentativeblockdissimilar() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlockDissimilar"]], "test_createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_createRepresentativeBlocksUsingExistingBlocks"]], "test_createrepresentativeblocksusingexistingblocksdisablevalidblocktypes() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_createRepresentativeBlocksUsingExistingBlocksDisableValidBlockTypes"]], "test_disablebugroupupdates() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_disableBuGroupUpdates"]], "test_enablebugroupupdates() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_enableBuGroupUpdates"]], "test_getaveragecomponentnumberdensities() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentNumberDensities"]], "test_getaveragecomponenttemperature() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperature"]], "test_getaveragecomponenttemperaturenomass() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperatureNoMass"]], "test_getaveragecomponenttemperaturevariedweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperatureVariedWeights"]], "test_getblocksingroup() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_getBlocksInGroup"]], "test_getnextavailablexstype() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_getNextAvailableXsType"]], "test_getrepresentativeblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_getRepresentativeBlocks"]], "test_interactallcoupled() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactAllCoupled"]], "test_interactboc() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactEveryNode"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactFirstCoupledIteration"]], "test_invalidweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_invalidWeights"]], "test_is_pickleable() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_is_pickleable"]], "test_performaveragebycomponent() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_performAverageByComponent"]], "test_setbugroupbounds() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_setBuGroupBounds"]], "test_updateburnupgroups() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_updateBurnupGroups"]], "test_xsgmisrunbeforexs() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[265, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_xsgmIsRunBeforeXS"]], "testcrosssectionsettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings"]], "testxssettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings"]], "armi.physics.neutronics.tests.test_crosssectionsettings": [[266, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "test_badcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_badCrossSections"]], "test_casesettings() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_caseSettings"]], "test_crosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_crossSections"]], "test_csblockrepresentation() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_csBlockRepresentation"]], "test_csblockrepresentationfilelocation() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_csBlockRepresentationFileLocation"]], "test_homogeneousxsdefaultsettingassignment() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_homogeneousXsDefaultSettingAssignment"]], "test_optionalkey() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_optionalKey"]], "test_pregeneratedcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedCrossSections"]], "test_pregeneratedfluxinputs() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedFluxInputs"]], "test_prioritization() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_prioritization"]], "test_setdefaultsettingsbylowestbugrouphomogeneous() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestBuGroupHomogeneous"]], "test_setdefaultsettingsbylowestbugrouponedimensional() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestBuGroupOneDimensional"]], "test_xssettingssetdefault() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_xsSettingsSetDefault"]], "test_yamlio() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[266, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_yamlIO"]], "testcrosssectiontable (class in armi.physics.neutronics.tests.test_crosssectiontable)": [[267, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crosssectiontable": [[267, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "test_isotopicdepletioninterface() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[267, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_isotopicDepletionInterface"]], "test_maketable() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[267, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_makeTable"]], "testenergygroups (class in armi.physics.neutronics.tests.test_energygroups)": [[268, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energygroups": [[268, "module-armi.physics.neutronics.tests.test_energyGroups"]], "test_consistenciesbetweengroupstructureandgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[268, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_consistenciesBetweenGroupStructureAndGroupStructureType"]], "test_getfastfluxgroupcutoff() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[268, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_getFastFluxGroupCutoff"]], "test_invalidgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[268, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_invalidGroupStructureType"]], "testmacroxsgenerationinterface (class in armi.physics.neutronics.tests.test_macroxsgenerationinterface)": [[269, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroxsgenerationinterface": [[269, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "test_macroxsgenerationinterfacebasics() (armi.physics.neutronics.tests.test_macroxsgenerationinterface.testmacroxsgenerationinterface method)": [[269, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface.test_macroXSGenerationInterfaceBasics"]], "neutronicsreactortests (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[270, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests"]], "testneutronicsplugin (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[270, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsplugin": [[270, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "plugin (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin attribute)": [[270, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.plugin"]], "test_customsettingobjectio() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[270, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_customSettingObjectIO"]], "test_customsettingroundtrip() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[270, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_customSettingRoundTrip"]], "test_kineticsparameterassignment() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[270, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_kineticsParameterAssignment"]], "test_neutronicssettingsloaded() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[270, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_neutronicsSettingsLoaded"]], "test_neutronicssettingsvalidators() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[270, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_neutronicsSettingsValidators"]], "safetyplugin (class in armi.physics.safety)": [[271, "armi.physics.safety.SafetyPlugin"]], "armi.physics.safety": [[271, "module-armi.physics.safety"]], "definesettings() (armi.physics.safety.safetyplugin static method)": [[271, "armi.physics.safety.SafetyPlugin.defineSettings"]], "armi.physics.tests": [[272, "module-armi.physics.tests"]], "mockcore (class in armi.physics.tests.test_executers)": [[273, "armi.physics.tests.test_executers.MockCore"]], "mockparams (class in armi.physics.tests.test_executers)": [[273, "armi.physics.tests.test_executers.MockParams"]], "mockreactor (class in armi.physics.tests.test_executers)": [[273, "armi.physics.tests.test_executers.MockReactor"]], "testexecuters (class in armi.physics.tests.test_executers)": [[273, "armi.physics.tests.test_executers.TestExecuters"]], "testexecutionoptions (class in armi.physics.tests.test_executers)": [[273, "armi.physics.tests.test_executers.TestExecutionOptions"]], "armi.physics.tests.test_executers": [[273, "module-armi.physics.tests.test_executers"]], "test_collectinputsandoutputs() (armi.physics.tests.test_executers.testexecuters method)": [[273, "armi.physics.tests.test_executers.TestExecuters.test_collectInputsAndOutputs"]], "test_runexternalexecutable() (armi.physics.tests.test_executers.testexecuters method)": [[273, "armi.physics.tests.test_executers.TestExecuters.test_runExternalExecutable"]], "test_runningdirectorypath() (armi.physics.tests.test_executers.testexecutionoptions method)": [[273, "armi.physics.tests.test_executers.TestExecutionOptions.test_runningDirectoryPath"]], "test_updaterundir() (armi.physics.tests.test_executers.testexecuters method)": [[273, "armi.physics.tests.test_executers.TestExecuters.test_updateRunDir"]], "armi.physics.thermalhydraulics": [[274, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalhydraulics.const": [[275, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalhydraulics.parameters": [[276, "module-armi.physics.thermalHydraulics.parameters"]], "getparameterdefinitions() (in module armi.physics.thermalhydraulics.parameters)": [[276, "armi.physics.thermalHydraulics.parameters.getParameterDefinitions"]], "thermalhydraulicsplugin (class in armi.physics.thermalhydraulics.plugin)": [[277, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin"]], "afterconstructionofassemblies() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[277, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.afterConstructionOfAssemblies"]], "armi.physics.thermalhydraulics.plugin": [[277, "module-armi.physics.thermalHydraulics.plugin"]], "defineparameters() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[277, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineParameters"]], "definesettings() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[277, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[277, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[277, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.exposeInterfaces"]], "armi.physics.thermalhydraulics.settings": [[278, "module-armi.physics.thermalHydraulics.settings"]], "definesettings() (in module armi.physics.thermalhydraulics.settings)": [[278, "armi.physics.thermalHydraulics.settings.defineSettings"]], "definevalidators() (in module armi.physics.thermalhydraulics.settings)": [[278, "armi.physics.thermalHydraulics.settings.defineValidators"]], "armi.physics.thermalhydraulics.tests": [[279, "module-armi.physics.thermalHydraulics.tests"]], "testthermalhydraulicsplugin (class in armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin)": [[280, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin"]], "armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin": [[280, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"]], "plugin (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin attribute)": [[280, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.plugin"]], "test_thermalhydraulicssettingsloaded() (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin method)": [[280, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.test_thermalHydraulicsSettingsLoaded"]], "test_thermalhydraulicssettingsset() (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin method)": [[280, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.test_thermalHydraulicsSettingsSet"]], "armipluginmanager (class in armi.pluginmanager)": [[281, "armi.pluginManager.ArmiPluginManager"]], "armi.pluginmanager": [[281, "module-armi.pluginManager"]], "counter (armi.pluginmanager.armipluginmanager property)": [[281, "armi.pluginManager.ArmiPluginManager.counter"]], "register() (armi.pluginmanager.armipluginmanager method)": [[281, "armi.pluginManager.ArmiPluginManager.register"]], "unregister() (armi.pluginmanager.armipluginmanager method)": [[281, "armi.pluginManager.ArmiPluginManager.unregister"]], "armiplugin (class in armi.plugins)": [[282, "armi.plugins.ArmiPlugin"]], "pluginerror": [[282, "armi.plugins.PluginError"]], "userplugin (class in armi.plugins)": [[282, "armi.plugins.UserPlugin"]], "afterconstructionofassemblies() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.afterConstructionOfAssemblies"]], "armi.plugins": [[282, "module-armi.plugins"]], "beforereactorconstruction() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.beforeReactorConstruction"]], "collectinterfacedescriptions() (in module armi.plugins)": [[282, "armi.plugins.collectInterfaceDescriptions"]], "defineassemblytypes() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.defineBlockTypes"]], "defineblueprintssections() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.defineBlueprintsSections"]], "definecasedependencies() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.defineEntryPoints"]], "defineflags() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.defineFlags"]], "defineguiwidgets() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.defineGuiWidgets"]], "defineparameterrenames() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.defineParameterRenames"]], "defineparameterrenames() (armi.plugins.userplugin static method)": [[282, "armi.plugins.UserPlugin.defineParameterRenames"]], "defineparameters() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.defineParameters"]], "defineparameters() (armi.plugins.userplugin static method)": [[282, "armi.plugins.UserPlugin.defineParameters"]], "definesettings() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.defineSettings"]], "definesettings() (armi.plugins.userplugin static method)": [[282, "armi.plugins.UserPlugin.defineSettings"]], "definesettingsvalidators() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.defineSettingsValidators"]], "definesettingsvalidators() (armi.plugins.userplugin static method)": [[282, "armi.plugins.UserPlugin.defineSettingsValidators"]], "definesystembuilders() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.defineSystemBuilders"]], "exposeinterfaces() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.exposeInterfaces"]], "getaxialexpansionchanger() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.getAxialExpansionChanger"]], "getnewpluginmanager() (in module armi.plugins)": [[282, "armi.plugins.getNewPluginManager"]], "getoperatorclassfromruntype() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.getOperatorClassFromRunType"]], "getreportcontents() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.mpiActionRequiresReset"]], "onprocesscoreloading() (armi.plugins.armiplugin static method)": [[282, "armi.plugins.ArmiPlugin.onProcessCoreLoading"]], "reactorplugin (class in armi.reactor)": [[283, "armi.reactor.ReactorPlugin"]], "armi.reactor": [[283, "module-armi.reactor"]], "beforereactorconstruction() (armi.reactor.reactorplugin static method)": [[283, "armi.reactor.ReactorPlugin.beforeReactorConstruction"]], "defineassemblytypes() (armi.reactor.reactorplugin static method)": [[283, "armi.reactor.ReactorPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.reactor.reactorplugin static method)": [[283, "armi.reactor.ReactorPlugin.defineBlockTypes"]], "definesystembuilders() (armi.reactor.reactorplugin static method)": [[283, "armi.reactor.ReactorPlugin.defineSystemBuilders"]], "getaxialexpansionchanger() (armi.reactor.reactorplugin static method)": [[283, "armi.reactor.ReactorPlugin.getAxialExpansionChanger"]], "assembly (class in armi.reactor.assemblies)": [[284, "armi.reactor.assemblies.Assembly"]], "cartesianassembly (class in armi.reactor.assemblies)": [[284, "armi.reactor.assemblies.CartesianAssembly"]], "database (armi.reactor.assemblies.assembly attribute)": [[284, "armi.reactor.assemblies.Assembly.DATABASE"]], "hexassembly (class in armi.reactor.assemblies)": [[284, "armi.reactor.assemblies.HexAssembly"]], "load_queue (armi.reactor.assemblies.assembly attribute)": [[284, "armi.reactor.assemblies.Assembly.LOAD_QUEUE"]], "not_in_core (armi.reactor.assemblies.assembly attribute)": [[284, "armi.reactor.assemblies.Assembly.NOT_IN_CORE"]], "rzassembly (class in armi.reactor.assemblies)": [[284, "armi.reactor.assemblies.RZAssembly"]], "spent_fuel_pool (armi.reactor.assemblies.assembly attribute)": [[284, "armi.reactor.assemblies.Assembly.SPENT_FUEL_POOL"]], "thrzassembly (class in armi.reactor.assemblies)": [[284, "armi.reactor.assemblies.ThRZAssembly"]], "add() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.add"]], "adjustresolution() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.adjustResolution"]], "armi.reactor.assemblies": [[284, "module-armi.reactor.assemblies"]], "calculatezcoords() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.calculateZCoords"]], "coords() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.coords"]], "countblockswithflags() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.countBlocksWithFlags"]], "dump() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.dump"]], "getage() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getAge"]], "getarea() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getArea"]], "getaverageplenumtemperature() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getAveragePlenumTemperature"]], "getaxialmesh() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getAxialMesh"]], "getbindexfromzindex() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getBIndexFromZIndex"]], "getblockatelevation() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getBlockAtElevation"]], "getblocks() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getBlocks"]], "getblocksandz() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getBlocksAndZ"]], "getblocksbetweenelevations() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getBlocksBetweenElevations"]], "getdim() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getDim"]], "getelevationboundariesbyblocktype() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getElevationBoundariesByBlockType"]], "getelevationsmatchingparamvalue() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getElevationsMatchingParamValue"]], "getfirstblock() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getFirstBlock"]], "getfirstblockbytype() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getFirstBlockByType"]], "getheight() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getHeight"]], "getlocation() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getLocation"]], "getnum() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getNum"]], "getparamofzfunction() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getParamOfZFunction"]], "getparamvaluesatz() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getParamValuesAtZ"]], "getpinplenumvolumeincubicmeters() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getPinPlenumVolumeInCubicMeters"]], "getreactiveheight() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getReactiveHeight"]], "getsymmetryfactor() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getSymmetryFactor"]], "gettotalheight() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getTotalHeight"]], "getvolume() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.getVolume"]], "hascontinuouscoolantchannel() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.hasContinuousCoolantChannel"]], "insert() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.insert"]], "isonwhichsymmetryline() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.isOnWhichSymmetryLine"]], "makeaxialsnaplist() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.makeAxialSnapList"]], "makenamefromassemnum() (armi.reactor.assemblies.assembly static method)": [[284, "armi.reactor.assemblies.Assembly.makeNameFromAssemNum"]], "makeunique() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.makeUnique"]], "moveto() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.moveTo"]], "pdefs (armi.reactor.assemblies.assembly attribute)": [[284, "armi.reactor.assemblies.Assembly.pDefs"]], "paramcollectiontype (armi.reactor.assemblies.assembly attribute)": [[284, "armi.reactor.assemblies.Assembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.cartesianassembly attribute)": [[284, "armi.reactor.assemblies.CartesianAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.hexassembly attribute)": [[284, "armi.reactor.assemblies.HexAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.rzassembly attribute)": [[284, "armi.reactor.assemblies.RZAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.thrzassembly attribute)": [[284, "armi.reactor.assemblies.ThRZAssembly.paramCollectionType"]], "radialinner() (armi.reactor.assemblies.rzassembly method)": [[284, "armi.reactor.assemblies.RZAssembly.radialInner"]], "radialouter() (armi.reactor.assemblies.rzassembly method)": [[284, "armi.reactor.assemblies.RZAssembly.radialOuter"]], "reestablishblockorder() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.reestablishBlockOrder"]], "renameblocksaccordingtoassemblynum() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.renameBlocksAccordingToAssemblyNum"]], "renumber() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.renumber"]], "rotate() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.rotate"]], "rotate() (armi.reactor.assemblies.hexassembly method)": [[284, "armi.reactor.assemblies.HexAssembly.rotate"]], "setblockheights() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.setBlockHeights"]], "setblockmesh() (armi.reactor.assemblies.assembly method)": [[284, "armi.reactor.assemblies.Assembly.setBlockMesh"]], "thetainner() (armi.reactor.assemblies.rzassembly method)": [[284, "armi.reactor.assemblies.RZAssembly.thetaInner"]], "thetaouter() (armi.reactor.assemblies.rzassembly method)": [[284, "armi.reactor.assemblies.RZAssembly.thetaOuter"]], "armi.reactor.assemblyparameters": [[285, "module-armi.reactor.assemblyParameters"]], "getassemblyparameterdefinitions() (in module armi.reactor.assemblyparameters)": [[285, "armi.reactor.assemblyParameters.getAssemblyParameterDefinitions"]], "armi.reactor.blockparameters": [[286, "module-armi.reactor.blockParameters"]], "getblockparameterdefinitions() (in module armi.reactor.blockparameters)": [[286, "armi.reactor.blockParameters.getBlockParameterDefinitions"]], "block (class in armi.reactor.blocks)": [[287, "armi.reactor.blocks.Block"]], "cartesianblock (class in armi.reactor.blocks)": [[287, "armi.reactor.blocks.CartesianBlock"]], "hexblock (class in armi.reactor.blocks)": [[287, "armi.reactor.blocks.HexBlock"]], "pitch_component_type (armi.reactor.blocks.block attribute)": [[287, "armi.reactor.blocks.Block.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.cartesianblock attribute)": [[287, "armi.reactor.blocks.CartesianBlock.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.hexblock attribute)": [[287, "armi.reactor.blocks.HexBlock.PITCH_COMPONENT_TYPE"]], "pitch_dimension (armi.reactor.blocks.block attribute)": [[287, "armi.reactor.blocks.Block.PITCH_DIMENSION"]], "pitch_dimension (armi.reactor.blocks.cartesianblock attribute)": [[287, "armi.reactor.blocks.CartesianBlock.PITCH_DIMENSION"]], "thrzblock (class in armi.reactor.blocks)": [[287, "armi.reactor.blocks.ThRZBlock"]], "add() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.add"]], "adjustdensity() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.adjustDensity"]], "adjustuenrich() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.adjustUEnrich"]], "armi.reactor.blocks": [[287, "module-armi.reactor.blocks"]], "autocreatespatialgrids() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.autoCreateSpatialGrids"]], "autocreatespatialgrids() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.autoCreateSpatialGrids"]], "axialinner() (armi.reactor.blocks.thrzblock method)": [[287, "armi.reactor.blocks.ThRZBlock.axialInner"]], "axialouter() (armi.reactor.blocks.thrzblock method)": [[287, "armi.reactor.blocks.ThRZBlock.axialOuter"]], "breakfuelcomponentsintoindividuals() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.breakFuelComponentsIntoIndividuals"]], "completeinitialloading() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.completeInitialLoading"]], "coords() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.coords"]], "coords() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.coords"]], "core (armi.reactor.blocks.block property)": [[287, "armi.reactor.blocks.Block.core"]], "createhomogenizedcopy() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.createHomogenizedCopy"]], "createhomogenizedcopy() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.createHomogenizedCopy"]], "getarea() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getArea"]], "getblocks() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getBlocks"]], "getboronmassenrich() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getBoronMassEnrich"]], "getcaptureenergygenerationconstants() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getCaptureEnergyGenerationConstants"]], "getcomponentareafrac() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getComponentAreaFrac"]], "getcomponentsinlinkedorder() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getComponentsInLinkedOrder"]], "getcomponentsthatarelinkedto() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getComponentsThatAreLinkedTo"]], "getdim() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getDim"]], "getdimensions() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getDimensions"]], "getductip() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.getDuctIP"]], "getductop() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.getDuctOP"]], "getfissionenergygenerationconstants() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getFissionEnergyGenerationConstants"]], "getflowarea() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.getFlowArea"]], "getflowareaperpin() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getFlowAreaPerPin"]], "getgammaenergydepositionconstants() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getGammaEnergyDepositionConstants"]], "getheight() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getHeight"]], "gethydraulicdiameter() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getHydraulicDiameter"]], "gethydraulicdiameter() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.getHydraulicDiameter"]], "getinputheight() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getInputHeight"]], "getintegratedmgflux() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getIntegratedMgFlux"]], "getlargestcomponent() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getLargestComponent"]], "getlocation() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getLocation"]], "getlumpedfissionproductcollection() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getLumpedFissionProductCollection"]], "getmaxarea() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.cartesianblock method)": [[287, "armi.reactor.blocks.CartesianBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.thrzblock method)": [[287, "armi.reactor.blocks.ThRZBlock.getMaxArea"]], "getmfp() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getMfp"]], "getmgflux() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getMgFlux"]], "getmicrosuffix() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getMicroSuffix"]], "getneutronenergydepositionconstants() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getNeutronEnergyDepositionConstants"]], "getnumpins() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getNumPins"]], "getpincenterflattoflat() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.cartesianblock method)": [[287, "armi.reactor.blocks.CartesianBlock.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.getPinCenterFlatToFlat"]], "getpincoordinates() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getPinCoordinates"]], "getpinpitch() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getPinPitch"]], "getpinpitch() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.getPinPitch"]], "getpintoductgap() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.getPinToDuctGap"]], "getpitch() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getPitch"]], "getplenumpin() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getPlenumPin"]], "getpumoles() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getPuMoles"]], "getrotationnum() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.getRotationNum"]], "getsmeardensity() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getSmearDensity"]], "getsortedcomponentsinsideofcomponent() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getSortedComponentsInsideOfComponent"]], "getsymmetryfactor() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.cartesianblock method)": [[287, "armi.reactor.blocks.CartesianBlock.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.getSymmetryFactor"]], "gettotalenergygenerationconstants() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getTotalEnergyGenerationConstants"]], "geturaniummassenrich() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getUraniumMassEnrich"]], "getvolume() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getVolume"]], "getwettedperimeter() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getWettedPerimeter"]], "getwettedperimeter() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.getWettedPerimeter"]], "getwirewrapcladgap() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.getWireWrapCladGap"]], "haspinpitch() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.hasPinPitch"]], "haspinpitch() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.hasPinPitch"]], "initializepinlocations() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.initializePinLocations"]], "isplenumpin() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.isPlenumPin"]], "makename() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.makeName"]], "mergewithblock() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.mergeWithBlock"]], "pdefs (armi.reactor.blocks.block attribute)": [[287, "armi.reactor.blocks.Block.pDefs"]], "paramcollectiontype (armi.reactor.blocks.block attribute)": [[287, "armi.reactor.blocks.Block.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.cartesianblock attribute)": [[287, "armi.reactor.blocks.CartesianBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.hexblock attribute)": [[287, "armi.reactor.blocks.HexBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.thrzblock attribute)": [[287, "armi.reactor.blocks.ThRZBlock.paramCollectionType"]], "plotflux() (armi.reactor.blocks.block static method)": [[287, "armi.reactor.blocks.Block.plotFlux"]], "radialinner() (armi.reactor.blocks.thrzblock method)": [[287, "armi.reactor.blocks.ThRZBlock.radialInner"]], "radialouter() (armi.reactor.blocks.thrzblock method)": [[287, "armi.reactor.blocks.ThRZBlock.radialOuter"]], "remove() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.remove"]], "removeall() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.removeAll"]], "replaceblockwithblock() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.replaceBlockWithBlock"]], "rotate() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.rotate"]], "rotate() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.rotate"]], "setareafractionsreport() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.setAreaFractionsReport"]], "setaxialexptargetcomp() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.setAxialExpTargetComp"]], "setb10volparam() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.setB10VolParam"]], "setbulimitinfo() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.setBuLimitInfo"]], "setheight() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.setHeight"]], "setpinmgfluxes() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.setPinMgFluxes"]], "setpinpowers() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.setPinPowers"]], "setpitch() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.setPitch"]], "setpitch() (armi.reactor.blocks.cartesianblock method)": [[287, "armi.reactor.blocks.CartesianBlock.setPitch"]], "setrotationnum() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.setRotationNum"]], "thetainner() (armi.reactor.blocks.thrzblock method)": [[287, "armi.reactor.blocks.ThRZBlock.thetaInner"]], "thetaouter() (armi.reactor.blocks.thrzblock method)": [[287, "armi.reactor.blocks.ThRZBlock.thetaOuter"]], "uniqid (armi.reactor.blocks.block attribute)": [[287, "armi.reactor.blocks.Block.uniqID"]], "updatecomponentdims() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.updateComponentDims"]], "verifyblockdims() (armi.reactor.blocks.block method)": [[287, "armi.reactor.blocks.Block.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.hexblock method)": [[287, "armi.reactor.blocks.HexBlock.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.thrzblock method)": [[287, "armi.reactor.blocks.ThRZBlock.verifyBlockDims"]], "blueprints (class in armi.reactor.blueprints)": [[288, "armi.reactor.blueprints.Blueprints"]], "adddefaultsfp() (armi.reactor.blueprints.blueprints method)": [[288, "armi.reactor.blueprints.Blueprints.addDefaultSFP"]], "armi.reactor.blueprints": [[288, "module-armi.reactor.blueprints"]], "attributes (armi.reactor.blueprints.blueprints attribute)": [[288, "armi.reactor.blueprints.Blueprints.attributes"]], "constructassem() (armi.reactor.blueprints.blueprints method)": [[288, "armi.reactor.blueprints.Blueprints.constructAssem"]], "load() (armi.reactor.blueprints.blueprints class method)": [[288, "armi.reactor.blueprints.Blueprints.load"]], "loadfromcs() (in module armi.reactor.blueprints)": [[288, "armi.reactor.blueprints.loadFromCs"]], "migrate() (armi.reactor.blueprints.blueprints class method)": [[288, "armi.reactor.blueprints.Blueprints.migrate"]], "migrate() (in module armi.reactor.blueprints)": [[288, "armi.reactor.blueprints.migrate"]], "assemblyblueprint (class in armi.reactor.blueprints.assemblyblueprint)": [[289, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint"]], "assemblykeyedlist (class in armi.reactor.blueprints.assemblyblueprint)": [[289, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList"]], "bycomponentmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[289, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications"]], "materialmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[289, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications"]], "modifications (class in armi.reactor.blueprints.assemblyblueprint)": [[289, "armi.reactor.blueprints.assemblyBlueprint.Modifications"]], "armi.reactor.blueprints.assemblyblueprint": [[289, "module-armi.reactor.blueprints.assemblyBlueprint"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint attribute)": [[289, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[289, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[289, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[289, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[289, "armi.reactor.blueprints.assemblyBlueprint.Modifications.attributes"]], "byspecifier (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist property)": [[289, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.bySpecifier"]], "construct() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint method)": [[289, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.construct"]], "getassemclass() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint class method)": [[289, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.getAssemClass"]], "item_type (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[289, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.item_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[289, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[289, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[289, "armi.reactor.blueprints.assemblyBlueprint.Modifications.key_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[289, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[289, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[289, "armi.reactor.blueprints.assemblyBlueprint.Modifications.value_type"]], "blockblueprint (class in armi.reactor.blueprints.blockblueprint)": [[290, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint"]], "blockkeyedlist (class in armi.reactor.blueprints.blockblueprint)": [[290, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList"]], "blocklist (class in armi.reactor.blueprints.blockblueprint)": [[290, "armi.reactor.blueprints.blockBlueprint.BlockList"]], "armi.reactor.blueprints.blockblueprint": [[290, "module-armi.reactor.blueprints.blockBlueprint"]], "attributes (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[290, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.attributes"]], "attributes (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[290, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.attributes"]], "construct() (armi.reactor.blueprints.blockblueprint.blockblueprint method)": [[290, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.construct"]], "item_type (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[290, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[290, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blocklist attribute)": [[290, "armi.reactor.blueprints.blockBlueprint.BlockList.item_type"]], "componentblueprint (class in armi.reactor.blueprints.componentblueprint)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint"]], "componentdimension (class in armi.reactor.blueprints.componentblueprint)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentDimension"]], "componentgroup (class in armi.reactor.blueprints.componentblueprint)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentGroup"]], "componentgroups (class in armi.reactor.blueprints.componentblueprint)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentGroups"]], "componentkeyedlist (class in armi.reactor.blueprints.componentblueprint)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList"]], "groupedcomponent (class in armi.reactor.blueprints.componentblueprint)": [[291, "armi.reactor.blueprints.componentBlueprint.GroupedComponent"]], "armi.reactor.blueprints.componentblueprint": [[291, "module-armi.reactor.blueprints.componentBlueprint"]], "attributes (armi.reactor.blueprints.componentblueprint.componentblueprint attribute)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentdimension attribute)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.groupedcomponent attribute)": [[291, "armi.reactor.blueprints.componentBlueprint.GroupedComponent.attributes"]], "construct() (armi.reactor.blueprints.componentblueprint.componentblueprint method)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.construct"]], "expandelementals() (in module armi.reactor.blueprints.componentblueprint)": [[291, "armi.reactor.blueprints.componentBlueprint.expandElementals"]], "from_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.from_yaml"]], "insertdepletablenuclidekeys() (in module armi.reactor.blueprints.componentblueprint)": [[291, "armi.reactor.blueprints.componentBlueprint.insertDepletableNuclideKeys"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.item_type"]], "setcustomdensity() (armi.reactor.blueprints.componentblueprint.componentblueprint method)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.setCustomDensity"]], "to_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[291, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.to_yaml"]], "gridblueprint (class in armi.reactor.blueprints.gridblueprint)": [[292, "armi.reactor.blueprints.gridBlueprint.GridBlueprint"]], "grids (class in armi.reactor.blueprints.gridblueprint)": [[292, "armi.reactor.blueprints.gridBlueprint.Grids"]], "triplet (class in armi.reactor.blueprints.gridblueprint)": [[292, "armi.reactor.blueprints.gridBlueprint.Triplet"]], "armi.reactor.blueprints.gridblueprint": [[292, "module-armi.reactor.blueprints.gridBlueprint"]], "attributes (armi.reactor.blueprints.gridblueprint.gridblueprint attribute)": [[292, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.grids attribute)": [[292, "armi.reactor.blueprints.gridBlueprint.Grids.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.triplet attribute)": [[292, "armi.reactor.blueprints.gridBlueprint.Triplet.attributes"]], "construct() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[292, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.construct"]], "expandtofull() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[292, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.expandToFull"]], "getlocators() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[292, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getLocators"]], "getmultilocator() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[292, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getMultiLocator"]], "item_type (armi.reactor.blueprints.gridblueprint.grids attribute)": [[292, "armi.reactor.blueprints.gridBlueprint.Grids.item_type"]], "readfromlatticemap (armi.reactor.blueprints.gridblueprint.gridblueprint property)": [[292, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.readFromLatticeMap"]], "savetostream() (in module armi.reactor.blueprints.gridblueprint)": [[292, "armi.reactor.blueprints.gridBlueprint.saveToStream"]], "customisotopic (class in armi.reactor.blueprints.isotopicoptions)": [[293, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic"]], "customisotopics (class in armi.reactor.blueprints.isotopicoptions)": [[293, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics"]], "nuclideflag (class in armi.reactor.blueprints.isotopicoptions)": [[293, "armi.reactor.blueprints.isotopicOptions.NuclideFlag"]], "nuclideflags (class in armi.reactor.blueprints.isotopicoptions)": [[293, "armi.reactor.blueprints.isotopicOptions.NuclideFlags"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopic method)": [[293, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.apply"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopics method)": [[293, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.apply"]], "armi.reactor.blueprints.isotopicoptions": [[293, "module-armi.reactor.blueprints.isotopicOptions"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[293, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[293, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflag attribute)": [[293, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[293, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.attributes"]], "autoupdatenuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[293, "armi.reactor.blueprints.isotopicOptions.autoUpdateNuclideFlags"]], "density (armi.reactor.blueprints.isotopicoptions.customisotopic property)": [[293, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.density"]], "eleexpandinfobasedoncodeendf() (in module armi.reactor.blueprints.isotopicoptions)": [[293, "armi.reactor.blueprints.isotopicOptions.eleExpandInfoBasedOnCodeENDF"]], "fileasactiveorinert() (armi.reactor.blueprints.isotopicoptions.nuclideflag method)": [[293, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.fileAsActiveOrInert"]], "from_yaml() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[293, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml"]], "from_yaml_key_val() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[293, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml_key_val"]], "gendefaultnucflags() (in module armi.reactor.blueprints.isotopicoptions)": [[293, "armi.reactor.blueprints.isotopicOptions.genDefaultNucFlags"]], "getallnuclidebasesbylibrary() (in module armi.reactor.blueprints.isotopicoptions)": [[293, "armi.reactor.blueprints.isotopicOptions.getAllNuclideBasesByLibrary"]], "getdefaultnuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[293, "armi.reactor.blueprints.isotopicOptions.getDefaultNuclideFlags"]], "item_type (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[293, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.item_type"]], "item_type (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[293, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.item_type"]], "key_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[293, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.key_type"]], "value_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[293, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.value_type"]], "systemblueprint (class in armi.reactor.blueprints.reactorblueprint)": [[294, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint"]], "systems (class in armi.reactor.blueprints.reactorblueprint)": [[294, "armi.reactor.blueprints.reactorBlueprint.Systems"]], "armi.reactor.blueprints.reactorblueprint": [[294, "module-armi.reactor.blueprints.reactorBlueprint"]], "attributes (armi.reactor.blueprints.reactorblueprint.systemblueprint attribute)": [[294, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.attributes"]], "attributes (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[294, "armi.reactor.blueprints.reactorBlueprint.Systems.attributes"]], "construct() (armi.reactor.blueprints.reactorblueprint.systemblueprint method)": [[294, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.construct"]], "item_type (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[294, "armi.reactor.blueprints.reactorBlueprint.Systems.item_type"]], "summarizematerialdata() (in module armi.reactor.blueprints.reactorblueprint)": [[294, "armi.reactor.blueprints.reactorBlueprint.summarizeMaterialData"]], "armi.reactor.blueprints.tests": [[295, "module-armi.reactor.blueprints.tests"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_assemblyblueprints)": [[296, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyblueprints": [[296, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "loadcustomassembly() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[296, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.loadCustomAssembly"]], "test_checkparamconsistency() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[296, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.test_checkParamConsistency"]], "twoblockinput_correct (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[296, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_correct"]], "twoblockinput_wrongheights (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[296, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongHeights"]], "twoblockinput_wrongmatmods (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[296, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMatMods"]], "twoblockinput_wrongmeshpoints (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[296, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMeshPoints"]], "twoblockinput_wrongxstypes (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[296, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongXSTypes"]], "testgriddedblock (class in armi.reactor.blueprints.tests.test_blockblueprints)": [[297, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockblueprints": [[297, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "test_blocklattice() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[297, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_blockLattice"]], "test_constructspatialgrid() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[297, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_constructSpatialGrid"]], "test_densityconsistentwithcomponentconstructor() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[297, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_densityConsistentWithComponentConstructor"]], "test_explicitflags() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[297, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_explicitFlags"]], "test_getlocatorsatlatticepositions() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[297, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_getLocatorsAtLatticePositions"]], "test_nonlatticecomponenthasrightmult() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[297, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_nonLatticeComponentHasRightMult"]], "testblueprints (class in armi.reactor.blueprints.tests.test_blueprints)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints"]], "testblueprintsschema (class in armi.reactor.blueprints.tests.test_blueprints)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints": [[298, "module-armi.reactor.blueprints.tests.test_blueprints"]], "test_assemblyparameters() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_assemblyParameters"]], "test_cladding_invalid() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_cladding_invalid"]], "test_componentdimensions() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_componentDimensions"]], "test_componentgroupinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_componentGroupInput"]], "test_components() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_components"]], "test_customisotopics() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_customIsotopics"]], "test_getassemblytypebyspecifier() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_getAssemblyTypeBySpecifier"]], "test_merge() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_merge"]], "test_noduplicatekeysinyamlblueprints() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_noDuplicateKeysInYamlBlueprints"]], "test_nuclideflags() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclideFlags"]], "test_nuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_nuclides"]], "test_nuclidesmc2v2() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v2"]], "test_nuclidesmc2v3() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v3"]], "test_roundtripcompletebp() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_roundTripCompleteBP"]], "test_specialisotopicvectors() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_specialIsotopicVectors"]], "test_toplevelcomponentinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_topLevelComponentInput"]], "test_tracenuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_traceNuclides"]], "test_withoutblocks() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[298, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_withoutBlocks"]], "testcomponentblueprint (class in armi.reactor.blueprints.tests.test_componentblueprint)": [[299, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentblueprint": [[299, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "componentstring (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint attribute)": [[299, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.componentString"]], "test_autodepletable() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[299, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_autoDepletable"]], "test_componentinitializationamericiumcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[299, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationAmericiumCustomIsotopics"]], "test_componentinitializationcontrolcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[299, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationControlCustomIsotopics"]], "test_componentinitializationincompleteburnchain() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[299, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationIncompleteBurnChain"]], "test_componentinitializationthoriumburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[299, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumBurnCustomIsotopics"]], "test_componentinitializationthoriumnoburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[299, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumNoBurnCustomIsotopics"]], "testcustomisotopics (class in armi.reactor.blueprints.tests.test_customisotopics)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics"]], "testcustomisotopics_errorconditions (class in armi.reactor.blueprints.tests.test_customisotopics)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions"]], "testnuclideflagsexpansion (class in armi.reactor.blueprints.tests.test_customisotopics)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customisotopics": [[300, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "test_customdensitylogsanderrors() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_customDensityLogsAndErrors"]], "test_densitiesappliedtononcustommaterials() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_densitiesAppliedToNonCustomMaterials"]], "test_densitymustbepositive() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_densityMustBePositive"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_expandedNatural"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.test_expandedNatural"]], "test_massfractionsareapplied() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_massFractionsAreApplied"]], "test_nonconformantelementname() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_nonConformantElementName"]], "test_numberdensities() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensities"]], "test_numberdensitiesanchor() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensitiesAnchor"]], "test_numberdensitiescannotspecifydensity() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_numberDensitiesCannotSpecifyDensity"]], "test_numberfractions() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberFractions"]], "test_unmodified() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_unmodified"]], "test_unrepresentedareonlynatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_unrepresentedAreOnlyNatural"]], "yamlbadblocks (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlBadBlocks"]], "yamlgoodblocks (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlGoodBlocks"]], "yamlpreamble (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlPreamble"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlString"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion attribute)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.yamlString"]], "yamlstringwitherror (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[300, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlStringWithError"]], "testgridbproundtrip (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[301, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip"]], "testgridblueprintssection (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[301, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection"]], "testrztgridblueprint (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[301, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint"]], "armi.reactor.blueprints.tests.test_gridblueprints": [[301, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[301, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_construct"]], "test_contents() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[301, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_contents"]], "test_geomfile() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[301, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_geomFile"]], "test_roundtrip() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[301, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_roundTrip"]], "test_simpleread() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[301, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleRead"]], "test_simplereadlatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[301, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadLatticeMap"]], "test_simplereadnolatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[301, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadNoLatticeMap"]], "test_tinymap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[301, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_tinyMap"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_materialmodifications)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialmodifications": [[302, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "b4cinput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.b4cInput"]], "loadb4cassembly() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.loadB4CAssembly"]], "loaduzrassembly() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.loadUZrAssembly"]], "test_bothu235zrwtfracmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_bothU235ZrWtFracModification"]], "test_checkbycomponentmaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_checkByComponentMaterialInput"]], "test_filtermaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_filterMaterialInput"]], "test_invalidcomponentmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalidComponentModification"]], "test_invalidmatmodname() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalidMatModName"]], "test_matmodsupthemro() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_matModsUpTheMRO"]], "test_materialmodificationlength() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_materialModificationLength"]], "test_nomaterialmodifications() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_noMaterialModifications"]], "test_theoreticaldensity() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_theoreticalDensity"]], "test_u235_wt_frac_bycomponent_modification1() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification1"]], "test_u235_wt_frac_bycomponent_modification2() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification2"]], "test_u235_wt_frac_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_modification"]], "test_zrwtfracmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_zrWtFracModification"]], "uzrinput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[302, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.uZrInput"]], "testreactorblueprints (class in armi.reactor.blueprints.tests.test_reactorblueprints)": [[303, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorblueprints": [[303, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[303, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_construct"]], "test_excorestructure() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[303, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_excoreStructure"]], "test_materialdatasummary() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[303, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_materialDataSummary"]], "test_simpleread() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[303, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_simpleRead"]], "test_spentfuelpool() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[303, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_spentFuelPool"]], "dimension_names (armi.reactor.components.derivedshape attribute)": [[304, "armi.reactor.components.DerivedShape.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.nullcomponent attribute)": [[304, "armi.reactor.components.NullComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[304, "armi.reactor.components.PositiveOrNegativeVolumeComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedcomponent attribute)": [[304, "armi.reactor.components.UnshapedComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[304, "armi.reactor.components.UnshapedVolumetricComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.zeromasscomponent attribute)": [[304, "armi.reactor.components.ZeroMassComponent.DIMENSION_NAMES"]], "derivedshape (class in armi.reactor.components)": [[304, "armi.reactor.components.DerivedShape"]], "init_signature (armi.reactor.components.derivedshape attribute)": [[304, "armi.reactor.components.DerivedShape.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.nullcomponent attribute)": [[304, "armi.reactor.components.NullComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[304, "armi.reactor.components.PositiveOrNegativeVolumeComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedcomponent attribute)": [[304, "armi.reactor.components.UnshapedComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[304, "armi.reactor.components.UnshapedVolumetricComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.zeromasscomponent attribute)": [[304, "armi.reactor.components.ZeroMassComponent.INIT_SIGNATURE"]], "nullcomponent (class in armi.reactor.components)": [[304, "armi.reactor.components.NullComponent"]], "positiveornegativevolumecomponent (class in armi.reactor.components)": [[304, "armi.reactor.components.PositiveOrNegativeVolumeComponent"]], "unshapedcomponent (class in armi.reactor.components)": [[304, "armi.reactor.components.UnshapedComponent"]], "unshapedvolumetriccomponent (class in armi.reactor.components)": [[304, "armi.reactor.components.UnshapedVolumetricComponent"]], "zeromasscomponent (class in armi.reactor.components)": [[304, "armi.reactor.components.ZeroMassComponent"]], "armi.reactor.components": [[304, "module-armi.reactor.components"]], "computevolume() (armi.reactor.components.derivedshape method)": [[304, "armi.reactor.components.DerivedShape.computeVolume"]], "factory() (in module armi.reactor.components)": [[304, "armi.reactor.components.factory"]], "fromcomponent() (armi.reactor.components.unshapedcomponent static method)": [[304, "armi.reactor.components.UnshapedComponent.fromComponent"]], "getboundingcircleouterdiameter() (armi.reactor.components.derivedshape method)": [[304, "armi.reactor.components.DerivedShape.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.nullcomponent method)": [[304, "armi.reactor.components.NullComponent.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.unshapedcomponent method)": [[304, "armi.reactor.components.UnshapedComponent.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.derivedshape method)": [[304, "armi.reactor.components.DerivedShape.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedcomponent method)": [[304, "armi.reactor.components.UnshapedComponent.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedvolumetriccomponent method)": [[304, "armi.reactor.components.UnshapedVolumetricComponent.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[304, "armi.reactor.components.UnshapedVolumetricComponent.getComponentVolume"]], "getdimension() (armi.reactor.components.nullcomponent method)": [[304, "armi.reactor.components.NullComponent.getDimension"]], "getmaxvolume() (armi.reactor.components.derivedshape method)": [[304, "armi.reactor.components.DerivedShape.getMaxVolume"]], "getnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[304, "armi.reactor.components.ZeroMassComponent.getNumberDensity"]], "getvolume() (armi.reactor.components.derivedshape method)": [[304, "armi.reactor.components.DerivedShape.getVolume"]], "is3d (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[304, "armi.reactor.components.UnshapedVolumetricComponent.is3D"]], "material (armi.reactor.components.derivedshape attribute)": [[304, "armi.reactor.components.DerivedShape.material"]], "material (armi.reactor.components.nullcomponent attribute)": [[304, "armi.reactor.components.NullComponent.material"]], "material (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[304, "armi.reactor.components.PositiveOrNegativeVolumeComponent.material"]], "material (armi.reactor.components.unshapedcomponent attribute)": [[304, "armi.reactor.components.UnshapedComponent.material"]], "material (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[304, "armi.reactor.components.UnshapedVolumetricComponent.material"]], "material (armi.reactor.components.zeromasscomponent attribute)": [[304, "armi.reactor.components.ZeroMassComponent.material"]], "pdefs (armi.reactor.components.unshapedcomponent attribute)": [[304, "armi.reactor.components.UnshapedComponent.pDefs"]], "paramcollectiontype (armi.reactor.components.derivedshape attribute)": [[304, "armi.reactor.components.DerivedShape.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.nullcomponent attribute)": [[304, "armi.reactor.components.NullComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[304, "armi.reactor.components.PositiveOrNegativeVolumeComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedcomponent attribute)": [[304, "armi.reactor.components.UnshapedComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[304, "armi.reactor.components.UnshapedVolumetricComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.zeromasscomponent attribute)": [[304, "armi.reactor.components.ZeroMassComponent.paramCollectionType"]], "setnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[304, "armi.reactor.components.ZeroMassComponent.setNumberDensity"]], "setvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[304, "armi.reactor.components.UnshapedVolumetricComponent.setVolume"]], "circle (class in armi.reactor.components.basicshapes)": [[305, "armi.reactor.components.basicShapes.Circle"]], "dimension_names (armi.reactor.components.basicshapes.circle attribute)": [[305, "armi.reactor.components.basicShapes.Circle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.hexagon attribute)": [[305, "armi.reactor.components.basicShapes.Hexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.rectangle attribute)": [[305, "armi.reactor.components.basicShapes.Rectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.solidrectangle attribute)": [[305, "armi.reactor.components.basicShapes.SolidRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.square attribute)": [[305, "armi.reactor.components.basicShapes.Square.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.triangle attribute)": [[305, "armi.reactor.components.basicShapes.Triangle.DIMENSION_NAMES"]], "hexagon (class in armi.reactor.components.basicshapes)": [[305, "armi.reactor.components.basicShapes.Hexagon"]], "init_signature (armi.reactor.components.basicshapes.circle attribute)": [[305, "armi.reactor.components.basicShapes.Circle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.hexagon attribute)": [[305, "armi.reactor.components.basicShapes.Hexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.rectangle attribute)": [[305, "armi.reactor.components.basicShapes.Rectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.solidrectangle attribute)": [[305, "armi.reactor.components.basicShapes.SolidRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.square attribute)": [[305, "armi.reactor.components.basicShapes.Square.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.triangle attribute)": [[305, "armi.reactor.components.basicShapes.Triangle.INIT_SIGNATURE"]], "rectangle (class in armi.reactor.components.basicshapes)": [[305, "armi.reactor.components.basicShapes.Rectangle"]], "solidrectangle (class in armi.reactor.components.basicshapes)": [[305, "armi.reactor.components.basicShapes.SolidRectangle"]], "square (class in armi.reactor.components.basicshapes)": [[305, "armi.reactor.components.basicShapes.Square"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.circle attribute)": [[305, "armi.reactor.components.basicShapes.Circle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.hexagon attribute)": [[305, "armi.reactor.components.basicShapes.Hexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.rectangle attribute)": [[305, "armi.reactor.components.basicShapes.Rectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.solidrectangle attribute)": [[305, "armi.reactor.components.basicShapes.SolidRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.triangle attribute)": [[305, "armi.reactor.components.basicShapes.Triangle.THERMAL_EXPANSION_DIMS"]], "triangle (class in armi.reactor.components.basicshapes)": [[305, "armi.reactor.components.basicShapes.Triangle"]], "armi.reactor.components.basicshapes": [[305, "module-armi.reactor.components.basicShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.circle method)": [[305, "armi.reactor.components.basicShapes.Circle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[305, "armi.reactor.components.basicShapes.Hexagon.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[305, "armi.reactor.components.basicShapes.Rectangle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.square method)": [[305, "armi.reactor.components.basicShapes.Square.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.circle method)": [[305, "armi.reactor.components.basicShapes.Circle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[305, "armi.reactor.components.basicShapes.Hexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[305, "armi.reactor.components.basicShapes.Rectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.square method)": [[305, "armi.reactor.components.basicShapes.Square.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.basicshapes.circle method)": [[305, "armi.reactor.components.basicShapes.Circle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.hexagon method)": [[305, "armi.reactor.components.basicShapes.Hexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.rectangle method)": [[305, "armi.reactor.components.basicShapes.Rectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.solidrectangle method)": [[305, "armi.reactor.components.basicShapes.SolidRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.square method)": [[305, "armi.reactor.components.basicShapes.Square.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.triangle method)": [[305, "armi.reactor.components.basicShapes.Triangle.getComponentArea"]], "getperimeter() (armi.reactor.components.basicshapes.hexagon method)": [[305, "armi.reactor.components.basicShapes.Hexagon.getPerimeter"]], "getpitchdata() (armi.reactor.components.basicshapes.hexagon method)": [[305, "armi.reactor.components.basicShapes.Hexagon.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.rectangle method)": [[305, "armi.reactor.components.basicShapes.Rectangle.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.square method)": [[305, "armi.reactor.components.basicShapes.Square.getPitchData"]], "is3d (armi.reactor.components.basicshapes.circle attribute)": [[305, "armi.reactor.components.basicShapes.Circle.is3D"]], "is3d (armi.reactor.components.basicshapes.hexagon attribute)": [[305, "armi.reactor.components.basicShapes.Hexagon.is3D"]], "is3d (armi.reactor.components.basicshapes.rectangle attribute)": [[305, "armi.reactor.components.basicShapes.Rectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.solidrectangle attribute)": [[305, "armi.reactor.components.basicShapes.SolidRectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.square attribute)": [[305, "armi.reactor.components.basicShapes.Square.is3D"]], "is3d (armi.reactor.components.basicshapes.triangle attribute)": [[305, "armi.reactor.components.basicShapes.Triangle.is3D"]], "isencapsulatedby() (armi.reactor.components.basicshapes.circle method)": [[305, "armi.reactor.components.basicShapes.Circle.isEncapsulatedBy"]], "islatticecomponent() (armi.reactor.components.basicshapes.rectangle method)": [[305, "armi.reactor.components.basicShapes.Rectangle.isLatticeComponent"]], "material (armi.reactor.components.basicshapes.circle attribute)": [[305, "armi.reactor.components.basicShapes.Circle.material"]], "material (armi.reactor.components.basicshapes.hexagon attribute)": [[305, "armi.reactor.components.basicShapes.Hexagon.material"]], "material (armi.reactor.components.basicshapes.rectangle attribute)": [[305, "armi.reactor.components.basicShapes.Rectangle.material"]], "material (armi.reactor.components.basicshapes.solidrectangle attribute)": [[305, "armi.reactor.components.basicShapes.SolidRectangle.material"]], "material (armi.reactor.components.basicshapes.square attribute)": [[305, "armi.reactor.components.basicShapes.Square.material"]], "material (armi.reactor.components.basicshapes.triangle attribute)": [[305, "armi.reactor.components.basicShapes.Triangle.material"]], "pdefs (armi.reactor.components.basicshapes.circle attribute)": [[305, "armi.reactor.components.basicShapes.Circle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.hexagon attribute)": [[305, "armi.reactor.components.basicShapes.Hexagon.pDefs"]], "pdefs (armi.reactor.components.basicshapes.rectangle attribute)": [[305, "armi.reactor.components.basicShapes.Rectangle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.triangle attribute)": [[305, "armi.reactor.components.basicShapes.Triangle.pDefs"]], "paramcollectiontype (armi.reactor.components.basicshapes.circle attribute)": [[305, "armi.reactor.components.basicShapes.Circle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.hexagon attribute)": [[305, "armi.reactor.components.basicShapes.Hexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.rectangle attribute)": [[305, "armi.reactor.components.basicShapes.Rectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.solidrectangle attribute)": [[305, "armi.reactor.components.basicShapes.SolidRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.square attribute)": [[305, "armi.reactor.components.basicShapes.Square.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.triangle attribute)": [[305, "armi.reactor.components.basicShapes.Triangle.paramCollectionType"]], "dimension_names (armi.reactor.components.complexshapes.helix attribute)": [[306, "armi.reactor.components.complexShapes.Helix.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[306, "armi.reactor.components.complexShapes.HexHoledCircle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedhexagon attribute)": [[306, "armi.reactor.components.complexShapes.HoledHexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedrectangle attribute)": [[306, "armi.reactor.components.complexShapes.HoledRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedsquare attribute)": [[306, "armi.reactor.components.complexShapes.HoledSquare.DIMENSION_NAMES"]], "helix (class in armi.reactor.components.complexshapes)": [[306, "armi.reactor.components.complexShapes.Helix"]], "hexholedcircle (class in armi.reactor.components.complexshapes)": [[306, "armi.reactor.components.complexShapes.HexHoledCircle"]], "holedhexagon (class in armi.reactor.components.complexshapes)": [[306, "armi.reactor.components.complexShapes.HoledHexagon"]], "holedrectangle (class in armi.reactor.components.complexshapes)": [[306, "armi.reactor.components.complexShapes.HoledRectangle"]], "holedsquare (class in armi.reactor.components.complexshapes)": [[306, "armi.reactor.components.complexShapes.HoledSquare"]], "init_signature (armi.reactor.components.complexshapes.helix attribute)": [[306, "armi.reactor.components.complexShapes.Helix.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[306, "armi.reactor.components.complexShapes.HexHoledCircle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedhexagon attribute)": [[306, "armi.reactor.components.complexShapes.HoledHexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedrectangle attribute)": [[306, "armi.reactor.components.complexShapes.HoledRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedsquare attribute)": [[306, "armi.reactor.components.complexShapes.HoledSquare.INIT_SIGNATURE"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.helix attribute)": [[306, "armi.reactor.components.complexShapes.Helix.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[306, "armi.reactor.components.complexShapes.HexHoledCircle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedhexagon attribute)": [[306, "armi.reactor.components.complexShapes.HoledHexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedrectangle attribute)": [[306, "armi.reactor.components.complexShapes.HoledRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedsquare attribute)": [[306, "armi.reactor.components.complexShapes.HoledSquare.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.complexshapes": [[306, "module-armi.reactor.components.complexShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.complexshapes.helix method)": [[306, "armi.reactor.components.complexShapes.Helix.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.helix method)": [[306, "armi.reactor.components.complexShapes.Helix.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.hexholedcircle method)": [[306, "armi.reactor.components.complexShapes.HexHoledCircle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedhexagon method)": [[306, "armi.reactor.components.complexShapes.HoledHexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedrectangle method)": [[306, "armi.reactor.components.complexShapes.HoledRectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedsquare method)": [[306, "armi.reactor.components.complexShapes.HoledSquare.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.complexshapes.helix method)": [[306, "armi.reactor.components.complexShapes.Helix.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.hexholedcircle method)": [[306, "armi.reactor.components.complexShapes.HexHoledCircle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedhexagon method)": [[306, "armi.reactor.components.complexShapes.HoledHexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedrectangle method)": [[306, "armi.reactor.components.complexShapes.HoledRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedsquare method)": [[306, "armi.reactor.components.complexShapes.HoledSquare.getComponentArea"]], "is3d (armi.reactor.components.complexshapes.helix attribute)": [[306, "armi.reactor.components.complexShapes.Helix.is3D"]], "material (armi.reactor.components.complexshapes.helix attribute)": [[306, "armi.reactor.components.complexShapes.Helix.material"]], "material (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[306, "armi.reactor.components.complexShapes.HexHoledCircle.material"]], "material (armi.reactor.components.complexshapes.holedhexagon attribute)": [[306, "armi.reactor.components.complexShapes.HoledHexagon.material"]], "material (armi.reactor.components.complexshapes.holedrectangle attribute)": [[306, "armi.reactor.components.complexShapes.HoledRectangle.material"]], "material (armi.reactor.components.complexshapes.holedsquare attribute)": [[306, "armi.reactor.components.complexShapes.HoledSquare.material"]], "pdefs (armi.reactor.components.complexshapes.helix attribute)": [[306, "armi.reactor.components.complexShapes.Helix.pDefs"]], "pdefs (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[306, "armi.reactor.components.complexShapes.HexHoledCircle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedhexagon attribute)": [[306, "armi.reactor.components.complexShapes.HoledHexagon.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedrectangle attribute)": [[306, "armi.reactor.components.complexShapes.HoledRectangle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedsquare attribute)": [[306, "armi.reactor.components.complexShapes.HoledSquare.pDefs"]], "paramcollectiontype (armi.reactor.components.complexshapes.helix attribute)": [[306, "armi.reactor.components.complexShapes.Helix.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[306, "armi.reactor.components.complexShapes.HexHoledCircle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedhexagon attribute)": [[306, "armi.reactor.components.complexShapes.HoledHexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedrectangle attribute)": [[306, "armi.reactor.components.complexShapes.HoledRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedsquare attribute)": [[306, "armi.reactor.components.complexShapes.HoledSquare.paramCollectionType"]], "component (class in armi.reactor.components.component)": [[307, "armi.reactor.components.component.Component"]], "componenttype (class in armi.reactor.components.component)": [[307, "armi.reactor.components.component.ComponentType"]], "dimension_names (armi.reactor.components.component.component attribute)": [[307, "armi.reactor.components.component.Component.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.component.shapedcomponent attribute)": [[307, "armi.reactor.components.component.ShapedComponent.DIMENSION_NAMES"]], "init_signature (armi.reactor.components.component.component attribute)": [[307, "armi.reactor.components.component.Component.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.component.shapedcomponent attribute)": [[307, "armi.reactor.components.component.ShapedComponent.INIT_SIGNATURE"]], "non_dimension_names (armi.reactor.components.component.componenttype attribute)": [[307, "armi.reactor.components.component.ComponentType.NON_DIMENSION_NAMES"]], "shapedcomponent (class in armi.reactor.components.component)": [[307, "armi.reactor.components.component.ShapedComponent"]], "thermal_expansion_dims (armi.reactor.components.component.component attribute)": [[307, "armi.reactor.components.component.Component.THERMAL_EXPANSION_DIMS"]], "types (armi.reactor.components.component.componenttype attribute)": [[307, "armi.reactor.components.component.ComponentType.TYPES"]], "adjustdensityforheightexpansion() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.adjustDensityForHeightExpansion"]], "adjustmassenrichment() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.adjustMassEnrichment"]], "applymaterialmassfracstonumberdensities() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.applyMaterialMassFracsToNumberDensities"]], "armi.reactor.components.component": [[307, "module-armi.reactor.components.component"]], "backup() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.backUp"]], "clearcache() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.clearCache"]], "clearlinkedcache() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.clearLinkedCache"]], "componenttypeisvalid() (in module armi.reactor.components.component)": [[307, "armi.reactor.components.component.componentTypeIsValid"]], "computevolume() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.computeVolume"]], "containssolidmaterial() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.containsSolidMaterial"]], "containsvoidmaterial() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.containsVoidMaterial"]], "density() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.density"]], "dimensionislinked() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.dimensionIsLinked"]], "finalizeloadingfromdb() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.finalizeLoadingFromDB"]], "gasporosity (armi.reactor.components.component.component property)": [[307, "armi.reactor.components.component.Component.gasPorosity"]], "getarea() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getArea"]], "getboundingcircleouterdiameter() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getComponentVolume"]], "getdimension() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getDimension"]], "getdimensionnameslinkedto() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getDimensionNamesLinkedTo"]], "getenrichment() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getEnrichment"]], "getfuelmass() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getFuelMass"]], "getheightfactor() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getHeightFactor"]], "getintegratedmgflux() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getIntegratedMgFlux"]], "getlinkedcomponents() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getLinkedComponents"]], "getlumpedfissionproductcollection() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getLumpedFissionProductCollection"]], "getmass() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getMass"]], "getmassenrichment() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getMassEnrichment"]], "getmicrosuffix() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getMicroSuffix"]], "getnuclidenumberdensities() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getNuclides"]], "getnumberdensity() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getNumberDensity"]], "getpitchdata() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getPitchData"]], "getproperties() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getProperties"]], "getthermalexpansionfactor() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getThermalExpansionFactor"]], "getvolume() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.getVolume"]], "is3d (armi.reactor.components.component.component attribute)": [[307, "armi.reactor.components.component.Component.is3D"]], "itercomponents() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.iterComponents"]], "liquidporosity (armi.reactor.components.component.component property)": [[307, "armi.reactor.components.component.Component.liquidPorosity"]], "material (armi.reactor.components.component.component attribute)": [[307, "armi.reactor.components.component.Component.material"]], "material (armi.reactor.components.component.shapedcomponent attribute)": [[307, "armi.reactor.components.component.ShapedComponent.material"]], "mergenuclidesinto() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.mergeNuclidesInto"]], "pdefs (armi.reactor.components.component.component attribute)": [[307, "armi.reactor.components.component.Component.pDefs"]], "paramcollectiontype (armi.reactor.components.component.component attribute)": [[307, "armi.reactor.components.component.Component.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.component.shapedcomponent attribute)": [[307, "armi.reactor.components.component.ShapedComponent.paramCollectionType"]], "printcontents() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.printContents"]], "resolvelinkeddims() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.resolveLinkedDims"]], "restorebackup() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.restoreBackup"]], "setarea() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.setArea"]], "setdimension() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.setDimension"]], "setdimensionreport() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.setDimensionReport"]], "setlink() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.setLink"]], "setlumpedfissionproducts() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.setLumpedFissionProducts"]], "setname() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.setName"]], "setnumberdensities() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.setNumberDensities"]], "setnumberdensity() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.setNumberDensity"]], "setproperties() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.setProperties"]], "settemperature() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.setTemperature"]], "setvolume() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.setVolume"]], "temperatureinc (armi.reactor.components.component.component property)": [[307, "armi.reactor.components.component.Component.temperatureInC"]], "temperatureink (armi.reactor.components.component.component property)": [[307, "armi.reactor.components.component.Component.temperatureInK"]], "updatedims() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.updateDims"]], "updatenumberdensities() (armi.reactor.components.component.component method)": [[307, "armi.reactor.components.component.Component.updateNumberDensities"]], "armi.reactor.components.componentparameters": [[308, "module-armi.reactor.components.componentParameters"]], "getcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[308, "armi.reactor.components.componentParameters.getCircleParameterDefinitions"]], "getcomponentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[308, "armi.reactor.components.componentParameters.getComponentParameterDefinitions"]], "getcubeparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[308, "armi.reactor.components.componentParameters.getCubeParameterDefinitions"]], "gethelixparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[308, "armi.reactor.components.componentParameters.getHelixParameterDefinitions"]], "gethexholedcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[308, "armi.reactor.components.componentParameters.getHexHoledCircleParameterDefinitions"]], "gethexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[308, "armi.reactor.components.componentParameters.getHexagonParameterDefinitions"]], "getholedhexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[308, "armi.reactor.components.componentParameters.getHoledHexagonParameterDefinitions"]], "getholedrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[308, "armi.reactor.components.componentParameters.getHoledRectangleParameterDefinitions"]], "getradialsegmentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[308, "armi.reactor.components.componentParameters.getRadialSegmentParameterDefinitions"]], "getrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[308, "armi.reactor.components.componentParameters.getRectangleParameterDefinitions"]], "gettriangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[308, "armi.reactor.components.componentParameters.getTriangleParameterDefinitions"]], "getunshapedparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[308, "armi.reactor.components.componentParameters.getUnshapedParameterDefinitions"]], "cube (class in armi.reactor.components.volumetricshapes)": [[309, "armi.reactor.components.volumetricShapes.Cube"]], "dimension_names (armi.reactor.components.volumetricshapes.cube attribute)": [[309, "armi.reactor.components.volumetricShapes.Cube.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.RadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.sphere attribute)": [[309, "armi.reactor.components.volumetricShapes.Sphere.DIMENSION_NAMES"]], "differentialradialsegment (class in armi.reactor.components.volumetricshapes)": [[309, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment"]], "init_signature (armi.reactor.components.volumetricshapes.cube attribute)": [[309, "armi.reactor.components.volumetricShapes.Cube.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.RadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.sphere attribute)": [[309, "armi.reactor.components.volumetricShapes.Sphere.INIT_SIGNATURE"]], "radialsegment (class in armi.reactor.components.volumetricshapes)": [[309, "armi.reactor.components.volumetricShapes.RadialSegment"]], "sphere (class in armi.reactor.components.volumetricshapes)": [[309, "armi.reactor.components.volumetricShapes.Sphere"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.cube attribute)": [[309, "armi.reactor.components.volumetricShapes.Cube.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.RadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.sphere attribute)": [[309, "armi.reactor.components.volumetricShapes.Sphere.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.volumetricshapes": [[309, "module-armi.reactor.components.volumetricShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.radialsegment method)": [[309, "armi.reactor.components.volumetricShapes.RadialSegment.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.sphere method)": [[309, "armi.reactor.components.volumetricShapes.Sphere.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.cube method)": [[309, "armi.reactor.components.volumetricShapes.Cube.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[309, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.radialsegment method)": [[309, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.sphere method)": [[309, "armi.reactor.components.volumetricShapes.Sphere.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.cube method)": [[309, "armi.reactor.components.volumetricShapes.Cube.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[309, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.radialsegment method)": [[309, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.sphere method)": [[309, "armi.reactor.components.volumetricShapes.Sphere.getComponentVolume"]], "is3d (armi.reactor.components.volumetricshapes.cube attribute)": [[309, "armi.reactor.components.volumetricShapes.Cube.is3D"]], "is3d (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.RadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.sphere attribute)": [[309, "armi.reactor.components.volumetricShapes.Sphere.is3D"]], "material (armi.reactor.components.volumetricshapes.cube attribute)": [[309, "armi.reactor.components.volumetricShapes.Cube.material"]], "material (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.material"]], "material (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.RadialSegment.material"]], "material (armi.reactor.components.volumetricshapes.sphere attribute)": [[309, "armi.reactor.components.volumetricShapes.Sphere.material"]], "pdefs (armi.reactor.components.volumetricshapes.cube attribute)": [[309, "armi.reactor.components.volumetricShapes.Cube.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.RadialSegment.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.sphere attribute)": [[309, "armi.reactor.components.volumetricShapes.Sphere.pDefs"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.cube attribute)": [[309, "armi.reactor.components.volumetricShapes.Cube.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[309, "armi.reactor.components.volumetricShapes.RadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.sphere attribute)": [[309, "armi.reactor.components.volumetricShapes.Sphere.paramCollectionType"]], "updatedims() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[309, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.updateDims"]], "armiobject (class in armi.reactor.composites)": [[310, "armi.reactor.composites.ArmiObject"]], "composite (class in armi.reactor.composites)": [[310, "armi.reactor.composites.Composite"]], "compositemodeltype (class in armi.reactor.composites)": [[310, "armi.reactor.composites.CompositeModelType"]], "flagserializer (class in armi.reactor.composites)": [[310, "armi.reactor.composites.FlagSerializer"]], "stateretainer (class in armi.reactor.composites)": [[310, "armi.reactor.composites.StateRetainer"]], "types (armi.reactor.composites.compositemodeltype attribute)": [[310, "armi.reactor.composites.CompositeModelType.TYPES"]], "add() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.add"]], "addmass() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.addMass"]], "addmasses() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.addMasses"]], "adjustmassenrichment() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.adjustMassEnrichment"]], "adjustmassfrac() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.adjustMassFrac"]], "append() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.append"]], "armi.reactor.composites": [[310, "module-armi.reactor.composites"]], "backup() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.backUp"]], "calcavgparam() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.calcAvgParam"]], "calctotalparam() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.calcTotalParam"]], "changendensbyfactor() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.changeNDensByFactor"]], "clearcache() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.clearCache"]], "clearnumberdensities() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.clearNumberDensities"]], "constituentreport() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.constituentReport"]], "containsatleastonechildwithflags() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.containsAtLeastOneChildWithFlags"]], "containsheavymetal() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.containsHeavyMetal"]], "containsonlychildrenwithflags() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.containsOnlyChildrenWithFlags"]], "copyparamsfrom() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.copyParamsFrom"]], "copyparamstochildren() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.copyParamsToChildren"]], "density() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.density"]], "dochildrenhaveflags() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.doChildrenHaveFlags"]], "duplicate() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.duplicate"]], "expandallelementalstoisotopics() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.expandAllElementalsToIsotopics"]], "expandelementaltoisotopics() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.expandElementalToIsotopics"]], "extend() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.extend"]], "gathermaterialsbyvolume() (in module armi.reactor.composites)": [[310, "armi.reactor.composites.gatherMaterialsByVolume"]], "getancestor() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getAncestor"]], "getancestoranddistance() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getAncestorAndDistance"]], "getancestorwithflags() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getAncestorWithFlags"]], "getarea() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getArea"]], "getatomicweight() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getAtomicWeight"]], "getaveragetempinc() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getAverageTempInC"]], "getboundingcircleouterdiameter() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.getBoundingCircleOuterDiameter"]], "getboundingindices() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getBoundingIndices"]], "getchildparamvalues() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getChildParamValues"]], "getchildren() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getChildren"]], "getchildren() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.getChildren"]], "getchildrenoftype() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.getChildrenOfType"]], "getchildrenwithflags() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getChildrenWithFlags"]], "getchildrenwithflags() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.getChildrenWithFlags"]], "getchildrenwithnuclides() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getChildrenWithNuclides"]], "getcomponent() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getComponent"]], "getcomponentbyname() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getComponentByName"]], "getcomponentnames() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getComponentNames"]], "getcomponents() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getComponents"]], "getcomponents() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.getComponents"]], "getcomponentsofmaterial() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getComponentsOfMaterial"]], "getcomponentsofshape() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getComponentsOfShape"]], "getdominantmaterial() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getDominantMaterial"]], "getdominantmaterial() (in module armi.reactor.composites)": [[310, "armi.reactor.composites.getDominantMaterial"]], "getfpmass() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getFPMass"]], "getfissilemass() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getFissileMass"]], "getfissilemassenrich() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getFissileMassEnrich"]], "getfuelmass() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getFuelMass"]], "gethmdens() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getHMDens"]], "gethmmass() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getHMMass"]], "gethmmoles() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getHMMoles"]], "getintegratedmgflux() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getIntegratedMgFlux"]], "getintegratedmgflux() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.getIntegratedMgFlux"]], "getlumpedfissionproductcollection() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getLumpedFissionProductCollection"]], "getlumpedfissionproductcollection() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.getLumpedFissionProductCollection"]], "getlumpedfissionproductsifnecessary() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.getLumpedFissionProductsIfNecessary"]], "getmass() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getMass"]], "getmassfrac() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getMassFrac"]], "getmassfracs() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getMassFracs"]], "getmasses() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getMasses"]], "getmaxarea() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getMaxArea"]], "getmaxparam() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getMaxParam"]], "getmgflux() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getMgFlux"]], "getmicrosuffix() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getMicroSuffix"]], "getminparam() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getMinParam"]], "getname() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getName"]], "getnuclidenumberdensities() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getNuclides"]], "getnumcomponents() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getNumComponents"]], "getnumberdensities() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getNumberDensities"]], "getnumberdensity() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getNumberDensity"]], "getnumberofatoms() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getNumberOfAtoms"]], "getparamnames() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getParamNames"]], "getparametercollection() (armi.reactor.composites.armiobject class method)": [[310, "armi.reactor.composites.ArmiObject.getParameterCollection"]], "getreactionratedict() (in module armi.reactor.composites)": [[310, "armi.reactor.composites.getReactionRateDict"]], "getreactionrates() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.getReactionRates"]], "getsymmetryfactor() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getSymmetryFactor"]], "gettotalndens() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getTotalNDens"]], "gettype() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getType"]], "geturaniumnumenrich() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getUraniumNumEnrich"]], "getvolume() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getVolume"]], "getvolumefraction() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getVolumeFraction"]], "getvolumefractions() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.getVolumeFractions"]], "hascomponents() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.hasComponents"]], "hasflags() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.hasFlags"]], "index() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.index"]], "insert() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.insert"]], "isfuel() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.isFuel"]], "itercomponents() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.iterComponents"]], "itercomponents() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.iterComponents"]], "moveto() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.moveTo"]], "namecontains() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.nameContains"]], "pdefs (armi.reactor.composites.armiobject attribute)": [[310, "armi.reactor.composites.ArmiObject.pDefs"]], "pack() (armi.reactor.composites.flagserializer static method)": [[310, "armi.reactor.composites.FlagSerializer.pack"]], "paramcollectiontype (armi.reactor.composites.armiobject attribute)": [[310, "armi.reactor.composites.ArmiObject.paramCollectionType"]], "paramcollectiontype (armi.reactor.composites.composite attribute)": [[310, "armi.reactor.composites.Composite.paramCollectionType"]], "printcontents() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.printContents"]], "remove() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.remove"]], "removeall() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.removeAll"]], "removemass() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.removeMass"]], "requireslumpedfissionproducts() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.requiresLumpedFissionProducts"]], "resolvelinkeddims() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.resolveLinkedDims"]], "restorebackup() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.restoreBackup"]], "retainstate() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.retainState"]], "setchildren() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.setChildren"]], "setchildrenlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.setChildrenLumpedFissionProducts"]], "setcomponentdimensionsreport() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.setComponentDimensionsReport"]], "setlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.setLumpedFissionProducts"]], "setmass() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.setMass"]], "setmassfrac() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.setMassFrac"]], "setmassfracs() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.setMassFracs"]], "setmasses() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.setMasses"]], "setname() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.setName"]], "setnumberdensities() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.setNumberDensities"]], "setnumberdensity() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.setNumberDensity"]], "settype() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.setType"]], "sort() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.sort"]], "syncmpistate() (armi.reactor.composites.composite method)": [[310, "armi.reactor.composites.Composite.syncMpiState"]], "unpack() (armi.reactor.composites.flagserializer class method)": [[310, "armi.reactor.composites.FlagSerializer.unpack"]], "updatenumberdensities() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.updateNumberDensities"]], "updateparamsfrom() (armi.reactor.composites.armiobject method)": [[310, "armi.reactor.composites.ArmiObject.updateParamsFrom"]], "version (armi.reactor.composites.flagserializer attribute)": [[310, "armi.reactor.composites.FlagSerializer.version"]], "armi.reactor.converters": [[311, "module-armi.reactor.converters"]], "armi.reactor.converters.axialexpansionchanger": [[312, "module-armi.reactor.converters.axialExpansionChanger"]], "assemblyaxiallinkage (class in armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage)": [[313, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage"]], "armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage": [[313, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"]], "axialexpansionchanger (class in armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[314, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger"]], "applycoldheightmassincrease() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[314, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.applyColdHeightMassIncrease"]], "armi.reactor.converters.axialexpansionchanger.axialexpansionchanger": [[314, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"]], "axiallyexpandassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[314, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.axiallyExpandAssembly"]], "expandcolddimstohot() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger class method)": [[314, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.expandColdDimsToHot"]], "getdefaultreferenceassem() (in module armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[314, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.getDefaultReferenceAssem"]], "makeassemsabletosnaptouniformmesh() (in module armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[314, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.makeAssemsAbleToSnapToUniformMesh"]], "managecoremesh() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[314, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.manageCoreMesh"]], "performprescribedaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[314, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.performPrescribedAxialExpansion"]], "performthermalaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[314, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.performThermalAxialExpansion"]], "reset() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[314, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.reset"]], "setassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[314, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.setAssembly"]], "expansiondata (class in armi.reactor.converters.axialexpansionchanger.expansiondata)": [[315, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData"]], "armi.reactor.converters.axialexpansionchanger.expansiondata": [[315, "module-armi.reactor.converters.axialExpansionChanger.expansionData"]], "computethermalexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[315, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.computeThermalExpansionFactors"]], "determinetargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[315, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.determineTargetComponent"]], "getexpansionfactor() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[315, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.getExpansionFactor"]], "getsolidcomponents() (in module armi.reactor.converters.axialexpansionchanger.expansiondata)": [[315, "armi.reactor.converters.axialExpansionChanger.expansionData.getSolidComponents"]], "istargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[315, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.isTargetComponent"]], "setexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[315, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.setExpansionFactors"]], "updatecomponenttemp() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[315, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.updateComponentTemp"]], "updatecomponenttempsby1dtempfield() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[315, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.updateComponentTempsBy1DTempField"]], "blockavgtocylconverter (class in armi.reactor.converters.blockconverters)": [[316, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter"]], "blockconverter (class in armi.reactor.converters.blockconverters)": [[316, "armi.reactor.converters.blockConverters.BlockConverter"]], "componentmerger (class in armi.reactor.converters.blockconverters)": [[316, "armi.reactor.converters.blockConverters.ComponentMerger"]], "hexcomponentstocylconverter (class in armi.reactor.converters.blockconverters)": [[316, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter"]], "multiplecomponentmerger (class in armi.reactor.converters.blockconverters)": [[316, "armi.reactor.converters.blockConverters.MultipleComponentMerger"]], "armi.reactor.converters.blockconverters": [[316, "module-armi.reactor.converters.blockConverters"]], "convert() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[316, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.blockconverter method)": [[316, "armi.reactor.converters.blockConverters.BlockConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.componentmerger method)": [[316, "armi.reactor.converters.blockConverters.ComponentMerger.convert"]], "convert() (armi.reactor.converters.blockconverters.hexcomponentstocylconverter method)": [[316, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.multiplecomponentmerger method)": [[316, "armi.reactor.converters.blockConverters.MultipleComponentMerger.convert"]], "dissolvecomponentintocomponent() (armi.reactor.converters.blockconverters.blockconverter method)": [[316, "armi.reactor.converters.blockConverters.BlockConverter.dissolveComponentIntoComponent"]], "getouterdiamfromidandarea() (in module armi.reactor.converters.blockconverters)": [[316, "armi.reactor.converters.blockConverters.getOuterDiamFromIDAndArea"]], "plotconvertedblock() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[316, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.plotConvertedBlock"]], "radiifromhexpitches() (in module armi.reactor.converters.blockconverters)": [[316, "armi.reactor.converters.blockConverters.radiiFromHexPitches"]], "radiifromhexsides() (in module armi.reactor.converters.blockconverters)": [[316, "armi.reactor.converters.blockConverters.radiiFromHexSides"]], "radiifromringofrods() (in module armi.reactor.converters.blockconverters)": [[316, "armi.reactor.converters.blockConverters.radiiFromRingOfRods"]], "restablishlinks() (armi.reactor.converters.blockconverters.blockconverter method)": [[316, "armi.reactor.converters.blockConverters.BlockConverter.restablishLinks"]], "expected_input_symmetry (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger attribute)": [[317, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.EXPECTED_INPUT_SYMMETRY"]], "edgeassemblychanger (class in armi.reactor.converters.geometryconverters)": [[317, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger"]], "fuelassemnummodifier (class in armi.reactor.converters.geometryconverters)": [[317, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier"]], "geometrychanger (class in armi.reactor.converters.geometryconverters)": [[317, "armi.reactor.converters.geometryConverters.GeometryChanger"]], "geometryconverter (class in armi.reactor.converters.geometryconverters)": [[317, "armi.reactor.converters.geometryConverters.GeometryConverter"]], "hextorzconverter (class in armi.reactor.converters.geometryconverters)": [[317, "armi.reactor.converters.geometryConverters.HexToRZConverter"]], "hextorzthetaconverter (class in armi.reactor.converters.geometryconverters)": [[317, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter"]], "thirdcorehextofullcorechanger (class in armi.reactor.converters.geometryconverters)": [[317, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger"]], "addedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[317, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.addEdgeAssemblies"]], "addring() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[317, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.addRing"]], "armi.reactor.converters.geometryconverters": [[317, "module-armi.reactor.converters.geometryConverters"]], "convert() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[317, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.convert"]], "convert() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[317, "armi.reactor.converters.geometryConverters.GeometryChanger.convert"]], "convert() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[317, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.convert"]], "convert() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[317, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.convert"]], "createhomogenizedrztblock() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[317, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.createHomogenizedRZTBlock"]], "plotconvertedreactor() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[317, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.plotConvertedReactor"]], "removeedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[317, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.removeEdgeAssemblies"]], "reset() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[317, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.reset"]], "reset() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[317, "armi.reactor.converters.geometryConverters.GeometryChanger.reset"]], "reset() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[317, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.reset"]], "restorepreviousgeometry() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[317, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.restorePreviousGeometry"]], "scaleparamsrelatedtosymmetry() (armi.reactor.converters.geometryconverters.edgeassemblychanger static method)": [[317, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.scaleParamsRelatedToSymmetry"]], "meshconverter (class in armi.reactor.converters.meshconverters)": [[318, "armi.reactor.converters.meshConverters.MeshConverter"]], "rzthetareactormeshconverter (class in armi.reactor.converters.meshconverters)": [[318, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter"]], "rzthetareactormeshconverterbyringcompositionaxialbins (class in armi.reactor.converters.meshconverters)": [[318, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialBins"]], "rzthetareactormeshconverterbyringcompositionaxialcoordinates (class in armi.reactor.converters.meshconverters)": [[318, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"]], "rzthetareactormeshconverterbyringcompositionaxialflags (class in armi.reactor.converters.meshconverters)": [[318, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialFlags"]], "armi.reactor.converters.meshconverters": [[318, "module-armi.reactor.converters.meshConverters"]], "checklastvalueinlist() (in module armi.reactor.converters.meshconverters)": [[318, "armi.reactor.converters.meshConverters.checkLastValueInList"]], "checklistbounds() (in module armi.reactor.converters.meshconverters)": [[318, "armi.reactor.converters.meshConverters.checkListBounds"]], "generatebins() (in module armi.reactor.converters.meshconverters)": [[318, "armi.reactor.converters.meshConverters.generateBins"]], "generatemesh() (armi.reactor.converters.meshconverters.meshconverter method)": [[318, "armi.reactor.converters.meshConverters.MeshConverter.generateMesh"]], "generatemesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[318, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.generateMesh"]], "setaxialmesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[318, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setAxialMesh"]], "setringstoconvert() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[318, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setRingsToConvert"]], "setthetamesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[318, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setThetaMesh"]], "writemeshdata() (armi.reactor.converters.meshconverters.meshconverter method)": [[318, "armi.reactor.converters.meshConverters.MeshConverter.writeMeshData"]], "writemeshdata() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[318, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.writeMeshData"]], "armi.reactor.converters.parametersweeps": [[319, "module-armi.reactor.converters.parameterSweeps"]], "custommodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[320, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier"]], "neutronicconvergencemodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[320, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier"]], "priority (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter attribute)": [[320, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.PRIORITY"]], "parametersweepconverter (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[320, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter"]], "settingsmodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[320, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier"]], "armi.reactor.converters.parametersweeps.generalparametersweepconverters": [[320, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.custommodifier method)": [[320, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.neutronicconvergencemodifier method)": [[320, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter method)": [[320, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.settingsmodifier method)": [[320, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier.convert"]], "adjustcladthicknessbyid() (in module armi.reactor.converters.pintypeblockconverters)": [[321, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByID"]], "adjustcladthicknessbyod() (in module armi.reactor.converters.pintypeblockconverters)": [[321, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByOD"]], "adjustsmeardensity() (in module armi.reactor.converters.pintypeblockconverters)": [[321, "armi.reactor.converters.pinTypeBlockConverters.adjustSmearDensity"]], "armi.reactor.converters.pintypeblockconverters": [[321, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests": [[322, "module-armi.reactor.converters.tests"]], "axialexpansiontestbase (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase"]], "fakemat (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat"]], "fakematexception (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException"]], "steel_component_lst (armi.reactor.converters.tests.test_axialexpansionchanger.axialexpansiontestbase attribute)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase.Steel_Component_Lst"]], "temperature (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.Temperature"]], "testaxialexpansionheight (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight"]], "testconservation (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation"]], "testdeterminetargetcomponent (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent"]], "testexceptions (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions"]], "testgetsolidcomponents (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents"]], "testinputheightsconsideredhot (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot"]], "testlinkage (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage"]], "testmanagecoremesh (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh"]], "armi.reactor.converters.tests.test_axialexpansionchanger": [[323, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "buildtestassemblywithfakematerial() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.buildTestAssemblyWithFakeMaterial"]], "checkcoldblockheight() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.checkColdBlockHeight"]], "checkcoldheightblockmass() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.checkColdHeightBlockMass"]], "complexconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.complexConservationTest"]], "expandassemformassconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.expandAssemForMassConservationTest"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.linearExpansionPercent"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.linearExpansionPercent"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat attribute)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.name"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception attribute)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.name"]], "runtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.runTest"]], "test_annularhexoverlappingthickannularhex() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_AnnularHexOverlappingThickAnnularHex"]], "test_assemblyaxialexpansionexception() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_AssemblyAxialExpansionException"]], "test_assemblyaxialexpansionheight() (armi.reactor.converters.tests.test_axialexpansionchanger.testaxialexpansionheight method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight.test_AssemblyAxialExpansionHeight"]], "test_annularpinnotoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_annularPinNotOverlappingWithAnnulus"]], "test_annularpinoverlappingwithannuls() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_annularPinOverlappingWithAnnuls"]], "test_coldassemblyexpansion() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.test_coldAssemblyExpansion"]], "test_computethermalexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_computeThermalExpansionFactors"]], "test_determinelinked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_determineLinked"]], "test_determinetargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponent"]], "test_determinetargetcomponentblockwithmultipleflags() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponentBlockWithMultipleFlags"]], "test_differentmultnotoverlapping() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_differentMultNotOverlapping"]], "test_getlinkedcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_getLinkedComponents"]], "test_getsolidcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testgetsolidcomponents method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents.test_getSolidComponents"]], "test_isfuellocked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isFuelLocked"]], "test_istopdummyblockpresent() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isTopDummyBlockPresent"]], "test_liquids() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_liquids"]], "test_managecoremesh() (armi.reactor.converters.tests.test_axialexpansionchanger.testmanagecoremesh method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh.test_manageCoreMesh"]], "test_manuallysettargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_manuallySetTargetComponent"]], "test_nomovementaclp() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_noMovementACLP"]], "test_overlappingsolidpins() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_overlappingSolidPins"]], "test_prescribedexpansioncontractionconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_prescribedExpansionContractionConservation"]], "test_reset() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_reset"]], "test_setexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_setExpansionFactors"]], "test_solidpinnotoverlappingannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_solidPinNotOverlappingAnnulus"]], "test_solidpinoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_solidPinOverlappingWithAnnulus"]], "test_specifytargetcomponent_notfound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_NotFound"]], "test_specifytargetcomponent_singlesolid() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_singleSolid"]], "test_specifytargetcomponet_multiplefound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponet_MultipleFound"]], "test_targetcomponentmassconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_targetComponentMassConservation"]], "test_thermalexpansioncontractionconservation_complex() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_thermalExpansionContractionConservation_complex"]], "test_thermalexpansioncontractionconservation_simple() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_thermalExpansionContractionConservation_simple"]], "test_thinannularpinoverlappingwiththickannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_thinAnnularPinOverlappingWithThickAnnulus"]], "test_unshapedcomponentandcircle() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_unshapedComponentAndCircle"]], "test_updatecomponenttempsby1dtempfieldruntimeerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldRuntimeError"]], "test_updatecomponenttempsby1dtempfieldvalueerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[323, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldValueError"]], "testblockconverter (class in armi.reactor.converters.tests.test_blockconverter)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter"]], "testtocircles (class in armi.reactor.converters.tests.test_blockconverter)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestToCircles"]], "armi.reactor.converters.tests.test_blockconverter": [[324, "module-armi.reactor.converters.tests.test_blockConverter"]], "buildcontrolblockwithlinkednegativeareacomponent() (in module armi.reactor.converters.tests.test_blockconverter)": [[324, "armi.reactor.converters.tests.test_blockConverter.buildControlBlockWithLinkedNegativeAreaComponent"]], "buildsimplefuelblocknegativearea() (in module armi.reactor.converters.tests.test_blockconverter)": [[324, "armi.reactor.converters.tests.test_blockConverter.buildSimpleFuelBlockNegativeArea"]], "test_build_nthring() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_build_NthRing"]], "test_convert() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convert"]], "test_convertcartesianlatticewithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertCartesianLatticeWithFuelDriver"]], "test_converthexwithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriver"]], "test_converthexwithfueldriveronnegativecomponentareablock() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"]], "test_dissolveintonegativearea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveIntoNegativeArea"]], "test_dissolveintozeroarea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveIntoZeroArea"]], "test_dissolvelinerintoclad() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveLinerIntoClad"]], "test_dissolvemultiple() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveMultiple"]], "test_dissolvenegativearea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveNegativeArea"]], "test_dissolvewireintocoolant() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveWireIntoCoolant"]], "test_dissolvezeroarea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveZeroArea"]], "test_fromhex() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromHex"]], "test_fromringofrods() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[324, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromRingOfRods"]], "testedgeassemblychanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger"]], "testgeometryconverters (class in armi.reactor.converters.tests.test_geometryconverters)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters"]], "testhextorzconverter (class in armi.reactor.converters.tests.test_geometryconverters)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter"]], "testthirdcorehextofullcorechanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryconverters": [[325, "module-armi.reactor.converters.tests.test_geometryConverters"]], "test_addring() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_addRing"]], "test_convert() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_convert"]], "test_createhomogenizedrztblock() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_createHomogenizedRZTBlock"]], "test_edgeassemblies() (armi.reactor.converters.tests.test_geometryconverters.testedgeassemblychanger method)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger.test_edgeAssemblies"]], "test_getassembliesinsector() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_getAssembliesInSector"]], "test_growtofullcorefromthirdcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_growToFullCoreFromThirdCore"]], "test_initnewfullreactor() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_initNewFullReactor"]], "test_setnumberoffuelassems() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_setNumberOfFuelAssems"]], "test_skipgrowtofullcorewhenalreadyfullcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[325, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_skipGrowToFullCoreWhenAlreadyFullCore"]], "testrzreactormeshconverter (class in armi.reactor.converters.tests.test_meshconverters)": [[326, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshconverters": [[326, "module-armi.reactor.converters.tests.test_meshConverters"]], "test_meshbyringcompositionaxialbinslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[326, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsLargeCore"]], "test_meshbyringcompositionaxialbinssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[326, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsSmallCore"]], "test_meshbyringcompositionaxialcoordinateslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[326, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesLargeCore"]], "test_meshbyringcompositionaxialcoordinatessmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[326, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesSmallCore"]], "test_meshbyringcompositionaxialflagslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[326, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsLargeCore"]], "test_meshbyringcompositionaxialflagssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[326, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsSmallCore"]], "massconservationtests (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[327, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests"]], "testpintypeconverters (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[327, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pintypeblockconverters": [[327, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "test_adjustcladthicknessbyid() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[327, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByID"]], "test_adjustcladthicknessbyod() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[327, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByOD"]], "test_adjustsmeardensity() (armi.reactor.converters.tests.test_pintypeblockconverters.massconservationtests method)": [[327, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests.test_adjustSmearDensity"]], "dummyfluxoptions (class in armi.reactor.converters.tests.test_uniformmesh)": [[328, "armi.reactor.converters.tests.test_uniformMesh.DummyFluxOptions"]], "testassemblyuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh"]], "testcalcreationrates (class in armi.reactor.converters.tests.test_uniformmesh)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestCalcReationRates"]], "testconverterfactory (class in armi.reactor.converters.tests.test_uniformmesh)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory"]], "testgammauniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh"]], "testparamconversion (class in armi.reactor.converters.tests.test_uniformmesh)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion"]], "testuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh"]], "testuniformmeshcomponents (class in armi.reactor.converters.tests.test_uniformmesh)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents"]], "testuniformmeshgenerator (class in armi.reactor.converters.tests.test_uniformmesh)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator"]], "testuniformmeshnonuniformassemflags (class in armi.reactor.converters.tests.test_uniformmesh)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags"]], "applynonuniformheightdistribution() (in module armi.reactor.converters.tests.test_uniformmesh)": [[328, "armi.reactor.converters.tests.test_uniformMesh.applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformmesh": [[328, "module-armi.reactor.converters.tests.test_uniformMesh"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_applyStateToOriginal"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_applyStateToOriginal"]], "test_blueprintcopy() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshcomponents method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents.test_blueprintCopy"]], "test_calcreactionratesblocklist() (armi.reactor.converters.tests.test_uniformmesh.testcalcreationrates method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestCalcReationRates.test_calcReactionRatesBlockList"]], "test_clearassemblystate() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_clearAssemblyState"]], "test_computeaverageaxialmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_computeAverageAxialMesh"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_convertNumberDensities"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_convertNumberDensities"]], "test_converterfactory() (armi.reactor.converters.tests.test_uniformmesh.testconverterfactory method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory.test_converterFactory"]], "test_filtermesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filterMesh"]], "test_filteredtopandbottom() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filteredTopAndBottom"]], "test_generatecommonmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_generateCommonMesh"]], "test_makeassemuniformmeshparammappingsamemesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemUniformMeshParamMappingSameMesh"]], "test_makeassemwithuniformmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMesh"]], "test_makeassemwithuniformmeshsubmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMeshSubmesh"]], "test_reactorconversion() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshnonuniformassemflags method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags.test_reactorConversion"]], "test_setstatefromoverlaps() (armi.reactor.converters.tests.test_uniformmesh.testparamconversion method)": [[328, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion.test_setStateFromOverlaps"]], "gammauniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[329, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter"]], "neutronicsuniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[329, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter"]], "parammapper (class in armi.reactor.converters.uniformmesh)": [[329, "armi.reactor.converters.uniformMesh.ParamMapper"]], "uniformmeshgenerator (class in armi.reactor.converters.uniformmesh)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGenerator"]], "uniformmeshgeometryconverter (class in armi.reactor.converters.uniformmesh)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter"]], "applystatetooriginal() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.applyStateToOriginal"]], "armi.reactor.converters.uniformmesh": [[329, "module-armi.reactor.converters.uniformMesh"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[329, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[329, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.blockParamMappingCategories"]], "clearstateonassemblies() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.clearStateOnAssemblies"]], "convert() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.convert"]], "converterfactory() (in module armi.reactor.converters.uniformmesh)": [[329, "armi.reactor.converters.uniformMesh.converterFactory"]], "generatecommonmesh() (armi.reactor.converters.uniformmesh.uniformmeshgenerator method)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGenerator.generateCommonMesh"]], "initnewreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.initNewReactor"]], "makeassemwithuniformmesh() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.makeAssemWithUniformMesh"]], "paramgetter() (armi.reactor.converters.uniformmesh.parammapper method)": [[329, "armi.reactor.converters.uniformMesh.ParamMapper.paramGetter"]], "paramsetter() (armi.reactor.converters.uniformmesh.parammapper static method)": [[329, "armi.reactor.converters.uniformMesh.ParamMapper.paramSetter"]], "plotconvertedreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.plotConvertedReactor"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[329, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[329, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reactorParamMappingCategories"]], "reset() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reset"]], "setassemblystatefromoverlaps() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.setAssemblyStateFromOverlaps"]], "setnumberdensitiesfromoverlaps() (in module armi.reactor.converters.uniformmesh)": [[329, "armi.reactor.converters.uniformMesh.setNumberDensitiesFromOverlaps"]], "updatereactionrates() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[329, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.updateReactionRates"]], "core (class in armi.reactor.cores)": [[330, "armi.reactor.cores.Core"]], "add() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.add"]], "addmorenodes() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.addMoreNodes"]], "armi.reactor.cores": [[330, "module-armi.reactor.cores"]], "buildcircularringdictionary() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.buildCircularRingDictionary"]], "buildmanualzones() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.buildManualZones"]], "calcblockmaxes() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.calcBlockMaxes"]], "countblockswithflags() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.countBlocksWithFlags"]], "countfuelaxialblocks() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.countFuelAxialBlocks"]], "createassemblyoftype() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.createAssemblyOfType"]], "createfreshfeed() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.createFreshFeed"]], "findallaxialmeshpoints() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.findAllAxialMeshPoints"]], "findallazimeshpoints() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.findAllAziMeshPoints"]], "findallmeshpoints() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.findAllMeshPoints"]], "findallradmeshpoints() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.findAllRadMeshPoints"]], "findaxialmeshindexof() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.findAxialMeshIndexOf"]], "findneighbors() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.findNeighbors"]], "genassembliesaddedthiscycle() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.genAssembliesAddedThisCycle"]], "genblocksbylocname() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.genBlocksByLocName"]], "geomtype (armi.reactor.cores.core property)": [[330, "armi.reactor.cores.Core.geomType"]], "getallxssuffixes() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAllXsSuffixes"]], "getassemblies() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAssemblies"]], "getassembliesincircularring() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAssembliesInCircularRing"]], "getassembliesinring() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAssembliesInRing"]], "getassembliesinsquareorhexring() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAssembliesInSquareOrHexRing"]], "getassembliesoftype() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAssembliesOfType"]], "getassembliesonsymmetryline() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAssembliesOnSymmetryLine"]], "getassembly() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAssembly"]], "getassemblybyname() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAssemblyByName"]], "getassemblypitch() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAssemblyPitch"]], "getassemblywithassemnum() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAssemblyWithAssemNum"]], "getassemblywithstringlocation() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAssemblyWithStringLocation"]], "getavgtemp() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getAvgTemp"]], "getblockbyname() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getBlockByName"]], "getblocks() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getBlocks"]], "getblocksbyindices() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getBlocksByIndices"]], "getcoreradius() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getCoreRadius"]], "getfirstassembly() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getFirstAssembly"]], "getfirstblock() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getFirstBlock"]], "getfirstfuelblockaxialnode() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getFirstFuelBlockAxialNode"]], "getfluxvector() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getFluxVector"]], "getfuelbottomheight() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getFuelBottomHeight"]], "getlocationcontents() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getLocationContents"]], "getmaxassembliesinhexring() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getMaxAssembliesInHexRing"]], "getmaxblockparam() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getMaxBlockParam"]], "getmaxnumpins() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getMaxNumPins"]], "getminimumpercentfluxinfuel() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getMinimumPercentFluxInFuel"]], "getnozzletypes() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getNozzleTypes"]], "getnuclidecategories() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getNuclideCategories"]], "getnumassemblieswithallringsfilledout() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getNumAssembliesWithAllRingsFilledOut"]], "getnumenergygroups() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getNumEnergyGroups"]], "getnumhexrings() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getNumHexRings"]], "getnumrings() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getNumRings"]], "getscalarevolution() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getScalarEvolution"]], "gettotalblockparam() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.getTotalBlockParam"]], "growtofullcore() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.growToFullCore"]], "isfullcore (armi.reactor.cores.core property)": [[330, "armi.reactor.cores.Core.isFullCore"]], "lib (armi.reactor.cores.core property)": [[330, "armi.reactor.cores.Core.lib"]], "locateallassemblies() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.locateAllAssemblies"]], "makelocationlookup() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.makeLocationLookup"]], "normalizeinternalbookeeping() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.normalizeInternalBookeeping"]], "normalizenames() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.normalizeNames"]], "pdefs (armi.reactor.cores.core attribute)": [[330, "armi.reactor.cores.Core.pDefs"]], "paramcollectiontype (armi.reactor.cores.core attribute)": [[330, "armi.reactor.cores.Core.paramCollectionType"]], "powermultiplier (armi.reactor.cores.core property)": [[330, "armi.reactor.cores.Core.powerMultiplier"]], "processloading() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.processLoading"]], "r (armi.reactor.cores.core property)": [[330, "armi.reactor.cores.Core.r"]], "refassem (armi.reactor.cores.core property)": [[330, "armi.reactor.cores.Core.refAssem"]], "regenassemblylists() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.regenAssemblyLists"]], "removeassembliesinring() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.removeAssembliesInRing"]], "removeassembly() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.removeAssembly"]], "saveallflux() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.saveAllFlux"]], "setblockmassparams() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.setBlockMassParams"]], "setmovelist() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.setMoveList"]], "setoptionsfromcs() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.setOptionsFromCs"]], "setpitchuniform() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.setPitchUniform"]], "setpowerfromdensity() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.setPowerFromDensity"]], "setpowerifnecessary() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.setPowerIfNecessary"]], "sortassemsbyring() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.sortAssemsByRing"]], "summarizenuclidecategories() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.summarizeNuclideCategories"]], "summarizereactorstats() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.summarizeReactorStats"]], "symmetry (armi.reactor.cores.core property)": [[330, "armi.reactor.cores.Core.symmetry"]], "updateaxialmesh() (armi.reactor.cores.core method)": [[330, "armi.reactor.cores.Core.updateAxialMesh"]], "excorecollection (class in armi.reactor.excorestructure)": [[331, "armi.reactor.excoreStructure.ExcoreCollection"]], "excorestructure (class in armi.reactor.excorestructure)": [[331, "armi.reactor.excoreStructure.ExcoreStructure"]], "add() (armi.reactor.excorestructure.excorestructure method)": [[331, "armi.reactor.excoreStructure.ExcoreStructure.add"]], "armi.reactor.excorestructure": [[331, "module-armi.reactor.excoreStructure"]], "paramcollectiontype (armi.reactor.excorestructure.excorestructure attribute)": [[331, "armi.reactor.excoreStructure.ExcoreStructure.paramCollectionType"]], "r (armi.reactor.excorestructure.excorestructure property)": [[331, "armi.reactor.excoreStructure.ExcoreStructure.r"]], "a (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.A"]], "aclp (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.ACLP"]], "annular (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.ANNULAR"]], "axial (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.AXIAL"]], "b (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.B"]], "batchmassaddition (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.BATCHMASSADDITION"]], "blanket (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.BLANKET"]], "bond (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.BOND"]], "booster (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.BOOSTER"]], "c (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.C"]], "clad (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.CLAD"]], "control (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.CONTROL"]], "coolant (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.COOLANT"]], "core_barrel (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.CORE_BARREL"]], "d (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.D"]], "depletable (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.DEPLETABLE"]], "driver (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.DRIVER"]], "dspacerinside (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.DSPACERINSIDE"]], "duct (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.DUCT"]], "dummy (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.DUMMY"]], "e (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.E"]], "feed (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.FEED"]], "fission_chamber (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.FISSION_CHAMBER"]], "fuel (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.FUEL"]], "flags (class in armi.reactor.flags)": [[332, "armi.reactor.flags.Flags"]], "gap (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.GAP"]], "grid_plate (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.GRID_PLATE"]], "guide_tube (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.GUIDE_TUBE"]], "handling_socket (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.HANDLING_SOCKET"]], "high (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.HIGH"]], "igniter (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.IGNITER"]], "inlet_nozzle (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.INLET_NOZZLE"]], "inner (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.INNER"]], "intercoolant (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.INTERCOOLANT"]], "interductcoolant (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.INTERDUCTCOOLANT"]], "invalidflagserror": [[332, "armi.reactor.flags.InvalidFlagsError"]], "liner (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.LINER"]], "load_pad (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.LOAD_PAD"]], "low (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.LOW"]], "lower (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.LOWER"]], "material (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.MATERIAL"]], "medium (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.MEDIUM"]], "middle (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.MIDDLE"]], "moderator (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.MODERATOR"]], "moveable (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.MOVEABLE"]], "mox (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.MOX"]], "outer (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.OUTER"]], "pin (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.PIN"]], "plenum (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.PLENUM"]], "poison (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.POISON"]], "primary (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.PRIMARY"]], "radial (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.RADIAL"]], "reflector (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.REFLECTOR"]], "secondary (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.SECONDARY"]], "shield (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.SHIELD"]], "shield_block (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.SHIELD_BLOCK"]], "shutdown (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.SHUTDOWN"]], "skid (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.SKID"]], "slug (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.SLUG"]], "starter (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.STARTER"]], "structure (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.STRUCTURE"]], "target (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.TARGET"]], "tertiary (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.TERTIARY"]], "test (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.TEST"]], "ultimate (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.ULTIMATE"]], "upper (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.UPPER"]], "void (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.VOID"]], "wire (armi.reactor.flags.flags attribute)": [[332, "armi.reactor.flags.Flags.WIRE"]], "armi.reactor.flags": [[332, "module-armi.reactor.flags"]], "fromstring() (armi.reactor.flags.flags class method)": [[332, "armi.reactor.flags.Flags.fromString"]], "fromstringignoreerrors() (armi.reactor.flags.flags class method)": [[332, "armi.reactor.flags.Flags.fromStringIgnoreErrors"]], "tostring() (armi.reactor.flags.flags class method)": [[332, "armi.reactor.flags.Flags.toString"]], "boundarytype (class in armi.reactor.geometry)": [[333, "armi.reactor.geometry.BoundaryType"]], "cartesian (armi.reactor.geometry.geomtype attribute)": [[333, "armi.reactor.geometry.GeomType.CARTESIAN"]], "domaintype (class in armi.reactor.geometry)": [[333, "armi.reactor.geometry.DomainType"]], "eighth_core (armi.reactor.geometry.domaintype attribute)": [[333, "armi.reactor.geometry.DomainType.EIGHTH_CORE"]], "full_core (armi.reactor.geometry.domaintype attribute)": [[333, "armi.reactor.geometry.DomainType.FULL_CORE"]], "geomtype (class in armi.reactor.geometry)": [[333, "armi.reactor.geometry.GeomType"]], "hex (armi.reactor.geometry.geomtype attribute)": [[333, "armi.reactor.geometry.GeomType.HEX"]], "no_symmetry (armi.reactor.geometry.boundarytype attribute)": [[333, "armi.reactor.geometry.BoundaryType.NO_SYMMETRY"]], "null (armi.reactor.geometry.domaintype attribute)": [[333, "armi.reactor.geometry.DomainType.NULL"]], "periodic (armi.reactor.geometry.boundarytype attribute)": [[333, "armi.reactor.geometry.BoundaryType.PERIODIC"]], "quarter_core (armi.reactor.geometry.domaintype attribute)": [[333, "armi.reactor.geometry.DomainType.QUARTER_CORE"]], "reflective (armi.reactor.geometry.boundarytype attribute)": [[333, "armi.reactor.geometry.BoundaryType.REFLECTIVE"]], "rz (armi.reactor.geometry.geomtype attribute)": [[333, "armi.reactor.geometry.GeomType.RZ"]], "rzt (armi.reactor.geometry.geomtype attribute)": [[333, "armi.reactor.geometry.GeomType.RZT"]], "sixteenth_core (armi.reactor.geometry.domaintype attribute)": [[333, "armi.reactor.geometry.DomainType.SIXTEENTH_CORE"]], "symmetrytype (class in armi.reactor.geometry)": [[333, "armi.reactor.geometry.SymmetryType"]], "third_core (armi.reactor.geometry.domaintype attribute)": [[333, "armi.reactor.geometry.DomainType.THIRD_CORE"]], "valid_symmetry (armi.reactor.geometry.symmetrytype attribute)": [[333, "armi.reactor.geometry.SymmetryType.VALID_SYMMETRY"]], "armi.reactor.geometry": [[333, "module-armi.reactor.geometry"]], "checkvalidgeomsymmetrycombo() (in module armi.reactor.geometry)": [[333, "armi.reactor.geometry.checkValidGeomSymmetryCombo"]], "checkvalidsymmetry() (armi.reactor.geometry.symmetrytype method)": [[333, "armi.reactor.geometry.SymmetryType.checkValidSymmetry"]], "createvalidsymmetrystrings() (armi.reactor.geometry.symmetrytype class method)": [[333, "armi.reactor.geometry.SymmetryType.createValidSymmetryStrings"]], "fromany() (armi.reactor.geometry.boundarytype class method)": [[333, "armi.reactor.geometry.BoundaryType.fromAny"]], "fromany() (armi.reactor.geometry.domaintype class method)": [[333, "armi.reactor.geometry.DomainType.fromAny"]], "fromany() (armi.reactor.geometry.geomtype class method)": [[333, "armi.reactor.geometry.GeomType.fromAny"]], "fromany() (armi.reactor.geometry.symmetrytype class method)": [[333, "armi.reactor.geometry.SymmetryType.fromAny"]], "fromstr() (armi.reactor.geometry.boundarytype class method)": [[333, "armi.reactor.geometry.BoundaryType.fromStr"]], "fromstr() (armi.reactor.geometry.domaintype class method)": [[333, "armi.reactor.geometry.DomainType.fromStr"]], "fromstr() (armi.reactor.geometry.geomtype class method)": [[333, "armi.reactor.geometry.GeomType.fromStr"]], "fromstr() (armi.reactor.geometry.symmetrytype class method)": [[333, "armi.reactor.geometry.SymmetryType.fromStr"]], "hassymmetry() (armi.reactor.geometry.boundarytype method)": [[333, "armi.reactor.geometry.BoundaryType.hasSymmetry"]], "label (armi.reactor.geometry.boundarytype property)": [[333, "armi.reactor.geometry.BoundaryType.label"]], "label (armi.reactor.geometry.domaintype property)": [[333, "armi.reactor.geometry.DomainType.label"]], "label (armi.reactor.geometry.geomtype property)": [[333, "armi.reactor.geometry.GeomType.label"]], "symmetryfactor() (armi.reactor.geometry.domaintype method)": [[333, "armi.reactor.geometry.DomainType.symmetryFactor"]], "symmetryfactor() (armi.reactor.geometry.symmetrytype method)": [[333, "armi.reactor.geometry.SymmetryType.symmetryFactor"]], "armi.reactor.grids": [[334, "module-armi.reactor.grids"]], "locatorlabeltoindices() (in module armi.reactor.grids)": [[334, "armi.reactor.grids.locatorLabelToIndices"]], "axialgrid (class in armi.reactor.grids.axial)": [[335, "armi.reactor.grids.axial.AxialGrid"]], "armi.reactor.grids.axial": [[335, "module-armi.reactor.grids.axial"]], "armiobject (armi.reactor.grids.axial.axialgrid attribute)": [[335, "armi.reactor.grids.axial.AxialGrid.armiObject"]], "fromncells() (armi.reactor.grids.axial.axialgrid class method)": [[335, "armi.reactor.grids.axial.AxialGrid.fromNCells"]], "getindicesfromringandpos() (armi.reactor.grids.axial.axialgrid static method)": [[335, "armi.reactor.grids.axial.AxialGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.axial.axialgrid static method)": [[335, "armi.reactor.grids.axial.AxialGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.axial.axialgrid static method)": [[335, "armi.reactor.grids.axial.AxialGrid.getPositionsInRing"]], "getsymmetricequivalents() (armi.reactor.grids.axial.axialgrid static method)": [[335, "armi.reactor.grids.axial.AxialGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.axial.axialgrid static method)": [[335, "armi.reactor.grids.axial.AxialGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.axial.axialgrid static method)": [[335, "armi.reactor.grids.axial.AxialGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.axial.axialgrid property)": [[335, "armi.reactor.grids.axial.AxialGrid.pitch"]], "cartesiangrid (class in armi.reactor.grids.cartesian)": [[336, "armi.reactor.grids.cartesian.CartesianGrid"]], "armi.reactor.grids.cartesian": [[336, "module-armi.reactor.grids.cartesian"]], "armiobject (armi.reactor.grids.cartesian.cartesiangrid attribute)": [[336, "armi.reactor.grids.cartesian.CartesianGrid.armiObject"]], "changepitch() (armi.reactor.grids.cartesian.cartesiangrid method)": [[336, "armi.reactor.grids.cartesian.CartesianGrid.changePitch"]], "fromrectangle() (armi.reactor.grids.cartesian.cartesiangrid class method)": [[336, "armi.reactor.grids.cartesian.CartesianGrid.fromRectangle"]], "getindicesfromringandpos() (armi.reactor.grids.cartesian.cartesiangrid static method)": [[336, "armi.reactor.grids.cartesian.CartesianGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.cartesian.cartesiangrid method)": [[336, "armi.reactor.grids.cartesian.CartesianGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.cartesian.cartesiangrid method)": [[336, "armi.reactor.grids.cartesian.CartesianGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.cartesian.cartesiangrid method)": [[336, "armi.reactor.grids.cartesian.CartesianGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.cartesian.cartesiangrid method)": [[336, "armi.reactor.grids.cartesian.CartesianGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.cartesian.cartesiangrid method)": [[336, "armi.reactor.grids.cartesian.CartesianGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.cartesian.cartesiangrid method)": [[336, "armi.reactor.grids.cartesian.CartesianGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.cartesian.cartesiangrid property)": [[336, "armi.reactor.grids.cartesian.CartesianGrid.pitch"]], "armi.reactor.grids.constants": [[337, "module-armi.reactor.grids.constants"]], "grid (class in armi.reactor.grids.grid)": [[338, "armi.reactor.grids.grid.Grid"]], "armi.reactor.grids.grid": [[338, "module-armi.reactor.grids.grid"]], "armiobject (armi.reactor.grids.grid.grid attribute)": [[338, "armi.reactor.grids.grid.Grid.armiObject"]], "backup() (armi.reactor.grids.grid.grid method)": [[338, "armi.reactor.grids.grid.Grid.backUp"]], "geomtype (armi.reactor.grids.grid.grid property)": [[338, "armi.reactor.grids.grid.Grid.geomType"]], "getcellbase() (armi.reactor.grids.grid.grid method)": [[338, "armi.reactor.grids.grid.Grid.getCellBase"]], "getcelltop() (armi.reactor.grids.grid.grid method)": [[338, "armi.reactor.grids.grid.Grid.getCellTop"]], "getcoordinates() (armi.reactor.grids.grid.grid method)": [[338, "armi.reactor.grids.grid.Grid.getCoordinates"]], "getlabel() (armi.reactor.grids.grid.grid static method)": [[338, "armi.reactor.grids.grid.Grid.getLabel"]], "getsymmetricequivalents() (armi.reactor.grids.grid.grid method)": [[338, "armi.reactor.grids.grid.Grid.getSymmetricEquivalents"]], "isaxialonly (armi.reactor.grids.grid.grid property)": [[338, "armi.reactor.grids.grid.Grid.isAxialOnly"]], "items() (armi.reactor.grids.grid.grid method)": [[338, "armi.reactor.grids.grid.Grid.items"]], "locatorindomain() (armi.reactor.grids.grid.grid method)": [[338, "armi.reactor.grids.grid.Grid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.grid.grid method)": [[338, "armi.reactor.grids.grid.Grid.overlapsWhichSymmetryLine"]], "reduce() (armi.reactor.grids.grid.grid method)": [[338, "armi.reactor.grids.grid.Grid.reduce"]], "restorebackup() (armi.reactor.grids.grid.grid method)": [[338, "armi.reactor.grids.grid.Grid.restoreBackup"]], "symmetry (armi.reactor.grids.grid.grid property)": [[338, "armi.reactor.grids.grid.Grid.symmetry"]], "hexgrid (class in armi.reactor.grids.hexagonal)": [[339, "armi.reactor.grids.hexagonal.HexGrid"]], "armi.reactor.grids.hexagonal": [[339, "module-armi.reactor.grids.hexagonal"]], "armiobject (armi.reactor.grids.hexagonal.hexgrid attribute)": [[339, "armi.reactor.grids.hexagonal.HexGrid.armiObject"]], "changepitch() (armi.reactor.grids.hexagonal.hexgrid method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.changePitch"]], "cornersup (armi.reactor.grids.hexagonal.hexgrid property)": [[339, "armi.reactor.grids.hexagonal.HexGrid.cornersUp"]], "frompitch() (armi.reactor.grids.hexagonal.hexgrid static method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.fromPitch"]], "generatesortedhexlocationlist() (armi.reactor.grids.hexagonal.hexgrid method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.generateSortedHexLocationList"]], "getindicesfromringandpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.getIndicesFromRingAndPos"]], "getlabel() (armi.reactor.grids.hexagonal.hexgrid method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.getLabel"]], "getminimumrings() (armi.reactor.grids.hexagonal.hexgrid method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.hexagonal.hexgrid method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.hexagonal.hexgrid method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.hexagonal.hexgrid method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.hexagonal.hexgrid method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.getSymmetricEquivalents"]], "indicestoringpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.indicesToRingPos"]], "isinfirstthird() (armi.reactor.grids.hexagonal.hexgrid method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.isInFirstThird"]], "locatorindomain() (armi.reactor.grids.hexagonal.hexgrid method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.hexagonal.hexgrid method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.hexagonal.hexgrid property)": [[339, "armi.reactor.grids.hexagonal.HexGrid.pitch"]], "trianglecoords() (armi.reactor.grids.hexagonal.hexgrid method)": [[339, "armi.reactor.grids.hexagonal.HexGrid.triangleCoords"]], "coordinatelocation (class in armi.reactor.grids.locations)": [[340, "armi.reactor.grids.locations.CoordinateLocation"]], "indexlocation (class in armi.reactor.grids.locations)": [[340, "armi.reactor.grids.locations.IndexLocation"]], "locationbase (class in armi.reactor.grids.locations)": [[340, "armi.reactor.grids.locations.LocationBase"]], "multiindexlocation (class in armi.reactor.grids.locations)": [[340, "armi.reactor.grids.locations.MultiIndexLocation"]], "addingisvalid() (in module armi.reactor.grids.locations)": [[340, "armi.reactor.grids.locations.addingIsValid"]], "append() (armi.reactor.grids.locations.multiindexlocation method)": [[340, "armi.reactor.grids.locations.MultiIndexLocation.append"]], "armi.reactor.grids.locations": [[340, "module-armi.reactor.grids.locations"]], "associate() (armi.reactor.grids.locations.locationbase method)": [[340, "armi.reactor.grids.locations.LocationBase.associate"]], "associate() (armi.reactor.grids.locations.multiindexlocation method)": [[340, "armi.reactor.grids.locations.MultiIndexLocation.associate"]], "detachedcopy() (armi.reactor.grids.locations.indexlocation method)": [[340, "armi.reactor.grids.locations.IndexLocation.detachedCopy"]], "detachedcopy() (armi.reactor.grids.locations.multiindexlocation method)": [[340, "armi.reactor.grids.locations.MultiIndexLocation.detachedCopy"]], "distanceto() (armi.reactor.grids.locations.indexlocation method)": [[340, "armi.reactor.grids.locations.IndexLocation.distanceTo"]], "extend() (armi.reactor.grids.locations.multiindexlocation method)": [[340, "armi.reactor.grids.locations.MultiIndexLocation.extend"]], "getcompleteindices() (armi.reactor.grids.locations.coordinatelocation method)": [[340, "armi.reactor.grids.locations.CoordinateLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.indexlocation method)": [[340, "armi.reactor.grids.locations.IndexLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.multiindexlocation method)": [[340, "armi.reactor.grids.locations.MultiIndexLocation.getCompleteIndices"]], "getglobalcellbase() (armi.reactor.grids.locations.coordinatelocation method)": [[340, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellBase"]], "getglobalcellbase() (armi.reactor.grids.locations.indexlocation method)": [[340, "armi.reactor.grids.locations.IndexLocation.getGlobalCellBase"]], "getglobalcelltop() (armi.reactor.grids.locations.coordinatelocation method)": [[340, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellTop"]], "getglobalcelltop() (armi.reactor.grids.locations.indexlocation method)": [[340, "armi.reactor.grids.locations.IndexLocation.getGlobalCellTop"]], "getglobalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[340, "armi.reactor.grids.locations.IndexLocation.getGlobalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.coordinatelocation method)": [[340, "armi.reactor.grids.locations.CoordinateLocation.getLocalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[340, "armi.reactor.grids.locations.IndexLocation.getLocalCoordinates"]], "getringpos() (armi.reactor.grids.locations.indexlocation method)": [[340, "armi.reactor.grids.locations.IndexLocation.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.locations.indexlocation method)": [[340, "armi.reactor.grids.locations.IndexLocation.getSymmetricEquivalents"]], "grid (armi.reactor.grids.locations.locationbase property)": [[340, "armi.reactor.grids.locations.LocationBase.grid"]], "i (armi.reactor.grids.locations.locationbase property)": [[340, "armi.reactor.grids.locations.LocationBase.i"]], "indices (armi.reactor.grids.locations.indexlocation property)": [[340, "armi.reactor.grids.locations.IndexLocation.indices"]], "indices (armi.reactor.grids.locations.locationbase property)": [[340, "armi.reactor.grids.locations.LocationBase.indices"]], "indices (armi.reactor.grids.locations.multiindexlocation property)": [[340, "armi.reactor.grids.locations.MultiIndexLocation.indices"]], "j (armi.reactor.grids.locations.locationbase property)": [[340, "armi.reactor.grids.locations.LocationBase.j"]], "k (armi.reactor.grids.locations.locationbase property)": [[340, "armi.reactor.grids.locations.LocationBase.k"]], "parentlocation (armi.reactor.grids.locations.indexlocation property)": [[340, "armi.reactor.grids.locations.IndexLocation.parentLocation"]], "pop() (armi.reactor.grids.locations.multiindexlocation method)": [[340, "armi.reactor.grids.locations.MultiIndexLocation.pop"]], "gridparameters (class in armi.reactor.grids.structuredgrid)": [[341, "armi.reactor.grids.structuredGrid.GridParameters"]], "structuredgrid (class in armi.reactor.grids.structuredgrid)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid"]], "armi.reactor.grids.structuredgrid": [[341, "module-armi.reactor.grids.structuredGrid"]], "armiobject (armi.reactor.grids.structuredgrid.structuredgrid attribute)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.armiObject"]], "backup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.backUp"]], "bounds (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[341, "armi.reactor.grids.structuredGrid.GridParameters.bounds"]], "geomtype (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[341, "armi.reactor.grids.structuredGrid.GridParameters.geomType"]], "getaboveandbelowcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getAboveAndBelowCellIndices"]], "getallindices() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getAllIndices"]], "getbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getBounds"]], "getcellbase() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getCellBase"]], "getcelltop() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getCellTop"]], "getcoordinates() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getCoordinates"]], "getindexbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getIndexBounds"]], "getindicesfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getIndicesFromRingAndPos"]], "getlocatorfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getLocatorFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.getRingPos"]], "isaxialonly (armi.reactor.grids.structuredgrid.structuredgrid property)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.isAxialOnly"]], "items() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.items"]], "offset (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[341, "armi.reactor.grids.structuredGrid.GridParameters.offset"]], "offset (armi.reactor.grids.structuredgrid.structuredgrid property)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.offset"]], "pitch (armi.reactor.grids.structuredgrid.structuredgrid property)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.pitch"]], "reduce() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.reduce"]], "restorebackup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[341, "armi.reactor.grids.structuredGrid.StructuredGrid.restoreBackup"]], "symmetry (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[341, "armi.reactor.grids.structuredGrid.GridParameters.symmetry"]], "unitsteplimits (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[341, "armi.reactor.grids.structuredGrid.GridParameters.unitStepLimits"]], "unitsteps (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[341, "armi.reactor.grids.structuredGrid.GridParameters.unitSteps"]], "thetarzgrid (class in armi.reactor.grids.thetarz)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid"]], "armi.reactor.grids.thetarz": [[342, "module-armi.reactor.grids.thetarz"]], "armiobject (armi.reactor.grids.thetarz.thetarzgrid attribute)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid.armiObject"]], "fromgeom() (armi.reactor.grids.thetarz.thetarzgrid class method)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid.fromGeom"]], "getcoordinates() (armi.reactor.grids.thetarz.thetarzgrid method)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid.getCoordinates"]], "getindicesfromringandpos() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.thetarz.thetarzgrid method)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.thetarz.thetarzgrid method)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid.getSymmetricEquivalents"]], "indicesofbounds() (armi.reactor.grids.thetarz.thetarzgrid method)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid.indicesOfBounds"]], "locatorindomain() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid.overlapsWhichSymmetryLine"]], "pitch() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[342, "armi.reactor.grids.thetarz.ThetaRZGrid.pitch"]], "armi.reactor.parameters": [[343, "module-armi.reactor.parameters"]], "reset() (in module armi.reactor.parameters)": [[343, "armi.reactor.parameters.reset"]], "parameterdefinitionerror": [[344, "armi.reactor.parameters.exceptions.ParameterDefinitionError"]], "parametererror": [[344, "armi.reactor.parameters.exceptions.ParameterError"]], "unknownparametererror": [[344, "armi.reactor.parameters.exceptions.UnknownParameterError"]], "armi.reactor.parameters.exceptions": [[344, "module-armi.reactor.parameters.exceptions"]], "global_serial_num (in module armi.reactor.parameters.parametercollections)": [[345, "armi.reactor.parameters.parameterCollections.GLOBAL_SERIAL_NUM"]], "parametercollection (class in armi.reactor.parameters.parametercollections)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection"]], "applyallparameters() (in module armi.reactor.parameters.parametercollections)": [[345, "armi.reactor.parameters.parameterCollections.applyAllParameters"]], "applyparameters() (armi.reactor.parameters.parametercollections.parametercollection class method)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.applyParameters"]], "armi.reactor.parameters.parametercollections": [[345, "module-armi.reactor.parameters.parameterCollections"]], "backup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.backUp"]], "collectpluginparameters() (in module armi.reactor.parameters.parametercollections)": [[345, "armi.reactor.parameters.parameterCollections.collectPluginParameters"]], "get() (armi.reactor.parameters.parametercollections.parametercollection method)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.get"]], "getsyncdata() (armi.reactor.parameters.parametercollections.parametercollection method)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.getSyncData"]], "items() (armi.reactor.parameters.parametercollections.parametercollection method)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.items"]], "keys() (armi.reactor.parameters.parametercollections.parametercollection method)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.keys"]], "pdefs (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.pDefs"]], "paramdefs (armi.reactor.parameters.parametercollections.parametercollection property)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.paramDefs"]], "restorebackup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.restoreBackup"]], "serialnum (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.serialNum"]], "update() (armi.reactor.parameters.parametercollections.parametercollection method)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.update"]], "values() (armi.reactor.parameters.parametercollections.parametercollection method)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.values"]], "where() (armi.reactor.parameters.parametercollections.parametercollection method)": [[345, "armi.reactor.parameters.parameterCollections.ParameterCollection.where"]], "average (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.ParamLocation.AVERAGE"]], "bottom (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.ParamLocation.BOTTOM"]], "centroid (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CENTROID"]], "children (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CHILDREN"]], "corners (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CORNERS"]], "category (class in armi.reactor.parameters.parameterdefinitions)": [[346, "armi.reactor.parameters.parameterDefinitions.Category"]], "edges (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.ParamLocation.EDGES"]], "max (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.ParamLocation.MAX"]], "nodefault (class in armi.reactor.parameters.parameterdefinitions)": [[346, "armi.reactor.parameters.parameterDefinitions.NoDefault"]], "paramlocation (class in armi.reactor.parameters.parameterdefinitions)": [[346, "armi.reactor.parameters.parameterDefinitions.ParamLocation"]], "parameter (class in armi.reactor.parameters.parameterdefinitions)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter"]], "parameterbuilder (class in armi.reactor.parameters.parameterdefinitions)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder"]], "parameterdefinitioncollection (class in armi.reactor.parameters.parameterdefinitions)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection"]], "serializer (class in armi.reactor.parameters.parameterdefinitions)": [[346, "armi.reactor.parameters.parameterDefinitions.Serializer"]], "top (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.ParamLocation.TOP"]], "volume_integrated (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.ParamLocation.VOLUME_INTEGRATED"]], "add() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.add"]], "armi.reactor.parameters.parameterdefinitions": [[346, "module-armi.reactor.parameters.parameterDefinitions"]], "assigninblueprints (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.assignInBlueprints"]], "assigned (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.assigned"]], "associateparameterdefinitioncollection() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.associateParameterDefinitionCollection"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.atLocation"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.atLocation"]], "backup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.backUp"]], "bynameandcollectiontype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndCollectionType"]], "bynameandtype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndType"]], "categories (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.categories"]], "categories (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.categories"]], "collectiontype (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.collectionType"]], "createbuilder() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.createBuilder"]], "cumulative (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.cumulative"]], "cumulativeovercycle (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.cumulativeOverCycle"]], "defparam() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.defParam"]], "default (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.default"]], "depletion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.depletion"]], "description (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.description"]], "detailedaxialexpansion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.detailedAxialExpansion"]], "extend() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.extend"]], "fieldname (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.fieldName"]], "fluxquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.fluxQuantities"]], "fortype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.forType"]], "gamma (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.gamma"]], "hascategory() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.hasCategory"]], "incategory() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.inCategory"]], "isnumpyarray() (in module armi.reactor.parameters.parameterdefinitions)": [[346, "armi.reactor.parameters.parameterDefinitions.isNumpyArray"]], "items() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.items"]], "location (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.location"]], "lock() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.lock"]], "locked (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.locked"]], "multigroupquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.multiGroupQuantities"]], "name (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.name"]], "names (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.names"]], "neutronics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.neutronics"]], "pack() (armi.reactor.parameters.parameterdefinitions.serializer static method)": [[346, "armi.reactor.parameters.parameterDefinitions.Serializer.pack"]], "pinquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.pinQuantities"]], "reactivitycoefficients (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.reactivityCoefficients"]], "resetassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.resetAssignmentFlag"]], "restorebackup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.restoreBackup"]], "retainonreplacement (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.retainOnReplacement"]], "savetodb (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.saveToDB"]], "serializer (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.serializer"]], "setassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.setAssignmentFlag"]], "setter() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.setter"]], "since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.since"]], "thermalhydraulics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Category.thermalHydraulics"]], "towritetodb() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.toWriteToDB"]], "unchanged_since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[346, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.unchanged_since"]], "units (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Parameter.units"]], "unpack() (armi.reactor.parameters.parameterdefinitions.serializer class method)": [[346, "armi.reactor.parameters.parameterDefinitions.Serializer.unpack"]], "version (armi.reactor.parameters.parameterdefinitions.serializer attribute)": [[346, "armi.reactor.parameters.parameterDefinitions.Serializer.version"]], "resolveparametersmeta (class in armi.reactor.parameters.resolvecollections)": [[347, "armi.reactor.parameters.resolveCollections.ResolveParametersMeta"]], "armi.reactor.parameters.resolvecollections": [[347, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorparameters": [[348, "module-armi.reactor.reactorParameters"]], "definecoreparameters() (in module armi.reactor.reactorparameters)": [[348, "armi.reactor.reactorParameters.defineCoreParameters"]], "definereactorparameters() (in module armi.reactor.reactorparameters)": [[348, "armi.reactor.reactorParameters.defineReactorParameters"]], "makeparametersreadonly() (in module armi.reactor.reactorparameters)": [[348, "armi.reactor.reactorParameters.makeParametersReadOnly"]], "reactor (class in armi.reactor.reactors)": [[349, "armi.reactor.reactors.Reactor"]], "add() (armi.reactor.reactors.reactor method)": [[349, "armi.reactor.reactors.Reactor.add"]], "armi.reactor.reactors": [[349, "module-armi.reactor.reactors"]], "factory() (in module armi.reactor.reactors)": [[349, "armi.reactor.reactors.factory"]], "incrementassemnum() (armi.reactor.reactors.reactor method)": [[349, "armi.reactor.reactors.Reactor.incrementAssemNum"]], "loadfromcs() (in module armi.reactor.reactors)": [[349, "armi.reactor.reactors.loadFromCs"]], "normalizenames() (armi.reactor.reactors.reactor method)": [[349, "armi.reactor.reactors.Reactor.normalizeNames"]], "pdefs (armi.reactor.reactors.reactor attribute)": [[349, "armi.reactor.reactors.Reactor.pDefs"]], "paramcollectiontype (armi.reactor.reactors.reactor attribute)": [[349, "armi.reactor.reactors.Reactor.paramCollectionType"]], "spentfuelpool (class in armi.reactor.spentfuelpool)": [[350, "armi.reactor.spentFuelPool.SpentFuelPool"]], "add() (armi.reactor.spentfuelpool.spentfuelpool method)": [[350, "armi.reactor.spentFuelPool.SpentFuelPool.add"]], "armi.reactor.spentfuelpool": [[350, "module-armi.reactor.spentFuelPool"]], "getassembly() (armi.reactor.spentfuelpool.spentfuelpool method)": [[350, "armi.reactor.spentFuelPool.SpentFuelPool.getAssembly"]], "normalizenames() (armi.reactor.spentfuelpool.spentfuelpool method)": [[350, "armi.reactor.spentFuelPool.SpentFuelPool.normalizeNames"]], "paramcollectiontype (armi.reactor.spentfuelpool.spentfuelpool attribute)": [[350, "armi.reactor.spentFuelPool.SpentFuelPool.paramCollectionType"]], "root_tag (armi.reactor.systemlayoutinput.systemlayoutinput attribute)": [[351, "armi.reactor.systemLayoutInput.SystemLayoutInput.ROOT_TAG"]], "systemlayoutinput (class in armi.reactor.systemlayoutinput)": [[351, "armi.reactor.systemLayoutInput.SystemLayoutInput"]], "armi.reactor.systemlayoutinput": [[351, "module-armi.reactor.systemLayoutInput"]], "fromreactor() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[351, "armi.reactor.systemLayoutInput.SystemLayoutInput.fromReactor"]], "growtofullcore() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[351, "armi.reactor.systemLayoutInput.SystemLayoutInput.growToFullCore"]], "loadfromcs() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[351, "armi.reactor.systemLayoutInput.SystemLayoutInput.loadFromCs"]], "modifyeqpaths() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[351, "armi.reactor.systemLayoutInput.SystemLayoutInput.modifyEqPaths"]], "readgeomfromfile() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[351, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromFile"]], "readgeomfromstream() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[351, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromStream"]], "togridblueprints() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[351, "armi.reactor.systemLayoutInput.SystemLayoutInput.toGridBlueprints"]], "writegeom() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[351, "armi.reactor.systemLayoutInput.SystemLayoutInput.writeGeom"]], "armi.reactor.tests": [[352, "module-armi.reactor.tests"]], "annularfueltestcase (class in armi.reactor.tests.test_assemblies)": [[353, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase"]], "assemblyinreactor_testcase (class in armi.reactor.tests.test_assemblies)": [[353, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase"]], "assembly_testcase (class in armi.reactor.tests.test_assemblies)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase"]], "materialinassembly_testcase (class in armi.reactor.tests.test_assemblies)": [[353, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase"]], "armi.reactor.tests.test_assemblies": [[353, "module-armi.reactor.tests.test_assemblies"]], "buildtestassemblies() (in module armi.reactor.tests.test_assemblies)": [[353, "armi.reactor.tests.test_assemblies.buildTestAssemblies"]], "maketestassembly() (in module armi.reactor.tests.test_assemblies)": [[353, "armi.reactor.tests.test_assemblies.makeTestAssembly"]], "test_uthzrmaterial() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_UThZrMaterial"]], "test_add() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_add"]], "test_adjustresolution() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_adjustResolution"]], "test_append() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_append"]], "test_areacheck() (armi.reactor.tests.test_assemblies.annularfueltestcase method)": [[353, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase.test_areaCheck"]], "test_assem_block_types() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_assem_block_types"]], "test_assem_hex_type() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_assem_hex_type"]], "test_averageplenumtemperature() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_averagePlenumTemperature"]], "test_calcavgparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcAvgParam"]], "test_calctotalparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcTotalParam"]], "test_calculatezcoords() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calculateZCoords"]], "test_carestiancoordinates() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_carestianCoordinates"]], "test_countblocksoftype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_countBlocksOfType"]], "test_duplicate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_duplicate"]], "test_extend() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_extend"]], "test_getage() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAge"]], "test_getarea() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getArea"]], "test_getaxialmesh() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAxialMesh"]], "test_getbindexfromzindex() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBIndexFromZIndex"]], "test_getblockdata() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlockData"]], "test_getblocks() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocks"]], "test_getblocksandz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksAndZ"]], "test_getblocksbetweenelevations() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksBetweenElevations"]], "test_getdim() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDim"]], "test_getdominantmaterial() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDominantMaterial"]], "test_getelevationboundariesbyblocktype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getElevationBoundariesByBlockType"]], "test_getelevationsmatchingparamvalue() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getElevationsMatchingParamValue"]], "test_getfirstblock() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlock"]], "test_getfirstblockbytype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlockByType"]], "test_getfissilemass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFissileMass"]], "test_getheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getHeight"]], "test_getlocation() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getLocation"]], "test_getmass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMass"]], "test_getmaxparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMaxParam"]], "test_getname() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getName"]], "test_getnum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getNum"]], "test_getparamvaluesatz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getParamValuesAtZ"]], "test_getreactiveheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getReactiveHeight"]], "test_gettotalheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getTotalHeight"]], "test_getvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getVolume"]], "test_hascontinuouscoolantchannel() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasContinuousCoolantChannel"]], "test_hasflags() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasFlags"]], "test_isonwhichsymmetryline() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_isOnWhichSymmetryLine"]], "test_iter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iter"]], "test_iteration() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iteration"]], "test_len() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_len"]], "test_makeaxialsnaplist() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_makeAxialSnapList"]], "test_moveto() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_moveTo"]], "test_notesparameter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_notesParameter"]], "test_pinplenumvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_pinPlenumVolume"]], "test_reattach() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reattach"]], "test_reestablishblockorder() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reestablishBlockOrder"]], "test_renameblocksaccordingtoassemblynum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_renameBlocksAccordingToAssemblyNum"]], "test_rotate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_rotate"]], "test_snapaxialmeshtoreference() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_snapAxialMeshToReference"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockigniter() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[353, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[353, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "test_sortnolocator() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_sortNoLocator"]], "test_updatefromassembly() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[353, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_updateFromAssembly"]], "blockenergydepositionconstants (class in armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants"]], "blockinputheightstests (class in armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.BlockInputHeightsTests"]], "block_testcase (class in armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase"]], "cartesianblock_testcase (class in armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase"]], "emptyblockrotatetest (class in armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.EmptyBlockRotateTest"]], "hexblock_testcase (class in armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase"]], "massconservationtests (class in armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.MassConservationTests"]], "pitch (armi.reactor.tests.test_blocks.cartesianblock_testcase attribute)": [[354, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.PITCH"]], "testdetailedndensupdate (class in armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate"]], "testnegativevolume (class in armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.TestNegativeVolume"]], "thrzblock_testcase (class in armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase"]], "applydummydata() (in module armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.applyDummyData"]], "armi.reactor.tests.test_blocks": [[354, "module-armi.reactor.tests.test_blocks"]], "buildsimplefuelblock() (in module armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.buildSimpleFuelBlock"]], "getcomponentdata() (in module armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.getComponentData"]], "loadtestblock() (in module armi.reactor.tests.test_blocks)": [[354, "armi.reactor.tests.test_blocks.loadTestBlock"]], "test_100_getpinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_100_getPinPitch"]], "test_101_getpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_101_getPitch"]], "test_102_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_102_setPitch"]], "test_106_getareafractions() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_106_getAreaFractions"]], "test_27b_setbugroup() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_27b_setBuGroup"]], "test_add() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_add"]], "test_adjustdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustDensity"]], "test_adjustuenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustUEnrich"]], "test_axial() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_axial"]], "test_block_dims() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_block_dims"]], "test_breakfuelcomponentsintoindividuals() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_breakFuelComponentsIntoIndividuals"]], "test_cleardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_clearDensity"]], "test_coldmass() (armi.reactor.tests.test_blocks.massconservationtests method)": [[354, "armi.reactor.tests.test_blocks.MassConservationTests.test_coldMass"]], "test_completeinitialloading() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_completeInitialLoading"]], "test_component_type() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_component_type"]], "test_consistentareawithoverlappingcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentAreaWithOverlappingComponents"]], "test_consistentmassdensityvolumebetweencoldblockandcoldcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"]], "test_consistentmassdensityvolumebetweenhotblockandhotcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"]], "test_coords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_coords"]], "test_dimensionductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[354, "armi.reactor.tests.test_blocks.MassConservationTests.test_dimensionDuctHeatup"]], "test_duplicate() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_duplicate"]], "test_expandallelementalstoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandAllElementalsToIsotopics"]], "test_expandelementaltoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandElementalToIsotopics"]], "test_foundreactor() (armi.reactor.tests.test_blocks.blockinputheightstests method)": [[354, "armi.reactor.tests.test_blocks.BlockInputHeightsTests.test_foundReactor"]], "test_getarea() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getArea"]], "test_getcaptureenergygenerationconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[354, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getCaptureEnergyGenerationConstants"]], "test_getcartesiangrid() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getCartesianGrid"]], "test_getcomponent() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponent"]], "test_getcomponentareafrac() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentAreaFrac"]], "test_getcomponentbyname() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentByName"]], "test_getcomponentnames() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentNames"]], "test_getcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponents"]], "test_getcomponentsinlinkedorder() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsInLinkedOrder"]], "test_getcomponentsofmaterial() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfMaterial"]], "test_getcomponentsofshape() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfShape"]], "test_getdimensions() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getDimensions"]], "test_getductpitch() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getDuctPitch"]], "test_getfissilemassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFissileMassEnrich"]], "test_getfissionenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[354, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getFissionEnergyDepositionConstants"]], "test_getflowarea() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowArea"]], "test_getflowareaperpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowAreaPerPin"]], "test_getgammaenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[354, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getGammaEnergyDepositionConstants"]], "test_gethmdens() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHMDens"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getHydraulicDiameter"]], "test_getmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMass"]], "test_getmasses() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMasses"]], "test_getmfp() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMfp"]], "test_getmicrosuffix() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMicroSuffix"]], "test_getneutronenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[354, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getNeutronEnergyDepositionConstants"]], "test_getnumcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumComponents"]], "test_getnumpins() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumPins"]], "test_getnumpins() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getNumPins"]], "test_getnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberDensity"]], "test_getnumberofatoms() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberOfAtoms"]], "test_getpincenterflattoflat() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCenterFlatToFlat"]], "test_getpincoords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCoords"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchsquare() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchSquare"]], "test_getplenumpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPlenumPin"]], "test_getpu() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPu"]], "test_getreactionrates() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getReactionRates"]], "test_getsmeardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensity"]], "test_getsmeardensityedgecases() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensityEdgeCases"]], "test_getsmeardensitymultipleliner() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensityMultipleLiner"]], "test_getsortedcomponentsinsideofcomponentclad() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentClad"]], "test_getsortedcomponentsinsideofcomponentduct() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentDuct"]], "test_getthetarzgrid() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getThetaRZGrid"]], "test_gettotalenergygenerationconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[354, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getTotalEnergyGenerationConstants"]], "test_gettotalmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalMass"]], "test_gettotalndens() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalNDens"]], "test_gettype() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getType"]], "test_geturaniummassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumMassEnrich"]], "test_geturaniumnumenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumNumEnrich"]], "test_getvolumefractionwithoutparent() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionWithoutParent"]], "test_getvolumefractionswithzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionsWithZeroHeight"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getWettedPerimeter"]], "test_getxstype() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_getXsType"]], "test_gridcreation() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridCreation"]], "test_gridnotcreatedmultiplemultiplicities() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNotCreatedMultipleMultiplicities"]], "test_gridnumpinsandlocations() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNumPinsAndLocations"]], "test_hascomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasComponents"]], "test_hasflags() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasFlags"]], "test_haspinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasPinPitch"]], "test_heightexpansiondifferences() (armi.reactor.tests.test_blocks.massconservationtests method)": [[354, "armi.reactor.tests.test_blocks.MassConservationTests.test_heightExpansionDifferences"]], "test_homogenizedmixture() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_homogenizedMixture"]], "test_masscladheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[354, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCladHeatup"]], "test_massconsistency() (armi.reactor.tests.test_blocks.massconservationtests method)": [[354, "armi.reactor.tests.test_blocks.MassConservationTests.test_massConsistency"]], "test_masscoolheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[354, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCoolHeatup"]], "test_massductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[354, "armi.reactor.tests.test_blocks.MassConservationTests.test_massDuctHeatup"]], "test_massfuelheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[354, "armi.reactor.tests.test_blocks.MassConservationTests.test_massFuelHeatup"]], "test_mergewithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_mergeWithBlock"]], "test_negativevolume() (armi.reactor.tests.test_blocks.testnegativevolume method)": [[354, "armi.reactor.tests.test_blocks.TestNegativeVolume.test_negativeVolume"]], "test_noblueprints() (armi.reactor.tests.test_blocks.blockinputheightstests method)": [[354, "armi.reactor.tests.test_blocks.BlockInputHeightsTests.test_noBlueprints"]], "test_orientation() (armi.reactor.tests.test_blocks.emptyblockrotatetest method)": [[354, "armi.reactor.tests.test_blocks.EmptyBlockRotateTest.test_orientation"]], "test_pinmgfluxes() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_pinMgFluxes"]], "test_radii() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_radii"]], "test_removemass() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_removeMass"]], "test_replaceblockwithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_replaceBlockWithBlock"]], "test_retainstate() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_retainState"]], "test_rotatepins() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_rotatePins"]], "test_setbulimitinfo() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_setBuLimitInfo"]], "test_setimportantparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_setImportantParams"]], "test_setlinpowbypin() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLinPowByPin"]], "test_setlocation() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLocation"]], "test_setmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_setMass"]], "test_setnumberdensities() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensity"]], "test_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_setPitch"]], "test_settype() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_setType"]], "test_setzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_setZeroHeight"]], "test_symmetryfactor() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_symmetryFactor"]], "test_theta() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_theta"]], "test_timenodeparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[354, "armi.reactor.tests.test_blocks.Block_TestCase.test_timeNodeParams"]], "test_updatedetailedndens() (armi.reactor.tests.test_blocks.testdetailedndensupdate method)": [[354, "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate.test_updateDetailedNdens"]], "test_verifyblockdims() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[354, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_verifyBlockDims"]], "testcircle (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestCircle"]], "testcomponent (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestComponent"]], "testcomponentexpansion (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestComponentExpansion"]], "testcomponentfactory (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestComponentFactory"]], "testcube (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestCube"]], "testderivedshape (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestDerivedShape"]], "testderivedshapegetarea (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestDerivedShapeGetArea"]], "testdifferentialradialsegment (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestDifferentialRadialSegment"]], "testgeneralcomponents (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestGeneralComponents"]], "testhelix (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestHelix"]], "testhexholedcircle (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestHexHoledCircle"]], "testhexagon (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestHexagon"]], "testholedhexagon (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestHoledHexagon"]], "testholedrectangle (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestHoledRectangle"]], "testholedsquare (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestHoledSquare"]], "testmaterialadjustments (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestMaterialAdjustments"]], "testnullcomponent (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestNullComponent"]], "testradialsegment (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestRadialSegment"]], "testrectangle (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestRectangle"]], "testshapedcomponent (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestShapedComponent"]], "testsolidrectangle (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestSolidRectangle"]], "testsphere (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestSphere"]], "testsquare (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestSquare"]], "testtriangle (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestTriangle"]], "testunshapedcomponent (class in armi.reactor.tests.test_components)": [[355, "armi.reactor.tests.test_components.TestUnshapedComponent"]], "armi.reactor.tests.test_components": [[355, "module-armi.reactor.tests.test_components"]], "coldouterdiameter (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[355, "armi.reactor.tests.test_components.TestComponentExpansion.coldOuterDiameter"]], "componentcls (armi.reactor.tests.test_components.testcircle attribute)": [[355, "armi.reactor.tests.test_components.TestCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcomponent attribute)": [[355, "armi.reactor.tests.test_components.TestComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcube attribute)": [[355, "armi.reactor.tests.test_components.TestCube.componentCls"]], "componentcls (armi.reactor.tests.test_components.testderivedshape attribute)": [[355, "armi.reactor.tests.test_components.TestDerivedShape.componentCls"]], "componentcls (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[355, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[355, "armi.reactor.tests.test_components.TestGeneralComponents.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhelix attribute)": [[355, "armi.reactor.tests.test_components.TestHelix.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[355, "armi.reactor.tests.test_components.TestHexHoledCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexagon attribute)": [[355, "armi.reactor.tests.test_components.TestHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedhexagon attribute)": [[355, "armi.reactor.tests.test_components.TestHoledHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedrectangle attribute)": [[355, "armi.reactor.tests.test_components.TestHoledRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedsquare attribute)": [[355, "armi.reactor.tests.test_components.TestHoledSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testnullcomponent attribute)": [[355, "armi.reactor.tests.test_components.TestNullComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testradialsegment attribute)": [[355, "armi.reactor.tests.test_components.TestRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testrectangle attribute)": [[355, "armi.reactor.tests.test_components.TestRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[355, "armi.reactor.tests.test_components.TestSolidRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsphere attribute)": [[355, "armi.reactor.tests.test_components.TestSphere.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsquare attribute)": [[355, "armi.reactor.tests.test_components.TestSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testtriangle attribute)": [[355, "armi.reactor.tests.test_components.TestTriangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[355, "armi.reactor.tests.test_components.TestUnshapedComponent.componentCls"]], "componentdims (armi.reactor.tests.test_components.testcircle attribute)": [[355, "armi.reactor.tests.test_components.TestCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testcube attribute)": [[355, "armi.reactor.tests.test_components.TestCube.componentDims"]], "componentdims (armi.reactor.tests.test_components.testderivedshape attribute)": [[355, "armi.reactor.tests.test_components.TestDerivedShape.componentDims"]], "componentdims (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[355, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[355, "armi.reactor.tests.test_components.TestGeneralComponents.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhelix attribute)": [[355, "armi.reactor.tests.test_components.TestHelix.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[355, "armi.reactor.tests.test_components.TestHexHoledCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexagon attribute)": [[355, "armi.reactor.tests.test_components.TestHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedhexagon attribute)": [[355, "armi.reactor.tests.test_components.TestHoledHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedrectangle attribute)": [[355, "armi.reactor.tests.test_components.TestHoledRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedsquare attribute)": [[355, "armi.reactor.tests.test_components.TestHoledSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testradialsegment attribute)": [[355, "armi.reactor.tests.test_components.TestRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testrectangle attribute)": [[355, "armi.reactor.tests.test_components.TestRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[355, "armi.reactor.tests.test_components.TestSolidRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsphere attribute)": [[355, "armi.reactor.tests.test_components.TestSphere.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsquare attribute)": [[355, "armi.reactor.tests.test_components.TestSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testtriangle attribute)": [[355, "armi.reactor.tests.test_components.TestTriangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[355, "armi.reactor.tests.test_components.TestUnshapedComponent.componentDims"]], "componentmassindependentofinputtemp() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[355, "armi.reactor.tests.test_components.TestComponentExpansion.componentMassIndependentOfInputTemp"]], "componentmaterial (armi.reactor.tests.test_components.testderivedshape attribute)": [[355, "armi.reactor.tests.test_components.TestDerivedShape.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[355, "armi.reactor.tests.test_components.TestGeneralComponents.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[355, "armi.reactor.tests.test_components.TestUnshapedComponent.componentMaterial"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedrectangle attribute)": [[355, "armi.reactor.tests.test_components.TestHoledRectangle.dimsToTestExpansion"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedsquare attribute)": [[355, "armi.reactor.tests.test_components.TestHoledSquare.dimsToTestExpansion"]], "expansionconservationcoldheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[355, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationColdHeightDefined"]], "expansionconservationhotheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[355, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationHotHeightDefined"]], "getcirclefueldict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[355, "armi.reactor.tests.test_components.TestComponentFactory.getCircleFuelDict"]], "getcirclevoiddict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[355, "armi.reactor.tests.test_components.TestComponentFactory.getCircleVoidDict"]], "runexpansiontests() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[355, "armi.reactor.tests.test_components.TestComponentExpansion.runExpansionTests"]], "setclassdims() (armi.reactor.tests.test_components.testholedrectangle method)": [[355, "armi.reactor.tests.test_components.TestHoledRectangle.setClassDims"]], "setclassdims() (armi.reactor.tests.test_components.testholedsquare method)": [[355, "armi.reactor.tests.test_components.TestHoledSquare.setClassDims"]], "tcold (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[355, "armi.reactor.tests.test_components.TestComponentExpansion.tCold"]], "thot (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[355, "armi.reactor.tests.test_components.TestComponentExpansion.tHot"]], "twarm (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[355, "armi.reactor.tests.test_components.TestComponentExpansion.tWarm"]], "test_b4cexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[355, "armi.reactor.tests.test_components.TestComponentExpansion.test_B4CExpansion"]], "test_ht9expansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[355, "armi.reactor.tests.test_components.TestComponentExpansion.test_HT9Expansion"]], "test_uzrexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[355, "armi.reactor.tests.test_components.TestComponentExpansion.test_UZrExpansion"]], "test_adjustmassenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[355, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassEnrichment"]], "test_adjustmassfrac_u() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[355, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U"]], "test_adjustmassfrac_u235() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[355, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U235"]], "test_adjustmassfrac_clear_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[355, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_clear_ZR"]], "test_adjustmassfrac_invalid() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[355, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_invalid"]], "test_adjustmassfrac_leave_same() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[355, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_leave_same"]], "test_adjustmassfrac_set_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[355, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_set_ZR"]], "test_badcomponentname() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_badComponentName"]], "test_changenumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_changeNumberDensities"]], "test_cmp() (armi.reactor.tests.test_components.testnullcomponent method)": [[355, "armi.reactor.tests.test_components.TestNullComponent.test_cmp"]], "test_componentinitializationandduplication() (armi.reactor.tests.test_components.testcomponentfactory method)": [[355, "armi.reactor.tests.test_components.TestComponentFactory.test_componentInitializationAndDuplication"]], "test_componentinteractionslinkingbydimensions() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingByDimensions"]], "test_componentinteractionslinkingbysubtraction() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingBySubtraction"]], "test_component_less_than() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[355, "armi.reactor.tests.test_components.TestUnshapedComponent.test_component_less_than"]], "test_computevolume() (armi.reactor.tests.test_components.testderivedshape method)": [[355, "armi.reactor.tests.test_components.TestDerivedShape.test_computeVolume"]], "test_density() (armi.reactor.tests.test_components.testshapedcomponent method)": [[355, "armi.reactor.tests.test_components.TestShapedComponent.test_density"]], "test_densityconsistent() (armi.reactor.tests.test_components.testshapedcomponent method)": [[355, "armi.reactor.tests.test_components.TestShapedComponent.test_densityConsistent"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[355, "armi.reactor.tests.test_components.TestHelix.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[355, "armi.reactor.tests.test_components.TestHexHoledCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[355, "armi.reactor.tests.test_components.TestHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[355, "armi.reactor.tests.test_components.TestHoledHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[355, "armi.reactor.tests.test_components.TestHoledRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[355, "armi.reactor.tests.test_components.TestRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[355, "armi.reactor.tests.test_components.TestSolidRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[355, "armi.reactor.tests.test_components.TestSquare.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[355, "armi.reactor.tests.test_components.TestTriangle.test_dimensionThermallyExpands"]], "test_factory() (armi.reactor.tests.test_components.testcomponentfactory method)": [[355, "armi.reactor.tests.test_components.TestComponentFactory.test_factory"]], "test_factorybadshapename() (armi.reactor.tests.test_components.testcomponentfactory method)": [[355, "armi.reactor.tests.test_components.TestComponentFactory.test_factoryBadShapeName"]], "test_finalizeloaddbadjuststd() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[355, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_finalizeLoadDBAdjustsTD"]], "test_fromcomponent() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[355, "armi.reactor.tests.test_components.TestUnshapedComponent.test_fromComponent"]], "test_fuelmass() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_fuelMass"]], "test_getarea() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhelix method)": [[355, "armi.reactor.tests.test_components.TestHelix.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexholedcircle method)": [[355, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexagon method)": [[355, "armi.reactor.tests.test_components.TestHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedhexagon method)": [[355, "armi.reactor.tests.test_components.TestHoledHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedrectangle method)": [[355, "armi.reactor.tests.test_components.TestHoledRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testrectangle method)": [[355, "armi.reactor.tests.test_components.TestRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsolidrectangle method)": [[355, "armi.reactor.tests.test_components.TestSolidRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsquare method)": [[355, "armi.reactor.tests.test_components.TestSquare.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testtriangle method)": [[355, "armi.reactor.tests.test_components.TestTriangle.test_getArea"]], "test_getareacoldtrue() (armi.reactor.tests.test_components.testderivedshapegetarea method)": [[355, "armi.reactor.tests.test_components.TestDerivedShapeGetArea.test_getAreaColdTrue"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testderivedshape method)": [[355, "armi.reactor.tests.test_components.TestDerivedShape.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[355, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhelix method)": [[355, "armi.reactor.tests.test_components.TestHelix.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[355, "armi.reactor.tests.test_components.TestHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[355, "armi.reactor.tests.test_components.TestHoledHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[355, "armi.reactor.tests.test_components.TestHoledRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testradialsegment method)": [[355, "armi.reactor.tests.test_components.TestRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[355, "armi.reactor.tests.test_components.TestRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsolidrectangle method)": [[355, "armi.reactor.tests.test_components.TestSolidRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsquare method)": [[355, "armi.reactor.tests.test_components.TestSquare.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[355, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getBoundingCircleOuterDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhelix method)": [[355, "armi.reactor.tests.test_components.TestHelix.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexholedcircle method)": [[355, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[355, "armi.reactor.tests.test_components.TestHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[355, "armi.reactor.tests.test_components.TestHoledHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[355, "armi.reactor.tests.test_components.TestHoledRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedsquare method)": [[355, "armi.reactor.tests.test_components.TestHoledSquare.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[355, "armi.reactor.tests.test_components.TestRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testsquare method)": [[355, "armi.reactor.tests.test_components.TestSquare.test_getCircleInnerDiameter"]], "test_getcomponentarea() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[355, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getComponentArea"]], "test_getdimension() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_getDimension"]], "test_getdimension() (armi.reactor.tests.test_components.testnullcomponent method)": [[355, "armi.reactor.tests.test_components.TestNullComponent.test_getDimension"]], "test_getenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[355, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_getEnrichment"]], "test_getnumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_getNumberDensities"]], "test_getperimeter() (armi.reactor.tests.test_components.testhexagon method)": [[355, "armi.reactor.tests.test_components.TestHexagon.test_getPerimeter"]], "test_getthermalexpansionfactorconservedmassbylinearexpansionpercent() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"]], "test_getvolume() (armi.reactor.tests.test_components.testcube method)": [[355, "armi.reactor.tests.test_components.TestCube.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[355, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testradialsegment method)": [[355, "armi.reactor.tests.test_components.TestRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testsphere method)": [[355, "armi.reactor.tests.test_components.TestSphere.test_getVolume"]], "test_initializecomponentmaterial() (armi.reactor.tests.test_components.testcomponent method)": [[355, "armi.reactor.tests.test_components.TestComponent.test_initializeComponentMaterial"]], "test_invalidcoolantcomponentassignment() (armi.reactor.tests.test_components.testcomponentfactory method)": [[355, "armi.reactor.tests.test_components.TestComponentFactory.test_invalidCoolantComponentAssignment"]], "test_negativearea() (armi.reactor.tests.test_components.testrectangle method)": [[355, "armi.reactor.tests.test_components.TestRectangle.test_negativeArea"]], "test_negativearea() (armi.reactor.tests.test_components.testsquare method)": [[355, "armi.reactor.tests.test_components.TestSquare.test_negativeArea"]], "test_negativevolume() (armi.reactor.tests.test_components.testcube method)": [[355, "armi.reactor.tests.test_components.TestCube.test_negativeVolume"]], "test_nonzero() (armi.reactor.tests.test_components.testnullcomponent method)": [[355, "armi.reactor.tests.test_components.TestNullComponent.test_nonzero"]], "test_preservemassduringthermalexpansion() (armi.reactor.tests.test_components.testshapedcomponent method)": [[355, "armi.reactor.tests.test_components.TestShapedComponent.test_preserveMassDuringThermalExpansion"]], "test_setmassfrac() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[355, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFrac"]], "test_setmassfraconcomponentmaterial() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[355, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFracOnComponentMaterial"]], "test_setnumberdensities() (armi.reactor.tests.test_components.testcomponent method)": [[355, "armi.reactor.tests.test_components.TestComponent.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_components.testcomponent method)": [[355, "armi.reactor.tests.test_components.TestComponent.test_setNumberDensity"]], "test_solid_material() (armi.reactor.tests.test_components.testcomponent method)": [[355, "armi.reactor.tests.test_components.TestComponent.test_solid_material"]], "test_theoreticaldensitysetter() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_theoreticalDensitySetter"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[355, "armi.reactor.tests.test_components.TestCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcube method)": [[355, "armi.reactor.tests.test_components.TestCube.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[355, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[355, "armi.reactor.tests.test_components.TestHelix.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[355, "armi.reactor.tests.test_components.TestHexHoledCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[355, "armi.reactor.tests.test_components.TestHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[355, "armi.reactor.tests.test_components.TestHoledHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[355, "armi.reactor.tests.test_components.TestHoledRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedsquare method)": [[355, "armi.reactor.tests.test_components.TestHoledSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testradialsegment method)": [[355, "armi.reactor.tests.test_components.TestRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[355, "armi.reactor.tests.test_components.TestRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[355, "armi.reactor.tests.test_components.TestSolidRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsphere method)": [[355, "armi.reactor.tests.test_components.TestSphere.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[355, "armi.reactor.tests.test_components.TestSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[355, "armi.reactor.tests.test_components.TestTriangle.test_thermallyExpands"]], "test_updatedims() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[355, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_updateDims"]], "test_validparameters() (armi.reactor.tests.test_components.testhelix method)": [[355, "armi.reactor.tests.test_components.TestHelix.test_validParameters"]], "test_volumeafterclearcache() (armi.reactor.tests.test_components.testshapedcomponent method)": [[355, "armi.reactor.tests.test_components.TestShapedComponent.test_volumeAfterClearCache"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.A"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.A"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.B"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.B"]], "bprime (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.BPRIME"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.C"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.C"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.D"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.D"]], "dummycomposite (class in armi.reactor.tests.test_composites)": [[356, "armi.reactor.tests.test_composites.DummyComposite"]], "dummyleaf (class in armi.reactor.tests.test_composites)": [[356, "armi.reactor.tests.test_composites.DummyLeaf"]], "mockbp (class in armi.reactor.tests.test_composites)": [[356, "armi.reactor.tests.test_composites.MockBP"]], "testcompositepattern (class in armi.reactor.tests.test_composites)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern"]], "testcompositetree (class in armi.reactor.tests.test_composites)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree"]], "testflagserializer (class in armi.reactor.tests.test_composites)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer"]], "testflagserializer.testflagsa (class in armi.reactor.tests.test_composites)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA"]], "testflagserializer.testflagsb (class in armi.reactor.tests.test_composites)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB"]], "testgetreactionratedict (class in armi.reactor.tests.test_composites)": [[356, "armi.reactor.tests.test_composites.TestGetReactionRateDict"]], "testmiscmethods (class in armi.reactor.tests.test_composites)": [[356, "armi.reactor.tests.test_composites.TestMiscMethods"]], "activenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[356, "armi.reactor.tests.test_composites.MockBP.activeNuclides"]], "allnuclidesinproblem (armi.reactor.tests.test_composites.mockbp attribute)": [[356, "armi.reactor.tests.test_composites.MockBP.allNuclidesInProblem"]], "armi.reactor.tests.test_composites": [[356, "module-armi.reactor.tests.test_composites"]], "blueprintyaml (armi.reactor.tests.test_composites.testcompositetree attribute)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree.blueprintYaml"]], "customisotopics (armi.reactor.tests.test_composites.mockbp attribute)": [[356, "armi.reactor.tests.test_composites.MockBP.customIsotopics"]], "elementstoexpand (armi.reactor.tests.test_composites.mockbp attribute)": [[356, "armi.reactor.tests.test_composites.MockBP.elementsToExpand"]], "getboundingcircleouterdiameter() (armi.reactor.tests.test_composites.dummyleaf method)": [[356, "armi.reactor.tests.test_composites.DummyLeaf.getBoundingCircleOuterDiameter"]], "getchildren() (armi.reactor.tests.test_composites.dummyleaf method)": [[356, "armi.reactor.tests.test_composites.DummyLeaf.getChildren"]], "getchildrenwithflags() (armi.reactor.tests.test_composites.dummyleaf method)": [[356, "armi.reactor.tests.test_composites.DummyLeaf.getChildrenWithFlags"]], "getdummyparamdefs() (in module armi.reactor.tests.test_composites)": [[356, "armi.reactor.tests.test_composites.getDummyParamDefs"]], "inactivenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[356, "armi.reactor.tests.test_composites.MockBP.inactiveNuclides"]], "itercomponents() (armi.reactor.tests.test_composites.dummyleaf method)": [[356, "armi.reactor.tests.test_composites.DummyLeaf.iterComponents"]], "pdefs (armi.reactor.tests.test_composites.dummycomposite attribute)": [[356, "armi.reactor.tests.test_composites.DummyComposite.pDefs"]], "pdefs (armi.reactor.tests.test_composites.dummyleaf attribute)": [[356, "armi.reactor.tests.test_composites.DummyLeaf.pDefs"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummycomposite attribute)": [[356, "armi.reactor.tests.test_composites.DummyComposite.paramCollectionType"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummyleaf attribute)": [[356, "armi.reactor.tests.test_composites.DummyLeaf.paramCollectionType"]], "test_arechildernoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_areChildernOfType"]], "test_composite() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_composite"]], "test_constituentreport() (armi.reactor.tests.test_composites.testcompositetree method)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree.test_constituentReport"]], "test_containsatleastonechildoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsAtLeastOneChildOfType"]], "test_containsheavymetal() (armi.reactor.tests.test_composites.testmiscmethods method)": [[356, "armi.reactor.tests.test_composites.TestMiscMethods.test_containsHeavyMetal"]], "test_containsonlychildrenoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsOnlyChildrenOfType"]], "test_copyparamsfrom() (armi.reactor.tests.test_composites.testmiscmethods method)": [[356, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsFrom"]], "test_copyparamstochildren() (armi.reactor.tests.test_composites.testmiscmethods method)": [[356, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsToChildren"]], "test_dimensionreport() (armi.reactor.tests.test_composites.testmiscmethods method)": [[356, "armi.reactor.tests.test_composites.TestMiscMethods.test_dimensionReport"]], "test_expandlfps() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_expandLFPs"]], "test_flagconversion() (armi.reactor.tests.test_composites.testflagserializer method)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagConversion"]], "test_flagserialization() (armi.reactor.tests.test_composites.testflagserializer method)": [[356, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagSerialization"]], "test_getatomicweight() (armi.reactor.tests.test_composites.testmiscmethods method)": [[356, "armi.reactor.tests.test_composites.TestMiscMethods.test_getAtomicWeight"]], "test_getboundingcirlceouterdiameter() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_getBoundingCirlceOuterDiameter"]], "test_getchildren() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_getChildren"]], "test_getchildrenincludematerials() (armi.reactor.tests.test_composites.testcompositetree method)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree.test_getChildrenIncludeMaterials"]], "test_getfpmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFPMass"]], "test_getfissilemass() (armi.reactor.tests.test_composites.testcompositetree method)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFissileMass"]], "test_getfuelmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFuelMass"]], "test_gethmmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree.test_getHMMass"]], "test_getintegratedmgflux() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_getIntegratedMgFlux"]], "test_getlumpedfissionproductsifnecessarynullcase() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_getLumpedFissionProductsIfNecessaryNullCase"]], "test_getmaxparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMaxParam"]], "test_getminparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMinParam"]], "test_getname() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_getName"]], "test_getnuclides() (armi.reactor.tests.test_composites.testcompositetree method)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree.test_getNuclides"]], "test_getnumberdensities() (armi.reactor.tests.test_composites.testmiscmethods method)": [[356, "armi.reactor.tests.test_composites.TestMiscMethods.test_getNumberDensities"]], "test_getnumberdensitieswithexpandedfissionproducts() (armi.reactor.tests.test_composites.testmiscmethods method)": [[356, "armi.reactor.tests.test_composites.TestMiscMethods.test_getNumberDensitiesWithExpandedFissionProducts"]], "test_getparamnames() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_getParamNames"]], "test_getreactionratedict() (armi.reactor.tests.test_composites.testgetreactionratedict method)": [[356, "armi.reactor.tests.test_composites.TestGetReactionRateDict.test_getReactionRateDict"]], "test_getreactionrates() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_getReactionRates"]], "test_hasflags() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlags"]], "test_hasflagsnotypespecified() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsNoTypeSpecified"]], "test_hasflagssubstring() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsSubstring"]], "test_itercomponents() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_iterComponents"]], "test_namecontains() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_nameContains"]], "test_nucspec() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_nucSpec"]], "test_ordering() (armi.reactor.tests.test_composites.testcompositetree method)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree.test_ordering"]], "test_requireslumpedfissionproducts() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_requiresLumpedFissionProducts"]], "test_setchildrenlumpedfissionproducts() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_setChildrenLumpedFissionProducts"]], "test_setmass() (armi.reactor.tests.test_composites.testmiscmethods method)": [[356, "armi.reactor.tests.test_composites.TestMiscMethods.test_setMass"]], "test_sort() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_sort"]], "test_summing() (armi.reactor.tests.test_composites.testcompositetree method)": [[356, "armi.reactor.tests.test_composites.TestCompositeTree.test_summing"]], "test_syncparameters() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_syncParameters"]], "test_updatevolume() (armi.reactor.tests.test_composites.testcompositepattern method)": [[356, "armi.reactor.tests.test_composites.TestCompositePattern.test_updateVolume"]], "testexcorecollection (class in armi.reactor.tests.test_excorestructures)": [[357, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection"]], "testexcorestructure (class in armi.reactor.tests.test_excorestructures)": [[357, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure"]], "testspentfuelpool (class in armi.reactor.tests.test_excorestructures)": [[357, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool"]], "armi.reactor.tests.test_excorestructures": [[357, "module-armi.reactor.tests.test_excoreStructures"]], "test_add() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[357, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_add"]], "test_add() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[357, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_add"]], "test_addlikeattribute() (armi.reactor.tests.test_excorestructures.testexcorecollection method)": [[357, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection.test_addLikeAttribute"]], "test_addlikedict() (armi.reactor.tests.test_excorestructures.testexcorecollection method)": [[357, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection.test_addLikeDict"]], "test_constructor() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[357, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_constructor"]], "test_constructor() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[357, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_constructor"]], "test_getassembly() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[357, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_getAssembly"]], "test_getnextlocation() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[357, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_getNextLocation"]], "test_normalizenames() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[357, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_normalizeNames"]], "test_parentreactor() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[357, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_parentReactor"]], "test_representation() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[357, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_representation"]], "test_representation() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[357, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_representation"]], "test_updatenumberofcolumns() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[357, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_updateNumberOfColumns"]], "testflags (class in armi.reactor.tests.test_flags)": [[358, "armi.reactor.tests.test_flags.TestFlags"]], "armi.reactor.tests.test_flags": [[358, "module-armi.reactor.tests.test_flags"]], "test_convertsstringswithnonflags() (armi.reactor.tests.test_flags.testflags method)": [[358, "armi.reactor.tests.test_flags.TestFlags.test_convertsStringsWithNonFlags"]], "test_defaultisfalse() (armi.reactor.tests.test_flags.testflags method)": [[358, "armi.reactor.tests.test_flags.TestFlags.test_defaultIsFalse"]], "test_flagsdefinedwithnumbers() (armi.reactor.tests.test_flags.testflags method)": [[358, "armi.reactor.tests.test_flags.TestFlags.test_flagsDefinedWithNumbers"]], "test_flagstoandfromstring() (armi.reactor.tests.test_flags.testflags method)": [[358, "armi.reactor.tests.test_flags.TestFlags.test_flagsToAndFromString"]], "test_fromstring() (armi.reactor.tests.test_flags.testflags method)": [[358, "armi.reactor.tests.test_flags.TestFlags.test_fromString"]], "test_fromstringstrict() (armi.reactor.tests.test_flags.testflags method)": [[358, "armi.reactor.tests.test_flags.TestFlags.test_fromStringStrict"]], "test_fromstringwithnumbers() (armi.reactor.tests.test_flags.testflags method)": [[358, "armi.reactor.tests.test_flags.TestFlags.test_fromStringWithNumbers"]], "test_ispickleable() (armi.reactor.tests.test_flags.testflags method)": [[358, "armi.reactor.tests.test_flags.TestFlags.test_isPickleable"]], "test_lookup() (armi.reactor.tests.test_flags.testflags method)": [[358, "armi.reactor.tests.test_flags.TestFlags.test_lookup"]], "test_tostringalphabetical() (armi.reactor.tests.test_flags.testflags method)": [[358, "armi.reactor.tests.test_flags.TestFlags.test_toStringAlphabetical"]], "testgeomtype (class in armi.reactor.tests.test_geometry)": [[359, "armi.reactor.tests.test_geometry.TestGeomType"]], "testsymmetrytype (class in armi.reactor.tests.test_geometry)": [[359, "armi.reactor.tests.test_geometry.TestSymmetryType"]], "testsystemlayoutinput (class in armi.reactor.tests.test_geometry)": [[359, "armi.reactor.tests.test_geometry.TestSystemLayoutInput"]], "testsystemlayoutinputtrz (class in armi.reactor.tests.test_geometry)": [[359, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry": [[359, "module-armi.reactor.tests.test_geometry"]], "test_symmetryfactor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[359, "armi.reactor.tests.test_geometry.TestSymmetryType.test_SymmetryFactor"]], "test_trzyamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[359, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_TRZyamlIO"]], "test_asciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[359, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_asciimap"]], "test_baseconstructor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[359, "armi.reactor.tests.test_geometry.TestSymmetryType.test_baseConstructor"]], "test_checkvalidgeomsymmetrycombo() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[359, "armi.reactor.tests.test_geometry.TestSymmetryType.test_checkValidGeomSymmetryCombo"]], "test_domaintypenulls() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[359, "armi.reactor.tests.test_geometry.TestSymmetryType.test_domainTypeNulls"]], "test_fromany() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[359, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromAny"]], "test_fromstr() (armi.reactor.tests.test_geometry.testgeomtype method)": [[359, "armi.reactor.tests.test_geometry.TestGeomType.test_fromStr"]], "test_fromstr() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[359, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromStr"]], "test_growtofullcore() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[359, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_growToFullCore"]], "test_label() (armi.reactor.tests.test_geometry.testgeomtype method)": [[359, "armi.reactor.tests.test_geometry.TestGeomType.test_label"]], "test_label() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[359, "armi.reactor.tests.test_geometry.TestSymmetryType.test_label"]], "test_readasciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[359, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readAsciimap"]], "test_readhexgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[359, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readHexGeomXML"]], "test_readreactor() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[359, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readReactor"]], "test_readtrzgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[359, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_readTRZGeomXML"]], "test_str() (armi.reactor.tests.test_geometry.testgeomtype method)": [[359, "armi.reactor.tests.test_geometry.TestGeomType.test_str"]], "test_yamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[359, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_yamlIO"]], "mockcomposite (class in armi.reactor.tests.test_parameters)": [[360, "armi.reactor.tests.test_parameters.MockComposite"]], "mockcompositechild (class in armi.reactor.tests.test_parameters)": [[360, "armi.reactor.tests.test_parameters.MockCompositeChild"]], "mockcompositegrandparent (class in armi.reactor.tests.test_parameters)": [[360, "armi.reactor.tests.test_parameters.MockCompositeGrandParent"]], "mockcompositeparent (class in armi.reactor.tests.test_parameters)": [[360, "armi.reactor.tests.test_parameters.MockCompositeParent"]], "paramcollectionwhere (class in armi.reactor.tests.test_parameters)": [[360, "armi.reactor.tests.test_parameters.ParamCollectionWhere"]], "paramcollectionwhere.scopeparamcollection (class in armi.reactor.tests.test_parameters)": [[360, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection"]], "parametertests (class in armi.reactor.tests.test_parameters)": [[360, "armi.reactor.tests.test_parameters.ParameterTests"]], "testmakeparametersreadonly (class in armi.reactor.tests.test_parameters)": [[360, "armi.reactor.tests.test_parameters.TestMakeParametersReadOnly"]], "armi.reactor.tests.test_parameters": [[360, "module-armi.reactor.tests.test_parameters"]], "pdefs (armi.reactor.tests.test_parameters.paramcollectionwhere.scopeparamcollection attribute)": [[360, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection.pDefs"]], "pb (armi.reactor.tests.test_parameters.paramcollectionwhere.scopeparamcollection attribute)": [[360, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection.pb"]], "test_attemptingtosetparamwithoutsetterfails() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_attemptingToSetParamWithoutSetterFails"]], "test_cannotcreateattrbuteonparametercollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateAttrbuteOnParameterCollectionSubclass"]], "test_cannotcreateinstanceof_nodefault() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_NoDefault"]], "test_cannotcreateinstanceof_undefined() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_Undefined"]], "test_cannotdefineparameterwithsamename() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameName"]], "test_cannotdefineparameterwithsamenameforcollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameNameForCollectionSubclass"]], "test_categories() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_categories"]], "test_complicated() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[360, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_complicated"]], "test_defaultlocation() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_defaultLocation"]], "test_getwithoutdefaultraisesparametererror() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_getWithoutDefaultRaisesParameterError"]], "test_makeparametersreadonly() (armi.reactor.tests.test_parameters.testmakeparametersreadonly method)": [[360, "armi.reactor.tests.test_parameters.TestMakeParametersReadOnly.test_makeParametersReadOnly"]], "test_mutabledefaultsnotsupported() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_mutableDefaultsNotSupported"]], "test_oncategory() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[360, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_onCategory"]], "test_onlocation() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[360, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_onLocation"]], "test_paramdefinitionscompose() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_paramDefinitionsCompose"]], "test_parampropertydoesnotconflict() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflict"]], "test_parampropertydoesnotconflictwithnonedefault() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflictWithNoneDefault"]], "test_parametercollectionshave__slots__() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_parameterCollectionsHave__slots__"]], "test_serializer_pack_unpack() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_serializer_pack_unpack"]], "test_setter() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_setter"]], "test_settergetterbasics() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_setterGetterBasics"]], "test_writesomeparamstodb() (armi.reactor.tests.test_parameters.parametertests method)": [[360, "armi.reactor.tests.test_parameters.ParameterTests.test_writeSomeParamsToDB"]], "cartesianreactorneighbortests (class in armi.reactor.tests.test_reactors)": [[361, "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests"]], "cartesianreactortests (class in armi.reactor.tests.test_reactors)": [[361, "armi.reactor.tests.test_reactors.CartesianReactorTests"]], "hexreactortests (class in armi.reactor.tests.test_reactors)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests"]], "reactortests (class in armi.reactor.tests.test_reactors)": [[361, "armi.reactor.tests.test_reactors.ReactorTests"]], "armi.reactor.tests.test_reactors": [[361, "module-armi.reactor.tests.test_reactors"]], "buildoperatorofemptycartesianblocks() (in module armi.reactor.tests.test_reactors)": [[361, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyCartesianBlocks"]], "buildoperatorofemptyhexblocks() (in module armi.reactor.tests.test_reactors)": [[361, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyHexBlocks"]], "loadtestreactor() (in module armi.reactor.tests.test_reactors)": [[361, "armi.reactor.tests.test_reactors.loadTestReactor"]], "reducetestreactorrings() (in module armi.reactor.tests.test_reactors)": [[361, "armi.reactor.tests.test_reactors.reduceTestReactorRings"]], "test_add() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[361, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_add"]], "test_addmorenodes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_addMoreNodes"]], "test_addmultiplecores() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_addMultipleCores"]], "test_applythermalexpansion_coreconstruct() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_applyThermalExpansion_CoreConstruct"]], "test_buildmanualzones() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZones"]], "test_buildmanualzonesempty() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZonesEmpty"]], "test_coresfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_coreSfp"]], "test_countblocksoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_countBlocksOfType"]], "test_countfuelaxialblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_countFuelAxialBlocks"]], "test_createassemblyoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfType"]], "test_createassemblyoftypeexpandedcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfTypeExpandedCore"]], "test_createfreshfeed() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_createFreshFeed"]], "test_differentnuclidemodels() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_differentNuclideModels"]], "test_factorysortsetting() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_factorySortSetting"]], "test_findallaxialmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints"]], "test_findallaxialmeshpoints_wsubmesh() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints_wSubmesh"]], "test_findallazimeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAziMeshPoints"]], "test_findallmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllMeshPoints"]], "test_findallradmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllRadMeshPoints"]], "test_findaxialmeshindexof() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAxialMeshIndexOf"]], "test_findneighbors() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_findNeighbors"]], "test_findneighborscartesian() (armi.reactor.tests.test_reactors.cartesianreactorneighbortests method)": [[361, "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests.test_findNeighborsCartesian"]], "test_genassembliesaddedthiscycle() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_genAssembliesAddedThisCycle"]], "test_genblocksbylocname() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_genBlocksByLocName"]], "test_geomtype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_geomType"]], "test_getallxssuffixes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAllXsSuffixes"]], "test_getassembliesincircularring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInCircularRing"]], "test_getassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInHexRing"]], "test_getassembliesinsquarering() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[361, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssembliesInSquareRing"]], "test_getassembliesonsymmetryline() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesOnSymmetryLine"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[361, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssemblyPitch"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyPitch"]], "test_getassemblywithloc() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyWithLoc"]], "test_getassemblywithname() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyWithName"]], "test_getavgtemp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAvgTemp"]], "test_getblocksbyindices() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getBlocksByIndices"]], "test_getdominantmaterial() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getDominantMaterial"]], "test_getfirstfuelblockaxialnode() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFirstFuelBlockAxialNode"]], "test_getfluxvector() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFluxVector"]], "test_getfuelbottomheight() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFuelBottomHeight"]], "test_getgridbounds() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getGridBounds"]], "test_getmass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMass"]], "test_getmaxassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxAssembliesInHexRing"]], "test_getmaxnumpins() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxNumPins"]], "test_getminimumpercentfluxinfuel() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMinimumPercentFluxInFuel"]], "test_getnozzletypes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNozzleTypes"]], "test_getnuclidecategories() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNuclideCategories"]], "test_getnuclidecategorieslogging() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[361, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getNuclideCategoriesLogging"]], "test_getnumassemblieswithallringsfilledout() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOut"]], "test_getnumassemblieswithallringsfilledoutbipass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOutBipass"]], "test_getnumenergygroups() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumEnergyGroups"]], "test_getnumrings() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumRings"]], "test_getreactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getReactor"]], "test_getscalarevolution() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getScalarEvolution"]], "test_getsetparameters() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSetParameters"]], "test_getsymmetryfactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSymmetryFactor"]], "test_gettotalparam() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_getTotalParam"]], "test_growtofullcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_growToFullCore"]], "test_ifmissingspatialgrid() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_ifMissingSpatialGrid"]], "test_ispickleable() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_isPickleable"]], "test_locations() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_locations"]], "test_nonuniformassems() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_nonUniformAssems"]], "test_normalizenames() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_normalizeNames"]], "test_pincoordsallblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_pinCoordsAllBlocks"]], "test_removeassembliesinring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRing"]], "test_removeassembliesinringbycount() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingByCount"]], "test_removeassembliesinringhex() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingHex"]], "test_removeassembly() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembly"]], "test_removeassemblynosfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssemblyNoSfp"]], "test_restorereactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_restoreReactor"]], "test_saveallflux() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_saveAllFlux"]], "test_setb10voloncreation() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_setB10VolOnCreation"]], "test_setpitchuniform() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_setPitchUniform"]], "test_setpowerifnecessary() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_setPowerIfNecessary"]], "test_sortassembyring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortAssemByRing"]], "test_sortchildren() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortChildren"]], "test_updateblockbolheights_dbload() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_updateBlockBOLHeights_DBLoad"]], "test_whennoassemblies() (armi.reactor.tests.test_reactors.hexreactortests method)": [[361, "armi.reactor.tests.test_reactors.HexReactorTests.test_whenNoAssemblies"]], "testrztreactor (class in armi.reactor.tests.test_rz_reactors)": [[362, "armi.reactor.tests.test_rz_reactors.TestRZTReactor"]], "testrztreactormodern (class in armi.reactor.tests.test_rz_reactors)": [[362, "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern"]], "armi.reactor.tests.test_rz_reactors": [[362, "module-armi.reactor.tests.test_rz_reactors"]], "test_findallmeshpoints() (armi.reactor.tests.test_rz_reactors.testrztreactor method)": [[362, "armi.reactor.tests.test_rz_reactors.TestRZTReactor.test_findAllMeshPoints"]], "test_loadrzt() (armi.reactor.tests.test_rz_reactors.testrztreactor method)": [[362, "armi.reactor.tests.test_rz_reactors.TestRZTReactor.test_loadRZT"]], "test_loadrzt_reactor() (armi.reactor.tests.test_rz_reactors.testrztreactormodern method)": [[362, "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern.test_loadRZT_reactor"]], "testzone (class in armi.reactor.tests.test_zones)": [[363, "armi.reactor.tests.test_zones.TestZone"]], "testzones (class in armi.reactor.tests.test_zones)": [[363, "armi.reactor.tests.test_zones.TestZones"]], "armi.reactor.tests.test_zones": [[363, "module-armi.reactor.tests.test_zones"]], "test_additem() (armi.reactor.tests.test_zones.testzone method)": [[363, "armi.reactor.tests.test_zones.TestZone.test_addItem"]], "test_additems() (armi.reactor.tests.test_zones.testzone method)": [[363, "armi.reactor.tests.test_zones.TestZone.test_addItems"]], "test_addloc() (armi.reactor.tests.test_zones.testzone method)": [[363, "armi.reactor.tests.test_zones.TestZone.test_addLoc"]], "test_addlocs() (armi.reactor.tests.test_zones.testzone method)": [[363, "armi.reactor.tests.test_zones.TestZone.test_addLocs"]], "test_blocks() (armi.reactor.tests.test_zones.testzone method)": [[363, "armi.reactor.tests.test_zones.TestZone.test_blocks"]], "test_dictionaryinterface() (armi.reactor.tests.test_zones.testzones method)": [[363, "armi.reactor.tests.test_zones.TestZones.test_dictionaryInterface"]], "test_findzoneitisin() (armi.reactor.tests.test_zones.testzones method)": [[363, "armi.reactor.tests.test_zones.TestZones.test_findZoneItIsIn"]], "test_getalllocations() (armi.reactor.tests.test_zones.testzones method)": [[363, "armi.reactor.tests.test_zones.TestZones.test_getAllLocations"]], "test_getzonelocations() (armi.reactor.tests.test_zones.testzones method)": [[363, "armi.reactor.tests.test_zones.TestZones.test_getZoneLocations"]], "test_iteration() (armi.reactor.tests.test_zones.testzone method)": [[363, "armi.reactor.tests.test_zones.TestZone.test_iteration"]], "test_removeitem() (armi.reactor.tests.test_zones.testzone method)": [[363, "armi.reactor.tests.test_zones.TestZone.test_removeItem"]], "test_removeitems() (armi.reactor.tests.test_zones.testzone method)": [[363, "armi.reactor.tests.test_zones.TestZone.test_removeItems"]], "test_removeloc() (armi.reactor.tests.test_zones.testzone method)": [[363, "armi.reactor.tests.test_zones.TestZone.test_removeLoc"]], "test_removelocs() (armi.reactor.tests.test_zones.testzone method)": [[363, "armi.reactor.tests.test_zones.TestZone.test_removeLocs"]], "test_repr() (armi.reactor.tests.test_zones.testzone method)": [[363, "armi.reactor.tests.test_zones.TestZone.test_repr"]], "test_sortzones() (armi.reactor.tests.test_zones.testzones method)": [[363, "armi.reactor.tests.test_zones.TestZones.test_sortZones"]], "test_summary() (armi.reactor.tests.test_zones.testzones method)": [[363, "armi.reactor.tests.test_zones.TestZones.test_summary"]], "valid_types (armi.reactor.zones.zone attribute)": [[364, "armi.reactor.zones.Zone.VALID_TYPES"]], "zone (class in armi.reactor.zones)": [[364, "armi.reactor.zones.Zone"]], "zones (class in armi.reactor.zones)": [[364, "armi.reactor.zones.Zones"]], "additem() (armi.reactor.zones.zone method)": [[364, "armi.reactor.zones.Zone.addItem"]], "additems() (armi.reactor.zones.zone method)": [[364, "armi.reactor.zones.Zone.addItems"]], "addloc() (armi.reactor.zones.zone method)": [[364, "armi.reactor.zones.Zone.addLoc"]], "addlocs() (armi.reactor.zones.zone method)": [[364, "armi.reactor.zones.Zone.addLocs"]], "addzone() (armi.reactor.zones.zones method)": [[364, "armi.reactor.zones.Zones.addZone"]], "addzones() (armi.reactor.zones.zones method)": [[364, "armi.reactor.zones.Zones.addZones"]], "armi.reactor.zones": [[364, "module-armi.reactor.zones"]], "checkduplicates() (armi.reactor.zones.zones method)": [[364, "armi.reactor.zones.Zones.checkDuplicates"]], "findzoneitisin() (armi.reactor.zones.zones method)": [[364, "armi.reactor.zones.Zones.findZoneItIsIn"]], "getalllocations() (armi.reactor.zones.zones method)": [[364, "armi.reactor.zones.Zones.getAllLocations"]], "getzonelocations() (armi.reactor.zones.zones method)": [[364, "armi.reactor.zones.Zones.getZoneLocations"]], "names (armi.reactor.zones.zones property)": [[364, "armi.reactor.zones.Zones.names"]], "removeitem() (armi.reactor.zones.zone method)": [[364, "armi.reactor.zones.Zone.removeItem"]], "removeitems() (armi.reactor.zones.zone method)": [[364, "armi.reactor.zones.Zone.removeItems"]], "removeloc() (armi.reactor.zones.zone method)": [[364, "armi.reactor.zones.Zone.removeLoc"]], "removelocs() (armi.reactor.zones.zone method)": [[364, "armi.reactor.zones.Zone.removeLocs"]], "removezone() (armi.reactor.zones.zones method)": [[364, "armi.reactor.zones.Zones.removeZone"]], "removezones() (armi.reactor.zones.zones method)": [[364, "armi.reactor.zones.Zones.removeZones"]], "sortzones() (armi.reactor.zones.zones method)": [[364, "armi.reactor.zones.Zones.sortZones"]], "summary() (armi.reactor.zones.zones method)": [[364, "armi.reactor.zones.Zones.summary"]], "deduplicationfilter (class in armi.runlog)": [[365, "armi.runLog.DeduplicationFilter"]], "fmt (armi.runlog.runlogger attribute)": [[365, "armi.runLog.RunLogger.FMT"]], "nulllogger (class in armi.runlog)": [[365, "armi.runLog.NullLogger"]], "runlogger (class in armi.runlog)": [[365, "armi.runLog.RunLogger"]], "addhandler() (armi.runlog.nulllogger method)": [[365, "armi.runLog.NullLogger.addHandler"]], "allowstopduplicates() (armi.runlog.runlogger method)": [[365, "armi.runLog.RunLogger.allowStopDuplicates"]], "armi.runlog": [[365, "module-armi.runLog"]], "close() (armi.runlog.runlogger method)": [[365, "armi.runLog.RunLogger.close"]], "close() (in module armi.runlog)": [[365, "armi.runLog.close"]], "concatenatelogs() (in module armi.runlog)": [[365, "armi.runLog.concatenateLogs"]], "createlogdir() (in module armi.runlog)": [[365, "armi.runLog.createLogDir"]], "debug() (in module armi.runlog)": [[365, "armi.runLog.debug"]], "error() (in module armi.runlog)": [[365, "armi.runLog.error"]], "extra() (in module armi.runlog)": [[365, "armi.runLog.extra"]], "filter() (armi.runlog.deduplicationfilter method)": [[365, "armi.runLog.DeduplicationFilter.filter"]], "flush() (armi.runlog.runlogger method)": [[365, "armi.runLog.RunLogger.flush"]], "getduplicatesfilter() (armi.runlog.runlogger method)": [[365, "armi.runLog.RunLogger.getDuplicatesFilter"]], "getverbosity() (in module armi.runlog)": [[365, "armi.runLog.getVerbosity"]], "header() (in module armi.runlog)": [[365, "armi.runLog.header"]], "important() (in module armi.runlog)": [[365, "armi.runLog.important"]], "info() (in module armi.runlog)": [[365, "armi.runLog.info"]], "log() (armi.runlog.runlogger method)": [[365, "armi.runLog.RunLogger.log"]], "logfactory() (in module armi.runlog)": [[365, "armi.runLog.logFactory"]], "raw() (in module armi.runlog)": [[365, "armi.runLog.raw"]], "setverbosity() (armi.runlog.runlogger method)": [[365, "armi.runLog.RunLogger.setVerbosity"]], "setverbosity() (in module armi.runlog)": [[365, "armi.runLog.setVerbosity"]], "warning() (in module armi.runlog)": [[365, "armi.runLog.warning"]], "warningreport() (armi.runlog.runlogger method)": [[365, "armi.runLog.RunLogger.warningReport"]], "warningreport() (in module armi.runlog)": [[365, "armi.runLog.warningReport"]], "write() (armi.runlog.runlogger method)": [[365, "armi.runLog.RunLogger.write"]], "armi.settings": [[366, "module-armi.settings"]], "isboolsetting() (in module armi.settings)": [[366, "armi.settings.isBoolSetting"]], "promptforsettingsfile() (in module armi.settings)": [[366, "armi.settings.promptForSettingsFile"]], "recursivelyloadsettingsfiles() (in module armi.settings)": [[366, "armi.settings.recursivelyLoadSettingsFiles"]], "settings (class in armi.settings.casesettings)": [[367, "armi.settings.caseSettings.Settings"]], "armi.settings.casesettings": [[367, "module-armi.settings.caseSettings"]], "casetitle (armi.settings.casesettings.settings property)": [[367, "armi.settings.caseSettings.Settings.caseTitle"]], "defaultcasetitle (armi.settings.casesettings.settings attribute)": [[367, "armi.settings.caseSettings.Settings.defaultCaseTitle"]], "duplicate() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.duplicate"]], "environmentsettings (armi.settings.casesettings.settings property)": [[367, "armi.settings.caseSettings.Settings.environmentSettings"]], "failonload() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.failOnLoad"]], "getsetting() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.getSetting"]], "getsettingssetbyuser() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.getSettingsSetByUser"]], "initlogverbosity() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.initLogVerbosity"]], "inputdirectory (armi.settings.casesettings.settings property)": [[367, "armi.settings.caseSettings.Settings.inputDirectory"]], "items() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.items"]], "keys() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.keys"]], "loadfrominputfile() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.loadFromInputFile"]], "loadfromstring() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.loadFromString"]], "modified() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.modified"]], "registeruserplugins() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.registerUserPlugins"]], "reverttodefaults() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.revertToDefaults"]], "setmoduleverbosities() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.setModuleVerbosities"]], "updateenvironmentsettingsfrom() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.updateEnvironmentSettingsFrom"]], "values() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.values"]], "writetoyamlfile() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.writeToYamlFile"]], "writetoyamlstream() (armi.settings.casesettings.settings method)": [[367, "armi.settings.caseSettings.Settings.writeToYamlStream"]], "armi.settings.fwsettings": [[368, "module-armi.settings.fwSettings"]], "getframeworksettings() (in module armi.settings.fwsettings)": [[368, "armi.settings.fwSettings.getFrameworkSettings"]], "armi.settings.fwsettings.databasesettings": [[369, "module-armi.settings.fwSettings.databaseSettings"]], "definesettings() (in module armi.settings.fwsettings.databasesettings)": [[369, "armi.settings.fwSettings.databaseSettings.defineSettings"]], "armi.settings.fwsettings.globalsettings": [[370, "module-armi.settings.fwSettings.globalSettings"]], "definesettings() (in module armi.settings.fwsettings.globalsettings)": [[370, "armi.settings.fwSettings.globalSettings.defineSettings"]], "armi.settings.fwsettings.reportsettings": [[371, "module-armi.settings.fwSettings.reportSettings"]], "definesettings() (in module armi.settings.fwsettings.reportsettings)": [[371, "armi.settings.fwSettings.reportSettings.defineSettings"]], "tightcouplingsettingdef (class in armi.settings.fwsettings.tightcouplingsettings)": [[372, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef"]], "tightcouplingsettings (class in armi.settings.fwsettings.tightcouplingsettings)": [[372, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettings"]], "armi.settings.fwsettings.tightcouplingsettings": [[372, "module-armi.settings.fwSettings.tightCouplingSettings"]], "dump() (armi.settings.fwsettings.tightcouplingsettings.tightcouplingsettingdef method)": [[372, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef.dump"]], "serializetightcouplingsettings() (in module armi.settings.fwsettings.tightcouplingsettings)": [[372, "armi.settings.fwSettings.tightCouplingSettings.serializeTightCouplingSettings"]], "tightcouplingsettingsvalidator() (in module armi.settings.fwsettings.tightcouplingsettings)": [[372, "armi.settings.fwSettings.tightCouplingSettings.tightCouplingSettingsValidator"]], "default (class in armi.settings.setting)": [[373, "armi.settings.setting.Default"]], "flaglistsetting (class in armi.settings.setting)": [[373, "armi.settings.setting.FlagListSetting"]], "option (class in armi.settings.setting)": [[373, "armi.settings.setting.Option"]], "setting (class in armi.settings.setting)": [[373, "armi.settings.setting.Setting"]], "addoption() (armi.settings.setting.setting method)": [[373, "armi.settings.setting.Setting.addOption"]], "addoptions() (armi.settings.setting.setting method)": [[373, "armi.settings.setting.Setting.addOptions"]], "armi.settings.setting": [[373, "module-armi.settings.setting"]], "changedefault() (armi.settings.setting.setting method)": [[373, "armi.settings.setting.Setting.changeDefault"]], "containedtype (armi.settings.setting.setting property)": [[373, "armi.settings.setting.Setting.containedType"]], "default (armi.settings.setting.setting property)": [[373, "armi.settings.setting.Setting.default"]], "dump() (armi.settings.setting.flaglistsetting method)": [[373, "armi.settings.setting.FlagListSetting.dump"]], "dump() (armi.settings.setting.setting method)": [[373, "armi.settings.setting.Setting.dump"]], "getcustomattributes() (armi.settings.setting.setting method)": [[373, "armi.settings.setting.Setting.getCustomAttributes"]], "getdefaultattributes() (armi.settings.setting.setting method)": [[373, "armi.settings.setting.Setting.getDefaultAttributes"]], "isdefault() (armi.settings.setting.setting method)": [[373, "armi.settings.setting.Setting.isDefault"]], "offdefault (armi.settings.setting.setting property)": [[373, "armi.settings.setting.Setting.offDefault"]], "option (armi.settings.setting.option attribute)": [[373, "armi.settings.setting.Option.option"]], "reverttodefault() (armi.settings.setting.setting method)": [[373, "armi.settings.setting.Setting.revertToDefault"]], "schema() (armi.settings.setting.flaglistsetting static method)": [[373, "armi.settings.setting.FlagListSetting.schema"]], "setvalue() (armi.settings.setting.setting method)": [[373, "armi.settings.setting.Setting.setValue"]], "settingname (armi.settings.setting.default attribute)": [[373, "armi.settings.setting.Default.settingName"]], "settingname (armi.settings.setting.option attribute)": [[373, "armi.settings.setting.Option.settingName"]], "underlyingtype (armi.settings.setting.setting property)": [[373, "armi.settings.setting.Setting.underlyingType"]], "value (armi.settings.setting.default attribute)": [[373, "armi.settings.setting.Default.value"]], "value (armi.settings.setting.setting property)": [[373, "armi.settings.setting.Setting.value"]], "custom (armi.settings.settingsio.roots attribute)": [[374, "armi.settings.settingsIO.Roots.CUSTOM"]], "roots (class in armi.settings.settingsio)": [[374, "armi.settings.settingsIO.Roots"]], "runlogpromptcancel": [[374, "armi.settings.settingsIO.RunLogPromptCancel"]], "runlogpromptunresolvable": [[374, "armi.settings.settingsIO.RunLogPromptUnresolvable"]], "settingrenamer (class in armi.settings.settingsio)": [[374, "armi.settings.settingsIO.SettingRenamer"]], "settingsreader (class in armi.settings.settingsio)": [[374, "armi.settings.settingsIO.SettingsReader"]], "settingsreader.settingsinputformat (class in armi.settings.settingsio)": [[374, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat"]], "settingswriter (class in armi.settings.settingsio)": [[374, "armi.settings.settingsIO.SettingsWriter"]], "version (armi.settings.settingsio.roots attribute)": [[374, "armi.settings.settingsIO.Roots.VERSION"]], "yaml (armi.settings.settingsio.settingsreader.settingsinputformat attribute)": [[374, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.YAML"]], "armi.settings.settingsio": [[374, "module-armi.settings.settingsIO"]], "fromext() (armi.settings.settingsio.settingsreader.settingsinputformat class method)": [[374, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.fromExt"]], "prompt() (in module armi.settings.settingsio)": [[374, "armi.settings.settingsIO.prompt"]], "readfromfile() (armi.settings.settingsio.settingsreader method)": [[374, "armi.settings.settingsIO.SettingsReader.readFromFile"]], "readfromstream() (armi.settings.settingsio.settingsreader method)": [[374, "armi.settings.settingsIO.SettingsReader.readFromStream"]], "renamesetting() (armi.settings.settingsio.settingrenamer method)": [[374, "armi.settings.settingsIO.SettingRenamer.renameSetting"]], "writeyaml() (armi.settings.settingsio.settingswriter method)": [[374, "armi.settings.settingsIO.SettingsWriter.writeYaml"]], "inspector (class in armi.settings.settingsvalidation)": [[375, "armi.settings.settingsValidation.Inspector"]], "no_action() (armi.settings.settingsvalidation.inspector static method)": [[375, "armi.settings.settingsValidation.Inspector.NO_ACTION"]], "query (class in armi.settings.settingsvalidation)": [[375, "armi.settings.settingsValidation.Query"]], "addquery() (armi.settings.settingsvalidation.inspector method)": [[375, "armi.settings.settingsValidation.Inspector.addQuery"]], "addquerybadlocationwilllikelyfail() (armi.settings.settingsvalidation.inspector method)": [[375, "armi.settings.settingsValidation.Inspector.addQueryBadLocationWillLikelyFail"]], "addquerycurrentsettingmaynotsupportfeatures() (armi.settings.settingsvalidation.inspector method)": [[375, "armi.settings.settingsValidation.Inspector.addQueryCurrentSettingMayNotSupportFeatures"]], "armi.settings.settingsvalidation": [[375, "module-armi.settings.settingsValidation"]], "createqueryrevertbadpathtodefault() (in module armi.settings.settingsvalidation)": [[375, "armi.settings.settingsValidation.createQueryRevertBadPathToDefault"]], "iscorrective() (armi.settings.settingsvalidation.query method)": [[375, "armi.settings.settingsValidation.Query.isCorrective"]], "resolve() (armi.settings.settingsvalidation.query method)": [[375, "armi.settings.settingsValidation.Query.resolve"]], "run() (armi.settings.settingsvalidation.inspector method)": [[375, "armi.settings.settingsValidation.Inspector.run"]], "validateversion() (in module armi.settings.settingsvalidation)": [[375, "armi.settings.settingsValidation.validateVersion"]], "armi.settings.tests": [[376, "module-armi.settings.tests"]], "testinspector (class in armi.settings.tests.test_inspectors)": [[377, "armi.settings.tests.test_inspectors.TestInspector"]], "armi.settings.tests.test_inspectors": [[377, "module-armi.settings.tests.test_inspectors"]], "test_assigncs() (armi.settings.tests.test_inspectors.testinspector method)": [[377, "armi.settings.tests.test_inspectors.TestInspector.test_assignCS"]], "test_callablecorrectioncheck() (armi.settings.tests.test_inspectors.testinspector method)": [[377, "armi.settings.tests.test_inspectors.TestInspector.test_callableCorrectionCheck"]], "test_changeofcs() (armi.settings.tests.test_inspectors.testinspector method)": [[377, "armi.settings.tests.test_inspectors.TestInspector.test_changeOfCS"]], "test_checkforbothsimpleanddetailedcyclesinputs() (armi.settings.tests.test_inspectors.testinspector method)": [[377, "armi.settings.tests.test_inspectors.TestInspector.test_checkForBothSimpleAndDetailedCyclesInputs"]], "test_correctcyclestozeroburnup() (armi.settings.tests.test_inspectors.testinspector method)": [[377, "armi.settings.tests.test_inspectors.TestInspector.test_correctCyclesToZeroBurnup"]], "test_createqueryrevertbadpathtodefault() (armi.settings.tests.test_inspectors.testinspector method)": [[377, "armi.settings.tests.test_inspectors.TestInspector.test_createQueryRevertBadPathToDefault"]], "test_noncorrectivequery() (armi.settings.tests.test_inspectors.testinspector method)": [[377, "armi.settings.tests.test_inspectors.TestInspector.test_nonCorrectiveQuery"]], "test_overwritesettingscorrectivequery() (armi.settings.tests.test_inspectors.testinspector method)": [[377, "armi.settings.tests.test_inspectors.TestInspector.test_overwriteSettingsCorrectiveQuery"]], "test_query() (armi.settings.tests.test_inspectors.testinspector method)": [[377, "armi.settings.tests.test_inspectors.TestInspector.test_query"]], "dummysettingplugin1 (class in armi.settings.tests.test_settings)": [[378, "armi.settings.tests.test_settings.DummySettingPlugin1"]], "dummysettingplugin2 (class in armi.settings.tests.test_settings)": [[378, "armi.settings.tests.test_settings.DummySettingPlugin2"]], "pluginaddsoptions (class in armi.settings.tests.test_settings)": [[378, "armi.settings.tests.test_settings.PluginAddsOptions"]], "testaddingoptions (class in armi.settings.tests.test_settings)": [[378, "armi.settings.tests.test_settings.TestAddingOptions"]], "testflaglistsetting (class in armi.settings.tests.test_settings)": [[378, "armi.settings.tests.test_settings.TestFlagListSetting"]], "testsettings (class in armi.settings.tests.test_settings)": [[378, "armi.settings.tests.test_settings.TestSettings"]], "testsettings2 (class in armi.settings.tests.test_settings)": [[378, "armi.settings.tests.test_settings.TestSettings2"]], "testsettingsutils (class in armi.settings.tests.test_settings)": [[378, "armi.settings.tests.test_settings.TestSettingsUtils"]], "testsettingsvalidationutils (class in armi.settings.tests.test_settings)": [[378, "armi.settings.tests.test_settings.TestSettingsValidationUtils"]], "armi.settings.tests.test_settings": [[378, "module-armi.settings.tests.test_settings"]], "definesettings() (armi.settings.tests.test_settings.dummysettingplugin1 static method)": [[378, "armi.settings.tests.test_settings.DummySettingPlugin1.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.dummysettingplugin2 static method)": [[378, "armi.settings.tests.test_settings.DummySettingPlugin2.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.pluginaddsoptions static method)": [[378, "armi.settings.tests.test_settings.PluginAddsOptions.defineSettings"]], "test_addingoptions() (armi.settings.tests.test_settings.testaddingoptions method)": [[378, "armi.settings.tests.test_settings.TestAddingOptions.test_addingOptions"]], "test_copysetting() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_copySetting"]], "test_copysettingnotdefault() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_copySettingNotDefault"]], "test_csworks() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_csWorks"]], "test_default() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_default"]], "test_empty() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_empty"]], "test_flaglistsetting() (armi.settings.tests.test_settings.testflaglistsetting method)": [[378, "armi.settings.tests.test_settings.TestFlagListSetting.test_flagListSetting"]], "test_getfailures() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_getFailures"]], "test_getsettingssetbyuser() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_getSettingsSetByUser"]], "test_invalidflaglisttypeerror() (armi.settings.tests.test_settings.testflaglistsetting method)": [[378, "armi.settings.tests.test_settings.TestFlagListSetting.test_invalidFlagListTypeError"]], "test_listcoercion() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_listCoercion"]], "test_listsmutable() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_listsMutable"]], "test_metadata() (armi.settings.tests.test_settings.testsettings method)": [[378, "armi.settings.tests.test_settings.TestSettings.test_metaData"]], "test_modified() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_modified"]], "test_pluginsettings() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_pluginSettings"]], "test_pluginvalidatorsarediscovered() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_pluginValidatorsAreDiscovered"]], "test_prompt() (armi.settings.tests.test_settings.testsettingsutils method)": [[378, "armi.settings.tests.test_settings.TestSettingsUtils.test_prompt"]], "test_recursivescan() (armi.settings.tests.test_settings.testsettingsutils method)": [[378, "armi.settings.tests.test_settings.TestSettingsUtils.test_recursiveScan"]], "test_schemacheckstype() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_schemaChecksType"]], "test_setmoduleverbosities() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_setModuleVerbosities"]], "test_settingisokaytograb() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_settingIsOkayToGrab"]], "test_typedetection() (armi.settings.tests.test_settings.testsettings2 method)": [[378, "armi.settings.tests.test_settings.TestSettings2.test_typeDetection"]], "test_updateenvironmentsettingsfrom() (armi.settings.tests.test_settings.testsettings method)": [[378, "armi.settings.tests.test_settings.TestSettings.test_updateEnvironmentSettingsFrom"]], "test_validateversion() (armi.settings.tests.test_settings.testsettingsvalidationutils method)": [[378, "armi.settings.tests.test_settings.TestSettingsValidationUtils.test_validateVersion"]], "mockentrypoint (class in armi.settings.tests.test_settingsio)": [[379, "armi.settings.tests.test_settingsIO.MockEntryPoint"]], "settingargstests (class in armi.settings.tests.test_settingsio)": [[379, "armi.settings.tests.test_settingsIO.SettingArgsTests"]], "settingsfailuretests (class in armi.settings.tests.test_settingsio)": [[379, "armi.settings.tests.test_settingsIO.SettingsFailureTests"]], "settingsreadertests (class in armi.settings.tests.test_settingsio)": [[379, "armi.settings.tests.test_settingsIO.SettingsReaderTests"]], "settingsrenametests (class in armi.settings.tests.test_settingsio)": [[379, "armi.settings.tests.test_settingsIO.SettingsRenameTests"]], "settingswritertests (class in armi.settings.tests.test_settingsio)": [[379, "armi.settings.tests.test_settingsIO.SettingsWriterTests"]], "armi.settings.tests.test_settingsio": [[379, "module-armi.settings.tests.test_settingsIO"]], "name (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[379, "armi.settings.tests.test_settingsIO.MockEntryPoint.name"]], "settingsargument (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[379, "armi.settings.tests.test_settingsIO.MockEntryPoint.settingsArgument"]], "testsettings (armi.settings.tests.test_settingsio.settingsrenametests attribute)": [[379, "armi.settings.tests.test_settingsIO.SettingsRenameTests.testSettings"]], "test_basicsettingsreader() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[379, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_basicSettingsReader"]], "test_cannotloadsettingsafterparsingcommandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[379, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_cannotLoadSettingsAfterParsingCommandLineSetting"]], "test_collidingrenames() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[379, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_collidingRenames"]], "test_commandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[379, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_commandLineSetting"]], "test_errorsettingswriter() (armi.settings.tests.test_settingsio.settingswritertests method)": [[379, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_errorSettingsWriter"]], "test_invalidfile() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[379, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_invalidFile"]], "test_loadfromyamlfailsonbadnames() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[379, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_loadFromYamlFailsOnBadNames"]], "test_readfromfile() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[379, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_readFromFile"]], "test_rename() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[379, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_rename"]], "test_settingsobjsetting() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[379, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_settingsObjSetting"]], "test_writefull() (armi.settings.tests.test_settingsio.settingswritertests method)": [[379, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeFull"]], "test_writemedium() (armi.settings.tests.test_settingsio.settingswritertests method)": [[379, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeMedium"]], "test_writeshort() (armi.settings.tests.test_settingsio.settingswritertests method)": [[379, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeShort"]], "test_writeyaml() (armi.settings.tests.test_settingsio.settingswritertests method)": [[379, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeYaml"]], "armitesthelper (class in armi.tests)": [[380, "armi.tests.ArmiTestHelper"]], "fixture (class in armi.tests)": [[380, "armi.tests.Fixture"]], "armi.tests": [[380, "module-armi.tests"]], "comparefileslinebyline() (armi.tests.armitesthelper method)": [[380, "armi.tests.ArmiTestHelper.compareFilesLineByLine"]], "comparelines() (armi.tests.armitesthelper static method)": [[380, "armi.tests.ArmiTestHelper.compareLines"]], "fixture() (in module armi.tests)": [[380, "armi.tests.fixture"]], "getemptycartesianreactor() (in module armi.tests)": [[380, "armi.tests.getEmptyCartesianReactor"]], "getemptyhexreactor() (in module armi.tests)": [[380, "armi.tests.getEmptyHexReactor"]], "rebaselinetextcomparisons() (in module armi.tests)": [[380, "armi.tests.rebaselineTextComparisons"]], "requires_fixture() (in module armi.tests)": [[380, "armi.tests.requires_fixture"]], "bufferlog (class in armi.tests.mockrunlogs)": [[381, "armi.tests.mockRunLogs.BufferLog"]], "logcounter (class in armi.tests.mockrunlogs)": [[381, "armi.tests.mockRunLogs.LogCounter"]], "armi.tests.mockrunlogs": [[381, "module-armi.tests.mockRunLogs"]], "clearsinglewarnings() (armi.tests.mockrunlogs.bufferlog method)": [[381, "armi.tests.mockRunLogs.BufferLog.clearSingleWarnings"]], "emptystdout() (armi.tests.mockrunlogs.bufferlog method)": [[381, "armi.tests.mockRunLogs.BufferLog.emptyStdout"]], "getstderrvalue() (armi.tests.mockrunlogs.bufferlog method)": [[381, "armi.tests.mockRunLogs.BufferLog.getStderrValue"]], "getstdout() (armi.tests.mockrunlogs.bufferlog method)": [[381, "armi.tests.mockRunLogs.BufferLog.getStdout"]], "log() (armi.tests.mockrunlogs.bufferlog method)": [[381, "armi.tests.mockRunLogs.BufferLog.log"]], "log() (armi.tests.mockrunlogs.logcounter method)": [[381, "armi.tests.mockRunLogs.LogCounter.log"]], "equilibriumshuffler (class in armi.tests.refsmallreactorshufflelogic)": [[382, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler"]], "armi.tests.refsmallreactorshufflelogic": [[382, "module-armi.tests.refSmallReactorShuffleLogic"]], "chooseswaps() (armi.tests.refsmallreactorshufflelogic.equilibriumshuffler method)": [[382, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler.chooseSwaps"]], "getfactorlist() (in module armi.tests.refsmallreactorshufflelogic)": [[382, "armi.tests.refSmallReactorShuffleLogic.getFactorList"]], "testapps (class in armi.tests.test_apps)": [[383, "armi.tests.test_apps.TestApps"]], "testarmihighlevel (class in armi.tests.test_apps)": [[383, "armi.tests.test_apps.TestArmiHighLevel"]], "testplugin1 (class in armi.tests.test_apps)": [[383, "armi.tests.test_apps.TestPlugin1"]], "testplugin2 (class in armi.tests.test_apps)": [[383, "armi.tests.test_apps.TestPlugin2"]], "testplugin3 (class in armi.tests.test_apps)": [[383, "armi.tests.test_apps.TestPlugin3"]], "testplugin4 (class in armi.tests.test_apps)": [[383, "armi.tests.test_apps.TestPlugin4"]], "armi.tests.test_apps": [[383, "module-armi.tests.test_apps"]], "defineparameterrenames() (armi.tests.test_apps.testplugin1 static method)": [[383, "armi.tests.test_apps.TestPlugin1.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin2 static method)": [[383, "armi.tests.test_apps.TestPlugin2.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin3 static method)": [[383, "armi.tests.test_apps.TestPlugin3.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin4 static method)": [[383, "armi.tests.test_apps.TestPlugin4.defineParameterRenames"]], "test_disablefutureconfigures() (armi.tests.test_apps.testapps method)": [[383, "armi.tests.test_apps.TestApps.test_disableFutureConfigures"]], "test_getdefaultpluginmanager() (armi.tests.test_apps.testarmihighlevel method)": [[383, "armi.tests.test_apps.TestArmiHighLevel.test_getDefaultPluginManager"]], "test_getparamrenames() (armi.tests.test_apps.testapps method)": [[383, "armi.tests.test_apps.TestApps.test_getParamRenames"]], "test_getparamrenamesinvalids() (armi.tests.test_apps.testapps method)": [[383, "armi.tests.test_apps.TestApps.test_getParamRenamesInvalids"]], "test_getsettings() (armi.tests.test_apps.testapps method)": [[383, "armi.tests.test_apps.TestApps.test_getSettings"]], "test_isstablereleaseversion() (armi.tests.test_apps.testapps method)": [[383, "armi.tests.test_apps.TestApps.test_isStableReleaseVersion"]], "test_main() (armi.tests.test_apps.testarmihighlevel method)": [[383, "armi.tests.test_apps.TestArmiHighLevel.test_main"]], "test_overconfigured() (armi.tests.test_apps.testarmihighlevel method)": [[383, "armi.tests.test_apps.TestArmiHighLevel.test_overConfigured"]], "test_registerpluginflags() (armi.tests.test_apps.testapps method)": [[383, "armi.tests.test_apps.TestApps.test_registerPluginFlags"]], "test_splashtext() (armi.tests.test_apps.testapps method)": [[383, "armi.tests.test_apps.TestApps.test_splashText"]], "test_splashtextdifferentapp() (armi.tests.test_apps.testapps method)": [[383, "armi.tests.test_apps.TestApps.test_splashTextDifferentApp"]], "test_version() (armi.tests.test_apps.testapps method)": [[383, "armi.tests.test_apps.TestApps.test_version"]], "testarmitesthelper (class in armi.tests.test_armitesthelper)": [[384, "armi.tests.test_armiTestHelper.TestArmiTestHelper"]], "armi.tests.test_armitesthelper": [[384, "module-armi.tests.test_armiTestHelper"]], "test_comparefilesfail() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[384, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesFail"]], "test_comparefilessucceedfalsenegative() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[384, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucceedFalseNegative"]], "test_comparefilessucess() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[384, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucess"]], "cartesianreactortests (class in armi.tests.test_cartesian)": [[385, "armi.tests.test_cartesian.CartesianReactorTests"]], "armi.tests.test_cartesian": [[385, "module-armi.tests.test_cartesian"]], "test_custom() (armi.tests.test_cartesian.cartesianreactortests method)": [[385, "armi.tests.test_cartesian.CartesianReactorTests.test_custom"]], "testcontextserial (class in armi.tests.test_context)": [[386, "armi.tests.test_context.TestContextSerial"]], "armi.tests.test_context": [[386, "module-armi.tests.test_context"]], "test_nonnonedata() (armi.tests.test_context.testcontextserial method)": [[386, "armi.tests.test_context.TestContextSerial.test_nonNoneData"]], "test_rank() (armi.tests.test_context.testcontextserial method)": [[386, "armi.tests.test_context.TestContextSerial.test_rank"]], "dummyinterface (class in armi.tests.test_interfaces)": [[387, "armi.tests.test_interfaces.DummyInterface"]], "testcodeinterface (class in armi.tests.test_interfaces)": [[387, "armi.tests.test_interfaces.TestCodeInterface"]], "testtextprocessor (class in armi.tests.test_interfaces)": [[387, "armi.tests.test_interfaces.TestTextProcessor"]], "testtightcoupler (class in armi.tests.test_interfaces)": [[387, "armi.tests.test_interfaces.TestTightCoupler"]], "armi.tests.test_interfaces": [[387, "module-armi.tests.test_interfaces"]], "function (armi.tests.test_interfaces.dummyinterface attribute)": [[387, "armi.tests.test_interfaces.DummyInterface.function"]], "name (armi.tests.test_interfaces.dummyinterface attribute)": [[387, "armi.tests.test_interfaces.DummyInterface.name"]], "test_coupleractive() (armi.tests.test_interfaces.testtightcoupler method)": [[387, "armi.tests.test_interfaces.TestTightCoupler.test_couplerActive"]], "test_distributable() (armi.tests.test_interfaces.testcodeinterface method)": [[387, "armi.tests.test_interfaces.TestCodeInterface.test_distributable"]], "test_duplicate() (armi.tests.test_interfaces.testcodeinterface method)": [[387, "armi.tests.test_interfaces.TestCodeInterface.test_duplicate"]], "test_enabled() (armi.tests.test_interfaces.testcodeinterface method)": [[387, "armi.tests.test_interfaces.TestCodeInterface.test_enabled"]], "test_fsearch() (armi.tests.test_interfaces.testtextprocessor method)": [[387, "armi.tests.test_interfaces.TestTextProcessor.test_fsearch"]], "test_fsearch_text() (armi.tests.test_interfaces.testtextprocessor method)": [[387, "armi.tests.test_interfaces.TestTextProcessor.test_fsearch_text"]], "test_getlistdimension() (armi.tests.test_interfaces.testtightcoupler method)": [[387, "armi.tests.test_interfaces.TestTightCoupler.test_getListDimension"]], "test_isconverged() (armi.tests.test_interfaces.testtightcoupler method)": [[387, "armi.tests.test_interfaces.TestTightCoupler.test_isConverged"]], "test_isconvergedruntimeerror() (armi.tests.test_interfaces.testtightcoupler method)": [[387, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedRuntimeError"]], "test_isconvergedvalueerror() (armi.tests.test_interfaces.testtightcoupler method)": [[387, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedValueError"]], "test_isrequesteddetailpoint() (armi.tests.test_interfaces.testcodeinterface method)": [[387, "armi.tests.test_interfaces.TestCodeInterface.test_isRequestedDetailPoint"]], "test_namecontains() (armi.tests.test_interfaces.testcodeinterface method)": [[387, "armi.tests.test_interfaces.TestCodeInterface.test_nameContains"]], "test_predistributestate() (armi.tests.test_interfaces.testcodeinterface method)": [[387, "armi.tests.test_interfaces.TestCodeInterface.test_preDistributeState"]], "test_storepreviousiterationvalue() (armi.tests.test_interfaces.testtightcoupler method)": [[387, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValue"]], "test_storepreviousiterationvalueexception() (armi.tests.test_interfaces.testtightcoupler method)": [[387, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValueException"]], "c5g7reactortests (class in armi.tests.test_lwrinputs)": [[388, "armi.tests.test_lwrInputs.C5G7ReactorTests"]], "armi.tests.test_lwrinputs": [[388, "module-armi.tests.test_lwrInputs"]], "test_loadc5g7() (armi.tests.test_lwrinputs.c5g7reactortests method)": [[388, "armi.tests.test_lwrInputs.C5G7ReactorTests.test_loadC5G7"]], "mpiitertests (class in armi.tests.test_mpiactions)": [[389, "armi.tests.test_mpiActions.MpiIterTests"]], "queueactionstests (class in armi.tests.test_mpiactions)": [[389, "armi.tests.test_mpiActions.QueueActionsTests"]], "armi.tests.test_mpiactions": [[389, "module-armi.tests.test_mpiActions"]], "passer() (in module armi.tests.test_mpiactions)": [[389, "armi.tests.test_mpiActions.passer"]], "test_diagnosepickleerrortestreactor() (armi.tests.test_mpiactions.mpiitertests method)": [[389, "armi.tests.test_mpiActions.MpiIterTests.test_diagnosePickleErrorTestReactor"]], "test_disableforexclusivetasks() (armi.tests.test_mpiactions.queueactionstests method)": [[389, "armi.tests.test_mpiActions.QueueActionsTests.test_disableForExclusiveTasks"]], "test_excessprocesses() (armi.tests.test_mpiactions.mpiitertests method)": [[389, "armi.tests.test_mpiActions.MpiIterTests.test_excessProcesses"]], "test_makequeue() (armi.tests.test_mpiactions.queueactionstests method)": [[389, "armi.tests.test_mpiActions.QueueActionsTests.test_makeQueue"]], "test_mpiiter() (armi.tests.test_mpiactions.mpiitertests method)": [[389, "armi.tests.test_mpiActions.MpiIterTests.test_mpiIter"]], "test_parallel() (armi.tests.test_mpiactions.mpiitertests method)": [[389, "armi.tests.test_mpiActions.MpiIterTests.test_parallel"]], "test_perfectbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[389, "armi.tests.test_mpiActions.MpiIterTests.test_perfectBalancing"]], "test_runactionsdistributestateaction() (armi.tests.test_mpiactions.mpiitertests method)": [[389, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributeStateAction"]], "test_runactionsdistributionaction() (armi.tests.test_mpiactions.mpiitertests method)": [[389, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributionAction"]], "test_serialgather() (armi.tests.test_mpiactions.mpiitertests method)": [[389, "armi.tests.test_mpiActions.MpiIterTests.test_serialGather"]], "test_typicalbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[389, "armi.tests.test_mpiActions.MpiIterTests.test_typicalBalancing"]], "bcastaction1 (class in armi.tests.test_mpifeatures)": [[390, "armi.tests.test_mpiFeatures.BcastAction1"]], "bcastaction2 (class in armi.tests.test_mpifeatures)": [[390, "armi.tests.test_mpiFeatures.BcastAction2"]], "failinginterface1 (class in armi.tests.test_mpifeatures)": [[390, "armi.tests.test_mpiFeatures.FailingInterface1"]], "failinginterface2 (class in armi.tests.test_mpifeatures)": [[390, "armi.tests.test_mpiFeatures.FailingInterface2"]], "failinginterface3 (class in armi.tests.test_mpifeatures)": [[390, "armi.tests.test_mpiFeatures.FailingInterface3"]], "mockinterface (class in armi.tests.test_mpifeatures)": [[390, "armi.tests.test_mpiFeatures.MockInterface"]], "mpidistributestatetests (class in armi.tests.test_mpifeatures)": [[390, "armi.tests.test_mpiFeatures.MpiDistributeStateTests"]], "mpioperatortests (class in armi.tests.test_mpifeatures)": [[390, "armi.tests.test_mpiFeatures.MpiOperatorTests"]], "mpipathtoolstests (class in armi.tests.test_mpifeatures)": [[390, "armi.tests.test_mpiFeatures.MpiPathToolsTests"]], "testcontextmpi (class in armi.tests.test_mpifeatures)": [[390, "armi.tests.test_mpiFeatures.TestContextMpi"]], "armi.tests.test_mpifeatures": [[390, "module-armi.tests.test_mpiFeatures"]], "fail() (armi.tests.test_mpifeatures.failinginterface3 method)": [[390, "armi.tests.test_mpiFeatures.FailingInterface3.fail"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface1 method)": [[390, "armi.tests.test_mpiFeatures.FailingInterface1.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface2 method)": [[390, "armi.tests.test_mpiFeatures.FailingInterface2.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface3 method)": [[390, "armi.tests.test_mpiFeatures.FailingInterface3.interactEveryNode"]], "interactinit() (armi.tests.test_mpifeatures.mockinterface method)": [[390, "armi.tests.test_mpiFeatures.MockInterface.interactInit"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction1 method)": [[390, "armi.tests.test_mpiFeatures.BcastAction1.invokeHook"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction2 method)": [[390, "armi.tests.test_mpiFeatures.BcastAction2.invokeHook"]], "name (armi.tests.test_mpifeatures.failinginterface1 attribute)": [[390, "armi.tests.test_mpiFeatures.FailingInterface1.name"]], "name (armi.tests.test_mpifeatures.failinginterface2 attribute)": [[390, "armi.tests.test_mpiFeatures.FailingInterface2.name"]], "name (armi.tests.test_mpifeatures.failinginterface3 attribute)": [[390, "armi.tests.test_mpiFeatures.FailingInterface3.name"]], "name (armi.tests.test_mpifeatures.mockinterface attribute)": [[390, "armi.tests.test_mpiFeatures.MockInterface.name"]], "test_basicoperatormpi() (armi.tests.test_mpifeatures.mpioperatortests method)": [[390, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_basicOperatorMPI"]], "test_cleanpathmpi() (armi.tests.test_mpifeatures.mpipathtoolstests method)": [[390, "armi.tests.test_mpiFeatures.MpiPathToolsTests.test_cleanPathMpi"]], "test_compileresults() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[390, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_compileResults"]], "test_distributeinterfaces() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[390, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeInterfaces"]], "test_distributereactor() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[390, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeReactor"]], "test_distributesettings() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[390, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeSettings"]], "test_distributestate() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[390, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeState"]], "test_finalizeinteract() (armi.tests.test_mpifeatures.mpioperatortests method)": [[390, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_finalizeInteract"]], "test_nonnonedata() (armi.tests.test_mpifeatures.testcontextmpi method)": [[390, "armi.tests.test_mpiFeatures.TestContextMpi.test_nonNoneData"]], "test_primarycritical() (armi.tests.test_mpifeatures.mpioperatortests method)": [[390, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryCritical"]], "test_primaryexception() (armi.tests.test_mpifeatures.mpioperatortests method)": [[390, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryException"]], "test_rank() (armi.tests.test_mpifeatures.testcontextmpi method)": [[390, "armi.tests.test_mpiFeatures.TestContextMpi.test_rank"]], "workeroperate() (armi.tests.test_mpifeatures.failinginterface3 method)": [[390, "armi.tests.test_mpiFeatures.FailingInterface3.workerOperate"]], "mocksyncpc (class in armi.tests.test_mpiparameters)": [[391, "armi.tests.test_mpiParameters.MockSyncPC"]], "synchronizationtests (class in armi.tests.test_mpiparameters)": [[391, "armi.tests.test_mpiParameters.SynchronizationTests"]], "armi.tests.test_mpiparameters": [[391, "module-armi.tests.test_mpiParameters"]], "makecomp() (in module armi.tests.test_mpiparameters)": [[391, "armi.tests.test_mpiParameters.makeComp"]], "pdefs (armi.tests.test_mpiparameters.mocksyncpc attribute)": [[391, "armi.tests.test_mpiParameters.MockSyncPC.pDefs"]], "pb (armi.tests.test_mpiparameters.mocksyncpc attribute)": [[391, "armi.tests.test_mpiParameters.MockSyncPC.pb"]], "test_conflictsmaintainwithstateretainer() (armi.tests.test_mpiparameters.synchronizationtests method)": [[391, "armi.tests.test_mpiParameters.SynchronizationTests.test_conflictsMaintainWithStateRetainer"]], "test_noconflicts() (armi.tests.test_mpiparameters.synchronizationtests method)": [[391, "armi.tests.test_mpiParameters.SynchronizationTests.test_noConflicts"]], "test_withconflicts() (armi.tests.test_mpiparameters.synchronizationtests method)": [[391, "armi.tests.test_mpiParameters.SynchronizationTests.test_withConflicts"]], "test_withconflictsbutsamevalue() (armi.tests.test_mpiparameters.synchronizationtests method)": [[391, "armi.tests.test_mpiParameters.SynchronizationTests.test_withConflictsButSameValue"]], "notebooktests (class in armi.tests.test_notebooks)": [[392, "armi.tests.test_notebooks.NotebookTests"]], "armi.tests.test_notebooks": [[392, "module-armi.tests.test_notebooks"]], "runnotebook() (in module armi.tests.test_notebooks)": [[392, "armi.tests.test_notebooks.runNotebook"]], "test_rundatamodel() (armi.tests.test_notebooks.notebooktests method)": [[392, "armi.tests.test_notebooks.NotebookTests.test_runDataModel"]], "test_runparamsweep() (armi.tests.test_notebooks.notebooktests method)": [[392, "armi.tests.test_notebooks.NotebookTests.test_runParamSweep"]], "beforereactorplugin (class in armi.tests.test_plugins)": [[393, "armi.tests.test_plugins.BeforeReactorPlugin"]], "pluginflags1 (class in armi.tests.test_plugins)": [[393, "armi.tests.test_plugins.PluginFlags1"]], "sillyaxialexpansionchanger (class in armi.tests.test_plugins)": [[393, "armi.tests.test_plugins.SillyAxialExpansionChanger"]], "sillyaxialplugin (class in armi.tests.test_plugins)": [[393, "armi.tests.test_plugins.SillyAxialPlugin"]], "testplugin (class in armi.tests.test_plugins)": [[393, "armi.tests.test_plugins.TestPlugin"]], "testpluginbasics (class in armi.tests.test_plugins)": [[393, "armi.tests.test_plugins.TestPluginBasics"]], "testpluginregistration (class in armi.tests.test_plugins)": [[393, "armi.tests.test_plugins.TestPluginRegistration"]], "armi.tests.test_plugins": [[393, "module-armi.tests.test_plugins"]], "beforereactorconstruction() (armi.tests.test_plugins.beforereactorplugin static method)": [[393, "armi.tests.test_plugins.BeforeReactorPlugin.beforeReactorConstruction"]], "defineflags() (armi.tests.test_plugins.pluginflags1 static method)": [[393, "armi.tests.test_plugins.PluginFlags1.defineFlags"]], "getaxialexpansionchanger() (armi.tests.test_plugins.sillyaxialplugin static method)": [[393, "armi.tests.test_plugins.SillyAxialPlugin.getAxialExpansionChanger"]], "plugin (armi.tests.test_plugins.testplugin attribute)": [[393, "armi.tests.test_plugins.TestPlugin.plugin"]], "test_axialexpansionhook() (armi.tests.test_plugins.testpluginregistration method)": [[393, "armi.tests.test_plugins.TestPluginRegistration.test_axialExpansionHook"]], "test_beforereactorconstructionhook() (armi.tests.test_plugins.testpluginregistration method)": [[393, "armi.tests.test_plugins.TestPluginRegistration.test_beforeReactorConstructionHook"]], "test_defineblueprintssections() (armi.tests.test_plugins.testplugin method)": [[393, "armi.tests.test_plugins.TestPlugin.test_defineBlueprintsSections"]], "test_defineflags() (armi.tests.test_plugins.testpluginregistration method)": [[393, "armi.tests.test_plugins.TestPluginRegistration.test_defineFlags"]], "test_defineparameters() (armi.tests.test_plugins.testpluginbasics method)": [[393, "armi.tests.test_plugins.TestPluginBasics.test_defineParameters"]], "test_exposeinterfaces() (armi.tests.test_plugins.testplugin method)": [[393, "armi.tests.test_plugins.TestPlugin.test_exposeInterfaces"]], "test_exposeinterfaces() (armi.tests.test_plugins.testpluginbasics method)": [[393, "armi.tests.test_plugins.TestPluginBasics.test_exposeInterfaces"]], "test_passivedbloadplugin() (armi.tests.test_plugins.testpluginregistration method)": [[393, "armi.tests.test_plugins.TestPluginRegistration.test_passiveDBLoadPlugin"]], "test_pluginsexposeinterfaces() (armi.tests.test_plugins.testpluginbasics method)": [[393, "armi.tests.test_plugins.TestPluginBasics.test_pluginsExposeInterfaces"]], "testrunlog (class in armi.tests.test_runlog)": [[394, "armi.tests.test_runLog.TestRunLog"]], "testrunlogger (class in armi.tests.test_runlog)": [[394, "armi.tests.test_runLog.TestRunLogger"]], "armi.tests.test_runlog": [[394, "module-armi.tests.test_runLog"]], "test_allowstopduplicates() (armi.tests.test_runlog.testrunlogger method)": [[394, "armi.tests.test_runLog.TestRunLogger.test_allowStopDuplicates"]], "test_callingstartlogmultipletimes() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_callingStartLogMultipleTimes"]], "test_closelogging() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_closeLogging"]], "test_concatenatelogs() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_concatenateLogs"]], "test_createlogdir() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_createLogDir"]], "test_getduplicatesfilter() (armi.tests.test_runlog.testrunlogger method)": [[394, "armi.tests.test_runLog.TestRunLogger.test_getDuplicatesFilter"]], "test_getwhitespace() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_getWhiteSpace"]], "test_invalidsetverbositybystring() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_invalidSetVerbosityByString"]], "test_parentrunlogging() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_parentRunLogging"]], "test_setverbosity() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_setVerbosity"]], "test_setverbositybeforestartlog() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_setVerbosityBeforeStartLog"]], "test_setverbosityfrominteger() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromInteger"]], "test_setverbosityfromstring() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromString"]], "test_verbosityoutofrange() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_verbosityOutOfRange"]], "test_warningreport() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_warningReport"]], "test_warningreportinvalid() (armi.tests.test_runlog.testrunlog method)": [[394, "armi.tests.test_runLog.TestRunLog.test_warningReportInvalid"]], "test_write() (armi.tests.test_runlog.testrunlogger method)": [[394, "armi.tests.test_runLog.TestRunLogger.test_write"]], "testcomparefiles (class in armi.tests.test_tests)": [[395, "armi.tests.test_tests.TestCompareFiles"]], "armi.tests.test_tests": [[395, "module-armi.tests.test_tests"]], "test_comparefileline() (armi.tests.test_tests.testcomparefiles method)": [[395, "armi.tests.test_tests.TestCompareFiles.test_compareFileLine"]], "testuserplugins (class in armi.tests.test_user_plugins)": [[396, "armi.tests.test_user_plugins.TestUserPlugins"]], "upinterface (class in armi.tests.test_user_plugins)": [[396, "armi.tests.test_user_plugins.UpInterface"]], "userpluginbaddefineparameterrenames (class in armi.tests.test_user_plugins)": [[396, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames"]], "userpluginbaddefinessettings (class in armi.tests.test_user_plugins)": [[396, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings"]], "userpluginflags (class in armi.tests.test_user_plugins)": [[396, "armi.tests.test_user_plugins.UserPluginFlags"]], "userpluginflags2 (class in armi.tests.test_user_plugins)": [[396, "armi.tests.test_user_plugins.UserPluginFlags2"]], "userpluginflags3 (class in armi.tests.test_user_plugins)": [[396, "armi.tests.test_user_plugins.UserPluginFlags3"]], "userpluginonprocesscoreloading (class in armi.tests.test_user_plugins)": [[396, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading"]], "userpluginwithinterface (class in armi.tests.test_user_plugins)": [[396, "armi.tests.test_user_plugins.UserPluginWithInterface"]], "armi.tests.test_user_plugins": [[396, "module-armi.tests.test_user_plugins"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags static method)": [[396, "armi.tests.test_user_plugins.UserPluginFlags.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags2 static method)": [[396, "armi.tests.test_user_plugins.UserPluginFlags2.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags3 static method)": [[396, "armi.tests.test_user_plugins.UserPluginFlags3.defineFlags"]], "defineparameterrenames() (armi.tests.test_user_plugins.userpluginbaddefineparameterrenames static method)": [[396, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames.defineParameterRenames"]], "definesettings() (armi.tests.test_user_plugins.userpluginbaddefinessettings static method)": [[396, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings.defineSettings"]], "exposeinterfaces() (armi.tests.test_user_plugins.userpluginwithinterface static method)": [[396, "armi.tests.test_user_plugins.UserPluginWithInterface.exposeInterfaces"]], "interacteverynode() (armi.tests.test_user_plugins.upinterface method)": [[396, "armi.tests.test_user_plugins.UpInterface.interactEveryNode"]], "name (armi.tests.test_user_plugins.upinterface attribute)": [[396, "armi.tests.test_user_plugins.UpInterface.name"]], "onprocesscoreloading() (armi.tests.test_user_plugins.userpluginonprocesscoreloading static method)": [[396, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading.onProcessCoreLoading"]], "test_registerrepeateduserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[396, "armi.tests.test_user_plugins.TestUserPlugins.test_registerRepeatedUserPlugins"]], "test_registeruserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[396, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPlugins"]], "test_registeruserpluginsabspath() (armi.tests.test_user_plugins.testuserplugins method)": [[396, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsAbsPath"]], "test_registeruserpluginsfromsettings() (armi.tests.test_user_plugins.testuserplugins method)": [[396, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsFromSettings"]], "test_userpluginonprocesscoreloading() (armi.tests.test_user_plugins.testuserplugins method)": [[396, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginOnProcessCoreLoading"]], "test_userpluginwithinterfaces() (armi.tests.test_user_plugins.testuserplugins method)": [[396, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginWithInterfaces"]], "test_userpluginsflags() (armi.tests.test_user_plugins.testuserplugins method)": [[396, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginsFlags"]], "test_validateuserpluginlimitations() (armi.tests.test_user_plugins.testuserplugins method)": [[396, "armi.tests.test_user_plugins.TestUserPlugins.test_validateUserPluginLimitations"]], "mergeabledict (class in armi.utils)": [[397, "armi.utils.MergeableDict"]], "mypickler (class in armi.utils)": [[397, "armi.utils.MyPickler"]], "armi.utils": [[397, "module-armi.utils"]], "capstrlen() (in module armi.utils)": [[397, "armi.utils.capStrLen"]], "classesinhierarchy() (in module armi.utils)": [[397, "armi.utils.classesInHierarchy"]], "copywithoutblocking() (in module armi.utils)": [[397, "armi.utils.copyWithoutBlocking"]], "createformattedstrwithdelimiter() (in module armi.utils)": [[397, "armi.utils.createFormattedStrWithDelimiter"]], "dotestpickleonallcontents2() (in module armi.utils)": [[397, "armi.utils.doTestPickleOnAllContents2"]], "getavailabilityfactors() (in module armi.utils)": [[397, "armi.utils.getAvailabilityFactors"]], "getburnsteps() (in module armi.utils)": [[397, "armi.utils.getBurnSteps"]], "getcumulativenodenum() (in module armi.utils)": [[397, "armi.utils.getCumulativeNodeNum"]], "getcyclelengths() (in module armi.utils)": [[397, "armi.utils.getCycleLengths"]], "getcyclenames() (in module armi.utils)": [[397, "armi.utils.getCycleNames"]], "getcyclenodefromcumulativenode() (in module armi.utils)": [[397, "armi.utils.getCycleNodeFromCumulativeNode"]], "getcyclenodefromcumulativestep() (in module armi.utils)": [[397, "armi.utils.getCycleNodeFromCumulativeStep"]], "getfilesha1hash() (in module armi.utils)": [[397, "armi.utils.getFileSHA1Hash"]], "getmaxburnsteps() (in module armi.utils)": [[397, "armi.utils.getMaxBurnSteps"]], "getnodespercycle() (in module armi.utils)": [[397, "armi.utils.getNodesPerCycle"]], "getpowerfractions() (in module armi.utils)": [[397, "armi.utils.getPowerFractions"]], "getprevioustimenode() (in module armi.utils)": [[397, "armi.utils.getPreviousTimeNode"]], "getsteplengths() (in module armi.utils)": [[397, "armi.utils.getStepLengths"]], "hasburnup() (in module armi.utils)": [[397, "armi.utils.hasBurnup"]], "list2str() (in module armi.utils)": [[397, "armi.utils.list2str"]], "merge() (armi.utils.mergeabledict method)": [[397, "armi.utils.MergeableDict.merge"]], "plotmatrix() (in module armi.utils)": [[397, "armi.utils.plotMatrix"]], "prependtolist() (in module armi.utils)": [[397, "armi.utils.prependToList"]], "safecopy() (in module armi.utils)": [[397, "armi.utils.safeCopy"]], "save() (armi.utils.mypickler method)": [[397, "armi.utils.MyPickler.save"]], "slantsplit() (in module armi.utils)": [[397, "armi.utils.slantSplit"]], "trypickleonallcontents() (in module armi.utils)": [[397, "armi.utils.tryPickleOnAllContents"]], "trypickleonallcontents3() (in module armi.utils)": [[397, "armi.utils.tryPickleOnAllContents3"]], "username() (in module armi.utils)": [[397, "armi.utils.userName"]], "asciimap (class in armi.utils.asciimaps)": [[398, "armi.utils.asciimaps.AsciiMap"]], "asciimapcartesian (class in armi.utils.asciimaps)": [[398, "armi.utils.asciimaps.AsciiMapCartesian"]], "asciimaphexfullflatsup (class in armi.utils.asciimaps)": [[398, "armi.utils.asciimaps.AsciiMapHexFullFlatsUp"]], "asciimaphexfulltipsup (class in armi.utils.asciimaps)": [[398, "armi.utils.asciimaps.AsciiMapHexFullTipsUp"]], "asciimaphexthirdflatsup (class in armi.utils.asciimaps)": [[398, "armi.utils.asciimaps.AsciiMapHexThirdFlatsUp"]], "armi.utils.asciimaps": [[398, "module-armi.utils.asciimaps"]], "asciilabelbyindices (armi.utils.asciimaps.asciimap attribute)": [[398, "armi.utils.asciimaps.AsciiMap.asciiLabelByIndices"]], "asciilines (armi.utils.asciimaps.asciimap attribute)": [[398, "armi.utils.asciimaps.AsciiMap.asciiLines"]], "asciimapfromgeomanddomain() (in module armi.utils.asciimaps)": [[398, "armi.utils.asciimaps.asciiMapFromGeomAndDomain"]], "asciioffsets (armi.utils.asciimaps.asciimap attribute)": [[398, "armi.utils.asciimaps.AsciiMap.asciiOffsets"]], "fromreactor() (armi.utils.asciimaps.asciimap static method)": [[398, "armi.utils.asciimaps.AsciiMap.fromReactor"]], "gridcontentstoascii() (armi.utils.asciimaps.asciimap method)": [[398, "armi.utils.asciimaps.AsciiMap.gridContentsToAscii"]], "items() (armi.utils.asciimaps.asciimap method)": [[398, "armi.utils.asciimaps.AsciiMap.items"]], "keys() (armi.utils.asciimaps.asciimap method)": [[398, "armi.utils.asciimaps.AsciiMap.keys"]], "readascii() (armi.utils.asciimaps.asciimap method)": [[398, "armi.utils.asciimaps.AsciiMap.readAscii"]], "writeascii() (armi.utils.asciimaps.asciimap method)": [[398, "armi.utils.asciimaps.AsciiMap.writeAscii"]], "mastertimer (class in armi.utils.codetiming)": [[399, "armi.utils.codeTiming.MasterTimer"]], "armi.utils.codetiming": [[399, "module-armi.utils.codeTiming"]], "endtimer() (armi.utils.codetiming.mastertimer static method)": [[399, "armi.utils.codeTiming.MasterTimer.endTimer"]], "getactivetimers() (armi.utils.codetiming.mastertimer static method)": [[399, "armi.utils.codeTiming.MasterTimer.getActiveTimers"]], "getmastertimer() (armi.utils.codetiming.mastertimer static method)": [[399, "armi.utils.codeTiming.MasterTimer.getMasterTimer"]], "getmastertimer() (in module armi.utils.codetiming)": [[399, "armi.utils.codeTiming.getMasterTimer"]], "gettimer() (armi.utils.codetiming.mastertimer static method)": [[399, "armi.utils.codeTiming.MasterTimer.getTimer"]], "report() (armi.utils.codetiming.mastertimer static method)": [[399, "armi.utils.codeTiming.MasterTimer.report"]], "startall() (armi.utils.codetiming.mastertimer static method)": [[399, "armi.utils.codeTiming.MasterTimer.startAll"]], "starttimer() (armi.utils.codetiming.mastertimer static method)": [[399, "armi.utils.codeTiming.MasterTimer.startTimer"]], "stopall() (armi.utils.codetiming.mastertimer static method)": [[399, "armi.utils.codeTiming.MasterTimer.stopAll"]], "time() (armi.utils.codetiming.mastertimer static method)": [[399, "armi.utils.codeTiming.MasterTimer.time"]], "timed() (in module armi.utils.codetiming)": [[399, "armi.utils.codeTiming.timed"]], "timeline() (armi.utils.codetiming.mastertimer static method)": [[399, "armi.utils.codeTiming.MasterTimer.timeline"]], "inputerror": [[400, "armi.utils.customExceptions.InputError"]], "invalidsettingsfileerror": [[400, "armi.utils.customExceptions.InvalidSettingsFileError"]], "invalidsettingsstopprocess": [[400, "armi.utils.customExceptions.InvalidSettingsStopProcess"]], "nonexistentsetting": [[400, "armi.utils.customExceptions.NonexistentSetting"]], "nonexistentsettingsfileerror": [[400, "armi.utils.customExceptions.NonexistentSettingsFileError"]], "settingexception": [[400, "armi.utils.customExceptions.SettingException"]], "armi.utils.customexceptions": [[400, "module-armi.utils.customExceptions"]], "important() (in module armi.utils.customexceptions)": [[400, "armi.utils.customExceptions.important"]], "info() (in module armi.utils.customexceptions)": [[400, "armi.utils.customExceptions.info"]], "warn() (in module armi.utils.customexceptions)": [[400, "armi.utils.customExceptions.warn"]], "warn_when_root() (in module armi.utils.customexceptions)": [[400, "armi.utils.customExceptions.warn_when_root"]], "applyisotopicsmix() (in module armi.utils.densitytools)": [[401, "armi.utils.densityTools.applyIsotopicsMix"]], "armi.utils.densitytools": [[401, "module-armi.utils.densityTools"]], "calculatemassdensity() (in module armi.utils.densitytools)": [[401, "armi.utils.densityTools.calculateMassDensity"]], "calculatenumberdensity() (in module armi.utils.densitytools)": [[401, "armi.utils.densityTools.calculateNumberDensity"]], "expandelementalmassfracstonuclides() (in module armi.utils.densitytools)": [[401, "armi.utils.densityTools.expandElementalMassFracsToNuclides"]], "expandelementalnuclidemassfracs() (in module armi.utils.densitytools)": [[401, "armi.utils.densityTools.expandElementalNuclideMassFracs"]], "filternuclidelist() (in module armi.utils.densitytools)": [[401, "armi.utils.densityTools.filterNuclideList"]], "formatmaterialcard() (in module armi.utils.densitytools)": [[401, "armi.utils.densityTools.formatMaterialCard"]], "getchemicals() (in module armi.utils.densitytools)": [[401, "armi.utils.densityTools.getChemicals"]], "getmassfractions() (in module armi.utils.densitytools)": [[401, "armi.utils.densityTools.getMassFractions"]], "getmassingrams() (in module armi.utils.densitytools)": [[401, "armi.utils.densityTools.getMassInGrams"]], "getndensfrommasses() (in module armi.utils.densitytools)": [[401, "armi.utils.densityTools.getNDensFromMasses"]], "normalizenuclidelist() (in module armi.utils.densitytools)": [[401, "armi.utils.densityTools.normalizeNuclideList"]], "directorychanger (class in armi.utils.directorychangers)": [[402, "armi.utils.directoryChangers.DirectoryChanger"]], "forcedcreationdirectorychanger (class in armi.utils.directorychangers)": [[402, "armi.utils.directoryChangers.ForcedCreationDirectoryChanger"]], "getrandomdirectory() (armi.utils.directorychangers.temporarydirectorychanger class method)": [[402, "armi.utils.directoryChangers.TemporaryDirectoryChanger.GetRandomDirectory"]], "temporarydirectorychanger (class in armi.utils.directorychangers)": [[402, "armi.utils.directoryChangers.TemporaryDirectoryChanger"]], "armi.utils.directorychangers": [[402, "module-armi.utils.directoryChangers"]], "close() (armi.utils.directorychangers.directorychanger method)": [[402, "armi.utils.directoryChangers.DirectoryChanger.close"]], "directorychangerfactory() (in module armi.utils.directorychangers)": [[402, "armi.utils.directoryChangers.directoryChangerFactory"]], "movefiles() (armi.utils.directorychangers.directorychanger method)": [[402, "armi.utils.directoryChangers.DirectoryChanger.moveFiles"]], "open() (armi.utils.directorychangers.directorychanger method)": [[402, "armi.utils.directoryChangers.DirectoryChanger.open"]], "retrievefiles() (armi.utils.directorychangers.directorychanger method)": [[402, "armi.utils.directoryChangers.DirectoryChanger.retrieveFiles"]], "mpidirectorychanger (class in armi.utils.directorychangersmpi)": [[403, "armi.utils.directoryChangersMpi.MpiDirectoryChanger"]], "armi.utils.directorychangersmpi": [[403, "module-armi.utils.directoryChangersMpi"]], "close() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[403, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.close"]], "open() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[403, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.open"]], "armi.utils.dynamicimporter": [[404, "module-armi.utils.dynamicImporter"]], "getentirefamilytree() (in module armi.utils.dynamicimporter)": [[404, "armi.utils.dynamicImporter.getEntireFamilyTree"]], "flag (class in armi.utils.flags)": [[405, "armi.utils.flags.Flag"]], "armi.utils.flags": [[405, "module-armi.utils.flags"]], "auto (class in armi.utils.flags)": [[405, "armi.utils.flags.auto"]], "extend() (armi.utils.flags.flag class method)": [[405, "armi.utils.flags.Flag.extend"]], "fields() (armi.utils.flags.flag class method)": [[405, "armi.utils.flags.Flag.fields"]], "from_bytes() (armi.utils.flags.flag class method)": [[405, "armi.utils.flags.Flag.from_bytes"]], "sortedfields() (armi.utils.flags.flag class method)": [[405, "armi.utils.flags.Flag.sortedFields"]], "to_bytes() (armi.utils.flags.flag method)": [[405, "armi.utils.flags.Flag.to_bytes"]], "width() (armi.utils.flags.flag class method)": [[405, "armi.utils.flags.Flag.width"]], "area() (in module armi.utils.hexagon)": [[407, "armi.utils.hexagon.area"]], "armi.utils.hexagon": [[407, "module-armi.utils.hexagon"]], "corners() (in module armi.utils.hexagon)": [[407, "armi.utils.hexagon.corners"]], "getindexofrotatedcell() (in module armi.utils.hexagon)": [[407, "armi.utils.hexagon.getIndexOfRotatedCell"]], "numpositionsinring() (in module armi.utils.hexagon)": [[407, "armi.utils.hexagon.numPositionsInRing"]], "numringstoholdnumcells() (in module armi.utils.hexagon)": [[407, "armi.utils.hexagon.numRingsToHoldNumCells"]], "pitch() (in module armi.utils.hexagon)": [[407, "armi.utils.hexagon.pitch"]], "side() (in module armi.utils.hexagon)": [[407, "armi.utils.hexagon.side"]], "totalpositionsuptoring() (in module armi.utils.hexagon)": [[407, "armi.utils.hexagon.totalPositionsUpToRing"]], "sequence (class in armi.utils.iterables)": [[408, "armi.utils.iterables.Sequence"]], "append() (armi.utils.iterables.sequence method)": [[408, "armi.utils.iterables.Sequence.append"]], "armi.utils.iterables": [[408, "module-armi.utils.iterables"]], "chunk() (in module armi.utils.iterables)": [[408, "armi.utils.iterables.chunk"]], "copy() (armi.utils.iterables.sequence method)": [[408, "armi.utils.iterables.Sequence.copy"]], "drop() (armi.utils.iterables.sequence method)": [[408, "armi.utils.iterables.Sequence.drop"]], "extend() (armi.utils.iterables.sequence method)": [[408, "armi.utils.iterables.Sequence.extend"]], "flatten() (in module armi.utils.iterables)": [[408, "armi.utils.iterables.flatten"]], "packbinarystrings() (in module armi.utils.iterables)": [[408, "armi.utils.iterables.packBinaryStrings"]], "packhexstrings() (in module armi.utils.iterables)": [[408, "armi.utils.iterables.packHexStrings"]], "pivot() (in module armi.utils.iterables)": [[408, "armi.utils.iterables.pivot"]], "select() (armi.utils.iterables.sequence method)": [[408, "armi.utils.iterables.Sequence.select"]], "split() (in module armi.utils.iterables)": [[408, "armi.utils.iterables.split"]], "transform() (armi.utils.iterables.sequence method)": [[408, "armi.utils.iterables.Sequence.transform"]], "unpackbinarystrings() (in module armi.utils.iterables)": [[408, "armi.utils.iterables.unpackBinaryStrings"]], "unpackhexstrings() (in module armi.utils.iterables)": [[408, "armi.utils.iterables.unpackHexStrings"]], "armi.utils.mathematics": [[409, "module-armi.utils.mathematics"]], "average1dwithintolerance() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.average1DWithinTolerance"]], "converttoslice() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.convertToSlice"]], "efmt() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.efmt"]], "expandrepeatedfloats() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.expandRepeatedFloats"]], "findclosest() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.findClosest"]], "findnearestvalue() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.findNearestValue"]], "findnearestvalueandindex() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.findNearestValueAndIndex"]], "fixthreedigitexp() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.fixThreeDigitExp"]], "getfloat() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.getFloat"]], "getstepsfromvalues() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.getStepsFromValues"]], "ismonotonic() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.isMonotonic"]], "linearinterpolation() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.linearInterpolation"]], "minimizescalarfunc() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.minimizeScalarFunc"]], "newtonsmethod() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.newtonsMethod"]], "parabolafrompoints() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.parabolaFromPoints"]], "parabolicinterpolation() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.parabolicInterpolation"]], "relerr() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.relErr"]], "resamplestepwise() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.resampleStepwise"]], "rotatexy() (in module armi.utils.mathematics)": [[409, "armi.utils.mathematics.rotateXY"]], "armi.utils.outputcache": [[410, "module-armi.utils.outputCache"]], "cachecall() (in module armi.utils.outputcache)": [[410, "armi.utils.outputCache.cacheCall"]], "deletecache() (in module armi.utils.outputcache)": [[410, "armi.utils.outputCache.deleteCache"]], "retrieveoutput() (in module armi.utils.outputcache)": [[410, "armi.utils.outputCache.retrieveOutput"]], "store() (in module armi.utils.outputcache)": [[410, "armi.utils.outputCache.store"]], "armi.utils.parsing": [[411, "module-armi.utils.parsing"]], "datetimefromstr() (in module armi.utils.parsing)": [[411, "armi.utils.parsing.datetimeFromStr"]], "parsevalue() (in module armi.utils.parsing)": [[411, "armi.utils.parsing.parseValue"]], "tryliteraleval() (in module armi.utils.parsing)": [[411, "armi.utils.parsing.tryLiteralEval"]], "armi.utils.pathtools": [[412, "module-armi.utils.pathTools"]], "armiabspath() (in module armi.utils.pathtools)": [[412, "armi.utils.pathTools.armiAbsPath"]], "cleanpath() (in module armi.utils.pathtools)": [[412, "armi.utils.pathTools.cleanPath"]], "copyorwarn() (in module armi.utils.pathtools)": [[412, "armi.utils.pathTools.copyOrWarn"]], "importcustompymodule() (in module armi.utils.pathtools)": [[412, "armi.utils.pathTools.importCustomPyModule"]], "isaccessible() (in module armi.utils.pathtools)": [[412, "armi.utils.pathTools.isAccessible"]], "isfilepathnewer() (in module armi.utils.pathtools)": [[412, "armi.utils.pathTools.isFilePathNewer"]], "moduleandattributeexist() (in module armi.utils.pathtools)": [[412, "armi.utils.pathTools.moduleAndAttributeExist"]], "separatemoduleandattribute() (in module armi.utils.pathtools)": [[412, "armi.utils.pathTools.separateModuleAndAttribute"]], "depthslider (class in armi.utils.plotting)": [[413, "armi.utils.plotting.DepthSlider"]], "armi.utils.plotting": [[413, "module-armi.utils.plotting"]], "close() (in module armi.utils.plotting)": [[413, "armi.utils.plotting.close"]], "colorgenerator() (in module armi.utils.plotting)": [[413, "armi.utils.plotting.colorGenerator"]], "makehistogram() (in module armi.utils.plotting)": [[413, "armi.utils.plotting.makeHistogram"]], "next() (armi.utils.plotting.depthslider method)": [[413, "armi.utils.plotting.DepthSlider.next"]], "plotassemblytypes() (in module armi.utils.plotting)": [[413, "armi.utils.plotting.plotAssemblyTypes"]], "plotblockdepthmap() (in module armi.utils.plotting)": [[413, "armi.utils.plotting.plotBlockDepthMap"]], "plotblockdiagram() (in module armi.utils.plotting)": [[413, "armi.utils.plotting.plotBlockDiagram"]], "plotblockflux() (in module armi.utils.plotting)": [[413, "armi.utils.plotting.plotBlockFlux"]], "plotfacemap() (in module armi.utils.plotting)": [[413, "armi.utils.plotting.plotFaceMap"]], "plotnucxs() (in module armi.utils.plotting)": [[413, "armi.utils.plotting.plotNucXs"]], "previous() (armi.utils.plotting.depthslider method)": [[413, "armi.utils.plotting.DepthSlider.previous"]], "set_val() (armi.utils.plotting.depthslider method)": [[413, "armi.utils.plotting.DepthSlider.set_val"]], "updatepagedepthcolor() (armi.utils.plotting.depthslider method)": [[413, "armi.utils.plotting.DepthSlider.updatePageDepthColor"]], "immutablepropertyerror": [[414, "armi.utils.properties.ImmutablePropertyError"]], "areequal() (in module armi.utils.properties)": [[414, "armi.utils.properties.areEqual"]], "armi.utils.properties": [[414, "module-armi.utils.properties"]], "createimmutableproperty() (in module armi.utils.properties)": [[414, "armi.utils.properties.createImmutableProperty"]], "lockimmutableproperties() (in module armi.utils.properties)": [[414, "armi.utils.properties.lockImmutableProperties"]], "numpyhackforequal() (in module armi.utils.properties)": [[414, "armi.utils.properties.numpyHackForEqual"]], "unlockimmutableproperties() (in module armi.utils.properties)": [[414, "armi.utils.properties.unlockImmutableProperties"]], "armi.utils.reportplotting": [[415, "module-armi.utils.reportPlotting"]], "buvstime() (in module armi.utils.reportplotting)": [[415, "armi.utils.reportPlotting.buVsTime"]], "createplotmetadata() (in module armi.utils.reportplotting)": [[415, "armi.utils.reportPlotting.createPlotMetaData"]], "keffvstime() (in module armi.utils.reportplotting)": [[415, "armi.utils.reportPlotting.keffVsTime"]], "movesvscycle() (in module armi.utils.reportplotting)": [[415, "armi.utils.reportPlotting.movesVsCycle"]], "plotaxialprofile() (in module armi.utils.reportplotting)": [[415, "armi.utils.reportPlotting.plotAxialProfile"]], "plotcoreoverviewradar() (in module armi.utils.reportplotting)": [[415, "armi.utils.reportPlotting.plotCoreOverviewRadar"]], "plotreactorperformance() (in module armi.utils.reportplotting)": [[415, "armi.utils.reportPlotting.plotReactorPerformance"]], "valuevstime() (in module armi.utils.reportplotting)": [[415, "armi.utils.reportPlotting.valueVsTime"]], "xshistoryvstime() (in module armi.utils.reportplotting)": [[415, "armi.utils.reportPlotting.xsHistoryVsTime"]], "datarow (class in armi.utils.tabulate)": [[416, "armi.utils.tabulate.DataRow"]], "iterable (class in armi.utils.tabulate)": [[416, "armi.utils.tabulate.Iterable"]], "line (class in armi.utils.tabulate)": [[416, "armi.utils.tabulate.Line"]], "sized (class in armi.utils.tabulate)": [[416, "armi.utils.tabulate.Sized"]], "tableformat (class in armi.utils.tabulate)": [[416, "armi.utils.tabulate.TableFormat"]], "textwrapper (class in armi.utils.tabulate)": [[416, "armi.utils.tabulate.TextWrapper"]], "args (armi.utils.tabulate.partial attribute)": [[416, "armi.utils.tabulate.partial.args"]], "armi.utils.tabulate": [[416, "module-armi.utils.tabulate"]], "begin (armi.utils.tabulate.datarow attribute)": [[416, "armi.utils.tabulate.DataRow.begin"]], "begin (armi.utils.tabulate.line attribute)": [[416, "armi.utils.tabulate.Line.begin"]], "chain (class in armi.utils.tabulate)": [[416, "armi.utils.tabulate.chain"]], "datarow (armi.utils.tabulate.tableformat attribute)": [[416, "armi.utils.tabulate.TableFormat.datarow"]], "end (armi.utils.tabulate.datarow attribute)": [[416, "armi.utils.tabulate.DataRow.end"]], "end (armi.utils.tabulate.line attribute)": [[416, "armi.utils.tabulate.Line.end"]], "fill() (armi.utils.tabulate.textwrapper method)": [[416, "armi.utils.tabulate.TextWrapper.fill"]], "from_iterable() (armi.utils.tabulate.chain method)": [[416, "armi.utils.tabulate.chain.from_iterable"]], "func (armi.utils.tabulate.partial attribute)": [[416, "armi.utils.tabulate.partial.func"]], "headerrow (armi.utils.tabulate.tableformat attribute)": [[416, "armi.utils.tabulate.TableFormat.headerrow"]], "hline (armi.utils.tabulate.line attribute)": [[416, "armi.utils.tabulate.Line.hline"]], "keywords (armi.utils.tabulate.partial attribute)": [[416, "armi.utils.tabulate.partial.keywords"]], "lineabove (armi.utils.tabulate.tableformat attribute)": [[416, "armi.utils.tabulate.TableFormat.lineabove"]], "linebelow (armi.utils.tabulate.tableformat attribute)": [[416, "armi.utils.tabulate.TableFormat.linebelow"]], "linebelowheader (armi.utils.tabulate.tableformat attribute)": [[416, "armi.utils.tabulate.TableFormat.linebelowheader"]], "linebetweenrows (armi.utils.tabulate.tableformat attribute)": [[416, "armi.utils.tabulate.TableFormat.linebetweenrows"]], "namedtuple() (in module armi.utils.tabulate)": [[416, "armi.utils.tabulate.namedtuple"]], "padding (armi.utils.tabulate.tableformat attribute)": [[416, "armi.utils.tabulate.TableFormat.padding"]], "partial (class in armi.utils.tabulate)": [[416, "armi.utils.tabulate.partial"]], "reduce() (in module armi.utils.tabulate)": [[416, "armi.utils.tabulate.reduce"]], "sentence_end_re (armi.utils.tabulate.textwrapper attribute)": [[416, "armi.utils.tabulate.TextWrapper.sentence_end_re"]], "sep (armi.utils.tabulate.datarow attribute)": [[416, "armi.utils.tabulate.DataRow.sep"]], "sep (armi.utils.tabulate.line attribute)": [[416, "armi.utils.tabulate.Line.sep"]], "tabulate() (in module armi.utils.tabulate)": [[416, "armi.utils.tabulate.tabulate"]], "unicode_whitespace_trans (armi.utils.tabulate.textwrapper attribute)": [[416, "armi.utils.tabulate.TextWrapper.unicode_whitespace_trans"]], "uspace (armi.utils.tabulate.textwrapper attribute)": [[416, "armi.utils.tabulate.TextWrapper.uspace"]], "withheaderhide (armi.utils.tabulate.tableformat attribute)": [[416, "armi.utils.tabulate.TableFormat.withHeaderHide"]], "wordsep_re (armi.utils.tabulate.textwrapper attribute)": [[416, "armi.utils.tabulate.TextWrapper.wordsep_re"]], "wordsep_simple_re (armi.utils.tabulate.textwrapper attribute)": [[416, "armi.utils.tabulate.TextWrapper.wordsep_simple_re"]], "wrap() (armi.utils.tabulate.textwrapper method)": [[416, "armi.utils.tabulate.TextWrapper.wrap"]], "x (armi.utils.tabulate.textwrapper attribute)": [[416, "armi.utils.tabulate.TextWrapper.x"]], "zip_longest (class in armi.utils.tabulate)": [[416, "armi.utils.tabulate.zip_longest"]], "armi.utils.tests": [[417, "module-armi.utils.tests"]], "testasciimaps (class in armi.utils.tests.test_asciimaps)": [[418, "armi.utils.tests.test_asciimaps.TestAsciiMaps"]], "armi.utils.tests.test_asciimaps": [[418, "module-armi.utils.tests.test_asciimaps"]], "test_cartesian() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[418, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_cartesian"]], "test_flathexbases() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[418, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_flatHexBases"]], "test_hexfullcornersup() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[418, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullCornersUp"]], "test_hexfullcornersupspotcheck() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[418, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullCornersUpSpotCheck"]], "test_hexfullflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[418, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullFlat"]], "test_hexfullflatsup() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[418, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullFlatsUp"]], "test_hexsmallflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[418, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexSmallFlat"]], "test_hexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[418, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexThird"]], "test_hexwithemptyrow() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[418, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithEmptyRow"]], "test_hexwithholes() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[418, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithHoles"]], "test_troublesomehexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[418, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_troublesomeHexThird"]], "codetimingtest (class in armi.utils.tests.test_codetiming)": [[419, "armi.utils.tests.test_codeTiming.CodeTimingTest"]], "armi.utils.tests.test_codetiming": [[419, "module-armi.utils.tests.test_codeTiming"]], "test_alternate_usages() (armi.utils.tests.test_codetiming.codetimingtest method)": [[419, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_alternate_usages"]], "test_master() (armi.utils.tests.test_codetiming.codetimingtest method)": [[419, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_master"]], "test_messy_starts_and_stops() (armi.utils.tests.test_codetiming.codetimingtest method)": [[419, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_messy_starts_and_stops"]], "test_method_definitions() (armi.utils.tests.test_codetiming.codetimingtest method)": [[419, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_method_definitions"]], "test_property_access() (armi.utils.tests.test_codetiming.codetimingtest method)": [[419, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_property_access"]], "customexceptiontests (class in armi.utils.tests.test_custom_exceptions)": [[420, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions": [[420, "module-armi.utils.tests.test_custom_exceptions"]], "exampleimportantmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[420, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleImportantMessage"]], "exampleinfomessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[420, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleInfoMessage"]], "examplewarnmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[420, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnMessage"]], "examplewarnwhenrootmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[420, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnWhenRootMessage"]], "test_important_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[420, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_important_decorator"]], "test_info_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[420, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_info_decorator"]], "test_warn_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[420, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_decorator"]], "test_warn_when_root_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[420, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_when_root_decorator"]], "testdensitytools (class in armi.utils.tests.test_densitytools)": [[421, "armi.utils.tests.test_densityTools.TestDensityTools"]], "uraniumoxide (class in armi.utils.tests.test_densitytools)": [[421, "armi.utils.tests.test_densityTools.UraniumOxide"]], "armi.utils.tests.test_densitytools": [[421, "module-armi.utils.tests.test_densityTools"]], "density() (armi.utils.tests.test_densitytools.uraniumoxide method)": [[421, "armi.utils.tests.test_densityTools.UraniumOxide.density"]], "pseudodensity() (armi.utils.tests.test_densitytools.uraniumoxide method)": [[421, "armi.utils.tests.test_densityTools.UraniumOxide.pseudoDensity"]], "test_applyisotopicsmix() (armi.utils.tests.test_densitytools.testdensitytools method)": [[421, "armi.utils.tests.test_densityTools.TestDensityTools.test_applyIsotopicsMix"]], "test_calculatenumberdensity() (armi.utils.tests.test_densitytools.testdensitytools method)": [[421, "armi.utils.tests.test_densityTools.TestDensityTools.test_calculateNumberDensity"]], "test_expandelement() (armi.utils.tests.test_densitytools.testdensitytools method)": [[421, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElement"]], "test_expandelementalmassfracstonuclides() (armi.utils.tests.test_densitytools.testdensitytools method)": [[421, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElementalMassFracsToNuclides"]], "test_expandelementalzeromassfrac() (armi.utils.tests.test_densitytools.testdensitytools method)": [[421, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElementalZeroMassFrac"]], "test_formatmaterialcard() (armi.utils.tests.test_densitytools.testdensitytools method)": [[421, "armi.utils.tests.test_densityTools.TestDensityTools.test_formatMaterialCard"]], "test_getchemicals() (armi.utils.tests.test_densitytools.testdensitytools method)": [[421, "armi.utils.tests.test_densityTools.TestDensityTools.test_getChemicals"]], "test_getmassfractions() (armi.utils.tests.test_densitytools.testdensitytools method)": [[421, "armi.utils.tests.test_densityTools.TestDensityTools.test_getMassFractions"]], "test_getmassingrams() (armi.utils.tests.test_densitytools.testdensitytools method)": [[421, "armi.utils.tests.test_densityTools.TestDensityTools.test_getMassInGrams"]], "test_getndensfrommasses() (armi.utils.tests.test_densitytools.testdensitytools method)": [[421, "armi.utils.tests.test_densityTools.TestDensityTools.test_getNDensFromMasses"]], "test_normalizenuclidelist() (armi.utils.tests.test_densitytools.testdensitytools method)": [[421, "armi.utils.tests.test_densityTools.TestDensityTools.test_normalizeNuclideList"]], "expectedexception": [[422, "armi.utils.tests.test_directoryChangers.ExpectedException"]], "testdirectorychangers (class in armi.utils.tests.test_directorychangers)": [[422, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers"]], "armi.utils.tests.test_directorychangers": [[422, "module-armi.utils.tests.test_directoryChangers"]], "test_change_to_nonexisting_fails() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[422, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_fails"]], "test_change_to_nonexisting_works_forced() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[422, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_works_forced"]], "test_exception() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[422, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception"]], "test_exception_disabled() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[422, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception_disabled"]], "test_file_retrieval() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[422, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval"]], "test_file_retrieval_missing_file() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[422, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval_missing_file"]], "test_mpiaction() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[422, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiAction"]], "test_mpiactionfailsonnonexistentpath() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[422, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiActionFailsOnNonexistentPath"]], "test_temporary_cleans() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[422, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_temporary_cleans"]], "revealyourdirectory (class in armi.utils.tests.test_directorychangersmpi)": [[423, "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory"]], "testmpi (class in armi.utils.tests.test_directorychangersmpi)": [[423, "armi.utils.tests.test_directoryChangersMpi.TestMPI"]], "armi.utils.tests.test_directorychangersmpi": [[423, "module-armi.utils.tests.test_directoryChangersMpi"]], "invokehook() (armi.utils.tests.test_directorychangersmpi.revealyourdirectory method)": [[423, "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory.invokeHook"]], "test_mpidirectorychanger() (armi.utils.tests.test_directorychangersmpi.testmpi method)": [[423, "armi.utils.tests.test_directoryChangersMpi.TestMPI.test_MpiDirectoryChanger"]], "bar (armi.utils.tests.test_flags.exampleflag attribute)": [[424, "armi.utils.tests.test_flags.ExampleFlag.BAR"]], "baz (armi.utils.tests.test_flags.exampleflag attribute)": [[424, "armi.utils.tests.test_flags.ExampleFlag.BAZ"]], "exampleflag (class in armi.utils.tests.test_flags)": [[424, "armi.utils.tests.test_flags.ExampleFlag"]], "foo (armi.utils.tests.test_flags.exampleflag attribute)": [[424, "armi.utils.tests.test_flags.ExampleFlag.FOO"]], "testflag (class in armi.utils.tests.test_flags)": [[424, "armi.utils.tests.test_flags.TestFlag"]], "armi.utils.tests.test_flags": [[424, "module-armi.utils.tests.test_flags"]], "test_auto() (armi.utils.tests.test_flags.testflag method)": [[424, "armi.utils.tests.test_flags.TestFlag.test_auto"]], "test_bitwise() (armi.utils.tests.test_flags.testflag method)": [[424, "armi.utils.tests.test_flags.TestFlag.test_bitwise"]], "test_bool() (armi.utils.tests.test_flags.testflag method)": [[424, "armi.utils.tests.test_flags.TestFlag.test_bool"]], "test_collision_creation() (armi.utils.tests.test_flags.testflag method)": [[424, "armi.utils.tests.test_flags.TestFlag.test_collision_creation"]], "test_collision_extension() (armi.utils.tests.test_flags.testflag method)": [[424, "armi.utils.tests.test_flags.TestFlag.test_collision_extension"]], "test_extend() (armi.utils.tests.test_flags.testflag method)": [[424, "armi.utils.tests.test_flags.TestFlag.test_extend"]], "test_getitem() (armi.utils.tests.test_flags.testflag method)": [[424, "armi.utils.tests.test_flags.TestFlag.test_getitem"]], "test_hashable() (armi.utils.tests.test_flags.testflag method)": [[424, "armi.utils.tests.test_flags.TestFlag.test_hashable"]], "test_inclusion() (armi.utils.tests.test_flags.testflag method)": [[424, "armi.utils.tests.test_flags.TestFlag.test_inclusion"]], "test_iteration() (armi.utils.tests.test_flags.testflag method)": [[424, "armi.utils.tests.test_flags.TestFlag.test_iteration"]], "n_fuzzy_draws (armi.utils.tests.test_hexagon.testhexagon attribute)": [[425, "armi.utils.tests.test_hexagon.TestHexagon.N_FUZZY_DRAWS"]], "testhexagon (class in armi.utils.tests.test_hexagon)": [[425, "armi.utils.tests.test_hexagon.TestHexagon"]], "armi.utils.tests.test_hexagon": [[425, "module-armi.utils.tests.test_hexagon"]], "test_hexagon_area() (armi.utils.tests.test_hexagon.testhexagon method)": [[425, "armi.utils.tests.test_hexagon.TestHexagon.test_hexagon_area"]], "test_indexwithnorotation() (armi.utils.tests.test_hexagon.testhexagon method)": [[425, "armi.utils.tests.test_hexagon.TestHexagon.test_indexWithNoRotation"]], "test_numpositionsinring() (armi.utils.tests.test_hexagon.testhexagon method)": [[425, "armi.utils.tests.test_hexagon.TestHexagon.test_numPositionsInRing"]], "test_positionsuptoring() (armi.utils.tests.test_hexagon.testhexagon method)": [[425, "armi.utils.tests.test_hexagon.TestHexagon.test_positionsUpToRing"]], "test_rotatefuzzy() (armi.utils.tests.test_hexagon.testhexagon method)": [[425, "armi.utils.tests.test_hexagon.TestHexagon.test_rotateFuzzy"]], "test_rotatedcellcenter() (armi.utils.tests.test_hexagon.testhexagon method)": [[425, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellCenter"]], "test_rotatedcellindexerrors() (armi.utils.tests.test_hexagon.testhexagon method)": [[425, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellIndexErrors"]], "test_rotatedcellorientationerrors() (armi.utils.tests.test_hexagon.testhexagon method)": [[425, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellOrientationErrors"]], "test_rotatedfirstring() (armi.utils.tests.test_hexagon.testhexagon method)": [[425, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedFirstRing"]], "testiterables (class in armi.utils.tests.test_iterables)": [[426, "armi.utils.tests.test_iterables.TestIterables"]], "armi.utils.tests.test_iterables": [[426, "module-armi.utils.tests.test_iterables"]], "test_addingsequences() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_addingSequences"]], "test_appendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_appendSequence"]], "test_arraypivot() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_arrayPivot"]], "test_chunk() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_chunk"]], "test_copysequence() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_copySequence"]], "test_extendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_extendSequence"]], "test_flatten() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_flatten"]], "test_listpivot() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_listPivot"]], "test_packingandunpackingbinarystrings() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingBinaryStrings"]], "test_packingandunpackinghexstrings() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingHexStrings"]], "test_sequence() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_sequence"]], "test_sequenceinit() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_sequenceInit"]], "test_split() (armi.utils.tests.test_iterables.testiterables method)": [[426, "armi.utils.tests.test_iterables.TestIterables.test_split"]], "testmath (class in armi.utils.tests.test_mathematics)": [[427, "armi.utils.tests.test_mathematics.TestMath"]], "armi.utils.tests.test_mathematics": [[427, "module-armi.utils.tests.test_mathematics"]], "test_average1dwithintolerance() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinTolerance"]], "test_average1dwithintoleranceinvalid() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinToleranceInvalid"]], "test_converttoslice() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_convertToSlice"]], "test_efmt() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_efmt"]], "test_expandrepeatedfloats() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_expandRepeatedFloats"]], "test_findclosest() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_findClosest"]], "test_findnearestvalue() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_findNearestValue"]], "test_fixthreedigitexp() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_fixThreeDigitExp"]], "test_getfloat() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_getFloat"]], "test_getstepsfromvalues() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_getStepsFromValues"]], "test_ismonotonic() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_isMonotonic"]], "test_linearinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_linearInterpolation"]], "test_minimizescalarfunc() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_minimizeScalarFunc"]], "test_newtonsmethod() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_newtonsMethod"]], "test_parabola() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_parabola"]], "test_parabolicinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_parabolicInterpolation"]], "test_relerr() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_relErr"]], "test_resamplestepwiseavg0() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg0"]], "test_resamplestepwiseavg1() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg1"]], "test_resamplestepwiseavg2() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg2"]], "test_resamplestepwiseavg3() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg3"]], "test_resamplestepwiseavg4() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg4"]], "test_resamplestepwiseavg5() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg5"]], "test_resamplestepwiseavg6() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg6"]], "test_resamplestepwiseavg7() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg7"]], "test_resamplestepwiseavgallnones() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgAllNones"]], "test_resamplestepwiseavgcomplicatednone() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgComplicatedNone"]], "test_resamplestepwiseavgnparray() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArray"]], "test_resamplestepwiseavgnparrayaverage() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArrayAverage"]], "test_resamplestepwiseavgonenone() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgOneNone"]], "test_resamplestepwisesum0() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum0"]], "test_resamplestepwisesum1() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum1"]], "test_resamplestepwisesum2() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum2"]], "test_resamplestepwisesum3() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum3"]], "test_resamplestepwisesum4() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum4"]], "test_resamplestepwisesum5() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum5"]], "test_resamplestepwisesum6() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum6"]], "test_resamplestepwisesum7() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum7"]], "test_resamplestepwisesumallnones() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumAllNones"]], "test_resamplestepwisesumonenone() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumOneNone"]], "test_rotatexy() (armi.utils.tests.test_mathematics.testmath method)": [[427, "armi.utils.tests.test_mathematics.TestMath.test_rotateXY"]], "testoutputcache (class in armi.utils.tests.test_outputcache)": [[428, "armi.utils.tests.test_outputCache.TestOutputCache"]], "armi.utils.tests.test_outputcache": [[428, "module-armi.utils.tests.test_outputCache"]], "test_deletecache() (armi.utils.tests.test_outputcache.testoutputcache method)": [[428, "armi.utils.tests.test_outputCache.TestOutputCache.test_deleteCache"]], "test_getcachedfolder() (armi.utils.tests.test_outputcache.testoutputcache method)": [[428, "armi.utils.tests.test_outputCache.TestOutputCache.test_getCachedFolder"]], "test_hashfiles() (armi.utils.tests.test_outputcache.testoutputcache method)": [[428, "armi.utils.tests.test_outputCache.TestOutputCache.test_hashFiles"]], "test_makeoutputmanifest() (armi.utils.tests.test_outputcache.testoutputcache method)": [[428, "armi.utils.tests.test_outputCache.TestOutputCache.test_makeOutputManifest"]], "test_retrieveoutput() (armi.utils.tests.test_outputcache.testoutputcache method)": [[428, "armi.utils.tests.test_outputCache.TestOutputCache.test_retrieveOutput"]], "literalevaltest (class in armi.utils.tests.test_parsing)": [[429, "armi.utils.tests.test_parsing.LiteralEvalTest"]], "armi.utils.tests.test_parsing": [[429, "module-armi.utils.tests.test_parsing"]], "test_parsevalue() (armi.utils.tests.test_parsing.literalevaltest method)": [[429, "armi.utils.tests.test_parsing.LiteralEvalTest.test_parseValue"]], "test_tryliteraleval() (armi.utils.tests.test_parsing.literalevaltest method)": [[429, "armi.utils.tests.test_parsing.LiteralEvalTest.test_tryLiteralEval"]], "pathtoolstests (class in armi.utils.tests.test_pathtools)": [[430, "armi.utils.tests.test_pathTools.PathToolsTests"]], "armi.utils.tests.test_pathtools": [[430, "module-armi.utils.tests.test_pathTools"]], "test_cleanpathnompi() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[430, "armi.utils.tests.test_pathTools.PathToolsTests.test_cleanPathNoMpi"]], "test_importcustommodule() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[430, "armi.utils.tests.test_pathTools.PathToolsTests.test_importCustomModule"]], "test_isaccessible() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[430, "armi.utils.tests.test_pathTools.PathToolsTests.test_isAccessible"]], "test_isfilepathnewer() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[430, "armi.utils.tests.test_pathTools.PathToolsTests.test_isFilePathNewer"]], "test_moduleandattributeexist() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[430, "armi.utils.tests.test_pathTools.PathToolsTests.test_moduleAndAttributeExist"]], "test_separatemoduleandattribute() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[430, "armi.utils.tests.test_pathTools.PathToolsTests.test_separateModuleAndAttribute"]], "testpatches (class in armi.utils.tests.test_plotting)": [[431, "armi.utils.tests.test_plotting.TestPatches"]], "testplotting (class in armi.utils.tests.test_plotting)": [[431, "armi.utils.tests.test_plotting.TestPlotting"]], "armi.utils.tests.test_plotting": [[431, "module-armi.utils.tests.test_plotting"]], "test_makeassempatches() (armi.utils.tests.test_plotting.testpatches method)": [[431, "armi.utils.tests.test_plotting.TestPatches.test_makeAssemPatches"]], "test_plotassemblytypes() (armi.utils.tests.test_plotting.testplotting method)": [[431, "armi.utils.tests.test_plotting.TestPlotting.test_plotAssemblyTypes"]], "test_plotblockflux() (armi.utils.tests.test_plotting.testplotting method)": [[431, "armi.utils.tests.test_plotting.TestPlotting.test_plotBlockFlux"]], "test_plotcartesianblock() (armi.utils.tests.test_plotting.testplotting method)": [[431, "armi.utils.tests.test_plotting.TestPlotting.test_plotCartesianBlock"]], "test_plotdepthmap() (armi.utils.tests.test_plotting.testplotting method)": [[431, "armi.utils.tests.test_plotting.TestPlotting.test_plotDepthMap"]], "test_plothexblock() (armi.utils.tests.test_plotting.testplotting method)": [[431, "armi.utils.tests.test_plotting.TestPlotting.test_plotHexBlock"]], "immutableclass (class in armi.utils.tests.test_properties)": [[432, "armi.utils.tests.test_properties.ImmutableClass"]], "immutablepropertytests (class in armi.utils.tests.test_properties)": [[432, "armi.utils.tests.test_properties.ImmutablePropertyTests"]], "armi.utils.tests.test_properties": [[432, "module-armi.utils.tests.test_properties"]], "initialize() (armi.utils.tests.test_properties.immutableclass method)": [[432, "armi.utils.tests.test_properties.ImmutableClass.initialize"]], "mynum (armi.utils.tests.test_properties.immutableclass property)": [[432, "armi.utils.tests.test_properties.ImmutableClass.myNum"]], "test_cannotassignvaluetoimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[432, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_cannotAssignValueToImmutableProperty"]], "test_retreivingunassignedvalueraiseserror() (armi.utils.tests.test_properties.immutablepropertytests method)": [[432, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_retreivingUnassignedValueRaisesError"]], "test_unlockdoesnotpermitsreassignmentofanimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[432, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "testradar (class in armi.utils.tests.test_reportplotting)": [[433, "armi.utils.tests.test_reportPlotting.TestRadar"]], "armi.utils.tests.test_reportplotting": [[433, "module-armi.utils.tests.test_reportPlotting"]], "test_buvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[433, "armi.utils.tests.test_reportPlotting.TestRadar.test_buVsTime"]], "test_createplotmetadata() (armi.utils.tests.test_reportplotting.testradar method)": [[433, "armi.utils.tests.test_reportPlotting.TestRadar.test_createPlotMetaData"]], "test_keffvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[433, "armi.utils.tests.test_reportPlotting.TestRadar.test_keffVsTime"]], "test_movesvscycle() (armi.utils.tests.test_reportplotting.testradar method)": [[433, "armi.utils.tests.test_reportPlotting.TestRadar.test_movesVsCycle"]], "test_plotaxialprofile() (armi.utils.tests.test_reportplotting.testradar method)": [[433, "armi.utils.tests.test_reportPlotting.TestRadar.test_plotAxialProfile"]], "test_radar() (armi.utils.tests.test_reportplotting.testradar method)": [[433, "armi.utils.tests.test_reportPlotting.TestRadar.test_radar"]], "test_valuevstime() (armi.utils.tests.test_reportplotting.testradar method)": [[433, "armi.utils.tests.test_reportPlotting.TestRadar.test_valueVsTime"]], "test_xshistoryvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[433, "armi.utils.tests.test_reportPlotting.TestRadar.test_xsHistoryVsTime"]], "testtabulateapi (class in armi.utils.tests.test_tabulate)": [[434, "armi.utils.tests.test_tabulate.TestTabulateAPI"]], "testtabulateinputs (class in armi.utils.tests.test_tabulate)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs"]], "testtabulateinternal (class in armi.utils.tests.test_tabulate)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal"]], "testtabulateoutput (class in armi.utils.tests.test_tabulate)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput"]], "armi.utils.tests.test_tabulate": [[434, "module-armi.utils.tests.test_tabulate"]], "test_aligncellveriticallybottommultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyBottomMultiTextMultiplePad"]], "test_aligncellveriticallybottomsingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyBottomSingleTextMultiplePad"]], "test_aligncellveriticallycentermultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyCenterMultiTextMultiplePad"]], "test_aligncellveriticallycentersingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyCenterSingleTextMultiplePad"]], "test_aligncellveriticallyonelineonly() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyOneLineOnly"]], "test_aligncellveriticallytopmultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyTopMultiTextMultiplePad"]], "test_aligncellveriticallytopsingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyTopSingleTextMultiplePad"]], "test_aligncolumndecimal() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimal"]], "test_aligncolumndecimalwithincorrectthousandseparators() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimalWithIncorrectThousandSeparators"]], "test_aligncolumndecimalwiththousandseparators() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimalWithThousandSeparators"]], "test_aligncolumnmultiline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnMultiline"]], "test_aligncolumnnone() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnNone"]], "test_assortedrareedgecases() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_assortedRareEdgeCases"]], "test_bool() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_bool"]], "test_buildline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_buildLine"]], "test_buildrow() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_buildRow"]], "test_colalignmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignMulti"]], "test_colalignmultiwithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignMultiWithSepLine"]], "test_colalignorheadersaligntoolong() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignOrheadersAlignTooLong"]], "test_columnalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_columnAlignment"]], "test_columnglobalandspecificalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_columnGlobalAndSpecificAlignment"]], "test_dictlike() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_dictLike"]], "test_dictlikewithindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_dictLikeWithIndex"]], "test_disablenumparsedefault() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseDefault"]], "test_disablenumparselist() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseList"]], "test_disablenumparsetrue() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseTrue"]], "test_emptydata() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyData"]], "test_emptydatawithheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyDataWithHeaders"]], "test_emptydatawithoutheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyDataWithoutHeaders"]], "test_floatconversions() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatConversions"]], "test_floatfmt() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatFmt"]], "test_floatfmtmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatFmtMulti"]], "test_format() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_format"]], "test_github() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_github"]], "test_grid() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_grid"]], "test_gridheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridHeaderless"]], "test_gridmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultiline"]], "test_gridmultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineHeaderless"]], "test_gridmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineWithEmptyCells"]], "test_gridmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineWithEmptyCellsHeaderless"]], "test_headersglobalandspecificalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_headersGlobalAndSpecificAlignment"]], "test_intfmt() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_intFmt"]], "test_ismultiline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_isMultiline"]], "test_iterableofempties() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfEmpties"]], "test_iterableofiterables() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterables"]], "test_iterableofiterablesfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterablesFirstrow"]], "test_iterableofiterablesheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterablesHeaders"]], "test_listbytes() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listBytes"]], "test_listofdicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDicts"]], "test_listofdictsfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsFirstrow"]], "test_listofdictskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsKeys"]], "test_listofdictswithdictofheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithDictOfHeaders"]], "test_listofdictswithlistofheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithListOfHeaders"]], "test_listofdictswithmissingkeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithMissingKeys"]], "test_listoflists() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfLists"]], "test_listoflistsfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfListsFirstrow"]], "test_listoflistskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfListsKeys"]], "test_listoflistswithindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndex"]], "test_listoflistswithindexfirstrow() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndexFirstrow"]], "test_listoflistswithindexwithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndexWithSepLine"]], "test_listoflistswithsuppliedindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithSuppliedIndex"]], "test_listofnamedtuples() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfNamedtuples"]], "test_listofnamedtupleskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfNamedtuplesKeys"]], "test_listofordereddicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfOrdereddicts"]], "test_listofuserdicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfUserdicts"]], "test_listofuserdictskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfUserdictsKeys"]], "test_maxcolwidthsinglevalue() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxColWidthsingleValue"]], "test_maxcolwidthhonordisableparsenum() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxcolwidthHonorDisableParsenum"]], "test_maxcolwidthpadtailingwidths() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxcolwidthPadTailingWidths"]], "test_missingval() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_missingVal"]], "test_missingvalmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_missingValMulti"]], "test_multilinewidth() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_multilineWidth"]], "test_nodata() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_noData"]], "test_nodatawithoutheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_noDataWithoutHeaders"]], "test_normalizetabulardata() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_normalizeTabularData"]], "test_numpy2d() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2d"]], "test_numpy2dfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2dFirstrow"]], "test_numpy2dkeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2dKeys"]], "test_numpyrecordarray() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArray"]], "test_numpyrecordarrayheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArrayHeaders"]], "test_numpyrecordarraykeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArrayKeys"]], "test_plain() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plain"]], "test_plainheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainHeaderless"]], "test_plainmaxcolwidthautowraps() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMaxcolwidthAutowraps"]], "test_plainmaxcolwidthautowrapswithsep() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMaxcolwidthAutowrapsWithSep"]], "test_plainmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultiline"]], "test_plainmultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineHeaderless"]], "test_plainmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithEmptyCells"]], "test_plainmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithEmptyCellsHeaderless"]], "test_plainmultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithLinks"]], "test_plainmaxheadercolwidthsautowraps() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainmaxHeaderColWidthsAutowraps"]], "test_pretty() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_pretty"]], "test_prettyheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyHeaderless"]], "test_prettymultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultiline"]], "test_prettymultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineHeaderless"]], "test_prettymultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithEmptyCells"]], "test_prettymultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithEmptyCellsHeaderless"]], "test_prettymultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithLinks"]], "test_readmeexamplewithsep() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_readmeExampleWithSep"]], "test_rst() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rst"]], "test_rstheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstHeaderless"]], "test_rstmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultiline"]], "test_rstmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithEmptyCells"]], "test_rstmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithEmptyCellsHeaderless"]], "test_rstmultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithLinks"]], "test_rstwithemptyvaluesinfirstcolumn() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstWithEmptyValuesInFirstColumn"]], "test_simple() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simple"]], "test_simpleheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleHeaderless"]], "test_simpleheaderlesswithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleHeaderlessWithSepLine"]], "test_simplemultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline"]], "test_simplemultiline2() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline2"]], "test_simplemultiline2withsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline2WithSepLine"]], "test_simplemultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineHeaderless"]], "test_simplemultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithEmptyCells"]], "test_simplemultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithEmptyCellsHeaderless"]], "test_simplemultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithLinks"]], "test_simplewithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleWithSepLine"]], "test_tabulateformats() (armi.utils.tests.test_tabulate.testtabulateapi method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateAPI.test_tabulateFormats"]], "test_tightcouplingexample() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_tightCouplingExample"]], "test_type() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_type"]], "test_visiblewidth() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_visibleWidth"]], "test_wraptexttocolwidths() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[434, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_wrapTextToColWidths"]], "sequentialreadertests (class in armi.utils.tests.test_textprocessors)": [[435, "armi.utils.tests.test_textProcessors.SequentialReaderTests"]], "yamlincludetest (class in armi.utils.tests.test_textprocessors)": [[435, "armi.utils.tests.test_textProcessors.YamlIncludeTest"]], "armi.utils.tests.test_textprocessors": [[435, "module-armi.utils.tests.test_textProcessors"]], "test_findincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[435, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_findIncludes"]], "test_readfile() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[435, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFile"]], "test_readfilewithpattern() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[435, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFileWithPattern"]], "test_resolveincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[435, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes"]], "test_resolveincludes_stringio() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[435, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes_StringIO"]], "textstream (armi.utils.tests.test_textprocessors.sequentialreadertests attribute)": [[435, "armi.utils.tests.test_textProcessors.SequentialReaderTests.textStream"]], "testtriangle (class in armi.utils.tests.test_triangle)": [[436, "armi.utils.tests.test_triangle.TestTriangle"]], "armi.utils.tests.test_triangle": [[436, "module-armi.utils.tests.test_triangle"]], "test_checkifpointisintriangle() (armi.utils.tests.test_triangle.testtriangle method)": [[436, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle"]], "test_checkifpointisintriangle2() (armi.utils.tests.test_triangle.testtriangle method)": [[436, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle2"]], "test_gettrianglearea() (armi.utils.tests.test_triangle.testtriangle method)": [[436, "armi.utils.tests.test_triangle.TestTriangle.test_getTriangleArea"]], "testunits (class in armi.utils.tests.test_units)": [[437, "armi.utils.tests.test_units.TestUnits"]], "armi.utils.tests.test_units": [[437, "module-armi.utils.tests.test_units"]], "test_convertxtopascal() (armi.utils.tests.test_units.testunits method)": [[437, "armi.utils.tests.test_units.TestUnits.test_convertXtoPascal"]], "test_gettc() (armi.utils.tests.test_units.testunits method)": [[437, "armi.utils.tests.test_units.TestUnits.test_getTc"]], "test_gettemperature() (armi.utils.tests.test_units.testunits method)": [[437, "armi.utils.tests.test_units.TestUnits.test_getTemperature"]], "test_gettf() (armi.utils.tests.test_units.testunits method)": [[437, "armi.utils.tests.test_units.TestUnits.test_getTf"]], "test_gettk() (armi.utils.tests.test_units.testunits method)": [[437, "armi.utils.tests.test_units.TestUnits.test_getTk"]], "test_gettmev() (armi.utils.tests.test_units.testunits method)": [[437, "armi.utils.tests.test_units.TestUnits.test_getTmev"]], "test_getxylineparameters() (armi.utils.tests.test_units.testunits method)": [[437, "armi.utils.tests.test_units.TestUnits.test_getXYLineParameters"]], "test_pressure_converter() (armi.utils.tests.test_units.testunits method)": [[437, "armi.utils.tests.test_units.TestUnits.test_pressure_converter"]], "test_sanitizeangle() (armi.utils.tests.test_units.testunits method)": [[437, "armi.utils.tests.test_units.TestUnits.test_sanitizeAngle"]], "cyclessettingstests (class in armi.utils.tests.test_utils)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests"]], "testgeneralutils (class in armi.utils.tests.test_utils)": [[438, "armi.utils.tests.test_utils.TestGeneralUtils"]], "armi.utils.tests.test_utils": [[438, "module-armi.utils.tests.test_utils"]], "availabilityfactorsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsDetailedSolution"]], "availabilityfactorssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsSimpleSolution"]], "burnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsDetailedSolution"]], "burnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsSimpleSolution"]], "cyclelengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsDetailedSolution"]], "cyclelengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsSimpleSolution"]], "cyclenamesdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesDetailedSolution"]], "cyclenamessimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesSimpleSolution"]], "detailedcyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.detailedCyclesSettings"]], "maxburnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsDetailedSolution"]], "maxburnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsSimpleSolution"]], "nodespercycledetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleDetailedSolution"]], "nodespercyclesimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleSimpleSolution"]], "powerfractionsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsDetailedSolution"]], "powerfractionssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsSimpleSolution"]], "simplecyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.simpleCyclesSettings"]], "steplengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsDetailedSolution"]], "steplengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsSimpleSolution"]], "test_capstrlen() (armi.utils.tests.test_utils.testgeneralutils method)": [[438, "armi.utils.tests.test_utils.TestGeneralUtils.test_capStrLen"]], "test_classesinhierarchy() (armi.utils.tests.test_utils.testgeneralutils method)": [[438, "armi.utils.tests.test_utils.TestGeneralUtils.test_classesInHierarchy"]], "test_codetiming() (armi.utils.tests.test_utils.testgeneralutils method)": [[438, "armi.utils.tests.test_utils.TestGeneralUtils.test_codeTiming"]], "test_createformattedstrwithdelimiter() (armi.utils.tests.test_utils.testgeneralutils method)": [[438, "armi.utils.tests.test_utils.TestGeneralUtils.test_createFormattedStrWithDelimiter"]], "test_getavailabilityfactors() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getBurnSteps"]], "test_getcumulativenodenum() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCumulativeNodeNum"]], "test_getcyclelengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNames"]], "test_getcyclenodefromcumulativenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeNode"]], "test_getcyclenodefromcumulativestep() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeStep"]], "test_getmaxburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getnodespercycle() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getNodesPerCycle"]], "test_getpowerfractions() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPowerFractions"]], "test_getprevioustimenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPreviousTimeNode"]], "test_getsteplengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getStepLengths"]], "test_hasburnup() (armi.utils.tests.test_utils.cyclessettingstests method)": [[438, "armi.utils.tests.test_utils.CyclesSettingsTests.test_hasBurnup"]], "test_list2str() (armi.utils.tests.test_utils.testgeneralutils method)": [[438, "armi.utils.tests.test_utils.TestGeneralUtils.test_list2str"]], "test_mergeabledictionary() (armi.utils.tests.test_utils.testgeneralutils method)": [[438, "armi.utils.tests.test_utils.TestGeneralUtils.test_mergeableDictionary"]], "test_plotmatrix() (armi.utils.tests.test_utils.testgeneralutils method)": [[438, "armi.utils.tests.test_utils.TestGeneralUtils.test_plotMatrix"]], "test_prependtolist() (armi.utils.tests.test_utils.testgeneralutils method)": [[438, "armi.utils.tests.test_utils.TestGeneralUtils.test_prependToList"]], "test_safecopy() (armi.utils.tests.test_utils.testgeneralutils method)": [[438, "armi.utils.tests.test_utils.TestGeneralUtils.test_safeCopy"]], "test_slantsplit() (armi.utils.tests.test_utils.testgeneralutils method)": [[438, "armi.utils.tests.test_utils.TestGeneralUtils.test_slantSplit"]], "decimal_pattern (in module armi.utils.textprocessors)": [[439, "armi.utils.textProcessors.DECIMAL_PATTERN"]], "floating_pattern (in module armi.utils.textprocessors)": [[439, "armi.utils.textProcessors.FLOATING_PATTERN"]], "filemark (class in armi.utils.textprocessors)": [[439, "armi.utils.textProcessors.FileMark"]], "scientific_pattern (in module armi.utils.textprocessors)": [[439, "armi.utils.textProcessors.SCIENTIFIC_PATTERN"]], "sequentialreader (class in armi.utils.textprocessors)": [[439, "armi.utils.textProcessors.SequentialReader"]], "sequentialstringioreader (class in armi.utils.textprocessors)": [[439, "armi.utils.textProcessors.SequentialStringIOReader"]], "smartlist (class in armi.utils.textprocessors)": [[439, "armi.utils.textProcessors.SmartList"]], "textprocessor (class in armi.utils.textprocessors)": [[439, "armi.utils.textProcessors.TextProcessor"]], "armi.utils.textprocessors": [[439, "module-armi.utils.textProcessors"]], "checkerrors() (armi.utils.textprocessors.textprocessor method)": [[439, "armi.utils.textProcessors.TextProcessor.checkErrors"]], "close() (armi.utils.textprocessors.smartlist method)": [[439, "armi.utils.textProcessors.SmartList.close"]], "consumeline() (armi.utils.textprocessors.sequentialreader method)": [[439, "armi.utils.textProcessors.SequentialReader.consumeLine"]], "decimal (armi.utils.textprocessors.textprocessor attribute)": [[439, "armi.utils.textProcessors.TextProcessor.decimal"]], "errorchecking() (armi.utils.textprocessors.textprocessor method)": [[439, "armi.utils.textProcessors.TextProcessor.errorChecking"]], "findyamlinclusions() (in module armi.utils.textprocessors)": [[439, "armi.utils.textProcessors.findYamlInclusions"]], "fsearch() (armi.utils.textprocessors.textprocessor method)": [[439, "armi.utils.textProcessors.TextProcessor.fsearch"]], "issuewarningonfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[439, "armi.utils.textProcessors.SequentialReader.issueWarningOnFindingText"]], "next() (armi.utils.textprocessors.smartlist method)": [[439, "armi.utils.textProcessors.SmartList.next"]], "number (armi.utils.textprocessors.textprocessor attribute)": [[439, "armi.utils.textProcessors.TextProcessor.number"]], "raiseerroronfindingpattern() (armi.utils.textprocessors.sequentialreader method)": [[439, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingPattern"]], "raiseerroronfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[439, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingText"]], "reset() (armi.utils.textprocessors.textprocessor method)": [[439, "armi.utils.textProcessors.TextProcessor.reset"]], "resolvemarkupinclusions() (in module armi.utils.textprocessors)": [[439, "armi.utils.textProcessors.resolveMarkupInclusions"]], "scipat (armi.utils.textprocessors.textprocessor attribute)": [[439, "armi.utils.textProcessors.TextProcessor.scipat"]], "searchforpattern() (armi.utils.textprocessors.sequentialreader method)": [[439, "armi.utils.textProcessors.SequentialReader.searchForPattern"]], "searchforpatternonnextline() (armi.utils.textprocessors.sequentialreader method)": [[439, "armi.utils.textProcessors.SequentialReader.searchForPatternOnNextLine"]], "searchfortext() (armi.utils.textprocessors.sequentialreader method)": [[439, "armi.utils.textProcessors.SequentialReader.searchForText"]], "seek() (armi.utils.textprocessors.smartlist method)": [[439, "armi.utils.textProcessors.SmartList.seek"]], "armi.utils.triangle": [[440, "module-armi.utils.triangle"]], "checkifpointisintriangle() (in module armi.utils.triangle)": [[440, "armi.utils.triangle.checkIfPointIsInTriangle"]], "gettrianglearea() (in module armi.utils.triangle)": [[440, "armi.utils.triangle.getTriangleArea"]], "gettrianglecentroid() (in module armi.utils.triangle)": [[440, "armi.utils.triangle.getTriangleCentroid"]], "armi.utils.units": [[441, "module-armi.utils.units"]], "convertatmtopascal() (in module armi.utils.units)": [[441, "armi.utils.units.convertAtmToPascal"]], "convertbartopascal() (in module armi.utils.units)": [[441, "armi.utils.units.convertBarToPascal"]], "convertmmhgtopascal() (in module armi.utils.units)": [[441, "armi.utils.units.convertMmhgToPascal"]], "gettc() (in module armi.utils.units)": [[441, "armi.utils.units.getTc"]], "gettemperature() (in module armi.utils.units)": [[441, "armi.utils.units.getTemperature"]], "gettf() (in module armi.utils.units)": [[441, "armi.utils.units.getTf"]], "gettk() (in module armi.utils.units)": [[441, "armi.utils.units.getTk"]], "gettmev() (in module armi.utils.units)": [[441, "armi.utils.units.getTmev"]], "getxylineparameters() (in module armi.utils.units)": [[441, "armi.utils.units.getXYLineParameters"]], "sanitizeangle() (in module armi.utils.units)": [[441, "armi.utils.units.sanitizeAngle"]], "anl": [[480, "term-ANL"]], "boc": [[480, "term-BOC"]], "bol": [[480, "term-BOL"]], "cli": [[480, "term-CLI"]], "fima": [[480, "term-FIMA"]], "gui": [[480, "term-GUI"]], "in-use tests": [[480, "term-In-Use-Tests"]], "lwr": [[480, "term-LWR"]], "liner": [[480, "term-Liner"]], "mpi": [[480, "term-MPI"]], "twr": [[480, "term-TWR"]], "unit tests": [[480, "term-Unit-Tests"]], "v&v": [[480, "term-V-V"]], "xtview": [[480, "term-XTVIEW"]], "assembly": [[480, "term-assembly"]], "block": [[480, "term-block"]], "burnup": [[480, "term-burnup"]], "cladding": [[480, "term-cladding"]], "component": [[480, "term-component"]], "grid plate": [[480, "term-grid-plate"]], "interface": [[480, "term-interface"]], "material": [[480, "term-material"]], "node": [[480, "term-node"]], "operator": [[480, "term-operator"]], "parameter": [[480, "term-parameter"]], "plenum": [[480, "term-plenum"]], "reactor": [[480, "term-reactor"]], "reactor state": [[480, "term-reactor-state"]], "smear density": [[480, "term-smear-density"]]}})